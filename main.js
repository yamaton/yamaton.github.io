!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t,r){(function(t){e.exports=function e(t,r,n){function o(i,s){if(!r[i]){if(!t[i]){if(a)return a(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var p=r[i]={exports:{}};t[i][0].call(p.exports,(function(e){return o(t[i][1][e]||e)}),p,p.exports,e,t,r,n)}return r[i].exports}for(var a=!1,i=0;i<n.length;i++)o(n[i]);return o}({1:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vertices"),a=e("../geometry/Vector"),i=e("../core/Sleeping"),s=(e("../render/Render"),e("../core/Common")),l=e("../geometry/Bounds"),p=e("../geometry/Axes");!function(){n._inertiaScale=4,n._nextCollidingGroupId=1,n._nextNonCollidingGroupId=-1,n._nextCategory=1,n.create=function(t){var r={id:s.nextId(),type:"body",label:"Body",parts:[],plugin:{},angle:0,vertices:o.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),position:{x:0,y:0},force:{x:0,y:0},torque:0,positionImpulse:{x:0,y:0},constraintImpulse:{x:0,y:0,angle:0},totalContacts:0,speed:0,angularSpeed:0,velocity:{x:0,y:0},angularVelocity:0,isSensor:!1,isStatic:!1,isSleeping:!1,motion:0,sleepThreshold:60,density:.001,restitution:0,friction:.1,frictionStatic:.5,frictionAir:.01,collisionFilter:{category:1,mask:4294967295,group:0},slop:.05,timeScale:1,render:{visible:!0,opacity:1,sprite:{xScale:1,yScale:1,xOffset:0,yOffset:0},lineWidth:0}},n=s.extend(r,t);return e(n,t),n},n.nextGroup=function(e){return e?n._nextNonCollidingGroupId--:n._nextCollidingGroupId++},n.nextCategory=function(){return n._nextCategory=n._nextCategory<<1,n._nextCategory};var e=function(e,t){t=t||{},n.set(e,{bounds:e.bounds||l.create(e.vertices),positionPrev:e.positionPrev||a.clone(e.position),anglePrev:e.anglePrev||e.angle,vertices:e.vertices,parts:e.parts||[e],isStatic:e.isStatic,isSleeping:e.isSleeping,parent:e.parent||e}),o.rotate(e.vertices,e.angle,e.position),p.rotate(e.axes,e.angle),l.update(e.bounds,e.vertices,e.velocity),n.set(e,{axes:t.axes||e.axes,area:t.area||e.area,mass:t.mass||e.mass,inertia:t.inertia||e.inertia});var r=e.isStatic?"#2e2b44":s.choose(["#006BA6","#0496FF","#FFBC42","#D81159","#8F2D56"]);e.render.fillStyle=e.render.fillStyle||r,e.render.strokeStyle=e.render.strokeStyle||"#000",e.render.sprite.xOffset+=-(e.bounds.min.x-e.position.x)/(e.bounds.max.x-e.bounds.min.x),e.render.sprite.yOffset+=-(e.bounds.min.y-e.position.y)/(e.bounds.max.y-e.bounds.min.y)};n.set=function(e,t,r){var o;for(o in"string"==typeof t&&(o=t,(t={})[o]=r),t)if(r=t[o],t.hasOwnProperty(o))switch(o){case"isStatic":n.setStatic(e,r);break;case"isSleeping":i.set(e,r);break;case"mass":n.setMass(e,r);break;case"density":n.setDensity(e,r);break;case"inertia":n.setInertia(e,r);break;case"vertices":n.setVertices(e,r);break;case"position":n.setPosition(e,r);break;case"angle":n.setAngle(e,r);break;case"velocity":n.setVelocity(e,r);break;case"angularVelocity":n.setAngularVelocity(e,r);break;case"parts":n.setParts(e,r);break;default:e[o]=r}},n.setStatic=function(e,t){for(var r=0;r<e.parts.length;r++){var n=e.parts[r];n.isStatic=t,t?(n._original={restitution:n.restitution,friction:n.friction,mass:n.mass,inertia:n.inertia,density:n.density,inverseMass:n.inverseMass,inverseInertia:n.inverseInertia},n.restitution=0,n.friction=1,n.mass=n.inertia=n.density=1/0,n.inverseMass=n.inverseInertia=0,n.positionPrev.x=n.position.x,n.positionPrev.y=n.position.y,n.anglePrev=n.angle,n.angularVelocity=0,n.speed=0,n.angularSpeed=0,n.motion=0):n._original&&(n.restitution=n._original.restitution,n.friction=n._original.friction,n.mass=n._original.mass,n.inertia=n._original.inertia,n.density=n._original.density,n.inverseMass=n._original.inverseMass,n.inverseInertia=n._original.inverseInertia,delete n._original)}},n.setMass=function(e,t){var r=e.inertia/(e.mass/6);e.inertia=r*(t/6),e.inverseInertia=1/e.inertia,e.mass=t,e.inverseMass=1/e.mass,e.density=e.mass/e.area},n.setDensity=function(e,t){n.setMass(e,t*e.area),e.density=t},n.setInertia=function(e,t){e.inertia=t,e.inverseInertia=1/e.inertia},n.setVertices=function(e,t){t[0].body===e?e.vertices=t:e.vertices=o.create(t,e),e.axes=p.fromVertices(e.vertices),e.area=o.area(e.vertices),n.setMass(e,e.density*e.area);var r=o.centre(e.vertices);o.translate(e.vertices,r,-1),n.setInertia(e,n._inertiaScale*o.inertia(e.vertices,e.mass)),o.translate(e.vertices,e.position),l.update(e.bounds,e.vertices,e.velocity)},n.setParts=function(e,t,r){var a;for(t=t.slice(0),e.parts.length=0,e.parts.push(e),e.parent=e,a=0;a<t.length;a++){var i=t[a];i!==e&&(i.parent=e,e.parts.push(i))}if(1!==e.parts.length){if(r=void 0===r||r){var s=[];for(a=0;a<t.length;a++)s=s.concat(t[a].vertices);o.clockwiseSort(s);var l=o.hull(s),p=o.centre(l);n.setVertices(e,l),o.translate(e.vertices,p)}var u=n._totalProperties(e);e.area=u.area,e.parent=e,e.position.x=u.centre.x,e.position.y=u.centre.y,e.positionPrev.x=u.centre.x,e.positionPrev.y=u.centre.y,n.setMass(e,u.mass),n.setInertia(e,u.inertia),n.setPosition(e,u.centre)}},n.setPosition=function(e,t){var r=a.sub(t,e.position);e.positionPrev.x+=r.x,e.positionPrev.y+=r.y;for(var n=0;n<e.parts.length;n++){var i=e.parts[n];i.position.x+=r.x,i.position.y+=r.y,o.translate(i.vertices,r),l.update(i.bounds,i.vertices,e.velocity)}},n.setAngle=function(e,t){var r=t-e.angle;e.anglePrev+=r;for(var n=0;n<e.parts.length;n++){var i=e.parts[n];i.angle+=r,o.rotate(i.vertices,r,e.position),p.rotate(i.axes,r),l.update(i.bounds,i.vertices,e.velocity),n>0&&a.rotateAbout(i.position,r,e.position,i.position)}},n.setVelocity=function(e,t){e.positionPrev.x=e.position.x-t.x,e.positionPrev.y=e.position.y-t.y,e.velocity.x=t.x,e.velocity.y=t.y,e.speed=a.magnitude(e.velocity)},n.setAngularVelocity=function(e,t){e.anglePrev=e.angle-t,e.angularVelocity=t,e.angularSpeed=Math.abs(e.angularVelocity)},n.translate=function(e,t){n.setPosition(e,a.add(e.position,t))},n.rotate=function(e,t,r){if(r){var o=Math.cos(t),a=Math.sin(t),i=e.position.x-r.x,s=e.position.y-r.y;n.setPosition(e,{x:r.x+(i*o-s*a),y:r.y+(i*a+s*o)}),n.setAngle(e,e.angle+t)}else n.setAngle(e,e.angle+t)},n.scale=function(e,t,r,a){var i=0,s=0;a=a||e.position;for(var u=0;u<e.parts.length;u++){var c=e.parts[u];o.scale(c.vertices,t,r,a),c.axes=p.fromVertices(c.vertices),c.area=o.area(c.vertices),n.setMass(c,e.density*c.area),o.translate(c.vertices,{x:-c.position.x,y:-c.position.y}),n.setInertia(c,n._inertiaScale*o.inertia(c.vertices,c.mass)),o.translate(c.vertices,{x:c.position.x,y:c.position.y}),u>0&&(i+=c.area,s+=c.inertia),c.position.x=a.x+(c.position.x-a.x)*t,c.position.y=a.y+(c.position.y-a.y)*r,l.update(c.bounds,c.vertices,e.velocity)}e.parts.length>1&&(e.area=i,e.isStatic||(n.setMass(e,e.density*i),n.setInertia(e,s))),e.circleRadius&&(t===r?e.circleRadius*=t:e.circleRadius=null)},n.update=function(e,t,r,n){var i=Math.pow(t*r*e.timeScale,2),s=1-e.frictionAir*r*e.timeScale,u=e.position.x-e.positionPrev.x,c=e.position.y-e.positionPrev.y;e.velocity.x=u*s*n+e.force.x/e.mass*i,e.velocity.y=c*s*n+e.force.y/e.mass*i,e.positionPrev.x=e.position.x,e.positionPrev.y=e.position.y,e.position.x+=e.velocity.x,e.position.y+=e.velocity.y,e.angularVelocity=(e.angle-e.anglePrev)*s*n+e.torque/e.inertia*i,e.anglePrev=e.angle,e.angle+=e.angularVelocity,e.speed=a.magnitude(e.velocity),e.angularSpeed=Math.abs(e.angularVelocity);for(var d=0;d<e.parts.length;d++){var h=e.parts[d];o.translate(h.vertices,e.velocity),d>0&&(h.position.x+=e.velocity.x,h.position.y+=e.velocity.y),0!==e.angularVelocity&&(o.rotate(h.vertices,e.angularVelocity,e.position),p.rotate(h.axes,e.angularVelocity),d>0&&a.rotateAbout(h.position,e.angularVelocity,e.position,h.position)),l.update(h.bounds,h.vertices,e.velocity)}},n.applyForce=function(e,t,r){e.force.x+=r.x,e.force.y+=r.y;var n=t.x-e.position.x,o=t.y-e.position.y;e.torque+=n*r.y-o*r.x},n._totalProperties=function(e){for(var t={mass:0,area:0,inertia:0,centre:{x:0,y:0}},r=1===e.parts.length?0:1;r<e.parts.length;r++){var n=e.parts[r],o=n.mass!==1/0?n.mass:1;t.mass+=o,t.area+=n.area,t.inertia+=n.inertia,t.centre=a.add(t.centre,a.mult(n.position,o))}return t.centre=a.div(t.centre,t.mass),t}}()},{"../core/Common":14,"../core/Sleeping":22,"../geometry/Axes":25,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29,"../render/Render":31}],2:[function(e,t,r){var n={};t.exports=n;var o=e("../core/Events"),a=e("../core/Common"),i=e("../geometry/Bounds"),s=e("./Body");n.create=function(e){return a.extend({id:a.nextId(),type:"composite",parent:null,isModified:!1,bodies:[],constraints:[],composites:[],label:"Composite",plugin:{}},e)},n.setModified=function(e,t,r,o){if(e.isModified=t,r&&e.parent&&n.setModified(e.parent,t,r,o),o)for(var a=0;a<e.composites.length;a++){var i=e.composites[a];n.setModified(i,t,r,o)}},n.add=function(e,t){var r=[].concat(t);o.trigger(e,"beforeAdd",{object:t});for(var i=0;i<r.length;i++){var s=r[i];switch(s.type){case"body":if(s.parent!==s){a.warn("Composite.add: skipped adding a compound body part (you must add its parent instead)");break}n.addBody(e,s);break;case"constraint":n.addConstraint(e,s);break;case"composite":n.addComposite(e,s);break;case"mouseConstraint":n.addConstraint(e,s.constraint)}}return o.trigger(e,"afterAdd",{object:t}),e},n.remove=function(e,t,r){var a=[].concat(t);o.trigger(e,"beforeRemove",{object:t});for(var i=0;i<a.length;i++){var s=a[i];switch(s.type){case"body":n.removeBody(e,s,r);break;case"constraint":n.removeConstraint(e,s,r);break;case"composite":n.removeComposite(e,s,r);break;case"mouseConstraint":n.removeConstraint(e,s.constraint)}}return o.trigger(e,"afterRemove",{object:t}),e},n.addComposite=function(e,t){return e.composites.push(t),t.parent=e,n.setModified(e,!0,!0,!1),e},n.removeComposite=function(e,t,r){var o=a.indexOf(e.composites,t);if(-1!==o&&(n.removeCompositeAt(e,o),n.setModified(e,!0,!0,!1)),r)for(var i=0;i<e.composites.length;i++)n.removeComposite(e.composites[i],t,!0);return e},n.removeCompositeAt=function(e,t){return e.composites.splice(t,1),n.setModified(e,!0,!0,!1),e},n.addBody=function(e,t){return e.bodies.push(t),n.setModified(e,!0,!0,!1),e},n.removeBody=function(e,t,r){var o=a.indexOf(e.bodies,t);if(-1!==o&&(n.removeBodyAt(e,o),n.setModified(e,!0,!0,!1)),r)for(var i=0;i<e.composites.length;i++)n.removeBody(e.composites[i],t,!0);return e},n.removeBodyAt=function(e,t){return e.bodies.splice(t,1),n.setModified(e,!0,!0,!1),e},n.addConstraint=function(e,t){return e.constraints.push(t),n.setModified(e,!0,!0,!1),e},n.removeConstraint=function(e,t,r){var o=a.indexOf(e.constraints,t);if(-1!==o&&n.removeConstraintAt(e,o),r)for(var i=0;i<e.composites.length;i++)n.removeConstraint(e.composites[i],t,!0);return e},n.removeConstraintAt=function(e,t){return e.constraints.splice(t,1),n.setModified(e,!0,!0,!1),e},n.clear=function(e,t,r){if(r)for(var o=0;o<e.composites.length;o++)n.clear(e.composites[o],t,!0);return t?e.bodies=e.bodies.filter((function(e){return e.isStatic})):e.bodies.length=0,e.constraints.length=0,e.composites.length=0,n.setModified(e,!0,!0,!1),e},n.allBodies=function(e){for(var t=[].concat(e.bodies),r=0;r<e.composites.length;r++)t=t.concat(n.allBodies(e.composites[r]));return t},n.allConstraints=function(e){for(var t=[].concat(e.constraints),r=0;r<e.composites.length;r++)t=t.concat(n.allConstraints(e.composites[r]));return t},n.allComposites=function(e){for(var t=[].concat(e.composites),r=0;r<e.composites.length;r++)t=t.concat(n.allComposites(e.composites[r]));return t},n.get=function(e,t,r){var o,a;switch(r){case"body":o=n.allBodies(e);break;case"constraint":o=n.allConstraints(e);break;case"composite":o=n.allComposites(e).concat(e)}return o?0===(a=o.filter((function(e){return e.id.toString()===t.toString()}))).length?null:a[0]:null},n.move=function(e,t,r){return n.remove(e,t),n.add(r,t),e},n.rebase=function(e){for(var t=n.allBodies(e).concat(n.allConstraints(e)).concat(n.allComposites(e)),r=0;r<t.length;r++)t[r].id=a.nextId();return n.setModified(e,!0,!0,!1),e},n.translate=function(e,t,r){for(var o=r?n.allBodies(e):e.bodies,a=0;a<o.length;a++)s.translate(o[a],t);return n.setModified(e,!0,!0,!1),e},n.rotate=function(e,t,r,o){for(var a=Math.cos(t),i=Math.sin(t),l=o?n.allBodies(e):e.bodies,p=0;p<l.length;p++){var u=l[p],c=u.position.x-r.x,d=u.position.y-r.y;s.setPosition(u,{x:r.x+(c*a-d*i),y:r.y+(c*i+d*a)}),s.rotate(u,t)}return n.setModified(e,!0,!0,!1),e},n.scale=function(e,t,r,o,a){for(var i=a?n.allBodies(e):e.bodies,l=0;l<i.length;l++){var p=i[l],u=p.position.x-o.x,c=p.position.y-o.y;s.setPosition(p,{x:o.x+u*t,y:o.y+c*r}),s.scale(p,t,r)}return n.setModified(e,!0,!0,!1),e},n.bounds=function(e){for(var t=n.allBodies(e),r=[],o=0;o<t.length;o+=1){var a=t[o];r.push(a.bounds.min,a.bounds.max)}return i.create(r)}},{"../core/Common":14,"../core/Events":16,"../geometry/Bounds":26,"./Body":1}],3:[function(e,t,r){var n={};t.exports=n;var o=e("./Composite"),a=(e("../constraint/Constraint"),e("../core/Common"));n.create=function(e){var t=o.create(),r={label:"World",gravity:{x:0,y:1,scale:.001},bounds:{min:{x:-1/0,y:-1/0},max:{x:1/0,y:1/0}}};return a.extend(t,r,e)}},{"../constraint/Constraint":12,"../core/Common":14,"./Composite":2}],4:[function(e,t,r){var n={};t.exports=n,n.create=function(e){return{id:n.id(e),vertex:e,normalImpulse:0,tangentImpulse:0}},n.id=function(e){return e.body.id+"_"+e.index}},{}],5:[function(e,t,r){var n={};t.exports=n;var o=e("./SAT"),a=e("./Pair"),i=e("../geometry/Bounds");n.collisions=function(e,t){for(var r=[],s=t.pairs.table,l=0;l<e.length;l++){var p=e[l][0],u=e[l][1];if((!p.isStatic&&!p.isSleeping||!u.isStatic&&!u.isSleeping)&&n.canCollide(p.collisionFilter,u.collisionFilter)&&i.overlaps(p.bounds,u.bounds))for(var c=p.parts.length>1?1:0;c<p.parts.length;c++)for(var d=p.parts[c],h=u.parts.length>1?1:0;h<u.parts.length;h++){var m=u.parts[h];if(d===p&&m===u||i.overlaps(d.bounds,m.bounds)){var f,y=s[a.id(d,m)];f=y&&y.isActive?y.collision:null;var g=o.collides(d,m,f);g.collided&&r.push(g)}}}return r},n.canCollide=function(e,t){return e.group===t.group&&0!==e.group?e.group>0:0!=(e.mask&t.category)&&0!=(t.mask&e.category)}},{"../geometry/Bounds":26,"./Pair":7,"./SAT":11}],6:[function(e,t,r){var n={};t.exports=n;var o=e("./Pair"),a=e("./Detector"),i=e("../core/Common");n.create=function(e){var t={controller:n,detector:a.collisions,buckets:{},pairs:{},pairsList:[],bucketWidth:48,bucketHeight:48};return i.extend(t,e)},n.update=function(e,t,r,o){var a,i,s,l,p,u=r.world,c=e.buckets,d=!1;for(a=0;a<t.length;a++){var h=t[a];if((!h.isSleeping||o)&&!(h.bounds.max.x<u.bounds.min.x||h.bounds.min.x>u.bounds.max.x||h.bounds.max.y<u.bounds.min.y||h.bounds.min.y>u.bounds.max.y)){var m=n._getRegion(e,h);if(!h.region||m.id!==h.region.id||o){h.region&&!o||(h.region=m);var f=n._regionUnion(m,h.region);for(i=f.startCol;i<=f.endCol;i++)for(s=f.startRow;s<=f.endRow;s++){l=c[p=n._getBucketId(i,s)];var y=i>=m.startCol&&i<=m.endCol&&s>=m.startRow&&s<=m.endRow,g=i>=h.region.startCol&&i<=h.region.endCol&&s>=h.region.startRow&&s<=h.region.endRow;!y&&g&&g&&l&&n._bucketRemoveBody(e,l,h),(h.region===m||y&&!g||o)&&(l||(l=n._createBucket(c,p)),n._bucketAddBody(e,l,h))}h.region=m,d=!0}}}d&&(e.pairsList=n._createActivePairsList(e))},n.clear=function(e){e.buckets={},e.pairs={},e.pairsList=[]},n._regionUnion=function(e,t){var r=Math.min(e.startCol,t.startCol),o=Math.max(e.endCol,t.endCol),a=Math.min(e.startRow,t.startRow),i=Math.max(e.endRow,t.endRow);return n._createRegion(r,o,a,i)},n._getRegion=function(e,t){var r=t.bounds,o=Math.floor(r.min.x/e.bucketWidth),a=Math.floor(r.max.x/e.bucketWidth),i=Math.floor(r.min.y/e.bucketHeight),s=Math.floor(r.max.y/e.bucketHeight);return n._createRegion(o,a,i,s)},n._createRegion=function(e,t,r,n){return{id:e+","+t+","+r+","+n,startCol:e,endCol:t,startRow:r,endRow:n}},n._getBucketId=function(e,t){return"C"+e+"R"+t},n._createBucket=function(e,t){return e[t]=[]},n._bucketAddBody=function(e,t,r){for(var n=0;n<t.length;n++){var a=t[n];if(!(r.id===a.id||r.isStatic&&a.isStatic)){var i=o.id(r,a),s=e.pairs[i];s?s[2]+=1:e.pairs[i]=[r,a,1]}}t.push(r)},n._bucketRemoveBody=function(e,t,r){t.splice(i.indexOf(t,r),1);for(var n=0;n<t.length;n++){var a=t[n],s=o.id(r,a),l=e.pairs[s];l&&(l[2]-=1)}},n._createActivePairsList=function(e){var t,r,n=[];t=i.keys(e.pairs);for(var o=0;o<t.length;o++)(r=e.pairs[t[o]])[2]>0?n.push(r):delete e.pairs[t[o]];return n}},{"../core/Common":14,"./Detector":5,"./Pair":7}],7:[function(e,t,r){var n={};t.exports=n;var o=e("./Contact");n.create=function(e,t){var r=e.bodyA,o=e.bodyB,a=e.parentA,i=e.parentB,s={id:n.id(r,o),bodyA:r,bodyB:o,contacts:{},activeContacts:[],separation:0,isActive:!0,isSensor:r.isSensor||o.isSensor,timeCreated:t,timeUpdated:t,inverseMass:a.inverseMass+i.inverseMass,friction:Math.min(a.friction,i.friction),frictionStatic:Math.max(a.frictionStatic,i.frictionStatic),restitution:Math.max(a.restitution,i.restitution),slop:Math.max(a.slop,i.slop)};return n.update(s,e,t),s},n.update=function(e,t,r){var a=e.contacts,i=t.supports,s=e.activeContacts,l=t.parentA,p=t.parentB;if(e.collision=t,e.inverseMass=l.inverseMass+p.inverseMass,e.friction=Math.min(l.friction,p.friction),e.frictionStatic=Math.max(l.frictionStatic,p.frictionStatic),e.restitution=Math.max(l.restitution,p.restitution),e.slop=Math.max(l.slop,p.slop),s.length=0,t.collided){for(var u=0;u<i.length;u++){var c=i[u],d=o.id(c),h=a[d];h?s.push(h):s.push(a[d]=o.create(c))}e.separation=t.depth,n.setActive(e,!0,r)}else!0===e.isActive&&n.setActive(e,!1,r)},n.setActive=function(e,t,r){t?(e.isActive=!0,e.timeUpdated=r):(e.isActive=!1,e.activeContacts.length=0)},n.id=function(e,t){return e.id<t.id?"A"+e.id+"B"+t.id:"A"+t.id+"B"+e.id}},{"./Contact":4}],8:[function(e,t,r){var n={};t.exports=n;var o=e("./Pair"),a=e("../core/Common");n._pairMaxIdleLife=1e3,n.create=function(e){return a.extend({table:{},list:[],collisionStart:[],collisionActive:[],collisionEnd:[]},e)},n.update=function(e,t,r){var n,i,s,l,p=e.list,u=e.table,c=e.collisionStart,d=e.collisionEnd,h=e.collisionActive,m=[];for(c.length=0,d.length=0,h.length=0,l=0;l<t.length;l++)(n=t[l]).collided&&(i=o.id(n.bodyA,n.bodyB),m.push(i),(s=u[i])?(s.isActive?h.push(s):c.push(s),o.update(s,n,r)):(s=o.create(n,r),u[i]=s,c.push(s),p.push(s)));for(l=0;l<p.length;l++)(s=p[l]).isActive&&-1===a.indexOf(m,s.id)&&(o.setActive(s,!1,r),d.push(s))},n.removeOld=function(e,t){var r,o,a,i,s=e.list,l=e.table,p=[];for(i=0;i<s.length;i++)(o=(r=s[i]).collision).bodyA.isSleeping||o.bodyB.isSleeping?r.timeUpdated=t:t-r.timeUpdated>n._pairMaxIdleLife&&p.push(i);for(i=0;i<p.length;i++)delete l[(r=s[a=p[i]-i]).id],s.splice(a,1)},n.clear=function(e){return e.table={},e.list.length=0,e.collisionStart.length=0,e.collisionActive.length=0,e.collisionEnd.length=0,e}},{"../core/Common":14,"./Pair":7}],9:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vector"),a=e("./SAT"),i=e("../geometry/Bounds"),s=e("../factory/Bodies"),l=e("../geometry/Vertices");n.collides=function(e,t){for(var r=[],n=0;n<t.length;n++){var o=t[n];if(i.overlaps(o.bounds,e.bounds))for(var s=1===o.parts.length?0:1;s<o.parts.length;s++){var l=o.parts[s];if(i.overlaps(l.bounds,e.bounds)){var p=a.collides(l,e);if(p.collided){r.push(p);break}}}}return r},n.ray=function(e,t,r,a){a=a||1e-100;for(var i=o.angle(t,r),l=o.magnitude(o.sub(t,r)),p=.5*(r.x+t.x),u=.5*(r.y+t.y),c=s.rectangle(p,u,l,a,{angle:i}),d=n.collides(c,e),h=0;h<d.length;h+=1){var m=d[h];m.body=m.bodyB=m.bodyA}return d},n.region=function(e,t,r){for(var n=[],o=0;o<e.length;o++){var a=e[o],s=i.overlaps(a.bounds,t);(s&&!r||!s&&r)&&n.push(a)}return n},n.point=function(e,t){for(var r=[],n=0;n<e.length;n++){var o=e[n];if(i.contains(o.bounds,t))for(var a=1===o.parts.length?0:1;a<o.parts.length;a++){var s=o.parts[a];if(i.contains(s.bounds,t)&&l.contains(s.vertices,t)){r.push(o);break}}}return r}},{"../factory/Bodies":23,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29,"./SAT":11}],10:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vertices"),a=e("../geometry/Vector"),i=e("../core/Common"),s=e("../geometry/Bounds");n._restingThresh=4,n._restingThreshTangent=6,n._positionDampen=.9,n._positionWarming=.8,n._frictionNormalMultiplier=5,n.preSolvePosition=function(e){var t,r,n;for(t=0;t<e.length;t++)(r=e[t]).isActive&&(n=r.activeContacts.length,r.collision.parentA.totalContacts+=n,r.collision.parentB.totalContacts+=n)},n.solvePosition=function(e,t){var r,o,i,s,l,p,u,c,d,h=a._temp[0],m=a._temp[1],f=a._temp[2],y=a._temp[3];for(r=0;r<e.length;r++)(o=e[r]).isActive&&!o.isSensor&&(s=(i=o.collision).parentA,l=i.parentB,p=i.normal,u=a.sub(a.add(l.positionImpulse,l.position,h),a.add(s.positionImpulse,a.sub(l.position,i.penetration,m),f),y),o.separation=a.dot(p,u));for(r=0;r<e.length;r++)(o=e[r]).isActive&&!o.isSensor&&(s=(i=o.collision).parentA,l=i.parentB,p=i.normal,d=(o.separation-o.slop)*t,(s.isStatic||l.isStatic)&&(d*=2),s.isStatic||s.isSleeping||(c=n._positionDampen/s.totalContacts,s.positionImpulse.x+=p.x*d*c,s.positionImpulse.y+=p.y*d*c),l.isStatic||l.isSleeping||(c=n._positionDampen/l.totalContacts,l.positionImpulse.x-=p.x*d*c,l.positionImpulse.y-=p.y*d*c))},n.postSolvePosition=function(e){for(var t=0;t<e.length;t++){var r=e[t];if(r.totalContacts=0,0!==r.positionImpulse.x||0!==r.positionImpulse.y){for(var i=0;i<r.parts.length;i++){var l=r.parts[i];o.translate(l.vertices,r.positionImpulse),s.update(l.bounds,l.vertices,r.velocity),l.position.x+=r.positionImpulse.x,l.position.y+=r.positionImpulse.y}r.positionPrev.x+=r.positionImpulse.x,r.positionPrev.y+=r.positionImpulse.y,a.dot(r.positionImpulse,r.velocity)<0?(r.positionImpulse.x=0,r.positionImpulse.y=0):(r.positionImpulse.x*=n._positionWarming,r.positionImpulse.y*=n._positionWarming)}}},n.preSolveVelocity=function(e){var t,r,n,o,i,s,l,p,u,c,d,h,m,f,y=a._temp[0],g=a._temp[1];for(t=0;t<e.length;t++)if((n=e[t]).isActive&&!n.isSensor)for(o=n.activeContacts,s=(i=n.collision).parentA,l=i.parentB,p=i.normal,u=i.tangent,r=0;r<o.length;r++)d=(c=o[r]).vertex,h=c.normalImpulse,m=c.tangentImpulse,0===h&&0===m||(y.x=p.x*h+u.x*m,y.y=p.y*h+u.y*m,s.isStatic||s.isSleeping||(f=a.sub(d,s.position,g),s.positionPrev.x+=y.x*s.inverseMass,s.positionPrev.y+=y.y*s.inverseMass,s.anglePrev+=a.cross(f,y)*s.inverseInertia),l.isStatic||l.isSleeping||(f=a.sub(d,l.position,g),l.positionPrev.x-=y.x*l.inverseMass,l.positionPrev.y-=y.y*l.inverseMass,l.anglePrev-=a.cross(f,y)*l.inverseInertia))},n.solveVelocity=function(e,t){for(var r=t*t,o=a._temp[0],s=a._temp[1],l=a._temp[2],p=a._temp[3],u=a._temp[4],c=a._temp[5],d=0;d<e.length;d++){var h=e[d];if(h.isActive&&!h.isSensor){var m=h.collision,f=m.parentA,y=m.parentB,g=m.normal,v=m.tangent,b=h.activeContacts,x=1/b.length;f.velocity.x=f.position.x-f.positionPrev.x,f.velocity.y=f.position.y-f.positionPrev.y,y.velocity.x=y.position.x-y.positionPrev.x,y.velocity.y=y.position.y-y.positionPrev.y,f.angularVelocity=f.angle-f.anglePrev,y.angularVelocity=y.angle-y.anglePrev;for(var _=0;_<b.length;_++){var w=b[_],S=w.vertex,M=a.sub(S,f.position,s),C=a.sub(S,y.position,l),T=a.add(f.velocity,a.mult(a.perp(M),f.angularVelocity),p),E=a.add(y.velocity,a.mult(a.perp(C),y.angularVelocity),u),N=a.sub(T,E,c),P=a.dot(g,N),A=a.dot(v,N),I=Math.abs(A),O=i.sign(A),L=(1+h.restitution)*P,R=i.clamp(h.separation+P,0,1)*n._frictionNormalMultiplier,D=A,k=1/0;I>h.friction*h.frictionStatic*R*r&&(k=I,D=i.clamp(h.friction*O*r,-k,k));var F=a.cross(M,g),B=a.cross(C,g),U=x/(f.inverseMass+y.inverseMass+f.inverseInertia*F*F+y.inverseInertia*B*B);if(L*=U,D*=U,P<0&&P*P>n._restingThresh*r)w.normalImpulse=0;else{var G=w.normalImpulse;w.normalImpulse=Math.min(w.normalImpulse+L,0),L=w.normalImpulse-G}if(A*A>n._restingThreshTangent*r)w.tangentImpulse=0;else{var V=w.tangentImpulse;w.tangentImpulse=i.clamp(w.tangentImpulse+D,-k,k),D=w.tangentImpulse-V}o.x=g.x*L+v.x*D,o.y=g.y*L+v.y*D,f.isStatic||f.isSleeping||(f.positionPrev.x+=o.x*f.inverseMass,f.positionPrev.y+=o.y*f.inverseMass,f.anglePrev+=a.cross(M,o)*f.inverseInertia),y.isStatic||y.isSleeping||(y.positionPrev.x-=o.x*y.inverseMass,y.positionPrev.y-=o.y*y.inverseMass,y.anglePrev-=a.cross(C,o)*y.inverseInertia)}}}}},{"../core/Common":14,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29}],11:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vertices"),a=e("../geometry/Vector");n.collides=function(e,t,r){var i,s,l,p,u=!1;if(r){var c=e.parent,d=t.parent,h=c.speed*c.speed+c.angularSpeed*c.angularSpeed+d.speed*d.speed+d.angularSpeed*d.angularSpeed;u=r&&r.collided&&h<.2,p=r}else p={collided:!1,bodyA:e,bodyB:t};if(r&&u){var m=p.axisBody,f=m===e?t:e,y=[m.axes[r.axisNumber]];if(l=n._overlapAxes(m.vertices,f.vertices,y),p.reused=!0,l.overlap<=0)return p.collided=!1,p}else{if((i=n._overlapAxes(e.vertices,t.vertices,e.axes)).overlap<=0)return p.collided=!1,p;if((s=n._overlapAxes(t.vertices,e.vertices,t.axes)).overlap<=0)return p.collided=!1,p;i.overlap<s.overlap?(l=i,p.axisBody=e):(l=s,p.axisBody=t),p.axisNumber=l.axisNumber}p.bodyA=e.id<t.id?e:t,p.bodyB=e.id<t.id?t:e,p.collided=!0,p.depth=l.overlap,p.parentA=p.bodyA.parent,p.parentB=p.bodyB.parent,e=p.bodyA,t=p.bodyB,a.dot(l.axis,a.sub(t.position,e.position))<0?p.normal={x:l.axis.x,y:l.axis.y}:p.normal={x:-l.axis.x,y:-l.axis.y},p.tangent=a.perp(p.normal),p.penetration=p.penetration||{},p.penetration.x=p.normal.x*p.depth,p.penetration.y=p.normal.y*p.depth;var g=n._findSupports(e,t,p.normal),v=[];if(o.contains(e.vertices,g[0])&&v.push(g[0]),o.contains(e.vertices,g[1])&&v.push(g[1]),v.length<2){var b=n._findSupports(t,e,a.neg(p.normal));o.contains(t.vertices,b[0])&&v.push(b[0]),v.length<2&&o.contains(t.vertices,b[1])&&v.push(b[1])}return v.length<1&&(v=[g[0]]),p.supports=v,p},n._overlapAxes=function(e,t,r){for(var o,i,s=a._temp[0],l=a._temp[1],p={overlap:Number.MAX_VALUE},u=0;u<r.length;u++){if(i=r[u],n._projectToAxis(s,e,i),n._projectToAxis(l,t,i),(o=Math.min(s.max-l.min,l.max-s.min))<=0)return p.overlap=o,p;o<p.overlap&&(p.overlap=o,p.axis=i,p.axisNumber=u)}return p},n._projectToAxis=function(e,t,r){for(var n=a.dot(t[0],r),o=n,i=1;i<t.length;i+=1){var s=a.dot(t[i],r);s>o?o=s:s<n&&(n=s)}e.min=n,e.max=o},n._findSupports=function(e,t,r){for(var n,o,i,s,l=Number.MAX_VALUE,p=a._temp[0],u=t.vertices,c=e.position,d=0;d<u.length;d++)o=u[d],p.x=o.x-c.x,p.y=o.y-c.y,(n=-a.dot(r,p))<l&&(l=n,i=o);return o=u[i.index-1>=0?i.index-1:u.length-1],p.x=o.x-c.x,p.y=o.y-c.y,l=-a.dot(r,p),s=o,o=u[(i.index+1)%u.length],p.x=o.x-c.x,p.y=o.y-c.y,(n=-a.dot(r,p))<l&&(s=o),[i,s]}},{"../geometry/Vector":28,"../geometry/Vertices":29}],12:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vertices"),a=e("../geometry/Vector"),i=e("../core/Sleeping"),s=e("../geometry/Bounds"),l=e("../geometry/Axes"),p=e("../core/Common");n._warming=.4,n._torqueDampen=1,n._minLength=1e-6,n.create=function(e){var t=e;t.bodyA&&!t.pointA&&(t.pointA={x:0,y:0}),t.bodyB&&!t.pointB&&(t.pointB={x:0,y:0});var r=t.bodyA?a.add(t.bodyA.position,t.pointA):t.pointA,n=t.bodyB?a.add(t.bodyB.position,t.pointB):t.pointB,o=a.magnitude(a.sub(r,n));t.length=void 0!==t.length?t.length:o,t.id=t.id||p.nextId(),t.label=t.label||"Constraint",t.type="constraint",t.stiffness=t.stiffness||(t.length>0?1:.7),t.damping=t.damping||0,t.angularStiffness=t.angularStiffness||0,t.angleA=t.bodyA?t.bodyA.angle:t.angleA,t.angleB=t.bodyB?t.bodyB.angle:t.angleB,t.plugin={};var i={visible:!0,lineWidth:2,strokeStyle:"#ffffff",type:"line",anchors:!0};return 0===t.length&&t.stiffness>.1?(i.type="pin",i.anchors=!1):t.stiffness<.9&&(i.type="spring"),t.render=p.extend(i,t.render),t},n.preSolveAll=function(e){for(var t=0;t<e.length;t+=1){var r=e[t],n=r.constraintImpulse;r.isStatic||0===n.x&&0===n.y&&0===n.angle||(r.position.x+=n.x,r.position.y+=n.y,r.angle+=n.angle)}},n.solveAll=function(e,t){for(var r=0;r<e.length;r+=1){var o=e[r],a=!o.bodyA||o.bodyA&&o.bodyA.isStatic,i=!o.bodyB||o.bodyB&&o.bodyB.isStatic;(a||i)&&n.solve(e[r],t)}for(r=0;r<e.length;r+=1)a=!(o=e[r]).bodyA||o.bodyA&&o.bodyA.isStatic,i=!o.bodyB||o.bodyB&&o.bodyB.isStatic,a||i||n.solve(e[r],t)},n.solve=function(e,t){var r=e.bodyA,o=e.bodyB,i=e.pointA,s=e.pointB;if(r||o){r&&!r.isStatic&&(a.rotate(i,r.angle-e.angleA,i),e.angleA=r.angle),o&&!o.isStatic&&(a.rotate(s,o.angle-e.angleB,s),e.angleB=o.angle);var l=i,p=s;if(r&&(l=a.add(r.position,i)),o&&(p=a.add(o.position,s)),l&&p){var u=a.sub(l,p),c=a.magnitude(u);c<n._minLength&&(c=n._minLength);var d,h,m,f,y,g=(c-e.length)/c,v=e.stiffness<1?e.stiffness*t:e.stiffness,b=a.mult(u,g*v),x=(r?r.inverseMass:0)+(o?o.inverseMass:0),_=x+((r?r.inverseInertia:0)+(o?o.inverseInertia:0));if(e.damping){var w=a.create();m=a.div(u,c),y=a.sub(o&&a.sub(o.position,o.positionPrev)||w,r&&a.sub(r.position,r.positionPrev)||w),f=a.dot(m,y)}r&&!r.isStatic&&(h=r.inverseMass/x,r.constraintImpulse.x-=b.x*h,r.constraintImpulse.y-=b.y*h,r.position.x-=b.x*h,r.position.y-=b.y*h,e.damping&&(r.positionPrev.x-=e.damping*m.x*f*h,r.positionPrev.y-=e.damping*m.y*f*h),d=a.cross(i,b)/_*n._torqueDampen*r.inverseInertia*(1-e.angularStiffness),r.constraintImpulse.angle-=d,r.angle-=d),o&&!o.isStatic&&(h=o.inverseMass/x,o.constraintImpulse.x+=b.x*h,o.constraintImpulse.y+=b.y*h,o.position.x+=b.x*h,o.position.y+=b.y*h,e.damping&&(o.positionPrev.x+=e.damping*m.x*f*h,o.positionPrev.y+=e.damping*m.y*f*h),d=a.cross(s,b)/_*n._torqueDampen*o.inverseInertia*(1-e.angularStiffness),o.constraintImpulse.angle+=d,o.angle+=d)}}},n.postSolveAll=function(e){for(var t=0;t<e.length;t++){var r=e[t],p=r.constraintImpulse;if(!(r.isStatic||0===p.x&&0===p.y&&0===p.angle)){i.set(r,!1);for(var u=0;u<r.parts.length;u++){var c=r.parts[u];o.translate(c.vertices,p),u>0&&(c.position.x+=p.x,c.position.y+=p.y),0!==p.angle&&(o.rotate(c.vertices,p.angle,r.position),l.rotate(c.axes,p.angle),u>0&&a.rotateAbout(c.position,p.angle,r.position,c.position)),s.update(c.bounds,c.vertices,r.velocity)}p.angle*=n._warming,p.x*=n._warming,p.y*=n._warming}}}},{"../core/Common":14,"../core/Sleeping":22,"../geometry/Axes":25,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29}],13:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vertices"),a=e("../core/Sleeping"),i=e("../core/Mouse"),s=e("../core/Events"),l=e("../collision/Detector"),p=e("./Constraint"),u=e("../body/Composite"),c=e("../core/Common"),d=e("../geometry/Bounds");n.create=function(e,t){var r=(e?e.mouse:null)||(t?t.mouse:null);r||(e&&e.render&&e.render.canvas?r=i.create(e.render.canvas):t&&t.element?r=i.create(t.element):(r=i.create(),c.warn("MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected")));var o={type:"mouseConstraint",mouse:r,element:null,body:null,constraint:p.create({label:"Mouse Constraint",pointA:r.position,pointB:{x:0,y:0},length:.01,stiffness:.1,angularStiffness:1,render:{strokeStyle:"#90EE90",lineWidth:3}}),collisionFilter:{category:1,mask:4294967295,group:0}},a=c.extend(o,t);return s.on(e,"beforeUpdate",(function(){var t=u.allBodies(e.world);n.update(a,t),n._triggerEvents(a)})),a},n.update=function(e,t){var r=e.mouse,n=e.constraint,i=e.body;if(0===r.button){if(n.bodyB)a.set(n.bodyB,!1),n.pointA=r.position;else for(var p=0;p<t.length;p++)if(i=t[p],d.contains(i.bounds,r.position)&&l.canCollide(i.collisionFilter,e.collisionFilter))for(var u=i.parts.length>1?1:0;u<i.parts.length;u++){var c=i.parts[u];if(o.contains(c.vertices,r.position)){n.pointA=r.position,n.bodyB=e.body=i,n.pointB={x:r.position.x-i.position.x,y:r.position.y-i.position.y},n.angleB=i.angle,a.set(i,!1),s.trigger(e,"startdrag",{mouse:r,body:i});break}}}else n.bodyB=e.body=null,n.pointB=null,i&&s.trigger(e,"enddrag",{mouse:r,body:i})},n._triggerEvents=function(e){var t=e.mouse,r=t.sourceEvents;r.mousemove&&s.trigger(e,"mousemove",{mouse:t}),r.mousedown&&s.trigger(e,"mousedown",{mouse:t}),r.mouseup&&s.trigger(e,"mouseup",{mouse:t}),i.clearSourceEvents(t)}},{"../body/Composite":2,"../collision/Detector":5,"../core/Common":14,"../core/Events":16,"../core/Mouse":19,"../core/Sleeping":22,"../geometry/Bounds":26,"../geometry/Vertices":29,"./Constraint":12}],14:[function(e,r,n){(function(t){var n={};r.exports=n,function(){n._nextId=0,n._seed=0,n._nowStartTime=+new Date,n.extend=function(e,t){var r,o;"boolean"==typeof t?(r=2,o=t):(r=1,o=!0);for(var a=r;a<arguments.length;a++){var i=arguments[a];if(i)for(var s in i)o&&i[s]&&i[s].constructor===Object?e[s]&&e[s].constructor!==Object?e[s]=i[s]:(e[s]=e[s]||{},n.extend(e[s],o,i[s])):e[s]=i[s]}return e},n.clone=function(e,t){return n.extend({},t,e)},n.keys=function(e){if(Object.keys)return Object.keys(e);var t=[];for(var r in e)t.push(r);return t},n.values=function(e){var t=[];if(Object.keys){for(var r=Object.keys(e),n=0;n<r.length;n++)t.push(e[r[n]]);return t}for(var o in e)t.push(e[o]);return t},n.get=function(e,t,r,n){t=t.split(".").slice(r,n);for(var o=0;o<t.length;o+=1)e=e[t[o]];return e},n.set=function(e,t,r,o,a){var i=t.split(".").slice(o,a);return n.get(e,t,0,-1)[i[i.length-1]]=r,r},n.shuffle=function(e){for(var t=e.length-1;t>0;t--){var r=Math.floor(n.random()*(t+1)),o=e[t];e[t]=e[r],e[r]=o}return e},n.choose=function(e){return e[Math.floor(n.random()*e.length)]},n.isElement=function(e){return"undefined"!=typeof HTMLElement?e instanceof HTMLElement:!!(e&&e.nodeType&&e.nodeName)},n.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)},n.isFunction=function(e){return"function"==typeof e},n.isPlainObject=function(e){return"object"==typeof e&&e.constructor===Object},n.isString=function(e){return"[object String]"===toString.call(e)},n.clamp=function(e,t,r){return e<t?t:e>r?r:e},n.sign=function(e){return e<0?-1:1},n.now=function(){if(window.performance){if(window.performance.now)return window.performance.now();if(window.performance.webkitNow)return window.performance.webkitNow()}return new Date-n._nowStartTime},n.random=function(e,t){return t=void 0!==t?t:1,(e=void 0!==e?e:0)+r()*(t-e)};var r=function(){return n._seed=(9301*n._seed+49297)%233280,n._seed/233280};n.colorToNumber=function(e){return 3==(e=e.replace("#","")).length&&(e=e.charAt(0)+e.charAt(0)+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)),parseInt(e,16)},n.logLevel=1,n.log=function(){console&&n.logLevel>0&&n.logLevel<=3&&console.log.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},n.info=function(){console&&n.logLevel>0&&n.logLevel<=2&&console.info.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},n.warn=function(){console&&n.logLevel>0&&n.logLevel<=3&&console.warn.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},n.nextId=function(){return n._nextId++},n.indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);for(var r=0;r<e.length;r++)if(e[r]===t)return r;return-1},n.map=function(e,t){if(e.map)return e.map(t);for(var r=[],n=0;n<e.length;n+=1)r.push(t(e[n]));return r},n.topologicalSort=function(e){var t=[],r=[],o=[];for(var a in e)r[a]||o[a]||n._topologicalSort(a,r,o,e,t);return t},n._topologicalSort=function(e,t,r,o,a){var i=o[e]||[];r[e]=!0;for(var s=0;s<i.length;s+=1){var l=i[s];r[l]||t[l]||n._topologicalSort(l,t,r,o,a)}r[e]=!1,t[e]=!0,a.push(e)},n.chain=function(){for(var e=[],t=0;t<arguments.length;t+=1){var r=arguments[t];r._chained?e.push.apply(e,r._chained):e.push(r)}var n=function(){for(var t,r=new Array(arguments.length),n=0,o=arguments.length;n<o;n++)r[n]=arguments[n];for(n=0;n<e.length;n+=1){var a=e[n].apply(t,r);void 0!==a&&(t=a)}return t};return n._chained=e,n},n.chainPathBefore=function(e,t,r){return n.set(e,t,n.chain(r,n.get(e,t)))},n.chainPathAfter=function(e,t,r){return n.set(e,t,n.chain(n.get(e,t),r))},n._requireGlobal=function(r,n){return("undefined"!=typeof window?window[r]:void 0!==t?t[r]:null)||e(n)}}()}).call(this,void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],15:[function(e,t,r){var n={};t.exports=n;var o=e("../body/World"),a=e("./Sleeping"),i=e("../collision/Resolver"),s=e("../render/Render"),l=e("../collision/Pairs"),p=(e("./Metrics"),e("../collision/Grid")),u=e("./Events"),c=e("../body/Composite"),d=e("../constraint/Constraint"),h=e("./Common"),m=e("../body/Body");n.create=function(e,t){t=(t=h.isElement(e)?t:e)||{},((e=h.isElement(e)?e:null)||t.render)&&h.warn("Engine.create: engine.render is deprecated (see docs)");var r={positionIterations:6,velocityIterations:4,constraintIterations:2,enableSleeping:!1,events:[],plugin:{},timing:{timestamp:0,timeScale:1},broadphase:{controller:p}},n=h.extend(r,t);if(e||n.render){var a={element:e,controller:s};n.render=h.extend(a,n.render)}return n.render&&n.render.controller&&(n.render=n.render.controller.create(n.render)),n.render&&(n.render.engine=n),n.world=t.world||o.create(n.world),n.pairs=l.create(),n.broadphase=n.broadphase.controller.create(n.broadphase),n.metrics=n.metrics||{extended:!1},n},n.update=function(e,t,r){t=t||1e3/60,r=r||1;var o,s=e.world,p=e.timing,h=e.broadphase,m=[];p.timestamp+=t*p.timeScale;var f={timestamp:p.timestamp};u.trigger(e,"beforeUpdate",f);var y=c.allBodies(s),g=c.allConstraints(s);for(e.enableSleeping&&a.update(y,p.timeScale),n._bodiesApplyGravity(y,s.gravity),n._bodiesUpdate(y,t,p.timeScale,r,s.bounds),d.preSolveAll(y),o=0;o<e.constraintIterations;o++)d.solveAll(g,p.timeScale);d.postSolveAll(y),h.controller?(s.isModified&&h.controller.clear(h),h.controller.update(h,y,e,s.isModified),m=h.pairsList):m=y,s.isModified&&c.setModified(s,!1,!1,!0);var v=h.detector(m,e),b=e.pairs,x=p.timestamp;for(l.update(b,v,x),l.removeOld(b,x),e.enableSleeping&&a.afterCollisions(b.list,p.timeScale),b.collisionStart.length>0&&u.trigger(e,"collisionStart",{pairs:b.collisionStart}),i.preSolvePosition(b.list),o=0;o<e.positionIterations;o++)i.solvePosition(b.list,p.timeScale);for(i.postSolvePosition(y),d.preSolveAll(y),o=0;o<e.constraintIterations;o++)d.solveAll(g,p.timeScale);for(d.postSolveAll(y),i.preSolveVelocity(b.list),o=0;o<e.velocityIterations;o++)i.solveVelocity(b.list,p.timeScale);return b.collisionActive.length>0&&u.trigger(e,"collisionActive",{pairs:b.collisionActive}),b.collisionEnd.length>0&&u.trigger(e,"collisionEnd",{pairs:b.collisionEnd}),n._bodiesClearForces(y),u.trigger(e,"afterUpdate",f),e},n.merge=function(e,t){if(h.extend(e,t),t.world){e.world=t.world,n.clear(e);for(var r=c.allBodies(e.world),o=0;o<r.length;o++){var i=r[o];a.set(i,!1),i.id=h.nextId()}}},n.clear=function(e){var t=e.world;l.clear(e.pairs);var r=e.broadphase;if(r.controller){var n=c.allBodies(t);r.controller.clear(r),r.controller.update(r,n,e,!0)}},n._bodiesClearForces=function(e){for(var t=0;t<e.length;t++){var r=e[t];r.force.x=0,r.force.y=0,r.torque=0}},n._bodiesApplyGravity=function(e,t){var r=void 0!==t.scale?t.scale:.001;if((0!==t.x||0!==t.y)&&0!==r)for(var n=0;n<e.length;n++){var o=e[n];o.isStatic||o.isSleeping||(o.force.y+=o.mass*t.y*r,o.force.x+=o.mass*t.x*r)}},n._bodiesUpdate=function(e,t,r,n,o){for(var a=0;a<e.length;a++){var i=e[a];i.isStatic||i.isSleeping||m.update(i,t,r,n)}}},{"../body/Body":1,"../body/Composite":2,"../body/World":3,"../collision/Grid":6,"../collision/Pairs":8,"../collision/Resolver":10,"../constraint/Constraint":12,"../render/Render":31,"./Common":14,"./Events":16,"./Metrics":18,"./Sleeping":22}],16:[function(e,t,r){var n={};t.exports=n;var o=e("./Common");n.on=function(e,t,r){for(var n,o=t.split(" "),a=0;a<o.length;a++)n=o[a],e.events=e.events||{},e.events[n]=e.events[n]||[],e.events[n].push(r);return r},n.off=function(e,t,r){if(t){"function"==typeof t&&(r=t,t=o.keys(e.events).join(" "));for(var n=t.split(" "),a=0;a<n.length;a++){var i=e.events[n[a]],s=[];if(r&&i)for(var l=0;l<i.length;l++)i[l]!==r&&s.push(i[l]);e.events[n[a]]=s}}else e.events={}},n.trigger=function(e,t,r){var n,a,i,s;if(e.events){r||(r={}),n=t.split(" ");for(var l=0;l<n.length;l++)if(a=n[l],i=e.events[a]){(s=o.clone(r,!1)).name=a,s.source=e;for(var p=0;p<i.length;p++)i[p].apply(e,[s])}}}},{"./Common":14}],17:[function(e,t,r){var n={};t.exports=n;var o=e("./Plugin"),a=e("./Common");n.name="matter-js",n.version="0.14.2",n.uses=[],n.used=[],n.use=function(){o.use(n,Array.prototype.slice.call(arguments))},n.before=function(e,t){return e=e.replace(/^Matter./,""),a.chainPathBefore(n,e,t)},n.after=function(e,t){return e=e.replace(/^Matter./,""),a.chainPathAfter(n,e,t)}},{"./Common":14,"./Plugin":20}],18:[function(e,t,r){},{"../body/Composite":2,"./Common":14}],19:[function(e,t,r){var n={};t.exports=n;var o=e("../core/Common");n.create=function(e){var t={};return e||o.log("Mouse.create: element was undefined, defaulting to document.body","warn"),t.element=e||document.body,t.absolute={x:0,y:0},t.position={x:0,y:0},t.mousedownPosition={x:0,y:0},t.mouseupPosition={x:0,y:0},t.offset={x:0,y:0},t.scale={x:1,y:1},t.wheelDelta=0,t.button=-1,t.pixelRatio=t.element.getAttribute("data-pixel-ratio")||1,t.sourceEvents={mousemove:null,mousedown:null,mouseup:null,mousewheel:null},t.mousemove=function(e){var r=n._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches&&(t.button=0,e.preventDefault()),t.absolute.x=r.x,t.absolute.y=r.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.sourceEvents.mousemove=e},t.mousedown=function(e){var r=n._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches?(t.button=0,e.preventDefault()):t.button=e.button,t.absolute.x=r.x,t.absolute.y=r.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mousedownPosition.x=t.position.x,t.mousedownPosition.y=t.position.y,t.sourceEvents.mousedown=e},t.mouseup=function(e){var r=n._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches&&e.preventDefault(),t.button=-1,t.absolute.x=r.x,t.absolute.y=r.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mouseupPosition.x=t.position.x,t.mouseupPosition.y=t.position.y,t.sourceEvents.mouseup=e},t.mousewheel=function(e){t.wheelDelta=Math.max(-1,Math.min(1,e.wheelDelta||-e.detail)),e.preventDefault()},n.setElement(t,t.element),t},n.setElement=function(e,t){e.element=t,t.addEventListener("mousemove",e.mousemove),t.addEventListener("mousedown",e.mousedown),t.addEventListener("mouseup",e.mouseup),t.addEventListener("mousewheel",e.mousewheel),t.addEventListener("DOMMouseScroll",e.mousewheel),t.addEventListener("touchmove",e.mousemove),t.addEventListener("touchstart",e.mousedown),t.addEventListener("touchend",e.mouseup)},n.clearSourceEvents=function(e){e.sourceEvents.mousemove=null,e.sourceEvents.mousedown=null,e.sourceEvents.mouseup=null,e.sourceEvents.mousewheel=null,e.wheelDelta=0},n.setOffset=function(e,t){e.offset.x=t.x,e.offset.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},n.setScale=function(e,t){e.scale.x=t.x,e.scale.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},n._getRelativeMousePosition=function(e,t,r){var n,o,a=t.getBoundingClientRect(),i=document.documentElement||document.body.parentNode||document.body,s=void 0!==window.pageXOffset?window.pageXOffset:i.scrollLeft,l=void 0!==window.pageYOffset?window.pageYOffset:i.scrollTop,p=e.changedTouches;return p?(n=p[0].pageX-a.left-s,o=p[0].pageY-a.top-l):(n=e.pageX-a.left-s,o=e.pageY-a.top-l),{x:n/(t.clientWidth/(t.width||t.clientWidth)*r),y:o/(t.clientHeight/(t.height||t.clientHeight)*r)}}},{"../core/Common":14}],20:[function(e,t,r){var n={};t.exports=n;var o=e("./Common");n._registry={},n.register=function(e){if(n.isPlugin(e)||o.warn("Plugin.register:",n.toString(e),"does not implement all required fields."),e.name in n._registry){var t=n._registry[e.name],r=n.versionParse(e.version).number,a=n.versionParse(t.version).number;r>a?(o.warn("Plugin.register:",n.toString(t),"was upgraded to",n.toString(e)),n._registry[e.name]=e):r<a?o.warn("Plugin.register:",n.toString(t),"can not be downgraded to",n.toString(e)):e!==t&&o.warn("Plugin.register:",n.toString(e),"is already registered to different plugin object")}else n._registry[e.name]=e;return e},n.resolve=function(e){return n._registry[n.dependencyParse(e).name]},n.toString=function(e){return"string"==typeof e?e:(e.name||"anonymous")+"@"+(e.version||e.range||"0.0.0")},n.isPlugin=function(e){return e&&e.name&&e.version&&e.install},n.isUsed=function(e,t){return e.used.indexOf(t)>-1},n.isFor=function(e,t){var r=e.for&&n.dependencyParse(e.for);return!e.for||t.name===r.name&&n.versionSatisfies(t.version,r.range)},n.use=function(e,t){if(e.uses=(e.uses||[]).concat(t||[]),0!==e.uses.length){for(var r=n.dependencies(e),a=o.topologicalSort(r),i=[],s=0;s<a.length;s+=1)if(a[s]!==e.name){var l=n.resolve(a[s]);l?n.isUsed(e,l.name)||(n.isFor(l,e)||(o.warn("Plugin.use:",n.toString(l),"is for",l.for,"but installed on",n.toString(e)+"."),l._warned=!0),l.install?l.install(e):(o.warn("Plugin.use:",n.toString(l),"does not specify an install function."),l._warned=!0),l._warned?(i.push("🔶 "+n.toString(l)),delete l._warned):i.push("✅ "+n.toString(l)),e.used.push(l.name)):i.push("❌ "+a[s])}i.length>0&&o.info(i.join("  "))}else o.warn("Plugin.use:",n.toString(e),"does not specify any dependencies to install.")},n.dependencies=function(e,t){var r=n.dependencyParse(e),a=r.name;if(!(a in(t=t||{}))){e=n.resolve(e)||e,t[a]=o.map(e.uses||[],(function(t){n.isPlugin(t)&&n.register(t);var a=n.dependencyParse(t),i=n.resolve(t);return i&&!n.versionSatisfies(i.version,a.range)?(o.warn("Plugin.dependencies:",n.toString(i),"does not satisfy",n.toString(a),"used by",n.toString(r)+"."),i._warned=!0,e._warned=!0):i||(o.warn("Plugin.dependencies:",n.toString(t),"used by",n.toString(r),"could not be resolved."),e._warned=!0),a.name}));for(var i=0;i<t[a].length;i+=1)n.dependencies(t[a][i],t);return t}},n.dependencyParse=function(e){return o.isString(e)?(/^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?))?$/.test(e)||o.warn("Plugin.dependencyParse:",e,"is not a valid dependency string."),{name:e.split("@")[0],range:e.split("@")[1]||"*"}):{name:e.name,range:e.range||e.version}},n.versionParse=function(e){/^\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?$/.test(e)||o.warn("Plugin.versionParse:",e,"is not a valid version or range.");var t=e.split("-");e=t[0];var r=isNaN(Number(e[0])),n=r?e.substr(1):e,a=o.map(n.split("."),(function(e){return Number(e)}));return{isRange:r,version:n,range:e,operator:r?e[0]:"",parts:a,prerelease:t[1],number:1e8*a[0]+1e4*a[1]+a[2]}},n.versionSatisfies=function(e,t){t=t||"*";var r=n.versionParse(t),o=r.parts,a=n.versionParse(e),i=a.parts;if(r.isRange){if("*"===r.operator||"*"===e)return!0;if("~"===r.operator)return i[0]===o[0]&&i[1]===o[1]&&i[2]>=o[2];if("^"===r.operator)return o[0]>0?i[0]===o[0]&&a.number>=r.number:o[1]>0?i[1]===o[1]&&i[2]>=o[2]:i[2]===o[2]}return e===t||"*"===e}},{"./Common":14}],21:[function(e,t,r){var n={};t.exports=n;var o,a,i,s=e("./Events"),l=e("./Engine"),p=e("./Common");"undefined"!=typeof window&&(o=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame,a=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),o||(o=function(e){i=setTimeout((function(){e(p.now())}),1e3/60)},a=function(){clearTimeout(i)}),n.create=function(e){var t=p.extend({fps:60,correction:1,deltaSampleSize:60,counterTimestamp:0,frameCounter:0,deltaHistory:[],timePrev:null,timeScalePrev:1,frameRequestId:null,isFixed:!1,enabled:!0},e);return t.delta=t.delta||1e3/t.fps,t.deltaMin=t.deltaMin||1e3/t.fps,t.deltaMax=t.deltaMax||1e3/(.5*t.fps),t.fps=1e3/t.delta,t},n.run=function(e,t){return void 0!==e.positionIterations&&(t=e,e=n.create()),function r(a){e.frameRequestId=o(r),a&&e.enabled&&n.tick(e,t,a)}(),e},n.tick=function(e,t,r){var n,o=t.timing,a=1,i={timestamp:o.timestamp};s.trigger(e,"beforeTick",i),s.trigger(t,"beforeTick",i),e.isFixed?n=e.delta:(n=r-e.timePrev||e.delta,e.timePrev=r,e.deltaHistory.push(n),e.deltaHistory=e.deltaHistory.slice(-e.deltaSampleSize),a=(n=(n=(n=Math.min.apply(null,e.deltaHistory))<e.deltaMin?e.deltaMin:n)>e.deltaMax?e.deltaMax:n)/e.delta,e.delta=n),0!==e.timeScalePrev&&(a*=o.timeScale/e.timeScalePrev),0===o.timeScale&&(a=0),e.timeScalePrev=o.timeScale,e.correction=a,e.frameCounter+=1,r-e.counterTimestamp>=1e3&&(e.fps=e.frameCounter*((r-e.counterTimestamp)/1e3),e.counterTimestamp=r,e.frameCounter=0),s.trigger(e,"tick",i),s.trigger(t,"tick",i),t.world.isModified&&t.render&&t.render.controller&&t.render.controller.clear&&t.render.controller.clear(t.render),s.trigger(e,"beforeUpdate",i),l.update(t,n,a),s.trigger(e,"afterUpdate",i),t.render&&t.render.controller&&(s.trigger(e,"beforeRender",i),s.trigger(t,"beforeRender",i),t.render.controller.world(t.render),s.trigger(e,"afterRender",i),s.trigger(t,"afterRender",i)),s.trigger(e,"afterTick",i),s.trigger(t,"afterTick",i)},n.stop=function(e){a(e.frameRequestId)},n.start=function(e,t){n.run(e,t)}},{"./Common":14,"./Engine":15,"./Events":16}],22:[function(e,t,r){var n={};t.exports=n;var o=e("./Events");n._motionWakeThreshold=.18,n._motionSleepThreshold=.08,n._minBias=.9,n.update=function(e,t){for(var r=t*t*t,o=0;o<e.length;o++){var a=e[o],i=a.speed*a.speed+a.angularSpeed*a.angularSpeed;if(0===a.force.x&&0===a.force.y){var s=Math.min(a.motion,i),l=Math.max(a.motion,i);a.motion=n._minBias*s+(1-n._minBias)*l,a.sleepThreshold>0&&a.motion<n._motionSleepThreshold*r?(a.sleepCounter+=1,a.sleepCounter>=a.sleepThreshold&&n.set(a,!0)):a.sleepCounter>0&&(a.sleepCounter-=1)}else n.set(a,!1)}},n.afterCollisions=function(e,t){for(var r=t*t*t,o=0;o<e.length;o++){var a=e[o];if(a.isActive){var i=a.collision,s=i.bodyA.parent,l=i.bodyB.parent;if(!(s.isSleeping&&l.isSleeping||s.isStatic||l.isStatic)&&(s.isSleeping||l.isSleeping)){var p=s.isSleeping&&!s.isStatic?s:l,u=p===s?l:s;!p.isStatic&&u.motion>n._motionWakeThreshold*r&&n.set(p,!1)}}}},n.set=function(e,t){var r=e.isSleeping;t?(e.isSleeping=!0,e.sleepCounter=e.sleepThreshold,e.positionImpulse.x=0,e.positionImpulse.y=0,e.positionPrev.x=e.position.x,e.positionPrev.y=e.position.y,e.anglePrev=e.angle,e.speed=0,e.angularSpeed=0,e.motion=0,r||o.trigger(e,"sleepStart")):(e.isSleeping=!1,e.sleepCounter=0,r&&o.trigger(e,"sleepEnd"))}},{"./Events":16}],23:[function(e,t,r){var n={};t.exports=n;var o,a=e("../geometry/Vertices"),i=e("../core/Common"),s=e("../body/Body"),l=e("../geometry/Bounds"),p=e("../geometry/Vector");n.rectangle=function(e,t,r,n,o){o=o||{};var l={label:"Rectangle Body",position:{x:e,y:t},vertices:a.fromPath("L 0 0 L "+r+" 0 L "+r+" "+n+" L 0 "+n)};if(o.chamfer){var p=o.chamfer;l.vertices=a.chamfer(l.vertices,p.radius,p.quality,p.qualityMin,p.qualityMax),delete o.chamfer}return s.create(i.extend({},l,o))},n.trapezoid=function(e,t,r,n,o,l){l=l||{};var p,u=r*(o*=.5),c=u+(1-2*o)*r,d=c+u;p=o<.5?"L 0 0 L "+u+" "+-n+" L "+c+" "+-n+" L "+d+" 0":"L 0 0 L "+c+" "+-n+" L "+d+" 0";var h={label:"Trapezoid Body",position:{x:e,y:t},vertices:a.fromPath(p)};if(l.chamfer){var m=l.chamfer;h.vertices=a.chamfer(h.vertices,m.radius,m.quality,m.qualityMin,m.qualityMax),delete l.chamfer}return s.create(i.extend({},h,l))},n.circle=function(e,t,r,o,a){o=o||{};var s={label:"Circle Body",circleRadius:r};a=a||25;var l=Math.ceil(Math.max(10,Math.min(a,r)));return l%2==1&&(l+=1),n.polygon(e,t,l,r,i.extend({},s,o))},n.polygon=function(e,t,r,o,l){if(l=l||{},r<3)return n.circle(e,t,o,l);for(var p=2*Math.PI/r,u="",c=.5*p,d=0;d<r;d+=1){var h=c+d*p,m=Math.cos(h)*o,f=Math.sin(h)*o;u+="L "+m.toFixed(3)+" "+f.toFixed(3)+" "}var y={label:"Polygon Body",position:{x:e,y:t},vertices:a.fromPath(u)};if(l.chamfer){var g=l.chamfer;y.vertices=a.chamfer(y.vertices,g.radius,g.quality,g.qualityMin,g.qualityMax),delete l.chamfer}return s.create(i.extend({},y,l))},n.fromVertices=function(e,t,r,n,u,c,d){var h,m,f,y,g,v,b,x,_;for(o||(o=i._requireGlobal("decomp","poly-decomp")),n=n||{},m=[],u=void 0!==u&&u,c=void 0!==c?c:.01,d=void 0!==d?d:10,o||i.warn("Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull."),i.isArray(r[0])||(r=[r]),x=0;x<r.length;x+=1)if(y=r[x],(f=a.isConvex(y))||!o)y=f?a.clockwiseSort(y):a.hull(y),m.push({position:{x:e,y:t},vertices:y});else{var w=y.map((function(e){return[e.x,e.y]}));o.makeCCW(w),!1!==c&&o.removeCollinearPoints(w,c);var S=o.quickDecomp(w);for(g=0;g<S.length;g++){var M=S[g].map((function(e){return{x:e[0],y:e[1]}}));d>0&&a.area(M)<d||m.push({position:a.centre(M),vertices:M})}}for(g=0;g<m.length;g++)m[g]=s.create(i.extend(m[g],n));if(u)for(g=0;g<m.length;g++){var C=m[g];for(v=g+1;v<m.length;v++){var T=m[v];if(l.overlaps(C.bounds,T.bounds)){var E=C.vertices,N=T.vertices;for(b=0;b<C.vertices.length;b++)for(_=0;_<T.vertices.length;_++){var P=p.magnitudeSquared(p.sub(E[(b+1)%E.length],N[_])),A=p.magnitudeSquared(p.sub(E[b],N[(_+1)%N.length]));P<5&&A<5&&(E[b].isInternal=!0,N[_].isInternal=!0)}}}}return m.length>1?(h=s.create(i.extend({parts:m.slice(0)},n)),s.setPosition(h,{x:e,y:t}),h):m[0]}},{"../body/Body":1,"../core/Common":14,"../geometry/Bounds":26,"../geometry/Vector":28,"../geometry/Vertices":29}],24:[function(e,t,r){var n={};t.exports=n;var o=e("../body/Composite"),a=e("../constraint/Constraint"),i=e("../core/Common"),s=e("../body/Body"),l=e("./Bodies");n.stack=function(e,t,r,n,a,i,l){for(var p,u=o.create({label:"Stack"}),c=e,d=t,h=0,m=0;m<n;m++){for(var f=0,y=0;y<r;y++){var g=l(c,d,y,m,p,h);if(g){var v=g.bounds.max.y-g.bounds.min.y,b=g.bounds.max.x-g.bounds.min.x;v>f&&(f=v),s.translate(g,{x:.5*b,y:.5*v}),c=g.bounds.max.x+a,o.addBody(u,g),p=g,h+=1}else c+=a}d+=f+i,c=e}return u},n.chain=function(e,t,r,n,s,l){for(var p=e.bodies,u=1;u<p.length;u++){var c=p[u-1],d=p[u],h=c.bounds.max.y-c.bounds.min.y,m=c.bounds.max.x-c.bounds.min.x,f=d.bounds.max.y-d.bounds.min.y,y={bodyA:c,pointA:{x:m*t,y:h*r},bodyB:d,pointB:{x:(d.bounds.max.x-d.bounds.min.x)*n,y:f*s}},g=i.extend(y,l);o.addConstraint(e,a.create(g))}return e.label+=" Chain",e},n.mesh=function(e,t,r,n,s){var l,p,u,c,d,h=e.bodies;for(l=0;l<r;l++){for(p=1;p<t;p++)u=h[p-1+l*t],c=h[p+l*t],o.addConstraint(e,a.create(i.extend({bodyA:u,bodyB:c},s)));if(l>0)for(p=0;p<t;p++)u=h[p+(l-1)*t],c=h[p+l*t],o.addConstraint(e,a.create(i.extend({bodyA:u,bodyB:c},s))),n&&p>0&&(d=h[p-1+(l-1)*t],o.addConstraint(e,a.create(i.extend({bodyA:d,bodyB:c},s)))),n&&p<t-1&&(d=h[p+1+(l-1)*t],o.addConstraint(e,a.create(i.extend({bodyA:d,bodyB:c},s))))}return e.label+=" Mesh",e},n.pyramid=function(e,t,r,o,a,i,l){return n.stack(e,t,r,o,a,i,(function(t,n,i,p,u,c){var d=Math.min(o,Math.ceil(r/2)),h=u?u.bounds.max.x-u.bounds.min.x:0;if(!(p>d||i<(p=d-p)||i>r-1-p))return 1===c&&s.translate(u,{x:(i+(r%2==1?1:-1))*h,y:0}),l(e+(u?i*h:0)+i*a,n,i,p,u,c)}))},n.newtonsCradle=function(e,t,r,n,i){for(var s=o.create({label:"Newtons Cradle"}),p=0;p<r;p++){var u=l.circle(e+p*(1.9*n),t+i,n,{inertia:1/0,restitution:1,friction:0,frictionAir:1e-4,slop:1}),c=a.create({pointA:{x:e+p*(1.9*n),y:t},bodyB:u});o.addBody(s,u),o.addConstraint(s,c)}return s},n.car=function(e,t,r,n,i){var p=s.nextGroup(!0),u=.5*-r+20,c=.5*r-20,d=o.create({label:"Car"}),h=l.rectangle(e,t,r,n,{collisionFilter:{group:p},chamfer:{radius:.5*n},density:2e-4}),m=l.circle(e+u,t+0,i,{collisionFilter:{group:p},friction:.8}),f=l.circle(e+c,t+0,i,{collisionFilter:{group:p},friction:.8}),y=a.create({bodyB:h,pointB:{x:u,y:0},bodyA:m,stiffness:1,length:0}),g=a.create({bodyB:h,pointB:{x:c,y:0},bodyA:f,stiffness:1,length:0});return o.addBody(d,h),o.addBody(d,m),o.addBody(d,f),o.addConstraint(d,y),o.addConstraint(d,g),d},n.softBody=function(e,t,r,o,a,s,p,u,c,d){c=i.extend({inertia:1/0},c),d=i.extend({stiffness:.2,render:{type:"line",anchors:!1}},d);var h=n.stack(e,t,r,o,a,s,(function(e,t){return l.circle(e,t,u,c)}));return n.mesh(h,r,o,p,d),h.label="Soft Body",h}},{"../body/Body":1,"../body/Composite":2,"../constraint/Constraint":12,"../core/Common":14,"./Bodies":23}],25:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vector"),a=e("../core/Common");n.fromVertices=function(e){for(var t={},r=0;r<e.length;r++){var n=(r+1)%e.length,i=o.normalise({x:e[n].y-e[r].y,y:e[r].x-e[n].x}),s=0===i.y?1/0:i.x/i.y;t[s=s.toFixed(3).toString()]=i}return a.values(t)},n.rotate=function(e,t){if(0!==t)for(var r=Math.cos(t),n=Math.sin(t),o=0;o<e.length;o++){var a,i=e[o];a=i.x*r-i.y*n,i.y=i.x*n+i.y*r,i.x=a}}},{"../core/Common":14,"../geometry/Vector":28}],26:[function(e,t,r){var n={};t.exports=n,n.create=function(e){var t={min:{x:0,y:0},max:{x:0,y:0}};return e&&n.update(t,e),t},n.update=function(e,t,r){e.min.x=1/0,e.max.x=-1/0,e.min.y=1/0,e.max.y=-1/0;for(var n=0;n<t.length;n++){var o=t[n];o.x>e.max.x&&(e.max.x=o.x),o.x<e.min.x&&(e.min.x=o.x),o.y>e.max.y&&(e.max.y=o.y),o.y<e.min.y&&(e.min.y=o.y)}r&&(r.x>0?e.max.x+=r.x:e.min.x+=r.x,r.y>0?e.max.y+=r.y:e.min.y+=r.y)},n.contains=function(e,t){return t.x>=e.min.x&&t.x<=e.max.x&&t.y>=e.min.y&&t.y<=e.max.y},n.overlaps=function(e,t){return e.min.x<=t.max.x&&e.max.x>=t.min.x&&e.max.y>=t.min.y&&e.min.y<=t.max.y},n.translate=function(e,t){e.min.x+=t.x,e.max.x+=t.x,e.min.y+=t.y,e.max.y+=t.y},n.shift=function(e,t){var r=e.max.x-e.min.x,n=e.max.y-e.min.y;e.min.x=t.x,e.max.x=t.x+r,e.min.y=t.y,e.max.y=t.y+n}},{}],27:[function(e,t,r){var n={};t.exports=n,e("../geometry/Bounds");var o=e("../core/Common");n.pathToVertices=function(e,t){"undefined"==typeof window||"SVGPathSeg"in window||o.warn("Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.");var r,a,i,s,l,p,u,c,d,h,m,f=[],y=0,g=0,v=0;t=t||15;var b=function(e,t,r){var n=r%2==1&&r>1;if(!d||e!=d.x||t!=d.y){d&&n?(h=d.x,m=d.y):(h=0,m=0);var o={x:h+e,y:m+t};!n&&d||(d=o),f.push(o),g=h+e,v=m+t}},x=function(e){var t=e.pathSegTypeAsLetter.toUpperCase();if("Z"!==t){switch(t){case"M":case"L":case"T":case"C":case"S":case"Q":g=e.x,v=e.y;break;case"H":g=e.x;break;case"V":v=e.y}b(g,v,e.pathSegType)}};for(n._svgPathToAbsolute(e),i=e.getTotalLength(),p=[],r=0;r<e.pathSegList.numberOfItems;r+=1)p.push(e.pathSegList.getItem(r));for(u=p.concat();y<i;){if((l=p[e.getPathSegAtLength(y)])!=c){for(;u.length&&u[0]!=l;)x(u.shift());c=l}switch(l.pathSegTypeAsLetter.toUpperCase()){case"C":case"T":case"S":case"Q":case"A":s=e.getPointAtLength(y),b(s.x,s.y,0)}y+=t}for(r=0,a=u.length;r<a;++r)x(u[r]);return f},n._svgPathToAbsolute=function(e){for(var t,r,n,o,a,i,s=e.pathSegList,l=0,p=0,u=s.numberOfItems,c=0;c<u;++c){var d=s.getItem(c),h=d.pathSegTypeAsLetter;if(/[MLHVCSQTA]/.test(h))"x"in d&&(l=d.x),"y"in d&&(p=d.y);else switch("x1"in d&&(n=l+d.x1),"x2"in d&&(a=l+d.x2),"y1"in d&&(o=p+d.y1),"y2"in d&&(i=p+d.y2),"x"in d&&(l+=d.x),"y"in d&&(p+=d.y),h){case"m":s.replaceItem(e.createSVGPathSegMovetoAbs(l,p),c);break;case"l":s.replaceItem(e.createSVGPathSegLinetoAbs(l,p),c);break;case"h":s.replaceItem(e.createSVGPathSegLinetoHorizontalAbs(l),c);break;case"v":s.replaceItem(e.createSVGPathSegLinetoVerticalAbs(p),c);break;case"c":s.replaceItem(e.createSVGPathSegCurvetoCubicAbs(l,p,n,o,a,i),c);break;case"s":s.replaceItem(e.createSVGPathSegCurvetoCubicSmoothAbs(l,p,a,i),c);break;case"q":s.replaceItem(e.createSVGPathSegCurvetoQuadraticAbs(l,p,n,o),c);break;case"t":s.replaceItem(e.createSVGPathSegCurvetoQuadraticSmoothAbs(l,p),c);break;case"a":s.replaceItem(e.createSVGPathSegArcAbs(l,p,d.r1,d.r2,d.angle,d.largeArcFlag,d.sweepFlag),c);break;case"z":case"Z":l=t,p=r}"M"!=h&&"m"!=h||(t=l,r=p)}}},{"../core/Common":14,"../geometry/Bounds":26}],28:[function(e,t,r){var n={};t.exports=n,n.create=function(e,t){return{x:e||0,y:t||0}},n.clone=function(e){return{x:e.x,y:e.y}},n.magnitude=function(e){return Math.sqrt(e.x*e.x+e.y*e.y)},n.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},n.rotate=function(e,t,r){var n=Math.cos(t),o=Math.sin(t);r||(r={});var a=e.x*n-e.y*o;return r.y=e.x*o+e.y*n,r.x=a,r},n.rotateAbout=function(e,t,r,n){var o=Math.cos(t),a=Math.sin(t);n||(n={});var i=r.x+((e.x-r.x)*o-(e.y-r.y)*a);return n.y=r.y+((e.x-r.x)*a+(e.y-r.y)*o),n.x=i,n},n.normalise=function(e){var t=n.magnitude(e);return 0===t?{x:0,y:0}:{x:e.x/t,y:e.y/t}},n.dot=function(e,t){return e.x*t.x+e.y*t.y},n.cross=function(e,t){return e.x*t.y-e.y*t.x},n.cross3=function(e,t,r){return(t.x-e.x)*(r.y-e.y)-(t.y-e.y)*(r.x-e.x)},n.add=function(e,t,r){return r||(r={}),r.x=e.x+t.x,r.y=e.y+t.y,r},n.sub=function(e,t,r){return r||(r={}),r.x=e.x-t.x,r.y=e.y-t.y,r},n.mult=function(e,t){return{x:e.x*t,y:e.y*t}},n.div=function(e,t){return{x:e.x/t,y:e.y/t}},n.perp=function(e,t){return{x:(t=!0===t?-1:1)*-e.y,y:t*e.x}},n.neg=function(e){return{x:-e.x,y:-e.y}},n.angle=function(e,t){return Math.atan2(t.y-e.y,t.x-e.x)},n._temp=[n.create(),n.create(),n.create(),n.create(),n.create(),n.create()]},{}],29:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Vector"),a=e("../core/Common");n.create=function(e,t){for(var r=[],n=0;n<e.length;n++){var o=e[n],a={x:o.x,y:o.y,index:n,body:t,isInternal:!1};r.push(a)}return r},n.fromPath=function(e,t){var r=[];return e.replace(/L?\s*([\-\d\.e]+)[\s,]*([\-\d\.e]+)*/gi,(function(e,t,n){r.push({x:parseFloat(t),y:parseFloat(n)})})),n.create(r,t)},n.centre=function(e){for(var t,r,a,i=n.area(e,!0),s={x:0,y:0},l=0;l<e.length;l++)a=(l+1)%e.length,t=o.cross(e[l],e[a]),r=o.mult(o.add(e[l],e[a]),t),s=o.add(s,r);return o.div(s,6*i)},n.mean=function(e){for(var t={x:0,y:0},r=0;r<e.length;r++)t.x+=e[r].x,t.y+=e[r].y;return o.div(t,e.length)},n.area=function(e,t){for(var r=0,n=e.length-1,o=0;o<e.length;o++)r+=(e[n].x-e[o].x)*(e[n].y+e[o].y),n=o;return t?r/2:Math.abs(r)/2},n.inertia=function(e,t){for(var r,n,a=0,i=0,s=e,l=0;l<s.length;l++)n=(l+1)%s.length,a+=(r=Math.abs(o.cross(s[n],s[l])))*(o.dot(s[n],s[n])+o.dot(s[n],s[l])+o.dot(s[l],s[l])),i+=r;return t/6*(a/i)},n.translate=function(e,t,r){var n;if(r)for(n=0;n<e.length;n++)e[n].x+=t.x*r,e[n].y+=t.y*r;else for(n=0;n<e.length;n++)e[n].x+=t.x,e[n].y+=t.y;return e},n.rotate=function(e,t,r){if(0!==t){for(var n=Math.cos(t),o=Math.sin(t),a=0;a<e.length;a++){var i=e[a],s=i.x-r.x,l=i.y-r.y;i.x=r.x+(s*n-l*o),i.y=r.y+(s*o+l*n)}return e}},n.contains=function(e,t){for(var r=0;r<e.length;r++){var n=e[r],o=e[(r+1)%e.length];if((t.x-n.x)*(o.y-n.y)+(t.y-n.y)*(n.x-o.x)>0)return!1}return!0},n.scale=function(e,t,r,a){if(1===t&&1===r)return e;var i,s;a=a||n.centre(e);for(var l=0;l<e.length;l++)i=e[l],s=o.sub(i,a),e[l].x=a.x+s.x*t,e[l].y=a.y+s.y*r;return e},n.chamfer=function(e,t,r,n,i){t="number"==typeof t?[t]:t||[8],r=void 0!==r?r:-1,n=n||2,i=i||14;for(var s=[],l=0;l<e.length;l++){var p=e[l-1>=0?l-1:e.length-1],u=e[l],c=e[(l+1)%e.length],d=t[l<t.length?l:t.length-1];if(0!==d){var h=o.normalise({x:u.y-p.y,y:p.x-u.x}),m=o.normalise({x:c.y-u.y,y:u.x-c.x}),f=Math.sqrt(2*Math.pow(d,2)),y=o.mult(a.clone(h),d),g=o.normalise(o.mult(o.add(h,m),.5)),v=o.sub(u,o.mult(g,f)),b=r;-1===r&&(b=1.75*Math.pow(d,.32)),(b=a.clamp(b,n,i))%2==1&&(b+=1);for(var x=Math.acos(o.dot(h,m))/b,_=0;_<b;_++)s.push(o.add(o.rotate(y,x*_),v))}else s.push(u)}return s},n.clockwiseSort=function(e){var t=n.mean(e);return e.sort((function(e,r){return o.angle(t,e)-o.angle(t,r)})),e},n.isConvex=function(e){var t,r,n,o,a=0,i=e.length;if(i<3)return null;for(t=0;t<i;t++)if(n=(t+2)%i,o=(e[r=(t+1)%i].x-e[t].x)*(e[n].y-e[r].y),(o-=(e[r].y-e[t].y)*(e[n].x-e[r].x))<0?a|=1:o>0&&(a|=2),3===a)return!1;return 0!==a||null},n.hull=function(e){var t,r,n=[],a=[];for((e=e.slice(0)).sort((function(e,t){var r=e.x-t.x;return 0!==r?r:e.y-t.y})),r=0;r<e.length;r+=1){for(t=e[r];a.length>=2&&o.cross3(a[a.length-2],a[a.length-1],t)<=0;)a.pop();a.push(t)}for(r=e.length-1;r>=0;r-=1){for(t=e[r];n.length>=2&&o.cross3(n[n.length-2],n[n.length-1],t)<=0;)n.pop();n.push(t)}return n.pop(),a.pop(),n.concat(a)}},{"../core/Common":14,"../geometry/Vector":28}],30:[function(e,t,r){var n=t.exports=e("../core/Matter");n.Body=e("../body/Body"),n.Composite=e("../body/Composite"),n.World=e("../body/World"),n.Contact=e("../collision/Contact"),n.Detector=e("../collision/Detector"),n.Grid=e("../collision/Grid"),n.Pairs=e("../collision/Pairs"),n.Pair=e("../collision/Pair"),n.Query=e("../collision/Query"),n.Resolver=e("../collision/Resolver"),n.SAT=e("../collision/SAT"),n.Constraint=e("../constraint/Constraint"),n.MouseConstraint=e("../constraint/MouseConstraint"),n.Common=e("../core/Common"),n.Engine=e("../core/Engine"),n.Events=e("../core/Events"),n.Mouse=e("../core/Mouse"),n.Runner=e("../core/Runner"),n.Sleeping=e("../core/Sleeping"),n.Plugin=e("../core/Plugin"),n.Bodies=e("../factory/Bodies"),n.Composites=e("../factory/Composites"),n.Axes=e("../geometry/Axes"),n.Bounds=e("../geometry/Bounds"),n.Svg=e("../geometry/Svg"),n.Vector=e("../geometry/Vector"),n.Vertices=e("../geometry/Vertices"),n.Render=e("../render/Render"),n.RenderPixi=e("../render/RenderPixi"),n.World.add=n.Composite.add,n.World.remove=n.Composite.remove,n.World.addComposite=n.Composite.addComposite,n.World.addBody=n.Composite.addBody,n.World.addConstraint=n.Composite.addConstraint,n.World.clear=n.Composite.clear,n.Engine.run=n.Runner.run},{"../body/Body":1,"../body/Composite":2,"../body/World":3,"../collision/Contact":4,"../collision/Detector":5,"../collision/Grid":6,"../collision/Pair":7,"../collision/Pairs":8,"../collision/Query":9,"../collision/Resolver":10,"../collision/SAT":11,"../constraint/Constraint":12,"../constraint/MouseConstraint":13,"../core/Common":14,"../core/Engine":15,"../core/Events":16,"../core/Matter":17,"../core/Metrics":18,"../core/Mouse":19,"../core/Plugin":20,"../core/Runner":21,"../core/Sleeping":22,"../factory/Bodies":23,"../factory/Composites":24,"../geometry/Axes":25,"../geometry/Bounds":26,"../geometry/Svg":27,"../geometry/Vector":28,"../geometry/Vertices":29,"../render/Render":31,"../render/RenderPixi":32}],31:[function(e,t,r){var n={};t.exports=n;var o=e("../core/Common"),a=e("../body/Composite"),i=e("../geometry/Bounds"),s=e("../core/Events"),l=e("../collision/Grid"),p=e("../geometry/Vector"),u=e("../core/Mouse");!function(){var e,t;"undefined"!=typeof window&&(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout((function(){e(o.now())}),1e3/60)},t=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),n.create=function(e){var t={controller:n,engine:null,element:null,canvas:null,mouse:null,frameRequestId:null,options:{width:800,height:600,pixelRatio:1,background:"#18181d",wireframeBackground:"#0f0f13",hasBounds:!!e.bounds,enabled:!0,wireframes:!0,showSleeping:!0,showDebug:!1,showBroadphase:!1,showBounds:!1,showVelocity:!1,showCollisions:!1,showSeparations:!1,showAxes:!1,showPositions:!1,showAngleIndicator:!1,showIds:!1,showShadows:!1,showVertexNumbers:!1,showConvexHulls:!1,showInternalEdges:!1,showMousePosition:!1}},a=o.extend(t,e);return a.canvas&&(a.canvas.width=a.options.width||a.canvas.width,a.canvas.height=a.options.height||a.canvas.height),a.mouse=e.mouse,a.engine=e.engine,a.canvas=a.canvas||r(a.options.width,a.options.height),a.context=a.canvas.getContext("2d"),a.textures={},a.bounds=a.bounds||{min:{x:0,y:0},max:{x:a.canvas.width,y:a.canvas.height}},1!==a.options.pixelRatio&&n.setPixelRatio(a,a.options.pixelRatio),o.isElement(a.element)?a.element.appendChild(a.canvas):a.canvas.parentNode||o.log("Render.create: options.element was undefined, render.canvas was created but not appended","warn"),a},n.run=function(t){!function r(o){t.frameRequestId=e(r),n.world(t)}()},n.stop=function(e){t(e.frameRequestId)},n.setPixelRatio=function(e,t){var r=e.options,n=e.canvas;"auto"===t&&(t=c(n)),r.pixelRatio=t,n.setAttribute("data-pixel-ratio",t),n.width=r.width*t,n.height=r.height*t,n.style.width=r.width+"px",n.style.height=r.height+"px",e.context.scale(t,t)},n.lookAt=function(e,t,r,n){n=void 0===n||n,t=o.isArray(t)?t:[t],r=r||{x:0,y:0};for(var a={min:{x:1/0,y:1/0},max:{x:-1/0,y:-1/0}},i=0;i<t.length;i+=1){var s=t[i],l=s.bounds?s.bounds.min:s.min||s.position||s,p=s.bounds?s.bounds.max:s.max||s.position||s;l&&p&&(l.x<a.min.x&&(a.min.x=l.x),p.x>a.max.x&&(a.max.x=p.x),l.y<a.min.y&&(a.min.y=l.y),p.y>a.max.y&&(a.max.y=p.y))}var c=a.max.x-a.min.x+2*r.x,d=a.max.y-a.min.y+2*r.y,h=e.canvas.height,m=e.canvas.width/h,f=c/d,y=1,g=1;f>m?g=f/m:y=m/f,e.options.hasBounds=!0,e.bounds.min.x=a.min.x,e.bounds.max.x=a.min.x+c*y,e.bounds.min.y=a.min.y,e.bounds.max.y=a.min.y+d*g,n&&(e.bounds.min.x+=.5*c-c*y*.5,e.bounds.max.x+=.5*c-c*y*.5,e.bounds.min.y+=.5*d-d*g*.5,e.bounds.max.y+=.5*d-d*g*.5),e.bounds.min.x-=r.x,e.bounds.max.x-=r.x,e.bounds.min.y-=r.y,e.bounds.max.y-=r.y,e.mouse&&(u.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),u.setOffset(e.mouse,e.bounds.min))},n.startViewTransform=function(e){var t=e.bounds.max.x-e.bounds.min.x,r=e.bounds.max.y-e.bounds.min.y,n=t/e.options.width,o=r/e.options.height;e.context.scale(1/n,1/o),e.context.translate(-e.bounds.min.x,-e.bounds.min.y)},n.endViewTransform=function(e){e.context.setTransform(e.options.pixelRatio,0,0,e.options.pixelRatio,0,0)},n.world=function(e){var t,r=e.engine,o=r.world,c=e.canvas,d=e.context,m=e.options,f=a.allBodies(o),y=a.allConstraints(o),g=m.wireframes?m.wireframeBackground:m.background,v=[],b=[],x={timestamp:r.timing.timestamp};if(s.trigger(e,"beforeRender",x),e.currentBackground!==g&&h(e,g),d.globalCompositeOperation="source-in",d.fillStyle="transparent",d.fillRect(0,0,c.width,c.height),d.globalCompositeOperation="source-over",m.hasBounds){for(t=0;t<f.length;t++){var _=f[t];i.overlaps(_.bounds,e.bounds)&&v.push(_)}for(t=0;t<y.length;t++){var w=y[t],S=w.bodyA,M=w.bodyB,C=w.pointA,T=w.pointB;S&&(C=p.add(S.position,w.pointA)),M&&(T=p.add(M.position,w.pointB)),C&&T&&(i.contains(e.bounds,C)||i.contains(e.bounds,T))&&b.push(w)}n.startViewTransform(e),e.mouse&&(u.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),u.setOffset(e.mouse,e.bounds.min))}else b=y,v=f;!m.wireframes||r.enableSleeping&&m.showSleeping?n.bodies(e,v,d):(m.showConvexHulls&&n.bodyConvexHulls(e,v,d),n.bodyWireframes(e,v,d)),m.showBounds&&n.bodyBounds(e,v,d),(m.showAxes||m.showAngleIndicator)&&n.bodyAxes(e,v,d),m.showPositions&&n.bodyPositions(e,v,d),m.showVelocity&&n.bodyVelocity(e,v,d),m.showIds&&n.bodyIds(e,v,d),m.showSeparations&&n.separations(e,r.pairs.list,d),m.showCollisions&&n.collisions(e,r.pairs.list,d),m.showVertexNumbers&&n.vertexNumbers(e,v,d),m.showMousePosition&&n.mousePosition(e,e.mouse,d),n.constraints(b,d),m.showBroadphase&&r.broadphase.controller===l&&n.grid(e,r.broadphase,d),m.showDebug&&n.debug(e,d),m.hasBounds&&n.endViewTransform(e),s.trigger(e,"afterRender",x)},n.debug=function(e,t){var r=t,n=e.engine,o=n.world,i=n.metrics,s=e.options;if(a.allBodies(o),n.timing.timestamp-(e.debugTimestamp||0)>=500){var l="";i.timing&&(l+="fps: "+Math.round(i.timing.fps)+"    "),e.debugString=l,e.debugTimestamp=n.timing.timestamp}if(e.debugString){r.font="12px Arial",s.wireframes?r.fillStyle="rgba(255,255,255,0.5)":r.fillStyle="rgba(0,0,0,0.5)";for(var p=e.debugString.split("\n"),u=0;u<p.length;u++)r.fillText(p[u],50,50+18*u)}},n.constraints=function(e,t){for(var r=t,n=0;n<e.length;n++){var a=e[n];if(a.render.visible&&a.pointA&&a.pointB){var i,s,l=a.bodyA,u=a.bodyB;if(i=l?p.add(l.position,a.pointA):a.pointA,"pin"===a.render.type)r.beginPath(),r.arc(i.x,i.y,3,0,2*Math.PI),r.closePath();else{if(s=u?p.add(u.position,a.pointB):a.pointB,r.beginPath(),r.moveTo(i.x,i.y),"spring"===a.render.type)for(var c,d=p.sub(s,i),h=p.perp(p.normalise(d)),m=Math.ceil(o.clamp(a.length/5,12,20)),f=1;f<m;f+=1)c=f%2==0?1:-1,r.lineTo(i.x+d.x*(f/m)+h.x*c*4,i.y+d.y*(f/m)+h.y*c*4);r.lineTo(s.x,s.y)}a.render.lineWidth&&(r.lineWidth=a.render.lineWidth,r.strokeStyle=a.render.strokeStyle,r.stroke()),a.render.anchors&&(r.fillStyle=a.render.strokeStyle,r.beginPath(),r.arc(i.x,i.y,3,0,2*Math.PI),r.arc(s.x,s.y,3,0,2*Math.PI),r.closePath(),r.fill())}}},n.bodyShadows=function(e,t,r){for(var n=r,o=(e.engine,0);o<t.length;o++){var a=t[o];if(a.render.visible){if(a.circleRadius)n.beginPath(),n.arc(a.position.x,a.position.y,a.circleRadius,0,2*Math.PI),n.closePath();else{n.beginPath(),n.moveTo(a.vertices[0].x,a.vertices[0].y);for(var i=1;i<a.vertices.length;i++)n.lineTo(a.vertices[i].x,a.vertices[i].y);n.closePath()}var s=a.position.x-.5*e.options.width,l=a.position.y-.2*e.options.height,p=Math.abs(s)+Math.abs(l);n.shadowColor="rgba(0,0,0,0.15)",n.shadowOffsetX=.05*s,n.shadowOffsetY=.05*l,n.shadowBlur=1+12*Math.min(1,p/1e3),n.fill(),n.shadowColor=null,n.shadowOffsetX=null,n.shadowOffsetY=null,n.shadowBlur=null}}},n.bodies=function(e,t,r){var n,o,a,i,s=r,l=(e.engine,e.options),p=l.showInternalEdges||!l.wireframes;for(a=0;a<t.length;a++)if((n=t[a]).render.visible)for(i=n.parts.length>1?1:0;i<n.parts.length;i++)if((o=n.parts[i]).render.visible){if(l.showSleeping&&n.isSleeping?s.globalAlpha=.5*o.render.opacity:1!==o.render.opacity&&(s.globalAlpha=o.render.opacity),o.render.sprite&&o.render.sprite.texture&&!l.wireframes){var u=o.render.sprite,c=d(e,u.texture);s.translate(o.position.x,o.position.y),s.rotate(o.angle),s.drawImage(c,c.width*-u.xOffset*u.xScale,c.height*-u.yOffset*u.yScale,c.width*u.xScale,c.height*u.yScale),s.rotate(-o.angle),s.translate(-o.position.x,-o.position.y)}else{if(o.circleRadius)s.beginPath(),s.arc(o.position.x,o.position.y,o.circleRadius,0,2*Math.PI);else{s.beginPath(),s.moveTo(o.vertices[0].x,o.vertices[0].y);for(var h=1;h<o.vertices.length;h++)!o.vertices[h-1].isInternal||p?s.lineTo(o.vertices[h].x,o.vertices[h].y):s.moveTo(o.vertices[h].x,o.vertices[h].y),o.vertices[h].isInternal&&!p&&s.moveTo(o.vertices[(h+1)%o.vertices.length].x,o.vertices[(h+1)%o.vertices.length].y);s.lineTo(o.vertices[0].x,o.vertices[0].y),s.closePath()}l.wireframes?(s.lineWidth=1,s.strokeStyle="#bbb",s.stroke()):(s.fillStyle=o.render.fillStyle,o.render.lineWidth&&(s.lineWidth=o.render.lineWidth,s.strokeStyle=o.render.strokeStyle,s.stroke()),s.fill())}s.globalAlpha=1}},n.bodyWireframes=function(e,t,r){var n,o,a,i,s,l=r,p=e.options.showInternalEdges;for(l.beginPath(),a=0;a<t.length;a++)if((n=t[a]).render.visible)for(s=n.parts.length>1?1:0;s<n.parts.length;s++){for(o=n.parts[s],l.moveTo(o.vertices[0].x,o.vertices[0].y),i=1;i<o.vertices.length;i++)!o.vertices[i-1].isInternal||p?l.lineTo(o.vertices[i].x,o.vertices[i].y):l.moveTo(o.vertices[i].x,o.vertices[i].y),o.vertices[i].isInternal&&!p&&l.moveTo(o.vertices[(i+1)%o.vertices.length].x,o.vertices[(i+1)%o.vertices.length].y);l.lineTo(o.vertices[0].x,o.vertices[0].y)}l.lineWidth=1,l.strokeStyle="#bbb",l.stroke()},n.bodyConvexHulls=function(e,t,r){var n,o,a,i=r;for(i.beginPath(),o=0;o<t.length;o++)if((n=t[o]).render.visible&&1!==n.parts.length){for(i.moveTo(n.vertices[0].x,n.vertices[0].y),a=1;a<n.vertices.length;a++)i.lineTo(n.vertices[a].x,n.vertices[a].y);i.lineTo(n.vertices[0].x,n.vertices[0].y)}i.lineWidth=1,i.strokeStyle="rgba(255,255,255,0.2)",i.stroke()},n.vertexNumbers=function(e,t,r){var n,o,a,i=r;for(n=0;n<t.length;n++){var s=t[n].parts;for(a=s.length>1?1:0;a<s.length;a++){var l=s[a];for(o=0;o<l.vertices.length;o++)i.fillStyle="rgba(255,255,255,0.2)",i.fillText(n+"_"+o,l.position.x+.8*(l.vertices[o].x-l.position.x),l.position.y+.8*(l.vertices[o].y-l.position.y))}}},n.mousePosition=function(e,t,r){var n=r;n.fillStyle="rgba(255,255,255,0.8)",n.fillText(t.position.x+"  "+t.position.y,t.position.x+5,t.position.y-5)},n.bodyBounds=function(e,t,r){var n=r,o=(e.engine,e.options);n.beginPath();for(var a=0;a<t.length;a++)if(t[a].render.visible)for(var i=t[a].parts,s=i.length>1?1:0;s<i.length;s++){var l=i[s];n.rect(l.bounds.min.x,l.bounds.min.y,l.bounds.max.x-l.bounds.min.x,l.bounds.max.y-l.bounds.min.y)}o.wireframes?n.strokeStyle="rgba(255,255,255,0.08)":n.strokeStyle="rgba(0,0,0,0.1)",n.lineWidth=1,n.stroke()},n.bodyAxes=function(e,t,r){var n,o,a,i,s=r,l=(e.engine,e.options);for(s.beginPath(),o=0;o<t.length;o++){var p=t[o],u=p.parts;if(p.render.visible)if(l.showAxes)for(a=u.length>1?1:0;a<u.length;a++)for(n=u[a],i=0;i<n.axes.length;i++){var c=n.axes[i];s.moveTo(n.position.x,n.position.y),s.lineTo(n.position.x+20*c.x,n.position.y+20*c.y)}else for(a=u.length>1?1:0;a<u.length;a++)for(n=u[a],i=0;i<n.axes.length;i++)s.moveTo(n.position.x,n.position.y),s.lineTo((n.vertices[0].x+n.vertices[n.vertices.length-1].x)/2,(n.vertices[0].y+n.vertices[n.vertices.length-1].y)/2)}l.wireframes?(s.strokeStyle="indianred",s.lineWidth=1):(s.strokeStyle="rgba(255, 255, 255, 0.4)",s.globalCompositeOperation="overlay",s.lineWidth=2),s.stroke(),s.globalCompositeOperation="source-over"},n.bodyPositions=function(e,t,r){var n,o,a,i,s=r,l=(e.engine,e.options);for(s.beginPath(),a=0;a<t.length;a++)if((n=t[a]).render.visible)for(i=0;i<n.parts.length;i++)o=n.parts[i],s.arc(o.position.x,o.position.y,3,0,2*Math.PI,!1),s.closePath();for(l.wireframes?s.fillStyle="indianred":s.fillStyle="rgba(0,0,0,0.5)",s.fill(),s.beginPath(),a=0;a<t.length;a++)(n=t[a]).render.visible&&(s.arc(n.positionPrev.x,n.positionPrev.y,2,0,2*Math.PI,!1),s.closePath());s.fillStyle="rgba(255,165,0,0.8)",s.fill()},n.bodyVelocity=function(e,t,r){var n=r;n.beginPath();for(var o=0;o<t.length;o++){var a=t[o];a.render.visible&&(n.moveTo(a.position.x,a.position.y),n.lineTo(a.position.x+2*(a.position.x-a.positionPrev.x),a.position.y+2*(a.position.y-a.positionPrev.y)))}n.lineWidth=3,n.strokeStyle="cornflowerblue",n.stroke()},n.bodyIds=function(e,t,r){var n,o,a=r;for(n=0;n<t.length;n++)if(t[n].render.visible){var i=t[n].parts;for(o=i.length>1?1:0;o<i.length;o++){var s=i[o];a.font="12px Arial",a.fillStyle="rgba(255,255,255,0.5)",a.fillText(s.id,s.position.x+10,s.position.y-10)}}},n.collisions=function(e,t,r){var n,o,a,i,s=r,l=e.options;for(s.beginPath(),a=0;a<t.length;a++)if((n=t[a]).isActive)for(o=n.collision,i=0;i<n.activeContacts.length;i++){var p=n.activeContacts[i].vertex;s.rect(p.x-1.5,p.y-1.5,3.5,3.5)}for(l.wireframes?s.fillStyle="rgba(255,255,255,0.7)":s.fillStyle="orange",s.fill(),s.beginPath(),a=0;a<t.length;a++)if((n=t[a]).isActive&&(o=n.collision,n.activeContacts.length>0)){var u=n.activeContacts[0].vertex.x,c=n.activeContacts[0].vertex.y;2===n.activeContacts.length&&(u=(n.activeContacts[0].vertex.x+n.activeContacts[1].vertex.x)/2,c=(n.activeContacts[0].vertex.y+n.activeContacts[1].vertex.y)/2),o.bodyB===o.supports[0].body||!0===o.bodyA.isStatic?s.moveTo(u-8*o.normal.x,c-8*o.normal.y):s.moveTo(u+8*o.normal.x,c+8*o.normal.y),s.lineTo(u,c)}l.wireframes?s.strokeStyle="rgba(255,165,0,0.7)":s.strokeStyle="orange",s.lineWidth=1,s.stroke()},n.separations=function(e,t,r){var n,o,a,i,s,l=r,p=e.options;for(l.beginPath(),s=0;s<t.length;s++)if((n=t[s]).isActive){a=(o=n.collision).bodyA;var u=1;(i=o.bodyB).isStatic||a.isStatic||(u=.5),i.isStatic&&(u=0),l.moveTo(i.position.x,i.position.y),l.lineTo(i.position.x-o.penetration.x*u,i.position.y-o.penetration.y*u),u=1,i.isStatic||a.isStatic||(u=.5),a.isStatic&&(u=0),l.moveTo(a.position.x,a.position.y),l.lineTo(a.position.x+o.penetration.x*u,a.position.y+o.penetration.y*u)}p.wireframes?l.strokeStyle="rgba(255,165,0,0.5)":l.strokeStyle="orange",l.stroke()},n.grid=function(e,t,r){var n=r;e.options.wireframes?n.strokeStyle="rgba(255,180,0,0.1)":n.strokeStyle="rgba(255,180,0,0.5)",n.beginPath();for(var a=o.keys(t.buckets),i=0;i<a.length;i++){var s=a[i];if(!(t.buckets[s].length<2)){var l=s.split(/C|R/);n.rect(.5+parseInt(l[1],10)*t.bucketWidth,.5+parseInt(l[2],10)*t.bucketHeight,t.bucketWidth,t.bucketHeight)}}n.lineWidth=1,n.stroke()},n.inspector=function(e,t){e.engine;var r,n=e.selected,o=e.render,a=o.options;if(a.hasBounds){var i=o.bounds.max.x-o.bounds.min.x,s=o.bounds.max.y-o.bounds.min.y,l=i/o.options.width,p=s/o.options.height;t.scale(1/l,1/p),t.translate(-o.bounds.min.x,-o.bounds.min.y)}for(var u=0;u<n.length;u++){var c=n[u].data;switch(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle="rgba(255,165,0,0.9)",t.setLineDash([1,2]),c.type){case"body":r=c.bounds,t.beginPath(),t.rect(Math.floor(r.min.x-3),Math.floor(r.min.y-3),Math.floor(r.max.x-r.min.x+6),Math.floor(r.max.y-r.min.y+6)),t.closePath(),t.stroke();break;case"constraint":var d=c.pointA;c.bodyA&&(d=c.pointB),t.beginPath(),t.arc(d.x,d.y,10,0,2*Math.PI),t.closePath(),t.stroke()}t.setLineDash([]),t.translate(-.5,-.5)}null!==e.selectStart&&(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle="rgba(255,165,0,0.6)",t.fillStyle="rgba(255,165,0,0.1)",r=e.selectBounds,t.beginPath(),t.rect(Math.floor(r.min.x),Math.floor(r.min.y),Math.floor(r.max.x-r.min.x),Math.floor(r.max.y-r.min.y)),t.closePath(),t.stroke(),t.fill(),t.translate(-.5,-.5)),a.hasBounds&&t.setTransform(1,0,0,1,0,0)};var r=function(e,t){var r=document.createElement("canvas");return r.width=e,r.height=t,r.oncontextmenu=function(){return!1},r.onselectstart=function(){return!1},r},c=function(e){var t=e.getContext("2d");return(window.devicePixelRatio||1)/(t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1)},d=function(e,t){var r=e.textures[t];return r||((r=e.textures[t]=new Image).src=t,r)},h=function(e,t){var r=t;/(jpg|gif|png)$/.test(t)&&(r="url("+t+")"),e.canvas.style.background=r,e.canvas.style.backgroundSize="contain",e.currentBackground=t}}()},{"../body/Composite":2,"../collision/Grid":6,"../core/Common":14,"../core/Events":16,"../core/Mouse":19,"../geometry/Bounds":26,"../geometry/Vector":28}],32:[function(e,t,r){var n={};t.exports=n;var o=e("../geometry/Bounds"),a=e("../body/Composite"),i=e("../core/Common"),s=e("../core/Events"),l=e("../geometry/Vector");!function(){var e,t;"undefined"!=typeof window&&(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout((function(){e(i.now())}),1e3/60)},t=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),n.create=function(e){i.warn("RenderPixi.create: Matter.RenderPixi is deprecated (see docs)");var t={controller:n,engine:null,element:null,frameRequestId:null,canvas:null,renderer:null,container:null,spriteContainer:null,pixiOptions:null,options:{width:800,height:600,background:"#fafafa",wireframeBackground:"#222",hasBounds:!1,enabled:!0,wireframes:!0,showSleeping:!0,showDebug:!1,showBroadphase:!1,showBounds:!1,showVelocity:!1,showCollisions:!1,showAxes:!1,showPositions:!1,showAngleIndicator:!1,showIds:!1,showShadows:!1}},r=i.extend(t,e),o=!r.options.wireframes&&"transparent"===r.options.background;return r.pixiOptions=r.pixiOptions||{view:r.canvas,transparent:o,antialias:!0,backgroundColor:e.background},r.mouse=e.mouse,r.engine=e.engine,r.renderer=r.renderer||new PIXI.WebGLRenderer(r.options.width,r.options.height,r.pixiOptions),r.container=r.container||new PIXI.Container,r.spriteContainer=r.spriteContainer||new PIXI.Container,r.canvas=r.canvas||r.renderer.view,r.bounds=r.bounds||{min:{x:0,y:0},max:{x:r.options.width,y:r.options.height}},s.on(r.engine,"beforeUpdate",(function(){n.clear(r)})),r.textures={},r.sprites={},r.primitives={},r.container.addChild(r.spriteContainer),i.isElement(r.element)?r.element.appendChild(r.canvas):i.warn('No "render.element" passed, "render.canvas" was not inserted into document.'),r.canvas.oncontextmenu=function(){return!1},r.canvas.onselectstart=function(){return!1},r},n.run=function(t){!function r(o){t.frameRequestId=e(r),n.world(t)}()},n.stop=function(e){t(e.frameRequestId)},n.clear=function(e){for(var t=e.container,r=e.spriteContainer;t.children[0];)t.removeChild(t.children[0]);for(;r.children[0];)r.removeChild(r.children[0]);var n=e.sprites["bg-0"];e.textures={},e.sprites={},e.primitives={},e.sprites["bg-0"]=n,n&&t.addChildAt(n,0),e.container.addChild(e.spriteContainer),e.currentBackground=null,t.scale.set(1,1),t.position.set(0,0)},n.setBackground=function(e,t){if(e.currentBackground!==t){var r=t.indexOf&&-1!==t.indexOf("#"),n=e.sprites["bg-0"];if(r){var o=i.colorToNumber(t);e.renderer.backgroundColor=o,n&&e.container.removeChild(n)}else if(!n){var a=u(e,t);(n=e.sprites["bg-0"]=new PIXI.Sprite(a)).position.x=0,n.position.y=0,e.container.addChildAt(n,0)}e.currentBackground=t}},n.world=function(e){var t,r=e.engine.world,i=e.renderer,s=e.container,p=e.options,u=a.allBodies(r),c=a.allConstraints(r),d=[];p.wireframes?n.setBackground(e,p.wireframeBackground):n.setBackground(e,p.background);var h=e.bounds.max.x-e.bounds.min.x,m=e.bounds.max.y-e.bounds.min.y,f=h/e.options.width,y=m/e.options.height;if(p.hasBounds){for(t=0;t<u.length;t++){var g=u[t];g.render.sprite.visible=o.overlaps(g.bounds,e.bounds)}for(t=0;t<c.length;t++){var v=c[t],b=v.bodyA,x=v.bodyB,_=v.pointA,w=v.pointB;b&&(_=l.add(b.position,v.pointA)),x&&(w=l.add(x.position,v.pointB)),_&&w&&(o.contains(e.bounds,_)||o.contains(e.bounds,w))&&d.push(v)}s.scale.set(1/f,1/y),s.position.set(-e.bounds.min.x*(1/f),-e.bounds.min.y*(1/y))}else d=c;for(t=0;t<u.length;t++)n.body(e,u[t]);for(t=0;t<d.length;t++)n.constraint(e,d[t]);i.render(s)},n.constraint=function(e,t){e.engine;var r=t.bodyA,n=t.bodyB,o=t.pointA,a=t.pointB,s=e.container,l=t.render,p="c-"+t.id,u=e.primitives[p];u||(u=e.primitives[p]=new PIXI.Graphics),l.visible&&t.pointA&&t.pointB?(-1===i.indexOf(s.children,u)&&s.addChild(u),u.clear(),u.beginFill(0,0),u.lineStyle(l.lineWidth,i.colorToNumber(l.strokeStyle),1),r?u.moveTo(r.position.x+o.x,r.position.y+o.y):u.moveTo(o.x,o.y),n?u.lineTo(n.position.x+a.x,n.position.y+a.y):u.lineTo(a.x,a.y),u.endFill()):u.clear()},n.body=function(e,t){e.engine;var n=t.render;if(n.visible)if(n.sprite&&n.sprite.texture){var o="b-"+t.id,a=e.sprites[o],s=e.spriteContainer;a||(a=e.sprites[o]=r(e,t)),-1===i.indexOf(s.children,a)&&s.addChild(a),a.position.x=t.position.x,a.position.y=t.position.y,a.rotation=t.angle,a.scale.x=n.sprite.xScale||1,a.scale.y=n.sprite.yScale||1}else{var l="b-"+t.id,u=e.primitives[l],c=e.container;u||((u=e.primitives[l]=p(e,t)).initialAngle=t.angle),-1===i.indexOf(c.children,u)&&c.addChild(u),u.position.x=t.position.x,u.position.y=t.position.y,u.rotation=t.angle-u.initialAngle}};var r=function(e,t){var r=t.render.sprite.texture,n=u(e,r),o=new PIXI.Sprite(n);return o.anchor.x=t.render.sprite.xOffset,o.anchor.y=t.render.sprite.yOffset,o},p=function(e,t){var r,n=t.render,o=e.options,a=new PIXI.Graphics,s=i.colorToNumber(n.fillStyle),l=i.colorToNumber(n.strokeStyle),p=i.colorToNumber(n.strokeStyle),u=i.colorToNumber("#bbb"),c=i.colorToNumber("#CD5C5C");a.clear();for(var d=t.parts.length>1?1:0;d<t.parts.length;d++){r=t.parts[d],o.wireframes?(a.beginFill(0,0),a.lineStyle(1,u,1)):(a.beginFill(s,1),a.lineStyle(n.lineWidth,l,1)),a.moveTo(r.vertices[0].x-t.position.x,r.vertices[0].y-t.position.y);for(var h=1;h<r.vertices.length;h++)a.lineTo(r.vertices[h].x-t.position.x,r.vertices[h].y-t.position.y);a.lineTo(r.vertices[0].x-t.position.x,r.vertices[0].y-t.position.y),a.endFill(),(o.showAngleIndicator||o.showAxes)&&(a.beginFill(0,0),o.wireframes?a.lineStyle(1,c,1):a.lineStyle(1,p),a.moveTo(r.position.x-t.position.x,r.position.y-t.position.y),a.lineTo((r.vertices[0].x+r.vertices[r.vertices.length-1].x)/2-t.position.x,(r.vertices[0].y+r.vertices[r.vertices.length-1].y)/2-t.position.y),a.endFill())}return a},u=function(e,t){var r=e.textures[t];return r||(r=e.textures[t]=PIXI.Texture.fromImage(t)),r}}()},{"../body/Composite":2,"../core/Common":14,"../core/Events":16,"../geometry/Bounds":26,"../geometry/Vector":28}]},{},[30])(30)}).call(this,r(2))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tally=t.unique=t.undoSortBy=t.argsort=t.rotateClockwise=t.areSameWidth=t.areSameHeight=t.getHeight=t.getWidth=t.makeUnorderedPair=t.makePair=t.negate=t.normalize=t.unitVec=t.randn=t.randRange=t.range=t.cloestPointPairY=t.cloestPointPairX=t.distEuclid=t.distVerti=t.distHoriz=t.bottommostPoint=t.topmostPoint=t.leftmostPoint=t.rightmostPoint=t.vectorMean=t.minsBy=t.maxsBy=t.metasBy=t.mean=t.sum=t.min=t.max=void 0,t.max=function(e){return e.reduce((function(e,t){return Math.max(e,t)}),-1/0)},t.min=function(e){return e.reduce((function(e,t){return Math.min(e,t)}),1/0)},t.sum=function(e){return e.reduce((function(e,t){return e+t}),0)},t.mean=function(e){return t.sum(e)/e.length},t.metasBy=function(e,t,r){var n=e.map(t),o=r(n),a=Array();for(var i in e)n[i]==o&&a.push(e[i]);return a},t.maxsBy=function(e,r){return t.metasBy(e,r,t.max)},t.minsBy=function(e,r){return t.metasBy(e,r,t.min)},t.vectorMean=function(e){return{x:t.mean(e.map((function(e){return e.x}))),y:t.mean(e.map((function(e){return e.y})))}},t.rightmostPoint=function(e){return t.vectorMean(t.maxsBy(e,(function(e){return e.x})))},t.leftmostPoint=function(e){return t.vectorMean(t.minsBy(e,(function(e){return e.x})))},t.topmostPoint=function(e){return t.vectorMean(t.minsBy(e,(function(e){return e.y})))},t.bottommostPoint=function(e){return t.vectorMean(t.maxsBy(e,(function(e){return e.y})))},t.distHoriz=function(e,t){return Math.abs(e.x-t.x)},t.distVerti=function(e,t){return Math.abs(e.y-t.y)},t.distEuclid=function(e,t){return Math.hypot(e.x-t.x,e.y-t.y)};var n=function(e,t,r,n,o){for(var a=r(e.vertices),i=n(e.vertices),s=r(t.vertices),l=n(t.vertices),p=[a,s,1/0],u=1/0,c=0,d=[a,i];c<d.length;c++)for(var h=d[c],m=0,f=[s,l];m<f.length;m++){var y=f[m],g=o(h,y);g<u&&(p=[h,y,u=g])}return p};t.cloestPointPairX=function(e,r){return n(e,r,t.leftmostPoint,t.rightmostPoint,t.distHoriz)},t.cloestPointPairY=function(e,r){return n(e,r,t.topmostPoint,t.bottommostPoint,t.distVerti)},t.range=function(e){return e=Math.floor(e),Array.from(Array(e).keys())},t.randRange=function(e,t,r){void 0===r&&(r=1);var n=Math.floor(e),o=Math.floor(t);return n+Math.floor(Math.random()*(o-n)/r)*r},t.randn=function(){for(var e=0,r=0;0===e;)e=Math.random();for(;0===r;)r=Math.random();var n=Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*r);return(n=n/10+.5)>1||n<0?t.randn():n-.5},t.unitVec=function(e,r){var n=t.distEuclid(e,r);return{x:(r.x-e.x)/n,y:(r.y-e.y)/n}},t.normalize=function(e){var t=Math.hypot(e.x,e.y);return{x:e.x/t,y:e.y/t}},t.negate=function(e){return{x:-e.x,y:-e.y}},t.makePair=function(e,t){return{first:e,second:t}},t.makeUnorderedPair=function(e,r){var n;return r<e&&(e=(n=[r,e])[0],r=n[1]),t.makePair(e,r)},t.getWidth=function(e){var r=e.vertices.map((function(e){return e.x}));return t.max(r)-t.min(r)},t.getHeight=function(e){var r=e.vertices.map((function(e){return e.y}));return t.max(r)-t.min(r)},t.areSameHeight=function(e,r){return t.getHeight(e)==t.getHeight(r)},t.areSameWidth=function(e,r){return t.getWidth(e)==t.getWidth(r)},t.rotateClockwise=function(e,t){var r=t.width,n=t.height,o=e.createImage(n,r);t.loadPixels(),o.loadPixels();for(var a=0,i=0;i<r;i++)for(var s=n-1;s>=0;s--){for(var l=4*(i+s*r),p=0;p<4;p++)o.pixels[a+p]=t.pixels[l+p];a+=4}return t.updatePixels(),o.updatePixels(),o},t.argsort=function(e){return e.map((function(e,t){return[e,t]})).sort((function(e,t){return e[0]-t[0]})).map((function(e){e[0];return e[1]}))},t.undoSortBy=function(e,r){for(var n=t.argsort(r),o=Array(e.length),a=0;a<e.length;a++){o[n[a]]=e[a]}return o},t.unique=function(e){e.sort((function(e,t){return e-t}));for(var t=Array(),r=Number.MIN_SAFE_INTEGER,n=0,o=e;n<o.length;n++){var a=o[n];a!==r&&(t.push(a),r=a)}return t},t.tally=function(e){return e.map((function(t){var r=0;return void 0!==t&&(r=e.filter((function(e){return e===t})).length),r}))}},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.applyAntiGravity=t.applyAntiGravityTwoBody=t.antiGravity=t.antiGravityRanged=t.antiGravityManhattan=void 0;var s=i(r(0)),l=a(r(1));t.antiGravityManhattan=function(e,t,r){void 0===r&&(r=100);var n=r,o=l.distHoriz(e.position,t.position),a=l.distVerti(e.position,t.position),i=.5*(Math.sqrt(e.area)+Math.sqrt(t.area));return{x:o<1.5*i?n/(1e3+Math.pow(o,2)):0,y:a<1.5*i?n/(1e3+Math.pow(a,2)):0}},t.antiGravityRanged=function(e,t,r,n){void 0===r&&(r=100),void 0===n&&(n=3);var o=l.distEuclid(e.position,t.position),a=o<n*(.5*(Math.sqrt(e.area)+Math.sqrt(t.area)))?r/Math.pow(o,2):0,i=l.unitVec(e.position,t.position);return{x:a*i.x,y:a*i.y}},t.antiGravity=function(e,t,r){void 0===r&&(r=100);var n=l.distEuclid(e.position,t.position),o=r/Math.pow(n,2),a=l.unitVec(e.position,t.position);return{x:o*a.x,y:o*a.y}},t.applyAntiGravityTwoBody=function(e,r,n){var o,a;if(!r.isStatic&&!n.isStatic){var i=(o=r,a=n,t.antiGravityRanged(o,a,e.repulsionCoeff,e.repulsionRange));s.default.Body.applyForce(n,n.position,i),s.default.Body.applyForce(r,r.position,l.negate(i))}},t.applyAntiGravity=function(e,r){for(var n=0;n<r.length;n++)for(var o=n+1;o<r.length;o++)t.applyAntiGravityTwoBody(e,r[n],r[o])}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(5);new(n(r(11)).default)(o.Knollbot.run)},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t},i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,a){function i(e){try{l(n.next(e))}catch(e){a(e)}}function s(e){try{l(n.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((n=n.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var r,n,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,n=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},l=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),o=0;for(t=0;t<r;t++)for(var a=arguments[t],i=0,s=a.length;i<s;i++,o++)n[o]=a[i];return n},p=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Knollbot=void 0;var u=p(r(0)),c=r(6),d=a(r(1)),h=a(r(3)),m=a(r(7)),f=a(r(8)),y=a(r(9));!function(e){var t=this;e.run=function(e){var r=u.default.Engine.create(),n=r.world,o=u.default.Runner.create();n.forceOn=!0,n.gravity.y=0;var a=document.documentElement.clientWidth-20,p=document.documentElement.clientHeight-20,g=Math.floor(a/2),v=Math.floor(p/2),b=Math.floor(100)-5;c.imgPaths.length;n.pokeScale=c.params.pokeScale,n.pokeDecay=c.params.pokeDecay,n.alignmentForceCoeff=c.params.alignmentForceCoeff,n.alignmentForceRange=c.params.alignmentForceRange,n.alignmentForceWallRange=c.params.alignmentForceWallRange,n.alignmentForceOffset=c.params.alignmentForceOffset,n.repulsionCoeff=c.params.repulsionCoeff,n.repulsionRange=c.params.repulsionRange,n.groupingCoeff=c.params.groupingCoeff,n.displayLines=!0;var x,_,w={inertia:1/0,frictionAir:c.params.frictionAir,friction:c.params.friction},S=Promise.all(c.imgPaths.map((function(e){return i(t,void 0,void 0,(function(){var t,r,n,o,i;return s(this,(function(s){switch(s.label){case 0:return[4,(l=e,new Promise((function(e,t){var r=new Image;r.onload=function(){var t=r.naturalWidth,n=r.naturalHeight;e({width:t,height:n})},r.onerror=function(){t("There was some problem with the image.")},r.src=l})))];case 1:return t=s.sent(),r=b+t.width/2,n=b+t.height/2,o=d.randRange(r,a-r),i=d.randRange(n,p-n),[2,u.default.Bodies.rectangle(o,i,t.width,t.height,w)]}var l}))}))}))),M={isStatic:!0,friction:c.params.wallFriction},C=u.default.Bodies.rectangle(g,-b,a+100,200,M),T=u.default.Bodies.rectangle(g,p+b,a+100,200,M),E=u.default.Bodies.rectangle(-b,v,200,p+100,M),N=u.default.Bodies.rectangle(a+b,v,200,p+100,M),P=u.default.Mouse.create(document.body),A=u.default.Constraint.create({pointA:P.position,pointB:{x:0,y:0},stiffness:.2,render:{visible:!1}}),I=u.default.MouseConstraint.create(r,{mouse:P,constraint:A});e.preload=function(){i(t,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return[4,S];case 1:return e=t.sent(),x=l(e,[C,T,E,N]),u.default.World.add(n,x),u.default.World.add(n,I),u.default.Runner.run(o,r),[2]}}))})),_=c.imgPaths.map(e.loadImage)},e.setup=function(){e.createCanvas(a,p)},e.draw=function(){for(var t in e.background("#247c41"),e.fill(0),_){var r=x[t],o=_[t],i=d.getWidth(r),s=d.getHeight(r),l=Math.floor(r.position.x-i/2),u=Math.floor(r.position.y-s/2);e.image(o,l,u)}for(t=0;t<4;t++){r=x[_.length+t],i=d.getWidth(r),s=d.getHeight(r),l=Math.floor(r.position.x-i/2),u=Math.floor(r.position.y-s/2);e.noStroke(),e.rect(l,u,i,s)}if(n.displayLines){for(var h=x.slice(0,x.length-4),m=0,f=y.getAttractorXs(h,n.alignmentForceRange);m<f.length;m++){l=f[m];e.stroke(c.params.colorLinesVertical),e.line(l,5,l,p-5)}for(var g=0,v=y.getAttractorYs(h,n.alignmentForceRange);g<v.length;g++){u=v[g];e.stroke(c.params.colorLinesHorizontal),e.line(5,u,a-5,u)}}};var O=0;u.default.Events.on(r,"beforeUpdate",(function(e){(O+=1)%300==0&&console.log("counter: ",O),n.forceOn&&(O<180?m.applyGrouping(n,x):O<240?h.applyAntiGravity(n,x):y.applyAlignment(n,x),O%10==9&&(n.pokeScale*=n.pokeDecay),f.applyRandomPokes(n,x))})),document.addEventListener("keydown",(function(e){"Space"===e.code&&(n.forceOn=!n.forceOn,console.log("Toggled force: "+n.forceOn)),"KeyL"===e.code&&(n.displayLines=!n.displayLines,console.log("Toggled displayLines: "+n.displayLines))})),document.addEventListener("dblclick",(function(){console.log("--- Double click at t="+O+" ---");for(var t=0;t<x.length-4;t++){var r=x[t];if(!r.isStatic&&u.default.Bounds.contains(r.bounds,P.position)){u.default.Body.rotate(r,Math.PI/2),_[t]=d.rotateClockwise(e,_[t]);break}}})),document.addEventListener("touchmove",(function(t){var r,n=t.changedTouches.item(0),o=null!==(r=null==n?void 0:n.rotationAngle)&&void 0!==r?r:0;console.log("--- Touch rotation activated at t="+O+" ---"),console.log("    rotation angle = "+o+" (deg)");for(var a=0;a<x.length-4;a++){var i=x[a];if(!i.isStatic&&u.default.Bounds.contains(i.bounds,P.position)&&o>2){u.default.Body.rotate(i,Math.PI/2),_[a]=d.rotateClockwise(e,_[a]);break}}}))}}(t.Knollbot||(t.Knollbot={}))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.params=t.imgPaths=void 0;t.imgPaths=["blue_1x2.png","blue_1x2.png","blue_1x2.png","blue_1x2.png","blue_1x2.png","blue_1x3.png","blue_1x3.png","green_1x2.png","green_1x2.png","green_1x2.png","green_1x2.png","green_2x2.png","green_2x2.png","orange_2x1.png","orange_2x1.png","orange_2x1.png","orange_2x1.png","orange_2x1.png","orange_2x1.png","orange_2x3.png","orange_2x3.png","red_1x4.png","red_1x4.png","red_1x4.png","red_2x2.png","red_2x2.png","yellow_2x1.png","yellow_2x1.png","yellow_2x1.png","yellow_2x1.png","yellow_2x1.png","yellow_3x2.png","yellow_3x2.png","yellow_3x2.png"].map((function(e){return"./lego/"+e})),t.params={frictionAir:.08,friction:.003,wallFriction:.01,pokeScale:.05,pokeDecay:.94,alignmentForceCoeff:.001,alignmentForceRange:30,alignmentForceWallRange:15,alignmentForceOffset:.007,repulsionCoeff:100,repulsionRange:3,groupingCoeff:400,colorLinesVertical:"#EF6B22",colorLinesHorizontal:"#F29089"}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.applyGrouping=t.applyAntiGravityDisjoint=void 0;var s=i(r(0)),l=r(3),p=a(r(1));t.applyAntiGravityDisjoint=function(e,t,r,n){for(var o,a,i=0;i<t.length;i++)for(var u=i+1;u<t.length;u++){var c=t[i],d=t[u];if(!c.isStatic&&!d.isStatic){var h=(o=c,a=d,l.antiGravityRanged(o,a,e.repulsionCoeff,e.repulsionRange));r.areConnected(i,u)&&(h.x=0),n.areConnected(i,u)&&(h.y=0),s.default.Body.applyForce(d,d.position,h),s.default.Body.applyForce(c,c.position,p.negate(h))}}};var u=function(e,t,r){var n,o;if(!t.isStatic&&!r.isStatic){var a=(n=t,o=r,l.antiGravity(n,o,e.groupingCoeff));(p.areSameWidth(t,r)||p.areSameHeight(t,r))&&(a=p.negate(a)),s.default.Body.applyForce(r,r.position,a),s.default.Body.applyForce(t,t.position,p.negate(a))}};t.applyGrouping=function(e,t){for(var r=0;r<t.length;r++)for(var n=r+1;n<t.length;n++)u(e,t[r],t[n])}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.applyRandomPokes=void 0;var s=i(r(0)),l=a(r(1));t.applyRandomPokes=function(e,t){t.forEach((function(t){return function(e,t){t.isStatic||s.default.Body.applyForce(t,t.position,{x:e.pokeScale*l.randn(),y:e.pokeScale*l.randn()})}(e,t)}))}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.applyAlignment=t.getAttractorYs=t.getAttractorXs=t.fixedRadius1dClustering=void 0;var o=n(r(0)),a=r(10),i=r(1);t.fixedRadius1dClustering=function(e,t){var r=e.slice();r=r.sort((function(e,t){return e-t}));for(var n=Array(e.length);;){for(var o=1,s=Array(2),l=0;l<r.length;l++)if(void 0===n[l]){for(var p=a.bisect(r,r[l]-t);void 0!==n[p];)p++;if(l-p+1>o)o=l-p+1,s=[p,l+1];else if(o>1&&l-p+1==o){var u=s[0],c=s[1];r[l]-r[p]<r[c-1]-r[u]&&(s=[p,l+1])}for(var d=a.bisectLeft(r,r[l]+t);void 0!==n[d];)d--;if(d-l>o)o=d-l,s=[l,d];else if(o>1&&d-l==o){u=s[0],c=s[1];r[d-1]-r[l]<r[c-1]-r[u]&&(s=[l,d])}}if(!(o>1))break;var h=i.mean(r.slice(s[0],s[1]));for(l=s[0];l<s[1];l++)n[l]=h}return i.undoSortBy(n,e)};var s=function(e,t){for(var r=Array(2*e.length),n=0;n<e.length;n++){var o=e[n].vertices.map(t);r[2*n]=i.min(o),r[2*n+1]=i.max(o)}return r},l=function(e){return s(e,(function(e){return e.x}))},p=function(e){return s(e,(function(e){return e.y}))},u=function(e,r,n){var o;return o=n(e),o=(o=t.fixedRadius1dClustering(o,r)).filter((function(e){return void 0!==e})).map(Math.round).sort((function(e,t){return e-t})),o=i.unique(o)};t.getAttractorXs=function(e,t){return u(e,t,l)},t.getAttractorYs=function(e,t){return u(e,t,p)};t.applyAlignment=function(e,r){!function(e,r){for(var n=l(r),a=t.fixedRadius1dClustering(n,e.alignmentForceRange),s=i.tally(a),p=function(t){if(0==s[2*t]&&0==s[2*t+1])return"continue";var i=r[t];if(i.isStatic)return"continue";var l=2*t;s[2*t]<s[2*t+1]&&(l=2*t+1);var p=a[l],u=i.vertices.filter((function(e){return e.x==n[l]}))[0],c=u.x>p?-1:1,d=Math.abs(u.x-p),h=c*(e.alignmentForceCoeff*d+e.alignmentForceOffset);o.default.Body.applyForce(i,u,{x:h,y:0})},u=0;u<r.length;u++)p(u)}(e,r),function(e,r){for(var n=p(r),a=t.fixedRadius1dClustering(n,e.alignmentForceRange),s=i.tally(a),l=function(t){if(0==s[2*t]&&0==s[2*t+1])return"continue";var i=r[t];if(i.isStatic)return"continue";var l=2*t;s[2*t]<s[2*t+1]&&(l=2*t+1);var p=a[l],u=i.vertices.filter((function(e){return e.y==n[l]}))[0],c=u.y>p?-1:1,d=Math.abs(u.y-p),h=c*(e.alignmentForceCoeff*d+e.alignmentForceOffset);o.default.Body.applyForce(i,u,{x:0,y:h})},u=0;u<r.length;u++)l(u)}(e,r)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bisectLeft=t.bisect=t.meguru=void 0,t.meguru=function(e,t){for(var r=-1,n=e.length;n-r>1;){var o=Math.trunc((r+n)/2);t(o)?n=o:r=o}return n},t.bisect=function(e,r){return t.meguru(e,(function(t){return e[t]>=r}))},t.bisectLeft=function(e,r){return t.meguru(e,(function(t){return e[t]>r}))}},function(e,t,r){(function(t){e.exports=function e(t,r,n){function o(i,s){if(!r[i]){if(!t[i]){if(a)return a(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var p=r[i]={exports:{}};t[i][0].call(p.exports,(function(e){return o(t[i][1][e]||e)}),p,p.exports,e,t,r,n)}return r[i].exports}for(var a=!1,i=0;i<n.length;i++)o(n[i]);return o}({1:[function(e,t,r){t.exports={p5:{alpha:{name:"alpha",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},blue:{name:"blue",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},brightness:{name:"brightness",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},color:{name:"color",class:"p5",module:"Color",overloads:[{params:[{name:"gray",description:"<p>number specifying value between white and black.</p>\n",type:"Number"},{name:"alpha",description:"<p>alpha value relative to current color range\n                                (default is 0-255)</p>\n",type:"Number",optional:!0}]},{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}]},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}]},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}]},{params:[{name:"color",description:"",type:"p5.Color"}]}]},green:{name:"green",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},hue:{name:"hue",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},lerpColor:{name:"lerpColor",params:[{name:"c1",description:"<p>interpolate from this color</p>\n",type:"p5.Color"},{name:"c2",description:"<p>interpolate to this color</p>\n",type:"p5.Color"},{name:"amt",description:"<p>number between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Color"},lightness:{name:"lightness",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},red:{name:"red",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},saturation:{name:"saturation",params:[{name:"color",description:'<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',type:"p5.Color|Number[]|String"}],class:"p5",module:"Color"},background:{name:"background",class:"p5",module:"Color",overloads:[{params:[{name:"color",description:'<p>any value created by the <a href="#/p5/color">color()</a> function</p>\n',type:"p5.Color"}],chainable:1},{params:[{name:"colorstring",description:"<p>color string, possible formats include: integer\n                        rgb() or rgba(), percentage rgb() or rgba(),\n                        3-digit hex, 6-digit hex</p>\n",type:"String"},{name:"a",description:"<p>opacity of the background relative to current\n                            color range (default is 0-255)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"gray",description:"<p>specifies a value between white and black</p>\n",type:"Number"},{name:"a",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"v1",description:"<p>red or hue value (depending on the current color\n                       mode)</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value (depending on the current\n                       color mode)</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value (depending on the current\n                       color mode)</p>\n",type:"Number"},{name:"a",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red, green, blue\n                                and alpha components of the color</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"image",description:'<p>image created with <a href="#/p5/loadImage">loadImage()</a> or <a href="#/p5/createImage">createImage()</a>,\n                            to set as background\n                            (must be same size as the sketch window)</p>\n',type:"p5.Image"},{name:"a",description:"",type:"Number",optional:!0}],chainable:1}]},clear:{name:"clear",class:"p5",module:"Color"},colorMode:{name:"colorMode",class:"p5",module:"Color",overloads:[{params:[{name:"mode",description:"<p>either RGB, HSB or HSL, corresponding to\n                         Red/Green/Blue and Hue/Saturation/Brightness\n                         (or Lightness)</p>\n",type:"Constant"},{name:"max",description:"<p>range for all values</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"mode",description:"",type:"Constant"},{name:"max1",description:"<p>range for the red or hue depending on the\n                             current color mode</p>\n",type:"Number"},{name:"max2",description:"<p>range for the green or saturation depending\n                             on the current color mode</p>\n",type:"Number"},{name:"max3",description:"<p>range for the blue or brightness/lightness\n                             depending on the current color mode</p>\n",type:"Number"},{name:"maxA",description:"<p>range for the alpha</p>\n",type:"Number",optional:!0}],chainable:1}]},fill:{name:"fill",class:"p5",module:"Color",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}],chainable:1},{params:[{name:"gray",description:"<p>a gray value</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:"<p>the fill color</p>\n",type:"p5.Color"}],chainable:1}]},noFill:{name:"noFill",class:"p5",module:"Color"},noStroke:{name:"noStroke",class:"p5",module:"Color"},stroke:{name:"stroke",class:"p5",module:"Color",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}],chainable:1},{params:[{name:"gray",description:"<p>a gray value</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:"<p>the stroke color</p>\n",type:"p5.Color"}],chainable:1}]},erase:{name:"erase",params:[{name:"strengthFill",description:"<p>A number (0-255) for the strength of erasing for a shape's fill.\n                                       This will default to 255 when no argument is given, which\n                                       is full strength.</p>\n",type:"Number",optional:!0},{name:"strengthStroke",description:"<p>A number (0-255) for the strength of erasing for a shape's stroke.\n                                       This will default to 255 when no argument is given, which\n                                       is full strength.</p>\n",type:"Number",optional:!0}],class:"p5",module:"Color"},noErase:{name:"noErase",class:"p5",module:"Color"},arc:{name:"arc",params:[{name:"x",description:"<p>x-coordinate of the arc's ellipse</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the arc's ellipse</p>\n",type:"Number"},{name:"w",description:"<p>width of the arc's ellipse by default</p>\n",type:"Number"},{name:"h",description:"<p>height of the arc's ellipse by default</p>\n",type:"Number"},{name:"start",description:"<p>angle to start the arc, specified in radians</p>\n",type:"Number"},{name:"stop",description:"<p>angle to stop the arc, specified in radians</p>\n",type:"Number"},{name:"mode",description:"<p>optional parameter to determine the way of drawing\n                        the arc. either CHORD, PIE or OPEN</p>\n",type:"Constant",optional:!0},{name:"detail",description:"<p>optional parameter for WebGL mode only. This is to\n                        specify the number of vertices that makes up the\n                        perimeter of the arc. Default value is 25.</p>\n",type:"Number",optional:!0}],class:"p5",module:"Shape"},ellipse:{name:"ellipse",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the center of ellipse.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the center of ellipse.</p>\n",type:"Number"},{name:"w",description:"<p>width of the ellipse.</p>\n",type:"Number"},{name:"h",description:"<p>height of the ellipse.</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"w",description:"",type:"Number"},{name:"h",description:"",type:"Number"},{name:"detail",description:"<p>number of radial sectors to draw (for WebGL mode)</p>\n",type:"Integer"}]}]},circle:{name:"circle",params:[{name:"x",description:"<p>x-coordinate of the centre of the circle.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the centre of the circle.</p>\n",type:"Number"},{name:"d",description:"<p>diameter of the circle.</p>\n",type:"Number"}],class:"p5",module:"Shape"},line:{name:"line",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>the x-coordinate of the first point</p>\n",type:"Number"},{name:"y1",description:"<p>the y-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"<p>the x-coordinate of the second point</p>\n",type:"Number"},{name:"y2",description:"<p>the y-coordinate of the second point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>the z-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>the z-coordinate of the second point</p>\n",type:"Number"}],chainable:1}]},point:{name:"point",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>the x-coordinate</p>\n",type:"Number"},{name:"y",description:"<p>the y-coordinate</p>\n",type:"Number"},{name:"z",description:"<p>the z-coordinate (for WebGL mode)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"coordinate_vector",description:"<p>the coordinate vector</p>\n",type:"p5.Vector"}],chainable:1}]},quad:{name:"quad",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>the x-coordinate of the first point</p>\n",type:"Number"},{name:"y1",description:"<p>the y-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"<p>the x-coordinate of the second point</p>\n",type:"Number"},{name:"y2",description:"<p>the y-coordinate of the second point</p>\n",type:"Number"},{name:"x3",description:"<p>the x-coordinate of the third point</p>\n",type:"Number"},{name:"y3",description:"<p>the y-coordinate of the third point</p>\n",type:"Number"},{name:"x4",description:"<p>the x-coordinate of the fourth point</p>\n",type:"Number"},{name:"y4",description:"<p>the y-coordinate of the fourth point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>the z-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>the z-coordinate of the second point</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>the z-coordinate of the third point</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>the z-coordinate of the fourth point</p>\n",type:"Number"}],chainable:1}]},rect:{name:"rect",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the rectangle.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the rectangle.</p>\n",type:"Number"},{name:"w",description:"<p>width of the rectangle.</p>\n",type:"Number"},{name:"h",description:"<p>height of the rectangle.</p>\n",type:"Number",optional:!0},{name:"tl",description:"<p>optional radius of top-left corner.</p>\n",type:"Number",optional:!0},{name:"tr",description:"<p>optional radius of top-right corner.</p>\n",type:"Number",optional:!0},{name:"br",description:"<p>optional radius of bottom-right corner.</p>\n",type:"Number",optional:!0},{name:"bl",description:"<p>optional radius of bottom-left corner.</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"w",description:"",type:"Number"},{name:"h",description:"",type:"Number"},{name:"detailX",description:"<p>number of segments in the x-direction (for WebGL mode)</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments in the y-direction (for WebGL mode)</p>\n",type:"Integer",optional:!0}],chainable:1}]},square:{name:"square",params:[{name:"x",description:"<p>x-coordinate of the square.</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the square.</p>\n",type:"Number"},{name:"s",description:"<p>side size of the square.</p>\n",type:"Number"},{name:"tl",description:"<p>optional radius of top-left corner.</p>\n",type:"Number",optional:!0},{name:"tr",description:"<p>optional radius of top-right corner.</p>\n",type:"Number",optional:!0},{name:"br",description:"<p>optional radius of bottom-right corner.</p>\n",type:"Number",optional:!0},{name:"bl",description:"<p>optional radius of bottom-left corner.</p>\n",type:"Number",optional:!0}],class:"p5",module:"Shape"},triangle:{name:"triangle",params:[{name:"x1",description:"<p>x-coordinate of the first point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate of the second point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate of the second point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate of the third point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate of the third point</p>\n",type:"Number"}],class:"p5",module:"Shape"},ellipseMode:{name:"ellipseMode",params:[{name:"mode",description:"<p>either CENTER, RADIUS, CORNER, or CORNERS</p>\n",type:"Constant"}],class:"p5",module:"Shape"},noSmooth:{name:"noSmooth",class:"p5",module:"Shape"},rectMode:{name:"rectMode",params:[{name:"mode",description:"<p>either CORNER, CORNERS, CENTER, or RADIUS</p>\n",type:"Constant"}],class:"p5",module:"Shape"},smooth:{name:"smooth",class:"p5",module:"Shape"},strokeCap:{name:"strokeCap",params:[{name:"cap",description:"<p>either ROUND, SQUARE or PROJECT</p>\n",type:"Constant"}],class:"p5",module:"Shape"},strokeJoin:{name:"strokeJoin",params:[{name:"join",description:"<p>either MITER, BEVEL, ROUND</p>\n",type:"Constant"}],class:"p5",module:"Shape"},strokeWeight:{name:"strokeWeight",params:[{name:"weight",description:"<p>the weight of the stroke (in pixels)</p>\n",type:"Number"}],class:"p5",module:"Shape"},bezier:{name:"bezier",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>x-coordinate for the first anchor point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate for the first anchor point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate for the first control point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate for the first control point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the second control point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the second control point</p>\n",type:"Number"},{name:"x4",description:"<p>x-coordinate for the second anchor point</p>\n",type:"Number"},{name:"y4",description:"<p>y-coordinate for the second anchor point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>z-coordinate for the first anchor point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate for the first control point</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the second control point</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>z-coordinate for the second anchor point</p>\n",type:"Number"}],chainable:1}]},bezierDetail:{name:"bezierDetail",params:[{name:"detail",description:"<p>resolution of the curves</p>\n",type:"Number"}],class:"p5",module:"Shape"},bezierPoint:{name:"bezierPoint",params:[{name:"a",description:"<p>coordinate of first point on the curve</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first control point</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second control point</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second point on the curve</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},bezierTangent:{name:"bezierTangent",params:[{name:"a",description:"<p>coordinate of first point on the curve</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first control point</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second control point</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second point on the curve</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},curve:{name:"curve",class:"p5",module:"Shape",overloads:[{params:[{name:"x1",description:"<p>x-coordinate for the beginning control point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate for the beginning control point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate for the first point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate for the first point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the second point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the second point</p>\n",type:"Number"},{name:"x4",description:"<p>x-coordinate for the ending control point</p>\n",type:"Number"},{name:"y4",description:"<p>y-coordinate for the ending control point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>z-coordinate for the beginning control point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate for the first point</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the second point</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>z-coordinate for the ending control point</p>\n",type:"Number"}],chainable:1}]},curveDetail:{name:"curveDetail",params:[{name:"resolution",description:"<p>resolution of the curves</p>\n",type:"Number"}],class:"p5",module:"Shape"},curveTightness:{name:"curveTightness",params:[{name:"amount",description:"<p>amount of deformation from the original vertices</p>\n",type:"Number"}],class:"p5",module:"Shape"},curvePoint:{name:"curvePoint",params:[{name:"a",description:"<p>coordinate of first control point of the curve</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first point</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second point</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second control point</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},curveTangent:{name:"curveTangent",params:[{name:"a",description:"<p>coordinate of first control point</p>\n",type:"Number"},{name:"b",description:"<p>coordinate of first point on the curve</p>\n",type:"Number"},{name:"c",description:"<p>coordinate of second point on the curve</p>\n",type:"Number"},{name:"d",description:"<p>coordinate of second conrol point</p>\n",type:"Number"},{name:"t",description:"<p>value between 0 and 1</p>\n",type:"Number"}],class:"p5",module:"Shape"},beginContour:{name:"beginContour",class:"p5",module:"Shape"},beginShape:{name:"beginShape",params:[{name:"kind",description:"<p>either POINTS, LINES, TRIANGLES, TRIANGLE_FAN\n                               TRIANGLE_STRIP, QUADS, QUAD_STRIP or TESS</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Shape"},bezierVertex:{name:"bezierVertex",class:"p5",module:"Shape",overloads:[{params:[{name:"x2",description:"<p>x-coordinate for the first control point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate for the first control point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the second control point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the second control point</p>\n",type:"Number"},{name:"x4",description:"<p>x-coordinate for the anchor point</p>\n",type:"Number"},{name:"y4",description:"<p>y-coordinate for the anchor point</p>\n",type:"Number"}],chainable:1},{params:[{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate for the first control point (for WebGL mode)</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the second control point (for WebGL mode)</p>\n",type:"Number"},{name:"x4",description:"",type:"Number"},{name:"y4",description:"",type:"Number"},{name:"z4",description:"<p>z-coordinate for the anchor point (for WebGL mode)</p>\n",type:"Number"}],chainable:1}]},curveVertex:{name:"curveVertex",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the vertex</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the vertex</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"<p>z-coordinate of the vertex (for WebGL mode)</p>\n",type:"Number",optional:!0}],chainable:1}]},endContour:{name:"endContour",class:"p5",module:"Shape"},endShape:{name:"endShape",params:[{name:"mode",description:"<p>use CLOSE to close the shape</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Shape"},quadraticVertex:{name:"quadraticVertex",class:"p5",module:"Shape",overloads:[{params:[{name:"cx",description:"<p>x-coordinate for the control point</p>\n",type:"Number"},{name:"cy",description:"<p>y-coordinate for the control point</p>\n",type:"Number"},{name:"x3",description:"<p>x-coordinate for the anchor point</p>\n",type:"Number"},{name:"y3",description:"<p>y-coordinate for the anchor point</p>\n",type:"Number"}],chainable:1},{params:[{name:"cx",description:"",type:"Number"},{name:"cy",description:"",type:"Number"},{name:"cz",description:"<p>z-coordinate for the control point (for WebGL mode)</p>\n",type:"Number"},{name:"x3",description:"",type:"Number"},{name:"y3",description:"",type:"Number"},{name:"z3",description:"<p>z-coordinate for the anchor point (for WebGL mode)</p>\n",type:"Number"}],chainable:1}]},vertex:{name:"vertex",class:"p5",module:"Shape",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the vertex</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the vertex</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"<p>z-coordinate of the vertex</p>\n",type:"Number"},{name:"u",description:"<p>the vertex's texture u-coordinate</p>\n",type:"Number",optional:!0},{name:"v",description:"<p>the vertex's texture v-coordinate</p>\n",type:"Number",optional:!0}],chainable:1}]},P2D:{name:"P2D",class:"p5",module:"Constants"},WEBGL:{name:"WEBGL",class:"p5",module:"Constants"},ARROW:{name:"ARROW",class:"p5",module:"Constants"},CROSS:{name:"CROSS",class:"p5",module:"Constants"},HAND:{name:"HAND",class:"p5",module:"Constants"},MOVE:{name:"MOVE",class:"p5",module:"Constants"},TEXT:{name:"TEXT",class:"p5",module:"Constants"},WAIT:{name:"WAIT",class:"p5",module:"Constants"},HALF_PI:{name:"HALF_PI",class:"p5",module:"Constants"},PI:{name:"PI",class:"p5",module:"Constants"},QUARTER_PI:{name:"QUARTER_PI",class:"p5",module:"Constants"},TAU:{name:"TAU",class:"p5",module:"Constants"},TWO_PI:{name:"TWO_PI",class:"p5",module:"Constants"},DEGREES:{name:"DEGREES",class:"p5",module:"Constants"},RADIANS:{name:"RADIANS",class:"p5",module:"Constants"},CORNER:{name:"CORNER",class:"p5",module:"Constants"},CORNERS:{name:"CORNERS",class:"p5",module:"Constants"},RADIUS:{name:"RADIUS",class:"p5",module:"Constants"},RIGHT:{name:"RIGHT",class:"p5",module:"Constants"},LEFT:{name:"LEFT",class:"p5",module:"Constants"},CENTER:{name:"CENTER",class:"p5",module:"Constants"},TOP:{name:"TOP",class:"p5",module:"Constants"},BOTTOM:{name:"BOTTOM",class:"p5",module:"Constants"},BASELINE:{name:"BASELINE",class:"p5",module:"Constants"},POINTS:{name:"POINTS",class:"p5",module:"Constants"},LINES:{name:"LINES",class:"p5",module:"Constants"},LINE_STRIP:{name:"LINE_STRIP",class:"p5",module:"Constants"},LINE_LOOP:{name:"LINE_LOOP",class:"p5",module:"Constants"},TRIANGLES:{name:"TRIANGLES",class:"p5",module:"Constants"},TRIANGLE_FAN:{name:"TRIANGLE_FAN",class:"p5",module:"Constants"},TRIANGLE_STRIP:{name:"TRIANGLE_STRIP",class:"p5",module:"Constants"},QUADS:{name:"QUADS",class:"p5",module:"Constants"},QUAD_STRIP:{name:"QUAD_STRIP",class:"p5",module:"Constants"},TESS:{name:"TESS",class:"p5",module:"Constants"},CLOSE:{name:"CLOSE",class:"p5",module:"Constants"},OPEN:{name:"OPEN",class:"p5",module:"Constants"},CHORD:{name:"CHORD",class:"p5",module:"Constants"},PIE:{name:"PIE",class:"p5",module:"Constants"},PROJECT:{name:"PROJECT",class:"p5",module:"Constants"},SQUARE:{name:"SQUARE",class:"p5",module:"Constants"},ROUND:{name:"ROUND",class:"p5",module:"Constants"},BEVEL:{name:"BEVEL",class:"p5",module:"Constants"},MITER:{name:"MITER",class:"p5",module:"Constants"},RGB:{name:"RGB",class:"p5",module:"Constants"},HSB:{name:"HSB",class:"p5",module:"Constants"},HSL:{name:"HSL",class:"p5",module:"Constants"},AUTO:{name:"AUTO",class:"p5",module:"Constants"},ALT:{name:"ALT",class:"p5",module:"Constants"},BACKSPACE:{name:"BACKSPACE",class:"p5",module:"Constants"},CONTROL:{name:"CONTROL",class:"p5",module:"Constants"},DELETE:{name:"DELETE",class:"p5",module:"Constants"},DOWN_ARROW:{name:"DOWN_ARROW",class:"p5",module:"Constants"},ENTER:{name:"ENTER",class:"p5",module:"Constants"},ESCAPE:{name:"ESCAPE",class:"p5",module:"Constants"},LEFT_ARROW:{name:"LEFT_ARROW",class:"p5",module:"Constants"},OPTION:{name:"OPTION",class:"p5",module:"Constants"},RETURN:{name:"RETURN",class:"p5",module:"Constants"},RIGHT_ARROW:{name:"RIGHT_ARROW",class:"p5",module:"Constants"},SHIFT:{name:"SHIFT",class:"p5",module:"Constants"},TAB:{name:"TAB",class:"p5",module:"Constants"},UP_ARROW:{name:"UP_ARROW",class:"p5",module:"Constants"},BLEND:{name:"BLEND",class:"p5",module:"Constants"},REMOVE:{name:"REMOVE",class:"p5",module:"Constants"},ADD:{name:"ADD",class:"p5",module:"Constants"},DARKEST:{name:"DARKEST",class:"p5",module:"Constants"},LIGHTEST:{name:"LIGHTEST",class:"p5",module:"Constants"},DIFFERENCE:{name:"DIFFERENCE",class:"p5",module:"Constants"},SUBTRACT:{name:"SUBTRACT",class:"p5",module:"Constants"},EXCLUSION:{name:"EXCLUSION",class:"p5",module:"Constants"},MULTIPLY:{name:"MULTIPLY",class:"p5",module:"Constants"},SCREEN:{name:"SCREEN",class:"p5",module:"Constants"},REPLACE:{name:"REPLACE",class:"p5",module:"Constants"},OVERLAY:{name:"OVERLAY",class:"p5",module:"Constants"},HARD_LIGHT:{name:"HARD_LIGHT",class:"p5",module:"Constants"},SOFT_LIGHT:{name:"SOFT_LIGHT",class:"p5",module:"Constants"},DODGE:{name:"DODGE",class:"p5",module:"Constants"},BURN:{name:"BURN",class:"p5",module:"Constants"},THRESHOLD:{name:"THRESHOLD",class:"p5",module:"Constants"},GRAY:{name:"GRAY",class:"p5",module:"Constants"},OPAQUE:{name:"OPAQUE",class:"p5",module:"Constants"},INVERT:{name:"INVERT",class:"p5",module:"Constants"},POSTERIZE:{name:"POSTERIZE",class:"p5",module:"Constants"},DILATE:{name:"DILATE",class:"p5",module:"Constants"},ERODE:{name:"ERODE",class:"p5",module:"Constants"},BLUR:{name:"BLUR",class:"p5",module:"Constants"},NORMAL:{name:"NORMAL",class:"p5",module:"Constants"},ITALIC:{name:"ITALIC",class:"p5",module:"Constants"},BOLD:{name:"BOLD",class:"p5",module:"Constants"},BOLDITALIC:{name:"BOLDITALIC",class:"p5",module:"Constants"},LINEAR:{name:"LINEAR",class:"p5",module:"Constants"},QUADRATIC:{name:"QUADRATIC",class:"p5",module:"Constants"},BEZIER:{name:"BEZIER",class:"p5",module:"Constants"},CURVE:{name:"CURVE",class:"p5",module:"Constants"},STROKE:{name:"STROKE",class:"p5",module:"Constants"},FILL:{name:"FILL",class:"p5",module:"Constants"},TEXTURE:{name:"TEXTURE",class:"p5",module:"Constants"},IMMEDIATE:{name:"IMMEDIATE",class:"p5",module:"Constants"},IMAGE:{name:"IMAGE",class:"p5",module:"Constants"},NEAREST:{name:"NEAREST",class:"p5",module:"Constants"},REPEAT:{name:"REPEAT",class:"p5",module:"Constants"},CLAMP:{name:"CLAMP",class:"p5",module:"Constants"},MIRROR:{name:"MIRROR",class:"p5",module:"Constants"},LANDSCAPE:{name:"LANDSCAPE",class:"p5",module:"Constants"},PORTRAIT:{name:"PORTRAIT",class:"p5",module:"Constants"},GRID:{name:"GRID",class:"p5",module:"Constants"},AXES:{name:"AXES",class:"p5",module:"Constants"},print:{name:"print",params:[{name:"contents",description:"<p>any combination of Number, String, Object, Boolean,\n                      Array to print</p>\n",type:"Any"}],class:"p5",module:"Environment"},frameCount:{name:"frameCount",class:"p5",module:"Environment"},deltaTime:{name:"deltaTime",class:"p5",module:"Environment"},focused:{name:"focused",class:"p5",module:"Environment"},cursor:{name:"cursor",params:[{name:"type",description:"<p>Built-In: either ARROW, CROSS, HAND, MOVE, TEXT and WAIT\n                              Native CSS properties: 'grab', 'progress', 'cell' etc.\n                              External: path for cursor's images\n                              (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\n                              For more information on Native CSS cursors and url visit:\n                              <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\">https://developer.mozilla.org/en-US/docs/Web/CSS/cursor</a></p>\n",type:"String|Constant"},{name:"x",description:"<p>the horizontal active spot of the cursor (must be less than 32)</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>the vertical active spot of the cursor (must be less than 32)</p>\n",type:"Number",optional:!0}],class:"p5",module:"Environment"},frameRate:{name:"frameRate",class:"p5",module:"Environment",overloads:[{params:[{name:"fps",description:"<p>number of frames to be displayed every second</p>\n",type:"Number"}],chainable:1},{params:[]}]},noCursor:{name:"noCursor",class:"p5",module:"Environment"},displayWidth:{name:"displayWidth",class:"p5",module:"Environment"},displayHeight:{name:"displayHeight",class:"p5",module:"Environment"},windowWidth:{name:"windowWidth",class:"p5",module:"Environment"},windowHeight:{name:"windowHeight",class:"p5",module:"Environment"},windowResized:{name:"windowResized",class:"p5",module:"Environment"},width:{name:"width",class:"p5",module:"Environment"},height:{name:"height",class:"p5",module:"Environment"},fullscreen:{name:"fullscreen",params:[{name:"val",description:"<p>whether the sketch should be in fullscreen mode\nor not</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Environment"},pixelDensity:{name:"pixelDensity",class:"p5",module:"Environment",overloads:[{params:[{name:"val",description:"<p>whether or how much the sketch should scale</p>\n",type:"Number"}],chainable:1},{params:[]}]},displayDensity:{name:"displayDensity",class:"p5",module:"Environment"},getURL:{name:"getURL",class:"p5",module:"Environment"},getURLPath:{name:"getURLPath",class:"p5",module:"Environment"},getURLParams:{name:"getURLParams",class:"p5",module:"Environment"},preload:{name:"preload",class:"p5",module:"Structure"},setup:{name:"setup",class:"p5",module:"Structure"},draw:{name:"draw",class:"p5",module:"Structure"},remove:{name:"remove",class:"p5",module:"Structure"},disableFriendlyErrors:{name:"disableFriendlyErrors",class:"p5",module:"Structure"},let:{name:"let",class:"p5",module:"Foundation"},const:{name:"const",class:"p5",module:"Foundation"},"===":{name:"===",class:"p5",module:"Foundation"},">":{name:">",class:"p5",module:"Foundation"},">=":{name:">=",class:"p5",module:"Foundation"},"<":{name:"<",class:"p5",module:"Foundation"},"<=":{name:"<=",class:"p5",module:"Foundation"},"if-else":{name:"if-else",class:"p5",module:"Foundation"},function:{name:"function",class:"p5",module:"Foundation"},return:{name:"return",class:"p5",module:"Foundation"},boolean:{name:"boolean",params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number|Array"}],class:"p5",module:"Data"},string:{name:"string",class:"p5",module:"Foundation"},number:{name:"number",class:"p5",module:"Foundation"},object:{name:"object",class:"p5",module:"Foundation"},class:{name:"class",class:"p5",module:"Foundation"},for:{name:"for",class:"p5",module:"Foundation"},while:{name:"while",class:"p5",module:"Foundation"},createCanvas:{name:"createCanvas",params:[{name:"w",description:"<p>width of the canvas</p>\n",type:"Number"},{name:"h",description:"<p>height of the canvas</p>\n",type:"Number"},{name:"renderer",description:"<p>either P2D or WEBGL</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Rendering"},resizeCanvas:{name:"resizeCanvas",params:[{name:"w",description:"<p>width of the canvas</p>\n",type:"Number"},{name:"h",description:"<p>height of the canvas</p>\n",type:"Number"},{name:"noRedraw",description:"<p>don't redraw the canvas immediately</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Rendering"},noCanvas:{name:"noCanvas",class:"p5",module:"Rendering"},createGraphics:{name:"createGraphics",params:[{name:"w",description:"<p>width of the offscreen graphics buffer</p>\n",type:"Number"},{name:"h",description:"<p>height of the offscreen graphics buffer</p>\n",type:"Number"},{name:"renderer",description:"<p>either P2D or WEBGL\n                              undefined defaults to p2d</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Rendering"},blendMode:{name:"blendMode",params:[{name:"mode",description:"<p>blend mode to set for canvas.\n               either BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY,\n               EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n               SOFT_LIGHT, DODGE, BURN, ADD, REMOVE or SUBTRACT</p>\n",type:"Constant"}],class:"p5",module:"Rendering"},drawingContext:{name:"drawingContext",class:"p5",module:"Rendering"},noLoop:{name:"noLoop",class:"p5",module:"Structure"},loop:{name:"loop",class:"p5",module:"Structure"},isLooping:{name:"isLooping",class:"p5",module:"Structure"},push:{name:"push",class:"p5",module:"Structure"},pop:{name:"pop",class:"p5",module:"Structure"},redraw:{name:"redraw",params:[{name:"n",description:"<p>Redraw for n-times. The default value is 1.</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Structure"},p5:{name:"p5",params:[{name:"sketch",description:"<p>a function containing a p5.js sketch</p>\n",type:"Object"},{name:"node",description:"<p>ID or pointer to HTML DOM node to contain sketch in</p>\n",type:"String|Object"}],class:"p5",module:"Structure"},applyMatrix:{name:"applyMatrix",params:[{name:"a",description:"<p>numbers which define the 2x3 matrix to be multiplied</p>\n",type:"Number"},{name:"b",description:"<p>numbers which define the 2x3 matrix to be multiplied</p>\n",type:"Number"},{name:"c",description:"<p>numbers which define the 2x3 matrix to be multiplied</p>\n",type:"Number"},{name:"d",description:"<p>numbers which define the 2x3 matrix to be multiplied</p>\n",type:"Number"},{name:"e",description:"<p>numbers which define the 2x3 matrix to be multiplied</p>\n",type:"Number"},{name:"f",description:"<p>numbers which define the 2x3 matrix to be multiplied</p>\n",type:"Number"}],class:"p5",module:"Transform"},resetMatrix:{name:"resetMatrix",class:"p5",module:"Transform"},rotate:{name:"rotate",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"},{name:"axis",description:"<p>(in 3d) the axis to rotate around</p>\n",type:"p5.Vector|Number[]",optional:!0}],class:"p5",module:"Transform"},rotateX:{name:"rotateX",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},rotateY:{name:"rotateY",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},rotateZ:{name:"rotateZ",params:[{name:"angle",description:"<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},scale:{name:"scale",class:"p5",module:"Transform",overloads:[{params:[{name:"s",description:"<p>percent to scale the object, or percentage to\n                     scale the object in the x-axis if multiple arguments\n                     are given</p>\n",type:"Number|p5.Vector|Number[]"},{name:"y",description:"<p>percent to scale the object in the y-axis</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>percent to scale the object in the z-axis (webgl only)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"scales",description:"<p>per-axis percents to scale the object</p>\n",type:"p5.Vector|Number[]"}],chainable:1}]},shearX:{name:"shearX",params:[{name:"angle",description:"<p>angle of shear specified in radians or degrees,\n                       depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},shearY:{name:"shearY",params:[{name:"angle",description:"<p>angle of shear specified in radians or degrees,\n                       depending on current angleMode</p>\n",type:"Number"}],class:"p5",module:"Transform"},translate:{name:"translate",class:"p5",module:"Transform",overloads:[{params:[{name:"x",description:"<p>left/right translation</p>\n",type:"Number"},{name:"y",description:"<p>up/down translation</p>\n",type:"Number"},{name:"z",description:"<p>forward/backward translation (webgl only)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"vector",description:"<p>the vector to translate by</p>\n",type:"p5.Vector"}],chainable:1}]},storeItem:{name:"storeItem",params:[{name:"key",description:"",type:"String"},{name:"value",description:"",type:"String|Number|Object|Boolean|p5.Color|p5.Vector"}],class:"p5",module:"Data"},getItem:{name:"getItem",params:[{name:"key",description:"<p>name that you wish to use to store in local storage</p>\n",type:"String"}],class:"p5",module:"Data"},clearStorage:{name:"clearStorage",class:"p5",module:"Data"},removeItem:{name:"removeItem",params:[{name:"key",description:"",type:"String"}],class:"p5",module:"Data"},createStringDict:{name:"createStringDict",class:"p5",module:"Data",overloads:[{params:[{name:"key",description:"",type:"String"},{name:"value",description:"",type:"String"}]},{params:[{name:"object",description:"<p>object</p>\n",type:"Object"}]}]},createNumberDict:{name:"createNumberDict",class:"p5",module:"Data",overloads:[{params:[{name:"key",description:"",type:"Number"},{name:"value",description:"",type:"Number"}]},{params:[{name:"object",description:"<p>object</p>\n",type:"Object"}]}]},select:{name:"select",params:[{name:"selectors",description:"<p>CSS selector string of element to search for</p>\n",type:"String"},{name:"container",description:'<p>CSS selector string, <a href="#/p5.Element">p5.Element</a>, or\n                                            HTML element to search within</p>\n',type:"String|p5.Element|HTMLElement",optional:!0}],class:"p5",module:"DOM"},selectAll:{name:"selectAll",params:[{name:"selectors",description:"<p>CSS selector string of elements to search for</p>\n",type:"String"},{name:"container",description:'<p>CSS selector string, <a href="#/p5.Element">p5.Element</a>\n                                            , or HTML element to search within</p>\n',type:"String|p5.Element|HTMLElement",optional:!0}],class:"p5",module:"DOM"},removeElements:{name:"removeElements",class:"p5",module:"DOM"},changed:{name:"changed",params:[{name:"fxn",description:"<p>function to be fired when the value of\n                               an element changes.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5",module:"DOM"},input:{name:"input",params:[{name:"fxn",description:"<p>function to be fired when any user input is\n                               detected within the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5",module:"DOM"},createDiv:{name:"createDiv",params:[{name:"html",description:"<p>inner HTML for element created</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createP:{name:"createP",params:[{name:"html",description:"<p>inner HTML for element created</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createSpan:{name:"createSpan",params:[{name:"html",description:"<p>inner HTML for element created</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createImg:{name:"createImg",class:"p5",module:"DOM",overloads:[{params:[{name:"src",description:"<p>src path or url for image</p>\n",type:"String"},{name:"alt",description:'<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img#Attributes">alternate text</a> to be used if image does not load. You can use also an empty string (<code>""</code>) if that an image is not intended to be viewed.</p>\n',type:"String"}]},{params:[{name:"src",description:"",type:"String"},{name:"alt",description:"",type:"String"},{name:"crossOrigin",description:"<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\">crossOrigin property</a> of the <code>img</code> element; use either 'anonymous' or 'use-credentials' to retrieve the image with cross-origin access (for later use with <code>canvas</code>. if an empty string(<code>\"\"</code>) is passed, CORS is not used</p>\n",type:"String"},{name:"successCallback",description:'<p>callback to be called once image data is loaded with the <a href="#/p5.Element">p5.Element</a> as argument</p>\n',type:"Function",optional:!0}]}]},createA:{name:"createA",params:[{name:"href",description:"<p>url of page to link to</p>\n",type:"String"},{name:"html",description:"<p>inner html of link element to display</p>\n",type:"String"},{name:"target",description:"<p>target where new link should open,\n                            could be _blank, _self, _parent, _top.</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createSlider:{name:"createSlider",params:[{name:"min",description:"<p>minimum value of the slider</p>\n",type:"Number"},{name:"max",description:"<p>maximum value of the slider</p>\n",type:"Number"},{name:"value",description:"<p>default value of the slider</p>\n",type:"Number",optional:!0},{name:"step",description:"<p>step size for each tick of the slider (if step is set to 0, the slider will move continuously from the minimum to the maximum value)</p>\n",type:"Number",optional:!0}],class:"p5",module:"DOM"},createButton:{name:"createButton",params:[{name:"label",description:"<p>label displayed on the button</p>\n",type:"String"},{name:"value",description:"<p>value of the button</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},createCheckbox:{name:"createCheckbox",params:[{name:"label",description:"<p>label displayed after checkbox</p>\n",type:"String",optional:!0},{name:"value",description:"<p>value of the checkbox; checked is true, unchecked is false</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"DOM"},createSelect:{name:"createSelect",class:"p5",module:"DOM",overloads:[{params:[{name:"multiple",description:"<p>true if dropdown should support multiple selections</p>\n",type:"Boolean",optional:!0}]},{params:[{name:"existing",description:"<p>DOM select element</p>\n",type:"Object"}]}]},createRadio:{name:"createRadio",class:"p5",module:"DOM",overloads:[{params:[{name:"containerElement",description:"<p>An container HTML Element either a div\nor span inside which all existing radio inputs will be considered as options.</p>\n",type:"Object"},{name:"name",description:"<p>A name parameter for each Input Element.</p>\n",type:"String",optional:!0}]},{params:[{name:"name",description:"",type:"String"}]},{params:[]}]},createColorPicker:{name:"createColorPicker",params:[{name:"value",description:"<p>default color of element</p>\n",type:"String|p5.Color",optional:!0}],class:"p5",module:"DOM"},createInput:{name:"createInput",class:"p5",module:"DOM",overloads:[{params:[{name:"value",description:"<p>default value of the input box</p>\n",type:"String"},{name:"type",description:"<p>type of text, ie text, password etc. Defaults to text.\n  Needs a value to be specified first.</p>\n",type:"String",optional:!0}]},{params:[{name:"value",description:"",type:"String",optional:!0}]}]},createFileInput:{name:"createFileInput",params:[{name:"callback",description:"<p>callback function for when a file is loaded</p>\n",type:"Function"},{name:"multiple",description:"<p>optional, to allow multiple files to be selected</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"DOM"},createVideo:{name:"createVideo",params:[{name:"src",description:"<p>path to a video file, or array of paths for\n                            supporting different browsers</p>\n",type:"String|String[]"},{name:"callback",description:"<p>callback function to be called upon\n                            'canplaythrough' event fire, that is, when the\n                            browser can play the media, and estimates that\n                            enough data has been loaded to play the media\n                            up to its end without having to stop for\n                            further buffering of content</p>\n",type:"Function",optional:!0}],class:"p5",module:"DOM"},createAudio:{name:"createAudio",params:[{name:"src",description:"<p>path to an audio file, or array of paths\n                            for supporting different browsers</p>\n",type:"String|String[]",optional:!0},{name:"callback",description:"<p>callback function to be called upon\n                            'canplaythrough' event fire, that is, when the\n                            browser can play the media, and estimates that\n                            enough data has been loaded to play the media\n                            up to its end without having to stop for\n                            further buffering of content</p>\n",type:"Function",optional:!0}],class:"p5",module:"DOM"},VIDEO:{name:"VIDEO",class:"p5",module:"DOM"},AUDIO:{name:"AUDIO",class:"p5",module:"DOM"},createCapture:{name:"createCapture",params:[{name:"type",description:"<p>type of capture, either VIDEO or\n                                  AUDIO if none specified, default both,\n                                  or a Constraints object</p>\n",type:"String|Constant|Object"},{name:"callback",description:"<p>function to be called once\n                                  stream has loaded</p>\n",type:"Function",optional:!0}],class:"p5",module:"DOM"},createElement:{name:"createElement",params:[{name:"tag",description:"<p>tag for the new element</p>\n",type:"String"},{name:"content",description:"<p>html content to be inserted into the element</p>\n",type:"String",optional:!0}],class:"p5",module:"DOM"},deviceOrientation:{name:"deviceOrientation",class:"p5",module:"Events"},accelerationX:{name:"accelerationX",class:"p5",module:"Events"},accelerationY:{name:"accelerationY",class:"p5",module:"Events"},accelerationZ:{name:"accelerationZ",class:"p5",module:"Events"},pAccelerationX:{name:"pAccelerationX",class:"p5",module:"Events"},pAccelerationY:{name:"pAccelerationY",class:"p5",module:"Events"},pAccelerationZ:{name:"pAccelerationZ",class:"p5",module:"Events"},rotationX:{name:"rotationX",class:"p5",module:"Events"},rotationY:{name:"rotationY",class:"p5",module:"Events"},rotationZ:{name:"rotationZ",class:"p5",module:"Events"},pRotationX:{name:"pRotationX",class:"p5",module:"Events"},pRotationY:{name:"pRotationY",class:"p5",module:"Events"},pRotationZ:{name:"pRotationZ",class:"p5",module:"Events"},turnAxis:{name:"turnAxis",class:"p5",module:"Events"},setMoveThreshold:{name:"setMoveThreshold",params:[{name:"value",description:"<p>The threshold value</p>\n",type:"Number"}],class:"p5",module:"Events"},setShakeThreshold:{name:"setShakeThreshold",params:[{name:"value",description:"<p>The threshold value</p>\n",type:"Number"}],class:"p5",module:"Events"},deviceMoved:{name:"deviceMoved",class:"p5",module:"Events"},deviceTurned:{name:"deviceTurned",class:"p5",module:"Events"},deviceShaken:{name:"deviceShaken",class:"p5",module:"Events"},keyIsPressed:{name:"keyIsPressed",class:"p5",module:"Events"},key:{name:"key",class:"p5",module:"Events"},keyCode:{name:"keyCode",class:"p5",module:"Events"},keyPressed:{name:"keyPressed",class:"p5",module:"Events"},keyReleased:{name:"keyReleased",class:"p5",module:"Events"},keyTyped:{name:"keyTyped",class:"p5",module:"Events"},keyIsDown:{name:"keyIsDown",params:[{name:"code",description:"<p>The key to check for.</p>\n",type:"Number"}],class:"p5",module:"Events"},movedX:{name:"movedX",class:"p5",module:"Events"},movedY:{name:"movedY",class:"p5",module:"Events"},mouseX:{name:"mouseX",class:"p5",module:"Events"},mouseY:{name:"mouseY",class:"p5",module:"Events"},pmouseX:{name:"pmouseX",class:"p5",module:"Events"},pmouseY:{name:"pmouseY",class:"p5",module:"Events"},winMouseX:{name:"winMouseX",class:"p5",module:"Events"},winMouseY:{name:"winMouseY",class:"p5",module:"Events"},pwinMouseX:{name:"pwinMouseX",class:"p5",module:"Events"},pwinMouseY:{name:"pwinMouseY",class:"p5",module:"Events"},mouseButton:{name:"mouseButton",class:"p5",module:"Events"},mouseIsPressed:{name:"mouseIsPressed",class:"p5",module:"Events"},mouseMoved:{name:"mouseMoved",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseDragged:{name:"mouseDragged",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mousePressed:{name:"mousePressed",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseReleased:{name:"mouseReleased",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseClicked:{name:"mouseClicked",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},doubleClicked:{name:"doubleClicked",params:[{name:"event",description:"<p>optional MouseEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},mouseWheel:{name:"mouseWheel",params:[{name:"event",description:"<p>optional WheelEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},requestPointerLock:{name:"requestPointerLock",class:"p5",module:"Events"},exitPointerLock:{name:"exitPointerLock",class:"p5",module:"Events"},touches:{name:"touches",class:"p5",module:"Events"},touchStarted:{name:"touchStarted",params:[{name:"event",description:"<p>optional TouchEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},touchMoved:{name:"touchMoved",params:[{name:"event",description:"<p>optional TouchEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},touchEnded:{name:"touchEnded",params:[{name:"event",description:"<p>optional TouchEvent callback argument.</p>\n",type:"Object",optional:!0}],class:"p5",module:"Events"},createImage:{name:"createImage",params:[{name:"width",description:"<p>width in pixels</p>\n",type:"Integer"},{name:"height",description:"<p>height in pixels</p>\n",type:"Integer"}],class:"p5",module:"Image"},saveCanvas:{name:"saveCanvas",class:"p5",module:"Image",overloads:[{params:[{name:"selectedCanvas",description:"<p>a variable\n                                representing a specific html5 canvas (optional)</p>\n",type:"p5.Element|HTMLCanvasElement"},{name:"filename",description:"",type:"String",optional:!0},{name:"extension",description:"<p>'jpg' or 'png'</p>\n",type:"String",optional:!0}]},{params:[{name:"filename",description:"",type:"String",optional:!0},{name:"extension",description:"",type:"String",optional:!0}]}]},saveFrames:{name:"saveFrames",params:[{name:"filename",description:"",type:"String"},{name:"extension",description:"<p>'jpg' or 'png'</p>\n",type:"String"},{name:"duration",description:"<p>Duration in seconds to save the frames for.</p>\n",type:"Number"},{name:"framerate",description:"<p>Framerate to save the frames in.</p>\n",type:"Number"},{name:"callback",description:"<p>A callback function that will be executed\n                                to handle the image data. This function\n                                should accept an array as argument. The\n                                array will contain the specified number of\n                                frames of objects. Each object has three\n                                properties: imageData - an\n                                image/octet-stream, filename and extension.</p>\n",type:"Function(Array)",optional:!0}],class:"p5",module:"Image"},loadImage:{name:"loadImage",params:[{name:"path",description:"<p>Path of the image to be loaded</p>\n",type:"String"},{name:"successCallback",description:'<p>Function to be called once\n                               the image is loaded. Will be passed the\n                               <a href="#/p5.Image">p5.Image</a>.</p>\n',type:"function(p5.Image)",optional:!0},{name:"failureCallback",description:"<p>called with event error if\n                               the image fails to load.</p>\n",type:"Function(Event)",optional:!0}],class:"p5",module:"Image"},image:{name:"image",class:"p5",module:"Image",overloads:[{params:[{name:"img",description:"<p>the image to display</p>\n",type:"p5.Image|p5.Element"},{name:"x",description:"<p>the x-coordinate of the top-left corner of the image</p>\n",type:"Number"},{name:"y",description:"<p>the y-coordinate of the top-left corner of the image</p>\n",type:"Number"},{name:"width",description:"<p>the width to draw the image</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>the height to draw the image</p>\n",type:"Number",optional:!0}]},{params:[{name:"img",description:"",type:"p5.Image|p5.Element"},{name:"dx",description:"<p>the x-coordinate of the destination\n                          rectangle in which to draw the source image</p>\n",type:"Number"},{name:"dy",description:"<p>the y-coordinate of the destination\n                          rectangle in which to draw the source image</p>\n",type:"Number"},{name:"dWidth",description:"<p>the width of the destination rectangle</p>\n",type:"Number"},{name:"dHeight",description:"<p>the height of the destination rectangle</p>\n",type:"Number"},{name:"sx",description:"<p>the x-coordinate of the subsection of the source\nimage to draw into the destination rectangle</p>\n",type:"Number"},{name:"sy",description:"<p>the y-coordinate of the subsection of the source\nimage to draw into the destination rectangle</p>\n",type:"Number"},{name:"sWidth",description:"<p>the width of the subsection of the\n                          source image to draw into the destination\n                          rectangle</p>\n",type:"Number",optional:!0},{name:"sHeight",description:"<p>the height of the subsection of the\n                           source image to draw into the destination rectangle</p>\n",type:"Number",optional:!0}]}]},tint:{name:"tint",class:"p5",module:"Image",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}]},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}]},{params:[{name:"gray",description:"<p>a gray value</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}]},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}]},{params:[{name:"color",description:"<p>the tint color</p>\n",type:"p5.Color"}]}]},noTint:{name:"noTint",class:"p5",module:"Image"},imageMode:{name:"imageMode",params:[{name:"mode",description:"<p>either CORNER, CORNERS, or CENTER</p>\n",type:"Constant"}],class:"p5",module:"Image"},pixels:{name:"pixels",class:"p5",module:"Image"},blend:{name:"blend",class:"p5",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"},{name:"blendMode",description:"<p>the blend mode. either\n    BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n    MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n    SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.</p>\n",type:"Constant"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"},{name:"blendMode",description:"",type:"Constant"}]}]},copy:{name:"copy",class:"p5",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image|p5.Element"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"}]}]},filter:{name:"filter",params:[{name:"filterType",description:"<p>either THRESHOLD, GRAY, OPAQUE, INVERT,\n                               POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n                               See Filters.js for docs on\n                               each available filter</p>\n",type:"Constant"},{name:"filterParam",description:"<p>an optional parameter unique\n                               to each filter, see above</p>\n",type:"Number",optional:!0}],class:"p5",module:"Image"},get:{name:"get",class:"p5",module:"Image",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"w",description:"<p>width</p>\n",type:"Number"},{name:"h",description:"<p>height</p>\n",type:"Number"}]},{params:[]},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"}]}]},loadPixels:{name:"loadPixels",class:"p5",module:"Image"},set:{name:"set",params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"c",description:'<p>insert a grayscale value | a pixel array |\n                               a <a href="#/p5.Color">p5.Color</a> object | a <a href="#/p5.Image">p5.Image</a> to copy</p>\n',type:"Number|Number[]|Object"}],class:"p5",module:"Image"},updatePixels:{name:"updatePixels",params:[{name:"x",description:"<p>x-coordinate of the upper-left corner of region\n                        to update</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>y-coordinate of the upper-left corner of region\n                        to update</p>\n",type:"Number",optional:!0},{name:"w",description:"<p>width of region to update</p>\n",type:"Number",optional:!0},{name:"h",description:"<p>height of region to update</p>\n",type:"Number",optional:!0}],class:"p5",module:"Image"},loadJSON:{name:"loadJSON",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"jsonpOptions",description:"<p>options object for jsonp related settings</p>\n",type:"Object",optional:!0},{name:"datatype",description:'<p>"json" or "jsonp"</p>\n',type:"String",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/loadJSON">loadJSON()</a> completes, data is passed\n                                   in as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"datatype",description:"",type:"String"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"callback",description:"",type:"Function"},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},loadStrings:{name:"loadStrings",params:[{name:"filename",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after <a href="#/p5/loadStrings">loadStrings()</a>\n                              completes, Array is passed in as first\n                              argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                              there is an error, response is passed\n                              in as first argument</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},loadTable:{name:"loadTable",params:[{name:"filename",description:"<p>name of the file or URL to load</p>\n",type:"String"},{name:"extension",description:'<p>parse the table by comma-separated values "csv", semicolon-separated\n                                     values "ssv", or tab-separated values "tsv"</p>\n',type:"String",optional:!0},{name:"header",description:'<p>"header" to indicate table has header row</p>\n',type:"String",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                     <a href="#/p5/loadTable">loadTable()</a> completes. On success, the\n                                     <a href="#/p5.Table">Table</a> object is passed in as the\n                                     first argument.</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                     there is an error, response is passed\n                                     in as first argument</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},loadXML:{name:"loadXML",params:[{name:"filename",description:"<p>name of the file or URL to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after <a href="#/p5/loadXML">loadXML()</a>\n                              completes, XML object is passed in as\n                              first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                              there is an error, response is passed\n                              in as first argument</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},loadBytes:{name:"loadBytes",params:[{name:"file",description:"<p>name of the file or URL to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after <a href="#/p5/loadBytes">loadBytes()</a>\n                                   completes</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if there\n                                   is an error</p>\n",type:"Function",optional:!0}],class:"p5",module:"IO"},httpGet:{name:"httpGet",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"datatype",description:'<p>"json", "jsonp", "binary", "arrayBuffer",\n                                   "xml", or "text"</p>\n',type:"String",optional:!0},{name:"data",description:"<p>param data passed sent with request</p>\n",type:"Object|Boolean",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in\n                                   as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"data",description:"",type:"Object|Boolean"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"callback",description:"",type:"Function"},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},httpPost:{name:"httpPost",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"datatype",description:'<p>"json", "jsonp", "xml", or "text".\n                                   If omitted, <a href="#/p5/httpPost">httpPost()</a> will guess.</p>\n',type:"String",optional:!0},{name:"data",description:"<p>param data passed sent with request</p>\n",type:"Object|Boolean",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/httpPost">httpPost()</a> completes, data is passed in\n                                   as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"data",description:"",type:"Object|Boolean"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"callback",description:"",type:"Function"},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},httpDo:{name:"httpDo",class:"p5",module:"IO",overloads:[{params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"method",description:'<p>either "GET", "POST", or "PUT",\n                                   defaults to "GET"</p>\n',type:"String",optional:!0},{name:"datatype",description:'<p>"json", "jsonp", "xml", or "text"</p>\n',type:"String",optional:!0},{name:"data",description:"<p>param data passed sent with request</p>\n",type:"Object",optional:!0},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in\n                                   as first argument</p>\n',type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",type:"Function",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"options",description:'<p>Request object options as documented in the\n                                   "fetch" API\n<a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API">reference</a></p>\n',type:"Object"},{name:"callback",description:"",type:"Function",optional:!0},{name:"errorCallback",description:"",type:"Function",optional:!0}]}]},createWriter:{name:"createWriter",params:[{name:"name",description:"<p>name of the file to be created</p>\n",type:"String"},{name:"extension",description:"",type:"String",optional:!0}],class:"p5",module:"IO"},save:{name:"save",params:[{name:"objectOrFilename",description:"<p>If filename is provided, will\n                                           save canvas as an image with\n                                           either png or jpg extension\n                                           depending on the filename.\n                                           If object is provided, will\n                                           save depending on the object\n                                           and filename (see examples\n                                           above).</p>\n",type:"Object|String",optional:!0},{name:"filename",description:"<p>If an object is provided as the first\n                             parameter, then the second parameter\n                             indicates the filename,\n                             and should include an appropriate\n                             file extension (see examples above).</p>\n",type:"String",optional:!0},{name:"options",description:"<p>Additional options depend on\n                          filetype. For example, when saving JSON,\n                          <code>true</code> indicates that the\n                          output will be optimized for filesize,\n                          rather than readability.</p>\n",type:"Boolean|String",optional:!0}],class:"p5",module:"IO"},saveJSON:{name:"saveJSON",params:[{name:"json",description:"",type:"Array|Object"},{name:"filename",description:"",type:"String"},{name:"optimize",description:"<p>If true, removes line breaks\n                               and spaces from the output\n                               file to optimize filesize\n                               (but not readability).</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"IO"},saveStrings:{name:"saveStrings",params:[{name:"list",description:"<p>string array to be written</p>\n",type:"String[]"},{name:"filename",description:"<p>filename for output</p>\n",type:"String"},{name:"extension",description:"<p>the filename's extension</p>\n",type:"String",optional:!0},{name:"isCRLF",description:"<p>if true, change line-break to CRLF</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"IO"},saveTable:{name:"saveTable",params:[{name:"Table",description:'<p>the <a href="#/p5.Table">Table</a> object to save to a file</p>\n',type:"p5.Table"},{name:"filename",description:"<p>the filename to which the Table should be saved</p>\n",type:"String"},{name:"options",description:'<p>can be one of "tsv", "csv", or "html"</p>\n',type:"String",optional:!0}],class:"p5",module:"IO"},abs:{name:"abs",params:[{name:"n",description:"<p>number to compute</p>\n",type:"Number"}],class:"p5",module:"Math"},ceil:{name:"ceil",params:[{name:"n",description:"<p>number to round up</p>\n",type:"Number"}],class:"p5",module:"Math"},constrain:{name:"constrain",params:[{name:"n",description:"<p>number to constrain</p>\n",type:"Number"},{name:"low",description:"<p>minimum limit</p>\n",type:"Number"},{name:"high",description:"<p>maximum limit</p>\n",type:"Number"}],class:"p5",module:"Math"},dist:{name:"dist",class:"p5",module:"Math",overloads:[{params:[{name:"x1",description:"<p>x-coordinate of the first point</p>\n",type:"Number"},{name:"y1",description:"<p>y-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"<p>x-coordinate of the second point</p>\n",type:"Number"},{name:"y2",description:"<p>y-coordinate of the second point</p>\n",type:"Number"}]},{params:[{name:"x1",description:"",type:"Number"},{name:"y1",description:"",type:"Number"},{name:"z1",description:"<p>z-coordinate of the first point</p>\n",type:"Number"},{name:"x2",description:"",type:"Number"},{name:"y2",description:"",type:"Number"},{name:"z2",description:"<p>z-coordinate of the second point</p>\n",type:"Number"}]}]},exp:{name:"exp",params:[{name:"n",description:"<p>exponent to raise</p>\n",type:"Number"}],class:"p5",module:"Math"},floor:{name:"floor",params:[{name:"n",description:"<p>number to round down</p>\n",type:"Number"}],class:"p5",module:"Math"},lerp:{name:"lerp",params:[{name:"start",description:"<p>first value</p>\n",type:"Number"},{name:"stop",description:"<p>second value</p>\n",type:"Number"},{name:"amt",description:"<p>number</p>\n",type:"Number"}],class:"p5",module:"Math"},log:{name:"log",params:[{name:"n",description:"<p>number greater than 0</p>\n",type:"Number"}],class:"p5",module:"Math"},mag:{name:"mag",params:[{name:"a",description:"<p>first value</p>\n",type:"Number"},{name:"b",description:"<p>second value</p>\n",type:"Number"}],class:"p5",module:"Math"},map:{name:"map",params:[{name:"value",description:"<p>the incoming value to be converted</p>\n",type:"Number"},{name:"start1",description:"<p>lower bound of the value's current range</p>\n",type:"Number"},{name:"stop1",description:"<p>upper bound of the value's current range</p>\n",type:"Number"},{name:"start2",description:"<p>lower bound of the value's target range</p>\n",type:"Number"},{name:"stop2",description:"<p>upper bound of the value's target range</p>\n",type:"Number"},{name:"withinBounds",description:"<p>constrain the value to the newly mapped range</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Math"},max:{name:"max",class:"p5",module:"Math",overloads:[{params:[{name:"n0",description:"<p>Number to compare</p>\n",type:"Number"},{name:"n1",description:"<p>Number to compare</p>\n",type:"Number"}]},{params:[{name:"nums",description:"<p>Numbers to compare</p>\n",type:"Number[]"}]}]},min:{name:"min",class:"p5",module:"Math",overloads:[{params:[{name:"n0",description:"<p>Number to compare</p>\n",type:"Number"},{name:"n1",description:"<p>Number to compare</p>\n",type:"Number"}]},{params:[{name:"nums",description:"<p>Numbers to compare</p>\n",type:"Number[]"}]}]},norm:{name:"norm",params:[{name:"value",description:"<p>incoming value to be normalized</p>\n",type:"Number"},{name:"start",description:"<p>lower bound of the value's current range</p>\n",type:"Number"},{name:"stop",description:"<p>upper bound of the value's current range</p>\n",type:"Number"}],class:"p5",module:"Math"},pow:{name:"pow",params:[{name:"n",description:"<p>base of the exponential expression</p>\n",type:"Number"},{name:"e",description:"<p>power by which to raise the base</p>\n",type:"Number"}],class:"p5",module:"Math"},round:{name:"round",params:[{name:"n",description:"<p>number to round</p>\n",type:"Number"},{name:"decimals",description:"<p>number of decimal places to round to, default is 0</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},sq:{name:"sq",params:[{name:"n",description:"<p>number to square</p>\n",type:"Number"}],class:"p5",module:"Math"},sqrt:{name:"sqrt",params:[{name:"n",description:"<p>non-negative number to square root</p>\n",type:"Number"}],class:"p5",module:"Math"},fract:{name:"fract",params:[{name:"num",description:"<p>Number whose fractional part needs to be found out</p>\n",type:"Number"}],class:"p5",module:"Math"},createVector:{name:"createVector",params:[{name:"x",description:"<p>x component of the vector</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>z component of the vector</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},noise:{name:"noise",params:[{name:"x",description:"<p>x-coordinate in noise space</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate in noise space</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>z-coordinate in noise space</p>\n",type:"Number",optional:!0}],class:"p5",module:"Math"},noiseDetail:{name:"noiseDetail",params:[{name:"lod",description:"<p>number of octaves to be used by the noise</p>\n",type:"Number"},{name:"falloff",description:"<p>falloff factor for each octave</p>\n",type:"Number"}],class:"p5",module:"Math"},noiseSeed:{name:"noiseSeed",params:[{name:"seed",description:"<p>the seed value</p>\n",type:"Number"}],class:"p5",module:"Math"},randomSeed:{name:"randomSeed",params:[{name:"seed",description:"<p>the seed value</p>\n",type:"Number"}],class:"p5",module:"Math"},random:{name:"random",class:"p5",module:"Math",overloads:[{params:[{name:"min",description:"<p>the lower bound (inclusive)</p>\n",type:"Number",optional:!0},{name:"max",description:"<p>the upper bound (exclusive)</p>\n",type:"Number",optional:!0}]},{params:[{name:"choices",description:"<p>the array to choose from</p>\n",type:"Array"}]}]},randomGaussian:{name:"randomGaussian",params:[{name:"mean",description:"<p>the mean</p>\n",type:"Number"},{name:"sd",description:"<p>the standard deviation</p>\n",type:"Number"}],class:"p5",module:"Math"},acos:{name:"acos",params:[{name:"value",description:"<p>the value whose arc cosine is to be returned</p>\n",type:"Number"}],class:"p5",module:"Math"},asin:{name:"asin",params:[{name:"value",description:"<p>the value whose arc sine is to be returned</p>\n",type:"Number"}],class:"p5",module:"Math"},atan:{name:"atan",params:[{name:"value",description:"<p>the value whose arc tangent is to be returned</p>\n",type:"Number"}],class:"p5",module:"Math"},atan2:{name:"atan2",params:[{name:"y",description:"<p>y-coordinate of the point</p>\n",type:"Number"},{name:"x",description:"<p>x-coordinate of the point</p>\n",type:"Number"}],class:"p5",module:"Math"},cos:{name:"cos",params:[{name:"angle",description:"<p>the angle</p>\n",type:"Number"}],class:"p5",module:"Math"},sin:{name:"sin",params:[{name:"angle",description:"<p>the angle</p>\n",type:"Number"}],class:"p5",module:"Math"},tan:{name:"tan",params:[{name:"angle",description:"<p>the angle</p>\n",type:"Number"}],class:"p5",module:"Math"},degrees:{name:"degrees",params:[{name:"radians",description:"<p>the radians value to convert to degrees</p>\n",type:"Number"}],class:"p5",module:"Math"},radians:{name:"radians",params:[{name:"degrees",description:"<p>the degree value to convert to radians</p>\n",type:"Number"}],class:"p5",module:"Math"},angleMode:{name:"angleMode",params:[{name:"mode",description:"<p>either RADIANS or DEGREES</p>\n",type:"Constant"}],class:"p5",module:"Math"},textAlign:{name:"textAlign",class:"p5",module:"Typography",overloads:[{params:[{name:"horizAlign",description:"<p>horizontal alignment, either LEFT,\n                           CENTER, or RIGHT</p>\n",type:"Constant"},{name:"vertAlign",description:"<p>vertical alignment, either TOP,\n                           BOTTOM, CENTER, or BASELINE</p>\n",type:"Constant",optional:!0}],chainable:1},{params:[]}]},textLeading:{name:"textLeading",class:"p5",module:"Typography",overloads:[{params:[{name:"leading",description:"<p>the size in pixels for spacing between lines</p>\n",type:"Number"}],chainable:1},{params:[]}]},textSize:{name:"textSize",class:"p5",module:"Typography",overloads:[{params:[{name:"theSize",description:"<p>the size of the letters in units of pixels</p>\n",type:"Number"}],chainable:1},{params:[]}]},textStyle:{name:"textStyle",class:"p5",module:"Typography",overloads:[{params:[{name:"theStyle",description:"<p>styling for text, either NORMAL,\n                           ITALIC, BOLD or BOLDITALIC</p>\n",type:"Constant"}],chainable:1},{params:[]}]},textWidth:{name:"textWidth",params:[{name:"theText",description:"<p>the String of characters to measure</p>\n",type:"String"}],class:"p5",module:"Typography"},textAscent:{name:"textAscent",class:"p5",module:"Typography"},textDescent:{name:"textDescent",class:"p5",module:"Typography"},loadFont:{name:"loadFont",params:[{name:"path",description:"<p>name of the file or url to load</p>\n",type:"String"},{name:"callback",description:'<p>function to be executed after\n                                   <a href="#/p5/loadFont">loadFont()</a> completes</p>\n',type:"Function",optional:!0},{name:"onError",description:"<p>function to be executed if\n                                   an error occurs</p>\n",type:"Function",optional:!0}],class:"p5",module:"Typography"},text:{name:"text",params:[{name:"str",description:"<p>the alphanumeric\n                                            symbols to be displayed</p>\n",type:"String|Object|Array|Number|Boolean"},{name:"x",description:"<p>x-coordinate of text</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of text</p>\n",type:"Number"},{name:"x2",description:'<p>by default, the width of the text box,\n                    see <a href="#/p5/rectMode">rectMode()</a> for more info</p>\n',type:"Number",optional:!0},{name:"y2",description:'<p>by default, the height of the text box,\n                    see <a href="#/p5/rectMode">rectMode()</a> for more info</p>\n',type:"Number",optional:!0}],class:"p5",module:"Typography"},textFont:{name:"textFont",class:"p5",module:"Typography",overloads:[{params:[]},{params:[{name:"font",description:'<p>a font loaded via <a href="#/p5/loadFont">loadFont()</a>,\nor a String representing a <a href="https://mzl.la/2dOw8WD">web safe font</a>\n(a font that is generally available across all systems)</p>\n',type:"Object|String"},{name:"size",description:"<p>the font size to use</p>\n",type:"Number",optional:!0}],chainable:1}]},append:{name:"append",params:[{name:"array",description:"<p>Array to append</p>\n",type:"Array"},{name:"value",description:"<p>to be added to the Array</p>\n",type:"Any"}],class:"p5",module:"Data"},arrayCopy:{name:"arrayCopy",class:"p5",module:"Data",overloads:[{params:[{name:"src",description:"<p>the source Array</p>\n",type:"Array"},{name:"srcPosition",description:"<p>starting position in the source Array</p>\n",type:"Integer"},{name:"dst",description:"<p>the destination Array</p>\n",type:"Array"},{name:"dstPosition",description:"<p>starting position in the destination Array</p>\n",type:"Integer"},{name:"length",description:"<p>number of Array elements to be copied</p>\n",type:"Integer"}]},{params:[{name:"src",description:"",type:"Array"},{name:"dst",description:"",type:"Array"},{name:"length",description:"",type:"Integer",optional:!0}]}]},concat:{name:"concat",params:[{name:"a",description:"<p>first Array to concatenate</p>\n",type:"Array"},{name:"b",description:"<p>second Array to concatenate</p>\n",type:"Array"}],class:"p5",module:"Data"},reverse:{name:"reverse",params:[{name:"list",description:"<p>Array to reverse</p>\n",type:"Array"}],class:"p5",module:"Data"},shorten:{name:"shorten",params:[{name:"list",description:"<p>Array to shorten</p>\n",type:"Array"}],class:"p5",module:"Data"},shuffle:{name:"shuffle",params:[{name:"array",description:"<p>Array to shuffle</p>\n",type:"Array"},{name:"bool",description:"<p>modify passed array</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Data"},sort:{name:"sort",params:[{name:"list",description:"<p>Array to sort</p>\n",type:"Array"},{name:"count",description:"<p>number of elements to sort, starting from 0</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Data"},splice:{name:"splice",params:[{name:"list",description:"<p>Array to splice into</p>\n",type:"Array"},{name:"value",description:"<p>value to be spliced in</p>\n",type:"Any"},{name:"position",description:"<p>in the array from which to insert data</p>\n",type:"Integer"}],class:"p5",module:"Data"},subset:{name:"subset",params:[{name:"list",description:"<p>Array to extract from</p>\n",type:"Array"},{name:"start",description:"<p>position to begin</p>\n",type:"Integer"},{name:"count",description:"<p>number of values to extract</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Data"},float:{name:"float",params:[{name:"str",description:"<p>float string to parse</p>\n",type:"String"}],class:"p5",module:"Data"},int:{name:"int",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number"},{name:"radix",description:"<p>the radix to convert to (default: 10)</p>\n",type:"Integer",optional:!0}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},str:{name:"str",params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number|Array"}],class:"p5",module:"Data"},byte:{name:"byte",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Boolean|Number"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},char:{name:"char",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String|Number"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},unchar:{name:"unchar",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},hex:{name:"hex",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"Number"},{name:"digits",description:"",type:"Number",optional:!0}]},{params:[{name:"ns",description:"<p>array of values to parse</p>\n",type:"Number[]"},{name:"digits",description:"",type:"Number",optional:!0}]}]},unhex:{name:"unhex",class:"p5",module:"Data",overloads:[{params:[{name:"n",description:"<p>value to parse</p>\n",type:"String"}]},{params:[{name:"ns",description:"<p>values to parse</p>\n",type:"Array"}]}]},join:{name:"join",params:[{name:"list",description:"<p>array of Strings to be joined</p>\n",type:"Array"},{name:"separator",description:"<p>String to be placed between each item</p>\n",type:"String"}],class:"p5",module:"Data"},match:{name:"match",params:[{name:"str",description:"<p>the String to be searched</p>\n",type:"String"},{name:"regexp",description:"<p>the regexp to be used for matching</p>\n",type:"String"}],class:"p5",module:"Data"},matchAll:{name:"matchAll",params:[{name:"str",description:"<p>the String to be searched</p>\n",type:"String"},{name:"regexp",description:"<p>the regexp to be used for matching</p>\n",type:"String"}],class:"p5",module:"Data"},nf:{name:"nf",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number|String"},{name:"left",description:"<p>number of digits to the left of the\n                               decimal point</p>\n",type:"Integer|String",optional:!0},{name:"right",description:"<p>number of digits to the right of the\n                               decimal point</p>\n",type:"Integer|String",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Array"},{name:"left",description:"",type:"Integer|String",optional:!0},{name:"right",description:"",type:"Integer|String",optional:!0}]}]},nfc:{name:"nfc",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number|String"},{name:"right",description:"<p>number of digits to the right of the\n                                 decimal point</p>\n",type:"Integer|String",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Array"},{name:"right",description:"",type:"Integer|String",optional:!0}]}]},nfp:{name:"nfp",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number"},{name:"left",description:"<p>number of digits to the left of the decimal\n                               point</p>\n",type:"Integer",optional:!0},{name:"right",description:"<p>number of digits to the right of the\n                               decimal point</p>\n",type:"Integer",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Number[]"},{name:"left",description:"",type:"Integer",optional:!0},{name:"right",description:"",type:"Integer",optional:!0}]}]},nfs:{name:"nfs",class:"p5",module:"Data",overloads:[{params:[{name:"num",description:"<p>the Number to format</p>\n",type:"Number"},{name:"left",description:"<p>number of digits to the left of the decimal\n                               point</p>\n",type:"Integer",optional:!0},{name:"right",description:"<p>number of digits to the right of the\n                               decimal point</p>\n",type:"Integer",optional:!0}]},{params:[{name:"nums",description:"<p>the Numbers to format</p>\n",type:"Array"},{name:"left",description:"",type:"Integer",optional:!0},{name:"right",description:"",type:"Integer",optional:!0}]}]},split:{name:"split",params:[{name:"value",description:"<p>the String to be split</p>\n",type:"String"},{name:"delim",description:"<p>the String used to separate the data</p>\n",type:"String"}],class:"p5",module:"Data"},splitTokens:{name:"splitTokens",params:[{name:"value",description:"<p>the String to be split</p>\n",type:"String"},{name:"delim",description:"<p>list of individual Strings that will be used as\n                         separators</p>\n",type:"String",optional:!0}],class:"p5",module:"Data"},trim:{name:"trim",class:"p5",module:"Data",overloads:[{params:[{name:"str",description:"<p>a String to be trimmed</p>\n",type:"String"}]},{params:[{name:"strs",description:"<p>an Array of Strings to be trimmed</p>\n",type:"Array"}]}]},day:{name:"day",class:"p5",module:"IO"},hour:{name:"hour",class:"p5",module:"IO"},minute:{name:"minute",class:"p5",module:"IO"},millis:{name:"millis",class:"p5",module:"IO"},month:{name:"month",class:"p5",module:"IO"},second:{name:"second",class:"p5",module:"IO"},year:{name:"year",class:"p5",module:"IO"},plane:{name:"plane",params:[{name:"width",description:"<p>width of the plane</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the plane</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>Optional number of triangle\n                            subdivisions in x-dimension</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>Optional number of triangle\n                            subdivisions in y-dimension</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},box:{name:"box",params:[{name:"width",description:"<p>width of the box</p>\n",type:"Number",optional:!0},{name:"Height",description:"<p>height of the box</p>\n",type:"Number",optional:!0},{name:"depth",description:"<p>depth of the box</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>Optional number of triangle\n                           subdivisions in x-dimension</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>Optional number of triangle\n                           subdivisions in y-dimension</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},sphere:{name:"sphere",params:[{name:"radius",description:"<p>radius of circle</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>optional number of subdivisions in x-dimension</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>optional number of subdivisions in y-dimension</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},cylinder:{name:"cylinder",params:[{name:"radius",description:"<p>radius of the surface</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the cylinder</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of subdivisions in x-dimension;\n                              default is 24</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of subdivisions in y-dimension;\n                              default is 1</p>\n",type:"Integer",optional:!0},{name:"bottomCap",description:"<p>whether to draw the bottom of the cylinder</p>\n",type:"Boolean",optional:!0},{name:"topCap",description:"<p>whether to draw the top of the cylinder</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Shape"},cone:{name:"cone",params:[{name:"radius",description:"<p>radius of the bottom surface</p>\n",type:"Number",optional:!0},{name:"height",description:"<p>height of the cone</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of segments,\n                            the more segments the smoother geometry\n                            default is 24</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments,\n                            the more segments the smoother geometry\n                            default is 1</p>\n",type:"Integer",optional:!0},{name:"cap",description:"<p>whether to draw the base of the cone</p>\n",type:"Boolean",optional:!0}],class:"p5",module:"Shape"},ellipsoid:{name:"ellipsoid",params:[{name:"radiusx",description:"<p>x-radius of ellipsoid</p>\n",type:"Number",optional:!0},{name:"radiusy",description:"<p>y-radius of ellipsoid</p>\n",type:"Number",optional:!0},{name:"radiusz",description:"<p>z-radius of ellipsoid</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 24. Avoid detail number above\n                                   150, it may crash the browser.</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 16. Avoid detail number above\n                                   150, it may crash the browser.</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},torus:{name:"torus",params:[{name:"radius",description:"<p>radius of the whole ring</p>\n",type:"Number",optional:!0},{name:"tubeRadius",description:"<p>radius of the tube</p>\n",type:"Number",optional:!0},{name:"detailX",description:"<p>number of segments in x-dimension,\n                               the more segments the smoother geometry\n                               default is 24</p>\n",type:"Integer",optional:!0},{name:"detailY",description:"<p>number of segments in y-dimension,\n                               the more segments the smoother geometry\n                               default is 16</p>\n",type:"Integer",optional:!0}],class:"p5",module:"Shape"},orbitControl:{name:"orbitControl",params:[{name:"sensitivityX",description:"<p>sensitivity to mouse movement along X axis</p>\n",type:"Number",optional:!0},{name:"sensitivityY",description:"<p>sensitivity to mouse movement along Y axis</p>\n",type:"Number",optional:!0},{name:"sensitivityZ",description:"<p>sensitivity to scroll movement along Z axis</p>\n",type:"Number",optional:!0}],class:"p5",module:"Lights, Camera"},debugMode:{name:"debugMode",class:"p5",module:"Lights, Camera",overloads:[{params:[]},{params:[{name:"mode",description:"<p>either GRID or AXES</p>\n",type:"Constant"}]},{params:[{name:"mode",description:"",type:"Constant"},{name:"gridSize",description:"<p>size of one side of the grid</p>\n",type:"Number",optional:!0},{name:"gridDivisions",description:"<p>number of divisions in the grid</p>\n",type:"Number",optional:!0},{name:"xOff",description:"<p>X axis offset from origin (0,0,0)</p>\n",type:"Number",optional:!0},{name:"yOff",description:"<p>Y axis offset from origin (0,0,0)</p>\n",type:"Number",optional:!0},{name:"zOff",description:"<p>Z axis offset from origin (0,0,0)</p>\n",type:"Number",optional:!0}]},{params:[{name:"mode",description:"",type:"Constant"},{name:"axesSize",description:"<p>size of axes icon</p>\n",type:"Number",optional:!0},{name:"xOff",description:"",type:"Number",optional:!0},{name:"yOff",description:"",type:"Number",optional:!0},{name:"zOff",description:"",type:"Number",optional:!0}]},{params:[{name:"gridSize",description:"",type:"Number",optional:!0},{name:"gridDivisions",description:"",type:"Number",optional:!0},{name:"gridXOff",description:"",type:"Number",optional:!0},{name:"gridYOff",description:"",type:"Number",optional:!0},{name:"gridZOff",description:"",type:"Number",optional:!0},{name:"axesSize",description:"",type:"Number",optional:!0},{name:"axesXOff",description:"",type:"Number",optional:!0},{name:"axesYOff",description:"",type:"Number",optional:!0},{name:"axesZOff",description:"",type:"Number",optional:!0}]}]},noDebugMode:{name:"noDebugMode",class:"p5",module:"Lights, Camera"},ambientLight:{name:"ambientLight",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"<p>the alpha value</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}],chainable:1},{params:[{name:"gray",description:"<p>a gray value</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:"<p>the ambient light color</p>\n",type:"p5.Color"}],chainable:1}]},specularColor:{name:"specularColor",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"}],chainable:1},{params:[{name:"value",description:"<p>a color string</p>\n",type:"String"}],chainable:1},{params:[{name:"gray",description:"<p>a gray value</p>\n",type:"Number"}],chainable:1},{params:[{name:"values",description:"<p>an array containing the red,green,blue &\n                                and alpha components of the color</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"color",description:"<p>the ambient light color</p>\n",type:"p5.Color"}],chainable:1}]},directionalLight:{name:"directionalLight",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>red or hue value (depending on the current\ncolor mode),</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value</p>\n",type:"Number"},{name:"position",description:"<p>the direction of the light</p>\n",type:"p5.Vector"}],chainable:1},{params:[{name:"color",description:'<p>color Array, CSS color string,\n                                            or <a href="#/p5.Color">p5.Color</a> value</p>\n',type:"Number[]|String|p5.Color"},{name:"x",description:"<p>x axis direction</p>\n",type:"Number"},{name:"y",description:"<p>y axis direction</p>\n",type:"Number"},{name:"z",description:"<p>z axis direction</p>\n",type:"Number"}],chainable:1},{params:[{name:"color",description:"",type:"Number[]|String|p5.Color"},{name:"position",description:"",type:"p5.Vector"}],chainable:1},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"}],chainable:1}]},pointLight:{name:"pointLight",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>red or hue value (depending on the current\ncolor mode),</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value</p>\n",type:"Number"},{name:"x",description:"<p>x axis position</p>\n",type:"Number"},{name:"y",description:"<p>y axis position</p>\n",type:"Number"},{name:"z",description:"<p>z axis position</p>\n",type:"Number"}],chainable:1},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"position",description:"<p>the position of the light</p>\n",type:"p5.Vector"}],chainable:1},{params:[{name:"color",description:'<p>color Array, CSS color string,\nor <a href="#/p5.Color">p5.Color</a> value</p>\n',type:"Number[]|String|p5.Color"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"}],chainable:1},{params:[{name:"color",description:"",type:"Number[]|String|p5.Color"},{name:"position",description:"",type:"p5.Vector"}],chainable:1}]},lights:{name:"lights",class:"p5",module:"Lights, Camera"},lightFalloff:{name:"lightFalloff",params:[{name:"constant",description:"<p>constant value for determining falloff</p>\n",type:"Number"},{name:"linear",description:"<p>linear value for determining falloff</p>\n",type:"Number"},{name:"quadratic",description:"<p>quadratic value for determining falloff</p>\n",type:"Number"}],class:"p5",module:"Lights, Camera"},spotLight:{name:"spotLight",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>red or hue value (depending on the current\ncolor mode),</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value</p>\n",type:"Number"},{name:"x",description:"<p>x axis position</p>\n",type:"Number"},{name:"y",description:"<p>y axis position</p>\n",type:"Number"},{name:"z",description:"<p>z axis position</p>\n",type:"Number"},{name:"rx",description:"<p>x axis direction of light</p>\n",type:"Number"},{name:"ry",description:"<p>y axis direction of light</p>\n",type:"Number"},{name:"rz",description:"<p>z axis direction of light</p>\n",type:"Number"},{name:"angle",description:"<p>optional parameter for angle. Defaults to PI/3</p>\n",type:"Number",optional:!0},{name:"conc",description:"<p>optional parameter for concentration. Defaults to 100</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"color",description:'<p>color Array, CSS color string,\nor <a href="#/p5.Color">p5.Color</a> value</p>\n',type:"Number[]|String|p5.Color"},{name:"position",description:"<p>the position of the light</p>\n",type:"p5.Vector"},{name:"direction",description:"<p>the direction of the light</p>\n",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"position",description:"",type:"p5.Vector"},{name:"direction",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]},{params:[{name:"color",description:"",type:"Number[]|String|p5.Color"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"direction",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]},{params:[{name:"color",description:"",type:"Number[]|String|p5.Color"},{name:"position",description:"",type:"p5.Vector"},{name:"rx",description:"",type:"Number"},{name:"ry",description:"",type:"Number"},{name:"rz",description:"",type:"Number"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"direction",description:"",type:"p5.Vector"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]},{params:[{name:"v1",description:"",type:"Number"},{name:"v2",description:"",type:"Number"},{name:"v3",description:"",type:"Number"},{name:"position",description:"",type:"p5.Vector"},{name:"rx",description:"",type:"Number"},{name:"ry",description:"",type:"Number"},{name:"rz",description:"",type:"Number"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]},{params:[{name:"color",description:"",type:"Number[]|String|p5.Color"},{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number"},{name:"rx",description:"",type:"Number"},{name:"ry",description:"",type:"Number"},{name:"rz",description:"",type:"Number"},{name:"angle",description:"",type:"Number",optional:!0},{name:"conc",description:"",type:"Number",optional:!0}]}]},noLights:{name:"noLights",class:"p5",module:"Lights, Camera"},loadModel:{name:"loadModel",class:"p5",module:"Shape",overloads:[{params:[{name:"path",description:"<p>Path of the model to be loaded</p>\n",type:"String"},{name:"normalize",description:"<p>If true, scale the model to a\n                                     standardized size when loading</p>\n",type:"Boolean"},{name:"successCallback",description:"<p>Function to be called\n                                    once the model is loaded. Will be passed\n                                    the 3D model object.</p>\n",type:"function(p5.Geometry)",optional:!0},{name:"failureCallback",description:"<p>called with event error if\n                                        the model fails to load.</p>\n",type:"Function(Event)",optional:!0},{name:"fileType",description:"<p>The file extension of the model\n                                     (<code>.stl</code>, <code>.obj</code>).</p>\n",type:"String",optional:!0}]},{params:[{name:"path",description:"",type:"String"},{name:"successCallback",description:"",type:"function(p5.Geometry)",optional:!0},{name:"failureCallback",description:"",type:"Function(Event)",optional:!0},{name:"fileType",description:"",type:"String",optional:!0}]}]},model:{name:"model",params:[{name:"model",description:"<p>Loaded 3d model to be rendered</p>\n",type:"p5.Geometry"}],class:"p5",module:"Shape"},loadShader:{name:"loadShader",params:[{name:"vertFilename",description:"<p>path to file containing vertex shader\nsource code</p>\n",type:"String"},{name:"fragFilename",description:"<p>path to file containing fragment shader\nsource code</p>\n",type:"String"},{name:"callback",description:"<p>callback to be executed after loadShader\ncompletes. On success, the Shader object is passed as the first argument.</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>callback to be executed when an error\noccurs inside loadShader. On error, the error is passed as the first\nargument.</p>\n",type:"Function",optional:!0}],class:"p5",module:"Lights, Camera"},createShader:{name:"createShader",params:[{name:"vertSrc",description:"<p>source code for the vertex shader</p>\n",type:"String"},{name:"fragSrc",description:"<p>source code for the fragment shader</p>\n",type:"String"}],class:"p5",module:"Lights, Camera"},shader:{name:"shader",params:[{name:"s",description:'<p>the desired <a href="#/p5.Shader">p5.Shader</a> to use for rendering\nshapes.</p>\n',type:"p5.Shader",optional:!0}],class:"p5",module:"Lights, Camera"},resetShader:{name:"resetShader",class:"p5",module:"Lights, Camera"},normalMaterial:{name:"normalMaterial",class:"p5",module:"Lights, Camera"},texture:{name:"texture",params:[{name:"tex",description:"<p>2-dimensional graphics\n                   to render as texture</p>\n",type:"p5.Image|p5.MediaElement|p5.Graphics"}],class:"p5",module:"Lights, Camera"},textureMode:{name:"textureMode",params:[{name:"mode",description:"<p>either IMAGE or NORMAL</p>\n",type:"Constant"}],class:"p5",module:"Lights, Camera"},textureWrap:{name:"textureWrap",params:[{name:"wrapX",description:"<p>either CLAMP, REPEAT, or MIRROR</p>\n",type:"Constant"},{name:"wrapY",description:"<p>either CLAMP, REPEAT, or MIRROR</p>\n",type:"Constant",optional:!0}],class:"p5",module:"Lights, Camera"},ambientMaterial:{name:"ambientMaterial",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>gray value, red or hue value\n                        (depending on the current color mode),</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value</p>\n",type:"Number",optional:!0},{name:"v3",description:"<p>blue or brightness value</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"color",description:"<p>color, color Array, or CSS color string</p>\n",type:"Number[]|String|p5.Color"}],chainable:1}]},emissiveMaterial:{name:"emissiveMaterial",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"v1",description:"<p>gray value, red or hue value\n                        (depending on the current color mode),</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value</p>\n",type:"Number",optional:!0},{name:"v3",description:"<p>blue or brightness value</p>\n",type:"Number",optional:!0},{name:"a",description:"<p>opacity</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"color",description:"<p>color, color Array, or CSS color string</p>\n",type:"Number[]|String|p5.Color"}],chainable:1}]},specularMaterial:{name:"specularMaterial",class:"p5",module:"Lights, Camera",overloads:[{params:[{name:"gray",description:"<p>number specifying value between white and black.</p>\n",type:"Number"},{name:"alpha",description:"<p>alpha value relative to current color range\n                                (default is 0-255)</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"v1",description:"<p>red or hue value relative to\n                                the current color range</p>\n",type:"Number"},{name:"v2",description:"<p>green or saturation value\n                                relative to the current color range</p>\n",type:"Number"},{name:"v3",description:"<p>blue or brightness value\n                                relative to the current color range</p>\n",type:"Number"},{name:"alpha",description:"",type:"Number",optional:!0}],chainable:1},{params:[{name:"color",description:"<p>color Array, or CSS color string</p>\n",type:"Number[]|String|p5.Color"}],chainable:1}]},shininess:{name:"shininess",params:[{name:"shine",description:"<p>Degree of Shininess.\n                      Defaults to 1.</p>\n",type:"Number"}],class:"p5",module:"Lights, Camera"},camera:{name:"camera",params:[{name:"x",description:"<p>camera position value on x axis</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>camera position value on y axis</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>camera position value on z axis</p>\n",type:"Number",optional:!0},{name:"centerX",description:"<p>x coordinate representing center of the sketch</p>\n",type:"Number",optional:!0},{name:"centerY",description:"<p>y coordinate representing center of the sketch</p>\n",type:"Number",optional:!0},{name:"centerZ",description:"<p>z coordinate representing center of the sketch</p>\n",type:"Number",optional:!0},{name:"upX",description:"<p>x component of direction 'up' from camera</p>\n",type:"Number",optional:!0},{name:"upY",description:"<p>y component of direction 'up' from camera</p>\n",type:"Number",optional:!0},{name:"upZ",description:"<p>z component of direction 'up' from camera</p>\n",type:"Number",optional:!0}],class:"p5",module:"Lights, Camera"},perspective:{name:"perspective",params:[{name:"fovy",description:'<p>camera frustum vertical field of view,\n                          from bottom to top of view, in <a href="#/p5/angleMode">angleMode</a> units</p>\n',type:"Number",optional:!0},{name:"aspect",description:"<p>camera frustum aspect ratio</p>\n",type:"Number",optional:!0},{name:"near",description:"<p>frustum near plane length</p>\n",type:"Number",optional:!0},{name:"far",description:"<p>frustum far plane length</p>\n",type:"Number",optional:!0}],class:"p5",module:"Lights, Camera"},ortho:{name:"ortho",params:[{name:"left",description:"<p>camera frustum left plane</p>\n",type:"Number",optional:!0},{name:"right",description:"<p>camera frustum right plane</p>\n",type:"Number",optional:!0},{name:"bottom",description:"<p>camera frustum bottom plane</p>\n",type:"Number",optional:!0},{name:"top",description:"<p>camera frustum top plane</p>\n",type:"Number",optional:!0},{name:"near",description:"<p>camera frustum near plane</p>\n",type:"Number",optional:!0},{name:"far",description:"<p>camera frustum far plane</p>\n",type:"Number",optional:!0}],class:"p5",module:"Lights, Camera"},frustum:{name:"frustum",params:[{name:"left",description:"<p>camera frustum left plane</p>\n",type:"Number",optional:!0},{name:"right",description:"<p>camera frustum right plane</p>\n",type:"Number",optional:!0},{name:"bottom",description:"<p>camera frustum bottom plane</p>\n",type:"Number",optional:!0},{name:"top",description:"<p>camera frustum top plane</p>\n",type:"Number",optional:!0},{name:"near",description:"<p>camera frustum near plane</p>\n",type:"Number",optional:!0},{name:"far",description:"<p>camera frustum far plane</p>\n",type:"Number",optional:!0}],class:"p5",module:"Lights, Camera"},createCamera:{name:"createCamera",class:"p5",module:"Lights, Camera"},setCamera:{name:"setCamera",params:[{name:"cam",description:"<p>p5.Camera object</p>\n",type:"p5.Camera"}],class:"p5",module:"Lights, Camera"},setAttributes:{name:"setAttributes",class:"p5",module:"Rendering",overloads:[{params:[{name:"key",description:"<p>Name of attribute</p>\n",type:"String"},{name:"value",description:"<p>New value of named attribute</p>\n",type:"Boolean"}]},{params:[{name:"obj",description:"<p>object with key-value pairs</p>\n",type:"Object"}]}]},sampleRate:{name:"sampleRate",class:"p5",module:"p5.sound"},freqToMidi:{name:"freqToMidi",params:[{name:"frequency",description:'<p>A freqeuncy, for example, the "A"\n                           above Middle C is 440Hz</p>\n',type:"Number"}],class:"p5",module:"p5.sound"},midiToFreq:{name:"midiToFreq",params:[{name:"midiNote",description:"<p>The number of a MIDI note</p>\n",type:"Number"}],class:"p5",module:"p5.sound"},soundFormats:{name:"soundFormats",params:[{name:"formats",description:"<p>i.e. 'mp3', 'wav', 'ogg'</p>\n",type:"String",optional:!0,multiple:!0}],class:"p5",module:"p5.sound"},getAudioContext:{name:"getAudioContext",class:"p5",module:"p5.sound"},userStartAudio:{params:[{name:"element(s)",description:"<p>This argument can be an Element,\n                              Selector String, NodeList, p5.Element,\n                              jQuery Element, or an Array of any of those.</p>\n",type:"Element|Array",optional:!0},{name:"callback",description:"<p>Callback to invoke when the AudioContext\n                              has started</p>\n",type:"Function",optional:!0}],name:"userStartAudio",class:"p5",module:"p5.sound"},loadSound:{name:"loadSound",params:[{name:"path",description:"<p>Path to the sound file, or an array with\n                                  paths to soundfiles in multiple formats\n                                  i.e. ['sound.ogg', 'sound.mp3'].\n                                  Alternately, accepts an object: either\n                                  from the HTML5 File API, or a p5.File.</p>\n",type:"String|Array"},{name:"successCallback",description:"<p>Name of a function to call once file loads</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>Name of a function to call if there is\n                                    an error loading the file.</p>\n",type:"Function",optional:!0},{name:"whileLoading",description:"<p>Name of a function to call while file is loading.\n                               This function will receive the percentage loaded\n                               so far, from 0.0 to 1.0.</p>\n",type:"Function",optional:!0}],class:"p5",module:"p5.sound"},createConvolver:{name:"createConvolver",params:[{name:"path",description:"<p>path to a sound file</p>\n",type:"String"},{name:"callback",description:"<p>function to call if loading is successful.\n                              The object will be passed in as the argument\n                              to the callback function.</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>function to call if loading is not successful.\n                              A custom error will be passed in as the argument\n                              to the callback function.</p>\n",type:"Function",optional:!0}],class:"p5",module:"p5.sound"},setBPM:{name:"setBPM",params:[{name:"BPM",description:"<p>Beats Per Minute</p>\n",type:"Number"},{name:"rampTime",description:"<p>Seconds from now</p>\n",type:"Number"}],class:"p5",module:"p5.sound"},saveSound:{name:"saveSound",params:[{name:"soundFile",description:"<p>p5.SoundFile that you wish to save</p>\n",type:"p5.SoundFile"},{name:"fileName",description:"<p>name of the resulting .wav file.</p>\n",type:"String"}],class:"p5",module:"p5.sound"}},"p5.Color":{toString:{name:"toString",params:[{name:"format",description:"<p>How the color string will be formatted.\nLeaving this empty formats the string as rgba(r, g, b, a).\n'#rgb' '#rgba' '#rrggbb' and '#rrggbbaa' format as hexadecimal color codes.\n'rgb' 'hsb' and 'hsl' return the color formatted in the specified color mode.\n'rgba' 'hsba' and 'hsla' are the same as above but with alpha channels.\n'rgb%' 'hsb%' 'hsl%' 'rgba%' 'hsba%' and 'hsla%' format as percentages.</p>\n",type:"String",optional:!0}],class:"p5.Color",module:"Color"},setRed:{name:"setRed",params:[{name:"red",description:"<p>the new red value</p>\n",type:"Number"}],class:"p5.Color",module:"Color"},setGreen:{name:"setGreen",params:[{name:"green",description:"<p>the new green value</p>\n",type:"Number"}],class:"p5.Color",module:"Color"},setBlue:{name:"setBlue",params:[{name:"blue",description:"<p>the new blue value</p>\n",type:"Number"}],class:"p5.Color",module:"Color"},setAlpha:{name:"setAlpha",params:[{name:"alpha",description:"<p>the new alpha value</p>\n",type:"Number"}],class:"p5.Color",module:"Color"}},"p5.Element":{elt:{name:"elt",class:"p5.Element",module:"DOM"},parent:{name:"parent",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"parent",description:'<p>the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>\n                         of desired parent element</p>\n',type:"String|p5.Element|Object"}],chainable:1},{params:[]}]},id:{name:"id",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"id",description:"<p>ID of the element</p>\n",type:"String"}],chainable:1},{params:[]}]},class:{name:"class",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"class",description:"<p>class to add</p>\n",type:"String"}],chainable:1},{params:[]}]},mousePressed:{name:"mousePressed",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               pressed over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},doubleClicked:{name:"doubleClicked",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               double clicked over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseWheel:{name:"mouseWheel",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               scrolled over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseReleased:{name:"mouseReleased",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               released over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseClicked:{name:"mouseClicked",params:[{name:"fxn",description:"<p>function to be fired when mouse is\n                               clicked over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseMoved:{name:"mouseMoved",params:[{name:"fxn",description:"<p>function to be fired when a mouse moves\n                               over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseOver:{name:"mouseOver",params:[{name:"fxn",description:"<p>function to be fired when a mouse moves\n                               onto the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},mouseOut:{name:"mouseOut",params:[{name:"fxn",description:"<p>function to be fired when a mouse\n                               moves off of an element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},touchStarted:{name:"touchStarted",params:[{name:"fxn",description:"<p>function to be fired when a touch\n                               starts over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},touchMoved:{name:"touchMoved",params:[{name:"fxn",description:"<p>function to be fired when a touch moves over\n                               the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},touchEnded:{name:"touchEnded",params:[{name:"fxn",description:"<p>function to be fired when a touch ends\n                               over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},dragOver:{name:"dragOver",params:[{name:"fxn",description:"<p>function to be fired when a file is\n                               dragged over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},dragLeave:{name:"dragLeave",params:[{name:"fxn",description:"<p>function to be fired when a file is\n                               dragged off the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",type:"Function|Boolean"}],class:"p5.Element",module:"DOM"},addClass:{name:"addClass",params:[{name:"class",description:"<p>name of class to add</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},removeClass:{name:"removeClass",params:[{name:"class",description:"<p>name of class to remove</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},hasClass:{name:"hasClass",params:[{name:"c",description:"<p>class name of class to check</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},toggleClass:{name:"toggleClass",params:[{name:"c",description:"<p>class name to toggle</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},child:{name:"child",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"child",description:'<p>the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>\n                        to add to the current element</p>\n',type:"String|p5.Element",optional:!0}],chainable:1}]},center:{name:"center",params:[{name:"align",description:"<p>passing 'vertical', 'horizontal' aligns element accordingly</p>\n",type:"String",optional:!0}],class:"p5.Element",module:"DOM"},html:{name:"html",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"html",description:"<p>the HTML to be placed inside the element</p>\n",type:"String",optional:!0},{name:"append",description:"<p>whether to append HTML to existing</p>\n",type:"Boolean",optional:!0}],chainable:1}]},position:{name:"position",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"x",description:"<p>x-position relative to upper left of window (optional)</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>y-position relative to upper left of window (optional)</p>\n",type:"Number",optional:!0},{name:"positionType",description:"<p>it can be static, fixed, relative, sticky, initial or inherit (optional)</p>\n",type:"String"}],chainable:1}]},style:{name:"style",class:"p5.Element",module:"DOM",overloads:[{params:[{name:"property",description:"<p>property to be set</p>\n",type:"String"}]},{params:[{name:"property",description:"",type:"String"},{name:"value",description:"<p>value to assign to property</p>\n",type:"String|p5.Color"}],chainable:1}]},attribute:{name:"attribute",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"attr",description:"<p>attribute to set</p>\n",type:"String"},{name:"value",description:"<p>value to assign to attribute</p>\n",type:"String"}],chainable:1}]},removeAttribute:{name:"removeAttribute",params:[{name:"attr",description:"<p>attribute to remove</p>\n",type:"String"}],class:"p5.Element",module:"DOM"},value:{name:"value",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"value",description:"",type:"String|Number"}],chainable:1}]},show:{name:"show",class:"p5.Element",module:"DOM"},hide:{name:"hide",class:"p5.Element",module:"DOM"},size:{name:"size",class:"p5.Element",module:"DOM",overloads:[{params:[]},{params:[{name:"w",description:"<p>width of the element, either AUTO, or a number</p>\n",type:"Number|Constant"},{name:"h",description:"<p>height of the element, either AUTO, or a number</p>\n",type:"Number|Constant",optional:!0}],chainable:1}]},remove:{name:"remove",class:"p5.Element",module:"DOM"},drop:{name:"drop",params:[{name:"callback",description:"<p>callback to receive loaded file, called for each file dropped.</p>\n",type:"Function"},{name:"fxn",description:"<p>callback triggered once when files are dropped with the drop event.</p>\n",type:"Function",optional:!0}],class:"p5.Element",module:"DOM"}},"p5.Graphics":{reset:{name:"reset",class:"p5.Graphics",module:"Rendering"},remove:{name:"remove",class:"p5.Graphics",module:"Rendering"}},JSON:{stringify:{name:"stringify",params:[{name:"object",description:"<p>:Javascript object that you would like to convert to JSON</p>\n",type:"Object"}],class:"JSON",module:"Foundation"}},console:{log:{name:"log",params:[{name:"message",description:"<p>:Message that you would like to print to the console</p>\n",type:"String|Expression|Object"}],class:"console",module:"Foundation"}},"p5.TypedDict":{size:{name:"size",class:"p5.TypedDict",module:"Data"},hasKey:{name:"hasKey",params:[{name:"key",description:"<p>that you want to look up</p>\n",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},get:{name:"get",params:[{name:"the",description:"<p>key you want to access</p>\n",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},set:{name:"set",params:[{name:"key",description:"",type:"Number|String"},{name:"value",description:"",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},create:{name:"create",class:"p5.TypedDict",module:"Data",overloads:[{params:[{name:"key",description:"",type:"Number|String"},{name:"value",description:"",type:"Number|String"}]},{params:[{name:"obj",description:"<p>key/value pair</p>\n",type:"Object"}]}]},clear:{name:"clear",class:"p5.TypedDict",module:"Data"},remove:{name:"remove",params:[{name:"key",description:"<p>for the pair to remove</p>\n",type:"Number|String"}],class:"p5.TypedDict",module:"Data"},print:{name:"print",class:"p5.TypedDict",module:"Data"},saveTable:{name:"saveTable",class:"p5.TypedDict",module:"Data"},saveJSON:{name:"saveJSON",class:"p5.TypedDict",module:"Data"}},"p5.NumberDict":{add:{name:"add",params:[{name:"Key",description:"<p>for the value you wish to add to</p>\n",type:"Number"},{name:"Number",description:"<p>to add to the value</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},sub:{name:"sub",params:[{name:"Key",description:"<p>for the value you wish to subtract from</p>\n",type:"Number"},{name:"Number",description:"<p>to subtract from the value</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},mult:{name:"mult",params:[{name:"Key",description:"<p>for value you wish to multiply</p>\n",type:"Number"},{name:"Amount",description:"<p>to multiply the value by</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},div:{name:"div",params:[{name:"Key",description:"<p>for value you wish to divide</p>\n",type:"Number"},{name:"Amount",description:"<p>to divide the value by</p>\n",type:"Number"}],class:"p5.NumberDict",module:"Data"},minValue:{name:"minValue",class:"p5.NumberDict",module:"Data"},maxValue:{name:"maxValue",class:"p5.NumberDict",module:"Data"},minKey:{name:"minKey",class:"p5.NumberDict",module:"Data"},maxKey:{name:"maxKey",class:"p5.NumberDict",module:"Data"}},"p5.MediaElement":{src:{name:"src",class:"p5.MediaElement",module:"DOM"},play:{name:"play",class:"p5.MediaElement",module:"DOM"},stop:{name:"stop",class:"p5.MediaElement",module:"DOM"},pause:{name:"pause",class:"p5.MediaElement",module:"DOM"},loop:{name:"loop",class:"p5.MediaElement",module:"DOM"},noLoop:{name:"noLoop",class:"p5.MediaElement",module:"DOM"},autoplay:{name:"autoplay",params:[{name:"shouldAutoplay",description:"<p>whether the element should autoplay</p>\n",type:"Boolean"}],class:"p5.MediaElement",module:"DOM"},volume:{name:"volume",class:"p5.MediaElement",module:"DOM",overloads:[{params:[]},{params:[{name:"val",description:"<p>volume between 0.0 and 1.0</p>\n",type:"Number"}],chainable:1}]},speed:{name:"speed",class:"p5.MediaElement",module:"DOM",overloads:[{params:[]},{params:[{name:"speed",description:"<p>speed multiplier for element playback</p>\n",type:"Number"}],chainable:1}]},time:{name:"time",class:"p5.MediaElement",module:"DOM",overloads:[{params:[]},{params:[{name:"time",description:"<p>time to jump to (in seconds)</p>\n",type:"Number"}],chainable:1}]},duration:{name:"duration",class:"p5.MediaElement",module:"DOM"},onended:{name:"onended",params:[{name:"callback",description:"<p>function to call when the\n                            soundfile has ended. The\n                            media element will be passed\n                            in as the argument to the\n                            callback.</p>\n",type:"Function"}],class:"p5.MediaElement",module:"DOM"},connect:{name:"connect",params:[{name:"audioNode",description:"<p>AudioNode from the Web Audio API,\nor an object from the p5.sound library</p>\n",type:"AudioNode|Object"}],class:"p5.MediaElement",module:"DOM"},disconnect:{name:"disconnect",class:"p5.MediaElement",module:"DOM"},showControls:{name:"showControls",class:"p5.MediaElement",module:"DOM"},hideControls:{name:"hideControls",class:"p5.MediaElement",module:"DOM"},addCue:{name:"addCue",params:[{name:"time",description:"<p>Time in seconds, relative to this media\n                            element's playback. For example, to trigger\n                            an event every time playback reaches two\n                            seconds, pass in the number 2. This will be\n                            passed as the first parameter to\n                            the callback function.</p>\n",type:"Number"},{name:"callback",description:"<p>Name of a function that will be\n                            called at the given time. The callback will\n                            receive time and (optionally) param as its\n                            two parameters.</p>\n",type:"Function"},{name:"value",description:"<p>An object to be passed as the\n                            second parameter to the\n                            callback function.</p>\n",type:"Object",optional:!0}],class:"p5.MediaElement",module:"DOM"},removeCue:{name:"removeCue",params:[{name:"id",description:"<p>ID of the cue, as returned by addCue</p>\n",type:"Number"}],class:"p5.MediaElement",module:"DOM"},clearCues:{name:"clearCues",params:[{name:"id",description:"<p>ID of the cue, as returned by addCue</p>\n",type:"Number"}],class:"p5.MediaElement",module:"DOM"}},"p5.File":{file:{name:"file",class:"p5.File",module:"DOM"},type:{name:"type",class:"p5.File",module:"DOM"},subtype:{name:"subtype",class:"p5.File",module:"DOM"},name:{name:"name",class:"p5.File",module:"DOM"},size:{name:"size",class:"p5.File",module:"DOM"},data:{name:"data",class:"p5.File",module:"DOM"}},"p5.Image":{width:{name:"width",class:"p5.Image",module:"Image"},height:{name:"height",class:"p5.Image",module:"Image"},pixels:{name:"pixels",class:"p5.Image",module:"Image"},loadPixels:{name:"loadPixels",class:"p5.Image",module:"Image"},updatePixels:{name:"updatePixels",class:"p5.Image",module:"Image",overloads:[{params:[{name:"x",description:"<p>x-offset of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"},{name:"y",description:"<p>y-offset of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"},{name:"w",description:"<p>height of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"},{name:"h",description:"<p>height of the target update area for the\n                             underlying canvas</p>\n",type:"Integer"}]},{params:[]}]},get:{name:"get",class:"p5.Image",module:"Image",overloads:[{params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"w",description:"<p>width</p>\n",type:"Number"},{name:"h",description:"<p>height</p>\n",type:"Number"}]},{params:[]},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"}]}]},set:{name:"set",params:[{name:"x",description:"<p>x-coordinate of the pixel</p>\n",type:"Number"},{name:"y",description:"<p>y-coordinate of the pixel</p>\n",type:"Number"},{name:"a",description:'<p>grayscale value | pixel array |\n                               a <a href="#/p5.Color">p5.Color</a> | image to copy</p>\n',type:"Number|Number[]|Object"}],class:"p5.Image",module:"Image"},resize:{name:"resize",params:[{name:"width",description:"<p>the resized image width</p>\n",type:"Number"},{name:"height",description:"<p>the resized image height</p>\n",type:"Number"}],class:"p5.Image",module:"Image"},copy:{name:"copy",class:"p5.Image",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image|p5.Element"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"}]}]},mask:{name:"mask",params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image"}],class:"p5.Image",module:"Image"},filter:{name:"filter",params:[{name:"filterType",description:"<p>either THRESHOLD, GRAY, OPAQUE, INVERT,\n                               POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n                               See Filters.js for docs on\n                               each available filter</p>\n",type:"Constant"},{name:"filterParam",description:"<p>an optional parameter unique\n                               to each filter, see above</p>\n",type:"Number",optional:!0}],class:"p5.Image",module:"Image"},blend:{name:"blend",class:"p5.Image",module:"Image",overloads:[{params:[{name:"srcImage",description:"<p>source image</p>\n",type:"p5.Image"},{name:"sx",description:"<p>X coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sy",description:"<p>Y coordinate of the source's upper left corner</p>\n",type:"Integer"},{name:"sw",description:"<p>source image width</p>\n",type:"Integer"},{name:"sh",description:"<p>source image height</p>\n",type:"Integer"},{name:"dx",description:"<p>X coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dy",description:"<p>Y coordinate of the destination's upper left corner</p>\n",type:"Integer"},{name:"dw",description:"<p>destination image width</p>\n",type:"Integer"},{name:"dh",description:"<p>destination image height</p>\n",type:"Integer"},{name:"blendMode",description:'<p>the blend mode. either\n    BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n    MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n    SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.</p>\n<p>Available blend modes are: normal | multiply | screen | overlay |\n           darken | lighten | color-dodge | color-burn | hard-light |\n           soft-light | difference | exclusion | hue | saturation |\n           color | luminosity</p>\n<p><a href="http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/">http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/</a></p>\n',type:"Constant"}]},{params:[{name:"sx",description:"",type:"Integer"},{name:"sy",description:"",type:"Integer"},{name:"sw",description:"",type:"Integer"},{name:"sh",description:"",type:"Integer"},{name:"dx",description:"",type:"Integer"},{name:"dy",description:"",type:"Integer"},{name:"dw",description:"",type:"Integer"},{name:"dh",description:"",type:"Integer"},{name:"blendMode",description:"",type:"Constant"}]}]},save:{name:"save",params:[{name:"filename",description:"<p>give your file a name</p>\n",type:"String"},{name:"extension",description:"<p>'png' or 'jpg'</p>\n",type:"String"}],class:"p5.Image",module:"Image"},reset:{name:"reset",class:"p5.Image",module:"Image"},getCurrentFrame:{name:"getCurrentFrame",class:"p5.Image",module:"Image"},setFrame:{name:"setFrame",params:[{name:"index",description:"<p>the index for the frame that should be displayed</p>\n",type:"Number"}],class:"p5.Image",module:"Image"},numFrames:{name:"numFrames",class:"p5.Image",module:"Image"},play:{name:"play",class:"p5.Image",module:"Image"},pause:{name:"pause",class:"p5.Image",module:"Image"},delay:{name:"delay",params:[{name:"d",description:"<p>the amount in milliseconds to delay between switching frames</p>\n",type:"Number"},{name:"index",description:"<p>the index of the frame that should have the new delay value {optional}</p>\n",type:"Number",optional:!0}],class:"p5.Image",module:"Image"}},"p5.PrintWriter":{write:{name:"write",params:[{name:"data",description:"<p>all data to be written by the PrintWriter</p>\n",type:"Array"}],class:"p5.PrintWriter",module:"IO"},print:{name:"print",params:[{name:"data",description:"<p>all data to be printed by the PrintWriter</p>\n",type:"Array"}],class:"p5.PrintWriter",module:"IO"},clear:{name:"clear",class:"p5.PrintWriter",module:"IO"},close:{name:"close",class:"p5.PrintWriter",module:"IO"}},"p5.Table":{columns:{name:"columns",class:"p5.Table",module:"IO"},rows:{name:"rows",class:"p5.Table",module:"IO"},addRow:{name:"addRow",params:[{name:"row",description:"<p>row to be added to the table</p>\n",type:"p5.TableRow",optional:!0}],class:"p5.Table",module:"IO"},removeRow:{name:"removeRow",params:[{name:"id",description:"<p>ID number of the row to remove</p>\n",type:"Integer"}],class:"p5.Table",module:"IO"},getRow:{name:"getRow",params:[{name:"rowID",description:"<p>ID number of the row to get</p>\n",type:"Integer"}],class:"p5.Table",module:"IO"},getRows:{name:"getRows",class:"p5.Table",module:"IO"},findRow:{name:"findRow",params:[{name:"value",description:"<p>The value to match</p>\n",type:"String"},{name:"column",description:"<p>ID number or title of the\n                               column to search</p>\n",type:"Integer|String"}],class:"p5.Table",module:"IO"},findRows:{name:"findRows",params:[{name:"value",description:"<p>The value to match</p>\n",type:"String"},{name:"column",description:"<p>ID number or title of the\n                               column to search</p>\n",type:"Integer|String"}],class:"p5.Table",module:"IO"},matchRow:{name:"matchRow",params:[{name:"regexp",description:"<p>The regular expression to match</p>\n",type:"String|RegExp"},{name:"column",description:"<p>The column ID (number) or\n                                 title (string)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},matchRows:{name:"matchRows",params:[{name:"regexp",description:"<p>The regular expression to match</p>\n",type:"String"},{name:"column",description:"<p>The column ID (number) or\n                                 title (string)</p>\n",type:"String|Integer",optional:!0}],class:"p5.Table",module:"IO"},getColumn:{name:"getColumn",params:[{name:"column",description:"<p>String or Number of the column to return</p>\n",type:"String|Number"}],class:"p5.Table",module:"IO"},clearRows:{name:"clearRows",class:"p5.Table",module:"IO"},addColumn:{name:"addColumn",params:[{name:"title",description:"<p>title of the given column</p>\n",type:"String",optional:!0}],class:"p5.Table",module:"IO"},getColumnCount:{name:"getColumnCount",class:"p5.Table",module:"IO"},getRowCount:{name:"getRowCount",class:"p5.Table",module:"IO"},removeTokens:{name:"removeTokens",params:[{name:"chars",description:"<p>String listing characters to be removed</p>\n",type:"String"},{name:"column",description:"<p>Column ID (number)\n                                 or name (string)</p>\n",type:"String|Integer",optional:!0}],class:"p5.Table",module:"IO"},trim:{name:"trim",params:[{name:"column",description:"<p>Column ID (number)\n                                 or name (string)</p>\n",type:"String|Integer",optional:!0}],class:"p5.Table",module:"IO"},removeColumn:{name:"removeColumn",params:[{name:"column",description:"<p>columnName (string) or ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},set:{name:"set",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>column ID (Number)\n                              or title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>value to assign</p>\n",type:"String|Number"}],class:"p5.Table",module:"IO"},setNum:{name:"setNum",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>column ID (Number)\n                              or title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>value to assign</p>\n",type:"Number"}],class:"p5.Table",module:"IO"},setString:{name:"setString",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>column ID (Number)\n                              or title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>value to assign</p>\n",type:"String"}],class:"p5.Table",module:"IO"},get:{name:"get",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>columnName (string) or\n                                  ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},getNum:{name:"getNum",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>columnName (string) or\n                                  ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},getString:{name:"getString",params:[{name:"row",description:"<p>row ID</p>\n",type:"Integer"},{name:"column",description:"<p>columnName (string) or\n                                  ID (number)</p>\n",type:"String|Integer"}],class:"p5.Table",module:"IO"},getObject:{name:"getObject",params:[{name:"headerColumn",description:"<p>Name of the column which should be used to\n                             title each row object (optional)</p>\n",type:"String",optional:!0}],class:"p5.Table",module:"IO"},getArray:{name:"getArray",class:"p5.Table",module:"IO"}},"p5.TableRow":{set:{name:"set",params:[{name:"column",description:"<p>Column ID (Number)\n                              or Title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>The value to be stored</p>\n",type:"String|Number"}],class:"p5.TableRow",module:"IO"},setNum:{name:"setNum",params:[{name:"column",description:"<p>Column ID (Number)\n                              or Title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>The value to be stored\n                              as a Float</p>\n",type:"Number|String"}],class:"p5.TableRow",module:"IO"},setString:{name:"setString",params:[{name:"column",description:"<p>Column ID (Number)\n                              or Title (String)</p>\n",type:"String|Integer"},{name:"value",description:"<p>The value to be stored\n                              as a String</p>\n",type:"String|Number|Boolean|Object"}],class:"p5.TableRow",module:"IO"},get:{name:"get",params:[{name:"column",description:"<p>columnName (string) or\n                                 ID (number)</p>\n",type:"String|Integer"}],class:"p5.TableRow",module:"IO"},getNum:{name:"getNum",params:[{name:"column",description:"<p>columnName (string) or\n                                 ID (number)</p>\n",type:"String|Integer"}],class:"p5.TableRow",module:"IO"},getString:{name:"getString",params:[{name:"column",description:"<p>columnName (string) or\n                                 ID (number)</p>\n",type:"String|Integer"}],class:"p5.TableRow",module:"IO"}},"p5.XML":{getParent:{name:"getParent",class:"p5.XML",module:"IO"},getName:{name:"getName",class:"p5.XML",module:"IO"},setName:{name:"setName",params:[{name:"the",description:"<p>new name of the node</p>\n",type:"String"}],class:"p5.XML",module:"IO"},hasChildren:{name:"hasChildren",class:"p5.XML",module:"IO"},listChildren:{name:"listChildren",class:"p5.XML",module:"IO"},getChildren:{name:"getChildren",params:[{name:"name",description:"<p>element name</p>\n",type:"String",optional:!0}],class:"p5.XML",module:"IO"},getChild:{name:"getChild",params:[{name:"name",description:"<p>element name or index</p>\n",type:"String|Integer"}],class:"p5.XML",module:"IO"},addChild:{name:"addChild",params:[{name:"node",description:'<p>a <a href="#/p5.XML">p5.XML</a> Object which will be the child to be added</p>\n',type:"p5.XML"}],class:"p5.XML",module:"IO"},removeChild:{name:"removeChild",params:[{name:"name",description:"<p>element name or index</p>\n",type:"String|Integer"}],class:"p5.XML",module:"IO"},getAttributeCount:{name:"getAttributeCount",class:"p5.XML",module:"IO"},listAttributes:{name:"listAttributes",class:"p5.XML",module:"IO"},hasAttribute:{name:"hasAttribute",params:[{name:"the",description:"<p>attribute to be checked</p>\n",type:"String"}],class:"p5.XML",module:"IO"},getNum:{name:"getNum",params:[{name:"name",description:"<p>the non-null full name of the attribute</p>\n",type:"String"},{name:"defaultValue",description:"<p>the default value of the attribute</p>\n",type:"Number",optional:!0}],class:"p5.XML",module:"IO"},getString:{name:"getString",params:[{name:"name",description:"<p>the non-null full name of the attribute</p>\n",type:"String"},{name:"defaultValue",description:"<p>the default value of the attribute</p>\n",type:"Number",optional:!0}],class:"p5.XML",module:"IO"},setAttribute:{name:"setAttribute",params:[{name:"name",description:"<p>the full name of the attribute</p>\n",type:"String"},{name:"value",description:"<p>the value of the attribute</p>\n",type:"Number|String|Boolean"}],class:"p5.XML",module:"IO"},getContent:{name:"getContent",params:[{name:"defaultValue",description:"<p>value returned if no content is found</p>\n",type:"String",optional:!0}],class:"p5.XML",module:"IO"},setContent:{name:"setContent",params:[{name:"text",description:"<p>the new content</p>\n",type:"String"}],class:"p5.XML",module:"IO"},serialize:{name:"serialize",class:"p5.XML",module:"IO"}},"p5.Vector":{x:{name:"x",class:"p5.Vector",module:"Math"},y:{name:"y",class:"p5.Vector",module:"Math"},z:{name:"z",class:"p5.Vector",module:"Math"},toString:{name:"toString",class:"p5.Vector",module:"Math"},set:{name:"set",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>the x component of the vector</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>the y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>the z component of the vector</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>the vector to set</p>\n",type:"p5.Vector|Number[]"}],chainable:1}]},copy:{name:"copy",class:"p5.Vector",module:"Math"},add:{name:"add",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>the x component of the vector to be added</p>\n",type:"Number"},{name:"y",description:"<p>the y component of the vector to be added</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>the z component of the vector to be added</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>the vector to add</p>\n",type:"p5.Vector|Number[]"}],chainable:1},{params:[{name:"v1",description:'<p>a <a href="#/p5.Vector">p5.Vector</a> to add</p>\n',type:"p5.Vector"},{name:"v2",description:'<p>a <a href="#/p5.Vector">p5.Vector</a> to add</p>\n',type:"p5.Vector"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1}]},rem:{name:"rem",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>the x component of divisor vector</p>\n",type:"Number"},{name:"y",description:"<p>the y component of divisor vector</p>\n",type:"Number"},{name:"z",description:"<p>the z component of divisor vector</p>\n",type:"Number"}],chainable:1},{params:[{name:"value",description:"<p>divisor vector</p>\n",type:"p5.Vector | Number[]"}],chainable:1},{params:[{name:"v1",description:'<p>dividend <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>divisor <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1},{params:[{name:"v1",description:"",type:"p5.Vector"},{name:"v2",description:"",type:"p5.Vector"}],static:1}]},sub:{name:"sub",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>the x component of the vector to subtract</p>\n",type:"Number"},{name:"y",description:"<p>the y component of the vector to subtract</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>the z component of the vector to subtract</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"value",description:"<p>the vector to subtract</p>\n",type:"p5.Vector|Number[]"}],chainable:1},{params:[{name:"v1",description:'<p>a <a href="#/p5.Vector">p5.Vector</a> to subtract from</p>\n',type:"p5.Vector"},{name:"v2",description:'<p>a <a href="#/p5.Vector">p5.Vector</a> to subtract</p>\n',type:"p5.Vector"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1}]},mult:{name:"mult",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"n",description:"<p>The number to multiply with the vector</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"<p>The number to multiply with the x component of the vector</p>\n",type:"Number"},{name:"y",description:"<p>The number to multiply with the y component of the vector</p>\n",type:"Number"},{name:"z",description:"<p>The number to multiply with the z component of the vector</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"arr",description:"<p>The array to multiply with the components of the vector</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"v",description:"<p>The vector to multiply with the components of the original vector</p>\n",type:"p5.Vector"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number",optional:!0}],static:1},{params:[{name:"v",description:"",type:"p5.Vector"},{name:"n",description:"",type:"Number"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"v1",description:"",type:"p5.Vector"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"arr",description:"",type:"Number[]"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1}]},div:{name:"div",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"n",description:"<p>The number to divide the vector by</p>\n",type:"Number"}],chainable:1},{params:[{name:"x",description:"<p>The number to divide with the x component of the vector</p>\n",type:"Number"},{name:"y",description:"<p>The number to divide with the y component of the vector</p>\n",type:"Number"},{name:"z",description:"<p>The number to divide with the z component of the vector</p>\n",type:"Number",optional:!0}],chainable:1},{params:[{name:"arr",description:"<p>The array to divide the components of the vector by</p>\n",type:"Number[]"}],chainable:1},{params:[{name:"v",description:"<p>The vector to divide the components of the original vector by</p>\n",type:"p5.Vector"}],chainable:1},{params:[{name:"x",description:"",type:"Number"},{name:"y",description:"",type:"Number"},{name:"z",description:"",type:"Number",optional:!0}],static:1},{params:[{name:"v",description:"",type:"p5.Vector"},{name:"n",description:"",type:"Number"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"v1",description:"",type:"p5.Vector"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1},{params:[{name:"v0",description:"",type:"p5.Vector"},{name:"arr",description:"",type:"Number[]"},{name:"target",description:"",type:"p5.Vector",optional:!0}],static:1}]},mag:{name:"mag",class:"p5.Vector",module:"Math",overloads:[{params:[]},{params:[{name:"vecT",description:"<p>the vector to return the magnitude of</p>\n",type:"p5.Vector"}],static:1}]},magSq:{name:"magSq",class:"p5.Vector",module:"Math"},dot:{name:"dot",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>x component of the vector</p>\n",type:"Number"},{name:"y",description:"<p>y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>z component of the vector</p>\n",type:"Number",optional:!0}]},{params:[{name:"value",description:'<p>value component of the vector or a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:'<p>the first <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>the second <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1}]},cross:{name:"cross",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"v",description:'<p><a href="#/p5.Vector">p5.Vector</a> to be crossed</p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:'<p>the first <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>the second <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1}]},dist:{name:"dist",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"v",description:'<p>the x, y, and z coordinates of a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}]},{params:[{name:"v1",description:'<p>the first <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"},{name:"v2",description:'<p>the second <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],static:1}]},normalize:{name:"normalize",class:"p5.Vector",module:"Math"},limit:{name:"limit",params:[{name:"max",description:"<p>the maximum magnitude for the vector</p>\n",type:"Number"}],class:"p5.Vector",module:"Math"},setMag:{name:"setMag",params:[{name:"len",description:"<p>the new length for this vector</p>\n",type:"Number"}],class:"p5.Vector",module:"Math"},heading:{name:"heading",class:"p5.Vector",module:"Math"},rotate:{name:"rotate",params:[{name:"angle",description:"<p>the angle of rotation</p>\n",type:"Number"}],class:"p5.Vector",module:"Math"},angleBetween:{name:"angleBetween",params:[{name:"value",description:'<p>the x, y, and z components of a <a href="#/p5.Vector">p5.Vector</a></p>\n',type:"p5.Vector"}],class:"p5.Vector",module:"Math"},lerp:{name:"lerp",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>the x component</p>\n",type:"Number"},{name:"y",description:"<p>the y component</p>\n",type:"Number"},{name:"z",description:"<p>the z component</p>\n",type:"Number"},{name:"amt",description:"<p>the amount of interpolation; some value between 0.0\n                        (old vector) and 1.0 (new vector). 0.9 is very near\n                        the new vector. 0.5 is halfway in between.</p>\n",type:"Number"}],chainable:1},{params:[{name:"v",description:'<p>the <a href="#/p5.Vector">p5.Vector</a> to lerp to</p>\n',type:"p5.Vector"},{name:"amt",description:"",type:"Number"}],chainable:1},{params:[{name:"v1",description:"",type:"p5.Vector"},{name:"v2",description:"",type:"p5.Vector"},{name:"amt",description:"",type:"Number"},{name:"target",description:"<p>the vector to receive the result (Optional)</p>\n",type:"p5.Vector",optional:!0}],static:1}]},reflect:{name:"reflect",params:[{name:"surfaceNormal",description:'<p>the <a href="#/p5.Vector">p5.Vector</a> to reflect about, will be normalized by this method</p>\n',type:"p5.Vector"}],class:"p5.Vector",module:"Math"},array:{name:"array",class:"p5.Vector",module:"Math"},equals:{name:"equals",class:"p5.Vector",module:"Math",overloads:[{params:[{name:"x",description:"<p>the x component of the vector</p>\n",type:"Number",optional:!0},{name:"y",description:"<p>the y component of the vector</p>\n",type:"Number",optional:!0},{name:"z",description:"<p>the z component of the vector</p>\n",type:"Number",optional:!0}]},{params:[{name:"value",description:"<p>the vector to compare</p>\n",type:"p5.Vector|Array"}]}]},fromAngle:{name:"fromAngle",params:[{name:"angle",description:'<p>the desired angle, in radians (unaffected by <a href="#/p5/angleMode">angleMode</a>)</p>\n',type:"Number"},{name:"length",description:"<p>the length of the new vector (defaults to 1)</p>\n",type:"Number",optional:!0}],class:"p5.Vector",module:"Math"},fromAngles:{name:"fromAngles",params:[{name:"theta",description:"<p>the polar angle, in radians (zero is up)</p>\n",type:"Number"},{name:"phi",description:"<p>the azimuthal angle, in radians\n                              (zero is out of the screen)</p>\n",type:"Number"},{name:"length",description:"<p>the length of the new vector (defaults to 1)</p>\n",type:"Number",optional:!0}],class:"p5.Vector",module:"Math"},random2D:{name:"random2D",class:"p5.Vector",module:"Math"},random3D:{name:"random3D",class:"p5.Vector",module:"Math"}},"p5.Font":{font:{name:"font",class:"p5.Font",module:"Typography"},textBounds:{name:"textBounds",params:[{name:"line",description:"<p>a line of text</p>\n",type:"String"},{name:"x",description:"<p>x-position</p>\n",type:"Number"},{name:"y",description:"<p>y-position</p>\n",type:"Number"},{name:"fontSize",description:"<p>font size to use (optional) Default is 12.</p>\n",type:"Number",optional:!0},{name:"options",description:"<p>opentype options (optional)\n                           opentype fonts contains alignment and baseline options.\n                           Default is 'LEFT' and 'alphabetic'</p>\n",type:"Object",optional:!0}],class:"p5.Font",module:"Typography"},textToPoints:{name:"textToPoints",params:[{name:"txt",description:"<p>a line of text</p>\n",type:"String"},{name:"x",description:"<p>x-position</p>\n",type:"Number"},{name:"y",description:"<p>y-position</p>\n",type:"Number"},{name:"fontSize",description:"<p>font size to use (optional)</p>\n",type:"Number"},{name:"options",description:"<p>an (optional) object that can contain:</p>\n<p><br>sampleFactor - the ratio of path-length to number of samples\n(default=.1); higher values yield more points and are therefore\nmore precise</p>\n<p><br>simplifyThreshold - if set to a non-zero value, collinear points will be\nbe removed from the polygon; the value represents the threshold angle to use\nwhen determining whether two edges are collinear</p>\n",type:"Object",optional:!0}],class:"p5.Font",module:"Typography"}},"p5.Camera":{perspective:{name:"perspective",class:"p5.Camera",module:"Lights, Camera"},ortho:{name:"ortho",class:"p5.Camera",module:"Lights, Camera"},frustum:{name:"frustum",class:"p5.Camera",module:"Lights, Camera"},pan:{name:"pan",params:[{name:"angle",description:'<p>amount to rotate camera in current\n<a href="#/p5/angleMode">angleMode</a> units.\nGreater than 0 values rotate counterclockwise (to the left).</p>\n',type:"Number"}],class:"p5.Camera",module:"Lights, Camera"},tilt:{name:"tilt",params:[{name:"angle",description:'<p>amount to rotate camera in current\n<a href="#/p5/angleMode">angleMode</a> units.\nGreater than 0 values rotate counterclockwise (to the left).</p>\n',type:"Number"}],class:"p5.Camera",module:"Lights, Camera"},lookAt:{name:"lookAt",params:[{name:"x",description:"<p>x position of a point in world space</p>\n",type:"Number"},{name:"y",description:"<p>y position of a point in world space</p>\n",type:"Number"},{name:"z",description:"<p>z position of a point in world space</p>\n",type:"Number"}],class:"p5.Camera",module:"Lights, Camera"},camera:{name:"camera",class:"p5.Camera",module:"Lights, Camera"},move:{name:"move",params:[{name:"x",description:"<p>amount to move along camera's left-right axis</p>\n",type:"Number"},{name:"y",description:"<p>amount to move along camera's up-down axis</p>\n",type:"Number"},{name:"z",description:"<p>amount to move along camera's forward-backward axis</p>\n",type:"Number"}],class:"p5.Camera",module:"Lights, Camera"},setPosition:{name:"setPosition",params:[{name:"x",description:"<p>x position of a point in world space</p>\n",type:"Number"},{name:"y",description:"<p>y position of a point in world space</p>\n",type:"Number"},{name:"z",description:"<p>z position of a point in world space</p>\n",type:"Number"}],class:"p5.Camera",module:"Lights, Camera"}},"p5.Geometry":{computeFaces:{name:"computeFaces",class:"p5.Geometry",module:"Lights, Camera"},computeNormals:{name:"computeNormals",class:"p5.Geometry",module:"Lights, Camera"},averageNormals:{name:"averageNormals",class:"p5.Geometry",module:"Lights, Camera"},averagePoleNormals:{name:"averagePoleNormals",class:"p5.Geometry",module:"Lights, Camera"},normalize:{name:"normalize",class:"p5.Geometry",module:"Lights, Camera"}},"p5.Shader":{setUniform:{name:"setUniform",params:[{name:"uniformName",description:"<p>the name of the uniform in the\nshader program</p>\n",type:"String"},{name:"data",description:"<p>the data to be associated\nwith that uniform; type varies (could be a single numerical value, array,\nmatrix, or texture / sampler reference)</p>\n",type:"Object|Number|Boolean|Number[]"}],class:"p5.Shader",module:"Lights, Camera"}},"p5.sound":{getMasterVolume:{name:"getMasterVolume",class:"p5.sound",module:"p5.sound"},masterVolume:{name:"masterVolume",params:[{name:"volume",description:"<p>Volume (amplitude) between 0.0\n                                   and 1.0 or modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>Fade for t seconds</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>Schedule this event to happen at\n                               t seconds in the future</p>\n",type:"Number",optional:!0}],class:"p5.sound",module:"p5.sound"},soundOut:{name:"soundOut",class:"p5.sound",module:"p5.sound"}},"p5.Effect":{amp:{name:"amp",params:[{name:"vol",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number",optional:!0},{name:"rampTime",description:"<p>create a fade that lasts until rampTime</p>\n",type:"Number",optional:!0},{name:"tFromNow",description:"<p>schedule this event to happen in tFromNow seconds</p>\n",type:"Number",optional:!0}],class:"p5.Effect",module:"p5.sound"},chain:{name:"chain",params:[{name:"arguments",description:"<p>Chain together multiple sound objects</p>\n",type:"Object",optional:!0}],class:"p5.Effect",module:"p5.sound"},drywet:{name:"drywet",params:[{name:"fade",description:"<p>The desired drywet value (0 - 1.0)</p>\n",type:"Number",optional:!0}],class:"p5.Effect",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Effect",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Effect",module:"p5.sound"}},"p5.Filter":{biquadFilter:{name:"biquadFilter",class:"p5.Filter",module:"p5.sound"},process:{name:"process",params:[{name:"Signal",description:"<p>An object that outputs audio</p>\n",type:"Object"},{name:"freq",description:"<p>Frequency in Hz, from 10 to 22050</p>\n",type:"Number",optional:!0},{name:"res",description:"<p>Resonance/Width of the filter frequency\n                      from 0.001 to 1000</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},set:{name:"set",params:[{name:"freq",description:"<p>Frequency in Hz, from 10 to 22050</p>\n",type:"Number",optional:!0},{name:"res",description:"<p>Resonance (Q) from 0.001 to 1000</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},freq:{name:"freq",params:[{name:"freq",description:"<p>Filter Frequency</p>\n",type:"Number"},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},res:{name:"res",params:[{name:"res",description:"<p>Resonance/Width of filter freq\n                     from 0.001 to 1000</p>\n",type:"Number"},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Filter",module:"p5.sound"},gain:{name:"gain",params:[{name:"gain",description:"",type:"Number"}],class:"p5.Filter",module:"p5.sound"},toggle:{name:"toggle",class:"p5.Filter",module:"p5.sound"},setType:{name:"setType",params:[{name:"t",description:"",type:"String"}],class:"p5.Filter",module:"p5.sound"}},"p5.Oscillator":{start:{name:"start",params:[{name:"time",description:"<p>startTime in seconds from now.</p>\n",type:"Number",optional:!0},{name:"frequency",description:"<p>frequency in Hz.</p>\n",type:"Number",optional:!0}],class:"p5.Oscillator",module:"p5.sound"},stop:{name:"stop",params:[{name:"secondsFromNow",description:"<p>Time, in seconds from now.</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},amp:{name:"amp",params:[{name:"vol",description:"<p>between 0 and 1.0\n                            or a modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Oscillator",module:"p5.sound"},freq:{name:"freq",params:[{name:"Frequency",description:"<p>Frequency in Hz\n                                      or modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>Ramp time (in seconds)</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>Schedule this event to happen\n                                 at x seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Oscillator",module:"p5.sound"},setType:{name:"setType",params:[{name:"type",description:"<p>'sine', 'triangle', 'sawtooth' or 'square'.</p>\n",type:"String"}],class:"p5.Oscillator",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>A p5.sound or Web Audio object</p>\n",type:"Object"}],class:"p5.Oscillator",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Oscillator",module:"p5.sound"},pan:{name:"pan",params:[{name:"panning",description:"<p>Number between -1 and 1</p>\n",type:"Number"},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},phase:{name:"phase",params:[{name:"phase",description:"<p>float between 0.0 and 1.0</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},add:{name:"add",params:[{name:"number",description:"<p>Constant number to add</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},mult:{name:"mult",params:[{name:"number",description:"<p>Constant number to multiply</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"},scale:{name:"scale",params:[{name:"inMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"inMax",description:"<p>input range maximum</p>\n",type:"Number"},{name:"outMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"outMax",description:"<p>input range maximum</p>\n",type:"Number"}],class:"p5.Oscillator",module:"p5.sound"}},"p5.MonoSynth":{play:{name:"play",params:[{name:"note",description:'<p>the note you want to play, specified as a\n                               frequency in Hertz (Number) or as a midi\n                               value in Note/Octave format ("C4", "Eb3"...etc")\n                               See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">\n                               Tone</a>. Defaults to 440 hz.</p>\n',type:"String | Number"},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0},{name:"sustainTime",description:"<p>time to sustain before releasing the envelope. Defaults to 0.15 seconds.</p>\n",type:"Number",optional:!0}],class:"p5.MonoSynth",module:"p5.sound"},triggerAttack:{params:[{name:"note",description:'<p>the note you want to play, specified as a\n                               frequency in Hertz (Number) or as a midi\n                               value in Note/Octave format ("C4", "Eb3"...etc")\n                               See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">\n                               Tone</a>. Defaults to 440 hz</p>\n',type:"String | Number"},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0}],name:"triggerAttack",class:"p5.MonoSynth",module:"p5.sound"},triggerRelease:{params:[{name:"secondsFromNow",description:"<p>time to trigger the release</p>\n",type:"Number"}],name:"triggerRelease",class:"p5.MonoSynth",module:"p5.sound"},setADSR:{name:"setADSR",params:[{name:"attackTime",description:"<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",type:"Number"},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.MonoSynth",module:"p5.sound"},attack:{name:"attack",class:"p5.MonoSynth",module:"p5.sound"},decay:{name:"decay",class:"p5.MonoSynth",module:"p5.sound"},sustain:{name:"sustain",class:"p5.MonoSynth",module:"p5.sound"},release:{name:"release",class:"p5.MonoSynth",module:"p5.sound"},amp:{name:"amp",params:[{name:"vol",description:"<p>desired volume</p>\n",type:"Number"},{name:"rampTime",description:"<p>Time to reach new volume</p>\n",type:"Number",optional:!0}],class:"p5.MonoSynth",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>A p5.sound or Web Audio object</p>\n",type:"Object"}],class:"p5.MonoSynth",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.MonoSynth",module:"p5.sound"},dispose:{name:"dispose",class:"p5.MonoSynth",module:"p5.sound"}},"p5.AudioVoice":{connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.AudioVoice",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.AudioVoice",module:"p5.sound"}},"p5.PolySynth":{notes:{name:"notes",class:"p5.PolySynth",module:"p5.sound"},polyvalue:{name:"polyvalue",class:"p5.PolySynth",module:"p5.sound"},AudioVoice:{name:"AudioVoice",class:"p5.PolySynth",module:"p5.sound"},play:{name:"play",params:[{name:"note",description:"<p>midi note to play (ranging from 0 to 127 - 60 being a middle C)</p>\n",type:"Number",optional:!0},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0},{name:"sustainTime",description:"<p>time to sustain before releasing the envelope</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},noteADSR:{name:"noteADSR",params:[{name:"note",description:"<p>Midi note on which ADSR should be set.</p>\n",type:"Number",optional:!0},{name:"attackTime",description:"<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",type:"Number",optional:!0},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},setADSR:{name:"setADSR",params:[{name:"attackTime",description:"<p>Time (in seconds before envelope\n                               reaches Attack Level</p>\n",type:"Number",optional:!0},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                               reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                               where 1.0 = attackLevel, 0.0 = releaseLevel.\n                               The susRatio determines the decayLevel and the level at which the\n                               sustain portion of the envelope will sustain.\n                               For example, if attackLevel is 0.4, releaseLevel is 0,\n                               and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                               increased to 1.0 (using <code>setRange</code>),\n                               then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},noteAttack:{name:"noteAttack",params:[{name:"note",description:"<p>midi note on which attack should be triggered.</p>\n",type:"Number",optional:!0},{name:"velocity",description:"<p>velocity of the note to play (ranging from 0 to 1)/</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time from now (in seconds)</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},noteRelease:{name:"noteRelease",params:[{name:"note",description:"<p>midi note on which attack should be triggered.\n                                  If no value is provided, all notes will be released.</p>\n",type:"Number",optional:!0},{name:"secondsFromNow",description:"<p>time to trigger the release</p>\n",type:"Number",optional:!0}],class:"p5.PolySynth",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>A p5.sound or Web Audio object</p>\n",type:"Object"}],class:"p5.PolySynth",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.PolySynth",module:"p5.sound"},dispose:{name:"dispose",class:"p5.PolySynth",module:"p5.sound"}},"p5.SoundFile":{isLoaded:{name:"isLoaded",class:"p5.SoundFile",module:"p5.sound"},play:{name:"play",params:[{name:"startTime",description:"<p>(optional) schedule playback to start (in seconds from now).</p>\n",type:"Number",optional:!0},{name:"rate",description:"<p>(optional) playback rate</p>\n",type:"Number",optional:!0},{name:"amp",description:"<p>(optional) amplitude (volume)\n                                    of playback</p>\n",type:"Number",optional:!0},{name:"cueStart",description:"<p>(optional) cue start time in seconds</p>\n",type:"Number",optional:!0},{name:"duration",description:"<p>(optional) duration of playback in seconds</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},playMode:{name:"playMode",params:[{name:"str",description:"<p>'restart' or 'sustain' or 'untilDone'</p>\n",type:"String"}],class:"p5.SoundFile",module:"p5.sound"},pause:{name:"pause",params:[{name:"startTime",description:"<p>(optional) schedule event to occur\n                             seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},loop:{name:"loop",params:[{name:"startTime",description:"<p>(optional) schedule event to occur\n                            seconds from now</p>\n",type:"Number",optional:!0},{name:"rate",description:"<p>(optional) playback rate</p>\n",type:"Number",optional:!0},{name:"amp",description:"<p>(optional) playback volume</p>\n",type:"Number",optional:!0},{name:"cueLoopStart",description:"<p>(optional) startTime in seconds</p>\n",type:"Number",optional:!0},{name:"duration",description:"<p>(optional) loop duration in seconds</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},setLoop:{name:"setLoop",params:[{name:"Boolean",description:"<p>set looping to true or false</p>\n",type:"Boolean"}],class:"p5.SoundFile",module:"p5.sound"},isLooping:{name:"isLooping",class:"p5.SoundFile",module:"p5.sound"},isPlaying:{name:"isPlaying",class:"p5.SoundFile",module:"p5.sound"},isPaused:{name:"isPaused",class:"p5.SoundFile",module:"p5.sound"},stop:{name:"stop",params:[{name:"startTime",description:"<p>(optional) schedule event to occur\n                            in seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},setVolume:{name:"setVolume",params:[{name:"volume",description:"<p>Volume (amplitude) between 0.0\n                                   and 1.0 or modulating signal/oscillator</p>\n",type:"Number|Object"},{name:"rampTime",description:"<p>Fade for t seconds</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>Schedule this event to happen at\n                               t seconds in the future</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},pan:{name:"pan",params:[{name:"panValue",description:"<p>Set the stereo panner</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                                seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},getPan:{name:"getPan",class:"p5.SoundFile",module:"p5.sound"},rate:{name:"rate",params:[{name:"playbackRate",description:"<p>Set the playback rate. 1.0 is normal,\n                                   .5 is half-speed, 2.0 is twice as fast.\n                                   Values less than zero play backwards.</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},duration:{name:"duration",class:"p5.SoundFile",module:"p5.sound"},currentTime:{name:"currentTime",class:"p5.SoundFile",module:"p5.sound"},jump:{name:"jump",params:[{name:"cueTime",description:"<p>cueTime of the soundFile in seconds.</p>\n",type:"Number"},{name:"duration",description:"<p>duration in seconds.</p>\n",type:"Number"}],class:"p5.SoundFile",module:"p5.sound"},channels:{name:"channels",class:"p5.SoundFile",module:"p5.sound"},sampleRate:{name:"sampleRate",class:"p5.SoundFile",module:"p5.sound"},frames:{name:"frames",class:"p5.SoundFile",module:"p5.sound"},getPeaks:{name:"getPeaks",params:[{name:"length",description:"<p>length is the size of the returned array.\n                         Larger length results in more precision.\n                         Defaults to 5*width of the browser window.</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},reverseBuffer:{name:"reverseBuffer",class:"p5.SoundFile",module:"p5.sound"},onended:{name:"onended",params:[{name:"callback",description:"<p>function to call when the\n                            soundfile has ended.</p>\n",type:"Function"}],class:"p5.SoundFile",module:"p5.sound"},connect:{name:"connect",params:[{name:"object",description:"<p>Audio object that accepts an input</p>\n",type:"Object",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.SoundFile",module:"p5.sound"},setPath:{name:"setPath",params:[{name:"path",description:"<p>path to audio file</p>\n",type:"String"},{name:"callback",description:"<p>Callback</p>\n",type:"Function"}],class:"p5.SoundFile",module:"p5.sound"},setBuffer:{name:"setBuffer",params:[{name:"buf",description:"<p>Array of Float32 Array(s). 2 Float32 Arrays\n                   will create a stereo source. 1 will create\n                   a mono source.</p>\n",type:"Array"}],class:"p5.SoundFile",module:"p5.sound"},processPeaks:{name:"processPeaks",params:[{name:"callback",description:"<p>a function to call once this data is returned</p>\n",type:"Function"},{name:"initThreshold",description:"<p>initial threshold defaults to 0.9</p>\n",type:"Number",optional:!0},{name:"minThreshold",description:"<p>minimum threshold defaults to 0.22</p>\n",type:"Number",optional:!0},{name:"minPeaks",description:"<p>minimum number of peaks defaults to 200</p>\n",type:"Number",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},addCue:{name:"addCue",params:[{name:"time",description:"<p>Time in seconds, relative to this media\n                           element's playback. For example, to trigger\n                           an event every time playback reaches two\n                           seconds, pass in the number 2. This will be\n                           passed as the first parameter to\n                           the callback function.</p>\n",type:"Number"},{name:"callback",description:"<p>Name of a function that will be\n                           called at the given time. The callback will\n                           receive time and (optionally) param as its\n                           two parameters.</p>\n",type:"Function"},{name:"value",description:"<p>An object to be passed as the\n                           second parameter to the\n                           callback function.</p>\n",type:"Object",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},removeCue:{name:"removeCue",params:[{name:"id",description:"<p>ID of the cue, as returned by addCue</p>\n",type:"Number"}],class:"p5.SoundFile",module:"p5.sound"},clearCues:{name:"clearCues",class:"p5.SoundFile",module:"p5.sound"},save:{name:"save",params:[{name:"fileName",description:"<p>name of the resulting .wav file.</p>\n",type:"String",optional:!0}],class:"p5.SoundFile",module:"p5.sound"},getBlob:{name:"getBlob",class:"p5.SoundFile",module:"p5.sound"}},"p5.Amplitude":{setInput:{name:"setInput",params:[{name:"snd",description:"<p>set the sound source\n                                     (optional, defaults to\n                                     master output)</p>\n",type:"SoundObject|undefined",optional:!0},{name:"smoothing",description:"<p>a range between 0.0 and 1.0\n                                      to smooth amplitude readings</p>\n",type:"Number|undefined",optional:!0}],class:"p5.Amplitude",module:"p5.sound"},getLevel:{name:"getLevel",params:[{name:"channel",description:"<p>Optionally return only channel 0 (left) or 1 (right)</p>\n",type:"Number",optional:!0}],class:"p5.Amplitude",module:"p5.sound"},toggleNormalize:{name:"toggleNormalize",params:[{name:"boolean",description:"<p>set normalize to true (1) or false (0)</p>\n",type:"Boolean",optional:!0}],class:"p5.Amplitude",module:"p5.sound"},smooth:{name:"smooth",params:[{name:"set",description:"<p>smoothing from 0.0 <= 1</p>\n",type:"Number"}],class:"p5.Amplitude",module:"p5.sound"}},"p5.FFT":{setInput:{name:"setInput",params:[{name:"source",description:"<p>p5.sound object (or web audio API source node)</p>\n",type:"Object",optional:!0}],class:"p5.FFT",module:"p5.sound"},waveform:{name:"waveform",params:[{name:"bins",description:"<p>Must be a power of two between\n                          16 and 1024. Defaults to 1024.</p>\n",type:"Number",optional:!0},{name:"precision",description:"<p>If any value is provided, will return results\n                            in a Float32 Array which is more precise\n                            than a regular array.</p>\n",type:"String",optional:!0}],class:"p5.FFT",module:"p5.sound"},analyze:{name:"analyze",params:[{name:"bins",description:"<p>Must be a power of two between\n                           16 and 1024. Defaults to 1024.</p>\n",type:"Number",optional:!0},{name:"scale",description:'<p>If "dB," returns decibel\n                           float measurements between\n                           -140 and 0 (max).\n                           Otherwise returns integers from 0-255.</p>\n',type:"Number",optional:!0}],class:"p5.FFT",module:"p5.sound"},getEnergy:{name:"getEnergy",params:[{name:"frequency1",description:'<p>Will return a value representing\n                              energy at this frequency. Alternately,\n                              the strings "bass", "lowMid" "mid",\n                              "highMid", and "treble" will return\n                              predefined frequency ranges.</p>\n',type:"Number|String"},{name:"frequency2",description:"<p>If a second frequency is given,\n                              will return average amount of\n                              energy that exists between the\n                              two frequencies.</p>\n",type:"Number",optional:!0}],class:"p5.FFT",module:"p5.sound"},getCentroid:{name:"getCentroid",class:"p5.FFT",module:"p5.sound"},smooth:{name:"smooth",params:[{name:"smoothing",description:"<p>0.0 < smoothing < 1.0.\n                             Defaults to 0.8.</p>\n",type:"Number"}],class:"p5.FFT",module:"p5.sound"},linAverages:{name:"linAverages",params:[{name:"N",description:"<p>Number of returned frequency groups</p>\n",type:"Number"}],class:"p5.FFT",module:"p5.sound"},logAverages:{name:"logAverages",params:[{name:"octaveBands",description:"<p>Array of Octave Bands objects for grouping</p>\n",type:"Array"}],class:"p5.FFT",module:"p5.sound"},getOctaveBands:{name:"getOctaveBands",params:[{name:"N",description:"<p>Specifies the 1/N type of generated octave bands</p>\n",type:"Number"},{name:"fCtr0",description:"<p>Minimum central frequency for the lowest band</p>\n",type:"Number"}],class:"p5.FFT",module:"p5.sound"}},"p5.Signal":{fade:{name:"fade",params:[{name:"value",description:"<p>Value to set this signal</p>\n",type:"Number"},{name:"secondsFromNow",description:"<p>Length of fade, in seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Signal",module:"p5.sound"},setInput:{name:"setInput",params:[{name:"input",description:"",type:"Object"}],class:"p5.Signal",module:"p5.sound"},add:{name:"add",params:[{name:"number",description:"",type:"Number"}],class:"p5.Signal",module:"p5.sound"},mult:{name:"mult",params:[{name:"number",description:"<p>to multiply</p>\n",type:"Number"}],class:"p5.Signal",module:"p5.sound"},scale:{name:"scale",params:[{name:"number",description:"<p>to multiply</p>\n",type:"Number"},{name:"inMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"inMax",description:"<p>input range maximum</p>\n",type:"Number"},{name:"outMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"outMax",description:"<p>input range maximum</p>\n",type:"Number"}],class:"p5.Signal",module:"p5.sound"}},"p5.Envelope":{attackTime:{name:"attackTime",class:"p5.Envelope",module:"p5.sound"},attackLevel:{name:"attackLevel",class:"p5.Envelope",module:"p5.sound"},decayTime:{name:"decayTime",class:"p5.Envelope",module:"p5.sound"},decayLevel:{name:"decayLevel",class:"p5.Envelope",module:"p5.sound"},releaseTime:{name:"releaseTime",class:"p5.Envelope",module:"p5.sound"},releaseLevel:{name:"releaseLevel",class:"p5.Envelope",module:"p5.sound"},set:{name:"set",params:[{name:"attackTime",description:"<p>Time (in seconds) before level\n                               reaches attackLevel</p>\n",type:"Number"},{name:"attackLevel",description:"<p>Typically an amplitude between\n                               0.0 and 1.0</p>\n",type:"Number"},{name:"decayTime",description:"<p>Time</p>\n",type:"Number"},{name:"decayLevel",description:"<p>Amplitude (In a standard ADSR envelope,\n                               decayLevel = sustainLevel)</p>\n",type:"Number"},{name:"releaseTime",description:"<p>Release Time (in seconds)</p>\n",type:"Number"},{name:"releaseLevel",description:"<p>Amplitude</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},setADSR:{name:"setADSR",params:[{name:"attackTime",description:"<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",type:"Number"},{name:"decayTime",description:"<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",type:"Number",optional:!0},{name:"susRatio",description:"<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",type:"Number",optional:!0},{name:"releaseTime",description:"<p>Time in seconds from now (defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.Envelope",module:"p5.sound"},setRange:{name:"setRange",params:[{name:"aLevel",description:"<p>attack level (defaults to 1)</p>\n",type:"Number"},{name:"rLevel",description:"<p>release level (defaults to 0)</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},setInput:{name:"setInput",params:[{name:"inputs",description:"<p>A p5.sound object or\n                              Web Audio Param.</p>\n",type:"Object",optional:!0,multiple:!0}],class:"p5.Envelope",module:"p5.sound"},setExp:{name:"setExp",params:[{name:"isExp",description:"<p>true is exponential, false is linear</p>\n",type:"Boolean"}],class:"p5.Envelope",module:"p5.sound"},play:{name:"play",params:[{name:"unit",description:"<p>A p5.sound object or\n                              Web Audio Param.</p>\n",type:"Object"},{name:"startTime",description:"<p>time from now (in seconds) at which to play</p>\n",type:"Number",optional:!0},{name:"sustainTime",description:"<p>time to sustain before releasing the envelope</p>\n",type:"Number",optional:!0}],class:"p5.Envelope",module:"p5.sound"},triggerAttack:{name:"triggerAttack",params:[{name:"unit",description:"<p>p5.sound Object or Web Audio Param</p>\n",type:"Object"},{name:"secondsFromNow",description:"<p>time from now (in seconds)</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},triggerRelease:{name:"triggerRelease",params:[{name:"unit",description:"<p>p5.sound Object or Web Audio Param</p>\n",type:"Object"},{name:"secondsFromNow",description:"<p>time to trigger the release</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},ramp:{name:"ramp",params:[{name:"unit",description:"<p>p5.sound Object or Web Audio Param</p>\n",type:"Object"},{name:"secondsFromNow",description:"<p>When to trigger the ramp</p>\n",type:"Number"},{name:"v",description:"<p>Target value</p>\n",type:"Number"},{name:"v2",description:"<p>Second target value (optional)</p>\n",type:"Number",optional:!0}],class:"p5.Envelope",module:"p5.sound"},add:{name:"add",params:[{name:"number",description:"<p>Constant number to add</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},mult:{name:"mult",params:[{name:"number",description:"<p>Constant number to multiply</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"},scale:{name:"scale",params:[{name:"inMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"inMax",description:"<p>input range maximum</p>\n",type:"Number"},{name:"outMin",description:"<p>input range minumum</p>\n",type:"Number"},{name:"outMax",description:"<p>input range maximum</p>\n",type:"Number"}],class:"p5.Envelope",module:"p5.sound"}},"p5.Pulse":{width:{name:"width",params:[{name:"width",description:"<p>Width between the pulses (0 to 1.0,\n                       defaults to 0)</p>\n",type:"Number",optional:!0}],class:"p5.Pulse",module:"p5.sound"}},"p5.Noise":{setType:{name:"setType",params:[{name:"type",description:"<p>'white', 'pink' or 'brown'</p>\n",type:"String",optional:!0}],class:"p5.Noise",module:"p5.sound"}},"p5.AudioIn":{input:{name:"input",class:"p5.AudioIn",module:"p5.sound"},output:{name:"output",class:"p5.AudioIn",module:"p5.sound"},stream:{name:"stream",class:"p5.AudioIn",module:"p5.sound"},mediaStream:{name:"mediaStream",class:"p5.AudioIn",module:"p5.sound"},currentSource:{name:"currentSource",class:"p5.AudioIn",module:"p5.sound"},enabled:{name:"enabled",class:"p5.AudioIn",module:"p5.sound"},amplitude:{name:"amplitude",class:"p5.AudioIn",module:"p5.sound"},start:{name:"start",params:[{name:"successCallback",description:"<p>Name of a function to call on\n                                  success.</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>Name of a function to call if\n                                  there was an error. For example,\n                                  some browsers do not support\n                                  getUserMedia.</p>\n",type:"Function",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},stop:{name:"stop",class:"p5.AudioIn",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"<p>An object that accepts audio input,\n                        such as an FFT</p>\n",type:"Object",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.AudioIn",module:"p5.sound"},getLevel:{name:"getLevel",params:[{name:"smoothing",description:"<p>Smoothing is 0.0 by default.\n                             Smooths values based on previous values.</p>\n",type:"Number",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},amp:{name:"amp",params:[{name:"vol",description:"<p>between 0 and 1.0</p>\n",type:"Number"},{name:"time",description:"<p>ramp time (optional)</p>\n",type:"Number",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},getSources:{name:"getSources",params:[{name:"successCallback",description:"<p>This callback function handles the sources when they\n                                     have been enumerated. The callback function\n                                     receives the deviceList array as its only argument</p>\n",type:"Function",optional:!0},{name:"errorCallback",description:"<p>This optional callback receives the error\n                                   message as its argument.</p>\n",type:"Function",optional:!0}],class:"p5.AudioIn",module:"p5.sound"},setSource:{name:"setSource",params:[{name:"num",description:"<p>position of input source in the array</p>\n",type:"Number"}],class:"p5.AudioIn",module:"p5.sound"}},"p5.EQ":{bands:{name:"bands",class:"p5.EQ",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>Audio source</p>\n",type:"Object"}],class:"p5.EQ",module:"p5.sound"}},"p5.Panner3D":{panner:{name:"panner",class:"p5.Panner3D",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>Input source</p>\n",type:"Object"}],class:"p5.Panner3D",module:"p5.sound"},set:{name:"set",params:[{name:"xVal",description:"",type:"Number"},{name:"yVal",description:"",type:"Number"},{name:"zVal",description:"",type:"Number"},{name:"time",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"},positionX:{name:"positionX",class:"p5.Panner3D",module:"p5.sound"},positionY:{name:"positionY",class:"p5.Panner3D",module:"p5.sound"},positionZ:{name:"positionZ",class:"p5.Panner3D",module:"p5.sound"},orient:{name:"orient",params:[{name:"xVal",description:"",type:"Number"},{name:"yVal",description:"",type:"Number"},{name:"zVal",description:"",type:"Number"},{name:"time",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"},orientX:{name:"orientX",class:"p5.Panner3D",module:"p5.sound"},orientY:{name:"orientY",class:"p5.Panner3D",module:"p5.sound"},orientZ:{name:"orientZ",class:"p5.Panner3D",module:"p5.sound"},setFalloff:{name:"setFalloff",params:[{name:"maxDistance",description:"",type:"Number",optional:!0},{name:"rolloffFactor",description:"",type:"Number",optional:!0}],class:"p5.Panner3D",module:"p5.sound"},maxDist:{name:"maxDist",params:[{name:"maxDistance",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"},rollof:{name:"rollof",params:[{name:"rolloffFactor",description:"",type:"Number"}],class:"p5.Panner3D",module:"p5.sound"}},"p5.Delay":{leftDelay:{name:"leftDelay",class:"p5.Delay",module:"p5.sound"},rightDelay:{name:"rightDelay",class:"p5.Delay",module:"p5.sound"},process:{name:"process",params:[{name:"Signal",description:"<p>An object that outputs audio</p>\n",type:"Object"},{name:"delayTime",description:"<p>Time (in seconds) of the delay/echo.\n                             Some browsers limit delayTime to\n                             1 second.</p>\n",type:"Number",optional:!0},{name:"feedback",description:"<p>sends the delay back through itself\n                             in a loop that decreases in volume\n                             each time.</p>\n",type:"Number",optional:!0},{name:"lowPass",description:"<p>Cutoff frequency. Only frequencies\n                             below the lowPass will be part of the\n                             delay.</p>\n",type:"Number",optional:!0}],class:"p5.Delay",module:"p5.sound"},delayTime:{name:"delayTime",params:[{name:"delayTime",description:"<p>Time (in seconds) of the delay</p>\n",type:"Number"}],class:"p5.Delay",module:"p5.sound"},feedback:{name:"feedback",params:[{name:"feedback",description:"<p>0.0 to 1.0, or an object such as an\n                                Oscillator that can be used to\n                                modulate this param</p>\n",type:"Number|Object"}],class:"p5.Delay",module:"p5.sound"},filter:{name:"filter",params:[{name:"cutoffFreq",description:"<p>A lowpass filter will cut off any\n                            frequencies higher than the filter frequency.</p>\n",type:"Number|Object"},{name:"res",description:"<p>Resonance of the filter frequency\n                            cutoff, or an object (i.e. a p5.Oscillator)\n                            that can be used to modulate this parameter.\n                            High numbers (i.e. 15) will produce a resonance,\n                            low numbers (i.e. .2) will produce a slope.</p>\n",type:"Number|Object"}],class:"p5.Delay",module:"p5.sound"},setType:{name:"setType",params:[{name:"type",description:"<p>'pingPong' (1) or 'default' (0)</p>\n",type:"String|Number"}],class:"p5.Delay",module:"p5.sound"},amp:{name:"amp",params:[{name:"volume",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Delay",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Delay",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Delay",module:"p5.sound"}},"p5.Reverb":{process:{name:"process",params:[{name:"src",description:"<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",type:"Object"},{name:"seconds",description:"<p>Duration of the reverb, in seconds.\n                         Min: 0, Max: 10. Defaults to 3.</p>\n",type:"Number",optional:!0},{name:"decayRate",description:"<p>Percentage of decay with each echo.\n                          Min: 0, Max: 100. Defaults to 2.</p>\n",type:"Number",optional:!0},{name:"reverse",description:"<p>Play the reverb backwards or forwards.</p>\n",type:"Boolean",optional:!0}],class:"p5.Reverb",module:"p5.sound"},set:{name:"set",params:[{name:"seconds",description:"<p>Duration of the reverb, in seconds.\n                         Min: 0, Max: 10. Defaults to 3.</p>\n",type:"Number",optional:!0},{name:"decayRate",description:"<p>Percentage of decay with each echo.\n                          Min: 0, Max: 100. Defaults to 2.</p>\n",type:"Number",optional:!0},{name:"reverse",description:"<p>Play the reverb backwards or forwards.</p>\n",type:"Boolean",optional:!0}],class:"p5.Reverb",module:"p5.sound"},amp:{name:"amp",params:[{name:"volume",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Reverb",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Reverb",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Reverb",module:"p5.sound"}},"p5.Convolver":{convolverNode:{name:"convolverNode",class:"p5.Convolver",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",type:"Object"}],class:"p5.Convolver",module:"p5.sound"},impulses:{name:"impulses",class:"p5.Convolver",module:"p5.sound"},addImpulse:{name:"addImpulse",params:[{name:"path",description:"<p>path to a sound file</p>\n",type:"String"},{name:"callback",description:"<p>function (optional)</p>\n",type:"Function"},{name:"errorCallback",description:"<p>function (optional)</p>\n",type:"Function"}],class:"p5.Convolver",module:"p5.sound"},resetImpulse:{name:"resetImpulse",params:[{name:"path",description:"<p>path to a sound file</p>\n",type:"String"},{name:"callback",description:"<p>function (optional)</p>\n",type:"Function"},{name:"errorCallback",description:"<p>function (optional)</p>\n",type:"Function"}],class:"p5.Convolver",module:"p5.sound"},toggleImpulse:{name:"toggleImpulse",params:[{name:"id",description:"<p>Identify the impulse by its original filename\n                          (String), or by its position in the\n                          <code>.impulses</code> Array (Number).</p>\n",type:"String|Number"}],class:"p5.Convolver",module:"p5.sound"}},"p5.Phrase":{sequence:{name:"sequence",class:"p5.Phrase",module:"p5.sound"}},"p5.Part":{setBPM:{name:"setBPM",params:[{name:"BPM",description:"<p>Beats Per Minute</p>\n",type:"Number"},{name:"rampTime",description:"<p>Seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},getBPM:{name:"getBPM",class:"p5.Part",module:"p5.sound"},start:{name:"start",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},loop:{name:"loop",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},noLoop:{name:"noLoop",class:"p5.Part",module:"p5.sound"},stop:{name:"stop",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Part",module:"p5.sound"},pause:{name:"pause",params:[{name:"time",description:"<p>seconds from now</p>\n",type:"Number"}],class:"p5.Part",module:"p5.sound"},addPhrase:{name:"addPhrase",params:[{name:"phrase",description:"<p>reference to a p5.Phrase</p>\n",type:"p5.Phrase"}],class:"p5.Part",module:"p5.sound"},removePhrase:{name:"removePhrase",params:[{name:"phraseName",description:"",type:"String"}],class:"p5.Part",module:"p5.sound"},getPhrase:{name:"getPhrase",params:[{name:"phraseName",description:"",type:"String"}],class:"p5.Part",module:"p5.sound"},replaceSequence:{name:"replaceSequence",params:[{name:"phraseName",description:"",type:"String"},{name:"sequence",description:"<p>Array of values to pass into the callback\n                          at each step of the phrase.</p>\n",type:"Array"}],class:"p5.Part",module:"p5.sound"},onStep:{name:"onStep",params:[{name:"callback",description:"<p>The name of the callback\n                            you want to fire\n                            on every beat/tatum.</p>\n",type:"Function"}],class:"p5.Part",module:"p5.sound"}},"p5.Score":{start:{name:"start",class:"p5.Score",module:"p5.sound"},stop:{name:"stop",class:"p5.Score",module:"p5.sound"},pause:{name:"pause",class:"p5.Score",module:"p5.sound"},loop:{name:"loop",class:"p5.Score",module:"p5.sound"},noLoop:{name:"noLoop",class:"p5.Score",module:"p5.sound"},setBPM:{name:"setBPM",params:[{name:"BPM",description:"<p>Beats Per Minute</p>\n",type:"Number"},{name:"rampTime",description:"<p>Seconds from now</p>\n",type:"Number"}],class:"p5.Score",module:"p5.sound"}},"p5.SoundLoop":{musicalTimeMode:{name:"musicalTimeMode",class:"p5.SoundLoop",module:"p5.sound"},maxIterations:{name:"maxIterations",class:"p5.SoundLoop",module:"p5.sound"},start:{name:"start",params:[{name:"timeFromNow",description:"<p>schedule a starting time</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},stop:{name:"stop",params:[{name:"timeFromNow",description:"<p>schedule a stopping time</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},pause:{name:"pause",params:[{name:"timeFromNow",description:"<p>schedule a pausing time</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},syncedStart:{name:"syncedStart",params:[{name:"otherLoop",description:"<p>a p5.SoundLoop to sync with</p>\n",type:"Object"},{name:"timeFromNow",description:"<p>Start the loops in sync after timeFromNow seconds</p>\n",type:"Number",optional:!0}],class:"p5.SoundLoop",module:"p5.sound"},bpm:{name:"bpm",class:"p5.SoundLoop",module:"p5.sound"},timeSignature:{name:"timeSignature",class:"p5.SoundLoop",module:"p5.sound"},interval:{name:"interval",class:"p5.SoundLoop",module:"p5.sound"},iterations:{name:"iterations",class:"p5.SoundLoop",module:"p5.sound"}},"p5.Compressor":{compressor:{name:"compressor",class:"p5.Compressor",module:"p5.sound"},process:{name:"process",params:[{name:"src",description:"<p>Sound source to be connected</p>\n",type:"Object"},{name:"attack",description:"<p>The amount of time (in seconds) to reduce the gain by 10dB,\n                           default = .003, range 0 - 1</p>\n",type:"Number",optional:!0},{name:"knee",description:'<p>A decibel value representing the range above the\n                           threshold where the curve smoothly transitions to the "ratio" portion.\n                           default = 30, range 0 - 40</p>\n',type:"Number",optional:!0},{name:"ratio",description:"<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",type:"Number",optional:!0},{name:"threshold",description:"<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",type:"Number",optional:!0},{name:"release",description:"<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},set:{name:"set",params:[{name:"attack",description:"<p>The amount of time (in seconds) to reduce the gain by 10dB,\n                           default = .003, range 0 - 1</p>\n",type:"Number"},{name:"knee",description:'<p>A decibel value representing the range above the\n                           threshold where the curve smoothly transitions to the "ratio" portion.\n                           default = 30, range 0 - 40</p>\n',type:"Number"},{name:"ratio",description:"<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",type:"Number"},{name:"threshold",description:"<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",type:"Number"},{name:"release",description:"<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",type:"Number"}],class:"p5.Compressor",module:"p5.sound"},attack:{name:"attack",params:[{name:"attack",description:"<p>Attack is the amount of time (in seconds) to reduce the gain by 10dB,\n                         default = .003, range 0 - 1</p>\n",type:"Number",optional:!0},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},knee:{name:"knee",params:[{name:"knee",description:'<p>A decibel value representing the range above the\n                       threshold where the curve smoothly transitions to the "ratio" portion.\n                       default = 30, range 0 - 40</p>\n',type:"Number",optional:!0},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},ratio:{name:"ratio",params:[{name:"ratio",description:"<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",type:"Number",optional:!0},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},threshold:{name:"threshold",params:[{name:"threshold",description:"<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",type:"Number"},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},release:{name:"release",params:[{name:"release",description:"<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",type:"Number"},{name:"time",description:"<p>Assign time value to schedule the change in value</p>\n",type:"Number",optional:!0}],class:"p5.Compressor",module:"p5.sound"},reduction:{name:"reduction",class:"p5.Compressor",module:"p5.sound"}},"p5.SoundRecorder":{setInput:{name:"setInput",params:[{name:"unit",description:"<p>p5.sound object or a web audio unit\n                       that outputs sound</p>\n",type:"Object",optional:!0}],class:"p5.SoundRecorder",module:"p5.sound"},record:{name:"record",params:[{name:"soundFile",description:"<p>p5.SoundFile</p>\n",type:"p5.SoundFile"},{name:"duration",description:"<p>Time (in seconds)</p>\n",type:"Number",optional:!0},{name:"callback",description:"<p>The name of a function that will be\n                              called once the recording completes</p>\n",type:"Function",optional:!0}],class:"p5.SoundRecorder",module:"p5.sound"},stop:{name:"stop",class:"p5.SoundRecorder",module:"p5.sound"}},"p5.PeakDetect":{isDetected:{name:"isDetected",class:"p5.PeakDetect",module:"p5.sound"},update:{name:"update",params:[{name:"fftObject",description:"<p>A p5.FFT object</p>\n",type:"p5.FFT"}],class:"p5.PeakDetect",module:"p5.sound"},onPeak:{name:"onPeak",params:[{name:"callback",description:"<p>Name of a function that will\n                            be called when a peak is\n                            detected.</p>\n",type:"Function"},{name:"val",description:"<p>Optional value to pass\n                            into the function when\n                            a peak is detected.</p>\n",type:"Object",optional:!0}],class:"p5.PeakDetect",module:"p5.sound"}},"p5.Gain":{setInput:{name:"setInput",params:[{name:"src",description:"<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",type:"Object"}],class:"p5.Gain",module:"p5.sound"},connect:{name:"connect",params:[{name:"unit",description:"",type:"Object"}],class:"p5.Gain",module:"p5.sound"},disconnect:{name:"disconnect",class:"p5.Gain",module:"p5.sound"},amp:{name:"amp",params:[{name:"volume",description:"<p>amplitude between 0 and 1.0</p>\n",type:"Number"},{name:"rampTime",description:"<p>create a fade that lasts rampTime</p>\n",type:"Number",optional:!0},{name:"timeFromNow",description:"<p>schedule this event to happen\n                              seconds from now</p>\n",type:"Number",optional:!0}],class:"p5.Gain",module:"p5.sound"}},"p5.Distortion":{WaveShaperNode:{name:"WaveShaperNode",class:"p5.Distortion",module:"p5.sound"},process:{name:"process",params:[{name:"amount",description:"<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",type:"Number",optional:!0,optdefault:"0.25"},{name:"oversample",description:"<p>'none', '2x', or '4x'.</p>\n",type:"String",optional:!0,optdefault:"'none'"}],class:"p5.Distortion",module:"p5.sound"},set:{name:"set",params:[{name:"amount",description:"<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",type:"Number",optional:!0,optdefault:"0.25"},{name:"oversample",description:"<p>'none', '2x', or '4x'.</p>\n",type:"String",optional:!0,optdefault:"'none'"}],class:"p5.Distortion",module:"p5.sound"},getAmount:{name:"getAmount",class:"p5.Distortion",module:"p5.sound"},getOversample:{name:"getOversample",class:"p5.Distortion",module:"p5.sound"}}}},{}],2:[function(e,t,r){"use strict";r.byteLength=function(e){var t=p(e),r=t[0],n=t[1];return 3*(r+n)/4-n},r.toByteArray=function(e){var t,r,n=p(e),i=n[0],s=n[1],l=new a(function(e,t){return 3*(e+t)/4-t}(i,s)),u=0,c=0<s?i-4:i;for(r=0;r<c;r+=4)t=o[e.charCodeAt(r)]<<18|o[e.charCodeAt(r+1)]<<12|o[e.charCodeAt(r+2)]<<6|o[e.charCodeAt(r+3)],l[u++]=t>>16&255,l[u++]=t>>8&255,l[u++]=255&t;return 2===s&&(t=o[e.charCodeAt(r)]<<2|o[e.charCodeAt(r+1)]>>4,l[u++]=255&t),1===s&&(t=o[e.charCodeAt(r)]<<10|o[e.charCodeAt(r+1)]<<4|o[e.charCodeAt(r+2)]>>2,l[u++]=t>>8&255,l[u++]=255&t),l},r.fromByteArray=function(e){for(var t,r=e.length,o=r%3,a=[],i=0,s=r-o;i<s;i+=16383)a.push(u(e,i,s<i+16383?s:i+16383));return 1==o?(t=e[r-1],a.push(n[t>>2]+n[t<<4&63]+"==")):2==o&&(t=(e[r-2]<<8)+e[r-1],a.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),a.join("")};for(var n=[],o=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,l=i.length;s<l;++s)n[s]=i[s],o[i.charCodeAt(s)]=s;function p(e){var t=e.length;if(0<t%4)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,r){for(var o,a,i=[],s=t;s<r;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),i.push(n[(a=o)>>18&63]+n[a>>12&63]+n[a>>6&63]+n[63&a]);return i.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},{}],3:[function(e,t,r){},{}],4:[function(e,t,r){arguments[4][3][0].apply(r,arguments)},{dup:3}],5:[function(e,t,r){(function(t){"use strict";var n=e("base64-js"),o=e("ieee754"),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;r.Buffer=t,r.SlowBuffer=function(e){return+e!=e&&(e=0),t.alloc(+e)},r.INSPECT_MAX_BYTES=50;var i=2147483647;function s(e){if(i<e)throw new RangeError('The value "'+e+'" is invalid for option "size"');var r=new Uint8Array(e);return Object.setPrototypeOf(r,t.prototype),r}function t(e,t,r){if("number"!=typeof e)return l(e,t,r);if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}function l(e,r,n){if("string"==typeof e)return function(e,r){if("string"==typeof r&&""!==r||(r="utf8"),!t.isEncoding(r))throw new TypeError("Unknown encoding: "+r);var n=0|h(e,r),o=s(n),a=o.write(e,r);return a!==n&&(o=o.slice(0,a)),o}(e,r);if(ArrayBuffer.isView(e))return c(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(k(e,ArrayBuffer)||e&&k(e.buffer,ArrayBuffer))return function(e,r,n){if(r<0||e.byteLength<r)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<r+(n||0))throw new RangeError('"length" is outside of buffer bounds');var o;return o=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),Object.setPrototypeOf(o,t.prototype),o}(e,r,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var o=e.valueOf&&e.valueOf();if(null!=o&&o!==e)return t.from(o,r,n);var a=function(e){if(t.isBuffer(e)){var r=0|d(e.length),n=s(r);return 0===n.length||e.copy(n,0,0,r),n}return void 0!==e.length?"number"!=typeof e.length||F(e.length)?s(0):c(e):"Buffer"===e.type&&Array.isArray(e.data)?c(e.data):void 0}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return t.from(e[Symbol.toPrimitive]("string"),r,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function p(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return p(e),s(e<0?0:0|d(e))}function c(e){for(var t=e.length<0?0:0|d(e.length),r=s(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e){if(i<=e)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function h(e,r){if(t.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||k(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,o=2<arguments.length&&!0===arguments[2];if(!o&&0===n)return 0;for(var a=!1;;)switch(r){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return L(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return R(e).length;default:if(a)return o?-1:L(e).length;r=(""+r).toLowerCase(),a=!0}}function m(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function f(e,r,n,o,a){if(0===e.length)return-1;if("string"==typeof n?(o=n,n=0):2147483647<n?n=2147483647:n<-2147483648&&(n=-2147483648),F(n=+n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof r&&(r=t.from(r,o)),t.isBuffer(r))return 0===r.length?-1:y(e,r,n,o,a);if("number"==typeof r)return r&=255,"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,r,n):Uint8Array.prototype.lastIndexOf.call(e,r,n):y(e,[r],n,o,a);throw new TypeError("val must be string, number or Buffer")}function y(e,t,r,n,o){var a,i=1,s=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s/=i=2,l/=2,r/=2}function p(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(o){var u=-1;for(a=r;a<s;a++)if(p(e,a)===p(t,-1===u?0:a-u)){if(-1===u&&(u=a),a-u+1===l)return u*i}else-1!==u&&(a-=a-u),u=-1}else for(s<r+l&&(r=s-l),a=r;0<=a;a--){for(var c=!0,d=0;d<l;d++)if(p(e,a+d)!==p(t,d)){c=!1;break}if(c)return a}return-1}function g(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?o<(n=Number(n))&&(n=o):n=o;var a=t.length;a/2<n&&(n=a/2);for(var i=0;i<n;++i){var s=parseInt(t.substr(2*i,2),16);if(F(s))return i;e[r+i]=s}return i}function v(e,t,r,n){return D(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function b(e,t,r,n){return D(function(e,t){for(var r,n,o,a=[],i=0;i<e.length&&!((t-=2)<0);++i)n=(r=e.charCodeAt(i))>>8,o=r%256,a.push(o),a.push(n);return a}(t,e.length-r),e,r,n)}function x(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function _(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var a,i,s,l,p=e[o],u=null,c=239<p?4:223<p?3:191<p?2:1;if(o+c<=r)switch(c){case 1:p<128&&(u=p);break;case 2:128==(192&(a=e[o+1]))&&127<(l=(31&p)<<6|63&a)&&(u=l);break;case 3:a=e[o+1],i=e[o+2],128==(192&a)&&128==(192&i)&&2047<(l=(15&p)<<12|(63&a)<<6|63&i)&&(l<55296||57343<l)&&(u=l);break;case 4:a=e[o+1],i=e[o+2],s=e[o+3],128==(192&a)&&128==(192&i)&&128==(192&s)&&65535<(l=(15&p)<<18|(63&a)<<12|(63&i)<<6|63&s)&&l<1114112&&(u=l)}null===u?(u=65533,c=1):65535<u&&(u-=65536,n.push(u>>>10&1023|55296),u=56320|1023&u),n.push(u),o+=c}return function(e){var t=e.length;if(t<=w)return String.fromCharCode.apply(String,e);for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=w));return r}(n)}r.kMaxLength=i,(t.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}())||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(t.prototype,"parent",{enumerable:!0,get:function(){if(t.isBuffer(this))return this.buffer}}),Object.defineProperty(t.prototype,"offset",{enumerable:!0,get:function(){if(t.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&t[Symbol.species]===t&&Object.defineProperty(t,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),t.poolSize=8192,t.from=function(e,t,r){return l(e,t,r)},Object.setPrototypeOf(t.prototype,Uint8Array.prototype),Object.setPrototypeOf(t,Uint8Array),t.alloc=function(e,t,r){return o=t,a=r,p(n=e),n<=0?s(n):void 0!==o?"string"==typeof a?s(n).fill(o,a):s(n).fill(o):s(n);var n,o,a},t.allocUnsafe=function(e){return u(e)},t.allocUnsafeSlow=function(e){return u(e)},t.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==t.prototype},t.compare=function(e,r){if(k(e,Uint8Array)&&(e=t.from(e,e.offset,e.byteLength)),k(r,Uint8Array)&&(r=t.from(r,r.offset,r.byteLength)),!t.isBuffer(e)||!t.isBuffer(r))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===r)return 0;for(var n=e.length,o=r.length,a=0,i=Math.min(n,o);a<i;++a)if(e[a]!==r[a]){n=e[a],o=r[a];break}return n<o?-1:o<n?1:0},t.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},t.concat=function(e,r){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return t.alloc(0);var n;if(void 0===r)for(n=r=0;n<e.length;++n)r+=e[n].length;var o=t.allocUnsafe(r),a=0;for(n=0;n<e.length;++n){var i=e[n];if(k(i,Uint8Array)&&(i=t.from(i)),!t.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(o,a),a+=i.length}return o},t.byteLength=h,t.prototype._isBuffer=!0,t.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},t.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},t.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},t.prototype.toLocaleString=t.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?_(this,0,e):function(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e=e||"utf8";;)switch(e){case"hex":return C(this,t,r);case"utf8":case"utf-8":return _(this,t,r);case"ascii":return S(this,t,r);case"latin1":case"binary":return M(this,t,r);case"base64":return x(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}.apply(this,arguments)},t.prototype.equals=function(e){if(!t.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===t.compare(this,e)},t.prototype.inspect=function(){var e="",t=r.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},a&&(t.prototype[a]=t.prototype.inspect),t.prototype.compare=function(e,r,n,o,a){if(k(e,Uint8Array)&&(e=t.from(e,e.offset,e.byteLength)),!t.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===r&&(r=0),void 0===n&&(n=e?e.length:0),void 0===o&&(o=0),void 0===a&&(a=this.length),r<0||n>e.length||o<0||a>this.length)throw new RangeError("out of range index");if(a<=o&&n<=r)return 0;if(a<=o)return-1;if(n<=r)return 1;if(this===e)return 0;for(var i=(a>>>=0)-(o>>>=0),s=(n>>>=0)-(r>>>=0),l=Math.min(i,s),p=this.slice(o,a),u=e.slice(r,n),c=0;c<l;++c)if(p[c]!==u[c]){i=p[c],s=u[c];break}return i<s?-1:s<i?1:0},t.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},t.prototype.indexOf=function(e,t,r){return f(this,e,t,r,!0)},t.prototype.lastIndexOf=function(e,t,r){return f(this,e,t,r,!1)},t.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||o<r)&&(r=o),0<e.length&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n=n||"utf8";for(var a,i,s,l,p=!1;;)switch(n){case"hex":return g(this,e,t,r);case"utf8":case"utf-8":return s=t,l=r,D(L(e,this.length-s),this,s,l);case"ascii":return v(this,e,t,r);case"latin1":case"binary":return v(this,e,t,r);case"base64":return a=t,i=r,D(R(e),this,a,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return b(this,e,t,r);default:if(p)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),p=!0}},t.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var w=4096;function S(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function M(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function C(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||n<r)&&(r=n);for(var o="",a=t;a<r;++a)o+=B[e[a]];return o}function T(e,t,r){for(var n=e.slice(t,r),o="",a=0;a<n.length;a+=2)o+=String.fromCharCode(n[a]+256*n[a+1]);return o}function E(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(r<e+t)throw new RangeError("Trying to access beyond buffer length")}function N(e,r,n,o,a,i){if(!t.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(a<r||r<i)throw new RangeError('"value" argument is out of bounds');if(n+o>e.length)throw new RangeError("Index out of range")}function P(e,t,r,n){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function A(e,t,r,n,a){return t=+t,r>>>=0,a||P(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function I(e,t,r,n,a){return t=+t,r>>>=0,a||P(e,0,r,8),o.write(e,t,r,n,52,8),r+8}t.prototype.slice=function(e,r){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):n<e&&(e=n),(r=void 0===r?n:~~r)<0?(r+=n)<0&&(r=0):n<r&&(r=n),r<e&&(r=e);var o=this.subarray(e,r);return Object.setPrototypeOf(o,t.prototype),o},t.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=this[e],o=1,a=0;++a<t&&(o*=256);)n+=this[e+a]*o;return n},t.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=this[e+--t],o=1;0<t&&(o*=256);)n+=this[e+--t]*o;return n},t.prototype.readUInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),this[e]},t.prototype.readUInt16LE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]|this[e+1]<<8},t.prototype.readUInt16BE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]<<8|this[e+1]},t.prototype.readUInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},t.prototype.readUInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},t.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=this[e],o=1,a=0;++a<t&&(o*=256);)n+=this[e+a]*o;return(o*=128)<=n&&(n-=Math.pow(2,8*t)),n},t.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);for(var n=t,o=1,a=this[e+--n];0<n&&(o*=256);)a+=this[e+--n]*o;return(o*=128)<=a&&(a-=Math.pow(2,8*t)),a},t.prototype.readInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},t.prototype.readInt16LE=function(e,t){e>>>=0,t||E(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},t.prototype.readInt16BE=function(e,t){e>>>=0,t||E(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},t.prototype.readInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},t.prototype.readInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},t.prototype.readFloatLE=function(e,t){return e>>>=0,t||E(e,4,this.length),o.read(this,e,!0,23,4)},t.prototype.readFloatBE=function(e,t){return e>>>=0,t||E(e,4,this.length),o.read(this,e,!1,23,4)},t.prototype.readDoubleLE=function(e,t){return e>>>=0,t||E(e,8,this.length),o.read(this,e,!0,52,8)},t.prototype.readDoubleBE=function(e,t){return e>>>=0,t||E(e,8,this.length),o.read(this,e,!1,52,8)},t.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||N(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,a=0;for(this[t]=255&e;++a<r&&(o*=256);)this[t+a]=e/o&255;return t+r},t.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||N(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,a=1;for(this[t+o]=255&e;0<=--o&&(a*=256);)this[t+o]=e/a&255;return t+r},t.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,1,255,0),this[t]=255&e,t+1},t.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},t.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},t.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},t.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},t.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var o=Math.pow(2,8*r-1);N(this,e,t,r,o-1,-o)}var a=0,i=1,s=0;for(this[t]=255&e;++a<r&&(i*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},t.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var o=Math.pow(2,8*r-1);N(this,e,t,r,o-1,-o)}var a=r-1,i=1,s=0;for(this[t+a]=255&e;0<=--a&&(i*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},t.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},t.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},t.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},t.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},t.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},t.prototype.writeFloatLE=function(e,t,r){return A(this,e,t,!0,r)},t.prototype.writeFloatBE=function(e,t,r){return A(this,e,t,!1,r)},t.prototype.writeDoubleLE=function(e,t,r){return I(this,e,t,!0,r)},t.prototype.writeDoubleBE=function(e,t,r){return I(this,e,t,!1,r)},t.prototype.copy=function(e,r,n,o){if(!t.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n=n||0,o||0===o||(o=this.length),r>=e.length&&(r=e.length),r=r||0,0<o&&o<n&&(o=n),o===n)return 0;if(0===e.length||0===this.length)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(o<0)throw new RangeError("sourceEnd out of bounds");o>this.length&&(o=this.length),e.length-r<o-n&&(o=e.length-r+n);var a=o-n;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(r,n,o);else if(this===e&&n<r&&r<o)for(var i=a-1;0<=i;--i)e[i+r]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,o),r);return a},t.prototype.fill=function(e,r,n,o){if("string"==typeof e){if("string"==typeof r?(o=r,r=0,n=this.length):"string"==typeof n&&(o=n,n=this.length),void 0!==o&&"string"!=typeof o)throw new TypeError("encoding must be a string");if("string"==typeof o&&!t.isEncoding(o))throw new TypeError("Unknown encoding: "+o);if(1===e.length){var a=e.charCodeAt(0);("utf8"===o&&a<128||"latin1"===o)&&(e=a)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(r<0||this.length<r||this.length<n)throw new RangeError("Out of range index");if(n<=r)return this;var i;if(r>>>=0,n=void 0===n?this.length:n>>>0,"number"==typeof(e=e||0))for(i=r;i<n;++i)this[i]=e;else{var s=t.isBuffer(e)?e:t.from(e,o),l=s.length;if(0===l)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<n-r;++i)this[i+r]=s[i%l]}return this};var O=/[^+/0-9A-Za-z-_]/g;function L(e,t){var r;t=t||1/0;for(var n=e.length,o=null,a=[],i=0;i<n;++i){if(55295<(r=e.charCodeAt(i))&&r<57344){if(!o){if(56319<r){-1<(t-=3)&&a.push(239,191,189);continue}if(i+1===n){-1<(t-=3)&&a.push(239,191,189);continue}o=r;continue}if(r<56320){-1<(t-=3)&&a.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&-1<(t-=3)&&a.push(239,191,189);if(o=null,r<128){if(--t<0)break;a.push(r)}else if(r<2048){if((t-=2)<0)break;a.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;a.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return a}function R(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(O,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function D(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function k(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function F(e){return e!=e}var B=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var n=16*r,o=0;o<16;++o)t[n+o]=e[r]+e[o];return t}()}).call(this,e("buffer").Buffer)},{"base64-js":2,buffer:5,ieee754:10}],6:[function(e,t,r){"use strict";t.exports=e("./").polyfill()},{"./":7}],7:[function(e,r,n){(function(t,o){var a;a=function(){"use strict";function r(e){return"function"==typeof e}var n=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},a=0,i=void 0,s=void 0,l=function(e,t){f[a]=e,f[a+1]=t,2===(a+=2)&&(s?s(y):_())},p="undefined"!=typeof window?window:void 0,u=p||{},c=u.MutationObserver||u.WebKitMutationObserver,d="undefined"==typeof self&&void 0!==t&&"[object process]"==={}.toString.call(t),h="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function m(){var e=setTimeout;return function(){return e(y,1)}}var f=new Array(1e3);function y(){for(var e=0;e<a;e+=2)(0,f[e])(f[e+1]),f[e]=void 0,f[e+1]=void 0;a=0}var g,v,b,x,_=void 0;function w(e,t){var r=this,n=new this.constructor(C);void 0===n[M]&&k(n);var o=r._state;if(o){var a=arguments[o-1];l((function(){return R(o,n,a,r._result)}))}else O(r,n,e,t);return n}function S(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(C);return N(t,e),t}_=d?function(){return t.nextTick(y)}:c?(v=0,b=new c(y),x=document.createTextNode(""),b.observe(x,{characterData:!0}),function(){x.data=v=++v%2}):h?((g=new MessageChannel).port1.onmessage=y,function(){return g.port2.postMessage(0)}):void 0===p&&"function"==typeof e?function(){try{var e=Function("return this")().require("vertx");return void 0!==(i=e.runOnLoop||e.runOnContext)?function(){i(y)}:m()}catch(e){return m()}}():m();var M=Math.random().toString(36).substring(2);function C(){}var T=void 0;function E(e,t,n){var o,a;t.constructor===e.constructor&&n===w&&t.constructor.resolve===S?(o=e,1===(a=t)._state?A(o,a._result):2===a._state?I(o,a._result):O(a,void 0,(function(e){return N(o,e)}),(function(e){return I(o,e)}))):void 0===n?A(e,t):r(n)?function(e,t,r){l((function(e){var n=!1,o=function(e,t,r,n){try{e.call(t,r,n)}catch(e){return e}}(r,t,(function(r){n||(n=!0,t!==r?N(e,r):A(e,r))}),(function(t){n||(n=!0,I(e,t))}),e._label);!n&&o&&(n=!0,I(e,o))}),e)}(e,t,n):A(e,t)}function N(e,t){if(e===t)I(e,new TypeError("You cannot resolve a promise with itself"));else if(o=typeof(n=t),null===n||"object"!=o&&"function"!=o)A(e,t);else{var r=void 0;try{r=t.then}catch(t){return void I(e,t)}E(e,t,r)}var n,o}function P(e){e._onerror&&e._onerror(e._result),L(e)}function A(e,t){e._state===T&&(e._result=t,e._state=1,0!==e._subscribers.length&&l(L,e))}function I(e,t){e._state===T&&(e._state=2,e._result=t,l(P,e))}function O(e,t,r,n){var o=e._subscribers,a=o.length;e._onerror=null,o[a]=t,o[a+1]=r,o[a+2]=n,0===a&&e._state&&l(L,e)}function L(e){var t=e._subscribers,r=e._state;if(0!==t.length){for(var n=void 0,o=void 0,a=e._result,i=0;i<t.length;i+=3)n=t[i],o=t[i+r],n?R(r,n,o,a):o(a);e._subscribers.length=0}}function R(e,t,n,o){var a=r(n),i=void 0,s=void 0,l=!0;if(a){try{i=n(o)}catch(e){l=!1,s=e}if(t===i)return void I(t,new TypeError("A promises callback cannot return that same promise."))}else i=o;t._state!==T||(a&&l?N(t,i):!1===l?I(t,s):1===e?A(t,i):2===e&&I(t,i))}var D=0;function k(e){e[M]=D++,e._state=void 0,e._result=void 0,e._subscribers=[]}var F=(B.prototype._enumerate=function(e){for(var t=0;this._state===T&&t<e.length;t++)this._eachEntry(e[t],t)},B.prototype._eachEntry=function(e,t){var r=this._instanceConstructor,n=r.resolve;if(n===S){var o=void 0,a=void 0,i=!1;try{o=e.then}catch(t){i=!0,a=t}if(o===w&&e._state!==T)this._settledAt(e._state,t,e._result);else if("function"!=typeof o)this._remaining--,this._result[t]=e;else if(r===U){var s=new r(C);i?I(s,a):E(s,e,o),this._willSettleAt(s,t)}else this._willSettleAt(new r((function(t){return t(e)})),t)}else this._willSettleAt(n(e),t)},B.prototype._settledAt=function(e,t,r){var n=this.promise;n._state===T&&(this._remaining--,2===e?I(n,r):this._result[t]=r),0===this._remaining&&A(n,this._result)},B.prototype._willSettleAt=function(e,t){var r=this;O(e,void 0,(function(e){return r._settledAt(1,t,e)}),(function(e){return r._settledAt(2,t,e)}))},B);function B(e,t){this._instanceConstructor=e,this.promise=new e(C),this.promise[M]||k(this.promise),n(t)?(this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?A(this.promise,this._result):(this.length=this.length||0,this._enumerate(t),0===this._remaining&&A(this.promise,this._result))):I(this.promise,new Error("Array Methods must be provided an Array"))}var U=(G.prototype.catch=function(e){return this.then(null,e)},G.prototype.finally=function(e){var t=this.constructor;return r(e)?this.then((function(r){return t.resolve(e()).then((function(){return r}))}),(function(r){return t.resolve(e()).then((function(){throw r}))})):this.then(e,e)},G);function G(e){this[M]=D++,this._result=this._state=void 0,this._subscribers=[],C!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof G?function(e,t){try{t((function(t){N(e,t)}),(function(t){I(e,t)}))}catch(t){I(e,t)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return U.prototype.then=w,U.all=function(e){return new F(this,e).promise},U.race=function(e){var t=this;return n(e)?new t((function(r,n){for(var o=e.length,a=0;a<o;a++)t.resolve(e[a]).then(r,n)})):new t((function(e,t){return t(new TypeError("You must pass an array to race."))}))},U.resolve=S,U.reject=function(e){var t=new this(C);return I(t,e),t},U._setScheduler=function(e){s=e},U._setAsap=function(e){l=e},U._asap=l,U.polyfill=function(){var e=void 0;if(void 0!==o)e=o;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===r&&!t.cast)return}e.Promise=U},U.Promise=U},"object"==typeof n&&void 0!==r?r.exports=a():this.ES6Promise=a()}).call(this,e("_process"),void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:15}],8:[function(e,t,r){!function(e,n){if(void 0!==r&&void 0!==t)n(0,t);else{var o={exports:{}};n(0,o),e.fetchJsonp=o.exports}}(this,(function(e,t){"use strict";var r="callback";function n(e){try{delete window[e]}catch(t){window[e]=void 0}}function o(e){var t=document.getElementById(e);t&&document.getElementsByTagName("head")[0].removeChild(t)}t.exports=function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=e,i=t.timeout||5e3,s=t.jsonpCallback||r,l=void 0;return new Promise((function(r,p){var u=t.jsonpCallbackFunction||"jsonp_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),c=s+"_"+u;window[u]=function(e){r({ok:!0,json:function(){return Promise.resolve(e)}}),l&&clearTimeout(l),o(c),n(u)},a+=-1===a.indexOf("?")?"?":"&";var d=document.createElement("script");d.setAttribute("src",""+a+s+"="+u),t.charset&&d.setAttribute("charset",t.charset),d.id=c,document.getElementsByTagName("head")[0].appendChild(d),l=setTimeout((function(){p(new Error("JSONP request to "+e+" timed out")),n(u),o(c),window[u]=function(){n(u)}}),i),d.onerror=function(){p(new Error("JSONP request to "+e+" failed")),n(u),o(c),l&&clearTimeout(l)}}))}}))},{}],9:[function(e,t,r){var n=n||function(e){"use strict";if(!(void 0===e||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var t=e.document,r=function(){return e.URL||e.webkitURL||e},n=t.createElementNS("http://www.w3.org/1999/xhtml","a"),o="download"in n,a=/constructor/i.test(e.HTMLElement)||e.safari,i=/CriOS\/[\d]+/.test(navigator.userAgent),s=function(t){(e.setImmediate||e.setTimeout)((function(){throw t}),0)},l=function(e){setTimeout((function(){"string"==typeof e?r().revokeObjectURL(e):e.remove()}),4e4)},p=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},u=function(t,u,c){function d(){!function(e,t,r){for(var n=(t=[].concat(t)).length;n--;){var o=e["on"+t[n]];if("function"==typeof o)try{o.call(e,e)}catch(e){s(e)}}}(m,"writestart progress write writeend".split(" "))}c||(t=p(t));var h,m=this,f="application/octet-stream"===t.type;if(m.readyState=m.INIT,o)return h=r().createObjectURL(t),void setTimeout((function(){var e,t;n.href=h,n.download=u,e=n,t=new MouseEvent("click"),e.dispatchEvent(t),d(),l(h),m.readyState=m.DONE}));!function(){if((i||f&&a)&&e.FileReader){var n=new FileReader;return n.onloadend=function(){var t=i?n.result:n.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(t,"_blank")||(e.location.href=t),t=void 0,m.readyState=m.DONE,d()},n.readAsDataURL(t),m.readyState=m.INIT}h=h||r().createObjectURL(t),f?e.location.href=h:e.open(h,"_blank")||(e.location.href=h),m.readyState=m.DONE,d(),l(h)}()},c=u.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,r){return t=t||e.name||"download",r||(e=p(e)),navigator.msSaveOrOpenBlob(e,t)}:(c.abort=function(){},c.readyState=c.INIT=0,c.WRITING=1,c.DONE=2,c.error=c.onwritestart=c.onprogress=c.onwrite=c.onabort=c.onerror=c.onwriteend=null,function(e,t,r){return new u(e,t||e.name||"download",r)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==t&&t.exports&&(t.exports.saveAs=n)},{}],10:[function(e,t,r){r.read=function(e,t,r,n,o){var a,i,s=8*o-n-1,l=(1<<s)-1,p=l>>1,u=-7,c=r?o-1:0,d=r?-1:1,h=e[t+c];for(c+=d,a=h&(1<<-u)-1,h>>=-u,u+=s;0<u;a=256*a+e[t+c],c+=d,u-=8);for(i=a&(1<<-u)-1,a>>=-u,u+=n;0<u;i=256*i+e[t+c],c+=d,u-=8);if(0===a)a=1-p;else{if(a===l)return i?NaN:1/0*(h?-1:1);i+=Math.pow(2,n),a-=p}return(h?-1:1)*i*Math.pow(2,a-n)},r.write=function(e,t,r,n,o,a){var i,s,l,p=8*a-o-1,u=(1<<p)-1,c=u>>1,d=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:a-1,m=n?1:-1,f=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,i=u):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),2<=(t+=1<=i+c?d/l:d*Math.pow(2,1-c))*l&&(i++,l/=2),u<=i+c?(s=0,i=u):1<=i+c?(s=(t*l-1)*Math.pow(2,o),i+=c):(s=t*Math.pow(2,c-1)*Math.pow(2,o),i=0));8<=o;e[r+h]=255&s,h+=m,s/=256,o-=8);for(i=i<<o|s,p+=o;0<p;e[r+h]=255&i,h+=m,i/=256,p-=8);e[r+h-m]|=128*f}},{}],11:[function(e,t,r){"use strict";var n;function o(e,t){return e.b===t.b&&e.a===t.a}function a(e,t){return e.b<t.b||e.b===t.b&&e.a<=t.a}function i(e,t,r){var n=t.b-e.b,o=r.b-t.b;return 0<n+o?n<o?t.a-e.a+n/(n+o)*(e.a-r.a):t.a-r.a+o/(n+o)*(r.a-e.a):0}function s(e,t,r){var n=t.b-e.b,o=r.b-t.b;return 0<n+o?(t.a-r.a)*n+(t.a-e.a)*o:0}function l(e,t){return e.a<t.a||e.a===t.a&&e.b<=t.b}function p(e,t,r){var n=t.a-e.a,o=r.a-t.a;return 0<n+o?n<o?t.b-e.b+n/(n+o)*(e.b-r.b):t.b-r.b+o/(n+o)*(r.b-e.b):0}function u(e,t,r){var n=t.a-e.a,o=r.a-t.a;return 0<n+o?(t.b-r.b)*n+(t.b-e.b)*o:0}function c(e,t,r,n){return(e=e<0?0:e)<=(r=r<0?0:r)?0===r?(t+n)/2:t+e/(e+r)*(n-t):n+r/(e+r)*(t-n)}function d(e){var t=g(e.b);return b(t,e.c),b(t.b,e.c),x(t,e.a),t}function h(e,t){var r=!1,n=!1;e!==t&&(t.a!==e.a&&(n=!0,w(t.a,e.a)),t.d!==e.d&&(r=!0,S(t.d,e.d)),v(t,e),n||(b(t,e.a),e.a.c=e),r||(x(t,e.d),e.d.a=e))}function m(e){var t=e.b,r=!1;e.d!==e.b.d&&(r=!0,S(e.d,e.b.d)),e.c===e?w(e.a,null):(e.b.d.a=J(e),e.a.c=e.c,v(e,J(e)),r||x(e,e.d)),t.c===t?(w(t.a,null),S(t.d,null)):(e.d.a=J(t),t.a.c=t.c,v(t,J(t))),_(e)}function f(e){var t=g(e),r=t.b;return v(t,e.e),t.a=e.b.a,b(r,t.a),t.d=r.d=e.d,t=t.b,v(e.b,J(e.b)),v(e.b,t),e.b.a=t.a,t.b.a.c=t.b,t.b.d=e.b.d,t.f=e.f,t.b.f=e.b.f,t}function y(e,t){var r=!1,n=g(e),o=n.b;return t.d!==e.d&&(r=!0,S(t.d,e.d)),v(n,e.e),v(o,t),n.a=e.b.a,o.a=t.a,n.d=o.d=e.d,e.d.a=o,r||x(n,e.d),n}function g(e){var t=new K,r=new K,n=e.b.h;return(((r.h=n).b.h=t).h=e).b.h=r,t.b=r,((t.c=t).e=r).b=t,(r.c=r).e=t}function v(e,t){var r=e.c,n=t.c;r.b.e=t,(n.b.e=e).c=n,t.c=r}function b(e,t){var r=t.f,n=new ee(t,r);for(r.e=n,r=(t.f=n).c=e;r.a=n,(r=r.c)!==e;);}function x(e,t){var r=t.d,n=new Q(t,r);for(r.b=n,(t.d=n).a=e,n.c=t.c,r=e;r.d=n,(r=r.e)!==e;);}function _(e){var t=e.h;e=e.b.h,(t.b.h=e).b.h=t}function w(e,t){for(var r=e.c,n=r;n.a=t,(n=n.c)!==r;);r=e.f,((n=e.e).f=r).e=n}function S(e,t){for(var r=e.a,n=r;n.d=t,(n=n.e)!==r;);r=e.d,((n=e.b).d=r).b=n}function M(e){var t=0;return Math.abs(e[1])>Math.abs(e[0])&&(t=1),Math.abs(e[2])>Math.abs(e[t])&&(t=2),t}var C=4e150;function T(e,t){e.f+=t.f,e.b.f+=t.b.f}function E(e,t,r){return e=e.a,t=t.a,r=r.a,t.b.a===e?r.b.a===e?a(t.a,r.a)?s(r.b.a,t.a,r.a)<=0:0<=s(t.b.a,r.a,t.a):s(r.b.a,e,r.a)<=0:r.b.a===e?0<=s(t.b.a,e,t.a):(t=i(t.b.a,e,t.a),(e=i(r.b.a,e,r.a))<=t)}function N(e){e.a.i=null;var t=e.e;t.a.c=t.c,t.c.a=t.a,e.e=null}function P(e,t){m(e.a),e.c=!1,(e.a=t).i=e}function A(e){for(var t=e.a.a;(e=de(e)).a.a===t;);return e.c&&(P(e,t=y(ce(e).a.b,e.a.e)),e=de(e)),e}function I(e,t,r){var n=new ue;return n.a=r,n.e=W(e.f,t.e,n),r.i=n}function O(e,t){switch(e.s){case 100130:return 0!=(1&t);case 100131:return 0!==t;case 100132:return 0<t;case 100133:return t<0;case 100134:return 2<=t||t<=-2}return!1}function L(e){var t=e.a,r=t.d;r.c=e.d,r.a=t,N(e)}function R(e,t,r){for(t=(e=t).a;e!==r;){e.c=!1;var n=ce(e),o=n.a;if(o.a!==t.a){if(!n.c){L(e);break}P(n,o=y(t.c.b,o.b))}t.c!==o&&(h(J(o),o),h(t,o)),L(e),t=n.a,e=n}return t}function D(e,t,r,n,o,a){for(var i=!0;I(e,t,r.b),(r=r.c)!==n;);for(null===o&&(o=ce(t).a.b.c);(r=(n=ce(t)).a.b).a===o.a;)r.c!==o&&(h(J(r),r),h(J(o),r)),n.f=t.f-r.f,n.d=O(e,n.f),t.b=!0,!i&&U(e,t)&&(T(r,o),N(t),m(o)),i=!1,t=n,o=r;t.b=!0,a&&V(e,t)}function k(e,t,r,n,o){var a=[t.g[0],t.g[1],t.g[2]];t.d=null,t.d=e.o&&e.o(a,r,n,e.c)||null,null===t.d&&(o?e.n||(Z(e,100156),e.n=!0):t.d=r[0])}function F(e,t,r){var n=[null,null,null,null];n[0]=t.a.d,n[1]=r.a.d,k(e,t.a,n,[.5,.5,0,0],!1),h(t,r)}function B(e,t,r,n,o){var a=Math.abs(t.b-e.b)+Math.abs(t.a-e.a),i=Math.abs(r.b-e.b)+Math.abs(r.a-e.a),s=o+1;n[o]=.5*i/(a+i),n[s]=.5*a/(a+i),e.g[0]+=n[o]*t.g[0]+n[s]*r.g[0],e.g[1]+=n[o]*t.g[1]+n[s]*r.g[1],e.g[2]+=n[o]*t.g[2]+n[s]*r.g[2]}function U(e,t){var r=ce(t),n=t.a,i=r.a;if(a(n.a,i.a)){if(0<s(i.b.a,n.a,i.a))return!1;if(o(n.a,i.a)){if(n.a!==i.a){r=e.e;var l=n.a.h;if(0<=l){var p=(r=r.b).d,u=r.e,c=r.c,d=c[l];p[d]=p[r.a],(c[p[d]]=d)<=--r.a&&(d<=1||a(u[p[d>>1]],u[p[d]])?le(r,d):pe(r,d)),u[l]=null,c[l]=r.b,r.b=l}else for(r.c[-(l+1)]=null;0<r.a&&null===r.c[r.d[r.a-1]];)--r.a;F(e,J(i),n)}}else f(i.b),h(n,J(i)),t.b=r.b=!0}else{if(s(n.b.a,i.a,n.a)<0)return!1;de(t).b=t.b=!0,f(n.b),h(J(i),n)}return!0}function G(e,t){var r=ce(t),n=t.a,d=r.a,m=n.a,y=d.a,g=n.b.a,v=d.b.a,b=new ee;if(s(g,e.a,m),s(v,e.a,y),m===y||Math.min(m.a,g.a)>Math.max(y.a,v.a))return!1;if(a(m,y)){if(0<s(v,m,y))return!1}else if(s(g,y,m)<0)return!1;var x,_,w=g,S=m,M=v,C=y;if(a(w,S)||(x=w,w=S,S=x),a(M,C)||(x=M,M=C,C=x),a(w,M)||(x=w,w=M,M=x,x=S,S=C,C=x),a(M,S)?a(S,C)?((x=i(w,M,S))+(_=i(M,S,C))<0&&(x=-x,_=-_),b.b=c(x,M.b,_,S.b)):((x=s(w,M,S))+(_=-s(w,C,S))<0&&(x=-x,_=-_),b.b=c(x,M.b,_,C.b)):b.b=(M.b+S.b)/2,l(w,S)||(x=w,w=S,S=x),l(M,C)||(x=M,M=C,C=x),l(w,M)||(x=w,w=M,M=x,x=S,S=C,C=x),l(M,S)?l(S,C)?((x=p(w,M,S))+(_=p(M,S,C))<0&&(x=-x,_=-_),b.a=c(x,M.a,_,S.a)):((x=u(w,M,S))+(_=-u(w,C,S))<0&&(x=-x,_=-_),b.a=c(x,M.a,_,C.a)):b.a=(M.a+S.a)/2,a(b,e.a)&&(b.b=e.a.b,b.a=e.a.a),w=a(m,y)?m:y,a(w,b)&&(b.b=w.b,b.a=w.a),o(b,m)||o(b,y))return U(e,t),!1;if(!o(g,e.a)&&0<=s(g,e.a,b)||!o(v,e.a)&&s(v,e.a,b)<=0){if(v===e.a)return f(n.b),h(d.b,n),n=ce(t=A(t)).a,R(e,ce(t),r),D(e,t,J(n),n,n,!0),!0;if(g!==e.a)return 0<=s(g,e.a,b)&&(de(t).b=t.b=!0,f(n.b),n.a.b=e.a.b,n.a.a=e.a.a),s(v,e.a,b)<=0&&(t.b=r.b=!0,f(d.b),d.a.b=e.a.b,d.a.a=e.a.a),!1;for(f(d.b),h(n.e,J(d)),y=(m=r=t).a.b.a;(m=de(m)).a.b.a===y;);return m=ce(t=m).a.b.c,r.a=J(d),D(e,t,(d=R(e,r,null)).c,n.b.c,m,!0),!0}return f(n.b),f(d.b),h(J(d),n),n.a.b=b.b,n.a.a=b.a,n.a.h=re(e.e,n.a),n=n.a,d=[0,0,0,0],b=[m.d,g.d,y.d,v.d],n.g[0]=n.g[1]=n.g[2]=0,B(n,m,g,d,0),B(n,y,v,d,2),k(e,n,b,d,!0),de(t).b=t.b=r.b=!0,!1}function V(e,t){for(var r=ce(t);;){for(;r.b;)r=ce(t=r);if(!(t.b||null!==(t=de(r=t))&&t.b))break;t.b=!1;var n,o=t.a,i=r.a;if(n=o.b.a!==i.b.a)e:{var l=ce(n=t),p=n.a,u=l.a,c=void 0;if(a(p.b.a,u.b.a)){if(s(p.b.a,u.b.a,p.a)<0){n=!1;break e}de(n).b=n.b=!0,c=f(p),h(u.b,c),c.d.c=n.d}else{if(0<s(u.b.a,p.b.a,u.a)){n=!1;break e}n.b=l.b=!0,c=f(u),h(p.e,u.b),c.b.d.c=n.d}n=!0}if(n&&(r.c?(N(r),m(i),i=(r=ce(t)).a):t.c&&(N(t),m(o),o=(t=de(r)).a)),o.a!==i.a)if(o.b.a===i.b.a||t.c||r.c||o.b.a!==e.a&&i.b.a!==e.a)U(e,t);else if(G(e,t))break;o.a===i.a&&o.b.a===i.b.a&&(T(i,o),N(t),m(o),t=de(r))}}function j(e,t){for(var r=(e.a=t).c;null===r.i;)if((r=r.c)===t.c){r=e;var n=t;(p=new ue).a=n.c.b;for(var i=(c=r.f).a;null!==(i=i.a).b&&!c.c(c.b,p,i.b););var l=ce(c=i.b),p=c.a;if(i=l.a,0===s(p.b.a,n,p.a))o((p=c.a).a,n)||o(p.b.a,n)||(f(p.b),c.c&&(m(p.c),c.c=!1),h(n.c,p),j(r,n));else{var u=a(i.b.a,p.b.a)?c:l;l=void 0,c.d||u.c?(l=u===c?y(n.c.b,p.e):y(i.b.c.b,n.c).b,u.c?P(u,l):((c=I(p=r,c,l)).f=de(c).f+c.a.f,c.d=O(p,c.f)),j(r,n)):D(r,c,n.c,n.c,null,!0)}return}if(c=(p=ce(r=A(r.i))).a,(p=R(e,p,null)).c===c){p=(c=p).c,i=ce(r),l=r.a,u=i.a;var c,d=!1;l.b.a!==u.b.a&&G(e,r),o(l.a,e.a)&&(h(J(p),l),p=ce(r=A(r)).a,R(e,ce(r),i),d=!0),o(u.a,e.a)&&(h(c,J(u)),c=R(e,i,null),d=!0),d?D(e,r,c.c,p,p,!0):(n=a(u.a,l.a)?J(u):l,D(e,r,n=y(c.c.b,n),n.c,n.c,!1),n.b.i.c=!0,V(e,r))}else D(e,r,p.c,c,c,!0)}function z(e,t){var r=new ue,n=d(e.b);n.a.b=C,n.a.a=t,n.b.a.b=-C,n.b.a.a=t,e.a=n.b.a,r.a=n,r.f=0,r.d=!1,r.c=!1,r.h=!0,r.b=!1,n=W(n=e.f,n.a,r),r.e=n}function H(e){this.a=new X,this.b=e,this.c=E}function W(e,t,r){for(;null!==(t=t.c).b&&!e.c(e.b,t.b,r););return e=new X(r,t.a,t),t.a.c=e,t.a=e}function X(e,t,r){this.b=e||null,this.a=t||this,this.c=r||this}function q(){this.d=0,this.p=this.b=this.q=null,this.j=[0,0,0],this.s=100130,this.n=!1,this.o=this.a=this.e=this.f=null,this.m=!1,this.c=this.r=this.i=this.k=this.l=this.h=null}function Y(e,t){if(e.d!==t)for(;e.d!==t;)if(e.d<t)switch(e.d){case 0:Z(e,100151),e.u(null);break;case 1:Z(e,100152),e.t()}else switch(e.d){case 2:Z(e,100154),e.v();break;case 1:Z(e,100153),e.w()}}function Z(e,t){e.p&&e.p(t,e.c)}function Q(e,t){this.b=e||this,this.d=t||this,this.a=null,this.c=!1}function K(){(this.h=this).i=this.d=this.a=this.e=this.c=this.b=null,this.f=0}function J(e){return e.b.e}function $(){this.c=new ee,this.a=new Q,this.b=new K,this.d=new K,this.b.b=this.d,this.d.b=this.b}function ee(e,t){this.e=e||this,this.f=t||this,this.d=this.c=null,this.g=[0,0,0],this.h=this.a=this.b=0}function te(){this.c=[],this.d=null,this.a=0,this.e=!1,this.b=new oe}function re(e,t){if(e.e){var r,n=e.b,o=++n.a;return 2*o>n.f&&(n.f*=2,n.c=ae(n.c,n.f+1)),0===n.b?r=o:(r=n.b,n.b=n.c[n.b]),n.e[r]=t,n.c[r]=o,n.d[o]=r,n.h&&pe(n,o),r}return n=e.a++,e.c[n]=t,-(n+1)}function ne(e){if(0===e.a)return se(e.b);var t=e.c[e.d[e.a-1]];if(0!==e.b.a&&a(ie(e.b),t))return se(e.b);for(;--e.a,0<e.a&&null===e.c[e.d[e.a-1]];);return t}function oe(){this.d=ae([0],33),this.e=[null,null],this.c=[0,0],this.a=0,this.f=32,this.b=0,this.h=!1,this.d[1]=1}function ae(e,t){for(var r=Array(t),n=0;n<e.length;n++)r[n]=e[n];for(;n<t;n++)r[n]=0;return r}function ie(e){return e.e[e.d[1]]}function se(e){var t=e.d,r=e.e,n=e.c,o=t[1],a=r[o];return 0<e.a&&(t[1]=t[e.a],n[t[1]]=1,r[o]=null,n[o]=e.b,e.b=o,0<--e.a&&le(e,1)),a}function le(e,t){for(var r=e.d,n=e.e,o=e.c,i=t,s=r[i];;){var l=i<<1;l<e.a&&a(n[r[l+1]],n[r[l]])&&(l+=1);var p=r[l];if(l>e.a||a(n[s],n[p])){o[r[i]=s]=i;break}o[r[i]=p]=i,i=l}}function pe(e,t){for(var r=e.d,n=e.e,o=e.c,i=t,s=r[i];;){var l=i>>1,p=r[l];if(0==l||a(n[p],n[s])){o[r[i]=s]=i;break}o[r[i]=p]=i,i=l}}function ue(){this.e=this.a=null,this.f=0,this.c=this.b=this.h=this.d=!1}function ce(e){return e.e.c.b}function de(e){return e.e.a.b}(n=q.prototype).x=function(){Y(this,0)},n.B=function(e,t){switch(e){case 100142:return;case 100140:switch(t){case 100130:case 100131:case 100132:case 100133:case 100134:return void(this.s=t)}break;case 100141:return void(this.m=!!t);default:return void Z(this,100900)}Z(this,100901)},n.y=function(e){switch(e){case 100142:return 0;case 100140:return this.s;case 100141:return this.m;default:Z(this,100900)}return!1},n.A=function(e,t,r){this.j[0]=e,this.j[1]=t,this.j[2]=r},n.z=function(e,t){var r=t||null;switch(e){case 100100:case 100106:this.h=r;break;case 100104:case 100110:this.l=r;break;case 100101:case 100107:this.k=r;break;case 100102:case 100108:this.i=r;break;case 100103:case 100109:this.p=r;break;case 100105:case 100111:this.o=r;break;case 100112:this.r=r;break;default:Z(this,100900)}},n.C=function(e,t){var r=!1,n=[0,0,0];Y(this,2);for(var o=0;o<3;++o){var a=e[o];a<-1e150&&(a=-1e150,r=!0),1e150<a&&(a=1e150,r=!0),n[o]=a}r&&Z(this,100155),null===(r=this.q)?h(r=d(this.b),r.b):(f(r),r=r.e),r.a.d=t,r.a.g[0]=n[0],r.a.g[1]=n[1],r.a.g[2]=n[2],r.f=1,r.b.f=-1,this.q=r},n.u=function(e){Y(this,0),this.d=1,this.b=new $,this.c=e},n.t=function(){Y(this,1),this.d=2,this.q=null},n.v=function(){Y(this,2),this.d=1},n.w=function(){Y(this,1),this.d=0;var e,t,r=!1,n=[c=this.j[0],i=this.j[1],p=this.j[2]];if(0===c&&0===i&&0===p){for(var i=[-2e150,-2e150,-2e150],l=[2e150,2e150,2e150],p=[],u=[],c=(r=this.b.c).e;c!==r;c=c.e)for(var d=0;d<3;++d){var h=c.g[d];h<l[d]&&(l[d]=h,u[d]=c),h>i[d]&&(i[d]=h,p[d]=c)}if(c=0,i[1]-l[1]>i[0]-l[0]&&(c=1),i[2]-l[2]>i[c]-l[c]&&(c=2),l[c]>=i[c])n[0]=0,n[1]=0,n[2]=1;else{for(i=0,l=u[c],p=p[c],u=[0,0,0],l=[l.g[0]-p.g[0],l.g[1]-p.g[1],l.g[2]-p.g[2]],d=[0,0,0],c=r.e;c!==r;c=c.e)d[0]=c.g[0]-p.g[0],d[1]=c.g[1]-p.g[1],d[2]=c.g[2]-p.g[2],u[0]=l[1]*d[2]-l[2]*d[1],u[1]=l[2]*d[0]-l[0]*d[2],u[2]=l[0]*d[1]-l[1]*d[0],i<(h=u[0]*u[0]+u[1]*u[1]+u[2]*u[2])&&(i=h,n[0]=u[0],n[1]=u[1],n[2]=u[2]);i<=0&&(n[0]=n[1]=n[2]=0,n[M(l)]=1)}r=!0}for(u=M(n),c=this.b.c,i=(u+1)%3,p=(u+2)%3,u=0<n[u]?1:-1,n=c.e;n!==c;n=n.e)n.b=n.g[i],n.a=u*n.g[p];if(r){for(n=0,c=(r=this.b.a).b;c!==r;c=c.b)if(!((i=c.a).f<=0))for(;n+=(i.a.b-i.b.a.b)*(i.a.a+i.b.a.a),(i=i.e)!==c.a;);if(n<0)for(r=(n=this.b.c).e;r!==n;r=r.e)r.a=-r.a}for(this.n=!1,c=(n=this.b.b).h;c!==n;c=r)r=c.h,i=c.e,o(c.a,c.b.a)&&c.e.e!==c&&(F(this,i,c),m(c),i=(c=i).e),i.e===c&&(i!==c&&(i!==r&&i!==r.b||(r=r.h),m(i)),c!==r&&c!==r.b||(r=r.h),m(c));for(this.e=n=new te,c=(r=this.b.c).e;c!==r;c=c.e)c.h=re(n,c);for(function(e){e.d=[];for(var t=0;t<e.a;t++)e.d[t]=t;e.d.sort(function(e){return function(t,r){return a(e[t],e[r])?1:-1}}(e.c)),e.e=!0,function(e){for(var t=e.a;1<=t;--t)le(e,t);e.h=!0}(e.b)}(n),this.f=new H(this),z(this,-C),z(this,C);null!==(n=ne(this.e));){for(;;){e:if(c=this.e,0===c.a)r=ie(c.b);else if(r=c.c[c.d[c.a-1]],0!==c.b.a&&(c=ie(c.b),a(c,r))){r=c;break e}if(null===r||!o(r,n))break;r=ne(this.e),F(this,n.c,r.c)}j(this,n)}for(this.a=this.f.a.a.b.a.a,n=0;null!==(r=this.f.a.a.b);)r.h||++n,N(r);for(this.f=null,(n=this.e).b=null,n.d=null,this.e=n.c=null,c=(n=this.b).a.b;c!==n.a;c=r)r=c.b,(c=c.a).e.e===c&&(T(c.c,c),m(c));if(!this.n){if(n=this.b,this.m)for(c=n.b.h;c!==n.b;c=r)r=c.h,c.b.d.c!==c.d.c?c.f=c.d.c?1:-1:m(c);else for(c=n.a.b;c!==n.a;c=r)if(r=c.b,c.c){for(c=c.a;a(c.b.a,c.a);c=c.c.b);for(;a(c.a,c.b.a);c=c.e);for(i=c.c.b,p=void 0;c.e!==i;)if(a(c.b.a,i.a)){for(;i.e!==c&&(a((t=i.e).b.a,t.a)||s(i.a,i.b.a,i.e.b.a)<=0);)i=(p=y(i.e,i)).b;i=i.c.b}else{for(;i.e!==c&&(a((e=c.c.b).a,e.b.a)||0<=s(c.b.a,c.a,c.c.b.a));)c=(p=y(c,c.c.b)).b;c=c.e}for(;i.e.e!==c;)i=(p=y(i.e,i)).b}if(this.h||this.i||this.k||this.l)if(this.m){for(r=(n=this.b).a.b;r!==n.a;r=r.b)if(r.c){for(this.h&&this.h(2,this.c),c=r.a;this.k&&this.k(c.a.d,this.c),(c=c.e)!==r.a;);this.i&&this.i(this.c)}}else{for(n=this.b,r=!!this.l,c=!1,i=-1,p=n.a.d;p!==n.a;p=p.d)if(p.c)for(c||(this.h&&this.h(4,this.c),c=!0),u=p.a;r&&i!==(l=u.b.d.c?0:1)&&(i=l,this.l&&this.l(!!i,this.c)),this.k&&this.k(u.a.d,this.c),(u=u.e)!==p.a;);c&&this.i&&this.i(this.c)}if(this.r){for(c=(n=this.b).a.b;c!==n.a;c=r)if(r=c.b,!c.c){for(p=(i=c.a).e,u=void 0;p=(u=p).e,(u.d=null)===u.b.d&&(u.c===u?w(u.a,null):(u.a.c=u.c,v(u,J(u))),(l=u.b).c===l?w(l.a,null):(l.a.c=l.c,v(l,J(l))),_(u)),u!==i;);i=c.d,((c=c.b).d=i).b=c}return this.r(this.b),void(this.c=this.b=null)}}this.b=this.c=null},this.libtess={GluTesselator:q,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111}},q.prototype.gluDeleteTess=q.prototype.x,q.prototype.gluTessProperty=q.prototype.B,q.prototype.gluGetTessProperty=q.prototype.y,q.prototype.gluTessNormal=q.prototype.A,q.prototype.gluTessCallback=q.prototype.z,q.prototype.gluTessVertex=q.prototype.C,q.prototype.gluTessBeginPolygon=q.prototype.u,q.prototype.gluTessBeginContour=q.prototype.t,q.prototype.gluTessEndContour=q.prototype.v,q.prototype.gluTessEndPolygon=q.prototype.w,void 0!==t&&(t.exports=this.libtess)},{}],12:[function(e,t,r){"use strict";function n(e,t,r,n){for(var o=e[t++],a=1<<o,i=1+a,s=1+i,l=o+1,p=(1<<l)-1,u=0,c=0,d=0,h=e[t++],m=new Int32Array(4096),f=null;;){for(;u<16&&0!==h;)c|=e[t++]<<u,u+=8,1===h?h=e[t++]:--h;if(u<l)break;var y=c&p;if(c>>=l,u-=l,y!=a){if(y==i)break;for(var g=y<s?y:f,v=0,b=g;a<b;)b=m[b]>>8,++v;var x=b;if(n<d+v+(g!==y?1:0))return void console.log("Warning, gif stream longer than expected.");r[d++]=x;var _=d+=v;for(g!==y&&(r[d++]=x),b=g;v--;)b=m[b],r[--_]=255&b,b>>=8;null!==f&&s<4096&&(m[s++]=f<<8|x,p+1<=s&&l<12&&(++l,p=p<<1|1)),f=y}else s=1+i,p=(1<<(l=o+1))-1,f=null}return d!==n&&console.log("Warning, gif stream shorter than expected."),r}try{r.GifWriter=function(e,t,r,n){var o=0,a=void 0===(n=void 0===n?{}:n).loop?null:n.loop,i=void 0===n.palette?null:n.palette;if(t<=0||r<=0||65535<t||65535<r)throw new Error("Width/Height invalid.");function s(e){var t=e.length;if(t<2||256<t||t&t-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return t}e[o++]=71,e[o++]=73,e[o++]=70,e[o++]=56,e[o++]=57,e[o++]=97;var l=0,p=0;if(null!==i){for(var u=s(i);u>>=1;)++l;if(u=1<<l,--l,void 0!==n.background){if(u<=(p=n.background))throw new Error("Background index out of range.");if(0===p)throw new Error("Background index explicitly passed as 0.")}}if(e[o++]=255&t,e[o++]=t>>8&255,e[o++]=255&r,e[o++]=r>>8&255,e[o++]=(null!==i?128:0)|l,e[o++]=p,e[o++]=0,null!==i)for(var c=0,d=i.length;c<d;++c){var h=i[c];e[o++]=h>>16&255,e[o++]=h>>8&255,e[o++]=255&h}if(null!==a){if(a<0||65535<a)throw new Error("Loop count invalid.");e[o++]=33,e[o++]=255,e[o++]=11,e[o++]=78,e[o++]=69,e[o++]=84,e[o++]=83,e[o++]=67,e[o++]=65,e[o++]=80,e[o++]=69,e[o++]=50,e[o++]=46,e[o++]=48,e[o++]=3,e[o++]=1,e[o++]=255&a,e[o++]=a>>8&255,e[o++]=0}var m=!1;this.addFrame=function(t,r,n,a,l,p){if(!0===m&&(--o,m=!1),p=void 0===p?{}:p,t<0||r<0||65535<t||65535<r)throw new Error("x/y invalid.");if(n<=0||a<=0||65535<n||65535<a)throw new Error("Width/Height invalid.");if(l.length<n*a)throw new Error("Not enough pixels for the frame size.");var u=!0,c=p.palette;if(null==c&&(u=!1,c=i),null==c)throw new Error("Must supply either a local or global palette.");for(var d=s(c),h=0;d>>=1;)++h;d=1<<h;var f=void 0===p.delay?0:p.delay,y=void 0===p.disposal?0:p.disposal;if(y<0||3<y)throw new Error("Disposal out of range.");var g=!1,v=0;if(void 0!==p.transparent&&null!==p.transparent&&(g=!0,(v=p.transparent)<0||d<=v))throw new Error("Transparent color index.");if(0===y&&!g&&0===f||(e[o++]=33,e[o++]=249,e[o++]=4,e[o++]=y<<2|(!0===g?1:0),e[o++]=255&f,e[o++]=f>>8&255,e[o++]=v,e[o++]=0),e[o++]=44,e[o++]=255&t,e[o++]=t>>8&255,e[o++]=255&r,e[o++]=r>>8&255,e[o++]=255&n,e[o++]=n>>8&255,e[o++]=255&a,e[o++]=a>>8&255,e[o++]=!0===u?128|h-1:0,!0===u)for(var b=0,x=c.length;b<x;++b){var _=c[b];e[o++]=_>>16&255,e[o++]=_>>8&255,e[o++]=255&_}return o=function(e,t,r,n){e[t++]=r;var o=t++,a=1<<r,i=a-1,s=1+a,l=1+s,p=r+1,u=0,c=0;function d(r){for(;r<=u;)e[t++]=255&c,c>>=8,u-=8,t===o+256&&(e[o]=255,o=t++)}function h(e){c|=e<<u,u+=p,d(8)}var m=n[0]&i,f={};h(a);for(var y=1,g=n.length;y<g;++y){var v=n[y]&i,b=m<<8|v,x=f[b];if(void 0===x){for(c|=m<<u,u+=p;8<=u;)e[t++]=255&c,c>>=8,u-=8,t===o+256&&(e[o]=255,o=t++);4096===l?(h(a),l=1+s,p=r+1,f={}):(1<<p<=l&&++p,f[b]=l++),m=v}else m=x}return h(m),h(s),d(1),o+1===t?e[o]=0:(e[o]=t-o-1,e[t++]=0),t}(e,o,h<2?2:h,l)},this.end=function(){return!1===m&&(e[o++]=59,m=!0),o},this.getOutputBuffer=function(){return e},this.setOutputBuffer=function(t){e=t},this.getOutputBufferPosition=function(){return o},this.setOutputBufferPosition=function(e){o=e}},r.GifReader=function(e){var t=0;if(71!==e[t++]||73!==e[t++]||70!==e[t++]||56!==e[t++]||56!=(e[t++]+1&253)||97!==e[t++])throw new Error("Invalid GIF 87a/89a header.");var r=e[t++]|e[t++]<<8,o=e[t++]|e[t++]<<8,a=e[t++],i=a>>7,s=1<<1+(7&a);e[t++],e[t++];var l=null,p=null;i&&(l=t,t+=3*(p=s));var u=!0,c=[],d=0,h=null,m=0,f=null;for(this.width=r,this.height=o;u&&t<e.length;)switch(e[t++]){case 33:switch(e[t++]){case 255:if(11!==e[t]||78==e[t+1]&&69==e[t+2]&&84==e[t+3]&&83==e[t+4]&&67==e[t+5]&&65==e[t+6]&&80==e[t+7]&&69==e[t+8]&&50==e[t+9]&&46==e[t+10]&&48==e[t+11]&&3==e[t+12]&&1==e[t+13]&&0==e[t+16])t+=14,f=e[t++]|e[t++]<<8,t++;else for(t+=12;;){if(!(0<=(E=e[t++])))throw Error("Invalid block size");if(0===E)break;t+=E}break;case 249:if(4!==e[t++]||0!==e[t+4])throw new Error("Invalid graphics extension block.");var y=e[t++];d=e[t++]|e[t++]<<8,h=e[t++],0==(1&y)&&(h=null),m=y>>2&7,t++;break;case 254:for(;;){if(!(0<=(E=e[t++])))throw Error("Invalid block size");if(0===E)break;t+=E}break;default:throw new Error("Unknown graphic control label: 0x"+e[t-1].toString(16))}break;case 44:var g=e[t++]|e[t++]<<8,v=e[t++]|e[t++]<<8,b=e[t++]|e[t++]<<8,x=e[t++]|e[t++]<<8,_=e[t++],w=_>>6&1,S=l,M=p,C=!1;_>>7&&(C=!0,S=t,t+=3*(M=1<<1+(7&_)));var T=t;for(t++;;){var E;if(!(0<=(E=e[t++])))throw Error("Invalid block size");if(0===E)break;t+=E}c.push({x:g,y:v,width:b,height:x,has_local_palette:C,palette_offset:S,palette_size:M,data_offset:T,data_length:t-T,transparent_index:h,interlaced:!!w,delay:d,disposal:m});break;case 59:u=!1;break;default:throw new Error("Unknown gif block: 0x"+e[t-1].toString(16))}this.numFrames=function(){return c.length},this.loopCount=function(){return f},this.frameInfo=function(e){if(e<0||e>=c.length)throw new Error("Frame index out of range.");return c[e]},this.decodeAndBlitFrameBGRA=function(t,o){var a=this.frameInfo(t),i=a.width*a.height,s=new Uint8Array(i);n(e,a.data_offset,s,i);var l=a.palette_offset,p=a.transparent_index;null===p&&(p=256);var u=a.width,c=r-u,d=u,h=4*(a.y*r+a.x),m=4*((a.y+a.height)*r+a.x),f=h,y=4*c;!0===a.interlaced&&(y+=4*r*7);for(var g=8,v=0,b=s.length;v<b;++v){var x=s[v];if(0===d&&(d=u,m<=(f+=y)&&(y=4*c+4*r*(g-1),f=h+(u+c)*(g<<1),g>>=1)),x===p)f+=4;else{var _=e[l+3*x],w=e[l+3*x+1],S=e[l+3*x+2];o[f++]=S,o[f++]=w,o[f++]=_,o[f++]=255}--d}},this.decodeAndBlitFrameRGBA=function(t,o){var a=this.frameInfo(t),i=a.width*a.height,s=new Uint8Array(i);n(e,a.data_offset,s,i);var l=a.palette_offset,p=a.transparent_index;null===p&&(p=256);var u=a.width,c=r-u,d=u,h=4*(a.y*r+a.x),m=4*((a.y+a.height)*r+a.x),f=h,y=4*c;!0===a.interlaced&&(y+=4*r*7);for(var g=8,v=0,b=s.length;v<b;++v){var x=s[v];if(0===d&&(d=u,m<=(f+=y)&&(y=4*c+4*r*(g-1),f=h+(u+c)*(g<<1),g>>=1)),x===p)f+=4;else{var _=e[l+3*x],w=e[l+3*x+1],S=e[l+3*x+2];o[f++]=_,o[f++]=w,o[f++]=S,o[f++]=255}--d}}}}catch(e){}},{}],13:[function(e,t,r){(function(n){!function(t){"use strict";function r(e){if(null==this)throw TypeError();var t=String(this),r=t.length,n=e?Number(e):0;if(n!=n&&(n=0),!(n<0||r<=n)){var o,a=t.charCodeAt(n);return 55296<=a&&a<=56319&&n+1<r&&56320<=(o=t.charCodeAt(n+1))&&o<=57343?1024*(a-55296)+o-56320+65536:a}}var o;function a(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function i(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new a,this.dtree=new a}String.prototype.codePointAt||((o=function(){try{var e={},t=Object.defineProperty,r=t(e,e,e)&&t}catch(e){}return r}())?o(String.prototype,"codePointAt",{value:r,configurable:!0,writable:!0}):String.prototype.codePointAt=r);var s=new a,l=new a,p=new Uint8Array(30),u=new Uint16Array(30),c=new Uint8Array(30),d=new Uint16Array(30),h=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),m=new a,f=new Uint8Array(320);function y(e,t,r,n){var o,a;for(o=0;o<r;++o)e[o]=0;for(o=0;o<30-r;++o)e[o+r]=o/r|0;for(a=n,o=0;o<30;++o)t[o]=a,a+=1<<e[o]}var g=new Uint16Array(16);function v(e,t,r,n){var o,a;for(o=0;o<16;++o)e.table[o]=0;for(o=0;o<n;++o)e.table[t[r+o]]++;for(o=a=e.table[0]=0;o<16;++o)g[o]=a,a+=e.table[o];for(o=0;o<n;++o)t[r+o]&&(e.trans[g[t[r+o]]++]=o)}function b(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function x(e,t,r){if(!t)return r;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,n+r}function _(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;for(var r=0,n=0,o=0,a=e.tag;n=2*n+(1&a),a>>>=1,++o,r+=t.table[o],0<=(n-=t.table[o]););return e.tag=a,e.bitcount-=o,t.trans[r+n]}function w(e,t,r){var n,o,a,i,s,l;for(n=x(e,5,257),o=x(e,5,1),a=x(e,4,4),i=0;i<19;++i)f[i]=0;for(i=0;i<a;++i){var p=x(e,3,0);f[h[i]]=p}for(v(m,f,0,19),s=0;s<n+o;){var u=_(e,m);switch(u){case 16:var c=f[s-1];for(l=x(e,2,3);l;--l)f[s++]=c;break;case 17:for(l=x(e,3,3);l;--l)f[s++]=0;break;case 18:for(l=x(e,7,11);l;--l)f[s++]=0;break;default:f[s++]=u}}v(t,f,0,n),v(r,f,n,o)}function S(e,t,r){for(;;){var n,o,a,i,s=_(e,t);if(256===s)return 0;if(s<256)e.dest[e.destLen++]=s;else for(n=x(e,p[s-=257],u[s]),o=_(e,r),i=a=e.destLen-x(e,c[o],d[o]);i<a+n;++i)e.dest[e.destLen++]=e.dest[i]}}function M(e){for(var t,r;8<e.bitcount;)e.sourceIndex--,e.bitcount-=8;if((t=256*(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return-3;for(e.sourceIndex+=4,r=t;r;--r)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,0}function C(e,t,r,n,o){return Math.pow(1-o,3)*e+3*Math.pow(1-o,2)*o*t+3*(1-o)*Math.pow(o,2)*r+Math.pow(o,3)*n}function T(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}function E(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}function N(e){throw new Error(e)}function P(e,t){e||N(t)}!function(e,t){var r;for(r=0;r<7;++r)e.table[r]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,r=0;r<24;++r)e.trans[r]=256+r;for(r=0;r<144;++r)e.trans[24+r]=r;for(r=0;r<8;++r)e.trans[168+r]=280+r;for(r=0;r<112;++r)e.trans[176+r]=144+r;for(r=0;r<5;++r)t.table[r]=0;for(t.table[5]=32,r=0;r<32;++r)t.trans[r]=r}(s,l),y(p,u,4,3),y(c,d,2,1),p[28]=0,u[28]=258,T.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},T.prototype.addPoint=function(e,t){"number"==typeof e&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=e,this.x2=e),e<this.x1&&(this.x1=e),e>this.x2&&(this.x2=e)),"number"==typeof t&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=t,this.y2=t),t<this.y1&&(this.y1=t),t>this.y2&&(this.y2=t))},T.prototype.addX=function(e){this.addPoint(e,null)},T.prototype.addY=function(e){this.addPoint(null,e)},T.prototype.addBezier=function(e,t,r,n,o,a,i,s){var l=this,p=[e,t],u=[r,n],c=[o,a],d=[i,s];this.addPoint(e,t),this.addPoint(i,s);for(var h=0;h<=1;h++){var m=6*p[h]-12*u[h]+6*c[h],f=-3*p[h]+9*u[h]-9*c[h]+3*d[h],y=3*u[h]-3*p[h];if(0!=f){var g=Math.pow(m,2)-4*y*f;if(!(g<0)){var v=(-m+Math.sqrt(g))/(2*f);0<v&&v<1&&(0===h&&l.addX(C(p[h],u[h],c[h],d[h],v)),1===h&&l.addY(C(p[h],u[h],c[h],d[h],v)));var b=(-m-Math.sqrt(g))/(2*f);0<b&&b<1&&(0===h&&l.addX(C(p[h],u[h],c[h],d[h],b)),1===h&&l.addY(C(p[h],u[h],c[h],d[h],b)))}}else{if(0==m)continue;var x=-y/m;0<x&&x<1&&(0===h&&l.addX(C(p[h],u[h],c[h],d[h],x)),1===h&&l.addY(C(p[h],u[h],c[h],d[h],x)))}}},T.prototype.addQuad=function(e,t,r,n,o,a){var i=e+2/3*(r-e),s=t+2/3*(n-t),l=i+1/3*(o-e),p=s+1/3*(a-t);this.addBezier(e,t,i,s,l,p,o,a)},E.prototype.moveTo=function(e,t){this.commands.push({type:"M",x:e,y:t})},E.prototype.lineTo=function(e,t){this.commands.push({type:"L",x:e,y:t})},E.prototype.curveTo=E.prototype.bezierCurveTo=function(e,t,r,n,o,a){this.commands.push({type:"C",x1:e,y1:t,x2:r,y2:n,x:o,y:a})},E.prototype.quadTo=E.prototype.quadraticCurveTo=function(e,t,r,n){this.commands.push({type:"Q",x1:e,y1:t,x:r,y:n})},E.prototype.close=E.prototype.closePath=function(){this.commands.push({type:"Z"})},E.prototype.extend=function(e){if(e.commands)e=e.commands;else if(e instanceof T){var t=e;return this.moveTo(t.x1,t.y1),this.lineTo(t.x2,t.y1),this.lineTo(t.x2,t.y2),this.lineTo(t.x1,t.y2),void this.close()}Array.prototype.push.apply(this.commands,e)},E.prototype.getBoundingBox=function(){for(var e=new T,t=0,r=0,n=0,o=0,a=0;a<this.commands.length;a++){var i=this.commands[a];switch(i.type){case"M":e.addPoint(i.x,i.y),t=n=i.x,r=o=i.y;break;case"L":e.addPoint(i.x,i.y),n=i.x,o=i.y;break;case"Q":e.addQuad(n,o,i.x1,i.y1,i.x,i.y),n=i.x,o=i.y;break;case"C":e.addBezier(n,o,i.x1,i.y1,i.x2,i.y2,i.x,i.y),n=i.x,o=i.y;break;case"Z":n=t,o=r;break;default:throw new Error("Unexpected path command "+i.type)}}return e.isEmpty()&&e.addPoint(0,0),e},E.prototype.draw=function(e){e.beginPath();for(var t=0;t<this.commands.length;t+=1){var r=this.commands[t];"M"===r.type?e.moveTo(r.x,r.y):"L"===r.type?e.lineTo(r.x,r.y):"C"===r.type?e.bezierCurveTo(r.x1,r.y1,r.x2,r.y2,r.x,r.y):"Q"===r.type?e.quadraticCurveTo(r.x1,r.y1,r.x,r.y):"Z"===r.type&&e.closePath()}this.fill&&(e.fillStyle=this.fill,e.fill()),this.stroke&&(e.strokeStyle=this.stroke,e.lineWidth=this.strokeWidth,e.stroke())},E.prototype.toPathData=function(e){function t(){for(var t,r=arguments,n="",o=0;o<arguments.length;o+=1){var a=r[o];0<=a&&0<o&&(n+=" "),n+=(t=a,Math.round(t)===t?""+Math.round(t):t.toFixed(e))}return n}e=void 0!==e?e:2;for(var r="",n=0;n<this.commands.length;n+=1){var o=this.commands[n];"M"===o.type?r+="M"+t(o.x,o.y):"L"===o.type?r+="L"+t(o.x,o.y):"C"===o.type?r+="C"+t(o.x1,o.y1,o.x2,o.y2,o.x,o.y):"Q"===o.type?r+="Q"+t(o.x1,o.y1,o.x,o.y):"Z"===o.type&&(r+="Z")}return r},E.prototype.toSVG=function(e){var t='<path d="';return t+=this.toPathData(e),t+='"',this.fill&&"black"!==this.fill&&(null===this.fill?t+=' fill="none"':t+=' fill="'+this.fill+'"'),this.stroke&&(t+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),t+"/>"},E.prototype.toDOMElement=function(e){var t=this.toPathData(e),r=document.createElementNS("http://www.w3.org/2000/svg","path");return r.setAttribute("d",t),r};var A={fail:N,argument:P,assert:P},I=2147483648,O={},L={},R={};function D(e){return function(){return e}}L.BYTE=function(e){return A.argument(0<=e&&e<=255,"Byte value should be between 0 and 255."),[e]},R.BYTE=D(1),L.CHAR=function(e){return[e.charCodeAt(0)]},R.CHAR=D(1),L.CHARARRAY=function(e){for(var t=[],r=0;r<e.length;r+=1)t[r]=e.charCodeAt(r);return t},R.CHARARRAY=function(e){return e.length},L.USHORT=function(e){return[e>>8&255,255&e]},R.USHORT=D(2),L.SHORT=function(e){return 32768<=e&&(e=-(65536-e)),[e>>8&255,255&e]},R.SHORT=D(2),L.UINT24=function(e){return[e>>16&255,e>>8&255,255&e]},R.UINT24=D(3),L.ULONG=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},R.ULONG=D(4),L.LONG=function(e){return I<=e&&(e=-(2*I-e)),[e>>24&255,e>>16&255,e>>8&255,255&e]},R.LONG=D(4),L.FIXED=L.ULONG,R.FIXED=R.ULONG,L.FWORD=L.SHORT,R.FWORD=R.SHORT,L.UFWORD=L.USHORT,R.UFWORD=R.USHORT,L.LONGDATETIME=function(e){return[0,0,0,0,e>>24&255,e>>16&255,e>>8&255,255&e]},R.LONGDATETIME=D(8),L.TAG=function(e){return A.argument(4===e.length,"Tag should be exactly 4 ASCII characters."),[e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]},R.TAG=D(4),L.Card8=L.BYTE,R.Card8=R.BYTE,L.Card16=L.USHORT,R.Card16=R.USHORT,L.OffSize=L.BYTE,R.OffSize=R.BYTE,L.SID=L.USHORT,R.SID=R.USHORT,L.NUMBER=function(e){return-107<=e&&e<=107?[e+139]:108<=e&&e<=1131?[247+((e-=108)>>8),255&e]:-1131<=e&&e<=-108?[251+((e=-e-108)>>8),255&e]:-32768<=e&&e<=32767?L.NUMBER16(e):L.NUMBER32(e)},R.NUMBER=function(e){return L.NUMBER(e).length},L.NUMBER16=function(e){return[28,e>>8&255,255&e]},R.NUMBER16=D(3),L.NUMBER32=function(e){return[29,e>>24&255,e>>16&255,e>>8&255,255&e]},R.NUMBER32=D(5),L.REAL=function(e){var t=e.toString(),r=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var n=parseFloat("1e"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*n)/n).toString()}for(var o="",a=0,i=t.length;a<i;a+=1){var s=t[a];o+="e"===s?"-"===t[++a]?"c":"b":"."===s?"a":"-"===s?"e":s}for(var l=[30],p=0,u=(o+=1&o.length?"f":"ff").length;p<u;p+=2)l.push(parseInt(o.substr(p,2),16));return l},R.REAL=function(e){return L.REAL(e).length},L.NAME=L.CHARARRAY,R.NAME=R.CHARARRAY,L.STRING=L.CHARARRAY,R.STRING=R.CHARARRAY,O.UTF8=function(e,t,r){for(var n=[],o=r,a=0;a<o;a++,t+=1)n[a]=e.getUint8(t);return String.fromCharCode.apply(null,n)},O.UTF16=function(e,t,r){for(var n=[],o=r/2,a=0;a<o;a++,t+=2)n[a]=e.getUint16(t);return String.fromCharCode.apply(null,n)},L.UTF16=function(e){for(var t=[],r=0;r<e.length;r+=1){var n=e.charCodeAt(r);t[t.length]=n>>8&255,t[t.length]=255&n}return t},R.UTF16=function(e){return 2*e.length};var k={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",macintosh:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};O.MACSTRING=function(e,t,r,n){var o=k[n];if(void 0!==o){for(var a="",i=0;i<r;i++){var s=e.getUint8(t+i);a+=s<=127?String.fromCharCode(s):o[127&s]}return a}};var F,B="function"==typeof WeakMap&&new WeakMap;function U(e){return-128<=e&&e<=127}function G(e,t,r){for(var n=0,o=e.length;t<o&&n<64&&0===e[t];)++t,++n;return r.push(128|n-1),t}function V(e,t,r){for(var n=0,o=e.length,a=t;a<o&&n<64;){var i=e[a];if(!U(i))break;if(0===i&&a+1<o&&0===e[a+1])break;++a,++n}r.push(n-1);for(var s=t;s<a;++s)r.push(e[s]+256&255);return a}function j(e,t,r){for(var n=0,o=e.length,a=t;a<o&&n<64;){var i=e[a];if(0===i)break;if(U(i)&&a+1<o&&U(e[a+1]))break;++a,++n}r.push(64|n-1);for(var s=t;s<a;++s){var l=e[s];r.push(l+65536>>8&255,l+256&255)}return a}L.MACSTRING=function(e,t){var r=function(e){if(!F)for(var t in F={},k)F[t]=new String(t);var r=F[e];if(void 0!==r){if(B){var n=B.get(r);if(void 0!==n)return n}var o=k[e];if(void 0!==o){for(var a={},i=0;i<o.length;i++)a[o.charCodeAt(i)]=i+128;return B&&B.set(r,a),a}}}(t);if(void 0!==r){for(var n=[],o=0;o<e.length;o++){var a=e.charCodeAt(o);if(128<=a&&void 0===(a=r[a]))return;n[o]=a}return n}},R.MACSTRING=function(e,t){var r=L.MACSTRING(e,t);return void 0!==r?r.length:0},L.VARDELTAS=function(e){for(var t=0,r=[];t<e.length;){var n=e[t];t=0===n?G(e,t,r):-128<=n&&n<=127?V(e,t,r):j(e,t,r)}return r},L.INDEX=function(e){for(var t=1,r=[t],n=[],o=0;o<e.length;o+=1){var a=L.OBJECT(e[o]);Array.prototype.push.apply(n,a),t+=a.length,r.push(t)}if(0===n.length)return[0,0];for(var i=[],s=1+Math.floor(Math.log(t)/Math.log(2))/8|0,l=[void 0,L.BYTE,L.USHORT,L.UINT24,L.ULONG][s],p=0;p<r.length;p+=1){var u=l(r[p]);Array.prototype.push.apply(i,u)}return Array.prototype.concat(L.Card16(e.length),L.OffSize(s),i,n)},R.INDEX=function(e){return L.INDEX(e).length},L.DICT=function(e){for(var t=[],r=Object.keys(e),n=r.length,o=0;o<n;o+=1){var a=parseInt(r[o],0),i=e[a];t=(t=t.concat(L.OPERAND(i.value,i.type))).concat(L.OPERATOR(a))}return t},R.DICT=function(e){return L.DICT(e).length},L.OPERATOR=function(e){return e<1200?[e]:[12,e-1200]},L.OPERAND=function(e,t){var r=[];if(Array.isArray(t))for(var n=0;n<t.length;n+=1)A.argument(e.length===t.length,"Not enough arguments given for type"+t),r=r.concat(L.OPERAND(e[n],t[n]));else if("SID"===t)r=r.concat(L.NUMBER(e));else if("offset"===t)r=r.concat(L.NUMBER32(e));else if("number"===t)r=r.concat(L.NUMBER(e));else{if("real"!==t)throw new Error("Unknown operand type "+t);r=r.concat(L.REAL(e))}return r},L.OP=L.BYTE,R.OP=R.BYTE;var z="function"==typeof WeakMap&&new WeakMap;function H(e,t,r){for(var n=0;n<t.length;n+=1){var o=t[n];this[o.name]=o.value}if(this.tableName=e,this.fields=t,r)for(var a=Object.keys(r),i=0;i<a.length;i+=1){var s=a[i],l=r[s];void 0!==this[s]&&(this[s]=l)}}function W(e,t,r){void 0===r&&(r=t.length);var n=new Array(t.length+1);n[0]={name:e+"Count",type:"USHORT",value:r};for(var o=0;o<t.length;o++)n[o+1]={name:e+o,type:"USHORT",value:t[o]};return n}function X(e,t,r){var n=t.length,o=new Array(n+1);o[0]={name:e+"Count",type:"USHORT",value:n};for(var a=0;a<n;a++)o[a+1]={name:e+a,type:"TABLE",value:r(t[a],a)};return o}function q(e,t,r){var n=t.length,o=[];o[0]={name:e+"Count",type:"USHORT",value:n};for(var a=0;a<n;a++)o=o.concat(r(t[a],a));return o}function Y(e){1===e.format?H.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(W("glyph",e.glyphs))):A.assert(!1,"Can't create coverage table format 2 yet.")}function Z(e){H.call(this,"scriptListTable",q("scriptRecord",e,(function(e,t){var r=e.script,n=r.defaultLangSys;return A.assert(!!n,"Unable to write GSUB: script "+e.tag+" has no default language system."),[{name:"scriptTag"+t,type:"TAG",value:e.tag},{name:"script"+t,type:"TABLE",value:new H("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new H("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:n.reqFeatureIndex}].concat(W("featureIndex",n.featureIndexes)))}].concat(q("langSys",r.langSysRecords,(function(e,t){var r=e.langSys;return[{name:"langSysTag"+t,type:"TAG",value:e.tag},{name:"langSys"+t,type:"TABLE",value:new H("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:r.reqFeatureIndex}].concat(W("featureIndex",r.featureIndexes)))}]}))))}]})))}function Q(e){H.call(this,"featureListTable",q("featureRecord",e,(function(e,t){var r=e.feature;return[{name:"featureTag"+t,type:"TAG",value:e.tag},{name:"feature"+t,type:"TABLE",value:new H("featureTable",[{name:"featureParams",type:"USHORT",value:r.featureParams}].concat(W("lookupListIndex",r.lookupListIndexes)))}]})))}function K(e,t){H.call(this,"lookupListTable",X("lookup",e,(function(e){var r=t[e.lookupType];return A.assert(!!r,"Unable to write GSUB lookup type "+e.lookupType+" tables."),new H("lookupTable",[{name:"lookupType",type:"USHORT",value:e.lookupType},{name:"lookupFlag",type:"USHORT",value:e.lookupFlag}].concat(X("subtable",e.subtables,r)))})))}L.CHARSTRING=function(e){if(z){var t=z.get(e);if(void 0!==t)return t}for(var r=[],n=e.length,o=0;o<n;o+=1){var a=e[o];r=r.concat(L[a.type](a.value))}return z&&z.set(e,r),r},R.CHARSTRING=function(e){return L.CHARSTRING(e).length},L.OBJECT=function(e){var t=L[e.type];return A.argument(void 0!==t,"No encoding function for type "+e.type),t(e.value)},R.OBJECT=function(e){var t=R[e.type];return A.argument(void 0!==t,"No sizeOf function for type "+e.type),t(e.value)},L.TABLE=function(e){for(var t=[],r=e.fields.length,n=[],o=[],a=0;a<r;a+=1){var i=e.fields[a],s=L[i.type];A.argument(void 0!==s,"No encoding function for field type "+i.type+" ("+i.name+")");var l=e[i.name];void 0===l&&(l=i.value);var p=s(l);"TABLE"===i.type?(o.push(t.length),t=t.concat([0,0]),n.push(p)):t=t.concat(p)}for(var u=0;u<n.length;u+=1){var c=o[u],d=t.length;A.argument(d<65536,"Table "+e.tableName+" too big."),t[c]=d>>8,t[c+1]=255&d,t=t.concat(n[u])}return t},R.TABLE=function(e){for(var t=0,r=e.fields.length,n=0;n<r;n+=1){var o=e.fields[n],a=R[o.type];A.argument(void 0!==a,"No sizeOf function for field type "+o.type+" ("+o.name+")");var i=e[o.name];void 0===i&&(i=o.value),t+=a(i),"TABLE"===o.type&&(t+=2)}return t},L.RECORD=L.TABLE,R.RECORD=R.TABLE,L.LITERAL=function(e){return e},R.LITERAL=function(e){return e.length},H.prototype.encode=function(){return L.TABLE(this)},H.prototype.sizeOf=function(){return R.TABLE(this)};var J={Table:H,Record:H,Coverage:(Y.prototype=Object.create(H.prototype)).constructor=Y,ScriptList:(Z.prototype=Object.create(H.prototype)).constructor=Z,FeatureList:(Q.prototype=Object.create(H.prototype)).constructor=Q,LookupList:(K.prototype=Object.create(H.prototype)).constructor=K,ushortList:W,tableList:X,recordList:q};function $(e,t){return e.getUint8(t)}function ee(e,t){return e.getUint16(t,!1)}function te(e,t){return e.getUint32(t,!1)}function re(e,t){return e.getInt16(t,!1)+e.getUint16(t+2,!1)/65535}var ne={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};function oe(e,t){this.data=e,this.offset=t,this.relativeOffset=0}oe.prototype.parseByte=function(){var e=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},oe.prototype.parseChar=function(){var e=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},oe.prototype.parseCard8=oe.prototype.parseByte,oe.prototype.parseCard16=oe.prototype.parseUShort=function(){var e=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},oe.prototype.parseSID=oe.prototype.parseUShort,oe.prototype.parseOffset16=oe.prototype.parseUShort,oe.prototype.parseShort=function(){var e=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},oe.prototype.parseF2Dot14=function(){var e=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,e},oe.prototype.parseOffset32=oe.prototype.parseULong=function(){var e=te(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},oe.prototype.parseFixed=function(){var e=re(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},oe.prototype.parseString=function(e){var t=this.data,r=this.offset+this.relativeOffset,n="";this.relativeOffset+=e;for(var o=0;o<e;o++)n+=String.fromCharCode(t.getUint8(r+o));return n},oe.prototype.parseTag=function(){return this.parseString(4)},oe.prototype.parseLongDateTime=function(){var e=te(this.data,this.offset+this.relativeOffset+4);return e-=2082844800,this.relativeOffset+=8,e},oe.prototype.parseVersion=function(e){var t=ee(this.data,this.offset+this.relativeOffset),r=ee(this.data,this.offset+this.relativeOffset+2);return this.relativeOffset+=4,void 0===e&&(e=4096),t+r/e/10},oe.prototype.skip=function(e,t){void 0===t&&(t=1),this.relativeOffset+=ne[e]*t},oe.prototype.parseULongList=function(e){void 0===e&&(e=this.parseULong());for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getUint32(n),n+=4;return this.relativeOffset+=4*e,t},oe.prototype.parseOffset16List=oe.prototype.parseUShortList=function(e){void 0===e&&(e=this.parseUShort());for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getUint16(n),n+=2;return this.relativeOffset+=2*e,t},oe.prototype.parseShortList=function(e){for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getInt16(n),n+=2;return this.relativeOffset+=2*e,t},oe.prototype.parseByteList=function(e){for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,o=0;o<e;o++)t[o]=r.getUint8(n++);return this.relativeOffset+=e,t},oe.prototype.parseList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),n=0;n<e;n++)r[n]=t.call(this);return r},oe.prototype.parseList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),n=0;n<e;n++)r[n]=t.call(this);return r},oe.prototype.parseRecordList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),n=Object.keys(t),o=0;o<e;o++){for(var a={},i=0;i<n.length;i++){var s=n[i],l=t[s];a[s]=l.call(this)}r[o]=a}return r},oe.prototype.parseRecordList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),n=Object.keys(t),o=0;o<e;o++){for(var a={},i=0;i<n.length;i++){var s=n[i],l=t[s];a[s]=l.call(this)}r[o]=a}return r},oe.prototype.parseStruct=function(e){if("function"==typeof e)return e.call(this);for(var t=Object.keys(e),r={},n=0;n<t.length;n++){var o=t[n],a=e[o];r[o]=a.call(this)}return r},oe.prototype.parseValueRecord=function(e){if(void 0===e&&(e=this.parseUShort()),0!==e){var t={};return 1&e&&(t.xPlacement=this.parseShort()),2&e&&(t.yPlacement=this.parseShort()),4&e&&(t.xAdvance=this.parseShort()),8&e&&(t.yAdvance=this.parseShort()),16&e&&(t.xPlaDevice=void 0,this.parseShort()),32&e&&(t.yPlaDevice=void 0,this.parseShort()),64&e&&(t.xAdvDevice=void 0,this.parseShort()),128&e&&(t.yAdvDevice=void 0,this.parseShort()),t}},oe.prototype.parseValueRecordList=function(){for(var e=this.parseUShort(),t=this.parseUShort(),r=new Array(t),n=0;n<t;n++)r[n]=this.parseValueRecord(e);return r},oe.prototype.parsePointer=function(e){var t=this.parseOffset16();if(0<t)return new oe(this.data,this.offset+t).parseStruct(e)},oe.prototype.parsePointer32=function(e){var t=this.parseOffset32();if(0<t)return new oe(this.data,this.offset+t).parseStruct(e)},oe.prototype.parseListOfLists=function(e){for(var t=this,r=this.parseOffset16List(),n=r.length,o=this.relativeOffset,a=new Array(n),i=0;i<n;i++){var s=r[i];if(0!==s)if(t.relativeOffset=s,e){for(var l=t.parseOffset16List(),p=new Array(l.length),u=0;u<l.length;u++)t.relativeOffset=s+l[u],p[u]=e.call(t);a[i]=p}else a[i]=t.parseUShortList();else a[i]=void 0}return this.relativeOffset=o,a},oe.prototype.parseCoverage=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort(),r=this.parseUShort();if(1===t)return{format:1,glyphs:this.parseUShortList(r)};if(2!==t)throw new Error("0x"+e.toString(16)+": Coverage format must be 1 or 2.");for(var n=new Array(r),o=0;o<r;o++)n[o]={start:this.parseUShort(),end:this.parseUShort(),index:this.parseUShort()};return{format:2,ranges:n}},oe.prototype.parseClassDef=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===t)return{format:2,ranges:this.parseRecordList({start:oe.uShort,end:oe.uShort,classId:oe.uShort})};throw new Error("0x"+e.toString(16)+": ClassDef format must be 1 or 2.")},oe.list=function(e,t){return function(){return this.parseList(e,t)}},oe.list32=function(e,t){return function(){return this.parseList32(e,t)}},oe.recordList=function(e,t){return function(){return this.parseRecordList(e,t)}},oe.recordList32=function(e,t){return function(){return this.parseRecordList32(e,t)}},oe.pointer=function(e){return function(){return this.parsePointer(e)}},oe.pointer32=function(e){return function(){return this.parsePointer32(e)}},oe.tag=oe.prototype.parseTag,oe.byte=oe.prototype.parseByte,oe.uShort=oe.offset16=oe.prototype.parseUShort,oe.uShortList=oe.prototype.parseUShortList,oe.uLong=oe.offset32=oe.prototype.parseULong,oe.uLongList=oe.prototype.parseULongList,oe.struct=oe.prototype.parseStruct,oe.coverage=oe.prototype.parseCoverage,oe.classDef=oe.prototype.parseClassDef;var ae={reserved:oe.uShort,reqFeatureIndex:oe.uShort,featureIndexes:oe.uShortList};oe.prototype.parseScriptList=function(){return this.parsePointer(oe.recordList({tag:oe.tag,script:oe.pointer({defaultLangSys:oe.pointer(ae),langSysRecords:oe.recordList({tag:oe.tag,langSys:oe.pointer(ae)})})}))||[]},oe.prototype.parseFeatureList=function(){return this.parsePointer(oe.recordList({tag:oe.tag,feature:oe.pointer({featureParams:oe.offset16,lookupListIndexes:oe.uShortList})}))||[]},oe.prototype.parseLookupList=function(e){return this.parsePointer(oe.list(oe.pointer((function(){var t=this.parseUShort();A.argument(1<=t&&t<=9,"GPOS/GSUB lookup type "+t+" unknown.");var r=this.parseUShort(),n=16&r;return{lookupType:t,lookupFlag:r,subtables:this.parseList(oe.pointer(e[t])),markFilteringSet:n?this.parseUShort():void 0}}))))||[]},oe.prototype.parseFeatureVariationsList=function(){return this.parsePointer32((function(){var e=this.parseUShort(),t=this.parseUShort();return A.argument(1===e&&t<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:oe.offset32,featureTableSubstitutionOffset:oe.offset32})}))||[]};var ie={getByte:$,getCard8:$,getUShort:ee,getCard16:ee,getShort:function(e,t){return e.getInt16(t,!1)},getULong:te,getFixed:re,getTag:function(e,t){for(var r="",n=t;n<t+4;n+=1)r+=String.fromCharCode(e.getInt8(n));return r},getOffset:function(e,t,r){for(var n=0,o=0;o<r;o+=1)n<<=8,n+=e.getUint8(t+o);return n},getBytes:function(e,t,r){for(var n=[],o=t;o<r;o+=1)n.push(e.getUint8(o));return n},bytesToString:function(e){for(var t="",r=0;r<e.length;r+=1)t+=String.fromCharCode(e[r]);return t},Parser:oe},se=function(e,t){var r={};r.version=ie.getUShort(e,t),A.argument(0===r.version,"cmap table version should be 0."),r.numTables=ie.getUShort(e,t+2);for(var n=-1,o=r.numTables-1;0<=o;--o){var a=ie.getUShort(e,t+4+8*o),i=ie.getUShort(e,t+4+8*o+2);if(3===a&&(0===i||1===i||10===i)||0===a&&(0===i||1===i||2===i||3===i||4===i)){n=ie.getULong(e,t+4+8*o+4);break}}if(-1===n)throw new Error("No valid cmap sub-tables found.");var s=new ie.Parser(e,t+n);if(r.format=s.parseUShort(),12===r.format)!function(e,t){var r;t.parseUShort(),e.length=t.parseULong(),e.language=t.parseULong(),e.groupCount=r=t.parseULong(),e.glyphIndexMap={};for(var n=0;n<r;n+=1)for(var o=t.parseULong(),a=t.parseULong(),i=t.parseULong(),s=o;s<=a;s+=1)e.glyphIndexMap[s]=i,i++}(r,s);else{if(4!==r.format)throw new Error("Only format 4 and 12 cmap tables are supported (found format "+r.format+").");!function(e,t,r,n,o){var a;e.length=t.parseUShort(),e.language=t.parseUShort(),e.segCount=a=t.parseUShort()>>1,t.skip("uShort",3),e.glyphIndexMap={};for(var i=new ie.Parser(r,n+o+14),s=new ie.Parser(r,n+o+16+2*a),l=new ie.Parser(r,n+o+16+4*a),p=new ie.Parser(r,n+o+16+6*a),u=n+o+16+8*a,c=0;c<a-1;c+=1)for(var d=void 0,h=i.parseUShort(),m=s.parseUShort(),f=l.parseShort(),y=p.parseUShort(),g=m;g<=h;g+=1)0!==y?(u=p.offset+p.relativeOffset-2,u+=y,u+=2*(g-m),0!==(d=ie.getUShort(r,u))&&(d=d+f&65535)):d=g+f&65535,e.glyphIndexMap[g]=d}(r,s,e,t,n)}return r},le=function(e){var t,r=!0;for(t=e.length-1;0<t;--t)if(65535<e.get(t).unicode){console.log("Adding CMAP format 12 (needed!)"),r=!1;break}var n=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:r?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:r?12:20}];r||(n=n.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),n=n.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var o,a,i,s=new J.Table("cmap",n);for(s.segments=[],t=0;t<e.length;t+=1){for(var l=e.get(t),p=0;p<l.unicodes.length;p+=1)o=s,a=l.unicodes[p],i=t,o.segments.push({end:a,start:a,delta:-(a-i),offset:0,glyphIndex:i});s.segments=s.segments.sort((function(e,t){return e.start-t.start}))}s.segments.push({end:65535,start:65535,delta:1,offset:0});var u=s.segments.length,c=0,d=[],h=[],m=[],f=[],y=[],g=[];for(t=0;t<u;t+=1){var v=s.segments[t];v.end<=65535&&v.start<=65535?(d=d.concat({name:"end_"+t,type:"USHORT",value:v.end}),h=h.concat({name:"start_"+t,type:"USHORT",value:v.start}),m=m.concat({name:"idDelta_"+t,type:"SHORT",value:v.delta}),f=f.concat({name:"idRangeOffset_"+t,type:"USHORT",value:v.offset}),void 0!==v.glyphId&&(y=y.concat({name:"glyph_"+t,type:"USHORT",value:v.glyphId}))):c+=1,r||void 0===v.glyphIndex||(g=(g=(g=g.concat({name:"cmap12Start_"+t,type:"ULONG",value:v.start})).concat({name:"cmap12End_"+t,type:"ULONG",value:v.end})).concat({name:"cmap12Glyph_"+t,type:"ULONG",value:v.glyphIndex}))}if(s.segCountX2=2*(u-c),s.searchRange=2*Math.pow(2,Math.floor(Math.log(u-c)/Math.log(2))),s.entrySelector=Math.log(s.searchRange/2)/Math.log(2),s.rangeShift=s.segCountX2-s.searchRange,s.fields=s.fields.concat(d),s.fields.push({name:"reservedPad",type:"USHORT",value:0}),s.fields=s.fields.concat(h),s.fields=s.fields.concat(m),s.fields=s.fields.concat(f),s.fields=s.fields.concat(y),s.cmap4Length=14+2*d.length+2+2*h.length+2*m.length+2*f.length+2*y.length,!r){var b=16+4*g.length;s.cmap12Offset=20+s.cmap4Length,s.fields=s.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:b},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:g.length/3}]),s.fields=s.fields.concat(g)}return s},pe=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],ue=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],ce=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],de=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];function he(e){this.font=e}function me(e){this.cmap=e}function fe(e,t){this.encoding=e,this.charset=t}function ye(e){switch(e.version){case 1:this.names=de.slice();break;case 2:this.names=new Array(e.numberOfGlyphs);for(var t=0;t<e.numberOfGlyphs;t++)e.glyphNameIndex[t]<de.length?this.names[t]=de[e.glyphNameIndex[t]]:this.names[t]=e.names[e.glyphNameIndex[t]-de.length];break;case 2.5:this.names=new Array(e.numberOfGlyphs);for(var r=0;r<e.numberOfGlyphs;r++)this.names[r]=de[r+e.glyphNameIndex[r]];break;case 3:default:this.names=[]}}he.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.font.glyphs;if(r)for(var n=0;n<r.length;n+=1)for(var o=r.get(n),a=0;a<o.unicodes.length;a+=1)if(o.unicodes[a]===t)return n;return null},me.prototype.charToGlyphIndex=function(e){return this.cmap.glyphIndexMap[e.codePointAt(0)]||0},fe.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.encoding[t];return this.charset.indexOf(r)},ye.prototype.nameToGlyphIndex=function(e){return this.names.indexOf(e)},ye.prototype.glyphIndexToName=function(e){return this.names[e]};var ge=function(e,t,r,n,o){e.beginPath(),e.moveTo(t,r),e.lineTo(n,o),e.stroke()};function ve(e){this.bindConstructorValues(e)}function be(e,t,r){Object.defineProperty(e,t,{get:function(){return e.path,e[r]},set:function(t){e[r]=t},enumerable:!0,configurable:!0})}function xe(e,t){if(this.font=e,this.glyphs={},Array.isArray(t))for(var r=0;r<t.length;r++)this.glyphs[r]=t[r];this.length=t&&t.length||0}ve.prototype.bindConstructorValues=function(e){var t,r;this.index=e.index||0,this.name=e.name||null,this.unicode=e.unicode||void 0,this.unicodes=e.unicodes||void 0!==e.unicode?[e.unicode]:[],e.xMin&&(this.xMin=e.xMin),e.yMin&&(this.yMin=e.yMin),e.xMax&&(this.xMax=e.xMax),e.yMax&&(this.yMax=e.yMax),e.advanceWidth&&(this.advanceWidth=e.advanceWidth),Object.defineProperty(this,"path",(t=e.path,r=t||new E,{configurable:!0,get:function(){return"function"==typeof r&&(r=r()),r},set:function(e){r=e}}))},ve.prototype.addUnicode=function(e){0===this.unicodes.length&&(this.unicode=e),this.unicodes.push(e)},ve.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},ve.prototype.getPath=function(e,t,r,n,o){var a,i;e=void 0!==e?e:0,t=void 0!==t?t:0,r=void 0!==r?r:72;var s=(n=n||{}).xScale,l=n.yScale;if(n.hinting&&o&&o.hinting&&(i=this.path&&o.hinting.exec(this,r)),i)a=o.hinting.getCommands(i),e=Math.round(e),t=Math.round(t),s=l=1;else{a=this.path.commands;var p=1/this.path.unitsPerEm*r;void 0===s&&(s=p),void 0===l&&(l=p)}for(var u=new E,c=0;c<a.length;c+=1){var d=a[c];"M"===d.type?u.moveTo(e+d.x*s,t+-d.y*l):"L"===d.type?u.lineTo(e+d.x*s,t+-d.y*l):"Q"===d.type?u.quadraticCurveTo(e+d.x1*s,t+-d.y1*l,e+d.x*s,t+-d.y*l):"C"===d.type?u.curveTo(e+d.x1*s,t+-d.y1*l,e+d.x2*s,t+-d.y2*l,e+d.x*s,t+-d.y*l):"Z"===d.type&&u.closePath()}return u},ve.prototype.getContours=function(){if(void 0===this.points)return[];for(var e=[],t=[],r=0;r<this.points.length;r+=1){var n=this.points[r];t.push(n),n.lastPointOfContour&&(e.push(t),t=[])}return A.argument(0===t.length,"There are still points left in the current contour."),e},ve.prototype.getMetrics=function(){for(var e=this.path.commands,t=[],r=[],n=0;n<e.length;n+=1){var o=e[n];"Z"!==o.type&&(t.push(o.x),r.push(o.y)),"Q"!==o.type&&"C"!==o.type||(t.push(o.x1),r.push(o.y1)),"C"===o.type&&(t.push(o.x2),r.push(o.y2))}var a={xMin:Math.min.apply(null,t),yMin:Math.min.apply(null,r),xMax:Math.max.apply(null,t),yMax:Math.max.apply(null,r),leftSideBearing:this.leftSideBearing};return isFinite(a.xMin)||(a.xMin=0),isFinite(a.xMax)||(a.xMax=this.advanceWidth),isFinite(a.yMin)||(a.yMin=0),isFinite(a.yMax)||(a.yMax=0),a.rightSideBearing=this.advanceWidth-a.leftSideBearing-(a.xMax-a.xMin),a},ve.prototype.draw=function(e,t,r,n,o){this.getPath(t,r,n,o).draw(e)},ve.prototype.drawPoints=function(e,t,r,n){function o(t,r,n,o){var a=2*Math.PI;e.beginPath();for(var i=0;i<t.length;i+=1)e.moveTo(r+t[i].x*o,n+t[i].y*o),e.arc(r+t[i].x*o,n+t[i].y*o,2,0,a,!1);e.closePath(),e.fill()}t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:24;for(var a=1/this.path.unitsPerEm*n,i=[],s=[],l=this.path,p=0;p<l.commands.length;p+=1){var u=l.commands[p];void 0!==u.x&&i.push({x:u.x,y:-u.y}),void 0!==u.x1&&s.push({x:u.x1,y:-u.y1}),void 0!==u.x2&&s.push({x:u.x2,y:-u.y2})}e.fillStyle="blue",o(i,t,r,a),e.fillStyle="red",o(s,t,r,a)},ve.prototype.drawMetrics=function(e,t,r,n){var o;t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:24,o=1/this.path.unitsPerEm*n,e.lineWidth=1,e.strokeStyle="black",ge(e,t,-1e4,t,1e4),ge(e,-1e4,r,1e4,r);var a=this.xMin||0,i=this.yMin||0,s=this.xMax||0,l=this.yMax||0,p=this.advanceWidth||0;e.strokeStyle="blue",ge(e,t+a*o,-1e4,t+a*o,1e4),ge(e,t+s*o,-1e4,t+s*o,1e4),ge(e,-1e4,r+-i*o,1e4,r+-i*o),ge(e,-1e4,r+-l*o,1e4,r+-l*o),e.strokeStyle="green",ge(e,t+p*o,-1e4,t+p*o,1e4)},xe.prototype.get=function(e){return"function"==typeof this.glyphs[e]&&(this.glyphs[e]=this.glyphs[e]()),this.glyphs[e]},xe.prototype.push=function(e,t){this.glyphs[e]=t,this.length++};var _e={GlyphSet:xe,glyphLoader:function(e,t){return new ve({index:t,font:e})},ttfGlyphLoader:function(e,t,r,n,o,a){return function(){var i=new ve({index:t,font:e});return i.path=function(){r(i,n,o);var t=a(e.glyphs,i);return t.unitsPerEm=e.unitsPerEm,t},be(i,"xMin","_xMin"),be(i,"xMax","_xMax"),be(i,"yMin","_yMin"),be(i,"yMax","_yMax"),i}},cffGlyphLoader:function(e,t,r,n){return function(){var o=new ve({index:t,font:e});return o.path=function(){var t=r(e,o,n);return t.unitsPerEm=e.unitsPerEm,t},o}}};function we(e,t){if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r+=1)if(!we(e[r],t[r]))return!1;return!0}return!1}function Se(e){return e.length<1240?107:e.length<33900?1131:32768}function Me(e,t,r){var n,o,a=[],i=[],s=ie.getCard16(e,t);if(0!==s){var l=ie.getByte(e,t+2);n=t+(s+1)*l+2;for(var p=t+3,u=0;u<s+1;u+=1)a.push(ie.getOffset(e,p,l)),p+=l;o=n+a[s]}else o=t+2;for(var c=0;c<a.length-1;c+=1){var d=ie.getBytes(e,n+a[c],n+a[c+1]);r&&(d=r(d)),i.push(d)}return{objects:i,startOffset:t,endOffset:o}}function Ce(e,t){if(28===t)return e.parseByte()<<8|e.parseByte();if(29===t)return e.parseByte()<<24|e.parseByte()<<16|e.parseByte()<<8|e.parseByte();if(30===t)return function(e){for(var t="",r=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var n=e.parseByte(),o=n>>4,a=15&n;if(15==o)break;if(t+=r[o],15==a)break;t+=r[a]}return parseFloat(t)}(e);if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.parseByte()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.parseByte()-108;throw new Error("Invalid b0 "+t)}function Te(e,t,r){t=void 0!==t?t:0;var n=new ie.Parser(e,t),o=[],a=[];for(r=void 0!==r?r:e.length;n.relativeOffset<r;){var i=n.parseByte();i<=21?(12===i&&(i=1200+n.parseByte()),o.push([i,a]),a=[]):a.push(Ce(n,i))}return function(e){for(var t={},r=0;r<e.length;r+=1){var n,o=e[r][0],a=e[r][1];if(n=1===a.length?a[0]:a,t.hasOwnProperty(o)&&!isNaN(t[o]))throw new Error("Object "+t+" already has key "+o);t[o]=n}return t}(o)}function Ee(e,t){return t<=390?pe[t]:e[t-391]}function Ne(e,t,r){for(var n,o={},a=0;a<t.length;a+=1){var i=t[a];if(Array.isArray(i.type)){var s=[];s.length=i.type.length;for(var l=0;l<i.type.length;l++)void 0===(n=void 0!==e[i.op]?e[i.op][l]:void 0)&&(n=void 0!==i.value&&void 0!==i.value[l]?i.value[l]:null),"SID"===i.type[l]&&(n=Ee(r,n)),s[l]=n;o[i.name]=s}else void 0===(n=e[i.op])&&(n=void 0!==i.value?i.value:null),"SID"===i.type&&(n=Ee(r,n)),o[i.name]=n}return o}var Pe=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],Ae=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];function Ie(e,t,r,n){return Ne(Te(e,t,r),Ae,n)}function Oe(e,t,r,n){for(var o,a,i=[],s=0;s<r.length;s+=1){var l=(a=n,Ne(Te(o=new DataView(new Uint8Array(r[s]).buffer),0,o.byteLength),Pe,a));l._subrs=[],l._subrsBias=0;var p=l.private[0],u=l.private[1];if(0!==p&&0!==u){var c=Ie(e,u+t,p,n);if(l._defaultWidthX=c.defaultWidthX,l._nominalWidthX=c.nominalWidthX,0!==c.subrs){var d=Me(e,u+c.subrs+t);l._subrs=d.objects,l._subrsBias=Se(l._subrs)}l._privateDict=c}i.push(l)}return i}function Le(e,t,r){var n,o,a,i,s,l,p,u,c=new E,d=[],h=0,m=!1,f=!1,y=0,g=0;if(e.isCIDFont){var v=e.tables.cff.topDict._fdSelect[t.index],b=e.tables.cff.topDict._fdArray[v];s=b._subrs,l=b._subrsBias,p=b._defaultWidthX,u=b._nominalWidthX}else s=e.tables.cff.topDict._subrs,l=e.tables.cff.topDict._subrsBias,p=e.tables.cff.topDict._defaultWidthX,u=e.tables.cff.topDict._nominalWidthX;var x=p;function _(e,t){f&&c.closePath(),c.moveTo(e,t),f=!0}function w(){d.length%2==0||m||(x=d.shift()+u),h+=d.length>>1,d.length=0,m=!0}return function r(p){for(var v,b,S,M,C,T,E,N,P,A,I,O,L=0;L<p.length;){var R=p[L];switch(L+=1,R){case 1:case 3:w();break;case 4:1<d.length&&!m&&(x=d.shift()+u,m=!0),g+=d.pop(),_(y,g);break;case 5:for(;0<d.length;)y+=d.shift(),g+=d.shift(),c.lineTo(y,g);break;case 6:for(;0<d.length&&(y+=d.shift(),c.lineTo(y,g),0!==d.length);)g+=d.shift(),c.lineTo(y,g);break;case 7:for(;0<d.length&&(g+=d.shift(),c.lineTo(y,g),0!==d.length);)y+=d.shift(),c.lineTo(y,g);break;case 8:for(;0<d.length;)n=y+d.shift(),o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),y=a+d.shift(),g=i+d.shift(),c.curveTo(n,o,a,i,y,g);break;case 10:C=d.pop()+l,(T=s[C])&&r(T);break;case 11:return;case 12:switch(R=p[L],L+=1,R){case 35:n=y+d.shift(),o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),E=a+d.shift(),N=i+d.shift(),P=E+d.shift(),A=N+d.shift(),I=P+d.shift(),O=A+d.shift(),y=I+d.shift(),g=O+d.shift(),d.shift(),c.curveTo(n,o,a,i,E,N),c.curveTo(P,A,I,O,y,g);break;case 34:n=y+d.shift(),o=g,a=n+d.shift(),i=o+d.shift(),E=a+d.shift(),N=i,P=E+d.shift(),A=i,I=P+d.shift(),O=g,y=I+d.shift(),c.curveTo(n,o,a,i,E,N),c.curveTo(P,A,I,O,y,g);break;case 36:n=y+d.shift(),o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),E=a+d.shift(),N=i,P=E+d.shift(),A=i,I=P+d.shift(),O=A+d.shift(),y=I+d.shift(),c.curveTo(n,o,a,i,E,N),c.curveTo(P,A,I,O,y,g);break;case 37:n=y+d.shift(),o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),E=a+d.shift(),N=i+d.shift(),P=E+d.shift(),A=N+d.shift(),I=P+d.shift(),O=A+d.shift(),Math.abs(I-y)>Math.abs(O-g)?y=I+d.shift():g=O+d.shift(),c.curveTo(n,o,a,i,E,N),c.curveTo(P,A,I,O,y,g);break;default:console.log("Glyph "+t.index+": unknown operator 1200"+R),d.length=0}break;case 14:0<d.length&&!m&&(x=d.shift()+u,m=!0),f&&(c.closePath(),f=!1);break;case 18:w();break;case 19:case 20:w(),L+=h+7>>3;break;case 21:2<d.length&&!m&&(x=d.shift()+u,m=!0),g+=d.pop(),_(y+=d.pop(),g);break;case 22:1<d.length&&!m&&(x=d.shift()+u,m=!0),_(y+=d.pop(),g);break;case 23:w();break;case 24:for(;2<d.length;)n=y+d.shift(),o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),y=a+d.shift(),g=i+d.shift(),c.curveTo(n,o,a,i,y,g);y+=d.shift(),g+=d.shift(),c.lineTo(y,g);break;case 25:for(;6<d.length;)y+=d.shift(),g+=d.shift(),c.lineTo(y,g);n=y+d.shift(),o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),y=a+d.shift(),g=i+d.shift(),c.curveTo(n,o,a,i,y,g);break;case 26:for(d.length%2&&(y+=d.shift());0<d.length;)n=y,o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),y=a,g=i+d.shift(),c.curveTo(n,o,a,i,y,g);break;case 27:for(d.length%2&&(g+=d.shift());0<d.length;)n=y+d.shift(),o=g,a=n+d.shift(),i=o+d.shift(),y=a+d.shift(),g=i,c.curveTo(n,o,a,i,y,g);break;case 28:v=p[L],b=p[L+1],d.push((v<<24|b<<16)>>16),L+=2;break;case 29:C=d.pop()+e.gsubrsBias,(T=e.gsubrs[C])&&r(T);break;case 30:for(;0<d.length&&(n=y,o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),y=a+d.shift(),g=i+(1===d.length?d.shift():0),c.curveTo(n,o,a,i,y,g),0!==d.length);)n=y+d.shift(),o=g,a=n+d.shift(),i=o+d.shift(),g=i+d.shift(),y=a+(1===d.length?d.shift():0),c.curveTo(n,o,a,i,y,g);break;case 31:for(;0<d.length&&(n=y+d.shift(),o=g,a=n+d.shift(),i=o+d.shift(),g=i+d.shift(),y=a+(1===d.length?d.shift():0),c.curveTo(n,o,a,i,y,g),0!==d.length);)n=y,o=g+d.shift(),a=n+d.shift(),i=o+d.shift(),y=a+d.shift(),g=i+(1===d.length?d.shift():0),c.curveTo(n,o,a,i,y,g);break;default:R<32?console.log("Glyph "+t.index+": unknown operator "+R):R<247?d.push(R-139):R<251?(v=p[L],L+=1,d.push(256*(R-247)+v+108)):R<255?(v=p[L],L+=1,d.push(256*-(R-251)-v-108)):(v=p[L],b=p[L+1],S=p[L+2],M=p[L+3],L+=4,d.push((v<<24|b<<16|S<<8|M)/65536))}}}(r),t.advanceWidth=x,c}function Re(e,t){var r,n=pe.indexOf(e);return 0<=n&&(r=n),0<=(n=t.indexOf(e))?r=n+pe.length:(r=pe.length+t.length,t.push(e)),r}function De(e,t,r){for(var n={},o=0;o<e.length;o+=1){var a=e[o],i=t[a.name];void 0===i||we(i,a.value)||("SID"===a.type&&(i=Re(i,r)),n[a.op]={name:a.name,type:a.type,value:i})}return n}function ke(e,t){var r=new J.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return r.dict=De(Pe,e,t),r}function Fe(e){var t=new J.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return t.topDicts=[{name:"topDict_0",type:"TABLE",value:e}],t}function Be(e){var t=[],r=e.path;t.push({name:"width",type:"NUMBER",value:e.advanceWidth});for(var n=0,o=0,a=0;a<r.commands.length;a+=1){var i=void 0,s=void 0,l=r.commands[a];if("Q"===l.type&&(l={type:"C",x:l.x,y:l.y,x1:1/3*n+2/3*l.x1,y1:1/3*o+2/3*l.y1,x2:1/3*l.x+2/3*l.x1,y2:1/3*l.y+2/3*l.y1}),"M"===l.type)i=Math.round(l.x-n),s=Math.round(l.y-o),t.push({name:"dx",type:"NUMBER",value:i}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rmoveto",type:"OP",value:21}),n=Math.round(l.x),o=Math.round(l.y);else if("L"===l.type)i=Math.round(l.x-n),s=Math.round(l.y-o),t.push({name:"dx",type:"NUMBER",value:i}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rlineto",type:"OP",value:5}),n=Math.round(l.x),o=Math.round(l.y);else if("C"===l.type){var p=Math.round(l.x1-n),u=Math.round(l.y1-o),c=Math.round(l.x2-l.x1),d=Math.round(l.y2-l.y1);i=Math.round(l.x-l.x2),s=Math.round(l.y-l.y2),t.push({name:"dx1",type:"NUMBER",value:p}),t.push({name:"dy1",type:"NUMBER",value:u}),t.push({name:"dx2",type:"NUMBER",value:c}),t.push({name:"dy2",type:"NUMBER",value:d}),t.push({name:"dx",type:"NUMBER",value:i}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rrcurveto",type:"OP",value:8}),n=Math.round(l.x),o=Math.round(l.y)}}return t.push({name:"endchar",type:"OP",value:14}),t}var Ue=function(e,t,r){r.tables.cff={};var n,o,a,i=Me(e,(n=e,o=t,(a={}).formatMajor=ie.getCard8(n,o),a.formatMinor=ie.getCard8(n,o+1),a.size=ie.getCard8(n,o+2),a.offsetSize=ie.getCard8(n,o+3),a.startOffset=o,a.endOffset=o+4,a).endOffset,ie.bytesToString),s=Me(e,i.endOffset),l=Me(e,s.endOffset,ie.bytesToString),p=Me(e,l.endOffset);r.gsubrs=p.objects,r.gsubrsBias=Se(r.gsubrs);var u=Oe(e,t,s.objects,l.objects);if(1!==u.length)throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+u.length);var c=u[0];if((r.tables.cff.topDict=c)._privateDict&&(r.defaultWidthX=c._privateDict.defaultWidthX,r.nominalWidthX=c._privateDict.nominalWidthX),void 0!==c.ros[0]&&void 0!==c.ros[1]&&(r.isCIDFont=!0),r.isCIDFont){var d=c.fdArray,h=c.fdSelect;if(0===d||0===h)throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var m=Oe(e,t,Me(e,d+=t).objects,l.objects);c._fdArray=m,h+=t,c._fdSelect=function(e,t,r,n){var o,a=[],i=new ie.Parser(e,t),s=i.parseCard8();if(0===s)for(var l=0;l<r;l++){if(n<=(o=i.parseCard8()))throw new Error("CFF table CID Font FDSelect has bad FD index value "+o+" (FD count "+n+")");a.push(o)}else{if(3!==s)throw new Error("CFF Table CID Font FDSelect table has unsupported format "+s);var p,u=i.parseCard16(),c=i.parseCard16();if(0!==c)throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+c);for(var d=0;d<u;d++){if(o=i.parseCard8(),p=i.parseCard16(),n<=o)throw new Error("CFF table CID Font FDSelect has bad FD index value "+o+" (FD count "+n+")");if(r<p)throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID "+p);for(;c<p;c++)a.push(o);c=p}if(p!==r)throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+p)}return a}(e,h,r.numGlyphs,m.length)}var f=t+c.private[1],y=Ie(e,f,c.private[0],l.objects);if(r.defaultWidthX=y.defaultWidthX,r.nominalWidthX=y.nominalWidthX,0!==y.subrs){var g=Me(e,f+y.subrs);r.subrs=g.objects,r.subrsBias=Se(r.subrs)}else r.subrs=[],r.subrsBias=0;var v=Me(e,t+c.charStrings);r.nGlyphs=v.objects.length;var b=function(e,t,r,n){var o,a,i=new ie.Parser(e,t);--r;var s=[".notdef"],l=i.parseCard8();if(0===l)for(var p=0;p<r;p+=1)o=i.parseSID(),s.push(Ee(n,o));else if(1===l)for(;s.length<=r;){o=i.parseSID(),a=i.parseCard8();for(var u=0;u<=a;u+=1)s.push(Ee(n,o)),o+=1}else{if(2!==l)throw new Error("Unknown charset format "+l);for(;s.length<=r;){o=i.parseSID(),a=i.parseCard16();for(var c=0;c<=a;c+=1)s.push(Ee(n,o)),o+=1}}return s}(e,t+c.charset,r.nGlyphs,l.objects);0===c.encoding?r.cffEncoding=new fe(ue,b):1===c.encoding?r.cffEncoding=new fe(ce,b):r.cffEncoding=function(e,t,r){var n,o={},a=new ie.Parser(e,t),i=a.parseCard8();if(0===i)for(var s=a.parseCard8(),l=0;l<s;l+=1)o[n=a.parseCard8()]=l;else{if(1!==i)throw new Error("Unknown encoding format "+i);var p=a.parseCard8();n=1;for(var u=0;u<p;u+=1)for(var c=a.parseCard8(),d=a.parseCard8(),h=c;h<=c+d;h+=1)o[h]=n,n+=1}return new fe(o,r)}(e,t+c.encoding,b),r.encoding=r.encoding||r.cffEncoding,r.glyphs=new _e.GlyphSet(r);for(var x=0;x<r.nGlyphs;x+=1){var _=v.objects[x];r.glyphs.push(x,_e.cffGlyphLoader(r,x,Le,_))}},Ge=function(e,t){for(var r,n=new J.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),o=1/t.unitsPerEm,a={version:t.version,fullName:t.fullName,familyName:t.familyName,weight:t.weightName,fontBBox:t.fontBBox||[0,0,0,0],fontMatrix:[o,0,0,o,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},i=[],s=1;s<e.length;s+=1)r=e.get(s),i.push(r.name);var l=[];n.header=new J.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}]),n.nameIndex=function(e){var t=new J.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);t.names=[];for(var r=0;r<e.length;r+=1)t.names.push({name:"name_"+r,type:"NAME",value:e[r]});return t}([t.postScriptName]);var p,u,c,d=ke(a,l);n.topDictIndex=Fe(d),n.globalSubrIndex=new J.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}]),n.charsets=function(e,t){for(var r=new J.Record("Charsets",[{name:"format",type:"Card8",value:0}]),n=0;n<e.length;n+=1){var o=Re(e[n],t);r.fields.push({name:"glyph_"+n,type:"SID",value:o})}return r}(i,l),n.charStringsIndex=function(e){for(var t=new J.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),r=0;r<e.length;r+=1){var n=e.get(r),o=Be(n);t.charStrings.push({name:n.name,type:"CHARSTRING",value:o})}return t}(e),n.privateDict=(p={},u=l,(c=new J.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}])).dict=De(Ae,p,u),c),n.stringIndex=function(e){var t=new J.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);t.strings=[];for(var r=0;r<e.length;r+=1)t.strings.push({name:"string_"+r,type:"STRING",value:e[r]});return t}(l);var h=n.header.sizeOf()+n.nameIndex.sizeOf()+n.topDictIndex.sizeOf()+n.stringIndex.sizeOf()+n.globalSubrIndex.sizeOf();return a.charset=h,a.encoding=0,a.charStrings=a.charset+n.charsets.sizeOf(),a.private[1]=a.charStrings+n.charStringsIndex.sizeOf(),d=ke(a,l),n.topDictIndex=Fe(d),n},Ve=function(e,t){var r={},n=new ie.Parser(e,t);return r.version=n.parseVersion(),r.fontRevision=Math.round(1e3*n.parseFixed())/1e3,r.checkSumAdjustment=n.parseULong(),r.magicNumber=n.parseULong(),A.argument(1594834165===r.magicNumber,"Font header has wrong magic number."),r.flags=n.parseUShort(),r.unitsPerEm=n.parseUShort(),r.created=n.parseLongDateTime(),r.modified=n.parseLongDateTime(),r.xMin=n.parseShort(),r.yMin=n.parseShort(),r.xMax=n.parseShort(),r.yMax=n.parseShort(),r.macStyle=n.parseUShort(),r.lowestRecPPEM=n.parseUShort(),r.fontDirectionHint=n.parseShort(),r.indexToLocFormat=n.parseShort(),r.glyphDataFormat=n.parseShort(),r},je=function(e){var t=Math.round((new Date).getTime()/1e3)+2082844800,r=t;return e.createdTimestamp&&(r=e.createdTimestamp+2082844800),new J.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:r},{name:"modified",type:"LONGDATETIME",value:t},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],e)},ze=function(e,t){var r={},n=new ie.Parser(e,t);return r.version=n.parseVersion(),r.ascender=n.parseShort(),r.descender=n.parseShort(),r.lineGap=n.parseShort(),r.advanceWidthMax=n.parseUShort(),r.minLeftSideBearing=n.parseShort(),r.minRightSideBearing=n.parseShort(),r.xMaxExtent=n.parseShort(),r.caretSlopeRise=n.parseShort(),r.caretSlopeRun=n.parseShort(),r.caretOffset=n.parseShort(),n.relativeOffset+=8,r.metricDataFormat=n.parseShort(),r.numberOfHMetrics=n.parseUShort(),r},He=function(e){return new J.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],e)},We=function(e,t,r,n,o){for(var a,i,s=new ie.Parser(e,t),l=0;l<n;l+=1){l<r&&(a=s.parseUShort(),i=s.parseShort());var p=o.get(l);p.advanceWidth=a,p.leftSideBearing=i}},Xe=function(e){for(var t=new J.Table("hmtx",[]),r=0;r<e.length;r+=1){var n=e.get(r),o=n.advanceWidth||0,a=n.leftSideBearing||0;t.fields.push({name:"advanceWidth_"+r,type:"USHORT",value:o}),t.fields.push({name:"leftSideBearing_"+r,type:"SHORT",value:a})}return t},qe=function(e){for(var t=new J.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:e.length}]),r="",n=12+4*e.length,o=0;o<e.length;++o){var a=r.indexOf(e[o]);a<0&&(a=r.length,r+=e[o]),t.fields.push({name:"offset "+o,type:"USHORT",value:n+a}),t.fields.push({name:"length "+o,type:"USHORT",value:e[o].length})}return t.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),t},Ye=function(e,t){var r=new ie.Parser(e,t),n=r.parseULong();A.argument(1===n,"Unsupported ltag table version."),r.skip("uLong",1);for(var o=r.parseULong(),a=[],i=0;i<o;i++){for(var s="",l=t+r.parseUShort(),p=r.parseUShort(),u=l;u<l+p;++u)s+=String.fromCharCode(e.getInt8(u));a.push(s)}return a},Ze=function(e,t){var r={},n=new ie.Parser(e,t);return r.version=n.parseVersion(),r.numGlyphs=n.parseUShort(),1===r.version&&(r.maxPoints=n.parseUShort(),r.maxContours=n.parseUShort(),r.maxCompositePoints=n.parseUShort(),r.maxCompositeContours=n.parseUShort(),r.maxZones=n.parseUShort(),r.maxTwilightPoints=n.parseUShort(),r.maxStorage=n.parseUShort(),r.maxFunctionDefs=n.parseUShort(),r.maxInstructionDefs=n.parseUShort(),r.maxStackElements=n.parseUShort(),r.maxSizeOfInstructions=n.parseUShort(),r.maxComponentElements=n.parseUShort(),r.maxComponentDepth=n.parseUShort()),r},Qe=function(e){return new J.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:e}])},Ke=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"],Je={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},$e={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:5,11:1,12:4,13:0,14:6,15:0,16:0,17:0,18:0,19:2,20:4,21:9,22:21,23:3,24:29,25:29,26:29,27:29,28:29,29:0,30:0,31:4,32:7,33:25,34:0,35:0,36:0,37:0,38:29,39:29,40:0,41:5,42:7,43:7,44:7,45:7,46:7,47:7,48:7,49:7,50:4,51:24,52:23,53:7,54:7,55:7,56:7,57:27,58:7,59:4,60:4,61:4,62:4,63:26,64:9,65:9,66:9,67:13,68:13,69:11,70:10,71:12,72:17,73:16,74:14,75:15,76:18,77:19,78:20,79:22,80:30,81:0,82:0,83:0,84:4,85:28,86:28,87:28,88:0,89:0,90:0,91:0,92:0,93:0,94:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:7,136:4,137:26,138:0,139:0,140:0,141:0,142:0,143:28,144:0,145:0,146:0,147:0,148:6,149:0,150:0,151:0},et={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};function tt(e,t,r){switch(e){case 0:if(65535===t)return"und";if(r)return r[t];break;case 1:return Je[t];case 3:return et[t]}}var rt="utf-16",nt={0:"macintosh",1:"x-mac-japanese",2:"x-mac-chinesetrad",3:"x-mac-korean",6:"x-mac-greek",7:"x-mac-cyrillic",9:"x-mac-devanagai",10:"x-mac-gurmukhi",11:"x-mac-gujarati",12:"x-mac-oriya",13:"x-mac-bengali",14:"x-mac-tamil",15:"x-mac-telugu",16:"x-mac-kannada",17:"x-mac-malayalam",18:"x-mac-sinhalese",19:"x-mac-burmese",20:"x-mac-khmer",21:"x-mac-thai",22:"x-mac-lao",23:"x-mac-georgian",24:"x-mac-armenian",25:"x-mac-chinesesimp",26:"x-mac-tibetan",27:"x-mac-mongolian",28:"x-mac-ethiopic",29:"x-mac-ce",30:"x-mac-vietnamese",31:"x-mac-extarabic"},ot={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};function at(e,t,r){switch(e){case 0:return rt;case 1:return ot[r]||nt[t];case 3:if(1===t||10===t)return rt}}function it(e){var t={};for(var r in e)t[e[r]]=parseInt(r);return t}function st(e,t,r,n,o,a){return new J.Record("NameRecord",[{name:"platformID",type:"USHORT",value:e},{name:"encodingID",type:"USHORT",value:t},{name:"languageID",type:"USHORT",value:r},{name:"nameID",type:"USHORT",value:n},{name:"length",type:"USHORT",value:o},{name:"offset",type:"USHORT",value:a}])}function lt(e,t){var r=function(e,t){var r=e.length,n=t.length-r+1;e:for(var o=0;o<n;o++)for(;o<n;o++){for(var a=0;a<r;a++)if(t[o+a]!==e[a])continue e;return o}return-1}(e,t);if(r<0){r=t.length;for(var n=0,o=e.length;n<o;++n)t.push(e[n])}return r}var pt=function(e,t,r){for(var n={},o=new ie.Parser(e,t),a=o.parseUShort(),i=o.parseUShort(),s=o.offset+o.parseUShort(),l=0;l<i;l++){var p,u=o.parseUShort(),c=o.parseUShort(),d=o.parseUShort(),h=o.parseUShort(),m=Ke[h]||h,f=o.parseUShort(),y=o.parseUShort(),g=tt(u,d,r),v=at(u,c,d);if(void 0!==v&&void 0!==g&&(p=v===rt?O.UTF16(e,s+y,f):O.MACSTRING(e,s+y,f,v))){var b=n[m];void 0===b&&(b=n[m]={}),b[g]=p}}return 1===a&&o.parseUShort(),n},ut=function(e,t){var r,n=[],o={},a=it(Ke);for(var i in e){var s=a[i];if(void 0===s&&(s=i),r=parseInt(s),isNaN(r))throw new Error('Name table entry "'+i+'" does not exist, see nameTableNames for complete list.');o[r]=e[i],n.push(r)}for(var l=it(Je),p=it(et),u=[],c=[],d=0;d<n.length;d++){var h=o[r=n[d]];for(var m in h){var f=h[m],y=1,g=l[m],v=$e[g],b=at(y,v,g),x=L.MACSTRING(f,b);void 0===x&&(y=0,(g=t.indexOf(m))<0&&(g=t.length,t.push(m)),v=4,x=L.UTF16(f));var _=lt(x,c);u.push(st(y,v,g,r,x.length,_));var w=p[m];if(void 0!==w){var S=L.UTF16(f),M=lt(S,c);u.push(st(3,1,w,r,S.length,M))}}}u.sort((function(e,t){return e.platformID-t.platformID||e.encodingID-t.encodingID||e.languageID-t.languageID||e.nameID-t.nameID}));for(var C=new J.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:u.length},{name:"stringOffset",type:"USHORT",value:6+12*u.length}]),T=0;T<u.length;T++)C.fields.push({name:"record_"+T,type:"RECORD",value:u[T]});return C.fields.push({name:"strings",type:"LITERAL",value:c}),C},ct=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}],dt=function(e,t){var r={},n=new ie.Parser(e,t);r.version=n.parseUShort(),r.xAvgCharWidth=n.parseShort(),r.usWeightClass=n.parseUShort(),r.usWidthClass=n.parseUShort(),r.fsType=n.parseUShort(),r.ySubscriptXSize=n.parseShort(),r.ySubscriptYSize=n.parseShort(),r.ySubscriptXOffset=n.parseShort(),r.ySubscriptYOffset=n.parseShort(),r.ySuperscriptXSize=n.parseShort(),r.ySuperscriptYSize=n.parseShort(),r.ySuperscriptXOffset=n.parseShort(),r.ySuperscriptYOffset=n.parseShort(),r.yStrikeoutSize=n.parseShort(),r.yStrikeoutPosition=n.parseShort(),r.sFamilyClass=n.parseShort(),r.panose=[];for(var o=0;o<10;o++)r.panose[o]=n.parseByte();return r.ulUnicodeRange1=n.parseULong(),r.ulUnicodeRange2=n.parseULong(),r.ulUnicodeRange3=n.parseULong(),r.ulUnicodeRange4=n.parseULong(),r.achVendID=String.fromCharCode(n.parseByte(),n.parseByte(),n.parseByte(),n.parseByte()),r.fsSelection=n.parseUShort(),r.usFirstCharIndex=n.parseUShort(),r.usLastCharIndex=n.parseUShort(),r.sTypoAscender=n.parseShort(),r.sTypoDescender=n.parseShort(),r.sTypoLineGap=n.parseShort(),r.usWinAscent=n.parseUShort(),r.usWinDescent=n.parseUShort(),1<=r.version&&(r.ulCodePageRange1=n.parseULong(),r.ulCodePageRange2=n.parseULong()),2<=r.version&&(r.sxHeight=n.parseShort(),r.sCapHeight=n.parseShort(),r.usDefaultChar=n.parseUShort(),r.usBreakChar=n.parseUShort(),r.usMaxContent=n.parseUShort()),r},ht=function(e){return new J.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],e)},mt=function(e){for(var t=0;t<ct.length;t+=1){var r=ct[t];if(e>=r.begin&&e<r.end)return t}return-1},ft=function(e,t){var r={},n=new ie.Parser(e,t);switch(r.version=n.parseVersion(),r.italicAngle=n.parseFixed(),r.underlinePosition=n.parseShort(),r.underlineThickness=n.parseShort(),r.isFixedPitch=n.parseULong(),r.minMemType42=n.parseULong(),r.maxMemType42=n.parseULong(),r.minMemType1=n.parseULong(),r.maxMemType1=n.parseULong(),r.version){case 1:r.names=de.slice();break;case 2:r.numberOfGlyphs=n.parseUShort(),r.glyphNameIndex=new Array(r.numberOfGlyphs);for(var o=0;o<r.numberOfGlyphs;o++)r.glyphNameIndex[o]=n.parseUShort();r.names=[];for(var a=0;a<r.numberOfGlyphs;a++)if(r.glyphNameIndex[a]>=de.length){var i=n.parseChar();r.names.push(n.parseString(i))}break;case 2.5:r.numberOfGlyphs=n.parseUShort(),r.offset=new Array(r.numberOfGlyphs);for(var s=0;s<r.numberOfGlyphs;s++)r.offset[s]=n.parseChar()}return r},yt=function(){return new J.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])},gt=new Array(9);gt[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(oe.coverage),deltaGlyphId:this.parseUShort()}:2===t?{substFormat:2,coverage:this.parsePointer(oe.coverage),substitute:this.parseOffset16List()}:void A.assert(!1,"0x"+e.toString(16)+": lookup type 1 format must be 1 or 2.")},gt[2]=function(){var e=this.parseUShort();return A.argument(1===e,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),sequences:this.parseListOfLists()}},gt[3]=function(){var e=this.parseUShort();return A.argument(1===e,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),alternateSets:this.parseListOfLists()}},gt[4]=function(){var e=this.parseUShort();return A.argument(1===e,"GSUB ligature table identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),ligatureSets:this.parseListOfLists((function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}}))}};var vt={sequenceIndex:oe.uShort,lookupListIndex:oe.uShort};gt[5]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{substFormat:t,coverage:this.parsePointer(oe.coverage),ruleSets:this.parseListOfLists((function(){var e=this.parseUShort(),t=this.parseUShort();return{input:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,vt)}}))};if(2===t)return{substFormat:t,coverage:this.parsePointer(oe.coverage),classDef:this.parsePointer(oe.classDef),classSets:this.parseListOfLists((function(){var e=this.parseUShort(),t=this.parseUShort();return{classes:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,vt)}}))};if(3===t){var r=this.parseUShort(),n=this.parseUShort();return{substFormat:t,coverages:this.parseList(r,oe.pointer(oe.coverage)),lookupRecords:this.parseRecordList(n,vt)}}A.assert(!1,"0x"+e.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},gt[6]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(oe.coverage),chainRuleSets:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(vt)}}))}:2===t?{substFormat:2,coverage:this.parsePointer(oe.coverage),backtrackClassDef:this.parsePointer(oe.classDef),inputClassDef:this.parsePointer(oe.classDef),lookaheadClassDef:this.parsePointer(oe.classDef),chainClassSet:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(vt)}}))}:3===t?{substFormat:3,backtrackCoverage:this.parseList(oe.pointer(oe.coverage)),inputCoverage:this.parseList(oe.pointer(oe.coverage)),lookaheadCoverage:this.parseList(oe.pointer(oe.coverage)),lookupRecords:this.parseRecordList(vt)}:void A.assert(!1,"0x"+e.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},gt[7]=function(){var e=this.parseUShort();A.argument(1===e,"GSUB Extension Substitution subtable identifier-format must be 1");var t=this.parseUShort(),r=new oe(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:t,extension:gt[t].call(r)}},gt[8]=function(){var e=this.parseUShort();return A.argument(1===e,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(oe.coverage),backtrackCoverage:this.parseList(oe.pointer(oe.coverage)),lookaheadCoverage:this.parseList(oe.pointer(oe.coverage)),substitutes:this.parseUShortList()}};var bt=new Array(9);bt[1]=function(e){return 1===e.substFormat?new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)},{name:"deltaGlyphID",type:"USHORT",value:e.deltaGlyphId}]):new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.ushortList("substitute",e.substitute)))},bt[3]=function(e){return A.assert(1===e.substFormat,"Lookup type 3 substFormat must be 1."),new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.tableList("altSet",e.alternateSets,(function(e){return new J.Table("alternateSetTable",J.ushortList("alternate",e))}))))},bt[4]=function(e){return A.assert(1===e.substFormat,"Lookup type 4 substFormat must be 1."),new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.tableList("ligSet",e.ligatureSets,(function(e){return new J.Table("ligatureSetTable",J.tableList("ligature",e,(function(e){return new J.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:e.ligGlyph}].concat(J.ushortList("component",e.components,e.components.length+1)))})))}))))};var xt=function(e,t){var r=new oe(e,t=t||0),n=r.parseVersion(1);return A.argument(1===n||1.1===n,"Unsupported GSUB table version."),1===n?{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(gt)}:{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(gt),variations:r.parseFeatureVariationsList()}},_t=function(e){return new J.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new J.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new J.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new J.LookupList(e.lookups,bt)}])},wt=function(e,t){var r=new ie.Parser(e,t),n=r.parseULong();A.argument(1===n,"Unsupported META table version."),r.parseULong(),r.parseULong();for(var o=r.parseULong(),a={},i=0;i<o;i++){var s=r.parseTag(),l=r.parseULong(),p=r.parseULong(),u=O.UTF8(e,t+l,p);a[s]=u}return a},St=function(e){var t=Object.keys(e).length,r="",n=16+12*t,o=new J.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:n},{name:"numTags",type:"ULONG",value:t}]);for(var a in e){var i=r.length;r+=e[a],o.fields.push({name:"tag "+a,type:"TAG",value:a}),o.fields.push({name:"offset "+a,type:"ULONG",value:n+i}),o.fields.push({name:"length "+a,type:"ULONG",value:e[a].length})}return o.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),o};function Mt(e){return Math.log(e)/Math.log(2)|0}function Ct(e){for(;e.length%4!=0;)e.push(0);for(var t=0,r=0;r<e.length;r+=4)t+=(e[r]<<24)+(e[r+1]<<16)+(e[r+2]<<8)+e[r+3];return t%Math.pow(2,32)}function Tt(e,t,r,n){return new J.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==e?e:""},{name:"checkSum",type:"ULONG",value:void 0!==t?t:0},{name:"offset",type:"ULONG",value:void 0!==r?r:0},{name:"length",type:"ULONG",value:void 0!==n?n:0}])}function Et(e){var t=new J.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);t.tables=e,t.numTables=e.length;var r=Math.pow(2,Mt(t.numTables));t.searchRange=16*r,t.entrySelector=Mt(r),t.rangeShift=16*t.numTables-t.searchRange;for(var n=[],o=[],a=t.sizeOf()+Tt().sizeOf()*t.numTables;a%4!=0;)a+=1,o.push({name:"padding",type:"BYTE",value:0});for(var i=0;i<e.length;i+=1){var s=e[i];A.argument(4===s.tableName.length,"Table name"+s.tableName+" is invalid.");var l=s.sizeOf(),p=Tt(s.tableName,Ct(s.encode()),a,l);for(n.push({name:p.tag+" Table Record",type:"RECORD",value:p}),o.push({name:s.tableName+" table",type:"RECORD",value:s}),a+=l,A.argument(!isNaN(a),"Something went wrong calculating the offset.");a%4!=0;)a+=1,o.push({name:"padding",type:"BYTE",value:0})}return n.sort((function(e,t){return e.value.tag>t.value.tag?1:-1})),t.fields=t.fields.concat(n),t.fields=t.fields.concat(o),t}function Nt(e,t,r){for(var n=0;n<t.length;n+=1){var o=e.charToGlyphIndex(t[n]);if(0<o)return e.glyphs.get(o).getMetrics()}return r}var Pt=function(e){for(var t,r=[],n=[],o=[],a=[],i=[],s=[],l=[],p=0,u=0,c=0,d=0,h=0,m=0;m<e.glyphs.length;m+=1){var f=e.glyphs.get(m),y=0|f.unicode;if(isNaN(f.advanceWidth))throw new Error("Glyph "+f.name+" ("+m+"): advanceWidth is not a number.");(y<t||void 0===t)&&0<y&&(t=y),p<y&&(p=y);var g=mt(y);if(g<32)u|=1<<g;else if(g<64)c|=1<<g-32;else if(g<96)d|=1<<g-64;else{if(!(g<123))throw new Error("Unicode ranges bits > 123 are reserved for internal usage");h|=1<<g-96}if(".notdef"!==f.name){var v=f.getMetrics();r.push(v.xMin),n.push(v.yMin),o.push(v.xMax),a.push(v.yMax),s.push(v.leftSideBearing),l.push(v.rightSideBearing),i.push(f.advanceWidth)}}var b={xMin:Math.min.apply(null,r),yMin:Math.min.apply(null,n),xMax:Math.max.apply(null,o),yMax:Math.max.apply(null,a),advanceWidthMax:Math.max.apply(null,i),advanceWidthAvg:function(e){for(var t=0,r=0;r<e.length;r+=1)t+=e[r];return t/e.length}(i),minLeftSideBearing:Math.min.apply(null,s),maxLeftSideBearing:Math.max.apply(null,s),minRightSideBearing:Math.min.apply(null,l)};b.ascender=e.ascender,b.descender=e.descender;var x=je({flags:3,unitsPerEm:e.unitsPerEm,xMin:b.xMin,yMin:b.yMin,xMax:b.xMax,yMax:b.yMax,lowestRecPPEM:3,createdTimestamp:e.createdTimestamp}),_=He({ascender:b.ascender,descender:b.descender,advanceWidthMax:b.advanceWidthMax,minLeftSideBearing:b.minLeftSideBearing,minRightSideBearing:b.minRightSideBearing,xMaxExtent:b.maxLeftSideBearing+(b.xMax-b.xMin),numberOfHMetrics:e.glyphs.length}),w=Qe(e.glyphs.length),S=ht({xAvgCharWidth:Math.round(b.advanceWidthAvg),usWeightClass:e.tables.os2.usWeightClass,usWidthClass:e.tables.os2.usWidthClass,usFirstCharIndex:t,usLastCharIndex:p,ulUnicodeRange1:u,ulUnicodeRange2:c,ulUnicodeRange3:d,ulUnicodeRange4:h,fsSelection:e.tables.os2.fsSelection,sTypoAscender:b.ascender,sTypoDescender:b.descender,sTypoLineGap:0,usWinAscent:b.yMax,usWinDescent:Math.abs(b.yMin),ulCodePageRange1:1,sxHeight:Nt(e,"xyvw",{yMax:Math.round(b.ascender/2)}).yMax,sCapHeight:Nt(e,"HIKLEFJMNTZBDPRAGOQSUVWXY",b).yMax,usDefaultChar:e.hasChar(" ")?32:0,usBreakChar:e.hasChar(" ")?32:0}),M=Xe(e.glyphs),C=le(e.glyphs),T=e.getEnglishName("fontFamily"),E=e.getEnglishName("fontSubfamily"),N=T+" "+E,P=e.getEnglishName("postScriptName");P=P||T.replace(/\s/g,"")+"-"+E;var A={};for(var I in e.names)A[I]=e.names[I];A.uniqueID||(A.uniqueID={en:e.getEnglishName("manufacturer")+":"+N}),A.postScriptName||(A.postScriptName={en:P}),A.preferredFamily||(A.preferredFamily=e.names.fontFamily),A.preferredSubfamily||(A.preferredSubfamily=e.names.fontSubfamily);var O=[],L=ut(A,O),R=0<O.length?qe(O):void 0,D=yt(),k=Ge(e.glyphs,{version:e.getEnglishName("version"),fullName:N,familyName:T,weightName:E,postScriptName:P,unitsPerEm:e.unitsPerEm,fontBBox:[0,b.yMin,b.ascender,b.advanceWidthMax]}),F=e.metas&&0<Object.keys(e.metas).length?St(e.metas):void 0,B=[x,_,w,S,L,C,D,k,M];R&&B.push(R),e.tables.gsub&&B.push(_t(e.tables.gsub)),F&&B.push(F);for(var U=Et(B),G=Ct(U.encode()),V=U.fields,j=!1,z=0;z<V.length;z+=1)if("head table"===V[z].name){V[z].value.checkSumAdjustment=2981146554-G,j=!0;break}if(!j)throw new Error("Could not find head table with checkSum to adjust.");return U};function At(e,t){for(var r=0,n=e.length-1;r<=n;){var o=r+n>>>1,a=e[o].tag;if(a===t)return o;a<t?r=1+o:n=o-1}return-r-1}function It(e,t){for(var r=0,n=e.length-1;r<=n;){var o=r+n>>>1,a=e[o];if(a===t)return o;a<t?r=1+o:n=o-1}return-r-1}function Ot(e,t){for(var r,n=0,o=e.length-1;n<=o;){var a=n+o>>>1,i=(r=e[a]).start;if(i===t)return r;i<t?n=1+a:o=a-1}if(0<n)return t>(r=e[n-1]).end?0:r}function Lt(e,t){this.font=e,this.tableName=t}function Rt(e){Lt.call(this,e,"gpos")}function Dt(e){Lt.call(this,e,"gsub")}function kt(e,t){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Ft(e,t,r){for(var n=e.subtables,o=0;o<n.length;o++){var a=n[o];if(a.substFormat===t)return a}if(r)return n.push(r),r}function Bt(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n<e.length;++n)r[n]=e[n];return t}function Ut(e,t){if(!e)throw t}function Gt(e,t,r,n,o){var a;return 0<(t&n)?(a=e.parseByte(),0==(t&o)&&(a=-a),r+a):0<(t&o)?r:r+e.parseShort()}function Vt(e,t,r){var n,o,a=new ie.Parser(t,r);if(e.numberOfContours=a.parseShort(),e._xMin=a.parseShort(),e._yMin=a.parseShort(),e._xMax=a.parseShort(),e._yMax=a.parseShort(),0<e.numberOfContours){for(var i=e.endPointIndices=[],s=0;s<e.numberOfContours;s+=1)i.push(a.parseUShort());e.instructionLength=a.parseUShort(),e.instructions=[];for(var l=0;l<e.instructionLength;l+=1)e.instructions.push(a.parseByte());var p=i[i.length-1]+1;n=[];for(var u=0;u<p;u+=1)if(o=a.parseByte(),n.push(o),0<(8&o))for(var c=a.parseByte(),d=0;d<c;d+=1)n.push(o),u+=1;if(A.argument(n.length===p,"Bad flags."),0<i.length){var h,m=[];if(0<p){for(var f=0;f<p;f+=1)o=n[f],(h={}).onCurve=!!(1&o),h.lastPointOfContour=0<=i.indexOf(f),m.push(h);for(var y=0,g=0;g<p;g+=1)o=n[g],(h=m[g]).x=Gt(a,o,y,2,16),y=h.x;for(var v=0,b=0;b<p;b+=1)o=n[b],(h=m[b]).y=Gt(a,o,v,4,32),v=h.y}e.points=m}else e.points=[]}else if(0===e.numberOfContours)e.points=[];else{e.isComposite=!0,e.points=[],e.components=[];for(var x=!0;x;){n=a.parseUShort();var _={glyphIndex:a.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};0<(1&n)?0<(2&n)?(_.dx=a.parseShort(),_.dy=a.parseShort()):_.matchedPoints=[a.parseUShort(),a.parseUShort()]:0<(2&n)?(_.dx=a.parseChar(),_.dy=a.parseChar()):_.matchedPoints=[a.parseByte(),a.parseByte()],0<(8&n)?_.xScale=_.yScale=a.parseF2Dot14():0<(64&n)?(_.xScale=a.parseF2Dot14(),_.yScale=a.parseF2Dot14()):0<(128&n)&&(_.xScale=a.parseF2Dot14(),_.scale01=a.parseF2Dot14(),_.scale10=a.parseF2Dot14(),_.yScale=a.parseF2Dot14()),e.components.push(_),x=!!(32&n)}if(256&n){e.instructionLength=a.parseUShort(),e.instructions=[];for(var w=0;w<e.instructionLength;w+=1)e.instructions.push(a.parseByte())}}}function jt(e,t){for(var r=[],n=0;n<e.length;n+=1){var o=e[n],a={x:t.xScale*o.x+t.scale01*o.y+t.dx,y:t.scale10*o.x+t.yScale*o.y+t.dy,onCurve:o.onCurve,lastPointOfContour:o.lastPointOfContour};r.push(a)}return r}function zt(e){var t=new E;if(!e)return t;for(var r=function(e){for(var t=[],r=[],n=0;n<e.length;n+=1){var o=e[n];r.push(o),o.lastPointOfContour&&(t.push(r),r=[])}return A.argument(0===r.length,"There are still points left in the current contour."),t}(e),n=0;n<r.length;++n){var o=r[n],a=null,i=o[o.length-1],s=o[0];if(i.onCurve)t.moveTo(i.x,i.y);else if(s.onCurve)t.moveTo(s.x,s.y);else{var l={x:.5*(i.x+s.x),y:.5*(i.y+s.y)};t.moveTo(l.x,l.y)}for(var p=0;p<o.length;++p)if(a=i,i=s,s=o[(p+1)%o.length],i.onCurve)t.lineTo(i.x,i.y);else{var u=s;a.onCurve||(i.x,a.x,i.y,a.y),s.onCurve||(u={x:.5*(i.x+s.x),y:.5*(i.y+s.y)}),t.quadraticCurveTo(i.x,i.y,u.x,u.y)}t.closePath()}return t}function Ht(e,t){if(t.isComposite)for(var r=0;r<t.components.length;r+=1){var n=t.components[r],o=e.get(n.glyphIndex);if(o.getPath(),o.points){var a=void 0;if(void 0===n.matchedPoints)a=jt(o.points,n);else{if(n.matchedPoints[0]>t.points.length-1||n.matchedPoints[1]>o.points.length-1)throw Error("Matched points out of range in "+t.name);var i=t.points[n.matchedPoints[0]],s=o.points[n.matchedPoints[1]],l={xScale:n.xScale,scale01:n.scale01,scale10:n.scale10,yScale:n.yScale,dx:0,dy:0};s=jt([s],l)[0],l.dx=i.x-s.x,l.dy=i.y-s.y,a=jt(o.points,l)}t.points=t.points.concat(a)}}return zt(t.points)}(Rt.prototype=Lt.prototype={searchTag:At,binSearch:It,getTable:function(e){var t=this.font.tables[this.tableName];return!t&&e&&(t=this.font.tables[this.tableName]=this.createDefaultTable()),t},getScriptNames:function(){var e=this.getTable();return e?e.scripts.map((function(e){return e.tag})):[]},getDefaultScriptName:function(){var e=this.getTable();if(e){for(var t=!1,r=0;r<e.scripts.length;r++){var n=e.scripts[r].tag;if("DFLT"===n)return n;"latn"===n&&(t=!0)}return t?"latn":void 0}},getScriptTable:function(e,t){var r=this.getTable(t);if(r){e=e||"DFLT";var n=r.scripts,o=At(r.scripts,e);if(0<=o)return n[o].script;if(t){var a={tag:e,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return n.splice(-1-o,0,a),a.script}}},getLangSysTable:function(e,t,r){var n=this.getScriptTable(e,r);if(n){if(!t||"dflt"===t||"DFLT"===t)return n.defaultLangSys;var o=At(n.langSysRecords,t);if(0<=o)return n.langSysRecords[o].langSys;if(r){var a={tag:t,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return n.langSysRecords.splice(-1-o,0,a),a.langSys}}},getFeatureTable:function(e,t,r,n){var o=this.getLangSysTable(e,t,n);if(o){for(var a,i=o.featureIndexes,s=this.font.tables[this.tableName].features,l=0;l<i.length;l++)if((a=s[i[l]]).tag===r)return a.feature;if(n){var p=s.length;return A.assert(0===p||r>=s[p-1].tag,"Features must be added in alphabetical order."),a={tag:r,feature:{params:0,lookupListIndexes:[]}},s.push(a),i.push(p),a.feature}}},getLookupTables:function(e,t,r,n,o){var a=this.getFeatureTable(e,t,r,o),i=[];if(a){for(var s,l=a.lookupListIndexes,p=this.font.tables[this.tableName].lookups,u=0;u<l.length;u++)(s=p[l[u]]).lookupType===n&&i.push(s);if(0===i.length&&o){s={lookupType:n,lookupFlag:0,subtables:[],markFilteringSet:void 0};var c=p.length;return p.push(s),l.push(c),[s]}}return i},getGlyphClass:function(e,t){switch(e.format){case 1:return e.startGlyph<=t&&t<e.startGlyph+e.classes.length?e.classes[t-e.startGlyph]:0;case 2:var r=Ot(e.ranges,t);return r?r.classId:0}},getCoverageIndex:function(e,t){switch(e.format){case 1:var r=It(e.glyphs,t);return 0<=r?r:-1;case 2:var n=Ot(e.ranges,t);return n?n.index+t-n.start:-1}},expandCoverage:function(e){if(1===e.format)return e.glyphs;for(var t=[],r=e.ranges,n=0;n<r.length;n++)for(var o=r[n],a=o.start,i=o.end,s=a;s<=i;s++)t.push(s);return t}}).init=function(){var e=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(e)},Rt.prototype.getKerningValue=function(e,t,r){for(var n=0;n<e.length;n++)for(var o=e[n].subtables,a=0;a<o.length;a++){var i=o[a],s=this.getCoverageIndex(i.coverage,t);if(!(s<0))switch(i.posFormat){case 1:for(var l=i.pairSets[s],p=0;p<l.length;p++){var u=l[p];if(u.secondGlyph===r)return u.value1&&u.value1.xAdvance||0}break;case 2:var c=this.getGlyphClass(i.classDef1,t),d=this.getGlyphClass(i.classDef2,r),h=i.classRecords[c][d];return h.value1&&h.value1.xAdvance||0}}return 0},Rt.prototype.getKerningTables=function(e,t){if(this.font.tables.gpos)return this.getLookupTables(e,t,"kern",2)},(Dt.prototype=Lt.prototype).createDefaultTable=function(){return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},Dt.prototype.getSingle=function(e,t,r){for(var n=[],o=this.getLookupTables(t,r,e,1),a=0;a<o.length;a++)for(var i=o[a].subtables,s=0;s<i.length;s++){var l=i[s],p=this.expandCoverage(l.coverage),u=void 0;if(1===l.substFormat){var c=l.deltaGlyphId;for(u=0;u<p.length;u++){var d=p[u];n.push({sub:d,by:d+c})}}else{var h=l.substitute;for(u=0;u<p.length;u++)n.push({sub:p[u],by:h[u]})}}return n},Dt.prototype.getAlternates=function(e,t,r){for(var n=[],o=this.getLookupTables(t,r,e,3),a=0;a<o.length;a++)for(var i=o[a].subtables,s=0;s<i.length;s++)for(var l=i[s],p=this.expandCoverage(l.coverage),u=l.alternateSets,c=0;c<p.length;c++)n.push({sub:p[c],by:u[c]});return n},Dt.prototype.getLigatures=function(e,t,r){for(var n=[],o=this.getLookupTables(t,r,e,4),a=0;a<o.length;a++)for(var i=o[a].subtables,s=0;s<i.length;s++)for(var l=i[s],p=this.expandCoverage(l.coverage),u=l.ligatureSets,c=0;c<p.length;c++)for(var d=p[c],h=u[c],m=0;m<h.length;m++){var f=h[m];n.push({sub:[d].concat(f.components),by:f.ligGlyph})}return n},Dt.prototype.addSingle=function(e,t,r,n){var o=Ft(this.getLookupTables(r,n,e,1,!0)[0],2,{substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});A.assert(1===o.coverage.format,"Ligature: unable to modify coverage table format "+o.coverage.format);var a=t.sub,i=this.binSearch(o.coverage.glyphs,a);i<0&&(i=-1-i,o.coverage.glyphs.splice(i,0,a),o.substitute.splice(i,0,0)),o.substitute[i]=t.by},Dt.prototype.addAlternate=function(e,t,r,n){var o=Ft(this.getLookupTables(r,n,e,3,!0)[0],1,{substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});A.assert(1===o.coverage.format,"Ligature: unable to modify coverage table format "+o.coverage.format);var a=t.sub,i=this.binSearch(o.coverage.glyphs,a);i<0&&(i=-1-i,o.coverage.glyphs.splice(i,0,a),o.alternateSets.splice(i,0,0)),o.alternateSets[i]=t.by},Dt.prototype.addLigature=function(e,t,r,n){var o=this.getLookupTables(r,n,e,4,!0)[0],a=o.subtables[0];a||(a={substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},o.subtables[0]=a),A.assert(1===a.coverage.format,"Ligature: unable to modify coverage table format "+a.coverage.format);var i=t.sub[0],s=t.sub.slice(1),l={ligGlyph:t.by,components:s},p=this.binSearch(a.coverage.glyphs,i);if(0<=p){for(var u=a.ligatureSets[p],c=0;c<u.length;c++)if(kt(u[c].components,s))return;u.push(l)}else p=-1-p,a.coverage.glyphs.splice(p,0,i),a.ligatureSets.splice(p,0,[l])},Dt.prototype.getFeature=function(e,t,r){if(/ss\d\d/.test(e))return this.getSingle(e,t,r);switch(e){case"aalt":case"salt":return this.getSingle(e,t,r).concat(this.getAlternates(e,t,r));case"dlig":case"liga":case"rlig":return this.getLigatures(e,t,r)}},Dt.prototype.add=function(e,t,r,n){if(/ss\d\d/.test(e))return this.addSingle(e,t,r,n);switch(e){case"aalt":case"salt":return"number"==typeof t.by?this.addSingle(e,t,r,n):this.addAlternate(e,t,r,n);case"dlig":case"liga":case"rlig":return this.addLigature(e,t,r,n)}};var Wt,Xt,qt,Yt,Zt={getPath:zt,parse:function(e,t,r,n){for(var o=new _e.GlyphSet(n),a=0;a<r.length-1;a+=1){var i=r[a];i!==r[a+1]?o.push(a,_e.ttfGlyphLoader(n,a,Vt,e,t+i,Ht)):o.push(a,_e.glyphLoader(n,a))}return o}};function Qt(e){this.font=e,this.getCommands=function(e){return Zt.getPath(e).commands},this._fpgmState=this._prepState=void 0,this._errorState=0}function Kt(e){return e}function Jt(e){return Math.sign(e)*Math.round(Math.abs(e))}function $t(e){return Math.sign(e)*Math.round(Math.abs(2*e))/2}function er(e){return Math.sign(e)*(Math.round(Math.abs(e)+.5)-.5)}function tr(e){return Math.sign(e)*Math.ceil(Math.abs(e))}function rr(e){return Math.sign(e)*Math.floor(Math.abs(e))}function nr(e){var t=this.srPeriod,r=this.srPhase,n=1;return e<0&&(e=-e,n=-1),e+=this.srThreshold-r,e=Math.trunc(e/t)*t,(e+=r)<0?r*n:e*n}var or={x:1,y:0,axis:"x",distance:function(e,t,r,n){return(r?e.xo:e.x)-(n?t.xo:t.x)},interpolate:function(e,t,r,n){var o,a,i,s,l,p,u;if(!n||n===this)return o=e.xo-t.xo,a=e.xo-r.xo,l=t.x-t.xo,p=r.x-r.xo,0===(u=(i=Math.abs(o))+(s=Math.abs(a)))?void(e.x=e.xo+(l+p)/2):void(e.x=e.xo+(l*s+p*i)/u);o=n.distance(e,t,!0,!0),a=n.distance(e,r,!0,!0),l=n.distance(t,t,!1,!0),p=n.distance(r,r,!1,!0),0!==(u=(i=Math.abs(o))+(s=Math.abs(a)))?or.setRelative(e,e,(l*s+p*i)/u,n,!0):or.setRelative(e,e,(l+p)/2,n,!0)},normalSlope:Number.NEGATIVE_INFINITY,setRelative:function(e,t,r,n,o){if(n&&n!==this){var a=o?t.xo:t.x,i=o?t.yo:t.y,s=a+r*n.x,l=i+r*n.y;e.x=s+(e.y-l)/n.normalSlope}else e.x=(o?t.xo:t.x)+r},slope:0,touch:function(e){e.xTouched=!0},touched:function(e){return e.xTouched},untouch:function(e){e.xTouched=!1}},ar={x:0,y:1,axis:"y",distance:function(e,t,r,n){return(r?e.yo:e.y)-(n?t.yo:t.y)},interpolate:function(e,t,r,n){var o,a,i,s,l,p,u;if(!n||n===this)return o=e.yo-t.yo,a=e.yo-r.yo,l=t.y-t.yo,p=r.y-r.yo,0===(u=(i=Math.abs(o))+(s=Math.abs(a)))?void(e.y=e.yo+(l+p)/2):void(e.y=e.yo+(l*s+p*i)/u);o=n.distance(e,t,!0,!0),a=n.distance(e,r,!0,!0),l=n.distance(t,t,!1,!0),p=n.distance(r,r,!1,!0),0!==(u=(i=Math.abs(o))+(s=Math.abs(a)))?ar.setRelative(e,e,(l*s+p*i)/u,n,!0):ar.setRelative(e,e,(l+p)/2,n,!0)},normalSlope:0,setRelative:function(e,t,r,n,o){if(n&&n!==this){var a=o?t.xo:t.x,i=o?t.yo:t.y,s=a+r*n.x,l=i+r*n.y;e.y=l+n.normalSlope*(e.x-s)}else e.y=(o?t.yo:t.y)+r},slope:Number.POSITIVE_INFINITY,touch:function(e){e.yTouched=!0},touched:function(e){return e.yTouched},untouch:function(e){e.yTouched=!1}};function ir(e,t){this.x=e,this.y=t,this.axis=void 0,this.slope=t/e,this.normalSlope=-e/t,Object.freeze(this)}function sr(e,t){var r=Math.sqrt(e*e+t*t);return t/=r,1==(e/=r)&&0===t?or:0===e&&1===t?ar:new ir(e,t)}function lr(e,t,r,n){this.x=this.xo=Math.round(64*e)/64,this.y=this.yo=Math.round(64*t)/64,this.lastPointOfContour=r,this.onCurve=n,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}Object.freeze(or),Object.freeze(ar),ir.prototype.distance=function(e,t,r,n){return this.x*or.distance(e,t,r,n)+this.y*ar.distance(e,t,r,n)},ir.prototype.interpolate=function(e,t,r,n){var o,a,i,s,l,p,u;i=n.distance(e,t,!0,!0),s=n.distance(e,r,!0,!0),o=n.distance(t,t,!1,!0),a=n.distance(r,r,!1,!0),0!==(u=(l=Math.abs(i))+(p=Math.abs(s)))?this.setRelative(e,e,(o*p+a*l)/u,n,!0):this.setRelative(e,e,(o+a)/2,n,!0)},ir.prototype.setRelative=function(e,t,r,n,o){n=n||this;var a=o?t.xo:t.x,i=o?t.yo:t.y,s=a+r*n.x,l=i+r*n.y,p=n.normalSlope,u=this.slope,c=e.x,d=e.y;e.x=(u*c-p*s+l-d)/(u-p),e.y=u*(e.x-c)+d},ir.prototype.touch=function(e){e.xTouched=!0,e.yTouched=!0},lr.prototype.nextTouched=function(e){for(var t=this.nextPointOnContour;!e.touched(t)&&t!==this;)t=t.nextPointOnContour;return t},lr.prototype.prevTouched=function(e){for(var t=this.prevPointOnContour;!e.touched(t)&&t!==this;)t=t.prevPointOnContour;return t};var pr=Object.freeze(new lr(0,0)),ur={cvCutIn:17/16,deltaBase:9,deltaShift:.125,loop:1,minDis:1,autoFlip:!0};function cr(e,t){switch(this.env=e,this.stack=[],this.prog=t,e){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;case"prep":this.fv=this.pv=this.dpv=or,this.round=Jt}}function dr(e){for(var t=e.tZone=new Array(e.gZone.length),r=0;r<t.length;r++)t[r]=new lr(0,0)}function hr(e,t){var r,n=e.prog,o=e.ip,a=1;do{if(88===(r=n[++o]))a++;else if(89===r)a--;else if(64===r)o+=n[o+1]+1;else if(65===r)o+=2*n[o+1]+1;else if(176<=r&&r<=183)o+=r-176+1;else if(184<=r&&r<=191)o+=2*(r-184+1);else if(t&&1===a&&27===r)break}while(0<a);e.ip=o}function mr(e,r){t.DEBUG&&console.log(r.step,"SVTCA["+e.axis+"]"),r.fv=r.pv=r.dpv=e}function fr(e,r){t.DEBUG&&console.log(r.step,"SPVTCA["+e.axis+"]"),r.pv=r.dpv=e}function yr(e,r){t.DEBUG&&console.log(r.step,"SFVTCA["+e.axis+"]"),r.fv=e}function gr(e,r){var n,o,a=r.stack,i=a.pop(),s=a.pop(),l=r.z2[i],p=r.z1[s];t.DEBUG&&console.log("SPVTL["+e+"]",i,s),o=e?(n=l.y-p.y,p.x-l.x):(n=p.x-l.x,p.y-l.y),r.pv=r.dpv=sr(n,o)}function vr(e,r){var n,o,a=r.stack,i=a.pop(),s=a.pop(),l=r.z2[i],p=r.z1[s];t.DEBUG&&console.log("SFVTL["+e+"]",i,s),o=e?(n=l.y-p.y,p.x-l.x):(n=p.x-l.x,p.y-l.y),r.fv=sr(n,o)}function br(e){t.DEBUG&&console.log(e.step,"POP[]"),e.stack.pop()}function xr(e,r){var n=r.stack.pop(),o=r.z0[n],a=r.fv,i=r.pv;t.DEBUG&&console.log(r.step,"MDAP["+e+"]",n);var s=i.distance(o,pr);e&&(s=r.round(s)),a.setRelative(o,pr,s,i),a.touch(o),r.rp0=r.rp1=n}function _r(e,r){var n,o,a,i=r.z2,s=i.length-2;t.DEBUG&&console.log(r.step,"IUP["+e.axis+"]");for(var l=0;l<s;l++)n=i[l],e.touched(n)||(o=n.prevTouched(e))!==n&&(o===(a=n.nextTouched(e))&&e.setRelative(n,n,e.distance(o,o,!1,!0),e,!0),e.interpolate(n,o,a,e))}function wr(e,r){for(var n=r.stack,o=e?r.rp1:r.rp2,a=(e?r.z0:r.z1)[o],i=r.fv,s=r.pv,l=r.loop,p=r.z2;l--;){var u=n.pop(),c=p[u],d=s.distance(a,a,!1,!0);i.setRelative(c,c,d,s),i.touch(c),t.DEBUG&&console.log(r.step,(1<r.loop?"loop "+(r.loop-l)+": ":"")+"SHP["+(e?"rp1":"rp2")+"]",u)}r.loop=1}function Sr(e,r){var n=r.stack,o=e?r.rp1:r.rp2,a=(e?r.z0:r.z1)[o],i=r.fv,s=r.pv,l=n.pop(),p=r.z2[r.contours[l]],u=p;t.DEBUG&&console.log(r.step,"SHC["+e+"]",l);for(var c=s.distance(a,a,!1,!0);u!==a&&i.setRelative(u,u,c,s),(u=u.nextPointOnContour)!==p;);}function Mr(e,r){var n,o,a=r.stack,i=e?r.rp1:r.rp2,s=(e?r.z0:r.z1)[i],l=r.fv,p=r.pv,u=a.pop();switch(t.DEBUG&&console.log(r.step,"SHZ["+e+"]",u),u){case 0:n=r.tZone;break;case 1:n=r.gZone;break;default:throw new Error("Invalid zone")}for(var c=p.distance(s,s,!1,!0),d=n.length-2,h=0;h<d;h++)o=n[h],l.setRelative(o,o,c,p)}function Cr(e,r){var n=r.stack,o=n.pop()/64,a=n.pop(),i=r.z1[a],s=r.z0[r.rp0],l=r.fv,p=r.pv;l.setRelative(i,s,o,p),l.touch(i),t.DEBUG&&console.log(r.step,"MSIRP["+e+"]",o,a),r.rp1=r.rp0,r.rp2=a,e&&(r.rp0=a)}function Tr(e,r){var n=r.stack,o=n.pop(),a=n.pop(),i=r.z0[a],s=r.fv,l=r.pv,p=r.cvt[o];t.DEBUG&&console.log(r.step,"MIAP["+e+"]",o,"(",p,")",a);var u=l.distance(i,pr);e&&(Math.abs(u-p)<r.cvCutIn&&(u=p),u=r.round(u)),s.setRelative(i,pr,u,l),0===r.zp0&&(i.xo=i.x,i.yo=i.y),s.touch(i),r.rp0=r.rp1=a}function Er(e,r){var n=r.stack,o=n.pop(),a=r.z2[o];t.DEBUG&&console.log(r.step,"GC["+e+"]",o),n.push(64*r.dpv.distance(a,pr,e,!1))}function Nr(e,r){var n=r.stack,o=n.pop(),a=n.pop(),i=r.z1[o],s=r.z0[a],l=r.dpv.distance(s,i,e,e);t.DEBUG&&console.log(r.step,"MD["+e+"]",o,a,"->",l),r.stack.push(Math.round(64*l))}function Pr(e,r){var n=r.stack,o=n.pop(),a=r.fv,i=r.pv,s=r.ppem,l=r.deltaBase+16*(e-1),p=r.deltaShift,u=r.z0;t.DEBUG&&console.log(r.step,"DELTAP["+e+"]",o,n);for(var c=0;c<o;c++){var d=n.pop(),h=n.pop();if(l+((240&h)>>4)===s){var m=(15&h)-8;0<=m&&m++,t.DEBUG&&console.log(r.step,"DELTAPFIX",d,"by",m*p);var f=u[d];a.setRelative(f,f,m*p,i)}}}function Ar(e,r){var n=r.stack,o=n.pop();t.DEBUG&&console.log(r.step,"ROUND[]"),n.push(64*r.round(o/64))}function Ir(e,r){var n=r.stack,o=n.pop(),a=r.ppem,i=r.deltaBase+16*(e-1),s=r.deltaShift;t.DEBUG&&console.log(r.step,"DELTAC["+e+"]",o,n);for(var l=0;l<o;l++){var p=n.pop(),u=n.pop();if(i+((240&u)>>4)===a){var c=(15&u)-8;0<=c&&c++;var d=c*s;t.DEBUG&&console.log(r.step,"DELTACFIX",p,"by",d),r.cvt[p]+=d}}}function Or(e,r){var n,o,a=r.stack,i=a.pop(),s=a.pop(),l=r.z2[i],p=r.z1[s];t.DEBUG&&console.log(r.step,"SDPVTL["+e+"]",i,s),o=e?(n=l.y-p.y,p.x-l.x):(n=p.x-l.x,p.y-l.y),r.dpv=sr(n,o)}function Lr(e,r){var n=r.stack,o=r.prog,a=r.ip;t.DEBUG&&console.log(r.step,"PUSHB["+e+"]");for(var i=0;i<e;i++)n.push(o[++a]);r.ip=a}function Rr(e,r){var n=r.ip,o=r.prog,a=r.stack;t.DEBUG&&console.log(r.ip,"PUSHW["+e+"]");for(var i=0;i<e;i++){var s=o[++n]<<8|o[++n];32768&s&&(s=-(1+(65535^s))),a.push(s)}r.ip=n}function Dr(e,r,n,o,a,i){var s,l,p,u,c=i.stack,d=e&&c.pop(),h=c.pop(),m=i.rp0,f=i.z0[m],y=i.z1[h],g=i.minDis,v=i.fv,b=i.dpv;p=0<=(l=s=b.distance(y,f,!0,!0))?1:-1,l=Math.abs(l),e&&(u=i.cvt[d],o&&Math.abs(l-u)<i.cvCutIn&&(l=u)),n&&l<g&&(l=g),o&&(l=i.round(l)),v.setRelative(y,f,p*l,b),v.touch(y),t.DEBUG&&console.log(i.step,(e?"MIRP[":"MDRP[")+(r?"M":"m")+(n?">":"_")+(o?"R":"_")+(0===a?"Gr":1===a?"Bl":2===a?"Wh":"")+"]",e?d+"("+i.cvt[d]+","+u+")":"",h,"(d =",s,"->",p*l,")"),i.rp1=i.rp0,i.rp2=h,r&&(i.rp0=h)}Qt.prototype.exec=function(e,r){if("number"!=typeof r)throw new Error("Point size is not a number!");if(!(2<this._errorState)){var n=this.font,o=this._prepState;if(!o||o.ppem!==r){var a=this._fpgmState;if(!a){cr.prototype=ur,(a=this._fpgmState=new cr("fpgm",n.tables.fpgm)).funcs=[],a.font=n,t.DEBUG&&(console.log("---EXEC FPGM---"),a.step=-1);try{Xt(a)}catch(e){return console.log("Hinting error in FPGM:"+e),void(this._errorState=3)}}cr.prototype=a,(o=this._prepState=new cr("prep",n.tables.prep)).ppem=r;var i=n.tables.cvt;if(i)for(var s=o.cvt=new Array(i.length),l=r/n.unitsPerEm,p=0;p<i.length;p++)s[p]=i[p]*l;else o.cvt=[];t.DEBUG&&(console.log("---EXEC PREP---"),o.step=-1);try{Xt(o)}catch(e){this._errorState<2&&console.log("Hinting error in PREP:"+e),this._errorState=2}}if(!(1<this._errorState))try{return qt(e,o)}catch(e){return this._errorState<1&&(console.log("Hinting error:"+e),console.log("Note: further hinting errors are silenced")),void(this._errorState=1)}}},qt=function(e,r){var n,o,a,i=r.ppem/r.font.unitsPerEm,s=i,l=e.components;if(cr.prototype=r,l){var p=r.font;o=[],n=[];for(var u=0;u<l.length;u++){var c=l[u],d=p.glyphs.get(c.glyphIndex);a=new cr("glyf",d.instructions),t.DEBUG&&(console.log("---EXEC COMP "+u+"---"),a.step=-1),Yt(d,a,i,s);for(var h=Math.round(c.dx*i),m=Math.round(c.dy*s),f=a.gZone,y=a.contours,g=0;g<f.length;g++){var v=f[g];v.xTouched=v.yTouched=!1,v.xo=v.x=v.x+h,v.yo=v.y=v.y+m}var b=o.length;o.push.apply(o,f);for(var x=0;x<y.length;x++)n.push(y[x]+b)}e.instructions&&!a.inhibitGridFit&&((a=new cr("glyf",e.instructions)).gZone=a.z0=a.z1=a.z2=o,a.contours=n,o.push(new lr(0,0),new lr(Math.round(e.advanceWidth*i),0)),t.DEBUG&&(console.log("---EXEC COMPOSITE---"),a.step=-1),Xt(a),o.length-=2)}else a=new cr("glyf",e.instructions),t.DEBUG&&(console.log("---EXEC GLYPH---"),a.step=-1),Yt(e,a,i,s),o=a.gZone;return o},Yt=function(e,r,n,o){for(var a,i,s,l=e.points||[],p=l.length,u=r.gZone=r.z0=r.z1=r.z2=[],c=r.contours=[],d=0;d<p;d++)a=l[d],u[d]=new lr(a.x*n,a.y*o,a.lastPointOfContour,a.onCurve);for(var h=0;h<p;h++)a=u[h],i||(i=a,c.push(h)),a.lastPointOfContour?((a.nextPointOnContour=i).prevPointOnContour=a,i=void 0):(s=u[h+1],(a.nextPointOnContour=s).prevPointOnContour=a);if(!r.inhibitGridFit){if(t.DEBUG){console.log("PROCESSING GLYPH",r.stack);for(var m=0;m<p;m++)console.log(m,u[m].x,u[m].y)}if(u.push(new lr(0,0),new lr(Math.round(e.advanceWidth*n),0)),Xt(r),u.length-=2,t.DEBUG){console.log("FINISHED GLYPH",r.stack);for(var f=0;f<p;f++)console.log(f,u[f].x,u[f].y)}}},Xt=function(e){var r=e.prog;if(r){var n,o=r.length;for(e.ip=0;e.ip<o;e.ip++){if(t.DEBUG&&e.step++,!(n=Wt[r[e.ip]]))throw new Error("unknown instruction: 0x"+Number(r[e.ip]).toString(16));n(e)}}},Wt=[mr.bind(void 0,ar),mr.bind(void 0,or),fr.bind(void 0,ar),fr.bind(void 0,or),yr.bind(void 0,ar),yr.bind(void 0,or),gr.bind(void 0,0),gr.bind(void 0,1),vr.bind(void 0,0),vr.bind(void 0,1),function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"SPVFS[]",n,o),e.pv=e.dpv=sr(o,n)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"SPVFS[]",n,o),e.fv=sr(o,n)},function(e){var r=e.stack,n=e.pv;t.DEBUG&&console.log(e.step,"GPV[]"),r.push(16384*n.x),r.push(16384*n.y)},function(e){var r=e.stack,n=e.fv;t.DEBUG&&console.log(e.step,"GFV[]"),r.push(16384*n.x),r.push(16384*n.y)},function(e){e.fv=e.pv,t.DEBUG&&console.log(e.step,"SFVTPV[]")},function(e){var r=e.stack,n=r.pop(),o=r.pop(),a=r.pop(),i=r.pop(),s=r.pop(),l=e.z0,p=e.z1,u=l[n],c=l[o],d=p[a],h=p[i],m=e.z2[s];t.DEBUG&&console.log("ISECT[], ",n,o,a,i,s);var f=u.x,y=u.y,g=c.x,v=c.y,b=d.x,x=d.y,_=h.x,w=h.y,S=(f-g)*(x-w)-(y-v)*(b-_),M=f*v-y*g,C=b*w-x*_;m.x=(M*(b-_)-C*(f-g))/S,m.y=(M*(x-w)-C*(y-v))/S},function(e){e.rp0=e.stack.pop(),t.DEBUG&&console.log(e.step,"SRP0[]",e.rp0)},function(e){e.rp1=e.stack.pop(),t.DEBUG&&console.log(e.step,"SRP1[]",e.rp1)},function(e){e.rp2=e.stack.pop(),t.DEBUG&&console.log(e.step,"SRP2[]",e.rp2)},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZP0[]",r),e.zp0=r){case 0:e.tZone||dr(e),e.z0=e.tZone;break;case 1:e.z0=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZP1[]",r),e.zp1=r){case 0:e.tZone||dr(e),e.z1=e.tZone;break;case 1:e.z1=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZP2[]",r),e.zp2=r){case 0:e.tZone||dr(e),e.z2=e.tZone;break;case 1:e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZPS[]",r),e.zp0=e.zp1=e.zp2=r,r){case 0:e.tZone||dr(e),e.z0=e.z1=e.z2=e.tZone;break;case 1:e.z0=e.z1=e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){e.loop=e.stack.pop(),t.DEBUG&&console.log(e.step,"SLOOP[]",e.loop)},function(e){t.DEBUG&&console.log(e.step,"RTG[]"),e.round=Jt},function(e){t.DEBUG&&console.log(e.step,"RTHG[]"),e.round=er},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SMD[]",r),e.minDis=r/64},function(e){t.DEBUG&&console.log(e.step,"ELSE[]"),hr(e,!1)},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"JMPR[]",r),e.ip+=r-1},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SCVTCI[]",r),e.cvCutIn=r/64},void 0,void 0,function(e){var r=e.stack;t.DEBUG&&console.log(e.step,"DUP[]"),r.push(r[r.length-1])},br,function(e){t.DEBUG&&console.log(e.step,"CLEAR[]"),e.stack.length=0},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"SWAP[]"),r.push(n),r.push(o)},function(e){var r=e.stack;t.DEBUG&&console.log(e.step,"DEPTH[]"),r.push(r.length)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"CINDEX[]",n),r.push(r[r.length-n])},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"MINDEX[]",n),r.push(r.splice(r.length-n,1)[0])},void 0,void 0,void 0,function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"LOOPCALL[]",n,o);var a=e.ip,i=e.prog;e.prog=e.funcs[n];for(var s=0;s<o;s++)Xt(e),t.DEBUG&&console.log(++e.step,s+1<o?"next loopcall":"done loopcall",s);e.ip=a,e.prog=i},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"CALL[]",r);var n=e.ip,o=e.prog;e.prog=e.funcs[r],Xt(e),e.ip=n,e.prog=o,t.DEBUG&&console.log(++e.step,"returning from",r)},function(e){if("fpgm"!==e.env)throw new Error("FDEF not allowed here");var r=e.stack,n=e.prog,o=e.ip,a=r.pop(),i=o;for(t.DEBUG&&console.log(e.step,"FDEF[]",a);45!==n[++o];);e.ip=o,e.funcs[a]=n.slice(i+1,o)},void 0,xr.bind(void 0,0),xr.bind(void 0,1),_r.bind(void 0,ar),_r.bind(void 0,or),wr.bind(void 0,0),wr.bind(void 0,1),Sr.bind(void 0,0),Sr.bind(void 0,1),Mr.bind(void 0,0),Mr.bind(void 0,1),function(e){for(var r=e.stack,n=e.loop,o=e.fv,a=r.pop()/64,i=e.z2;n--;){var s=r.pop(),l=i[s];t.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-n)+": ":"")+"SHPIX[]",s,a),o.setRelative(l,l,a),o.touch(l)}e.loop=1},function(e){for(var r=e.stack,n=e.rp1,o=e.rp2,a=e.loop,i=e.z0[n],s=e.z1[o],l=e.fv,p=e.dpv,u=e.z2;a--;){var c=r.pop(),d=u[c];t.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-a)+": ":"")+"IP[]",c,n,"<->",o),l.interpolate(d,i,s,p),l.touch(d)}e.loop=1},Cr.bind(void 0,0),Cr.bind(void 0,1),function(e){for(var r=e.stack,n=e.rp0,o=e.z0[n],a=e.loop,i=e.fv,s=e.pv,l=e.z1;a--;){var p=r.pop(),u=l[p];t.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-a)+": ":"")+"ALIGNRP[]",p),i.setRelative(u,o,0,s),i.touch(u)}e.loop=1},function(e){t.DEBUG&&console.log(e.step,"RTDG[]"),e.round=$t},Tr.bind(void 0,0),Tr.bind(void 0,1),function(e){var r=e.prog,n=e.ip,o=e.stack,a=r[++n];t.DEBUG&&console.log(e.step,"NPUSHB[]",a);for(var i=0;i<a;i++)o.push(r[++n]);e.ip=n},function(e){var r=e.ip,n=e.prog,o=e.stack,a=n[++r];t.DEBUG&&console.log(e.step,"NPUSHW[]",a);for(var i=0;i<a;i++){var s=n[++r]<<8|n[++r];32768&s&&(s=-(1+(65535^s))),o.push(s)}e.ip=r},function(e){var r=e.stack,n=e.store;n=n||(e.store=[]);var o=r.pop(),a=r.pop();t.DEBUG&&console.log(e.step,"WS",o,a),n[a]=o},function(e){var r=e.stack,n=e.store,o=r.pop();t.DEBUG&&console.log(e.step,"RS",o);var a=n&&n[o]||0;r.push(a)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"WCVTP",n,o),e.cvt[o]=n/64},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"RCVT",n),r.push(64*e.cvt[n])},Er.bind(void 0,0),Er.bind(void 0,1),void 0,Nr.bind(void 0,0),Nr.bind(void 0,1),function(e){t.DEBUG&&console.log(e.step,"MPPEM[]"),e.stack.push(e.ppem)},void 0,function(e){t.DEBUG&&console.log(e.step,"FLIPON[]"),e.autoFlip=!0},void 0,void 0,function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"LT[]",n,o),r.push(o<n?1:0)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"LTEQ[]",n,o),r.push(o<=n?1:0)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"GT[]",n,o),r.push(n<o?1:0)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"GTEQ[]",n,o),r.push(n<=o?1:0)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"EQ[]",n,o),r.push(n===o?1:0)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"NEQ[]",n,o),r.push(n!==o?1:0)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"ODD[]",n),r.push(Math.trunc(n)%2?1:0)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"EVEN[]",n),r.push(Math.trunc(n)%2?0:1)},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"IF[]",r),r||(hr(e,!0),t.DEBUG&&console.log(e.step,"EIF[]"))},function(e){t.DEBUG&&console.log(e.step,"EIF[]")},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"AND[]",n,o),r.push(n&&o?1:0)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"OR[]",n,o),r.push(n||o?1:0)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"NOT[]",n),r.push(n?0:1)},Pr.bind(void 0,1),function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SDB[]",r),e.deltaBase=r},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SDS[]",r),e.deltaShift=Math.pow(.5,r)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"ADD[]",n,o),r.push(o+n)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"SUB[]",n,o),r.push(o-n)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"DIV[]",n,o),r.push(64*o/n)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"MUL[]",n,o),r.push(o*n/64)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"ABS[]",n),r.push(Math.abs(n))},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"NEG[]",n),r.push(-n)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"FLOOR[]",n),r.push(64*Math.floor(n/64))},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"CEILING[]",n),r.push(64*Math.ceil(n/64))},Ar.bind(void 0,0),Ar.bind(void 0,1),Ar.bind(void 0,2),Ar.bind(void 0,3),void 0,void 0,void 0,void 0,function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"WCVTF[]",n,o),e.cvt[o]=n*e.ppem/e.font.unitsPerEm},Pr.bind(void 0,2),Pr.bind(void 0,3),Ir.bind(void 0,1),Ir.bind(void 0,2),Ir.bind(void 0,3),function(e){var r,n=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SROUND[]",n),e.round=nr,192&n){case 0:r=.5;break;case 64:r=1;break;case 128:r=2;break;default:throw new Error("invalid SROUND value")}switch(e.srPeriod=r,48&n){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*r;break;case 32:e.srPhase=.5*r;break;case 48:e.srPhase=.75*r;break;default:throw new Error("invalid SROUND value")}n&=15,e.srThreshold=0===n?0:(n/8-.5)*r},function(e){var r,n=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"S45ROUND[]",n),e.round=nr,192&n){case 0:r=Math.sqrt(2)/2;break;case 64:r=Math.sqrt(2);break;case 128:r=2*Math.sqrt(2);break;default:throw new Error("invalid S45ROUND value")}switch(e.srPeriod=r,48&n){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*r;break;case 32:e.srPhase=.5*r;break;case 48:e.srPhase=.75*r;break;default:throw new Error("invalid S45ROUND value")}n&=15,e.srThreshold=0===n?0:(n/8-.5)*r},void 0,void 0,function(e){t.DEBUG&&console.log(e.step,"ROFF[]"),e.round=Kt},void 0,function(e){t.DEBUG&&console.log(e.step,"RUTG[]"),e.round=tr},function(e){t.DEBUG&&console.log(e.step,"RDTG[]"),e.round=rr},br,br,void 0,void 0,void 0,void 0,void 0,function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SCANCTRL[]",r)},Or.bind(void 0,0),Or.bind(void 0,1),function(e){var r=e.stack,n=r.pop(),o=0;t.DEBUG&&console.log(e.step,"GETINFO[]",n),1&n&&(o=35),32&n&&(o|=4096),r.push(o)},void 0,function(e){var r=e.stack,n=r.pop(),o=r.pop(),a=r.pop();t.DEBUG&&console.log(e.step,"ROLL[]"),r.push(o),r.push(n),r.push(a)},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"MAX[]",n,o),r.push(Math.max(o,n))},function(e){var r=e.stack,n=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"MIN[]",n,o),r.push(Math.min(o,n))},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SCANTYPE[]",r)},function(e){var r=e.stack.pop(),n=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"INSTCTRL[]",r,n),r){case 1:return void(e.inhibitGridFit=!!n);case 2:return void(e.ignoreCvt=!!n);default:throw new Error("invalid INSTCTRL[] selector")}},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Lr.bind(void 0,1),Lr.bind(void 0,2),Lr.bind(void 0,3),Lr.bind(void 0,4),Lr.bind(void 0,5),Lr.bind(void 0,6),Lr.bind(void 0,7),Lr.bind(void 0,8),Rr.bind(void 0,1),Rr.bind(void 0,2),Rr.bind(void 0,3),Rr.bind(void 0,4),Rr.bind(void 0,5),Rr.bind(void 0,6),Rr.bind(void 0,7),Rr.bind(void 0,8),Dr.bind(void 0,0,0,0,0,0),Dr.bind(void 0,0,0,0,0,1),Dr.bind(void 0,0,0,0,0,2),Dr.bind(void 0,0,0,0,0,3),Dr.bind(void 0,0,0,0,1,0),Dr.bind(void 0,0,0,0,1,1),Dr.bind(void 0,0,0,0,1,2),Dr.bind(void 0,0,0,0,1,3),Dr.bind(void 0,0,0,1,0,0),Dr.bind(void 0,0,0,1,0,1),Dr.bind(void 0,0,0,1,0,2),Dr.bind(void 0,0,0,1,0,3),Dr.bind(void 0,0,0,1,1,0),Dr.bind(void 0,0,0,1,1,1),Dr.bind(void 0,0,0,1,1,2),Dr.bind(void 0,0,0,1,1,3),Dr.bind(void 0,0,1,0,0,0),Dr.bind(void 0,0,1,0,0,1),Dr.bind(void 0,0,1,0,0,2),Dr.bind(void 0,0,1,0,0,3),Dr.bind(void 0,0,1,0,1,0),Dr.bind(void 0,0,1,0,1,1),Dr.bind(void 0,0,1,0,1,2),Dr.bind(void 0,0,1,0,1,3),Dr.bind(void 0,0,1,1,0,0),Dr.bind(void 0,0,1,1,0,1),Dr.bind(void 0,0,1,1,0,2),Dr.bind(void 0,0,1,1,0,3),Dr.bind(void 0,0,1,1,1,0),Dr.bind(void 0,0,1,1,1,1),Dr.bind(void 0,0,1,1,1,2),Dr.bind(void 0,0,1,1,1,3),Dr.bind(void 0,1,0,0,0,0),Dr.bind(void 0,1,0,0,0,1),Dr.bind(void 0,1,0,0,0,2),Dr.bind(void 0,1,0,0,0,3),Dr.bind(void 0,1,0,0,1,0),Dr.bind(void 0,1,0,0,1,1),Dr.bind(void 0,1,0,0,1,2),Dr.bind(void 0,1,0,0,1,3),Dr.bind(void 0,1,0,1,0,0),Dr.bind(void 0,1,0,1,0,1),Dr.bind(void 0,1,0,1,0,2),Dr.bind(void 0,1,0,1,0,3),Dr.bind(void 0,1,0,1,1,0),Dr.bind(void 0,1,0,1,1,1),Dr.bind(void 0,1,0,1,1,2),Dr.bind(void 0,1,0,1,1,3),Dr.bind(void 0,1,1,0,0,0),Dr.bind(void 0,1,1,0,0,1),Dr.bind(void 0,1,1,0,0,2),Dr.bind(void 0,1,1,0,0,3),Dr.bind(void 0,1,1,0,1,0),Dr.bind(void 0,1,1,0,1,1),Dr.bind(void 0,1,1,0,1,2),Dr.bind(void 0,1,1,0,1,3),Dr.bind(void 0,1,1,1,0,0),Dr.bind(void 0,1,1,1,0,1),Dr.bind(void 0,1,1,1,0,2),Dr.bind(void 0,1,1,1,0,3),Dr.bind(void 0,1,1,1,1,0),Dr.bind(void 0,1,1,1,1,1),Dr.bind(void 0,1,1,1,1,2),Dr.bind(void 0,1,1,1,1,3)];var kr=Array.from||function(e){return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g)||[]};function Fr(e){(e=e||{}).empty||(Ut(e.familyName,"When creating a new Font object, familyName is required."),Ut(e.styleName,"When creating a new Font object, styleName is required."),Ut(e.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),Ut(e.ascender,"When creating a new Font object, ascender is required."),Ut(e.descender,"When creating a new Font object, descender is required."),Ut(e.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:e.familyName||" "},fontSubfamily:{en:e.styleName||" "},fullName:{en:e.fullName||e.familyName+" "+e.styleName},postScriptName:{en:e.postScriptName||(e.familyName+e.styleName).replace(/\s/g,"")},designer:{en:e.designer||" "},designerURL:{en:e.designerURL||" "},manufacturer:{en:e.manufacturer||" "},manufacturerURL:{en:e.manufacturerURL||" "},license:{en:e.license||" "},licenseURL:{en:e.licenseURL||" "},version:{en:e.version||"Version 0.1"},description:{en:e.description||" "},copyright:{en:e.copyright||" "},trademark:{en:e.trademark||" "}},this.unitsPerEm=e.unitsPerEm||1e3,this.ascender=e.ascender,this.descender=e.descender,this.createdTimestamp=e.createdTimestamp,this.tables={os2:{usWeightClass:e.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:e.widthClass||this.usWidthClasses.MEDIUM,fsSelection:e.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new _e.GlyphSet(this,e.glyphs||[]),this.encoding=new he(this),this.position=new Rt(this),this.substitution=new Dt(this),this.tables=this.tables||{},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new Qt(this):void 0}})}function Br(e,t,r,n){var o={},a=new ie.Parser(e,t);o.name=n[a.parseUShort()]||{},a.skip("uShort",1),o.coordinates={};for(var i=0;i<r.length;++i)o.coordinates[r[i].tag]=a.parseFixed();return o}Fr.prototype.hasChar=function(e){return null!==this.encoding.charToGlyphIndex(e)},Fr.prototype.charToGlyphIndex=function(e){return this.encoding.charToGlyphIndex(e)},Fr.prototype.charToGlyph=function(e){var t=this.charToGlyphIndex(e),r=this.glyphs.get(t);return r||this.glyphs.get(0)},Fr.prototype.stringToGlyphs=function(e,t){t=t||this.defaultRenderOptions;for(var r=kr(e),n=[],o=0;o<r.length;o+=1){var a=r[o];n.push(this.charToGlyphIndex(a))}var i=n.length;if(t.features){var s=t.script||this.substitution.getDefaultScriptName(),l=[];t.features.liga&&(l=l.concat(this.substitution.getFeature("liga",s,t.language))),t.features.rlig&&(l=l.concat(this.substitution.getFeature("rlig",s,t.language)));for(var p=0;p<i;p+=1)for(var u=0;u<l.length;u++){for(var c=l[u],d=c.sub,h=d.length,m=0;m<h&&d[m]===n[p+m];)m++;m===h&&(n.splice(p,h,c.by),i=i-h+1)}}for(var f=new Array(i),y=this.glyphs.get(0),g=0;g<i;g+=1)f[g]=this.glyphs.get(n[g])||y;return f},Fr.prototype.nameToGlyphIndex=function(e){return this.glyphNames.nameToGlyphIndex(e)},Fr.prototype.nameToGlyph=function(e){var t=this.nameToGlyphIndex(e),r=this.glyphs.get(t);return r||this.glyphs.get(0)},Fr.prototype.glyphIndexToName=function(e){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(e):""},Fr.prototype.getKerningValue=function(e,t){e=e.index||e,t=t.index||t;var r=this.position.defaultKerningTables;return r?this.position.getKerningValue(r,e,t):this.kerningPairs[e+","+t]||0},Fr.prototype.defaultRenderOptions={kerning:!0,features:{liga:!0,rlig:!0}},Fr.prototype.forEachGlyph=function(e,t,r,n,o,a){t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:72,o=o||this.defaultRenderOptions;var i,s=1/this.unitsPerEm*n,l=this.stringToGlyphs(e,o);if(o.kerning){var p=o.script||this.position.getDefaultScriptName();i=this.position.getKerningTables(p,o.language)}for(var u=0;u<l.length;u+=1){var c=l[u];a.call(this,c,t,r,n,o),c.advanceWidth&&(t+=c.advanceWidth*s),o.kerning&&u<l.length-1&&(t+=(i?this.position.getKerningValue(i,c.index,l[u+1].index):this.getKerningValue(c,l[u+1]))*s),o.letterSpacing?t+=o.letterSpacing*n:o.tracking&&(t+=o.tracking/1e3*n)}return t},Fr.prototype.getPath=function(e,t,r,n,o){var a=new E;return this.forEachGlyph(e,t,r,n,o,(function(e,t,r,n){var i=e.getPath(t,r,n,o,this);a.extend(i)})),a},Fr.prototype.getPaths=function(e,t,r,n,o){var a=[];return this.forEachGlyph(e,t,r,n,o,(function(e,t,r,n){var i=e.getPath(t,r,n,o,this);a.push(i)})),a},Fr.prototype.getAdvanceWidth=function(e,t,r){return this.forEachGlyph(e,0,0,t,r,(function(){}))},Fr.prototype.draw=function(e,t,r,n,o,a){this.getPath(t,r,n,o,a).draw(e)},Fr.prototype.drawPoints=function(e,t,r,n,o,a){this.forEachGlyph(t,r,n,o,a,(function(t,r,n,o){t.drawPoints(e,r,n,o)}))},Fr.prototype.drawMetrics=function(e,t,r,n,o,a){this.forEachGlyph(t,r,n,o,a,(function(t,r,n,o){t.drawMetrics(e,r,n,o)}))},Fr.prototype.getEnglishName=function(e){var t=this.names[e];if(t)return t.en},Fr.prototype.validate=function(){var e=this;function t(t){var r=e.getEnglishName(t);r&&r.trim().length}t("fontFamily"),t("weightName"),t("manufacturer"),t("copyright"),t("version"),this.unitsPerEm},Fr.prototype.toTables=function(){return Pt(this)},Fr.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},Fr.prototype.toArrayBuffer=function(){for(var e=this.toTables().encode(),t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n<e.length;n++)r[n]=e[n];return t},Fr.prototype.download=function(t){var r=this.getEnglishName("fontFamily"),o=this.getEnglishName("fontSubfamily");t=t||r.replace(/\s/g,"")+"-"+o+".otf";var a=this.toArrayBuffer();if("undefined"!=typeof window)window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.TEMPORARY,a.byteLength,(function(e){e.root.getFile(t,{create:!0},(function(e){e.createWriter((function(t){var r=new DataView(a),n=new Blob([r],{type:"font/opentype"});t.write(n),t.addEventListener("writeend",(function(){location.href=e.toURL()}),!1)}))}))}),(function(e){throw new Error(e.name+": "+e.message)}));else{var i=e("fs"),s=function(e){for(var t=new n(e.byteLength),r=new Uint8Array(e),o=0;o<t.length;++o)t[o]=r[o];return t}(a);i.writeFileSync(t,s)}},Fr.prototype.fsSelectionValues={ITALIC:1,UNDERSCORE:2,NEGATIVE:4,OUTLINED:8,STRIKEOUT:16,BOLD:32,REGULAR:64,USER_TYPO_METRICS:128,WWS:256,OBLIQUE:512},Fr.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},Fr.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var Ur=function(e,t,r){var n=new ie.Parser(e,t),o=n.parseULong();A.argument(65536===o,"Unsupported fvar table version.");var a=n.parseOffset16();n.skip("uShort",1);for(var i,s,l,p,u,c=n.parseUShort(),d=n.parseUShort(),h=n.parseUShort(),m=n.parseUShort(),f=[],y=0;y<c;y++)f.push((i=e,s=t+a+y*d,l=r,u=p=void 0,p={},u=new ie.Parser(i,s),p.tag=u.parseTag(),p.minValue=u.parseFixed(),p.defaultValue=u.parseFixed(),p.maxValue=u.parseFixed(),u.skip("uShort",1),p.name=l[u.parseUShort()]||{},p));for(var g=[],v=t+a+c*d,b=0;b<h;b++)g.push(Br(e,v+b*m,f,r));return{axes:f,instances:g}},Gr=new Array(10);Gr[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{posFormat:1,coverage:this.parsePointer(oe.coverage),value:this.parseValueRecord()}:2===t?{posFormat:2,coverage:this.parsePointer(oe.coverage),values:this.parseValueRecordList()}:void A.assert(!1,"0x"+e.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},Gr[2]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();A.assert(1===t||2===t,"0x"+e.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var r=this.parsePointer(oe.coverage),n=this.parseUShort(),o=this.parseUShort();if(1===t)return{posFormat:t,coverage:r,valueFormat1:n,valueFormat2:o,pairSets:this.parseList(oe.pointer(oe.list((function(){return{secondGlyph:this.parseUShort(),value1:this.parseValueRecord(n),value2:this.parseValueRecord(o)}}))))};if(2===t){var a=this.parsePointer(oe.classDef),i=this.parsePointer(oe.classDef),s=this.parseUShort(),l=this.parseUShort();return{posFormat:t,coverage:r,valueFormat1:n,valueFormat2:o,classDef1:a,classDef2:i,class1Count:s,class2Count:l,classRecords:this.parseList(s,oe.list(l,(function(){return{value1:this.parseValueRecord(n),value2:this.parseValueRecord(o)}})))}}},Gr[3]=function(){return{error:"GPOS Lookup 3 not supported"}},Gr[4]=function(){return{error:"GPOS Lookup 4 not supported"}},Gr[5]=function(){return{error:"GPOS Lookup 5 not supported"}},Gr[6]=function(){return{error:"GPOS Lookup 6 not supported"}},Gr[7]=function(){return{error:"GPOS Lookup 7 not supported"}},Gr[8]=function(){return{error:"GPOS Lookup 8 not supported"}},Gr[9]=function(){return{error:"GPOS Lookup 9 not supported"}},new Array(10);var Vr=function(e,t){var r=new oe(e,t=t||0),n=r.parseVersion(1);return A.argument(1===n||1.1===n,"Unsupported GPOS table version "+n),1===n?{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Gr)}:{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Gr),variations:r.parseFeatureVariationsList()}},jr=function(e,t){var r=new ie.Parser(e,t),n=r.parseUShort();if(0===n)return function(e){var t={};e.skip("uShort");var r=e.parseUShort();A.argument(0===r,"Unsupported kern sub-table version."),e.skip("uShort",2);var n=e.parseUShort();e.skip("uShort",3);for(var o=0;o<n;o+=1){var a=e.parseUShort(),i=e.parseUShort(),s=e.parseShort();t[a+","+i]=s}return t}(r);if(1===n)return function(e){var t={};e.skip("uShort"),1<e.parseULong()&&console.warn("Only the first kern subtable is supported."),e.skip("uLong");var r=255&e.parseUShort();if(e.skip("uShort"),0==r){var n=e.parseUShort();e.skip("uShort",3);for(var o=0;o<n;o+=1){var a=e.parseUShort(),i=e.parseUShort(),s=e.parseShort();t[a+","+i]=s}}return t}(r);throw new Error("Unsupported kern table version ("+n+").")},zr=function(e,t,r,n){for(var o=new ie.Parser(e,t),a=n?o.parseUShort:o.parseULong,i=[],s=0;s<r+1;s+=1){var l=a.call(o);n&&(l*=2),i.push(l)}return i};function Hr(t,r){e("fs").readFile(t,(function(e,t){if(e)return r(e.message);r(null,Bt(t))}))}function Wr(e,t){var r=new XMLHttpRequest;r.open("get",e,!0),r.responseType="arraybuffer",r.onload=function(){return r.response?t(null,r.response):t("Font could not be loaded: "+r.statusText)},r.onerror=function(){t("Font could not be loaded")},r.send()}function Xr(e,t){for(var r=[],n=12,o=0;o<t;o+=1){var a=ie.getTag(e,n),i=ie.getULong(e,n+4),s=ie.getULong(e,n+8),l=ie.getULong(e,n+12);r.push({tag:a,checksum:i,offset:s,length:l,compression:!1}),n+=16}return r}function qr(e,t){if("WOFF"!==t.compression)return{data:e,offset:t.offset};var r=new Uint8Array(e.buffer,t.offset+2,t.compressedLength-2),n=new Uint8Array(t.length);if(function(e,t){var r,n,o=new i(e,t);do{switch(r=b(o),x(o,2,0)){case 0:n=M(o);break;case 1:n=S(o,s,l);break;case 2:w(o,o.ltree,o.dtree),n=S(o,o.ltree,o.dtree);break;default:n=-3}if(0!==n)throw new Error("Data error")}while(!r);o.destLen<o.dest.length?"function"==typeof o.dest.slice?o.dest.slice(0,o.destLen):o.dest.subarray(0,o.destLen):o.dest}(r,n),n.byteLength!==t.length)throw new Error("Decompression error: "+t.tag+" decompressed length doesn't match recorded length");return{data:new DataView(n.buffer,0),offset:0}}function Yr(e){var t,r,n,o,a,i,s,l,p,u,c,d,h,m,f=new Fr({empty:!0}),y=new DataView(e,0),g=[],v=ie.getTag(y,0);if(v===String.fromCharCode(0,1,0,0)||"true"===v||"typ1"===v)f.outlinesFormat="truetype",g=Xr(y,n=ie.getUShort(y,4));else if("OTTO"===v)f.outlinesFormat="cff",g=Xr(y,n=ie.getUShort(y,4));else{if("wOFF"!==v)throw new Error("Unsupported OpenType signature "+v);var b=ie.getTag(y,4);if(b===String.fromCharCode(0,1,0,0))f.outlinesFormat="truetype";else{if("OTTO"!==b)throw new Error("Unsupported OpenType flavor "+v);f.outlinesFormat="cff"}g=function(e,t){for(var r=[],n=44,o=0;o<t;o+=1){var a,i=ie.getTag(e,n),s=ie.getULong(e,n+4),l=ie.getULong(e,n+8),p=ie.getULong(e,n+12);a=l<p&&"WOFF",r.push({tag:i,offset:s,compression:a,compressedLength:l,length:p}),n+=20}return r}(y,n=ie.getUShort(y,12))}for(var x=0;x<n;x+=1){var _=g[x],w=void 0;switch(_.tag){case"cmap":w=qr(y,_),f.tables.cmap=se(w.data,w.offset),f.encoding=new me(f.tables.cmap);break;case"cvt ":w=qr(y,_),m=new ie.Parser(w.data,w.offset),f.tables.cvt=m.parseShortList(_.length/2);break;case"fvar":a=_;break;case"fpgm":w=qr(y,_),m=new ie.Parser(w.data,w.offset),f.tables.fpgm=m.parseByteList(_.length);break;case"head":w=qr(y,_),f.tables.head=Ve(w.data,w.offset),f.unitsPerEm=f.tables.head.unitsPerEm,t=f.tables.head.indexToLocFormat;break;case"hhea":w=qr(y,_),f.tables.hhea=ze(w.data,w.offset),f.ascender=f.tables.hhea.ascender,f.descender=f.tables.hhea.descender,f.numberOfHMetrics=f.tables.hhea.numberOfHMetrics;break;case"hmtx":p=_;break;case"ltag":w=qr(y,_),r=Ye(w.data,w.offset);break;case"maxp":w=qr(y,_),f.tables.maxp=Ze(w.data,w.offset),f.numGlyphs=f.tables.maxp.numGlyphs;break;case"name":d=_;break;case"OS/2":w=qr(y,_),f.tables.os2=dt(w.data,w.offset);break;case"post":w=qr(y,_),f.tables.post=ft(w.data,w.offset),f.glyphNames=new ye(f.tables.post);break;case"prep":w=qr(y,_),m=new ie.Parser(w.data,w.offset),f.tables.prep=m.parseByteList(_.length);break;case"glyf":i=_;break;case"loca":c=_;break;case"CFF ":o=_;break;case"kern":u=_;break;case"GPOS":s=_;break;case"GSUB":l=_;break;case"meta":h=_}}var S=qr(y,d);if(f.tables.name=pt(S.data,S.offset,r),f.names=f.tables.name,i&&c){var M=0===t,C=qr(y,c),T=zr(C.data,C.offset,f.numGlyphs,M),E=qr(y,i);f.glyphs=Zt.parse(E.data,E.offset,T,f)}else{if(!o)throw new Error("Font doesn't contain TrueType or CFF outlines.");var N=qr(y,o);Ue(N.data,N.offset,f)}var P=qr(y,p);if(We(P.data,P.offset,f.numberOfHMetrics,f.numGlyphs,f.glyphs),function(e){for(var t,r=e.tables.cmap.glyphIndexMap,n=Object.keys(r),o=0;o<n.length;o+=1){var a=n[o],i=r[a];(t=e.glyphs.get(i)).addUnicode(parseInt(a))}for(var s=0;s<e.glyphs.length;s+=1)t=e.glyphs.get(s),e.cffEncoding?e.isCIDFont?t.name="gid"+s:t.name=e.cffEncoding.charset[s]:e.glyphNames.names&&(t.name=e.glyphNames.glyphIndexToName(s))}(f),u){var A=qr(y,u);f.kerningPairs=jr(A.data,A.offset)}else f.kerningPairs={};if(s){var I=qr(y,s);f.tables.gpos=Vr(I.data,I.offset),f.position.init()}if(l){var O=qr(y,l);f.tables.gsub=xt(O.data,O.offset)}if(a){var L=qr(y,a);f.tables.fvar=Ur(L.data,L.offset,f.names)}if(h){var R=qr(y,h);f.tables.meta=wt(R.data,R.offset),f.metas=f.tables.meta}return f}t.Font=Fr,t.Glyph=ve,t.Path=E,t.BoundingBox=T,t._parse=ie,t.parse=Yr,t.load=function(e,t){("undefined"==typeof window?Hr:Wr)(e,(function(e,r){if(e)return t(e);var n;try{n=Yr(r)}catch(e){return t(e,null)}return t(null,n)}))},t.loadSync=function(t){return Yr(Bt(e("fs").readFileSync(t)))},Object.defineProperty(t,"__esModule",{value:!0})}("object"==typeof r&&void 0!==t?r:this.opentype={})}).call(this,e("buffer").Buffer)},{buffer:5,fs:3}],14:[function(e,t,r){(function(e){function t(e,t){for(var r=0,n=e.length-1;0<=n;n--){var o=e[n];"."===o?e.splice(n,1):".."===o?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}if(t)for(;r--;)e.unshift("..");return e}function n(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}r.resolve=function(){for(var r="",o=!1,a=arguments.length-1;-1<=a&&!o;a--){var i=0<=a?arguments[a]:e.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(r=i+"/"+r,o="/"===i.charAt(0))}return(o?"/":"")+(r=t(n(r.split("/"),(function(e){return!!e})),!o).join("/"))||"."},r.normalize=function(e){var a=r.isAbsolute(e),i="/"===o(e,-1);return(e=t(n(e.split("/"),(function(e){return!!e})),!a).join("/"))||a||(e="."),e&&i&&(e+="/"),(a?"/":"")+e},r.isAbsolute=function(e){return"/"===e.charAt(0)},r.join=function(){var e=Array.prototype.slice.call(arguments,0);return r.normalize(n(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},r.relative=function(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;0<=r&&""===e[r];r--);return r<t?[]:e.slice(t,r-t+1)}e=r.resolve(e).substr(1),t=r.resolve(t).substr(1);for(var o=n(e.split("/")),a=n(t.split("/")),i=Math.min(o.length,a.length),s=i,l=0;l<i;l++)if(o[l]!==a[l]){s=l;break}var p=[];for(l=s;l<o.length;l++)p.push("..");return(p=p.concat(a.slice(s))).join("/")},r.sep="/",r.delimiter=":",r.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),r=47===t,n=-1,o=!0,a=e.length-1;1<=a;--a)if(47===(t=e.charCodeAt(a))){if(!o){n=a;break}}else o=!1;return-1===n?r?"/":".":r&&1===n?"/":e.slice(0,n)},r.basename=function(e,t){var r=function(e){"string"!=typeof e&&(e+="");var t,r=0,n=-1,o=!0;for(t=e.length-1;0<=t;--t)if(47===e.charCodeAt(t)){if(!o){r=t+1;break}}else-1===n&&(o=!1,n=t+1);return-1===n?"":e.slice(r,n)}(e);return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},r.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,r=0,n=-1,o=!0,a=0,i=e.length-1;0<=i;--i){var s=e.charCodeAt(i);if(47===s){if(o)continue;r=i+1;break}-1===n&&(o=!1,n=i+1),46===s?-1===t?t=i:1!==a&&(a=1):-1!==t&&(a=-1)}return-1===t||-1===n||0===a||1===a&&t===n-1&&t===r+1?"":e.slice(t,n)};var o="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)}}).call(this,e("_process"))},{_process:15}],15:[function(e,t,r){var n,o,a=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{o="function"==typeof clearTimeout?clearTimeout:s}catch(e){o=s}}();var p,u=[],c=!1,d=-1;function h(){c&&p&&(c=!1,p.length?u=p.concat(u):d=-1,u.length&&m())}function m(){if(!c){var e=l(h);c=!0;for(var t=u.length;t;){for(p=u,u=[];++d<t;)p&&p[d].run();d=-1,t=u.length}p=null,c=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===s||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(t){try{return o.call(null,e)}catch(t){return o.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function y(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new f(e,t)),1!==u.length||c||l(m)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=y,a.addListener=y,a.once=y,a.off=y,a.removeListener=y,a.removeAllListeners=y,a.emit=y,a.prependListener=y,a.prependOnceListener=y,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],16:[function(e,t,r){!function(e){"use strict";if(!e.fetch){var t="URLSearchParams"in e,r="Symbol"in e&&"iterator"in Symbol,n="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),o="FormData"in e,a="ArrayBuffer"in e;if(a)var i=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=function(e){return e&&DataView.prototype.isPrototypeOf(e)},l=ArrayBuffer.isView||function(e){return e&&-1<i.indexOf(Object.prototype.toString.call(e))};m.prototype.append=function(e,t){e=c(e),t=d(t);var r=this.map[e];this.map[e]=r?r+","+t:t},m.prototype.delete=function(e){delete this.map[c(e)]},m.prototype.get=function(e){return e=c(e),this.has(e)?this.map[e]:null},m.prototype.has=function(e){return this.map.hasOwnProperty(c(e))},m.prototype.set=function(e,t){this.map[c(e)]=d(t)},m.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},m.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),h(e)},m.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),h(e)},m.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),h(e)},r&&(m.prototype[Symbol.iterator]=m.prototype.entries);var p=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];x.prototype.clone=function(){return new x(this,{body:this._bodyInit})},b.call(x.prototype),b.call(w.prototype),w.prototype.clone=function(){return new w(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new m(this.headers),url:this.url})},w.error=function(){var e=new w(null,{status:0,statusText:""});return e.type="error",e};var u=[301,302,303,307,308];w.redirect=function(e,t){if(-1===u.indexOf(t))throw new RangeError("Invalid status code");return new w(null,{status:t,headers:{location:e}})},e.Headers=m,e.Request=x,e.Response=w,e.fetch=function(e,t){return new Promise((function(r,o){var a=new x(e,t),i=new XMLHttpRequest;i.onload=function(){var e,t,n={status:i.status,statusText:i.statusText,headers:(e=i.getAllResponseHeaders()||"",t=new m,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};n.url="responseURL"in i?i.responseURL:n.headers.get("X-Request-URL");var o="response"in i?i.response:i.responseText;r(new w(o,n))},i.onerror=function(){o(new TypeError("Network request failed"))},i.ontimeout=function(){o(new TypeError("Network request failed"))},i.open(a.method,a.url,!0),"include"===a.credentials?i.withCredentials=!0:"omit"===a.credentials&&(i.withCredentials=!1),"responseType"in i&&n&&(i.responseType="blob"),a.headers.forEach((function(e,t){i.setRequestHeader(t,e)})),i.send(void 0===a._bodyInit?null:a._bodyInit)}))},e.fetch.polyfill=!0}function c(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function d(e){return"string"!=typeof e&&(e=String(e)),e}function h(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return r&&(t[Symbol.iterator]=function(){return t}),t}function m(e){this.map={},e instanceof m?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function f(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function y(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function g(e){var t=new FileReader,r=y(t);return t.readAsArrayBuffer(e),r}function v(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e)if("string"==typeof e)this._bodyText=e;else if(n&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(o&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(t&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(a&&n&&s(e))this._bodyArrayBuffer=v(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!a||!ArrayBuffer.prototype.isPrototypeOf(e)&&!l(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=v(e)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):t&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},n&&(this.blob=function(){var e=f(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?f(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var e,t,r,n=f(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,r=y(t=new FileReader),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},o&&(this.formData=function(){return this.text().then(_)}),this.json=function(){return this.text().then(JSON.parse)},this}function x(e,t){var r,n,o=(t=t||{}).body;if(e instanceof x){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new m(e.headers)),this.method=e.method,this.mode=e.mode,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new m(t.headers)),this.method=(n=(r=t.method||this.method||"GET").toUpperCase(),-1<p.indexOf(n)?n:r),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(o)}function _(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\+/g," "),o=r.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function w(e,t){t=t||{},this.type="default",this.status=void 0===t.status?200:t.status,this.ok=200<=this.status&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new m(t.headers),this.url=t.url||"",this._initBody(e)}}("undefined"!=typeof self?self:this)},{}],17:[function(e,t,r){"use strict";var n,o=(n=e("./core/main"))&&n.__esModule?n:{default:n};e("./core/constants"),e("./core/environment"),e("./core/friendly_errors/stacktrace"),e("./core/friendly_errors/validate_params"),e("./core/friendly_errors/file_errors"),e("./core/friendly_errors/fes_core"),e("./core/helpers"),e("./core/legacy"),e("./core/preload"),e("./core/p5.Element"),e("./core/p5.Graphics"),e("./core/p5.Renderer"),e("./core/p5.Renderer2D"),e("./core/rendering"),e("./core/shim"),e("./core/structure"),e("./core/transform"),e("./core/shape/2d_primitives"),e("./core/shape/attributes"),e("./core/shape/curves"),e("./core/shape/vertex"),e("./color/color_conversion"),e("./color/creating_reading"),e("./color/p5.Color"),e("./color/setting"),e("./data/p5.TypedDict"),e("./data/local_storage.js"),e("./dom/dom"),e("./events/acceleration"),e("./events/keyboard"),e("./events/mouse"),e("./events/touch"),e("./image/filters"),e("./image/image"),e("./image/loading_displaying"),e("./image/p5.Image"),e("./image/pixels"),e("./io/files"),e("./io/p5.Table"),e("./io/p5.TableRow"),e("./io/p5.XML"),e("./math/calculation"),e("./math/math"),e("./math/noise"),e("./math/p5.Vector"),e("./math/random"),e("./math/trigonometry"),e("./typography/attributes"),e("./typography/loading_displaying"),e("./typography/p5.Font"),e("./utilities/array_functions"),e("./utilities/conversion"),e("./utilities/string_functions"),e("./utilities/time_date"),e("./webgl/3d_primitives"),e("./webgl/interaction"),e("./webgl/light"),e("./webgl/loading"),e("./webgl/material"),e("./webgl/p5.Camera"),e("./webgl/p5.Geometry"),e("./webgl/p5.Matrix"),e("./webgl/p5.RendererGL.Immediate"),e("./webgl/p5.RendererGL"),e("./webgl/p5.RendererGL.Retained"),e("./webgl/p5.Shader"),e("./webgl/p5.RenderBuffer"),e("./webgl/p5.Texture"),e("./webgl/text"),e("./core/init"),t.exports=o.default},{"./color/color_conversion":18,"./color/creating_reading":19,"./color/p5.Color":20,"./color/setting":21,"./core/constants":22,"./core/environment":23,"./core/friendly_errors/fes_core":24,"./core/friendly_errors/file_errors":25,"./core/friendly_errors/stacktrace":26,"./core/friendly_errors/validate_params":27,"./core/helpers":28,"./core/init":29,"./core/legacy":31,"./core/main":32,"./core/p5.Element":33,"./core/p5.Graphics":34,"./core/p5.Renderer":35,"./core/p5.Renderer2D":36,"./core/preload":37,"./core/rendering":38,"./core/shape/2d_primitives":39,"./core/shape/attributes":40,"./core/shape/curves":41,"./core/shape/vertex":42,"./core/shim":43,"./core/structure":44,"./core/transform":45,"./data/local_storage.js":46,"./data/p5.TypedDict":47,"./dom/dom":48,"./events/acceleration":49,"./events/keyboard":50,"./events/mouse":51,"./events/touch":52,"./image/filters":53,"./image/image":54,"./image/loading_displaying":55,"./image/p5.Image":56,"./image/pixels":57,"./io/files":58,"./io/p5.Table":59,"./io/p5.TableRow":60,"./io/p5.XML":61,"./math/calculation":62,"./math/math":63,"./math/noise":64,"./math/p5.Vector":65,"./math/random":66,"./math/trigonometry":67,"./typography/attributes":68,"./typography/loading_displaying":69,"./typography/p5.Font":70,"./utilities/array_functions":71,"./utilities/conversion":72,"./utilities/string_functions":73,"./utilities/time_date":74,"./webgl/3d_primitives":75,"./webgl/interaction":76,"./webgl/light":77,"./webgl/loading":78,"./webgl/material":79,"./webgl/p5.Camera":80,"./webgl/p5.Geometry":81,"./webgl/p5.Matrix":82,"./webgl/p5.RenderBuffer":83,"./webgl/p5.RendererGL":86,"./webgl/p5.RendererGL.Immediate":84,"./webgl/p5.RendererGL.Retained":85,"./webgl/p5.Shader":87,"./webgl/p5.Texture":88,"./webgl/text":89}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.ColorConversion={},o.default.ColorConversion._hsbaToHSLA=function(e){var t=e[0],r=e[1],n=e[2],o=(2-r)*n/2;return 0!=o&&(1==o?r=0:o<.5?r/=2-r:r=r*n/(2-2*o)),[t,r,o,e[3]]},o.default.ColorConversion._hsbaToRGBA=function(e){var t=6*e[0],r=e[1],n=e[2],o=[];if(0===r)o=[n,n,n,e[3]];else{var a,i,s,l=Math.floor(t),p=n*(1-r),u=n*(1-r*(t-l)),c=n*(1-r*(1+l-t));s=1===l?(a=u,i=n,p):2===l?(a=p,i=n,c):3===l?(a=p,i=u,n):4===l?(a=c,i=p,n):5===l?(a=n,i=p,u):(a=n,i=c,p),o=[a,i,s,e[3]]}return o},o.default.ColorConversion._hslaToHSBA=function(e){var t,r=e[0],n=e[1],o=e[2];return[r,n=2*((t=o<.5?(1+n)*o:o+n-o*n)-o)/t,t,e[3]]},o.default.ColorConversion._hslaToRGBA=function(e){var t=6*e[0],r=e[1],n=e[2],o=[];if(0===r)o=[n,n,n,e[3]];else{var a,i=2*n-(a=n<.5?(1+r)*n:n+r-n*r),s=function(e,t,r){return e<0?e+=6:6<=e&&(e-=6),e<1?t+(r-t)*e:e<3?r:e<4?t+(r-t)*(4-e):t};o=[s(2+t,i,a),s(t,i,a),s(t-2,i,a),e[3]]}return o},o.default.ColorConversion._rgbaToHSBA=function(e){var t,r,n=e[0],o=e[1],a=e[2],i=Math.max(n,o,a),s=i-Math.min(n,o,a);return 0==s?r=t=0:(r=s/i,n===i?t=(o-a)/s:o===i?t=2+(a-n)/s:a===i&&(t=4+(n-o)/s),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,i,e[3]]},o.default.ColorConversion._rgbaToHSLA=function(e){var t,r,n=e[0],o=e[1],a=e[2],i=Math.max(n,o,a),s=Math.min(n,o,a),l=i+s,p=i-s;return 0==p?r=t=0:(r=l<1?p/l:p/(2-l),n===i?t=(o-a)/p:o===i?t=2+(a-n)/p:a===i&&(t=4+(n-o)/p),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,l/2,e[3]]};var a=o.default.ColorConversion;r.default=a},{"../core/main":32}],19:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));e("./p5.Color"),e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),a.default.prototype.alpha=function(e){return a.default._validateParameters("alpha",arguments),this.color(e)._getAlpha()},a.default.prototype.blue=function(e){return a.default._validateParameters("blue",arguments),this.color(e)._getBlue()},a.default.prototype.brightness=function(e){return a.default._validateParameters("brightness",arguments),this.color(e)._getBrightness()},a.default.prototype.color=function(){if(a.default._validateParameters("color",arguments),arguments[0]instanceof a.default.Color)return arguments[0];var e=arguments[0]instanceof Array?arguments[0]:arguments;return new a.default.Color(this,e)},a.default.prototype.green=function(e){return a.default._validateParameters("green",arguments),this.color(e)._getGreen()},a.default.prototype.hue=function(e){return a.default._validateParameters("hue",arguments),this.color(e)._getHue()},a.default.prototype.lerpColor=function(e,t,r){a.default._validateParameters("lerpColor",arguments);var n,o,s,l,p,u,c=this._colorMode,d=this._colorMaxes;if(c===i.RGB)p=e.levels.map((function(e){return e/255})),u=t.levels.map((function(e){return e/255}));else if(c===i.HSB)e._getBrightness(),t._getBrightness(),p=e.hsba,u=t.hsba;else{if(c!==i.HSL)throw new Error("".concat(c,"cannot be used for interpolation."));e._getLightness(),t._getLightness(),p=e.hsla,u=t.hsla}return r=Math.max(Math.min(r,1),0),void 0===this.lerp&&(this.lerp=function(e,t,r){return r*(t-e)+e}),n=this.lerp(p[0],u[0],r),o=this.lerp(p[1],u[1],r),s=this.lerp(p[2],u[2],r),l=this.lerp(p[3],u[3],r),n*=d[c][0],o*=d[c][1],s*=d[c][2],l*=d[c][3],this.color(n,o,s,l)},a.default.prototype.lightness=function(e){return a.default._validateParameters("lightness",arguments),this.color(e)._getLightness()},a.default.prototype.red=function(e){return a.default._validateParameters("red",arguments),this.color(e)._getRed()},a.default.prototype.saturation=function(e){return a.default._validateParameters("saturation",arguments),this.color(e)._getSaturation()};var s=a.default;r.default=s},{"../core/constants":22,"../core/friendly_errors/fes_core":24,"../core/friendly_errors/file_errors":25,"../core/friendly_errors/validate_params":27,"../core/main":32,"./p5.Color":20}],20:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=s(e("../core/main")),a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants")),i=s(e("./color_conversion"));function s(e){return e&&e.__esModule?e:{default:e}}o.default.Color=function(e,t){if(this._storeModeAndMaxes(e._colorMode,e._colorMaxes),this.mode!==a.RGB&&this.mode!==a.HSL&&this.mode!==a.HSB)throw new Error("".concat(this.mode," is an invalid colorMode."));return this._array=o.default.Color._parseInputs.apply(this,t),this._calculateLevels(),this},o.default.Color.prototype.toString=function(e){var t=this.levels,r=this._array,n=r[3];switch(e){case"#rrggbb":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16));case"#rrggbbaa":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16),t[3]<16?"0".concat(t[2].toString(16)):t[3].toString(16));case"#rgb":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16));case"#rgba":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16),Math.round(15*r[3]).toString(16));case"rgb":return"rgb(".concat(t[0],", ",t[1],", ",t[2],")");case"rgb%":return"rgb(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%)");case"rgba%":return"rgba(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%, ",(100*r[3]).toPrecision(3),"%)");case"hsb":case"hsv":return this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),"hsb(".concat(this.hsba[0]*this.maxes[a.HSB][0],", ",this.hsba[1]*this.maxes[a.HSB][1],", ",this.hsba[2]*this.maxes[a.HSB][2],")");case"hsb%":case"hsv%":return this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),"hsb(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%)");case"hsba":case"hsva":return this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),"hsba(".concat(this.hsba[0]*this.maxes[a.HSB][0],", ",this.hsba[1]*this.maxes[a.HSB][1],", ",this.hsba[2]*this.maxes[a.HSB][2],", ",n,")");case"hsba%":case"hsva%":return this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),"hsba(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%, ",(100*n).toPrecision(3),"%)");case"hsl":return this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),"hsl(".concat(this.hsla[0]*this.maxes[a.HSL][0],", ",this.hsla[1]*this.maxes[a.HSL][1],", ",this.hsla[2]*this.maxes[a.HSL][2],")");case"hsl%":return this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%)");case"hsla":return this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),"hsla(".concat(this.hsla[0]*this.maxes[a.HSL][0],", ",this.hsla[1]*this.maxes[a.HSL][1],", ",this.hsla[2]*this.maxes[a.HSL][2],", ",n,")");case"hsla%":return this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%, ",(100*n).toPrecision(3),"%)");case"rgba":default:return"rgba(".concat(t[0],",",t[1],",",t[2],",",n,")")}},o.default.Color.prototype.setRed=function(e){this._array[0]=e/this.maxes[a.RGB][0],this._calculateLevels()},o.default.Color.prototype.setGreen=function(e){this._array[1]=e/this.maxes[a.RGB][1],this._calculateLevels()},o.default.Color.prototype.setBlue=function(e){this._array[2]=e/this.maxes[a.RGB][2],this._calculateLevels()},o.default.Color.prototype.setAlpha=function(e){this._array[3]=e/this.maxes[this.mode][3],this._calculateLevels()},o.default.Color.prototype._calculateLevels=function(){for(var e=this._array,t=this.levels=new Array(e.length),r=e.length-1;0<=r;--r)t[r]=Math.round(255*e[r])},o.default.Color.prototype._getAlpha=function(){return this._array[3]*this.maxes[this.mode][3]},o.default.Color.prototype._storeModeAndMaxes=function(e,t){this.mode=e,this.maxes=t},o.default.Color.prototype._getMode=function(){return this.mode},o.default.Color.prototype._getMaxes=function(){return this.maxes},o.default.Color.prototype._getBlue=function(){return this._array[2]*this.maxes[a.RGB][2]},o.default.Color.prototype._getBrightness=function(){return this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),this.hsba[2]*this.maxes[a.HSB][2]},o.default.Color.prototype._getGreen=function(){return this._array[1]*this.maxes[a.RGB][1]},o.default.Color.prototype._getHue=function(){return this.mode===a.HSB?(this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),this.hsba[0]*this.maxes[a.HSB][0]):(this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),this.hsla[0]*this.maxes[a.HSL][0])},o.default.Color.prototype._getLightness=function(){return this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),this.hsla[2]*this.maxes[a.HSL][2]},o.default.Color.prototype._getRed=function(){return this._array[0]*this.maxes[a.RGB][0]},o.default.Color.prototype._getSaturation=function(){return this.mode===a.HSB?(this.hsba||(this.hsba=i.default._rgbaToHSBA(this._array)),this.hsba[1]*this.maxes[a.HSB][1]):(this.hsla||(this.hsla=i.default._rgbaToHSLA(this._array)),this.hsla[1]*this.maxes[a.HSL][1])};var l={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},p=/\s*/,u=/(\d{1,3})/,c=/((?:\d+(?:\.\d+)?)|(?:\.\d+))/,d=new RegExp("".concat(c.source,"%")),h={HEX3:/^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX4:/^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX6:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,HEX8:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,RGB:new RegExp(["^rgb\\(",u.source,",",u.source,",",u.source,"\\)$"].join(p.source),"i"),RGB_PERCENT:new RegExp(["^rgb\\(",d.source,",",d.source,",",d.source,"\\)$"].join(p.source),"i"),RGBA:new RegExp(["^rgba\\(",u.source,",",u.source,",",u.source,",",c.source,"\\)$"].join(p.source),"i"),RGBA_PERCENT:new RegExp(["^rgba\\(",d.source,",",d.source,",",d.source,",",c.source,"\\)$"].join(p.source),"i"),HSL:new RegExp(["^hsl\\(",u.source,",",d.source,",",d.source,"\\)$"].join(p.source),"i"),HSLA:new RegExp(["^hsla\\(",u.source,",",d.source,",",d.source,",",c.source,"\\)$"].join(p.source),"i"),HSB:new RegExp(["^hsb\\(",u.source,",",d.source,",",d.source,"\\)$"].join(p.source),"i"),HSBA:new RegExp(["^hsba\\(",u.source,",",d.source,",",d.source,",",c.source,"\\)$"].join(p.source),"i")};o.default.Color._parseInputs=function(e,t,r,n){var s,p=arguments.length,u=this.mode,c=this.maxes[u],d=[];if(3<=p){for(d[0]=e/c[0],d[1]=t/c[1],d[2]=r/c[2],d[3]="number"==typeof n?n/c[3]:1,s=d.length-1;0<=s;--s){var m=d[s];m<0?d[s]=0:1<m&&(d[s]=1)}return u===a.HSL?i.default._hslaToRGBA(d):u===a.HSB?i.default._hsbaToRGBA(d):d}if(1===p&&"string"==typeof e){var f=e.trim().toLowerCase();if(l[f])return o.default.Color._parseInputs.call(this,l[f]);if(h.HEX3.test(f))return(d=h.HEX3.exec(f).slice(1).map((function(e){return parseInt(e+e,16)/255})))[3]=1,d;if(h.HEX6.test(f))return(d=h.HEX6.exec(f).slice(1).map((function(e){return parseInt(e,16)/255})))[3]=1,d;if(h.HEX4.test(f))return h.HEX4.exec(f).slice(1).map((function(e){return parseInt(e+e,16)/255}));if(h.HEX8.test(f))return h.HEX8.exec(f).slice(1).map((function(e){return parseInt(e,16)/255}));if(h.RGB.test(f))return(d=h.RGB.exec(f).slice(1).map((function(e){return e/255})))[3]=1,d;if(h.RGB_PERCENT.test(f))return(d=h.RGB_PERCENT.exec(f).slice(1).map((function(e){return parseFloat(e)/100})))[3]=1,d;if(h.RGBA.test(f))return h.RGBA.exec(f).slice(1).map((function(e,t){return 3===t?parseFloat(e):e/255}));if(h.RGBA_PERCENT.test(f))return h.RGBA_PERCENT.exec(f).slice(1).map((function(e,t){return 3===t?parseFloat(e):parseFloat(e)/100}));if(h.HSL.test(f)?(d=h.HSL.exec(f).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100})))[3]=1:h.HSLA.test(f)&&(d=h.HSLA.exec(f).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100}))),(d=d.map((function(e){return Math.max(Math.min(e,1),0)}))).length)return i.default._hslaToRGBA(d);if(h.HSB.test(f)?(d=h.HSB.exec(f).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100})))[3]=1:h.HSBA.test(f)&&(d=h.HSBA.exec(f).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100}))),d.length){for(s=d.length-1;0<=s;--s)d[s]=Math.max(Math.min(d[s],1),0);return i.default._hsbaToRGBA(d)}d=[1,1,1,1]}else{if(1!==p&&2!==p||"number"!=typeof e)throw new Error("".concat(arguments,"is not a valid color representation."));d[0]=e/c[2],d[1]=e/c[2],d[2]=e/c[2],d[3]="number"==typeof t?t/c[3]:1,d=d.map((function(e){return Math.max(Math.min(e,1),0)}))}return d};var m=o.default.Color;r.default=m},{"../core/constants":22,"../core/main":32,"./color_conversion":18}],21:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));e("./p5.Color"),a.default.prototype.background=function(){var e;return(e=this._renderer).background.apply(e,arguments),this},a.default.prototype.clear=function(){return this._renderer.clear(),this},a.default.prototype.colorMode=function(e,t,r,n,o){if(a.default._validateParameters("colorMode",arguments),e===i.RGB||e===i.HSB||e===i.HSL){this._colorMode=e;var s=this._colorMaxes[e];2===arguments.length?(s[0]=t,s[1]=t,s[2]=t,s[3]=t):4===arguments.length?(s[0]=t,s[1]=r,s[2]=n):5===arguments.length&&(s[0]=t,s[1]=r,s[2]=n,s[3]=o)}return this},a.default.prototype.fill=function(){var e;return this._renderer._setProperty("_fillSet",!0),this._renderer._setProperty("_doFill",!0),(e=this._renderer).fill.apply(e,arguments),this},a.default.prototype.noFill=function(){return this._renderer._setProperty("_doFill",!1),this},a.default.prototype.noStroke=function(){return this._renderer._setProperty("_doStroke",!1),this},a.default.prototype.stroke=function(){var e;return this._renderer._setProperty("_strokeSet",!0),this._renderer._setProperty("_doStroke",!0),(e=this._renderer).stroke.apply(e,arguments),this},a.default.prototype.erase=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:255,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:255;return this._renderer.erase(e,t),this},a.default.prototype.noErase=function(){return this._renderer.noErase(),this};var s=a.default;r.default=s},{"../core/constants":22,"../core/main":32,"./p5.Color":20}],22:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.FILL=r.STROKE=r.CURVE=r.BEZIER=r.QUADRATIC=r.LINEAR=r._CTX_MIDDLE=r._DEFAULT_LEADMULT=r._DEFAULT_TEXT_FILL=r.BOLDITALIC=r.BOLD=r.ITALIC=r.NORMAL=r.BLUR=r.ERODE=r.DILATE=r.POSTERIZE=r.INVERT=r.OPAQUE=r.GRAY=r.THRESHOLD=r.BURN=r.DODGE=r.SOFT_LIGHT=r.HARD_LIGHT=r.OVERLAY=r.REPLACE=r.SCREEN=r.MULTIPLY=r.EXCLUSION=r.SUBTRACT=r.DIFFERENCE=r.LIGHTEST=r.DARKEST=r.ADD=r.REMOVE=r.BLEND=r.UP_ARROW=r.TAB=r.SHIFT=r.RIGHT_ARROW=r.RETURN=r.OPTION=r.LEFT_ARROW=r.ESCAPE=r.ENTER=r.DOWN_ARROW=r.DELETE=r.CONTROL=r.BACKSPACE=r.ALT=r.AUTO=r.HSL=r.HSB=r.RGB=r.MITER=r.BEVEL=r.ROUND=r.SQUARE=r.PROJECT=r.PIE=r.CHORD=r.OPEN=r.CLOSE=r.TESS=r.QUAD_STRIP=r.QUADS=r.TRIANGLE_STRIP=r.TRIANGLE_FAN=r.TRIANGLES=r.LINE_LOOP=r.LINE_STRIP=r.LINES=r.POINTS=r.BASELINE=r.BOTTOM=r.TOP=r.CENTER=r.LEFT=r.RIGHT=r.RADIUS=r.CORNERS=r.CORNER=r.RAD_TO_DEG=r.DEG_TO_RAD=r.RADIANS=r.DEGREES=r.TWO_PI=r.TAU=r.QUARTER_PI=r.PI=r.HALF_PI=r.WAIT=r.TEXT=r.MOVE=r.HAND=r.CROSS=r.ARROW=r.WEBGL=r.P2D=void 0,r.AXES=r.GRID=r._DEFAULT_FILL=r._DEFAULT_STROKE=r.PORTRAIT=r.LANDSCAPE=r.MIRROR=r.CLAMP=r.REPEAT=r.NEAREST=r.IMAGE=r.IMMEDIATE=r.TEXTURE=void 0;var n=Math.PI;r.P2D="p2d",r.WEBGL="webgl",r.ARROW="default",r.CROSS="crosshair",r.HAND="pointer",r.MOVE="move",r.TEXT="text",r.WAIT="wait";var o=n/2;r.HALF_PI=o;var a=n;r.PI=a;var i=n/4;r.QUARTER_PI=i;var s=2*n;r.TAU=s;var l=2*n;r.TWO_PI=l,r.DEGREES="degrees",r.RADIANS="radians";var p=n/180;r.DEG_TO_RAD=p;var u=180/n;r.RAD_TO_DEG=u,r.CORNER="corner",r.CORNERS="corners",r.RADIUS="radius",r.RIGHT="right",r.LEFT="left",r.CENTER="center",r.TOP="top",r.BOTTOM="bottom",r.BASELINE="alphabetic",r.POINTS=0,r.LINES=1,r.LINE_STRIP=3,r.LINE_LOOP=2,r.TRIANGLES=4,r.TRIANGLE_FAN=6,r.TRIANGLE_STRIP=5,r.QUADS="quads",r.QUAD_STRIP="quad_strip",r.TESS="tess",r.CLOSE="close",r.OPEN="open",r.CHORD="chord",r.PIE="pie",r.PROJECT="square",r.SQUARE="butt",r.ROUND="round",r.BEVEL="bevel",r.MITER="miter",r.RGB="rgb",r.HSB="hsb",r.HSL="hsl",r.AUTO="auto",r.ALT=18,r.BACKSPACE=8,r.CONTROL=17,r.DELETE=46,r.DOWN_ARROW=40,r.ENTER=13,r.ESCAPE=27,r.LEFT_ARROW=37,r.OPTION=18,r.RETURN=13,r.RIGHT_ARROW=39,r.SHIFT=16,r.TAB=9,r.UP_ARROW=38,r.BLEND="source-over",r.REMOVE="destination-out",r.ADD="lighter",r.DARKEST="darken",r.LIGHTEST="lighten",r.DIFFERENCE="difference",r.SUBTRACT="subtract",r.EXCLUSION="exclusion",r.MULTIPLY="multiply",r.SCREEN="screen",r.REPLACE="copy",r.OVERLAY="overlay",r.HARD_LIGHT="hard-light",r.SOFT_LIGHT="soft-light",r.DODGE="color-dodge",r.BURN="color-burn",r.THRESHOLD="threshold",r.GRAY="gray",r.OPAQUE="opaque",r.INVERT="invert",r.POSTERIZE="posterize",r.DILATE="dilate",r.ERODE="erode",r.BLUR="blur",r.NORMAL="normal",r.ITALIC="italic",r.BOLD="bold",r.BOLDITALIC="bold italic",r._DEFAULT_TEXT_FILL="#000000",r._DEFAULT_LEADMULT=1.25,r._CTX_MIDDLE="middle",r.LINEAR="linear",r.QUADRATIC="quadratic",r.BEZIER="bezier",r.CURVE="curve",r.STROKE="stroke",r.FILL="fill",r.TEXTURE="texture",r.IMMEDIATE="immediate",r.IMAGE="image",r.NEAREST="nearest",r.REPEAT="repeat",r.CLAMP="clamp",r.MIRROR="mirror",r.LANDSCAPE="landscape",r.PORTRAIT="portrait",r._DEFAULT_STROKE="#000000",r._DEFAULT_FILL="#FFFFFF",r.GRID="grid",r.AXES="axes"},{}],23:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("./main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants")),s=[i.ARROW,i.CROSS,i.HAND,i.MOVE,i.TEXT,i.WAIT];a.default.prototype._frameRate=0,a.default.prototype._lastFrameTime=window.performance.now(),a.default.prototype._targetFrameRate=60;var l=window.print;function p(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth||0}function u(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight||0}a.default.prototype.print=function(){var e;arguments.length?(e=console).log.apply(e,arguments):l()},a.default.prototype.frameCount=0,a.default.prototype.deltaTime=0,a.default.prototype.focused=document.hasFocus(),a.default.prototype.cursor=function(e,t,r){var n="auto",o=this._curElement.elt;if(s.includes(e))n=e;else if("string"==typeof e){var a="";t&&r&&"number"==typeof t&&"number"==typeof r&&(a="".concat(t," ").concat(r)),n="http://"===e.substring(0,7)||"https://"===e.substring(0,8)||/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e)?"url(".concat(e,") ").concat(a,", auto"):e}o.style.cursor=n},a.default.prototype.frameRate=function(e){return a.default._validateParameters("frameRate",arguments),"number"!=typeof e||e<0?this._frameRate:(this._setProperty("_targetFrameRate",e),0===e&&this._setProperty("_frameRate",e),this)},a.default.prototype.getFrameRate=function(){return this.frameRate()},a.default.prototype.setFrameRate=function(e){return this.frameRate(e)},a.default.prototype.noCursor=function(){this._curElement.elt.style.cursor="none"},a.default.prototype.displayWidth=screen.width,a.default.prototype.displayHeight=screen.height,a.default.prototype.windowWidth=p(),a.default.prototype.windowHeight=u(),a.default.prototype._onresize=function(e){this._setProperty("windowWidth",p()),this._setProperty("windowHeight",u());var t,r=this._isGlobal?window:this;"function"==typeof r.windowResized&&(void 0===(t=r.windowResized(e))||t||e.preventDefault())},a.default.prototype.width=0,a.default.prototype.height=0,a.default.prototype.fullscreen=function(e){if(a.default._validateParameters("fullscreen",arguments),void 0===e)return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;e?function(e){if(!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled))throw new Error("Fullscreen not enabled in this browser.");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}(document.documentElement):document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},a.default.prototype.pixelDensity=function(e){var t;return a.default._validateParameters("pixelDensity",arguments),"number"==typeof e?(e!==this._pixelDensity&&(this._pixelDensity=e),(t=this).resizeCanvas(this.width,this.height,!0)):t=this._pixelDensity,t},a.default.prototype.displayDensity=function(){return window.devicePixelRatio},a.default.prototype.getURL=function(){return location.href},a.default.prototype.getURLPath=function(){return location.pathname.split("/").filter((function(e){return""!==e}))},a.default.prototype.getURLParams=function(){for(var e,t=/[?&]([^&=]+)(?:[&=])([^&=]+)/gim,r={};null!=(e=t.exec(location.search));)e.index===t.lastIndex&&t.lastIndex++,r[e[1]]=e[2];return r};var c=a.default;r.default=c},{"./constants":22,"./main":32}],24:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};e("../internationalization");var a,i=null;function s(e,t){t=t||console.log.bind(console),i||a(),i.some((function(r){if(e.message&&null!==e.message.match("\\W?".concat(r.name,"\\W"))){var n="function"===r.type?"".concat(r.name,"()"):r.name;return t("Did you just try to use p5.js's ".concat(n," ").concat(r.type,"? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat("https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup")),!0}}))}o.default._friendlyError=o.default._checkForUserDefinedFunctions=o.default._fesErrorMonitor=function(){},i=null,a=function(){function t(e){return Object.getOwnPropertyNames(e).filter((function(e){return"_"!==e[0]&&!(e in r)&&(r[e]=!0)})).map((function(t){var r;return r="function"==typeof e[t]?"function":t===t.toUpperCase()?"constant":"variable",{name:t,type:r}}))}var r={};(i=[].concat(t(o.default.prototype),t(e("../constants")))).sort((function(e,t){return t.name.length-e.name.length}))},o.default.prototype._helpForMisusedAtTopLevelCode=s,"complete"!==document.readyState&&(window.addEventListener("error",s,!1),window.addEventListener("load",(function(){window.removeEventListener("error",s,!1)})));var l=o.default;r.default=l},{"../constants":22,"../internationalization":30,"../main":32,"./browser_errors":void 0}],25:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};e("../internationalization"),o.default._friendlyFileLoadError=function(){};var a=o.default;r.default=a},{"../internationalization":30,"../main":32}],26:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};function a(){var e=/(^|@)\S+:\d+/,t=/^\s*at .*(\S+:\d+|\(native\))/m,r=/^(eval@)?(\[native code])?$/;return{parse:function(e){return void 0!==e.stacktrace||void 0!==e["opera#sourceloc"]?this.parseOpera(e):e.stack&&e.stack.match(t)?this.parseV8OrIE(e):e.stack?this.parseFFOrSafari(e):void 0},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e.replace(/[()]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(e){return e.stack.split("\n").filter((function(e){return!!e.match(t)}),this).map((function(e){-1<e.indexOf("(eval ")&&(e=e.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(\),.*$)/g,""));var t=e.replace(/^\s+/,"").replace(/\(eval code/g,"("),r=t.match(/ (\((.+):(\d+):(\d+)\)$)/),n=(t=r?t.replace(r[0],""):t).split(/\s+/).slice(1),o=this.extractLocation(r?r[1]:n.pop());return{functionName:n.join(" ")||void 0,fileName:-1<["eval","<anonymous>"].indexOf(o[0])?void 0:o[0],lineNumber:o[1],columnNumber:o[2],source:e}}),this)},parseFFOrSafari:function(e){return e.stack.split("\n").filter((function(e){return!e.match(r)}),this).map((function(e){if(-1<e.indexOf(" > eval")&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===e.indexOf("@")&&-1===e.indexOf(":"))return{functionName:e};var t=/((.*".+"[^@]*)?[^@]*)(?:@)/,r=e.match(t),n=r&&r[1]?r[1]:void 0,o=this.extractLocation(e.replace(t,""));return{functionName:n,fileName:o[0],lineNumber:o[1],columnNumber:o[2],source:e}}),this)},parseOpera:function(e){return!e.stacktrace||-1<e.message.indexOf("\n")&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)/i,r=e.message.split("\n"),n=[],o=2,a=r.length;o<a;o+=2){var i=t.exec(r[o]);i&&n.push({fileName:i[2],lineNumber:i[1],source:r[o]})}return n},parseOpera10:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,r=e.stacktrace.split("\n"),n=[],o=0,a=r.length;o<a;o+=2){var i=t.exec(r[o]);i&&n.push({functionName:i[3]||void 0,fileName:i[2],lineNumber:i[1],source:r[o]})}return n},parseOpera11:function(t){return t.stack.split("\n").filter((function(t){return!!t.match(e)&&!t.match(/^Error created at/)}),this).map((function(e){var t,r=e.split("@"),n=this.extractLocation(r.pop()),o=r.shift()||"",a=o.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;return o.match(/\(([^)]*)\)/)&&(t=o.replace(/^[^(]+\(([^)]*)\)$/,"$1")),{functionName:a,args:void 0===t||"[arguments not available]"===t?void 0:t.split(","),fileName:n[0],lineNumber:n[1],columnNumber:n[2],source:e}}),this)}}}o.default._getErrorStackParser=function(){return new a};var i=o.default;r.default=i},{"../main":32}],27:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};(function(e){if(!(e&&e.__esModule||null===e||"object"!==function(e){return("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}(e)&&"function"!=typeof e)){var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}r.default=e,t&&t.set(e,r)}})(e("../constants")),e("../internationalization"),o.default._validateParameters=o.default._clearValidateParamsCache=function(){};var a=o.default;r.default=a},{"../../../docs/parameterData.json":1,"../constants":22,"../internationalization":30,"../main":32}],28:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants")),a={modeAdjust:function(e,t,r,n,a){return a===o.CORNER?{x:e,y:t,w:r,h:n}:a===o.CORNERS?{x:e,y:t,w:r-e,h:n-t}:a===o.RADIUS?{x:e-r,y:t-n,w:2*r,h:2*n}:a===o.CENTER?{x:e-.5*r,y:t-.5*n,w:r,h:n}:void 0}};r.default=a},{"./constants":22}],29:[function(e,t,r){"use strict";var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./internationalization");var a=Promise.resolve();Promise.all([new Promise((function(e,t){"complete"===document.readyState?e():window.addEventListener("load",e,!1)})),a]).then((function(){void 0===window._setupDone?window.mocha||(window.setup&&"function"==typeof window.setup||window.draw&&"function"==typeof window.draw)&&!o.default.instance&&new o.default:console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import")}))},{"../core/main":32,"./internationalization":30}],30:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.initialize=r.translator=void 0;var n=a(e("i18next")),o=a(e("i18next-browser-languagedetector"));function a(e){return e&&e.__esModule?e:{default:e}}var i=function(){return console.debug("p5.js translator called before translations were loaded"),""};r.translator=i,r.initialize=function(){return new Promise((function(e,t){n.default.use(o.default).init({fallbackLng:"en",nestingPrefix:"$tr(",nestingSuffix:")",defaultNS:"translation",returnEmptyString:!1,interpolation:{escapeValue:!1},detection:{checkWhitelist:!1},resources:void 0}).then((function(t){r.translator=i=t,e()}),(function(e){return t("Translations failed to load (".concat(e,")"))}))}))}},{"../../translations":void 0,i18next:4,"i18next-browser-languagedetector":4}],31:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.prototype.pushStyle=function(){throw new Error("pushStyle() not used, see push()")},o.default.prototype.popStyle=function(){throw new Error("popStyle() not used, see pop()")},o.default.prototype.popMatrix=function(){throw new Error("popMatrix() not used, see pop()")},o.default.prototype.pushMatrix=function(){throw new Error("pushMatrix() not used, see push()")};var a=o.default;r.default=a},{"./main":32}],32:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,e("./shim");var o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var i=function(){function e(t,r,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._setupDone=!1,this._pixelDensity=Math.ceil(window.devicePixelRatio)||1,this._userNode=r,this._curElement=null,this._elements=[],this._glAttributes=null,this._requestAnimId=0,this._preloadCount=0,this._isGlobal=!1,this._loop=!0,this._initializeInstanceVariables(),this._defaultCanvasSize={width:100,height:100},this._events={mousemove:null,mousedown:null,mouseup:null,dragend:null,dragover:null,click:null,dblclick:null,mouseover:null,mouseout:null,keydown:null,keyup:null,keypress:null,touchstart:null,touchmove:null,touchend:null,resize:null,blur:null},this._millisStart=-1,this._lcg_random_state=null,this._gaussian_previous=!1,this._events.wheel=null,this._loadingScreenId="p5_loading",this._registeredMethods={};var a=Object.getOwnPropertyNames(e.prototype._registeredMethods),i=!0,s=!1,l=void 0;try{for(var p,u=a[Symbol.iterator]();!(i=(p=u.next()).done);i=!0){var c=p.value;this._registeredMethods[c]=e.prototype._registeredMethods[c].slice()}}catch(t){s=!0,l=t}finally{try{i||null==u.return||u.return()}finally{if(s)throw l}}window.DeviceOrientationEvent&&(this._events.deviceorientation=null),window.DeviceMotionEvent&&!window._isNodeWebkit&&(this._events.devicemotion=null),this._start=function(){o._userNode&&"string"==typeof o._userNode&&(o._userNode=document.getElementById(o._userNode));var t=(o._isGlobal?window:o).preload;if(t){var r=document.getElementById(o._loadingScreenId);r||((r=document.createElement("div")).innerHTML="Loading...",r.style.position="absolute",r.id=o._loadingScreenId,(o._userNode||document.body).appendChild(r));var n=o._preloadMethods;for(var a in n){n[a]=n[a]||e;var i=n[a];i!==e.prototype&&i!==e||(o._isGlobal&&(window[a]=o._wrapPreload(o,a)),i=o),o._registeredPreloadMethods[a]=i[a],i[a]=o._wrapPreload(i,a)}t(),o._runIfPreloadsAreDone()}else o._setup(),o._draw()},this._runIfPreloadsAreDone=function(){var e=this._isGlobal?window:this;if(0===e._preloadCount){var t=document.getElementById(e._loadingScreenId);t&&t.parentNode.removeChild(t),this._lastFrameTime=window.performance.now(),e._setup(),e._draw()}},this._decrementPreload=function(){var e=this._isGlobal?window:this;"function"==typeof e.preload&&(e._setProperty("_preloadCount",e._preloadCount-1),e._runIfPreloadsAreDone())},this._wrapPreload=function(e,t){var r=this;return function(){r._incrementPreload();for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return r._registeredPreloadMethods[t].apply(e,o)}},this._incrementPreload=function(){var e=this._isGlobal?window:this;e._setProperty("_preloadCount",e._preloadCount+1)},this._setup=function(){o.createCanvas(o._defaultCanvasSize.width,o._defaultCanvasSize.height,"p2d");var e=o._isGlobal?window:o;if("function"==typeof e.preload)for(var t in o._preloadMethods)e[t]=o._preloadMethods[t][t],e[t]&&o&&(e[t]=e[t].bind(o));o._millisStart=window.performance.now(),"function"==typeof e.setup&&e.setup();var r=document.getElementsByTagName("canvas"),n=!0,a=!1,i=void 0;try{for(var s,l=r[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var p=s.value;"true"===p.dataset.hidden&&(p.style.visibility="",delete p.dataset.hidden)}}catch(e){a=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(a)throw i}}o._lastFrameTime=window.performance.now(),o._setupDone=!0},this._draw=function(){var e=window.performance.now(),t=e-o._lastFrameTime,r=1e3/o._targetFrameRate;(!o._loop||r-5<=t)&&(o.redraw(),o._frameRate=1e3/(e-o._lastFrameTime),o.deltaTime=e-o._lastFrameTime,o._setProperty("deltaTime",o.deltaTime),o._lastFrameTime=e,void 0!==o._updateMouseCoords&&(o._updateMouseCoords(),o._setProperty("movedX",0),o._setProperty("movedY",0))),o._loop&&(o._requestAnimId=window.requestAnimationFrame(o._draw))},this._setProperty=function(e,t){o[e]=t,o._isGlobal&&(window[e]=t)},this.remove=function(){var t=document.getElementById(o._loadingScreenId);if(t&&(t.parentNode.removeChild(t),o._incrementPreload()),o._curElement){for(var r in o._loop=!1,o._requestAnimId&&window.cancelAnimationFrame(o._requestAnimId),o._events)window.removeEventListener(r,o._events[r]);var n=!0,a=!1,i=void 0;try{for(var s,l=o._elements[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var p=s.value;for(var u in p.elt&&p.elt.parentNode&&p.elt.parentNode.removeChild(p.elt),p._events)p.elt.removeEventListener(u,p._events[u])}}catch(t){a=!0,i=t}finally{try{n||null==l.return||l.return()}finally{if(a)throw i}}var c=o;o._registeredMethods.remove.forEach((function(e){void 0!==e&&e.call(c)}))}if(o._isGlobal){for(var d in e.prototype)try{delete window[d]}catch(t){window[d]=void 0}for(var h in o)if(o.hasOwnProperty(h))try{delete window[h]}catch(t){window[h]=void 0}e.instance=null}},this._registeredMethods.init.forEach((function(e){void 0!==e&&e.call(this)}),this),this._setupPromisePreloads();var d=this._createFriendlyGlobalFunctionBinder();if(t)t(this),e._checkForUserDefinedFunctions(this);else{for(var h in this._isGlobal=!0,e.instance=this,e.prototype)if("function"==typeof e.prototype[h]){var m=h.substring(2);this._events.hasOwnProperty(m)||(Math.hasOwnProperty(h)&&Math[h]===e.prototype[h]?d(h,e.prototype[h]):d(h,e.prototype[h].bind(this)))}else d(h,e.prototype[h]);for(var f in this)this.hasOwnProperty(f)&&d(f,this[f])}for(var y in this._events){var g=this["_on".concat(y)];if(g){var v=g.bind(this);window.addEventListener(y,v,{passive:!1}),this._events[y]=v}}function b(){o._setProperty("focused",!0)}function x(){o._setProperty("focused",!1)}window.addEventListener("focus",b),window.addEventListener("blur",x),this.registerMethod("remove",(function(){window.removeEventListener("focus",b),window.removeEventListener("blur",x)})),"complete"===document.readyState?this._start():window.addEventListener("load",this._start.bind(this),!1)}var t,r;return t=e,(r=[{key:"_initializeInstanceVariables",value:function(){this._styles=[],this._bezierDetail=20,this._curveDetail=20,this._colorMode=o.RGB,this._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},this._downKeys={}}},{key:"registerPreloadMethod",value:function(t,r){e.prototype._preloadMethods.hasOwnProperty(t)||(e.prototype._preloadMethods[t]=r)}},{key:"registerMethod",value:function(t,r){var n=this||e.prototype;n._registeredMethods.hasOwnProperty(t)||(n._registeredMethods[t]=[]),n._registeredMethods[t].push(r)}},{key:"_createFriendlyGlobalFunctionBinder",value:function(e){var t=0<arguments.length&&void 0!==e?e:{},r=t.globalObject||window;return t.log||console.log.bind(console),function(e,t){r[e]=t}}}])&&a(t.prototype,r),e}();for(var s in i.instance=null,i.disableFriendlyErrors=!1,o)i.prototype[s]=o[s];i.prototype._preloadMethods={loadJSON:i.prototype,loadImage:i.prototype,loadStrings:i.prototype,loadXML:i.prototype,loadBytes:i.prototype,loadTable:i.prototype,loadFont:i.prototype,loadModel:i.prototype,loadShader:i.prototype},i.prototype._registeredMethods={init:[],pre:[],post:[],remove:[]},i.prototype._registeredPreloadMethods={};var l=i;r.default=l},{"./constants":22,"./shim":43}],33:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.Element=function(e,t){this.elt=e,this._pInst=this._pixelsState=t,this._events={},this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight},o.default.Element.prototype.parent=function(e){return void 0===e?this.elt.parentNode:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof o.default.Element&&(e=e.elt),e.appendChild(this.elt),this)},o.default.Element.prototype.id=function(e){return void 0===e?this.elt.id:(this.elt.id=e,this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this)},o.default.Element.prototype.class=function(e){return void 0===e?this.elt.className:(this.elt.className=e,this)},o.default.Element.prototype.mousePressed=function(e){return o.default.Element._adjustListener("mousedown",(function(t){return this._pInst._setProperty("mouseIsPressed",!0),this._pInst._setMouseButton(t),e.call(this)}),this),this},o.default.Element.prototype.doubleClicked=function(e){return o.default.Element._adjustListener("dblclick",e,this),this},o.default.Element.prototype.mouseWheel=function(e){return o.default.Element._adjustListener("wheel",e,this),this},o.default.Element.prototype.mouseReleased=function(e){return o.default.Element._adjustListener("mouseup",e,this),this},o.default.Element.prototype.mouseClicked=function(e){return o.default.Element._adjustListener("click",e,this),this},o.default.Element.prototype.mouseMoved=function(e){return o.default.Element._adjustListener("mousemove",e,this),this},o.default.Element.prototype.mouseOver=function(e){return o.default.Element._adjustListener("mouseover",e,this),this},o.default.Element.prototype.mouseOut=function(e){return o.default.Element._adjustListener("mouseout",e,this),this},o.default.Element.prototype.touchStarted=function(e){return o.default.Element._adjustListener("touchstart",e,this),this},o.default.Element.prototype.touchMoved=function(e){return o.default.Element._adjustListener("touchmove",e,this),this},o.default.Element.prototype.touchEnded=function(e){return o.default.Element._adjustListener("touchend",e,this),this},o.default.Element.prototype.dragOver=function(e){return o.default.Element._adjustListener("dragover",e,this),this},o.default.Element.prototype.dragLeave=function(e){return o.default.Element._adjustListener("dragleave",e,this),this},o.default.Element._adjustListener=function(e,t,r){return!1===t?o.default.Element._detachListener(e,r):o.default.Element._attachListener(e,t,r),this},o.default.Element._attachListener=function(e,t,r){r._events[e]&&o.default.Element._detachListener(e,r);var n=t.bind(r);r.elt.addEventListener(e,n,!1),r._events[e]=n},o.default.Element._detachListener=function(e,t){var r=t._events[e];t.elt.removeEventListener(e,r,!1),t._events[e]=null},o.default.Element.prototype._setProperty=function(e,t){this[e]=t};var a=o.default.Element;r.default=a},{"./main":32}],34:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("./main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));a.default.Graphics=function(e,t,r,n){var o=r||i.P2D;this.canvas=document.createElement("canvas");var s=n._userNode||document.body;for(var l in s.appendChild(this.canvas),a.default.Element.call(this,this.canvas,n),a.default.prototype)this[l]||("function"==typeof a.default.prototype[l]?this[l]=a.default.prototype[l].bind(this):this[l]=a.default.prototype[l]);return a.default.prototype._initializeInstanceVariables.apply(this),this.width=e,this.height=t,this._pixelDensity=n._pixelDensity,o===i.WEBGL?this._renderer=new a.default.RendererGL(this.canvas,this,!1):this._renderer=new a.default.Renderer2D(this.canvas,this,!1),n._elements.push(this),Object.defineProperty(this,"deltaTime",{get:function(){return this._pInst.deltaTime}}),this._renderer.resize(e,t),this._renderer._applyDefaults(),this},a.default.Graphics.prototype=Object.create(a.default.Element.prototype),a.default.Graphics.prototype.reset=function(){this._renderer.resetMatrix(),this._renderer.isP3D&&this._renderer._update()},a.default.Graphics.prototype.remove=function(){this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt);var e=this._pInst._elements.indexOf(this);for(var t in-1!==e&&this._pInst._elements.splice(e,1),this._events)this.elt.removeEventListener(t,this._events[t])};var s=a.default.Graphics;r.default=s},{"./constants":22,"./main":32}],35:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==i(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e){var t=0,r=0;if(e.offsetParent)for(;t+=e.offsetLeft,r+=e.offsetTop,e=e.offsetParent;);else t+=e.offsetLeft,r+=e.offsetTop;return[t,r]}o.default.Renderer=function(e,t,r){o.default.Element.call(this,e,t),this.canvas=e,this._pixelsState=t,r?(this._isMainCanvas=!0,this._pInst._setProperty("_curElement",this),this._pInst._setProperty("canvas",this.canvas),this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height)):(this.canvas.style.display="none",this._styles=[]),this._textSize=12,this._textLeading=15,this._textFont="sans-serif",this._textStyle=a.NORMAL,this._textAscent=null,this._textDescent=null,this._textAlign=a.LEFT,this._textBaseline=a.BASELINE,this._rectMode=a.CORNER,this._ellipseMode=a.CENTER,this._curveTightness=0,this._imageMode=a.CORNER,this._tint=null,this._doStroke=!0,this._doFill=!0,this._strokeSet=!1,this._fillSet=!1},o.default.Renderer.prototype=Object.create(o.default.Element.prototype),o.default.Renderer.prototype.push=function(){return{properties:{_doStroke:this._doStroke,_strokeSet:this._strokeSet,_doFill:this._doFill,_fillSet:this._fillSet,_tint:this._tint,_imageMode:this._imageMode,_rectMode:this._rectMode,_ellipseMode:this._ellipseMode,_textFont:this._textFont,_textLeading:this._textLeading,_textSize:this._textSize,_textAlign:this._textAlign,_textBaseline:this._textBaseline,_textStyle:this._textStyle}}},o.default.Renderer.prototype.pop=function(e){e.properties&&Object.assign(this,e.properties)},o.default.Renderer.prototype.resize=function(e,t){this.width=e,this.height=t,this.elt.width=e*this._pInst._pixelDensity,this.elt.height=t*this._pInst._pixelDensity,this.elt.style.width="".concat(e,"px"),this.elt.style.height="".concat(t,"px"),this._isMainCanvas&&(this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height))},o.default.Renderer.prototype.get=function(e,t,r,n){var a=this._pixelsState,i=a._pixelDensity,s=this.canvas;if(void 0===e&&void 0===t)e=t=0,r=a.width,n=a.height;else if(e*=i,t*=i,void 0===r&&void 0===n)return e<0||t<0||e>=s.width||t>=s.height?[0,0,0,0]:this._getPixel(e,t);var l=new o.default.Image(r,n);return l.canvas.getContext("2d").drawImage(s,e,t,r*i,n*i,0,0,r,n),l},o.default.Renderer.prototype.textLeading=function(e){return"number"==typeof e?(this._setProperty("_textLeading",e),this._pInst):this._textLeading},o.default.Renderer.prototype.textSize=function(e){return"number"==typeof e?(this._setProperty("_textSize",e),this._setProperty("_textLeading",e*a._DEFAULT_LEADMULT),this._applyTextProperties()):this._textSize},o.default.Renderer.prototype.textStyle=function(e){return e?(e!==a.NORMAL&&e!==a.ITALIC&&e!==a.BOLD&&e!==a.BOLDITALIC||this._setProperty("_textStyle",e),this._applyTextProperties()):this._textStyle},o.default.Renderer.prototype.textAscent=function(){return null===this._textAscent&&this._updateTextMetrics(),this._textAscent},o.default.Renderer.prototype.textDescent=function(){return null===this._textDescent&&this._updateTextMetrics(),this._textDescent},o.default.Renderer.prototype.textAlign=function(e,t){return void 0!==e?(this._setProperty("_textAlign",e),void 0!==t&&this._setProperty("_textBaseline",t),this._applyTextProperties()):{horizontal:this._textAlign,vertical:this._textBaseline}},o.default.Renderer.prototype.text=function(e,t,r,n,o){var i,s,l,p,u,c,d,h,m,f=this._pInst,y=Number.MAX_VALUE;if((this._doFill||this._doStroke)&&void 0!==e){if("string"!=typeof e&&(e=e.toString()),i=(e=e.replace(/(\t)/g,"  ")).split("\n"),void 0!==n){for(d=1,l=m=0;l<i.length;l++){for(u="",h=i[l].split(" "),s=0;s<h.length;s++)c="".concat(u+h[s]," "),n<this.textWidth(c)&&1<d?(u="".concat(h[s]," "),m+=f.textLeading(),d=1):(u=c,d+=1);l<i.length-1&&(m+=f.textLeading())}switch(this._rectMode===a.CENTER&&(t-=n/2,r-=o/2),this._textAlign){case a.CENTER:t+=n/2;break;case a.RIGHT:t+=n}var g=!1;if(void 0!==o){switch(this._textBaseline){case a.BOTTOM:r+=o-m;break;case a.CENTER:r+=(o-m)/2;break;case a.BASELINE:g=!0,this._textBaseline=a.TOP}y=r+o-f.textAscent()}for(l=0;l<i.length;l++){for(u="",h=i[l].split(" "),s=0;s<h.length;s++)c="".concat(u+h[s]," "),n<this.textWidth(c)&&0<u.length?(this._renderText(f,u,t,r,y),u="".concat(h[s]," "),r+=f.textLeading()):u=c;this._renderText(f,u,t,r,y),r+=f.textLeading(),g&&(this._textBaseline=a.BASELINE)}}else{var v=0,b=f.textAlign().vertical;for(b===a.CENTER?v=(i.length-1)*f.textLeading()/2:b===a.BOTTOM&&(v=(i.length-1)*f.textLeading()),p=0;p<i.length;p++)this._renderText(f,i[p],t,r-v,y),r+=f.textLeading()}return f}},o.default.Renderer.prototype._applyDefaults=function(){return this},o.default.Renderer.prototype._isOpenType=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this._textFont;return"object"===i(e)&&e.font&&e.font.supported},o.default.Renderer.prototype._updateTextMetrics=function(){if(this._isOpenType())return this._setProperty("_textAscent",this._textFont._textAscent()),this._setProperty("_textDescent",this._textFont._textDescent()),this;var e=document.createElement("span");e.style.fontFamily=this._textFont,e.style.fontSize="".concat(this._textSize,"px"),e.innerHTML="ABCjgq|";var t=document.createElement("div");t.style.display="inline-block",t.style.width="1px",t.style.height="0px";var r=document.createElement("div");r.appendChild(e),r.appendChild(t),r.style.height="0px",r.style.overflow="hidden",document.body.appendChild(r),t.style.verticalAlign="baseline";var n=s(t),o=s(e),a=n[1]-o[1];t.style.verticalAlign="bottom",n=s(t),o=s(e);var i=n[1]-o[1]-a;return document.body.removeChild(r),this._setProperty("_textAscent",a),this._setProperty("_textDescent",i),this};var l=o.default.Renderer;r.default=l},{"../core/constants":22,"./main":32}],36:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=s(e("./main")),a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants")),i=s(e("../image/filters"));function s(e){return e&&e.__esModule?e:{default:e}}e("./p5.Renderer");var l="rgba(0,0,0,0)";o.default.Renderer2D=function(e,t,r){return o.default.Renderer.call(this,e,t,r),this.drawingContext=this.canvas.getContext("2d"),this._pInst._setProperty("drawingContext",this.drawingContext),this},o.default.Renderer2D.prototype=Object.create(o.default.Renderer.prototype),o.default.Renderer2D.prototype._applyDefaults=function(){this._cachedFillStyle=this._cachedStrokeStyle=void 0,this._cachedBlendMode=a.BLEND,this._setFill(a._DEFAULT_FILL),this._setStroke(a._DEFAULT_STROKE),this.drawingContext.lineCap=a.ROUND,this.drawingContext.font="normal 12px sans-serif"},o.default.Renderer2D.prototype.resize=function(e,t){o.default.Renderer.prototype.resize.call(this,e,t),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity)},o.default.Renderer2D.prototype.background=function(){if(this.drawingContext.save(),this.resetMatrix(),(arguments.length<=0?void 0:arguments[0])instanceof o.default.Image)this._pInst.image(arguments.length<=0?void 0:arguments[0],0,0,this.width,this.height);else{var e,t=this._getFill(),r=(e=this._pInst).color.apply(e,arguments).toString();this._setFill(r),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.fillRect(0,0,this.width,this.height),this._setFill(t),this._isErasing&&this._pInst.erase()}this.drawingContext.restore()},o.default.Renderer2D.prototype.clear=function(){this.drawingContext.save(),this.resetMatrix(),this.drawingContext.clearRect(0,0,this.width,this.height),this.drawingContext.restore()},o.default.Renderer2D.prototype.fill=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setFill(t.toString())},o.default.Renderer2D.prototype.stroke=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setStroke(t.toString())},o.default.Renderer2D.prototype.erase=function(e,t){if(!this._isErasing){this._cachedFillStyle=this.drawingContext.fillStyle;var r=this._pInst.color(255,e).toString();this.drawingContext.fillStyle=r,this._cachedStrokeStyle=this.drawingContext.strokeStyle;var n=this._pInst.color(255,t).toString();this.drawingContext.strokeStyle=n;var o=this._cachedBlendMode;this.blendMode(a.REMOVE),this._cachedBlendMode=o,this._isErasing=!0}},o.default.Renderer2D.prototype.noErase=function(){this._isErasing&&(this.drawingContext.fillStyle=this._cachedFillStyle,this.drawingContext.strokeStyle=this._cachedStrokeStyle,this.blendMode(this._cachedBlendMode),this._isErasing=!1)},o.default.Renderer2D.prototype.image=function(e,t,r,n,a,i,s,l,p){var u;e.gifProperties&&e._animateGif(this._pInst);try{this._tint&&(o.default.MediaElement&&e instanceof o.default.MediaElement&&e.loadPixels(),e.canvas&&(u=this._getTintedImageCanvas(e))),u=u||e.canvas||e.elt;var c=1;e.width&&0<e.width&&(c=u.width/e.width),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.drawImage(u,c*t,c*r,c*n,c*a,i,s,l,p),this._isErasing&&this._pInst.erase()}catch(e){if("NS_ERROR_NOT_AVAILABLE"!==e.name)throw e}},o.default.Renderer2D.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=i.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var n=r.getContext("2d"),o=n.createImageData(e.canvas.width,e.canvas.height),a=o.data,s=0;s<t.length;s+=4){var l=t[s],p=t[s+1],u=t[s+2],c=t[s+3];a[s]=l*this._tint[0]/255,a[s+1]=p*this._tint[1]/255,a[s+2]=u*this._tint[2]/255,a[s+3]=c*this._tint[3]/255}return n.putImageData(o,0,0),r},o.default.Renderer2D.prototype.blendMode=function(e){if(e===a.SUBTRACT)console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");else{if(e!==a.BLEND&&e!==a.REMOVE&&e!==a.DARKEST&&e!==a.LIGHTEST&&e!==a.DIFFERENCE&&e!==a.MULTIPLY&&e!==a.EXCLUSION&&e!==a.SCREEN&&e!==a.REPLACE&&e!==a.OVERLAY&&e!==a.HARD_LIGHT&&e!==a.SOFT_LIGHT&&e!==a.DODGE&&e!==a.BURN&&e!==a.ADD)throw new Error("Mode ".concat(e," not recognized."));this._cachedBlendMode=e,this.drawingContext.globalCompositeOperation=e}},o.default.Renderer2D.prototype.blend=function(){for(var e=this.drawingContext.globalCompositeOperation,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];var a=r[r.length-1],i=Array.prototype.slice.call(r,0,r.length-1);this.drawingContext.globalCompositeOperation=a,o.default.prototype.copy.apply(this,i),this.drawingContext.globalCompositeOperation=e},o.default.Renderer2D.prototype._getPixel=function(e,t){var r;return[(r=this.drawingContext.getImageData(e,t,1,1).data)[0],r[1],r[2],r[3]]},o.default.Renderer2D.prototype.loadPixels=function(){var e=this._pixelsState,t=e._pixelDensity,r=this.width*t,n=this.height*t,o=this.drawingContext.getImageData(0,0,r,n);e._setProperty("imageData",o),e._setProperty("pixels",o.data)},o.default.Renderer2D.prototype.set=function(e,t,r){e=Math.floor(e),t=Math.floor(t);var n=this._pixelsState;if(r instanceof o.default.Image)this.drawingContext.save(),this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(n._pixelDensity,n._pixelDensity),this.drawingContext.clearRect(e,t,r.width,r.height),this.drawingContext.drawImage(r.canvas,e,t),this.drawingContext.restore();else{var a=0,i=0,s=0,l=0,p=4*(t*n._pixelDensity*(this.width*n._pixelDensity)+e*n._pixelDensity);if(n.imageData||n.loadPixels.call(n),"number"==typeof r)p<n.pixels.length&&(s=i=a=r,l=255);else if(r instanceof Array){if(r.length<4)throw new Error("pixel array must be of the form [R, G, B, A]");p<n.pixels.length&&(a=r[0],i=r[1],s=r[2],l=r[3])}else r instanceof o.default.Color&&p<n.pixels.length&&(a=r.levels[0],i=r.levels[1],s=r.levels[2],l=r.levels[3]);for(var u=0;u<n._pixelDensity;u++)for(var c=0;c<n._pixelDensity;c++)p=4*((t*n._pixelDensity+c)*this.width*n._pixelDensity+(e*n._pixelDensity+u)),n.pixels[p]=a,n.pixels[p+1]=i,n.pixels[p+2]=s,n.pixels[p+3]=l}},o.default.Renderer2D.prototype.updatePixels=function(e,t,r,n){var o=this._pixelsState,a=o._pixelDensity;void 0===e&&void 0===t&&void 0===r&&void 0===n&&(t=e=0,r=this.width,n=this.height),e*=a,t*=a,r*=a,n*=a,this.gifProperties&&(this.gifProperties.frames[this.gifProperties.displayIndex].image=o.imageData),this.drawingContext.putImageData(o.imageData,e,t,0,0,r,n)},o.default.Renderer2D.prototype._acuteArcToBezier=function(e,t){var r=t/2,n=Math.cos(r),o=Math.sin(r),a=1/Math.tan(r),i=e+r,s=Math.cos(i),l=Math.sin(i),p=(4-n)/3,u=o+(n-p)*a;return{ax:Math.cos(e).toFixed(7),ay:Math.sin(e).toFixed(7),bx:(p*s+u*l).toFixed(7),by:(p*l-u*s).toFixed(7),cx:(p*s-u*l).toFixed(7),cy:(p*l+u*s).toFixed(7),dx:Math.cos(e+t).toFixed(7),dy:Math.sin(e+t).toFixed(7)}},o.default.Renderer2D.prototype.arc=function(e,t,r,n,o,i,s){var l=this.drawingContext,p=r/2,u=n/2,c=0,d=[];for(e+=p,t+=u;1e-5<=i-o;)c=Math.min(i-o,a.HALF_PI),d.push(this._acuteArcToBezier(o,c)),o+=c;return this._doFill&&(l.beginPath(),d.forEach((function(r,n){0===n&&l.moveTo(e+r.ax*p,t+r.ay*u),l.bezierCurveTo(e+r.bx*p,t+r.by*u,e+r.cx*p,t+r.cy*u,e+r.dx*p,t+r.dy*u)})),s!==a.PIE&&null!=s||l.lineTo(e,t),l.closePath(),l.fill()),this._doStroke&&(l.beginPath(),d.forEach((function(r,n){0===n&&l.moveTo(e+r.ax*p,t+r.ay*u),l.bezierCurveTo(e+r.bx*p,t+r.by*u,e+r.cx*p,t+r.cy*u,e+r.dx*p,t+r.dy*u)})),s===a.PIE?(l.lineTo(e,t),l.closePath()):s===a.CHORD&&l.closePath(),l.stroke()),this},o.default.Renderer2D.prototype.ellipse=function(e){var t=this.drawingContext,r=this._doFill,n=this._doStroke,o=parseFloat(e[0]),a=parseFloat(e[1]),i=parseFloat(e[2]),s=parseFloat(e[3]);if(r&&!n){if(this._getFill()===l)return this}else if(!r&&n&&this._getStroke()===l)return this;var p=i/2*.5522847498,u=s/2*.5522847498,c=o+i,d=a+s,h=o+i/2,m=a+s/2;t.beginPath(),t.moveTo(o,m),t.bezierCurveTo(o,m-u,h-p,a,h,a),t.bezierCurveTo(h+p,a,c,m-u,c,m),t.bezierCurveTo(c,m+u,h+p,d,h,d),t.bezierCurveTo(h-p,d,o,m+u,o,m),r&&t.fill(),n&&t.stroke()},o.default.Renderer2D.prototype.line=function(e,t,r,n){var o=this.drawingContext;return this._doStroke&&(this._getStroke()===l||(o.beginPath(),o.moveTo(e,t),o.lineTo(r,n),o.stroke())),this},o.default.Renderer2D.prototype.point=function(e,t){var r=this.drawingContext;if(!this._doStroke)return this;if(this._getStroke()===l)return this;var n=this._getStroke(),o=this._getFill();e=Math.round(e),t=Math.round(t),this._setFill(n),1<r.lineWidth?(r.beginPath(),r.arc(e,t,r.lineWidth/2,0,a.TWO_PI,!1),r.fill()):r.fillRect(e,t,1,1),this._setFill(o)},o.default.Renderer2D.prototype.quad=function(e,t,r,n,o,a,i,s){var p=this.drawingContext,u=this._doFill,c=this._doStroke;if(u&&!c){if(this._getFill()===l)return this}else if(!u&&c&&this._getStroke()===l)return this;return p.beginPath(),p.moveTo(e,t),p.lineTo(r,n),p.lineTo(o,a),p.lineTo(i,s),p.closePath(),u&&p.fill(),c&&p.stroke(),this},o.default.Renderer2D.prototype.rect=function(e){var t=e[0],r=e[1],n=e[2],o=e[3],a=e[4],i=e[5],s=e[6],p=e[7],u=this.drawingContext,c=this._doFill,d=this._doStroke;if(c&&!d){if(this._getFill()===l)return this}else if(!c&&d&&this._getStroke()===l)return this;if(u.beginPath(),void 0===a)u.rect(t,r,n,o);else{void 0===i&&(i=a),void 0===s&&(s=i),void 0===p&&(p=s);var h=Math.abs(n),m=Math.abs(o),f=h/2,y=m/2;h<2*a&&(a=f),m<2*a&&(a=y),h<2*i&&(i=f),m<2*i&&(i=y),h<2*s&&(s=f),m<2*s&&(s=y),h<2*p&&(p=f),m<2*p&&(p=y),u.beginPath(),u.moveTo(t+a,r),u.arcTo(t+n,r,t+n,r+o,i),u.arcTo(t+n,r+o,t,r+o,s),u.arcTo(t,r+o,t,r,p),u.arcTo(t,r,t+n,r,a),u.closePath()}return this._doFill&&u.fill(),this._doStroke&&u.stroke(),this},o.default.Renderer2D.prototype.triangle=function(e){var t=this.drawingContext,r=this._doFill,n=this._doStroke,o=e[0],a=e[1],i=e[2],s=e[3],p=e[4],u=e[5];if(r&&!n){if(this._getFill()===l)return this}else if(!r&&n&&this._getStroke()===l)return this;t.beginPath(),t.moveTo(o,a),t.lineTo(i,s),t.lineTo(p,u),t.closePath(),r&&t.fill(),n&&t.stroke()},o.default.Renderer2D.prototype.endShape=function(e,t,r,n,o,i,s){if(0===t.length)return this;if(!this._doStroke&&!this._doFill)return this;var l,p,u,c=e===a.CLOSE;c&&!i&&t.push(t[0]);var d=t.length;if(!r||s!==a.POLYGON&&null!==s)if(!n||s!==a.POLYGON&&null!==s)if(!o||s!==a.POLYGON&&null!==s)if(s===a.POINTS)for(p=0;p<d;p++)l=t[p],this._doStroke&&this._pInst.stroke(l[6]),this._pInst.point(l[0],l[1]);else if(s===a.LINES)for(p=0;p+1<d;p+=2)l=t[p],this._doStroke&&this._pInst.stroke(t[p+1][6]),this._pInst.line(l[0],l[1],t[p+1][0],t[p+1][1]);else if(s===a.TRIANGLES)for(p=0;p+2<d;p+=3)l=t[p],this.drawingContext.beginPath(),this.drawingContext.moveTo(l[0],l[1]),this.drawingContext.lineTo(t[p+1][0],t[p+1][1]),this.drawingContext.lineTo(t[p+2][0],t[p+2][1]),this.drawingContext.closePath(),this._doFill&&(this._pInst.fill(t[p+2][5]),this.drawingContext.fill()),this._doStroke&&(this._pInst.stroke(t[p+2][6]),this.drawingContext.stroke());else if(s===a.TRIANGLE_STRIP)for(p=0;p+1<d;p++)l=t[p],this.drawingContext.beginPath(),this.drawingContext.moveTo(t[p+1][0],t[p+1][1]),this.drawingContext.lineTo(l[0],l[1]),this._doStroke&&this._pInst.stroke(t[p+1][6]),this._doFill&&this._pInst.fill(t[p+1][5]),p+2<d&&(this.drawingContext.lineTo(t[p+2][0],t[p+2][1]),this._doStroke&&this._pInst.stroke(t[p+2][6]),this._doFill&&this._pInst.fill(t[p+2][5])),this._doFillStrokeClose(c);else if(s===a.TRIANGLE_FAN){if(2<d){for(this.drawingContext.beginPath(),p=2;p<d;p++)l=t[p],this.drawingContext.moveTo(t[0][0],t[0][1]),this.drawingContext.lineTo(t[p-1][0],t[p-1][1]),this.drawingContext.lineTo(l[0],l[1]),this.drawingContext.lineTo(t[0][0],t[0][1]),p<d-1&&(this._doFill&&l[5]!==t[p+1][5]||this._doStroke&&l[6]!==t[p+1][6])&&(this._doFill&&(this._pInst.fill(l[5]),this.drawingContext.fill(),this._pInst.fill(t[p+1][5])),this._doStroke&&(this._pInst.stroke(l[6]),this.drawingContext.stroke(),this._pInst.stroke(t[p+1][6])),this.drawingContext.closePath(),this.drawingContext.beginPath());this._doFillStrokeClose(c)}}else if(s===a.QUADS)for(p=0;p+3<d;p+=4){for(l=t[p],this.drawingContext.beginPath(),this.drawingContext.moveTo(l[0],l[1]),u=1;u<4;u++)this.drawingContext.lineTo(t[p+u][0],t[p+u][1]);this.drawingContext.lineTo(l[0],l[1]),this._doFill&&this._pInst.fill(t[p+3][5]),this._doStroke&&this._pInst.stroke(t[p+3][6]),this._doFillStrokeClose(c)}else if(s===a.QUAD_STRIP){if(3<d)for(p=0;p+1<d;p+=2)l=t[p],this.drawingContext.beginPath(),p+3<d?(this.drawingContext.moveTo(t[p+2][0],t[p+2][1]),this.drawingContext.lineTo(l[0],l[1]),this.drawingContext.lineTo(t[p+1][0],t[p+1][1]),this.drawingContext.lineTo(t[p+3][0],t[p+3][1]),this._doFill&&this._pInst.fill(t[p+3][5]),this._doStroke&&this._pInst.stroke(t[p+3][6])):(this.drawingContext.moveTo(l[0],l[1]),this.drawingContext.lineTo(t[p+1][0],t[p+1][1])),this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[0][0],t[0][1]),p=1;p<d;p++)(l=t[p]).isVert&&(l.moveTo?this.drawingContext.moveTo(l[0],l[1]):this.drawingContext.lineTo(l[0],l[1]));this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),p=0;p<d;p++)t[p].isVert?t[p].moveTo?this.drawingContext.moveTo(t[p][0],t[p][1]):this.drawingContext.lineTo(t[p][0],t[p][1]):this.drawingContext.quadraticCurveTo(t[p][0],t[p][1],t[p][2],t[p][3]);this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),p=0;p<d;p++)t[p].isVert?t[p].moveTo?this.drawingContext.moveTo(t[p][0],t[p][1]):this.drawingContext.lineTo(t[p][0],t[p][1]):this.drawingContext.bezierCurveTo(t[p][0],t[p][1],t[p][2],t[p][3],t[p][4],t[p][5]);this._doFillStrokeClose(c)}else if(3<d){var h=[],m=1-this._curveTightness;for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[1][0],t[1][1]),p=1;p+2<d;p++)l=t[p],h[0]=[l[0],l[1]],h[1]=[l[0]+(m*t[p+1][0]-m*t[p-1][0])/6,l[1]+(m*t[p+1][1]-m*t[p-1][1])/6],h[2]=[t[p+1][0]+(m*t[p][0]-m*t[p+2][0])/6,t[p+1][1]+(m*t[p][1]-m*t[p+2][1])/6],h[3]=[t[p+1][0],t[p+1][1]],this.drawingContext.bezierCurveTo(h[1][0],h[1][1],h[2][0],h[2][1],h[3][0],h[3][1]);c&&this.drawingContext.lineTo(t[p+1][0],t[p+1][1]),this._doFillStrokeClose(c)}return i=o=n=r=!1,c&&t.pop(),this},o.default.Renderer2D.prototype.strokeCap=function(e){return e!==a.ROUND&&e!==a.SQUARE&&e!==a.PROJECT||(this.drawingContext.lineCap=e),this},o.default.Renderer2D.prototype.strokeJoin=function(e){return e!==a.ROUND&&e!==a.BEVEL&&e!==a.MITER||(this.drawingContext.lineJoin=e),this},o.default.Renderer2D.prototype.strokeWeight=function(e){return this.drawingContext.lineWidth=void 0===e||0===e?1e-4:e,this},o.default.Renderer2D.prototype._getFill=function(){return this._cachedFillStyle||(this._cachedFillStyle=this.drawingContext.fillStyle),this._cachedFillStyle},o.default.Renderer2D.prototype._setFill=function(e){e!==this._cachedFillStyle&&(this.drawingContext.fillStyle=e,this._cachedFillStyle=e)},o.default.Renderer2D.prototype._getStroke=function(){return this._cachedStrokeStyle||(this._cachedStrokeStyle=this.drawingContext.strokeStyle),this._cachedStrokeStyle},o.default.Renderer2D.prototype._setStroke=function(e){e!==this._cachedStrokeStyle&&(this.drawingContext.strokeStyle=e,this._cachedStrokeStyle=e)},o.default.Renderer2D.prototype.bezier=function(e,t,r,n,o,a,i,s){return this._pInst.beginShape(),this._pInst.vertex(e,t),this._pInst.bezierVertex(r,n,o,a,i,s),this._pInst.endShape(),this},o.default.Renderer2D.prototype.curve=function(e,t,r,n,o,a,i,s){return this._pInst.beginShape(),this._pInst.curveVertex(e,t),this._pInst.curveVertex(r,n),this._pInst.curveVertex(o,a),this._pInst.curveVertex(i,s),this._pInst.endShape(),this},o.default.Renderer2D.prototype._doFillStrokeClose=function(e){e&&this.drawingContext.closePath(),this._doFill&&this.drawingContext.fill(),this._doStroke&&this.drawingContext.stroke()},o.default.Renderer2D.prototype.applyMatrix=function(e,t,r,n,o,a){this.drawingContext.transform(e,t,r,n,o,a)},o.default.Renderer2D.prototype.resetMatrix=function(){return this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),this},o.default.Renderer2D.prototype.rotate=function(e){this.drawingContext.rotate(e)},o.default.Renderer2D.prototype.scale=function(e,t){return this.drawingContext.scale(e,t),this},o.default.Renderer2D.prototype.translate=function(e,t){return e instanceof o.default.Vector&&(t=e.y,e=e.x),this.drawingContext.translate(e,t),this},o.default.Renderer2D.prototype.text=function(e,t,r,n,i){var s;void 0!==n&&this.drawingContext.textBaseline===a.BASELINE&&(s=!0,this.drawingContext.textBaseline=a.TOP);var l=o.default.Renderer.prototype.text.apply(this,arguments);return s&&(this.drawingContext.textBaseline=a.BASELINE),l},o.default.Renderer2D.prototype._renderText=function(e,t,r,n,o){if(!(o<=n))return e.push(),this._isOpenType()?this._textFont._renderPath(t,r,n,{renderer:this}):(this._doStroke&&this._strokeSet&&this.drawingContext.strokeText(t,r,n),this._doFill&&(this._fillSet||this._setFill(a._DEFAULT_TEXT_FILL),this.drawingContext.fillText(t,r,n))),e.pop(),e},o.default.Renderer2D.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):this.drawingContext.measureText(e).width},o.default.Renderer2D.prototype._applyTextProperties=function(){var e,t=this._pInst;return this._setProperty("_textAscent",null),this._setProperty("_textDescent",null),e=this._textFont,this._isOpenType()&&(e=this._textFont.font.familyName,this._setProperty("_textStyle",this._textFont.font.styleName)),this.drawingContext.font="".concat(this._textStyle||"normal"," ").concat(this._textSize||12,"px ").concat(e||"sans-serif"),this.drawingContext.textAlign=this._textAlign,this._textBaseline===a.CENTER?this.drawingContext.textBaseline=a._CTX_MIDDLE:this.drawingContext.textBaseline=this._textBaseline,t},o.default.Renderer2D.prototype.push=function(){return this.drawingContext.save(),o.default.Renderer.prototype.push.apply(this)},o.default.Renderer2D.prototype.pop=function(e){this.drawingContext.restore(),this._cachedFillStyle=this.drawingContext.fillStyle,this._cachedStrokeStyle=this.drawingContext.strokeStyle,o.default.Renderer.prototype.pop.call(this,e)};var p=o.default.Renderer2D;r.default=p},{"../image/filters":53,"./constants":22,"./main":32,"./p5.Renderer":35}],37:[function(e,t,r){"use strict";var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.prototype._promisePreloads=[];var a=!(o.default.prototype.registerPromisePreload=function(e){o.default.prototype._promisePreloads.push(e)});function i(){return{}}o.default.prototype._setupPromisePreloads=function(){var e=!0,t=!1,r=void 0;try{for(var n,i=this._promisePreloads[Symbol.iterator]();!(e=(n=i.next()).done);e=!0){var s=n.value,l=this,p=s.method,u=s.addCallbacks,c=s.legacyPreloadSetup,d=s.target||this,h=d[p].bind(d);if(d===o.default.prototype){if(a)continue;l=null,h=d[p]}d[p]=this._wrapPromisePreload(l,h,u),c&&(d[c.method]=this._legacyPreloadGenerator(l,c,d[p]))}}catch(e){t=!0,r=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw r}}a=!0},o.default.prototype._wrapPromisePreload=function(e,t,r){var n=function(){var e=this;this._incrementPreload();for(var n=null,o=null,a=arguments.length,i=new Array(a),s=0;s<a;s++)i[s]=arguments[s];if(r)for(var l=i.length-1;0<=l&&!o&&"function"==typeof i[l];l--)o=n,n=i.pop();var p=Promise.resolve(t.apply(this,i));return n&&p.then(n),o&&p.catch(o),p.then((function(){return e._decrementPreload()})),p};return e&&(n=n.bind(e)),n},o.default.prototype._legacyPreloadGenerator=function(e,t,r){var n=t.createBaseObject||i,o=function(){var e=this;this._incrementPreload();var t=n.apply(this,arguments);return r.apply(this,arguments).then((function(r){Object.assign(t,r),e._decrementPreload()})),t};return e&&(o=o.bind(e)),o}},{"./main":32}],38:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==i(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("./p5.Graphics"),e("./p5.Renderer2D"),e("../webgl/p5.RendererGL");var s="defaultCanvas0";o.default.prototype.createCanvas=function(e,t,r){o.default._validateParameters("createCanvas",arguments);var n,i=r||a.P2D;if(i===a.WEBGL){if(n=document.getElementById(s)){n.parentNode.removeChild(n);var l=this._renderer;this._elements=this._elements.filter((function(e){return e!==l}))}(n=document.createElement("canvas")).id=s,n.classList.add("p5Canvas")}else if(this._defaultGraphicsCreated)n=this.canvas;else{n=document.createElement("canvas");for(var p=0;document.getElementById("defaultCanvas".concat(p));)p++;s="defaultCanvas".concat(p),n.id=s,n.classList.add("p5Canvas")}if(this._setupDone||(n.dataset.hidden=!0,n.style.visibility="hidden"),this._userNode)this._userNode.appendChild(n);else{if(0===document.getElementsByTagName("main").length){var u=document.createElement("main");document.body.appendChild(u)}document.getElementsByTagName("main")[0].appendChild(n)}return i===a.WEBGL?(this._setProperty("_renderer",new o.default.RendererGL(n,this,!0)),this._elements.push(this._renderer)):this._defaultGraphicsCreated||(this._setProperty("_renderer",new o.default.Renderer2D(n,this,!0)),this._defaultGraphicsCreated=!0,this._elements.push(this._renderer)),this._renderer.resize(e,t),this._renderer._applyDefaults(),this._renderer},o.default.prototype.resizeCanvas=function(e,t,r){if(o.default._validateParameters("resizeCanvas",arguments),this._renderer){var n={};for(var a in this.drawingContext){var s=this.drawingContext[a];"object"!==i(s)&&"function"!=typeof s&&(n[a]=s)}for(var l in this._renderer.resize(e,t),this.width=e,this.height=t,n)try{this.drawingContext[l]=n[l]}catch(e){}r||this.redraw()}},o.default.prototype.noCanvas=function(){this.canvas&&this.canvas.parentNode.removeChild(this.canvas)},o.default.prototype.createGraphics=function(e,t,r){return o.default._validateParameters("createGraphics",arguments),new o.default.Graphics(e,t,r,this)},o.default.prototype.blendMode=function(e){o.default._validateParameters("blendMode",arguments),e===a.NORMAL&&(console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."),e=a.BLEND),this._renderer.blendMode(e)};var l=o.default;r.default=l},{"../webgl/p5.RendererGL":86,"./constants":22,"./main":32,"./p5.Graphics":34,"./p5.Renderer2D":36}],39:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=s(e("../main")),a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../constants")),i=s(e("../helpers"));function s(e){return e&&e.__esModule?e:{default:e}}e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),o.default.prototype._normalizeArcAngles=function(e,t,r,n,o){var i;return e-=a.TWO_PI*Math.floor(e/a.TWO_PI),t-=a.TWO_PI*Math.floor(t/a.TWO_PI),i=Math.min(Math.abs(e-t),a.TWO_PI-Math.abs(e-t)),o&&(e=e<=a.HALF_PI?Math.atan(r/n*Math.tan(e)):e>a.HALF_PI&&e<=3*a.HALF_PI?Math.atan(r/n*Math.tan(e))+a.PI:Math.atan(r/n*Math.tan(e))+a.TWO_PI,t=t<=a.HALF_PI?Math.atan(r/n*Math.tan(t)):t>a.HALF_PI&&t<=3*a.HALF_PI?Math.atan(r/n*Math.tan(t))+a.PI:Math.atan(r/n*Math.tan(t))+a.TWO_PI),t<e&&(t+=a.TWO_PI),{start:e,stop:t,correspondToSamePoint:i<1e-5}},o.default.prototype.arc=function(e,t,r,n,a,s,l,p){if(o.default._validateParameters("arc",arguments),!this._renderer._doStroke&&!this._renderer._doFill)return this;if(a===s)return this;a=this._toRadians(a),s=this._toRadians(s),r=Math.abs(r),n=Math.abs(n);var u=i.default.modeAdjust(e,t,r,n,this._renderer._ellipseMode),c=this._normalizeArcAngles(a,s,u.w,u.h,!0);return c.correspondToSamePoint?this._renderer.ellipse([u.x,u.y,u.w,u.h,p]):this._renderer.arc(u.x,u.y,u.w,u.h,c.start,c.stop,l,p),this},o.default.prototype.ellipse=function(e,t,r,n,a){return o.default._validateParameters("ellipse",arguments),this._renderEllipse.apply(this,arguments)},o.default.prototype.circle=function(){o.default._validateParameters("circle",arguments);var e=Array.prototype.slice.call(arguments,0,2);return e.push(arguments[2]),e.push(arguments[2]),this._renderEllipse.apply(this,e)},o.default.prototype._renderEllipse=function(e,t,r,n,o){if(!this._renderer._doStroke&&!this._renderer._doFill)return this;r<0&&(r=Math.abs(r)),void 0===n?n=r:n<0&&(n=Math.abs(n));var a=i.default.modeAdjust(e,t,r,n,this._renderer._ellipseMode);return this._renderer.ellipse([a.x,a.y,a.w,a.h,o]),this},o.default.prototype.line=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return o.default._validateParameters("line",t),this._renderer._doStroke&&(n=this._renderer).line.apply(n,t),this},o.default.prototype.point=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return o.default._validateParameters("point",t),this._renderer._doStroke&&(1===t.length&&t[0]instanceof o.default.Vector?this._renderer.point.call(this._renderer,t[0].x,t[0].y,t[0].z):(n=this._renderer).point.apply(n,t)),this},o.default.prototype.quad=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return o.default._validateParameters("quad",t),(this._renderer._doStroke||this._renderer._doFill)&&(this._renderer.isP3D&&12!==t.length?this._renderer.quad.call(this._renderer,t[0],t[1],0,t[2],t[3],0,t[4],t[5],0,t[6],t[7],0):(n=this._renderer).quad.apply(n,t)),this},o.default.prototype.rect=function(){return o.default._validateParameters("rect",arguments),this._renderRect.apply(this,arguments)},o.default.prototype.square=function(e,t,r,n,a,i,s){return o.default._validateParameters("square",arguments),this._renderRect.call(this,e,t,r,r,n,a,i,s)},o.default.prototype._renderRect=function(){if(this._renderer._doStroke||this._renderer._doFill){3===arguments.length&&(arguments[3]=arguments[2]);for(var e=i.default.modeAdjust(arguments[0],arguments[1],arguments[2],arguments[3],this._renderer._rectMode),t=[e.x,e.y,e.w,e.h],r=4;r<arguments.length;r++)t[r]=arguments[r];this._renderer.rect(t)}return this},o.default.prototype.triangle=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("triangle",t),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.triangle(t),this};var l=o.default;r.default=l},{"../constants":22,"../friendly_errors/fes_core":24,"../friendly_errors/file_errors":25,"../friendly_errors/validate_params":27,"../helpers":28,"../main":32}],40:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../constants"));a.default.prototype.ellipseMode=function(e){return a.default._validateParameters("ellipseMode",arguments),e!==i.CORNER&&e!==i.CORNERS&&e!==i.RADIUS&&e!==i.CENTER||(this._renderer._ellipseMode=e),this},a.default.prototype.noSmooth=function(){return this.setAttributes("antialias",!1),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!1),this},a.default.prototype.rectMode=function(e){return a.default._validateParameters("rectMode",arguments),e!==i.CORNER&&e!==i.CORNERS&&e!==i.RADIUS&&e!==i.CENTER||(this._renderer._rectMode=e),this},a.default.prototype.smooth=function(){return this.setAttributes("antialias",!0),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!0),this},a.default.prototype.strokeCap=function(e){return a.default._validateParameters("strokeCap",arguments),e!==i.ROUND&&e!==i.SQUARE&&e!==i.PROJECT||this._renderer.strokeCap(e),this},a.default.prototype.strokeJoin=function(e){return a.default._validateParameters("strokeJoin",arguments),e!==i.ROUND&&e!==i.BEVEL&&e!==i.MITER||this._renderer.strokeJoin(e),this},a.default.prototype.strokeWeight=function(e){return a.default._validateParameters("strokeWeight",arguments),this._renderer.strokeWeight(e),this};var s=a.default;r.default=s},{"../constants":22,"../main":32}],41:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../main"))&&n.__esModule?n:{default:n};e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),o.default.prototype.bezier=function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("bezier",r),(this._renderer._doStroke||this._renderer._doFill)&&(e=this._renderer).bezier.apply(e,r),this},o.default.prototype.bezierDetail=function(e){return o.default._validateParameters("bezierDetail",arguments),this._bezierDetail=e,this},o.default.prototype.bezierPoint=function(e,t,r,n,a){o.default._validateParameters("bezierPoint",arguments);var i=1-a;return Math.pow(i,3)*e+3*Math.pow(i,2)*a*t+3*i*Math.pow(a,2)*r+Math.pow(a,3)*n},o.default.prototype.bezierTangent=function(e,t,r,n,a){o.default._validateParameters("bezierTangent",arguments);var i=1-a;return 3*n*Math.pow(a,2)-3*r*Math.pow(a,2)+6*r*i*a-6*t*i*a+3*t*Math.pow(i,2)-3*e*Math.pow(i,2)},o.default.prototype.curve=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return o.default._validateParameters("curve",t),this._renderer._doStroke&&(n=this._renderer).curve.apply(n,t),this},o.default.prototype.curveDetail=function(e){return o.default._validateParameters("curveDetail",arguments),this._curveDetail=e<3?3:e,this},o.default.prototype.curveTightness=function(e){return o.default._validateParameters("curveTightness",arguments),this._renderer._curveTightness=e,this},o.default.prototype.curvePoint=function(e,t,r,n,a){o.default._validateParameters("curvePoint",arguments);var i=a*a*a,s=a*a;return e*(-.5*i+s-.5*a)+t*(1.5*i-2.5*s+1)+r*(-1.5*i+2*s+.5*a)+n*(.5*i-.5*s)},o.default.prototype.curveTangent=function(e,t,r,n,a){o.default._validateParameters("curveTangent",arguments);var i=a*a;return e*(-3*i/2+2*a-.5)+t*(9*i/2-5*a)+r*(-9*i/2+4*a+.5)+n*(3*i/2-a)};var a=o.default;r.default=a},{"../friendly_errors/fes_core":24,"../friendly_errors/file_errors":25,"../friendly_errors/validate_params":27,"../main":32}],42:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../constants")),s=null,l=[],p=[],u=!1,c=!1,d=!1,h=!1,m=!0;a.default.prototype.beginContour=function(){return p=[],h=!0,this},a.default.prototype.beginShape=function(e){var t;return a.default._validateParameters("beginShape",arguments),this._renderer.isP3D?(t=this._renderer).beginShape.apply(t,arguments):(s=e===i.POINTS||e===i.LINES||e===i.TRIANGLES||e===i.TRIANGLE_FAN||e===i.TRIANGLE_STRIP||e===i.QUADS||e===i.QUAD_STRIP?e:null,l=[],p=[]),this},a.default.prototype.bezierVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;if(a.default._validateParameters("bezierVertex",t),this._renderer.isP3D)(n=this._renderer).bezierVertex.apply(n,t);else if(0===l.length)a.default._friendlyError("vertex() must be used once before calling bezierVertex()","bezierVertex");else{u=!0;for(var o=[],i=0;i<t.length;i++)o[i]=t[i];o.isVert=!1,h?p.push(o):l.push(o)}return this},a.default.prototype.curveVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return a.default._validateParameters("curveVertex",t),this._renderer.isP3D?(n=this._renderer).curveVertex.apply(n,t):(c=!0,this.vertex(t[0],t[1])),this},a.default.prototype.endContour=function(){var e=p[0].slice();e.isVert=p[0].isVert,e.moveTo=!1,p.push(e),m&&(l.push(l[0]),m=!1);for(var t=0;t<p.length;t++)l.push(p[t]);return this},a.default.prototype.endShape=function(e){if(a.default._validateParameters("endShape",arguments),this._renderer.isP3D)this._renderer.endShape(e,c,u,d,h,s);else{if(0===l.length)return this;if(!this._renderer._doStroke&&!this._renderer._doFill)return this;var t=e===i.CLOSE;t&&!h&&l.push(l[0]),this._renderer.endShape(e,l,c,u,d,h,s),m=!(h=d=u=c=!1),t&&l.pop()}return this},a.default.prototype.quadraticVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(a.default._validateParameters("quadraticVertex",t),this._renderer.isP3D){var n;(n=this._renderer).quadraticVertex.apply(n,t)}else{if(this._contourInited){var o={};return o.x=t[0],o.y=t[1],o.x3=t[2],o.y3=t[3],o.type=i.QUADRATIC,this._contourVertices.push(o),this}if(0<l.length){d=!0;for(var s=[],u=0;u<t.length;u++)s[u]=t[u];s.isVert=!1,h?p.push(s):l.push(s)}else a.default._friendlyError("vertex() must be used once before calling quadraticVertex()","quadraticVertex")}return this},a.default.prototype.vertex=function(e,t,r,n,o){if(this._renderer.isP3D){var a;(a=this._renderer).vertex.apply(a,arguments)}else{var i=[];i.isVert=!0,i[0]=e,i[1]=t,i[2]=0,i[3]=0,i[4]=0,i[5]=this._renderer._getFill(),i[6]=this._renderer._getStroke(),r&&(i.moveTo=r),h?(0===p.length&&(i.moveTo=!0),p.push(i)):l.push(i)}return this};var f=a.default;r.default=f},{"../constants":22,"../main":32}],43:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)},"undefined"==typeof Uint8ClampedArray||Uint8ClampedArray.prototype.slice||Object.defineProperty(Uint8ClampedArray.prototype,"slice",{value:Array.prototype.slice,writable:!0,configurable:!0,enumerable:!1}),function(){if(!Object.assign){var e=Object.keys,t=Object.defineProperty,r="function"==typeof Symbol&&"symbol"===n(Symbol()),o=Object.prototype.propertyIsEnumerable,a=function(e){return function(t){return o.call(e,t)}};t(Object,"assign",{value:function(t,n){if(null==t)throw new TypeError("target must be an object");var o,i,s,l,p=Object(t);for(o=1;o<arguments.length;++o)for(i=Object(arguments[o]),l=e(i),r&&Object.getOwnPropertySymbols&&l.push.apply(l,Object.getOwnPropertySymbols(i).filter(a(i))),s=0;s<l.length;++s)p[l[s]]=i[l[s]];return p},configurable:!0,enumerable:!1,writable:!0})}}()},{}],44:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.prototype.noLoop=function(){this._loop=!1},o.default.prototype.loop=function(){this._loop||(this._loop=!0,this._setupDone&&this._draw())},o.default.prototype.isLooping=function(){return this._loop},o.default.prototype.push=function(){this._styles.push({props:{_colorMode:this._colorMode},renderer:this._renderer.push()})},o.default.prototype.pop=function(){var e=this._styles.pop();e?(this._renderer.pop(e.renderer),Object.assign(this,e.props)):console.warn("pop() was called without matching push()")},o.default.prototype.redraw=function(e){if(!this._inUserDraw&&this._setupDone){var t=parseInt(e);(isNaN(t)||t<1)&&(t=1);var r=this._isGlobal?window:this,n=r.setup,o=r.draw;if("function"==typeof o){void 0===n&&r.scale(r._pixelDensity,r._pixelDensity);for(var a=function(e){e.call(r)},i=0;i<t;i++){r.resetMatrix(),r._renderer.isP3D&&r._renderer._update(),r._setProperty("frameCount",r.frameCount+1),r._registeredMethods.pre.forEach(a),this._inUserDraw=!0;try{o()}finally{this._inUserDraw=!1}r._registeredMethods.post.forEach(a)}}}};var a=o.default;r.default=a},{"./main":32}],45:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("./main"))&&n.__esModule?n:{default:n};o.default.prototype.applyMatrix=function(e,t,r,n,o,a){var i;return(i=this._renderer).applyMatrix.apply(i,arguments),this},o.default.prototype.resetMatrix=function(){return this._renderer.resetMatrix(),this},o.default.prototype.rotate=function(e,t){return o.default._validateParameters("rotate",arguments),this._renderer.rotate(this._toRadians(e),t),this},o.default.prototype.rotateX=function(e){return this._assert3d("rotateX"),o.default._validateParameters("rotateX",arguments),this._renderer.rotateX(this._toRadians(e)),this},o.default.prototype.rotateY=function(e){return this._assert3d("rotateY"),o.default._validateParameters("rotateY",arguments),this._renderer.rotateY(this._toRadians(e)),this},o.default.prototype.rotateZ=function(e){return this._assert3d("rotateZ"),o.default._validateParameters("rotateZ",arguments),this._renderer.rotateZ(this._toRadians(e)),this},o.default.prototype.scale=function(e,t,r){if(o.default._validateParameters("scale",arguments),e instanceof o.default.Vector){var n=e;e=n.x,t=n.y,r=n.z}else if(e instanceof Array){var a=e;e=a[0],t=a[1],r=a[2]||1}return isNaN(t)?t=r=e:isNaN(r)&&(r=1),this._renderer.scale.call(this._renderer,e,t,r),this},o.default.prototype.shearX=function(e){o.default._validateParameters("shearX",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,0,Math.tan(t),1,0,0),this},o.default.prototype.shearY=function(e){o.default._validateParameters("shearY",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,Math.tan(t),0,1,0,0),this},o.default.prototype.translate=function(e,t,r){return o.default._validateParameters("translate",arguments),this._renderer.isP3D?this._renderer.translate(e,t,r):this._renderer.translate(e,t),this};var a=o.default;r.default=a},{"./main":32}],46:[function(e,t,r){"use strict";var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o.default.prototype.storeItem=function(e,t){"string"!=typeof e&&console.log("The argument that you passed to storeItem() - ".concat(e," is not a string.")),e.endsWith("p5TypeID")&&console.log("The argument that you passed to storeItem() - ".concat(e," must not end with 'p5TypeID'.")),void 0===t&&console.log("You cannot store undefined variables using storeItem().");var r=i(t);switch(r){case"number":case"boolean":t=t.toString();break;case"object":t instanceof o.default.Color?r="p5.Color":t instanceof o.default.Vector&&(r="p5.Vector",t=[t.x,t.y,t.z]),t=JSON.stringify(t)}localStorage.setItem(e,t);var n="".concat(e,"p5TypeID");localStorage.setItem(n,r)},o.default.prototype.getItem=function(e){var t=localStorage.getItem(e),r=localStorage.getItem("".concat(e,"p5TypeID"));if(void 0===r)console.log("Unable to determine type of item stored under ".concat(e,"in local storage. Did you save the item with something other than setItem()?"));else if(null!==t)switch(r){case"number":t=parseInt(t);break;case"boolean":t="true"===t;break;case"object":t=JSON.parse(t);break;case"p5.Color":t=JSON.parse(t),t=this.color.apply(this,a(t.levels));break;case"p5.Vector":t=JSON.parse(t),t=this.createVector.apply(this,a(t))}return t},o.default.prototype.clearStorage=function(){localStorage.clear()},o.default.prototype.removeItem=function(e){"string"!=typeof e&&console.log("The argument that you passed to removeItem() - ".concat(e," is not a string.")),localStorage.removeItem(e),localStorage.removeItem("".concat(e,"p5TypeID"))}},{"../core/main":32}],47:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.createStringDict=function(e,t){return o.default._validateParameters("createStringDict",arguments),new o.default.StringDict(e,t)},o.default.prototype.createNumberDict=function(e,t){return o.default._validateParameters("createNumberDict",arguments),new o.default.NumberDict(e,t)},o.default.TypedDict=function(e,t){return e instanceof Object?this.data=e:(this.data={},this.data[e]=t),this},o.default.TypedDict.prototype.size=function(){return Object.keys(this.data).length},o.default.TypedDict.prototype.hasKey=function(e){return this.data.hasOwnProperty(e)},o.default.TypedDict.prototype.get=function(e){if(this.data.hasOwnProperty(e))return this.data[e];console.log("".concat(e," does not exist in this Dictionary"))},o.default.TypedDict.prototype.set=function(e,t){this._validate(t)?this.data[e]=t:console.log("Those values dont work for this dictionary type.")},o.default.TypedDict.prototype._addObj=function(e){for(var t in e)this.set(t,e[t])},o.default.TypedDict.prototype.create=function(e,t){e instanceof Object&&void 0===t?this._addObj(e):void 0!==e?this.set(e,t):console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair")},o.default.TypedDict.prototype.clear=function(){this.data={}},o.default.TypedDict.prototype.remove=function(e){if(!this.data.hasOwnProperty(e))throw new Error("".concat(e," does not exist in this Dictionary"));delete this.data[e]},o.default.TypedDict.prototype.print=function(){for(var e in this.data)console.log("key:".concat(e," value:").concat(this.data[e]))},o.default.TypedDict.prototype.saveTable=function(e){var t="";for(var r in this.data)t+="".concat(r,",").concat(this.data[r],"\n");var n=new Blob([t],{type:"text/csv"});o.default.prototype.downloadFile(n,e||"mycsv","csv")},o.default.TypedDict.prototype.saveJSON=function(e,t){o.default.prototype.saveJSON(this.data,e,t)},o.default.TypedDict.prototype._validate=function(e){return!0},o.default.StringDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default.TypedDict.apply(this,t)},o.default.StringDict.prototype=Object.create(o.default.TypedDict.prototype),o.default.StringDict.prototype._validate=function(e){return"string"==typeof e},o.default.NumberDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default.TypedDict.apply(this,t)},o.default.NumberDict.prototype=Object.create(o.default.TypedDict.prototype),o.default.NumberDict.prototype._validate=function(e){return"number"==typeof e},o.default.NumberDict.prototype.add=function(e,t){this.data.hasOwnProperty(e)?this.data[e]+=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},o.default.NumberDict.prototype.sub=function(e,t){this.add(e,-t)},o.default.NumberDict.prototype.mult=function(e,t){this.data.hasOwnProperty(e)?this.data[e]*=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},o.default.NumberDict.prototype.div=function(e,t){this.data.hasOwnProperty(e)?this.data[e]/=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},o.default.NumberDict.prototype._valueTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");if(1===Object.keys(this.data).length)return this.data[Object.keys(this.data)[0]];var t=this.data[Object.keys(this.data)[0]];for(var r in this.data)this.data[r]*e<t*e&&(t=this.data[r]);return t},o.default.NumberDict.prototype.minValue=function(){return this._valueTest(1)},o.default.NumberDict.prototype.maxValue=function(){return this._valueTest(-1)},o.default.NumberDict.prototype._keyTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to use minValue on an empty NumberDict");if(1===Object.keys(this.data).length)return Object.keys(this.data)[0];for(var t=Object.keys(this.data)[0],r=1;r<Object.keys(this.data).length;r++)Object.keys(this.data)[r]*e<t*e&&(t=Object.keys(this.data)[r]);return t},o.default.NumberDict.prototype.minKey=function(){return this._keyTest(1)},o.default.NumberDict.prototype.maxKey=function(){return this._keyTest(-1)};var a=o.default.TypedDict;r.default=a},{"../core/main":32}],48:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,r){(t._userNode?t._userNode:document.body).appendChild(e);var n=r?new o.default.MediaElement(e,t):new o.default.Element(e,t);return t._elements.push(n),n}function s(e,t,r,n){var o=document.createElement(t);"string"==typeof(r=r||"")&&(r=[r]);var a=!0,s=!1,l=void 0;try{for(var p,u=r[Symbol.iterator]();!(a=(p=u.next()).done);a=!0){var c=p.value,d=document.createElement("source");d.setAttribute("src",c),o.appendChild(d)}}catch(e){s=!0,l=e}finally{try{a||null==u.return||u.return()}finally{if(s)throw l}}"function"==typeof n&&o.addEventListener("canplaythrough",(function e(){n(),o.removeEventListener("canplaythrough",e)}));var h=i(o,e,!0);return h.loadedmetadata=!1,o.addEventListener("loadedmetadata",(function(){h.width=o.videoWidth,h.height=o.videoHeight,0===h.elt.width&&(h.elt.width=o.videoWidth),0===h.elt.height&&(h.elt.height=o.videoHeight),h.presetPlaybackRate&&(h.elt.playbackRate=h.presetPlaybackRate,delete h.presetPlaybackRate),h.loadedmetadata=!0})),h}function l(e,t,r,n){this.callback=e,this.time=t,this.id=r,this.val=n}o.default.prototype.select=function(e,t){o.default._validateParameters("select",arguments);var r=this._getContainer(t).querySelector(e);return r?this._wrapElement(r):null},o.default.prototype.selectAll=function(e,t){o.default._validateParameters("selectAll",arguments);var r=[],n=this._getContainer(t).querySelectorAll(e);if(n)for(var a=0;a<n.length;a++){var i=this._wrapElement(n[a]);r.push(i)}return r},o.default.prototype._getContainer=function(e){var t=document;return"string"==typeof e?t=document.querySelector(e)||document:e instanceof o.default.Element?t=e.elt:e instanceof HTMLElement&&(t=e),t},o.default.prototype._wrapElement=function(e){var t=Array.prototype.slice.call(e.children);if("INPUT"!==e.tagName||"checkbox"!==e.type)return"VIDEO"===e.tagName||"AUDIO"===e.tagName?new o.default.MediaElement(e,this):"SELECT"===e.tagName?this.createSelect(new o.default.Element(e,this)):0<t.length&&t.every((function(e){return"INPUT"===e.tagName||"LABEL"===e.tagName}))?this.createRadio(new o.default.Element(e,this)):new o.default.Element(e,this);var r=new o.default.Element(e,this);return r.checked=function(){return 0===arguments.length?this.elt.checked:(this.elt.checked=!!arguments[0],this)},r},o.default.prototype.removeElements=function(e){o.default._validateParameters("removeElements",arguments),this._elements.filter((function(e){return!(e.elt instanceof HTMLCanvasElement)})).map((function(e){return e.remove()}))},o.default.Element.prototype.changed=function(e){return o.default.Element._adjustListener("change",e,this),this},o.default.Element.prototype.input=function(e){return o.default.Element._adjustListener("input",e,this),this},o.default.prototype.createDiv=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("div");return t.innerHTML=e,i(t,this)},o.default.prototype.createP=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("p");return t.innerHTML=e,i(t,this)},o.default.prototype.createSpan=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("span");return t.innerHTML=e,i(t,this)},o.default.prototype.createImg=function(){o.default._validateParameters("createImg",arguments);var e,t=document.createElement("img"),r=arguments;return 1<r.length&&"string"==typeof r[1]&&(t.alt=r[1]),2<r.length&&"string"==typeof r[2]&&(t.crossOrigin=r[2]),t.src=r[0],e=i(t,this),t.addEventListener("load",(function(){e.width=t.offsetWidth||t.width,e.height=t.offsetHeight||t.height;var n=r[r.length-1];"function"==typeof n&&n(e)})),e},o.default.prototype.createA=function(e,t,r){o.default._validateParameters("createA",arguments);var n=document.createElement("a");return n.href=e,n.innerHTML=t,r&&(n.target=r),i(n,this)},o.default.prototype.createSlider=function(e,t,r,n){o.default._validateParameters("createSlider",arguments);var a=document.createElement("input");return a.type="range",a.min=e,a.max=t,0===n?a.step=1e-18:n&&(a.step=n),"number"==typeof r&&(a.value=r),i(a,this)},o.default.prototype.createButton=function(e,t){o.default._validateParameters("createButton",arguments);var r=document.createElement("button");return r.innerHTML=e,t&&(r.value=t),i(r,this)},o.default.prototype.createCheckbox=function(){o.default._validateParameters("createCheckbox",arguments);var e=document.createElement("div"),t=document.createElement("input");t.type="checkbox",e.appendChild(t);var r=i(e,this);if(r.checked=function(){var e=r.elt.getElementsByTagName("input")[0];if(e){if(0===arguments.length)return e.checked;e.checked=!!arguments[0]}return r},this.value=function(e){return r.value=e,this},arguments[0]){var n=Math.random().toString(36).slice(2),a=document.createElement("label");t.setAttribute("id",n),a.htmlFor=n,r.value(arguments[0]),a.appendChild(document.createTextNode(arguments[0])),e.appendChild(a)}return arguments[1]&&(t.checked=!0),r},o.default.prototype.createSelect=function(){var e;o.default._validateParameters("createSelect",arguments);var t=arguments[0];if(t instanceof o.default.Element&&t.elt instanceof HTMLSelectElement)e=t,this.elt=t.elt;else if(t instanceof HTMLSelectElement)e=i(t,this),this.elt=t;else{var r=document.createElement("select");t&&"boolean"==typeof t&&r.setAttribute("multiple","true"),e=i(r,this),this.elt=r}return e.option=function(e,t){var r;if(void 0!==e){for(var n=0;n<this.elt.length;n+=1)if(this.elt[n].innerHTML===e){r=n;break}if(void 0!==r)!1===t?this.elt.remove(r):this.elt[r].value=t;else{var o=document.createElement("option");o.innerHTML=e,o.value=void 0===t?e:t,this.elt.appendChild(o),this._pInst._elements.push(o)}}},e.selected=function(e){if(void 0!==e){for(var t=0;t<this.elt.length;t+=1)this.elt[t].value.toString()===e.toString()&&(this.elt.selectedIndex=t);return this}if(this.elt.getAttribute("multiple")){var r=[],n=!0,o=!1,a=void 0;try{for(var i,s=this.elt.selectedOptions[Symbol.iterator]();!(n=(i=s.next()).done);n=!0){var l=i.value;r.push(l.value)}}catch(e){o=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return r}return this.elt.value},e.disable=function(e){if("string"==typeof e)for(var t=0;t<this.elt.length;t++)this.elt[t].value.toString()===e&&(this.elt[t].disabled=!0,this.elt[t].selected=!1);else this.elt.disabled=!0;return this},e},o.default.prototype.createRadio=function(){var e,t,r=arguments[0];r instanceof HTMLDivElement||r instanceof HTMLSpanElement?(e=r,"string"==typeof arguments[1]&&(t=arguments[1])):("string"==typeof r&&(t=r),e=document.createElement("div"));var n=i(this.elt=e,this);function o(e){return e instanceof HTMLInputElement&&"radio"===e.type}function a(e){return e.nextElementSibling instanceof HTMLLabelElement}return n._name=t||"radioOption",n._getOptionsArray=function(){return Array.from(this.elt.children).filter(o)},n.option=function(e,t){var r,o,i=!0,s=!1,l=void 0;try{for(var p,u=n._getOptionsArray()[Symbol.iterator]();!(i=(p=u.next()).done);i=!0){var c=p.value;if(c.value===e){r=c;break}}}catch(e){s=!0,l=e}finally{try{i||null==u.return||u.return()}finally{if(s)throw l}}return void 0===r&&((r=document.createElement("input")).setAttribute("type","radio"),r.setAttribute("value",e),this.elt.appendChild(r)),a(r)?o=r.nextElementSibling:(o=document.createElement("label"),r.insertAdjacentElement("afterend",o)),o.innerHTML=void 0===t?e:t,r.setAttribute("name",n._name),r},n.remove=function(e){var t=!0,r=!1,o=void 0;try{for(var i,s=n._getOptionsArray()[Symbol.iterator]();!(t=(i=s.next()).done);t=!0){var l=i.value;if(l.value===e)return a(l)&&l.nextElementSibling.remove(),void l.remove()}}catch(e){r=!0,o=e}finally{try{t||null==s.return||s.return()}finally{if(r)throw o}}},n.value=function(){var e="",t=!0,r=!1,o=void 0;try{for(var a,i=n._getOptionsArray()[Symbol.iterator]();!(t=(a=i.next()).done);t=!0){var s=a.value;if(s.checked){e=s.value;break}}}catch(e){r=!0,o=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw o}}return e},n.selected=function(e){var t=null;if(void 0===e){var r=!0,o=!1,a=void 0;try{for(var i,s=n._getOptionsArray()[Symbol.iterator]();!(r=(i=s.next()).done);r=!0){var l=i.value;if(l.checked){t=l;break}}}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}}else{var p=!0,u=!1,c=void 0;try{for(var d,h=n._getOptionsArray()[Symbol.iterator]();!(p=(d=h.next()).done);p=!0){var m=d.value;m.value===e&&(m.setAttribute("checked",!0),t=m)}}catch(e){u=!0,c=e}finally{try{p||null==h.return||h.return()}finally{if(u)throw c}}}return t},n.disable=function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=!0,r=!1,o=void 0;try{for(var a,i=n._getOptionsArray()[Symbol.iterator]();!(t=(a=i.next()).done);t=!0)a.value.setAttribute("disabled",e)}catch(e){r=!0,o=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw o}}},n},o.default.prototype.createColorPicker=function(e){o.default._validateParameters("createColorPicker",arguments);var t,r=document.createElement("input");return r.type="color",e?e instanceof o.default.Color?r.value=e.toString("#rrggbb"):(o.default.prototype._colorMode="rgb",o.default.prototype._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},r.value=o.default.prototype.color(e).toString("#rrggbb")):r.value="#000000",(t=i(r,this)).color=function(){return e&&(e.mode&&(o.default.prototype._colorMode=e.mode),e.maxes&&(o.default.prototype._colorMaxes=e.maxes)),o.default.prototype.color(this.elt.value)},t},o.default.prototype.createInput=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"text";o.default._validateParameters("createInput",arguments);var r=document.createElement("input");return r.setAttribute("value",e),r.setAttribute("type",t),i(r,this)},o.default.prototype.createFileInput=function(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1];if(o.default._validateParameters("createFileInput",arguments),window.File&&window.FileReader&&window.FileList&&window.Blob){var r=document.createElement("input");return r.setAttribute("type","file"),t&&r.setAttribute("multiple",!0),r.addEventListener("change",(function(t){var r=!0,n=!1,a=void 0;try{for(var i,s=t.target.files[Symbol.iterator]();!(r=(i=s.next()).done);r=!0){var l=i.value;o.default.File._load(l,e)}}catch(t){n=!0,a=t}finally{try{r||null==s.return||s.return()}finally{if(n)throw a}}}),!1),i(r,this)}console.log("The File APIs are not fully supported in this browser. Cannot create element.")},o.default.prototype.createVideo=function(e,t){return o.default._validateParameters("createVideo",arguments),s(this,"video",e,t)},o.default.prototype.createAudio=function(e,t){return o.default._validateParameters("createAudio",arguments),s(this,"audio",e,t)},o.default.prototype.VIDEO="video",o.default.prototype.AUDIO="audio",void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return t?new Promise((function(r,n){t.call(navigator,e,r,n)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}),o.default.prototype.createCapture=function(){if(o.default._validateParameters("createCapture",arguments),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new DOMException("getUserMedia not supported in this browser");var e,t,r=!0,n=!0,s=!0,l=!1,p=void 0;try{for(var u,c=arguments[Symbol.iterator]();!(s=(u=c.next()).done);s=!0){var d=u.value;d===o.default.prototype.VIDEO?n=!1:d===o.default.prototype.AUDIO?r=!1:"object"===a(d)?e=d:"function"==typeof d&&(t=d)}}catch(e){l=!0,p=e}finally{try{s||null==c.return||c.return()}finally{if(l)throw p}}e=e||{video:r,audio:n};var h=document.createElement("video");h.setAttribute("playsinline",""),navigator.mediaDevices.getUserMedia(e).then((function(e){try{"srcObject"in h?h.srcObject=e:h.src=window.URL.createObjectURL(e)}catch(t){h.src=e}}),console.log);var m=i(h,this,!0);return m.loadedmetadata=!1,h.addEventListener("loadedmetadata",(function(){h.play(),h.width?(m.width=h.width,m.height=h.height):(m.width=m.elt.width=h.videoWidth,m.height=m.elt.height=h.videoHeight),m.loadedmetadata=!0,t&&t(h.srcObject)})),m},o.default.prototype.createElement=function(e,t){o.default._validateParameters("createElement",arguments);var r=document.createElement(e);return void 0!==t&&(r.innerHTML=t),i(r,this)},o.default.Element.prototype.addClass=function(e){return this.elt.className?this.hasClass(e)||(this.elt.className=this.elt.className+" "+e):this.elt.className=e,this},o.default.Element.prototype.removeClass=function(e){return this.elt.classList.remove(e),this},o.default.Element.prototype.hasClass=function(e){return this.elt.classList.contains(e)},o.default.Element.prototype.toggleClass=function(e){return this.elt.classList.contains(e)?this.elt.classList.remove(e):this.elt.classList.add(e),this},o.default.Element.prototype.child=function(e){return void 0===e?this.elt.childNodes:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof o.default.Element&&(e=e.elt),e instanceof HTMLElement&&this.elt.appendChild(e),this)},o.default.Element.prototype.center=function(e){var t=this.elt.style.display,r="none"===this.elt.style.display,n="none"===this.parent().style.display,o={x:this.elt.offsetLeft,y:this.elt.offsetTop};r&&this.show(),n&&this.parent().show(),this.elt.style.display="block",this.position(0,0);var a=Math.abs(this.parent().offsetWidth-this.elt.offsetWidth),i=Math.abs(this.parent().offsetHeight-this.elt.offsetHeight);return"both"===e||void 0===e?this.position(a/2+this.parent().offsetLeft,i/2+this.parent().offsetTop):"horizontal"===e?this.position(a/2+this.parent().offsetLeft,o.y):"vertical"===e&&this.position(o.x,i/2+this.parent().offsetTop),this.style("display",t),r&&this.hide(),n&&this.parent().hide(),this},o.default.Element.prototype.html=function(){return 0===arguments.length?this.elt.innerHTML:(arguments[1]?this.elt.insertAdjacentHTML("beforeend",arguments[0]):this.elt.innerHTML=arguments[0],this)},o.default.Element.prototype.position=function(){if(0===arguments.length)return{x:this.elt.offsetLeft,y:this.elt.offsetTop};var e="absolute";return"static"!==arguments[2]&&"fixed"!==arguments[2]&&"relative"!==arguments[2]&&"sticky"!==arguments[2]&&"initial"!==arguments[2]&&"inherit"!==arguments[2]||(e=arguments[2]),this.elt.style.position=e,this.elt.style.left=arguments[0]+"px",this.elt.style.top=arguments[1]+"px",this.x=arguments[0],this.y=arguments[1],this},o.default.Element.prototype._translate=function(){this.elt.style.position="absolute";var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/translate3d\(.*\)/g,"")).replace(/translate[X-Z]?\(.*\)/g,"")),2===arguments.length?this.elt.style.transform="translate("+arguments[0]+"px, "+arguments[1]+"px)":2<arguments.length&&(this.elt.style.transform="translate3d("+arguments[0]+"px,"+arguments[1]+"px,"+arguments[2]+"px)",this.elt.parentElement.style.perspective=3===arguments.length?"1000px":arguments[3]+"px"),this.elt.style.transform+=e,this},o.default.Element.prototype._rotate=function(){var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/rotate3d\(.*\)/g,"")).replace(/rotate[X-Z]?\(.*\)/g,"")),1===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg)":2===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg, "+arguments[1]+"deg)":3===arguments.length&&(this.elt.style.transform="rotateX("+arguments[0]+"deg)",this.elt.style.transform+="rotateY("+arguments[1]+"deg)",this.elt.style.transform+="rotateZ("+arguments[2]+"deg)"),this.elt.style.transform+=e,this},o.default.Element.prototype.style=function(e,t){if(t instanceof o.default.Color&&(t="rgba("+t.levels[0]+","+t.levels[1]+","+t.levels[2]+","+t.levels[3]/255+")"),void 0===t){if(-1===e.indexOf(":"))return window.getComputedStyle(this.elt).getPropertyValue(e);for(var r=e.split(";"),n=0;n<r.length;n++){var a=r[n].split(":");a[0]&&a[1]&&(this.elt.style[a[0].trim()]=a[1].trim())}}else if(this.elt.style[e]=t,"width"===e||"height"===e||"left"===e||"top"===e){var i=window.getComputedStyle(this.elt).getPropertyValue(e).replace(/\D+/g,"");this[e]=parseInt(i,10)}return this},o.default.Element.prototype.attribute=function(e,t){if(null==this.elt.firstChild||"checkbox"!==this.elt.firstChild.type&&"radio"!==this.elt.firstChild.type)return void 0===t?this.elt.getAttribute(e):(this.elt.setAttribute(e,t),this);if(void 0===t)return this.elt.firstChild.getAttribute(e);for(var r=0;r<this.elt.childNodes.length;r++)this.elt.childNodes[r].setAttribute(e,t)},o.default.Element.prototype.removeAttribute=function(e){if(null!=this.elt.firstChild&&("checkbox"===this.elt.firstChild.type||"radio"===this.elt.firstChild.type))for(var t=0;t<this.elt.childNodes.length;t++)this.elt.childNodes[t].removeAttribute(e);return this.elt.removeAttribute(e),this},o.default.Element.prototype.value=function(){return 0<arguments.length?(this.elt.value=arguments[0],this):"range"===this.elt.type?parseFloat(this.elt.value):this.elt.value},o.default.Element.prototype.show=function(){return this.elt.style.display="block",this},o.default.Element.prototype.hide=function(){return this.elt.style.display="none",this},o.default.Element.prototype.size=function(e,t){if(0===arguments.length)return{width:this.elt.offsetWidth,height:this.elt.offsetHeight};var r=e,n=t,a=o.default.prototype.AUTO;if(r!==a||n!==a){if(r===a?r=t*this.width/this.height:n===a&&(n=e*this.height/this.width),this.elt instanceof HTMLCanvasElement){var i,s={},l=this.elt.getContext("2d");for(i in l)s[i]=l[i];for(i in this.elt.setAttribute("width",r*this._pInst._pixelDensity),this.elt.setAttribute("height",n*this._pInst._pixelDensity),this.elt.style.width=r+"px",this.elt.style.height=n+"px",this._pInst.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),s)this.elt.getContext("2d")[i]=s[i]}else this.elt.style.width=r+"px",this.elt.style.height=n+"px",this.elt.width=r,this.elt.height=n;this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this._pInst&&this._pInst._curElement&&this._pInst._curElement.elt===this.elt&&(this._pInst._setProperty("width",this.elt.offsetWidth),this._pInst._setProperty("height",this.elt.offsetHeight))}return this},o.default.Element.prototype.remove=function(){this instanceof o.default.MediaElement&&this.elt.srcObject.getTracks().forEach((function(e){e.stop()}));var e=this._pInst._elements.indexOf(this);for(var t in-1!==e&&this._pInst._elements.splice(e,1),this._events)this.elt.removeEventListener(t,this._events[t]);this.elt&&this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt)},o.default.Element.prototype.drop=function(e,t){if(window.File&&window.FileReader&&window.FileList&&window.Blob){if(!this._dragDisabled){this._dragDisabled=!0;var r=function(e){e.preventDefault()};this.elt.addEventListener("dragover",r),this.elt.addEventListener("dragleave",r)}o.default.Element._attachListener("drop",(function(r){r.preventDefault(),"function"==typeof t&&t.call(this,r);for(var n=r.dataTransfer.files,a=0;a<n.length;a++){var i=n[a];o.default.File._load(i,e)}}),this)}else console.log("The File APIs are not fully supported in this browser.");return this},o.default.MediaElement=function(e,t){o.default.Element.call(this,e,t);var r=this;this.elt.crossOrigin="anonymous",this._prevTime=0,this._cueIDCounter=0,this._cues=[],(this._pixelsState=this)._pixelDensity=1,this._modified=!1,Object.defineProperty(r,"src",{get:function(){var e=r.elt.children[0].src,t=r.elt.src===window.location.href?"":r.elt.src;return e===window.location.href?t:e},set:function(t){for(var n=0;n<r.elt.children.length;n++)r.elt.removeChild(r.elt.children[n]);var o=document.createElement("source");o.src=t,e.appendChild(o),r.elt.src=t,r.modified=!0}}),r._onended=function(){},r.elt.onended=function(){r._onended(r)}},o.default.MediaElement.prototype=Object.create(o.default.Element.prototype),o.default.MediaElement.prototype.play=function(){var e;return this.elt.currentTime===this.elt.duration&&(this.elt.currentTime=0),1<this.elt.readyState||this.elt.load(),(e=this.elt.play())&&e.catch&&e.catch((function(e){"NotAllowedError"===e.name?o.default._friendlyAutoplayError(this.src):console.error("Media play method encountered an unexpected error",e)})),this},o.default.MediaElement.prototype.stop=function(){return this.elt.pause(),this.elt.currentTime=0,this},o.default.MediaElement.prototype.pause=function(){return this.elt.pause(),this},o.default.MediaElement.prototype.loop=function(){return this.elt.setAttribute("loop",!0),this.play(),this},o.default.MediaElement.prototype.noLoop=function(){return this.elt.removeAttribute("loop"),this},o.default.MediaElement.prototype._setupAutoplayFailDetection=function(){var e=this,t=setTimeout((function(){return o.default._friendlyAutoplayError(e.src)}),500);this.elt.addEventListener("play",(function(){return clearTimeout(t)}),{passive:!0,once:!0})},o.default.MediaElement.prototype.autoplay=function(e){var t=this,r=this.elt.getAttribute("autoplay");if(this.elt.setAttribute("autoplay",e),e&&!r){var n=function(){return t._setupAutoplayFailDetection()};4===this.elt.readyState?n():this.elt.addEventListener("canplay",n,{passive:!0,once:!0})}return this},o.default.MediaElement.prototype.volume=function(e){if(void 0===e)return this.elt.volume;this.elt.volume=e},o.default.MediaElement.prototype.speed=function(e){if(void 0===e)return this.presetPlaybackRate||this.elt.playbackRate;this.loadedmetadata?this.elt.playbackRate=e:this.presetPlaybackRate=e},o.default.MediaElement.prototype.time=function(e){return void 0===e?this.elt.currentTime:(this.elt.currentTime=e,this)},o.default.MediaElement.prototype.duration=function(){return this.elt.duration},o.default.MediaElement.prototype.pixels=[],o.default.MediaElement.prototype._ensureCanvas=function(){this.canvas||(this.canvas=document.createElement("canvas"),this.drawingContext=this.canvas.getContext("2d"),this.setModified(!0)),this.loadedmetadata&&(this.canvas.width!==this.elt.width&&(this.canvas.width=this.elt.width,this.canvas.height=this.elt.height,this.width=this.canvas.width,this.height=this.canvas.height),this.drawingContext.drawImage(this.elt,0,0,this.canvas.width,this.canvas.height),this.setModified(!0))},o.default.MediaElement.prototype.loadPixels=function(){return this._ensureCanvas(),o.default.Renderer2D.prototype.loadPixels.apply(this,arguments)},o.default.MediaElement.prototype.updatePixels=function(e,t,r,n){return this.loadedmetadata&&(this._ensureCanvas(),o.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,n)),this.setModified(!0),this},o.default.MediaElement.prototype.get=function(){return this._ensureCanvas(),o.default.Renderer2D.prototype.get.apply(this,arguments)},o.default.MediaElement.prototype._getPixel=function(){return this.loadPixels(),o.default.Renderer2D.prototype._getPixel.apply(this,arguments)},o.default.MediaElement.prototype.set=function(e,t,r){this.loadedmetadata&&(this._ensureCanvas(),o.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0))},o.default.MediaElement.prototype.copy=function(){this._ensureCanvas(),o.default.prototype.copy.apply(this,arguments)},o.default.MediaElement.prototype.mask=function(){this.loadPixels(),this.setModified(!0),o.default.Image.prototype.mask.apply(this,arguments)},o.default.MediaElement.prototype.isModified=function(){return this._modified},o.default.MediaElement.prototype.setModified=function(e){this._modified=e},o.default.MediaElement.prototype.onended=function(e){return this._onended=e,this},o.default.MediaElement.prototype.connect=function(e){var t,r;if("function"==typeof o.default.prototype.getAudioContext)t=o.default.prototype.getAudioContext(),r=o.default.soundOut.input;else try{r=(t=e.context).destination}catch(e){throw"connect() is meant to be used with Web Audio API or p5.sound.js"}this.audioSourceNode||(this.audioSourceNode=t.createMediaElementSource(this.elt),this.audioSourceNode.connect(r)),e?e.input?this.audioSourceNode.connect(e.input):this.audioSourceNode.connect(e):this.audioSourceNode.connect(r)},o.default.MediaElement.prototype.disconnect=function(){if(!this.audioSourceNode)throw"nothing to disconnect";this.audioSourceNode.disconnect()},o.default.MediaElement.prototype.showControls=function(){this.elt.style["text-align"]="inherit",this.elt.controls=!0},o.default.MediaElement.prototype.hideControls=function(){this.elt.controls=!1},o.default.MediaElement.prototype.addCue=function(e,t,r){var n=this._cueIDCounter++,o=new l(t,e,n,r);return this._cues.push(o),this.elt.ontimeupdate||(this.elt.ontimeupdate=this._onTimeUpdate.bind(this)),n},o.default.MediaElement.prototype.removeCue=function(e){for(var t=0;t<this._cues.length;t++)this._cues[t].id===e&&(console.log(e),this._cues.splice(t,1));0===this._cues.length&&(this.elt.ontimeupdate=null)},o.default.MediaElement.prototype.clearCues=function(){this._cues=[],this.elt.ontimeupdate=null},o.default.MediaElement.prototype._onTimeUpdate=function(){for(var e=this.time(),t=0;t<this._cues.length;t++){var r=this._cues[t].time,n=this._cues[t].val;this._prevTime<r&&r<=e&&this._cues[t].callback(n)}this._prevTime=e},o.default.File=function(e,t){this.file=e,this._pInst=t;var r=e.type.split("/");this.type=r[0],this.subtype=r[1],this.name=e.name,this.size=e.size,this.data=void 0},o.default.File._createLoader=function(e,t){var r=new FileReader;return r.onload=function(r){var n=new o.default.File(e);if("application/json"===n.file.type)n.data=JSON.parse(r.target.result);else if("text/xml"===n.file.type){var a=(new DOMParser).parseFromString(r.target.result,"text/xml");n.data=new o.default.XML(a.documentElement)}else n.data=r.target.result;t(n)},r},o.default.File._load=function(e,t){if(/^text\//.test(e.type)||"application/json"===e.type)o.default.File._createLoader(e,t).readAsText(e);else if(/^(video|audio)\//.test(e.type)){var r=new o.default.File(e);r.data=URL.createObjectURL(e),t(r)}else o.default.File._createLoader(e,t).readAsDataURL(e)};var p=o.default;r.default=p},{"../core/main":32}],49:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));a.default.prototype.deviceOrientation=1<window.innerWidth/window.innerHeight?"landscape":"portrait",a.default.prototype.accelerationX=0,a.default.prototype.accelerationY=0,a.default.prototype.accelerationZ=0,a.default.prototype.pAccelerationX=0,a.default.prototype.pAccelerationY=0,a.default.prototype.pAccelerationZ=0,a.default.prototype._updatePAccelerations=function(){this._setProperty("pAccelerationX",this.accelerationX),this._setProperty("pAccelerationY",this.accelerationY),this._setProperty("pAccelerationZ",this.accelerationZ)},a.default.prototype.rotationX=0,a.default.prototype.rotationY=0,a.default.prototype.rotationZ=0,a.default.prototype.pRotationX=0,a.default.prototype.pRotationY=0;var s=a.default.prototype.pRotationZ=0,l=0,p=0,u="clockwise",c="clockwise",d="clockwise";a.default.prototype.pRotateDirectionX=void 0,a.default.prototype.pRotateDirectionY=void 0,a.default.prototype.pRotateDirectionZ=void 0,a.default.prototype._updatePRotations=function(){this._setProperty("pRotationX",this.rotationX),this._setProperty("pRotationY",this.rotationY),this._setProperty("pRotationZ",this.rotationZ)},a.default.prototype.turnAxis=void 0;var h=.5,m=30;a.default.prototype.setMoveThreshold=function(e){a.default._validateParameters("setMoveThreshold",arguments),h=e},a.default.prototype.setShakeThreshold=function(e){a.default._validateParameters("setShakeThreshold",arguments),m=e},a.default.prototype._ondeviceorientation=function(e){this._updatePRotations(),this._angleMode===i.radians&&(e.beta=e.beta*(_PI/180),e.gamma=e.gamma*(_PI/180),e.alpha=e.alpha*(_PI/180)),this._setProperty("rotationX",e.beta),this._setProperty("rotationY",e.gamma),this._setProperty("rotationZ",e.alpha),this._handleMotion()},a.default.prototype._ondevicemotion=function(e){this._updatePAccelerations(),this._setProperty("accelerationX",2*e.acceleration.x),this._setProperty("accelerationY",2*e.acceleration.y),this._setProperty("accelerationZ",2*e.acceleration.z),this._handleMotion()},a.default.prototype._handleMotion=function(){90===window.orientation||-90===window.orientation?this._setProperty("deviceOrientation","landscape"):0===window.orientation?this._setProperty("deviceOrientation","portrait"):void 0===window.orientation&&this._setProperty("deviceOrientation","undefined");var e=this.deviceMoved||window.deviceMoved;"function"==typeof e&&(Math.abs(this.accelerationX-this.pAccelerationX)>h||Math.abs(this.accelerationY-this.pAccelerationY)>h||Math.abs(this.accelerationZ-this.pAccelerationZ)>h)&&e();var t=this.deviceTurned||window.deviceTurned;if("function"==typeof t){var r=this.rotationX+180,n=this.pRotationX+180,o=s+180;0<r-n&&r-n<270||r-n<-270?u="clockwise":(r-n<0||270<r-n)&&(u="counter-clockwise"),u!==this.pRotateDirectionX&&(o=r),90<Math.abs(r-o)&&Math.abs(r-o)<270&&(o=r,this._setProperty("turnAxis","X"),t()),this.pRotateDirectionX=u,s=o-180;var a=this.rotationY+180,i=this.pRotationY+180,f=l+180;0<a-i&&a-i<270||a-i<-270?c="clockwise":(a-i<0||270<a-this.pRotationY)&&(c="counter-clockwise"),c!==this.pRotateDirectionY&&(f=a),90<Math.abs(a-f)&&Math.abs(a-f)<270&&(f=a,this._setProperty("turnAxis","Y"),t()),this.pRotateDirectionY=c,l=f-180,0<this.rotationZ-this.pRotationZ&&this.rotationZ-this.pRotationZ<270||this.rotationZ-this.pRotationZ<-270?d="clockwise":(this.rotationZ-this.pRotationZ<0||270<this.rotationZ-this.pRotationZ)&&(d="counter-clockwise"),d!==this.pRotateDirectionZ&&(p=this.rotationZ),90<Math.abs(this.rotationZ-p)&&Math.abs(this.rotationZ-p)<270&&(p=this.rotationZ,this._setProperty("turnAxis","Z"),t()),this.pRotateDirectionZ=d,this._setProperty("turnAxis",void 0)}var y,g,v=this.deviceShaken||window.deviceShaken;"function"==typeof v&&(null!==this.pAccelerationX&&(y=Math.abs(this.accelerationX-this.pAccelerationX),g=Math.abs(this.accelerationY-this.pAccelerationY)),m<y+g&&v())};var f=a.default;r.default=f},{"../core/constants":22,"../core/main":32}],50:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.isKeyPressed=!1,o.default.prototype.keyIsPressed=!1,o.default.prototype.key="",o.default.prototype.keyCode=0,o.default.prototype._onkeydown=function(e){if(!this._downKeys[e.which]){this._setProperty("isKeyPressed",!0),this._setProperty("keyIsPressed",!0),this._setProperty("keyCode",e.which),this._downKeys[e.which]=!0,this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this.keyPressed||window.keyPressed;"function"!=typeof t||e.charCode||!1===t(e)&&e.preventDefault()}},o.default.prototype._onkeyup=function(e){var t=this.keyReleased||window.keyReleased;this._downKeys[e.which]=!1,this._areDownKeys()||(this._setProperty("isKeyPressed",!1),this._setProperty("keyIsPressed",!1)),this._setProperty("_lastKeyCodeTyped",null),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which),this._setProperty("keyCode",e.which),"function"!=typeof t||!1===t(e)&&e.preventDefault()},o.default.prototype._onkeypress=function(e){if(e.which!==this._lastKeyCodeTyped){this._setProperty("_lastKeyCodeTyped",e.which),this._setProperty("key",String.fromCharCode(e.which));var t=this.keyTyped||window.keyTyped;"function"==typeof t&&!1===t(e)&&e.preventDefault()}},o.default.prototype._onblur=function(e){this._downKeys={}},o.default.prototype.keyIsDown=function(e){return o.default._validateParameters("keyIsDown",arguments),this._downKeys[e]||!1},o.default.prototype._areDownKeys=function(){for(var e in this._downKeys)if(this._downKeys.hasOwnProperty(e)&&!0===this._downKeys[e])return!0;return!1};var a=o.default;r.default=a},{"../core/main":32}],51:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));a.default.prototype.movedX=0,a.default.prototype.movedY=0,a.default.prototype._hasMouseInteracted=!1,a.default.prototype.mouseX=0,a.default.prototype.mouseY=0,a.default.prototype.pmouseX=0,a.default.prototype.pmouseY=0,a.default.prototype.winMouseX=0,a.default.prototype.winMouseY=0,a.default.prototype.pwinMouseX=0,a.default.prototype.pwinMouseY=0,a.default.prototype.mouseButton=0,a.default.prototype.mouseIsPressed=!1,a.default.prototype._updateNextMouseCoords=function(e){if(null!==this._curElement&&(!e.touches||0<e.touches.length)){var t=function(e,t,r,n){n&&!n.clientX&&(n.touches?n=n.touches[0]:n.changedTouches&&(n=n.changedTouches[0]));var o=e.getBoundingClientRect(),a=e.scrollWidth/t||1,i=e.scrollHeight/r||1;return{x:(n.clientX-o.left)/a,y:(n.clientY-o.top)/i,winX:n.clientX,winY:n.clientY,id:n.identifier}}(this._curElement.elt,this.width,this.height,e);this._setProperty("movedX",e.movementX),this._setProperty("movedY",e.movementY),this._setProperty("mouseX",t.x),this._setProperty("mouseY",t.y),this._setProperty("winMouseX",t.winX),this._setProperty("winMouseY",t.winY)}this._hasMouseInteracted||(this._updateMouseCoords(),this._setProperty("_hasMouseInteracted",!0))},a.default.prototype._updateMouseCoords=function(){this._setProperty("pmouseX",this.mouseX),this._setProperty("pmouseY",this.mouseY),this._setProperty("pwinMouseX",this.winMouseX),this._setProperty("pwinMouseY",this.winMouseY),this._setProperty("_pmouseWheelDeltaY",this._mouseWheelDeltaY)},a.default.prototype._setMouseButton=function(e){1===e.button?this._setProperty("mouseButton",i.CENTER):2===e.button?this._setProperty("mouseButton",i.RIGHT):this._setProperty("mouseButton",i.LEFT)},a.default.prototype._onmousemove=function(e){var t=this._isGlobal?window:this;this._updateNextMouseCoords(e),this.mouseIsPressed?"function"==typeof t.mouseDragged?!1===t.mouseDragged(e)&&e.preventDefault():"function"==typeof t.touchMoved&&!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseMoved&&!1===t.mouseMoved(e)&&e.preventDefault()},a.default.prototype._onmousedown=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._setMouseButton(e),this._updateNextMouseCoords(e),"function"==typeof t.mousePressed?!1===t.mousePressed(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.touchStarted&&!1===t.touchStarted(e)&&e.preventDefault()},a.default.prototype._onmouseup=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!1),"function"==typeof t.mouseReleased?!1===t.mouseReleased(e)&&e.preventDefault():"function"==typeof t.touchEnded&&!1===t.touchEnded(e)&&e.preventDefault()},a.default.prototype._ondragend=a.default.prototype._onmouseup,a.default.prototype._ondragover=a.default.prototype._onmousemove,a.default.prototype._onclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.mouseClicked&&!1===t.mouseClicked(e)&&e.preventDefault()},a.default.prototype._ondblclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.doubleClicked&&!1===t.doubleClicked(e)&&e.preventDefault()},a.default.prototype._mouseWheelDeltaY=0,a.default.prototype._pmouseWheelDeltaY=0,a.default.prototype._onwheel=function(e){var t=this._isGlobal?window:this;this._setProperty("_mouseWheelDeltaY",e.deltaY),"function"==typeof t.mouseWheel&&(e.delta=e.deltaY,!1===t.mouseWheel(e)&&e.preventDefault())},a.default.prototype.requestPointerLock=function(){var e=this._curElement.elt;return e.requestPointerLock=e.requestPointerLock||e.mozRequestPointerLock,e.requestPointerLock?(e.requestPointerLock(),!0):(console.log("requestPointerLock is not implemented in this browser"),!1)},a.default.prototype.exitPointerLock=function(){document.exitPointerLock()};var s=a.default;r.default=s},{"../core/constants":22,"../core/main":32}],52:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(e,t,r,n,o){var a=4<arguments.length&&void 0!==o?o:0,i=e.getBoundingClientRect(),s=e.scrollWidth/t||1,l=e.scrollHeight/r||1,p=n.touches[a]||n.changedTouches[a];return{x:(p.clientX-i.left)/s,y:(p.clientY-i.top)/l,winX:p.clientX,winY:p.clientY,id:p.identifier}}o.default.prototype.touches=[],o.default.prototype._updateTouchCoords=function(e){if(null!==this._curElement){for(var t=[],r=0;r<e.touches.length;r++)t[r]=a(this._curElement.elt,this.width,this.height,e,r);this._setProperty("touches",t)}},o.default.prototype._ontouchstart=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._updateTouchCoords(e),this._updateNextMouseCoords(e),this._updateMouseCoords(),"function"==typeof t.touchStarted?!1===t.touchStarted(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.mousePressed&&!1===t.mousePressed(e)&&e.preventDefault()},o.default.prototype._ontouchmove=function(e){var t=this._isGlobal?window:this;this._updateTouchCoords(e),this._updateNextMouseCoords(e),"function"==typeof t.touchMoved?!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseDragged&&!1===t.mouseDragged(e)&&e.preventDefault()},o.default.prototype._ontouchend=function(e){this._setProperty("mouseIsPressed",!1),this._updateTouchCoords(e),this._updateNextMouseCoords(e);var t=this._isGlobal?window:this;"function"==typeof t.touchEnded?!1===t.touchEnded(e)&&e.preventDefault():"function"==typeof t.mouseReleased&&!1===t.mouseReleased(e)&&e.preventDefault()};var i=o.default;r.default=i},{"../core/main":32}],53:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o,a,i,s={_toPixels:function(e){return e instanceof ImageData?e.data:e.getContext("2d").getImageData(0,0,e.width,e.height).data},_getARGB:function(e,t){var r=4*t;return e[3+r]<<24&4278190080|e[r]<<16&16711680|e[1+r]<<8&65280|255&e[2+r]},_setPixels:function(e,t){for(var r=0,n=0,o=e.length;n<o;n++)e[0+(r=4*n)]=(16711680&t[n])>>>16,e[r+1]=(65280&t[n])>>>8,e[r+2]=255&t[n],e[r+3]=(4278190080&t[n])>>>24},_toImageData:function(e){return e instanceof ImageData?e:e.getContext("2d").getImageData(0,0,e.width,e.height)},_createImageData:function(e,t){return s._tmpCanvas=document.createElement("canvas"),s._tmpCtx=s._tmpCanvas.getContext("2d"),this._tmpCtx.createImageData(e,t)},apply:function(e,t,r){var n=e.getContext("2d"),o=n.getImageData(0,0,e.width,e.height),a=t(o,r);a instanceof ImageData?n.putImageData(a,0,0,0,0,e.width,e.height):n.putImageData(o,0,0,0,0,e.width,e.height)},threshold:function(e,t){var r=s._toPixels(e);void 0===t&&(t=.5);for(var n=Math.floor(255*t),o=0;o<r.length;o+=4){var a;a=n<=.2126*r[o]+.7152*r[o+1]+.0722*r[o+2]?255:0,r[o]=r[o+1]=r[o+2]=a}},gray:function(e){for(var t=s._toPixels(e),r=0;r<t.length;r+=4){var n=.2126*t[r]+.7152*t[r+1]+.0722*t[r+2];t[r]=t[r+1]=t[r+2]=n}},opaque:function(e){for(var t=s._toPixels(e),r=0;r<t.length;r+=4)t[r+3]=255;return t},invert:function(e){for(var t=s._toPixels(e),r=0;r<t.length;r+=4)t[r]=255-t[r],t[r+1]=255-t[r+1],t[r+2]=255-t[r+2]},posterize:function(e,t){var r=s._toPixels(e);if(t<2||255<t)throw new Error("Level must be greater than 2 and less than 255 for posterize");for(var n=t-1,o=0;o<r.length;o+=4){var a=r[o],i=r[o+1],l=r[o+2];r[o]=255*(a*t>>8)/n,r[o+1]=255*(i*t>>8)/n,r[o+2]=255*(l*t>>8)/n}},dilate:function(e){for(var t,r,n,o,a,i,l,p,u,c,d,h,m,f,y,g,v,b=s._toPixels(e),x=0,_=b.length?b.length/4:0,w=new Int32Array(_);x<_;)for(r=(t=x)+e.width;x<r;)n=o=s._getARGB(b,x),(l=x-1)<t&&(l=x),r<=(i=x+1)&&(i=x),(p=x-e.width)<0&&(p=0),_<=(u=x+e.width)&&(u=x),h=s._getARGB(b,p),d=s._getARGB(b,l),m=s._getARGB(b,u),(a=77*(n>>16&255)+151*(n>>8&255)+28*(255&n))<(y=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))&&(o=d,a=y),a<(f=77*((c=s._getARGB(b,i))>>16&255)+151*(c>>8&255)+28*(255&c))&&(o=c,a=f),a<(g=77*(h>>16&255)+151*(h>>8&255)+28*(255&h))&&(o=h,a=g),a<(v=77*(m>>16&255)+151*(m>>8&255)+28*(255&m))&&(o=m,a=v),w[x++]=o;s._setPixels(b,w)},erode:function(e){for(var t,r,n,o,a,i,l,p,u,c,d,h,m,f,y,g,v,b=s._toPixels(e),x=0,_=b.length?b.length/4:0,w=new Int32Array(_);x<_;)for(r=(t=x)+e.width;x<r;)n=o=s._getARGB(b,x),(l=x-1)<t&&(l=x),r<=(i=x+1)&&(i=x),(p=x-e.width)<0&&(p=0),_<=(u=x+e.width)&&(u=x),h=s._getARGB(b,p),d=s._getARGB(b,l),m=s._getARGB(b,u),(y=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))<(a=77*(n>>16&255)+151*(n>>8&255)+28*(255&n))&&(o=d,a=y),(f=77*((c=s._getARGB(b,i))>>16&255)+151*(c>>8&255)+28*(255&c))<a&&(o=c,a=f),(g=77*(h>>16&255)+151*(h>>8&255)+28*(255&h))<a&&(o=h,a=g),(v=77*(m>>16&255)+151*(m>>8&255)+28*(255&m))<a&&(o=m,a=v),w[x++]=o;s._setPixels(b,w)},blur:function(e,t){!function(e,t){for(var r,l,p,u,c,d,h,m,f,y,g=s._toPixels(e),v=e.width,b=e.height,x=v*b,_=new Int32Array(x),w=0;w<x;w++)_[w]=s._getARGB(g,w);var S,M,C,T,E=new Int32Array(x),N=new Int32Array(x),P=new Int32Array(x),A=new Int32Array(x),I=0;for(function(e){var t=3.5*e|0;if(n!==(t=t<1?1:t<248?t:248)){o=1+(n=t)<<1,a=new Int32Array(o),i=new Array(o);for(var r=0;r<o;r++)i[r]=new Int32Array(256);for(var s,l,p,u,c=1,d=t-1;c<t;c++){a[t+c]=a[d]=l=d*d,p=i[t+c],u=i[d--];for(var h=0;h<256;h++)p[h]=u[h]=l*h}s=a[t]=t*t,p=i[t];for(var m=0;m<256;m++)p[m]=s*m}}(t),M=0;M<b;M++){for(S=0;S<v;S++){if(u=p=l=c=r=0,(d=S-n)<0)y=-d,d=0;else{if(v<=d)break;y=0}for(C=y;C<o&&!(v<=d);C++){var O=_[d+I];c+=(T=i[C])[(-16777216&O)>>>24],l+=T[(16711680&O)>>16],p+=T[(65280&O)>>8],u+=T[255&O],r+=a[C],d++}E[h=I+S]=c/r,N[h]=l/r,P[h]=p/r,A[h]=u/r}I+=v}for(f=(m=-n)*v,M=I=0;M<b;M++){for(S=0;S<v;S++){if(u=p=l=c=r=0,m<0)y=h=-m,d=S;else{if(b<=m)break;y=0,h=m,d=S+f}for(C=y;C<o&&!(b<=h);C++)c+=(T=i[C])[E[d]],l+=T[N[d]],p+=T[P[d]],u+=T[A[d]],r+=a[C],h++,d+=v;_[S+I]=c/r<<24|l/r<<16|p/r<<8|u/r}I+=v,f+=v,m++}s._setPixels(g,_)}(e,t)}},l=s;r.default=l},{}],54:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(e("../core/main")),o=a(e("omggif"));function a(e){return e&&e.__esModule?e:{default:e}}function i(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}n.default.prototype.createImage=function(e,t){return n.default._validateParameters("createImage",arguments),new n.default.Image(e,t)},n.default.prototype.saveCanvas=function(){n.default._validateParameters("saveCanvas",arguments);var e,t,r,o,a=[].slice.call(arguments);switch(arguments[0]instanceof HTMLCanvasElement?(e=arguments[0],a.shift()):arguments[0]instanceof n.default.Element?(e=arguments[0].elt,a.shift()):e=this._curElement&&this._curElement.elt,1<=a.length&&(t=a[0]),2<=a.length&&(r=a[1]),r=r||n.default.prototype._checkFileExtension(t,r)[1]||"png"){default:o="image/png";break;case"jpeg":case"jpg":o="image/jpeg"}e.toBlob((function(e){n.default.prototype.downloadFile(e,t,r)}),o)},n.default.prototype.saveGif=function(e,t){var r=e.gifProperties,a=r.loopLimit;1===a?a=null:null===a&&(a=0);for(var s=new Uint8Array(e.width*e.height*r.numFrames),l=[],p={},u=0;u<r.numFrames;u++){for(var c=new Set,d=r.frames[u].image.data,h=d.length,m=new Uint32Array(e.width*e.height),f=0,y=0;f<h;f+=4,y++){var g=d[f+0]<<16|d[f+1]<<8|d[f+2]<<0;c.add(g),m[y]=g}var v=i(c).sort().toString();void 0===p[v]?p[v]={freq:1,frames:[u]}:(p[v].freq+=1,p[v].frames.push(u)),l.push(m)}var b=[],x=Object.keys(p).sort((function(e,t){return p[t].freq-p[e].freq})),_=x[0].split(",").map((function(e){return parseInt(e)}));b=b.concat(p[_].frames);for(var w=new Set(_),S=1;S<x.length;S++){var M=x[S].split(",").map((function(e){return parseInt(e)})).filter((function(e){return!w.has(e)}));if(_.length+M.length<=256){for(var C=0;C<M.length;C++)_.push(M[C]),w.add(M[C]);b=b.concat(p[x[S]].frames)}}b=new Set(b);for(var T={},E=0;E<_.length;E++)T[_[E]]||(T[_[E]]=E);for(var N=1;N<_.length;)N<<=1;_.length=N;for(var P={loop:a,palette:new Uint32Array(_)},A=new o.default.GifWriter(s,e.width,e.height,P),I={},O=function(t){for(var n=!b.has(t),o=n?[]:_,a=new Uint8Array(e.width*e.height),i={},s=new Set,p=0;p<l[t].length;p++){var u=l[t][p];n?(void 0===i[u]&&(i[u]=o.length,o.push(u)),a[p]=i[u]):a[p]=T[u],0<t&&l[t-1][p]!==u&&s.add(u)}var c={},d=o.filter((function(e){return!s.has(e)}));if(0<d.length){var h=d[0],m=n?i[h]:T[h];if(0<t){for(var f=0;f<l[t].length;f++)l[t-1][f]===l[t][f]&&(a[f]=m);c.transparent=m,I.frameOpts.disposal=1}}if(c.delay=r.frames[t].delay/10,n){for(var y=1;y<o.length;)y<<=1;o.length=y,c.palette=new Uint32Array(o)}0<t&&A.addFrame(0,0,e.width,e.height,I.pixelPaletteIndex,I.frameOpts),I={pixelPaletteIndex:a,frameOpts:c}},L=0;L<r.numFrames;L++)O(L);I.frameOpts.disposal=1,A.addFrame(0,0,e.width,e.height,I.pixelPaletteIndex,I.frameOpts);var R=new Blob([s.slice(0,A.end())],{type:"image/gif"});n.default.prototype.downloadFile(R,t,"gif")},n.default.prototype.saveFrames=function(e,t,r,o,a){n.default._validateParameters("saveFrames",arguments);var i=r||3;i=n.default.prototype.constrain(i,0,15),i*=1e3;var s=o||15;s=n.default.prototype.constrain(s,0,22);var l=0,p=n.default.prototype._makeFrame,u=this._curElement.elt,c=[],d=setInterval((function(){c.push(p(e+l,t,u)),l++}),1e3/s);setTimeout((function(){if(clearInterval(d),a)a(c);else{var e=!0,t=!1,r=void 0;try{for(var o,i=c[Symbol.iterator]();!(e=(o=i.next()).done);e=!0){var s=o.value;n.default.prototype.downloadFile(s.imageData,s.filename,s.ext)}}catch(e){t=!0,r=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw r}}}c=[]}),i+.01)},n.default.prototype._makeFrame=function(e,t,r){var n,o;if(n=this?this._curElement.elt:r,t)switch(t.toLowerCase()){case"png":o="image/png";break;case"jpeg":case"jpg":o="image/jpeg";break;default:o="image/png"}else t="png",o="image/png";var a=n.toDataURL(o);a=a.replace(o,"image/octet-stream");var i={};return i.imageData=a,i.filename=e,i.ext=t,i};var s=n.default;r.default=s},{"../core/main":32,omggif:12}],55:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=p(e("../core/main")),a=p(e("./filters")),i=p(e("../core/helpers")),s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants")),l=p(e("omggif"));function p(e){return e&&e.__esModule?e:{default:e}}function u(e,t){return 0<e&&e<t?e:t}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),o.default.prototype.loadImage=function(e,t,r){o.default._validateParameters("loadImage",arguments);var n=new o.default.Image(1,1,this),a=this,i=new Request(e,{method:"GET",mode:"cors"});return fetch(e,i).then((function(i){var s=i.headers.get("content-type");if(null===s&&console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."),s&&s.includes("image/gif"))i.arrayBuffer().then((function(e){e&&function(e,t,r,n,a){var i=new l.default.GifReader(e);t.width=t.canvas.width=i.width,t.height=t.canvas.height=i.height;var s=[],p=i.numFrames(),u=new Uint8ClampedArray(t.width*t.height*4);if(1<p){for(var c=function(e,r){try{r.decodeAndBlitFrameRGBA(e,u)}catch(e){o.default._friendlyFileLoadError(8,t.src),"function"==typeof n?n(e):console.error(e)}},d=0;d<p;d++){var h=i.frameInfo(d);1===i.frameInfo(d).disposal&&0<d?t.drawingContext.putImageData(s[d-1].image,0,0):(t.drawingContext.clearRect(0,0,t.width,t.height),u=new Uint8ClampedArray(t.width*t.height*4)),c(d,i);var m=new ImageData(u,t.width,t.height);t.drawingContext.putImageData(m,0,0),s.push({image:t.drawingContext.getImageData(0,0,t.width,t.height),delay:10*h.delay})}var f=i.loopCount();null===f?f=1:0===f&&(f=null),t.gifProperties={displayIndex:0,loopLimit:f,loopCount:0,frames:s,numFrames:p,playing:!0,timeDisplayed:0}}"function"==typeof r&&r(t),a()}(new Uint8Array(e),n,t,r,function(e){a._decrementPreload()}.bind(a))}),(function(e){"function"==typeof r?r(e):console.error(e)}));else{var p=new Image;p.onload=function(){n.width=n.canvas.width=p.width,n.height=n.canvas.height=p.height,n.drawingContext.drawImage(p,0,0),n.modified=!0,"function"==typeof t&&t(n),a._decrementPreload()},p.onerror=function(e){o.default._friendlyFileLoadError(0,p.src),"function"==typeof r?r(e):console.error(e)},0!==e.indexOf("data:image/")&&(p.crossOrigin="Anonymous"),p.src=e}n.modified=!0})),n},o.default.prototype.image=function(e,t,r,n,a,s,l,p,c){o.default._validateParameters("image",arguments);var d=e.width,h=e.height;e.elt&&e.elt.videoWidth&&!e.canvas&&(d=e.elt.videoWidth,h=e.elt.videoHeight);var m=t,f=r,y=n||d,g=a||h,v=s||0,b=l||0,x=p||d,_=c||h;x=u(x,d),_=u(_,h);var w=1;e.elt&&!e.canvas&&e.elt.style.width&&(w=e.elt.videoWidth&&!n?e.elt.videoWidth:e.elt.width,w/=parseInt(e.elt.style.width,10)),v*=w,b*=w,_*=w,x*=w;var S=i.default.modeAdjust(m,f,y,g,this._renderer._imageMode);this._renderer.image(e,v,b,x,_,S.x,S.y,S.w,S.h)},o.default.prototype.tint=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("tint",t);var n=this.color.apply(this,t);this._renderer._tint=n.levels},o.default.prototype.noTint=function(){this._renderer._tint=null},o.default.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=a.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var n=r.getContext("2d"),o=n.createImageData(e.canvas.width,e.canvas.height),i=o.data,s=0;s<t.length;s+=4){var l=t[s],p=t[s+1],u=t[s+2],c=t[s+3];i[s]=l*this._renderer._tint[0]/255,i[s+1]=p*this._renderer._tint[1]/255,i[s+2]=u*this._renderer._tint[2]/255,i[s+3]=c*this._renderer._tint[3]/255}return n.putImageData(o,0,0),r},o.default.prototype.imageMode=function(e){o.default._validateParameters("imageMode",arguments),e!==s.CORNER&&e!==s.CORNERS&&e!==s.CENTER||(this._renderer._imageMode=e)};var c=o.default;r.default=c},{"../core/constants":22,"../core/friendly_errors/fes_core":24,"../core/friendly_errors/file_errors":25,"../core/friendly_errors/validate_params":27,"../core/helpers":28,"../core/main":32,"./filters":53,omggif:12}],56:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(e("../core/main")),o=a(e("./filters"));function a(e){return e&&e.__esModule?e:{default:e}}n.default.Image=function(e,t){this.width=e,this.height=t,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.drawingContext=this.canvas.getContext("2d"),(this._pixelsState=this)._pixelDensity=1,this.gifProperties=null,this._modified=!1,this.pixels=[]},n.default.Image.prototype._animateGif=function(e){var t=this.gifProperties;if(t.playing){t.timeDisplayed+=e.deltaTime;var r=t.frames[t.displayIndex].delay;if(t.timeDisplayed>=r){var n=Math.floor(t.timeDisplayed/r);if(t.timeDisplayed=0,t.displayIndex+=n,t.loopCount=Math.floor(t.displayIndex/t.numFrames),null!==t.loopLimit&&t.loopCount>=t.loopLimit)t.playing=!1;else{var o=t.displayIndex%t.numFrames;this.drawingContext.putImageData(t.frames[o].image,0,0),t.displayIndex=o,this.setModified(!0)}}}},n.default.Image.prototype._setProperty=function(e,t){this[e]=t,this.setModified(!0)},n.default.Image.prototype.loadPixels=function(){n.default.Renderer2D.prototype.loadPixels.call(this),this.setModified(!0)},n.default.Image.prototype.updatePixels=function(e,t,r,o){n.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,o),this.setModified(!0)},n.default.Image.prototype.get=function(e,t,r,o){return n.default._validateParameters("p5.Image.get",arguments),n.default.Renderer2D.prototype.get.apply(this,arguments)},n.default.Image.prototype._getPixel=n.default.Renderer2D.prototype._getPixel,n.default.Image.prototype.set=function(e,t,r){n.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0)},n.default.Image.prototype.resize=function(e,t){0===e&&0===t?(e=this.canvas.width,t=this.canvas.height):0===e?e=this.canvas.width*t/this.canvas.height:0===t&&(t=this.canvas.height*e/this.canvas.width),e=Math.floor(e),t=Math.floor(t);var r=document.createElement("canvas");if(r.width=e,r.height=t,this.gifProperties)for(var n=this.gifProperties,o=function(e,t){for(var r=0,n=0;n<t.height;n++)for(var o=0;o<t.width;o++){var a=Math.floor(o*e.width/t.width),i=4*(Math.floor(n*e.height/t.height)*e.width+a);t.data[r++]=e.data[i++],t.data[r++]=e.data[i++],t.data[r++]=e.data[i++],t.data[r++]=e.data[i++]}},a=0;a<n.numFrames;a++){var i=this.drawingContext.createImageData(e,t);o(n.frames[a].image,i),n.frames[a].image=i}r.getContext("2d").drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,r.width,r.height),this.canvas.width=this.width=e,this.canvas.height=this.height=t,this.drawingContext.drawImage(r,0,0,e,t,0,0,e,t),0<this.pixels.length&&this.loadPixels(),this.setModified(!0)},n.default.Image.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default.prototype.copy.apply(this,t)},n.default.Image.prototype.mask=function(e){void 0===e&&(e=this);var t=this.drawingContext.globalCompositeOperation,r=1;e instanceof n.default.Renderer&&(r=e._pInst._pixelDensity);var o=[e,0,0,r*e.width,r*e.height,0,0,this.width,this.height];this.drawingContext.globalCompositeOperation="destination-in",n.default.Image.prototype.copy.apply(this,o),this.drawingContext.globalCompositeOperation=t,this.setModified(!0)},n.default.Image.prototype.filter=function(e,t){o.default.apply(this.canvas,o.default[e],t),this.setModified(!0)},n.default.Image.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("p5.Image.blend",arguments),n.default.prototype.blend.apply(this,t),this.setModified(!0)},n.default.Image.prototype.setModified=function(e){this._modified=e},n.default.Image.prototype.isModified=function(){return this._modified},n.default.Image.prototype.save=function(e,t){this.gifProperties?n.default.prototype.saveGif(this,e):n.default.prototype.saveCanvas(this.canvas,e,t)},n.default.Image.prototype.reset=function(){if(this.gifProperties){var e=this.gifProperties;e.playing=!0,e.timeSinceStart=0,e.timeDisplayed=0,e.loopCount=0,e.displayIndex=0,this.drawingContext.putImageData(e.frames[0].image,0,0)}},n.default.Image.prototype.getCurrentFrame=function(){if(this.gifProperties){var e=this.gifProperties;return e.displayIndex%e.numFrames}},n.default.Image.prototype.setFrame=function(e){if(this.gifProperties){var t=this.gifProperties;e<t.numFrames&&0<=e?(t.timeDisplayed=0,t.displayIndex=e,this.drawingContext.putImageData(t.frames[e].image,0,0)):console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero.")}},n.default.Image.prototype.numFrames=function(){if(this.gifProperties)return this.gifProperties.numFrames},n.default.Image.prototype.play=function(){this.gifProperties&&(this.gifProperties.playing=!0)},n.default.Image.prototype.pause=function(){this.gifProperties&&(this.gifProperties.playing=!1)},n.default.Image.prototype.delay=function(e,t){if(this.gifProperties){var r=this.gifProperties;if(t<r.numFrames&&0<=t)r.frames[t].delay=e;else{var n=!0,o=!1,a=void 0;try{for(var i,s=r.frames[Symbol.iterator]();!(n=(i=s.next()).done);n=!0)i.value.delay=e}catch(e){o=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}}}};var i=n.default.Image;r.default=i},{"../core/main":32,"./filters":53}],57:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(e("../core/main")),o=a(e("./filters"));function a(e){return e&&e.__esModule?e:{default:e}}e("../color/p5.Color"),n.default.prototype.pixels=[],n.default.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var o;n.default._validateParameters("blend",t),this._renderer?(o=this._renderer).blend.apply(o,t):n.default.Renderer2D.prototype.blend.apply(this,t)},n.default.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var o,a,i,s,l,p,u,c,d;if(n.default._validateParameters("copy",t),9===t.length)o=t[0],a=t[1],i=t[2],s=t[3],l=t[4],p=t[5],u=t[6],c=t[7],d=t[8];else{if(8!==t.length)throw new Error("Signature not supported");o=this,a=t[0],i=t[1],s=t[2],l=t[3],p=t[4],u=t[5],c=t[6],d=t[7]}n.default.prototype._copyHelper(this,o,a,i,s,l,p,u,c,d)},n.default.prototype._copyHelper=function(e,t,r,o,a,i,s,l,p,u){t.loadPixels();var c=t.canvas.width/t.width,d=0,h=0;t._renderer&&t._renderer.isP3D&&(d=t.width/2,h=t.height/2),e._renderer&&e._renderer.isP3D?n.default.RendererGL.prototype.image.call(e._renderer,t,r+d,o+h,a,i,s,l,p,u):e.drawingContext.drawImage(t.canvas,c*(r+d),c*(o+h),c*a,c*i,s,l,p,u)},n.default.prototype.filter=function(e,t){n.default._validateParameters("filter",arguments),void 0!==this.canvas?o.default.apply(this.canvas,o.default[e],t):o.default.apply(this.elt,o.default[e],t)},n.default.prototype.get=function(e,t,r,o){var a;return n.default._validateParameters("get",arguments),(a=this._renderer).get.apply(a,arguments)},n.default.prototype.loadPixels=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("loadPixels",t),this._renderer.loadPixels()},n.default.prototype.set=function(e,t,r){this._renderer.set(e,t,r)},n.default.prototype.updatePixels=function(e,t,r,o){n.default._validateParameters("updatePixels",arguments),0!==this.pixels.length&&this._renderer.updatePixels(e,t,r,o)};var i=n.default;r.default=i},{"../color/p5.Color":20,"../core/main":32,"./filters":53}],58:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=i(e("../core/main"));e("whatwg-fetch"),e("es6-promise/auto");var o=i(e("fetch-jsonp")),a=i(e("file-saver"));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){var r={};if(void 0===(t=t||[]))for(var n=0;n<e.length;n++)t[n.toString()]=n;for(var o=0;o<t.length;o++){var a=t[o],i=e[o];r[a]=i}return r}function p(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function u(e,t){t&&!0!==t&&"true"!==t||(t="");var r="";return(e=e||"untitled")&&e.includes(".")&&(r=e.split(".").pop()),t&&r!==t&&(r=t,e="".concat(e,".").concat(r)),[e,r]}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),n.default.prototype.loadJSON=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("loadJSON",t);for(var o,a,i,l=t[0],p={},u="json",c=1;c<t.length;c++){var d=t[c];"string"==typeof d?"jsonp"!==d&&"json"!==d||(u=d):"function"==typeof d?o?a=d:o=d:"object"===s(d)&&(d.hasOwnProperty("jsonpCallback")||d.hasOwnProperty("jsonpCallbackFunction"))&&(u="jsonp",i=d)}var h=this;return this.httpDo(l,"GET",i,u,(function(e){for(var t in e)p[t]=e[t];void 0!==o&&o(e),h._decrementPreload()}),(function(e){if(n.default._friendlyFileLoadError(5,l),!a)throw e;a(e)})),p},n.default.prototype.loadStrings=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("loadStrings",t);for(var o,a,i=[],s=1;s<t.length;s++){var l=t[s];"function"==typeof l&&(void 0===o?o=l:void 0===a&&(a=l))}var p=this;return n.default.prototype.httpDo.call(this,t[0],"GET","text",(function(e){var t=e.replace(/\r\n/g,"\r").replace(/\n/g,"\r").split(/\r/);Array.prototype.push.apply(i,t),void 0!==o&&o(i),p._decrementPreload()}),(function(e){if(n.default._friendlyFileLoadError(3,e),!a)throw e;a(e)})),i},n.default.prototype.loadTable=function(e){var t,r,o,a=[],i=!1,s=e.substring(e.lastIndexOf(".")+1,e.length);"csv"===s?o=",":"ssv"===s?o=";":"tsv"===s&&(o="\t");for(var p=1;p<arguments.length;p++)"function"==typeof arguments[p]?void 0===t?t=arguments[p]:void 0===r&&(r=arguments[p]):"string"==typeof arguments[p]&&(a.push(arguments[p]),"header"===arguments[p]&&(i=!0),"csv"===arguments[p]?o=",":"ssv"===arguments[p]?o=";":"tsv"===arguments[p]&&(o="\t"));console.log("SEP IS "+o);var u=new n.default.Table,c=this;return this.httpDo(e,"GET","table",(function(e){for(var r,a,s={},p=[],d=0,h=null,m=function(){s.currentState=0,s.token=""},f=function(){h.push(s.token),m()},y=function(){s.currentState=4,p.push(h),h=null};;){if(null==(r=e[d++])){if(s.escaped)throw new Error("Unclosed quote in file.");if(h){f(),y();break}}if(null===h&&(s.escaped=!1,h=[],m()),0===s.currentState){if('"'===r){s.escaped=!0,s.currentState=1;continue}s.currentState=1}if(1===s.currentState&&s.escaped)if('"'===r)'"'===e[d]?(s.token+='"',d++):(s.escaped=!1,s.currentState=2);else{if("\r"===r)continue;s.token+=r}else"\r"===r?("\n"===e[d]&&d++,f(),y()):"\n"===r?(f(),y()):r===o?f():1===s.currentState&&(s.token+=r)}if(i)u.columns=p.shift();else for(var g=0;g<p[0].length;g++)u.columns[g]="null";for(var v=0;v<p.length;v++)(1!==p[v].length||"undefined"!==p[v][0]&&""!==p[v][0])&&((a=new n.default.TableRow).arr=p[v],a.obj=l(p[v],u.columns),u.addRow(a));"function"==typeof t&&t(u),c._decrementPreload()}),(function(t){n.default._friendlyFileLoadError(2,e),r?r(t):console.error(t)})),u},n.default.prototype.loadXML=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var o,a,i=new n.default.XML,s=1;s<t.length;s++){var l=t[s];"function"==typeof l&&(void 0===o?o=l:void 0===a&&(a=l))}var p=this;return this.httpDo(t[0],"GET","xml",(function(e){for(var t in e)i[t]=e[t];void 0!==o&&o(i),p._decrementPreload()}),(function(e){if(n.default._friendlyFileLoadError(1,e),!a)throw e;a(e)})),i},n.default.prototype.loadBytes=function(e,t,r){var o={},a=this;return this.httpDo(e,"GET","arrayBuffer",(function(e){o.bytes=new Uint8Array(e),"function"==typeof t&&t(o),a._decrementPreload()}),(function(t){if(n.default._friendlyFileLoadError(6,e),!r)throw t;r(t)})),o},n.default.prototype.httpGet=function(){n.default._validateParameters("httpGet",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"GET"),n.default.prototype.httpDo.apply(this,e)},n.default.prototype.httpPost=function(){n.default._validateParameters("httpPost",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"POST"),n.default.prototype.httpDo.apply(this,e)},n.default.prototype.httpDo=function(){for(var e,t,r,a,i,l={},p=0,u="text/plain",c=arguments.length-1;0<c&&"function"==typeof(c<0||arguments.length<=c?void 0:arguments[c]);c--)p++;var d=arguments.length<=0?void 0:arguments[0];if(2==arguments.length-p&&"string"==typeof d&&"object"===s(arguments.length<=1?void 0:arguments[1]))a=new Request(d,arguments.length<=1?void 0:arguments[1]),t=arguments.length<=2?void 0:arguments[2],r=arguments.length<=3?void 0:arguments[3];else{for(var h,m="GET",f=1;f<arguments.length;f++){var y=f<0||arguments.length<=f?void 0:arguments[f];if("string"==typeof y)"GET"===y||"POST"===y||"PUT"===y||"DELETE"===y?m=y:"json"===y||"jsonp"===y||"binary"===y||"arrayBuffer"===y||"xml"===y||"text"===y||"table"===y?e=y:h=y;else if("number"==typeof y)h=y.toString();else if("object"===s(y))if(y.hasOwnProperty("jsonpCallback")||y.hasOwnProperty("jsonpCallbackFunction"))for(var g in y)l[g]=y[g];else u=y instanceof n.default.XML?(h=y.serialize(),"application/xml"):(h=JSON.stringify(y),"application/json");else"function"==typeof y&&(t?r=y:t=y)}var v="GET"===m?new Headers:new Headers({"Content-Type":u});a=new Request(d,{method:m,mode:"cors",body:h,headers:v})}return(i=(i="jsonp"===(e=e||(d.includes("json")?"json":d.includes("xml")?"xml":"text"))?(0,o.default)(d,l):fetch(a)).then((function(t){if(!t.ok){var r=new Error(t.body);throw r.status=t.status,r.ok=!1,r}var o=0;switch("jsonp"!==e&&(o=t.headers.get("content-length")),o&&64e6<o&&n.default._friendlyFileLoadError(7,d),e){case"json":case"jsonp":return t.json();case"binary":return t.blob();case"arrayBuffer":return t.arrayBuffer();case"xml":return t.text().then((function(e){var t=(new DOMParser).parseFromString(e,"text/xml");return new n.default.XML(t.documentElement)}));default:return t.text()}}))).then(t||function(){}),i.catch(r||console.error),i},window.URL=window.URL||window.webkitURL,n.default.prototype._pWriters=[],n.default.prototype.createWriter=function(e,t){var r;for(var o in n.default.prototype._pWriters)if(n.default.prototype._pWriters[o].name===e)return r=new n.default.PrintWriter(e+this.millis(),t),n.default.prototype._pWriters.push(r),r;return r=new n.default.PrintWriter(e,t),n.default.prototype._pWriters.push(r),r},n.default.PrintWriter=function(e,t){var r=this;this.name=e,this.content="",this.write=function(e){this.content+=e},this.print=function(e){this.content+="".concat(e,"\n")},this.clear=function(){this.content=""},this.close=function(){var o=[];for(var a in o.push(this.content),n.default.prototype.writeFile(o,e,t),n.default.prototype._pWriters)n.default.prototype._pWriters[a].name===this.name&&n.default.prototype._pWriters.splice(a,1);r.clear(),r={}}},n.default.prototype.save=function(e,t,r){var o=arguments,a=this._curElement?this._curElement.elt:this.elt;if(0!==o.length)if(o[0]instanceof n.default.Renderer||o[0]instanceof n.default.Graphics)n.default.prototype.saveCanvas(o[0].elt,o[1],o[2]);else if(1===o.length&&"string"==typeof o[0])n.default.prototype.saveCanvas(a,o[0]);else switch(u(o[1],o[2])[1]){case"json":return void n.default.prototype.saveJSON(o[0],o[1],o[2]);case"txt":return void n.default.prototype.saveStrings(o[0],o[1],o[2]);default:o[0]instanceof Array?n.default.prototype.saveStrings(o[0],o[1],o[2]):o[0]instanceof n.default.Table?n.default.prototype.saveTable(o[0],o[1],o[2]):o[0]instanceof n.default.Image?n.default.prototype.saveCanvas(o[0].canvas,o[1]):o[0]instanceof n.default.SoundFile&&n.default.prototype.saveSound(o[0],o[1],o[2],o[3])}else n.default.prototype.saveCanvas(a)},n.default.prototype.saveJSON=function(e,t,r){var o;n.default._validateParameters("saveJSON",arguments),o=r?JSON.stringify(e):JSON.stringify(e,void 0,2),this.saveStrings(o.split("\n"),t,"json")},n.default.prototype.saveJSONObject=n.default.prototype.saveJSON,n.default.prototype.saveJSONArray=n.default.prototype.saveJSON,n.default.prototype.saveStrings=function(e,t,r,o){n.default._validateParameters("saveStrings",arguments);for(var a=r||"txt",i=this.createWriter(t,a),s=0;s<e.length;s++)o?i.write(e[s]+"\r\n"):i.write(e[s]+"\n");i.close(),i.clear()},n.default.prototype.saveTable=function(e,t,r){var o;n.default._validateParameters("saveTable",arguments),o=void 0===r?t.substring(t.lastIndexOf(".")+1,t.length):r;var a=this.createWriter(t,o),i=e.columns,s=",";if("tsv"===o&&(s="\t"),"html"!==o){if("0"!==i[0]){for(var l=0;l<i.length;l++)l<i.length-1?a.write(i[l]+s):a.write(i[l]);a.write("\n")}for(var u=0;u<e.rows.length;u++){var c=void 0;for(c=0;c<e.rows[u].arr.length;c++)c<e.rows[u].arr.length-1?a.write(e.rows[u].arr[c]+s):(e.rows.length,a.write(e.rows[u].arr[c]));a.write("\n")}}else{if(a.print("<html>"),a.print("<head>"),a.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'),a.print("</head>"),a.print("<body>"),a.print("  <table>"),"0"!==i[0]){a.print("    <tr>");for(var d=0;d<i.length;d++){var h=p(i[d]);a.print("      <td>".concat(h)),a.print("      </td>")}a.print("    </tr>")}for(var m=0;m<e.rows.length;m++){a.print("    <tr>");for(var f=0;f<e.columns.length;f++){var y=p(e.rows[m].getString(f));a.print("      <td>".concat(y)),a.print("      </td>")}a.print("    </tr>")}a.print("  </table>"),a.print("</body>"),a.print("</html>")}a.close(),a.clear()},n.default.prototype.writeFile=function(e,t,r){var o="application/octet-stream";n.default.prototype._isSafari()&&(o="text/plain");var a=new Blob(e,{type:o});n.default.prototype.downloadFile(a,t,r)},n.default.prototype.downloadFile=function(e,t,r){var o=u(t,r),i=o[0];if(e instanceof Blob)a.default.saveAs(e,i);else{var s=document.createElement("a");if(s.href=e,s.download=i,s.onclick=function(e){var t;t=e,document.body.removeChild(t.target),e.stopPropagation()},s.style.display="none",document.body.appendChild(s),n.default.prototype._isSafari()){var l="Hello, Safari user! To download this file...\n";l+="1. Go to File --\x3e Save As.\n",l+='2. Choose "Page Source" as the Format.\n',l+='3. Name it with this extension: ."'.concat(o[1],'"'),alert(l)}s.click()}},n.default.prototype._checkFileExtension=u,n.default.prototype._isSafari=function(){return 0<Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")};var c=n.default;r.default=c},{"../core/friendly_errors/fes_core":24,"../core/friendly_errors/file_errors":25,"../core/friendly_errors/validate_params":27,"../core/main":32,"es6-promise/auto":6,"fetch-jsonp":8,"file-saver":9,"whatwg-fetch":16}],59:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.Table=function(e){this.columns=[],this.rows=[]},o.default.Table.prototype.addRow=function(e){var t=e||new o.default.TableRow;if(void 0===t.arr||void 0===t.obj)throw new Error("invalid TableRow: ".concat(t));return(t.table=this).rows.push(t),t},o.default.Table.prototype.removeRow=function(e){this.rows[e].table=null;var t=this.rows.splice(e+1,this.rows.length);this.rows.pop(),this.rows=this.rows.concat(t)},o.default.Table.prototype.getRow=function(e){return this.rows[e]},o.default.Table.prototype.getRows=function(){return this.rows},o.default.Table.prototype.findRow=function(e,t){if("string"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].obj[t]===e)return this.rows[r]}else for(var n=0;n<this.rows.length;n++)if(this.rows[n].arr[t]===e)return this.rows[n];return null},o.default.Table.prototype.findRows=function(e,t){var r=[];if("string"==typeof t)for(var n=0;n<this.rows.length;n++)this.rows[n].obj[t]===e&&r.push(this.rows[n]);else for(var o=0;o<this.rows.length;o++)this.rows[o].arr[t]===e&&r.push(this.rows[o]);return r},o.default.Table.prototype.matchRow=function(e,t){if("number"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].arr[t].match(e))return this.rows[r]}else for(var n=0;n<this.rows.length;n++)if(this.rows[n].obj[t].match(e))return this.rows[n];return null},o.default.Table.prototype.matchRows=function(e,t){var r=[];if("number"==typeof t)for(var n=0;n<this.rows.length;n++)this.rows[n].arr[t].match(e)&&r.push(this.rows[n]);else for(var o=0;o<this.rows.length;o++)this.rows[o].obj[t].match(e)&&r.push(this.rows[o]);return r},o.default.Table.prototype.getColumn=function(e){var t=[];if("string"==typeof e)for(var r=0;r<this.rows.length;r++)t.push(this.rows[r].obj[e]);else for(var n=0;n<this.rows.length;n++)t.push(this.rows[n].arr[e]);return t},o.default.Table.prototype.clearRows=function(){delete this.rows,this.rows=[]},o.default.Table.prototype.addColumn=function(e){var t=e||null;this.columns.push(t)},o.default.Table.prototype.getColumnCount=function(){return this.columns.length},o.default.Table.prototype.getRowCount=function(){return this.rows.length},o.default.Table.prototype.removeTokens=function(e,t){for(var r=[],n=0;n<e.length;n++)r.push(e.charAt(n).replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"));var o=new RegExp(r.join("|"),"g");if(void 0===t)for(var a=0;a<this.columns.length;a++)for(var i=0;i<this.rows.length;i++){var s=this.rows[i].arr[a];s=s.replace(o,""),this.rows[i].arr[a]=s,this.rows[i].obj[this.columns[a]]=s}else if("string"==typeof t)for(var l=0;l<this.rows.length;l++){var p=this.rows[l].obj[t];p=p.replace(o,""),this.rows[l].obj[t]=p;var u=this.columns.indexOf(t);this.rows[l].arr[u]=p}else for(var c=0;c<this.rows.length;c++){var d=this.rows[c].arr[t];d=d.replace(o,""),this.rows[c].arr[t]=d,this.rows[c].obj[this.columns[t]]=d}},o.default.Table.prototype.trim=function(e){var t=new RegExp(" ","g");if(void 0===e)for(var r=0;r<this.columns.length;r++)for(var n=0;n<this.rows.length;n++){var o=this.rows[n].arr[r];o=o.replace(t,""),this.rows[n].arr[r]=o,this.rows[n].obj[this.columns[r]]=o}else if("string"==typeof e)for(var a=0;a<this.rows.length;a++){var i=this.rows[a].obj[e];i=i.replace(t,""),this.rows[a].obj[e]=i;var s=this.columns.indexOf(e);this.rows[a].arr[s]=i}else for(var l=0;l<this.rows.length;l++){var p=this.rows[l].arr[e];p=p.replace(t,""),this.rows[l].arr[e]=p,this.rows[l].obj[this.columns[e]]=p}},o.default.Table.prototype.removeColumn=function(e){var t,r;"string"==typeof e?(t=e,r=this.columns.indexOf(e)):(r=e,t=this.columns[e]);var n=this.columns.splice(r+1,this.columns.length);this.columns.pop(),this.columns=this.columns.concat(n);for(var o=0;o<this.rows.length;o++){var a=this.rows[o].arr,i=a.splice(r+1,a.length);a.pop(),this.rows[o].arr=a.concat(i),delete this.rows[o].obj[t]}},o.default.Table.prototype.set=function(e,t,r){this.rows[e].set(t,r)},o.default.Table.prototype.setNum=function(e,t,r){this.rows[e].setNum(t,r)},o.default.Table.prototype.setString=function(e,t,r){this.rows[e].setString(t,r)},o.default.Table.prototype.get=function(e,t){return this.rows[e].get(t)},o.default.Table.prototype.getNum=function(e,t){return this.rows[e].getNum(t)},o.default.Table.prototype.getString=function(e,t){return this.rows[e].getString(t)},o.default.Table.prototype.getObject=function(e){for(var t,r={},n=0;n<this.rows.length;n++)if(t=this.rows[n].obj,"string"==typeof e){if(!(0<=this.columns.indexOf(e)))throw new Error('This table has no column named "'.concat(e,'"'));r[t[e]]=t}else r[n]=this.rows[n].obj;return r},o.default.Table.prototype.getArray=function(){for(var e=[],t=0;t<this.rows.length;t++)e.push(this.rows[t].arr);return e};var a=o.default;r.default=a},{"../core/main":32}],60:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.TableRow=function(e,t){var r=[],n={};e&&(t=t||",",r=e.split(t));for(var o=0;o<r.length;o++){var a=o,i=r[o];n[a]=i}this.arr=r,this.obj=n,this.table=null},o.default.TableRow.prototype.set=function(e,t){if("string"==typeof e){var r=this.table.columns.indexOf(e);if(!(0<=r))throw new Error('This table has no column named "'.concat(e,'"'));this.obj[e]=t,this.arr[r]=t}else{if(!(e<this.table.columns.length))throw new Error("Column #".concat(e," is out of the range of this table"));this.arr[e]=t;var n=this.table.columns[e];this.obj[n]=t}},o.default.TableRow.prototype.setNum=function(e,t){var r=parseFloat(t);this.set(e,r)},o.default.TableRow.prototype.setString=function(e,t){var r=t.toString();this.set(e,r)},o.default.TableRow.prototype.get=function(e){return"string"==typeof e?this.obj[e]:this.arr[e]},o.default.TableRow.prototype.getNum=function(e){var t;if("NaN"===(t="string"==typeof e?parseFloat(this.obj[e]):parseFloat(this.arr[e])).toString())throw"Error: ".concat(this.obj[e]," is NaN (Not a Number)");return t},o.default.TableRow.prototype.getString=function(e){return"string"==typeof e?this.obj[e].toString():this.arr[e].toString()};var a=o.default;r.default=a},{"../core/main":32}],61:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.XML=function(e){if(e)this.DOM=e;else{var t=document.implementation.createDocument(null,"doc");this.DOM=t.createElement("root")}},o.default.XML.prototype.getParent=function(){return new o.default.XML(this.DOM.parentElement)},o.default.XML.prototype.getName=function(){return this.DOM.tagName},o.default.XML.prototype.setName=function(e){var t=this.DOM.innerHTML,r=this.DOM.attributes,n=document.implementation.createDocument(null,"default").createElement(e);n.innerHTML=t;for(var o=0;o<r.length;o++)n.setAttribute(r[o].nodeName,r.nodeValue);this.DOM=n},o.default.XML.prototype.hasChildren=function(){return 0<this.DOM.children.length},o.default.XML.prototype.listChildren=function(){for(var e=[],t=0;t<this.DOM.childNodes.length;t++)e.push(this.DOM.childNodes[t].nodeName);return e},o.default.XML.prototype.getChildren=function(e){return function(e){for(var t=[],r=0;r<e.length;r++)t.push(new o.default.XML(e[r]));return t}(e?this.DOM.getElementsByTagName(e):this.DOM.children)},o.default.XML.prototype.getChild=function(e){if("string"!=typeof e)return new o.default.XML(this.DOM.children[e]);var t=!0,r=!1,n=void 0;try{for(var a,i=this.DOM.children[Symbol.iterator]();!(t=(a=i.next()).done);t=!0){var s=a.value;if(s.tagName===e)return new o.default.XML(s)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}},o.default.XML.prototype.addChild=function(e){e instanceof o.default.XML&&this.DOM.appendChild(e.DOM)},o.default.XML.prototype.removeChild=function(e){var t=-1;if("string"==typeof e){for(var r=0;r<this.DOM.children.length;r++)if(this.DOM.children[r].tagName===e){t=r;break}}else t=e;-1!==t&&this.DOM.removeChild(this.DOM.children[t])},o.default.XML.prototype.getAttributeCount=function(){return this.DOM.attributes.length},o.default.XML.prototype.listAttributes=function(){var e=[],t=!0,r=!1,n=void 0;try{for(var o,a=this.DOM.attributes[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var i=o.value;e.push(i.nodeName)}}catch(e){r=!0,n=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw n}}return e},o.default.XML.prototype.hasAttribute=function(e){var t={},r=!0,n=!1,o=void 0;try{for(var a,i=this.DOM.attributes[Symbol.iterator]();!(r=(a=i.next()).done);r=!0){var s=a.value;t[s.nodeName]=s.nodeValue}}catch(e){n=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(n)throw o}}return!!t[e]},o.default.XML.prototype.getNum=function(e,t){var r={},n=!0,o=!1,a=void 0;try{for(var i,s=this.DOM.attributes[Symbol.iterator]();!(n=(i=s.next()).done);n=!0){var l=i.value;r[l.nodeName]=l.nodeValue}}catch(e){o=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return Number(r[e])||t||0},o.default.XML.prototype.getString=function(e,t){var r={},n=!0,o=!1,a=void 0;try{for(var i,s=this.DOM.attributes[Symbol.iterator]();!(n=(i=s.next()).done);n=!0){var l=i.value;r[l.nodeName]=l.nodeValue}}catch(e){o=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return r[e]?String(r[e]):t||null},o.default.XML.prototype.setAttribute=function(e,t){this.DOM.setAttribute(e,t)},o.default.XML.prototype.getContent=function(e){return this.DOM.textContent.replace(/\s\s+/g,",")||e||null},o.default.XML.prototype.setContent=function(e){this.DOM.children.length||(this.DOM.textContent=e)},o.default.XML.prototype.serialize=function(){return(new XMLSerializer).serializeToString(this.DOM)};var a=o.default;r.default=a},{"../core/main":32}],62:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(){if("function"==typeof Math.hypot)return Math.hypot.apply(null,arguments);for(var e=arguments.length,t=[],r=0,n=0;n<e;n++){var o=arguments[n];if((o=+o)==1/0||o===-1/0)return 1/0;r<(o=Math.abs(o))&&(r=o),t[n]=o}0===r&&(r=1);for(var a=0,i=0,s=0;s<e;s++){var l=t[s]/r,p=l*l-i,u=a+p;i=u-a-p,a=u}return Math.sqrt(a)*r}o.default.prototype.abs=Math.abs,o.default.prototype.ceil=Math.ceil,o.default.prototype.constrain=function(e,t,r){return o.default._validateParameters("constrain",arguments),Math.max(Math.min(e,r),t)},o.default.prototype.dist=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("dist",t),4===t.length?a(t[2]-t[0],t[3]-t[1]):6===t.length?a(t[3]-t[0],t[4]-t[1],t[5]-t[2]):void 0},o.default.prototype.exp=Math.exp,o.default.prototype.floor=Math.floor,o.default.prototype.lerp=function(e,t,r){return o.default._validateParameters("lerp",arguments),r*(t-e)+e},o.default.prototype.log=Math.log,o.default.prototype.mag=function(e,t){return o.default._validateParameters("mag",arguments),a(e,t)},o.default.prototype.map=function(e,t,r,n,a,i){o.default._validateParameters("map",arguments);var s=(e-t)/(r-t)*(a-n)+n;return i?n<a?this.constrain(s,n,a):this.constrain(s,a,n):s},o.default.prototype.max=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("max",t),t[0]instanceof Array?Math.max.apply(null,t[0]):Math.max.apply(null,t)},o.default.prototype.min=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("min",t),t[0]instanceof Array?Math.min.apply(null,t[0]):Math.min.apply(null,t)},o.default.prototype.norm=function(e,t,r){return o.default._validateParameters("norm",arguments),this.map(e,t,r,0,1)},o.default.prototype.pow=Math.pow,o.default.prototype.round=function(e,t){return t?Number(Math.round(e+"e"+t)+"e-"+t):Math.round(e)},o.default.prototype.sq=function(e){return e*e},o.default.prototype.sqrt=Math.sqrt,o.default.prototype.fract=function(e){o.default._validateParameters("fract",arguments);var t=0,r=Number(e);if(isNaN(r)||Math.abs(r)===1/0)return r;if(r<0&&(r=-r,t=1),!String(r).includes(".")||String(r).includes("e"))return r<1?Math.abs(t-r):0;var n=String(r);return n=Number("0"+n.slice(n.indexOf("."))),Math.abs(t-n)};var i=o.default;r.default=i},{"../core/main":32}],63:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.createVector=function(e,t,r){return this instanceof o.default?new o.default.Vector(this,arguments):new o.default.Vector(e,t,r)};var a=o.default;r.default=a},{"../core/main":32}],64:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(e){return.5*(1-Math.cos(e*Math.PI))}var i,s=4095,l=4,p=.5;o.default.prototype.noise=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;if(null==i){i=new Array(4096);for(var n=0;n<4096;n++)i[n]=Math.random()}e<0&&(e=-e),t<0&&(t=-t),r<0&&(r=-r);for(var o,u,c,d,h,m=Math.floor(e),f=Math.floor(t),y=Math.floor(r),g=e-m,v=t-f,b=r-y,x=0,_=.5,w=0;w<l;w++){var S=m+(f<<4)+(y<<8);o=a(g),u=a(v),c=i[S&s],c+=o*(i[S+1&s]-c),d=i[S+16&s],c+=u*((d+=o*(i[S+16+1&s]-d))-c),d=i[(S+=256)&s],d+=o*(i[S+1&s]-d),h=i[S+16&s],d+=u*((h+=o*(i[S+16+1&s]-h))-d),x+=(c+=a(b)*(d-c))*_,_*=p,m<<=1,f<<=1,y<<=1,1<=(g*=2)&&(m++,g--),1<=(v*=2)&&(f++,v--),1<=(b*=2)&&(y++,b--)}return x},o.default.prototype.noiseDetail=function(e,t){0<e&&(l=e),0<t&&(p=t)},o.default.prototype.noiseSeed=function(e){var t,r,n,o=(n=4294967296,{setSeed:function(e){r=t=(null==e?Math.random()*n:e)>>>0},getSeed:function(){return t},rand:function(){return(r=(1664525*r+1013904223)%n)/n}});o.setSeed(e),i=new Array(4096);for(var a=0;a<4096;a++)i[a]=o.rand()};var u=o.default;r.default=u},{"../core/main":32}],65:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(e,t){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),this}function l(e,t,r){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),0!==r&&(this.z=this.z%r),this}a.default.Vector=function(e,t,r){var n,o,i;i=e instanceof a.default?(this.p5=e,n=t[0]||0,o=t[1]||0,t[2]||0):(n=e||0,o=t||0,r||0),this.x=n,this.y=o,this.z=i},a.default.Vector.prototype.toString=function(){return"p5.Vector Object : [".concat(this.x,", ").concat(this.y,", ").concat(this.z,"]")},a.default.Vector.prototype.set=function(e,t,r){return e instanceof a.default.Vector?(this.x=e.x||0,this.y=e.y||0,this.z=e.z||0):e instanceof Array?(this.x=e[0]||0,this.y=e[1]||0,this.z=e[2]||0):(this.x=e||0,this.y=t||0,this.z=r||0),this},a.default.Vector.prototype.copy=function(){return this.p5?new a.default.Vector(this.p5,[this.x,this.y,this.z]):new a.default.Vector(this.x,this.y,this.z)},a.default.Vector.prototype.add=function(e,t,r){return e instanceof a.default.Vector?(this.x+=e.x||0,this.y+=e.y||0,this.z+=e.z||0):e instanceof Array?(this.x+=e[0]||0,this.y+=e[1]||0,this.z+=e[2]||0):(this.x+=e||0,this.y+=t||0,this.z+=r||0),this},a.default.Vector.prototype.rem=function(e,t,r){if(e instanceof a.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)){var n=parseFloat(e.x),o=parseFloat(e.y),i=parseFloat(e.z);l.call(this,n,o,i)}}else if(e instanceof Array)e.every((function(e){return Number.isFinite(e)}))&&(2===e.length&&s.call(this,e[0],e[1]),3===e.length&&l.call(this,e[0],e[1],e[2]));else if(1===arguments.length){if(Number.isFinite(e)&&0!==e)return this.x=this.x%e,this.y=this.y%e,this.z=this.z%e,this}else if(2===arguments.length){var p=Array.prototype.slice.call(arguments);p.every((function(e){return Number.isFinite(e)}))&&2===p.length&&s.call(this,p[0],p[1])}else if(3===arguments.length){var u=Array.prototype.slice.call(arguments);u.every((function(e){return Number.isFinite(e)}))&&3===u.length&&l.call(this,u[0],u[1],u[2])}},a.default.Vector.prototype.sub=function(e,t,r){return e instanceof a.default.Vector?(this.x-=e.x||0,this.y-=e.y||0,this.z-=e.z||0):e instanceof Array?(this.x-=e[0]||0,this.y-=e[1]||0,this.z-=e[2]||0):(this.x-=e||0,this.y-=t||0,this.z-=r||0),this},a.default.Vector.prototype.mult=function(e,t,r){if(e instanceof a.default.Vector)return Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z?(this.x*=e.x,this.y*=e.y,this.z*=e.z):console.warn("p5.Vector.prototype.mult:","x contains components that are either undefined or not finite numbers"),this;if(e instanceof Array)return e.every((function(e){return Number.isFinite(e)}))&&e.every((function(e){return"number"==typeof e}))?1===e.length?(this.x*=e[0],this.y*=e[0],this.z*=e[0]):2===e.length?(this.x*=e[0],this.y*=e[1]):3===e.length&&(this.x*=e[0],this.y*=e[1],this.z*=e[2]):console.warn("p5.Vector.prototype.mult:","x contains elements that are either undefined or not finite numbers"),this;var n=Array.prototype.slice.call(arguments);return n.every((function(e){return Number.isFinite(e)}))&&n.every((function(e){return"number"==typeof e}))?(1===arguments.length&&(this.x*=e,this.y*=e,this.z*=e),2===arguments.length&&(this.x*=e,this.y*=t),3===arguments.length&&(this.x*=e,this.y*=t,this.z*=r)):console.warn("p5.Vector.prototype.mult:","x, y, or z arguments are either undefined or not a finite number"),this},a.default.Vector.prototype.div=function(e,t,r){if(e instanceof a.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z){if(0===e.x||0===e.y||0===e.z)return console.warn("p5.Vector.prototype.div:","divide by 0"),this;this.x/=e.x,this.y/=e.y,this.z/=e.z}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}if(e instanceof Array){if(e.every((function(e){return Number.isFinite(e)}))&&e.every((function(e){return"number"==typeof e}))){if(e.some((function(e){return 0===e})))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===e.length?(this.x/=e[0],this.y/=e[0],this.z/=e[0]):2===e.length?(this.x/=e[0],this.y/=e[1]):3===e.length&&(this.x/=e[0],this.y/=e[1],this.z/=e[2])}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}var n=Array.prototype.slice.call(arguments);if(n.every((function(e){return Number.isFinite(e)}))&&n.every((function(e){return"number"==typeof e}))){if(n.some((function(e){return 0===e})))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===arguments.length&&(this.x/=e,this.y/=e,this.z/=e),2===arguments.length&&(this.x/=e,this.y/=t),3===arguments.length&&(this.x/=e,this.y/=t,this.z/=r)}else console.warn("p5.Vector.prototype.div:","x, y, or z arguments are either undefined or not a finite number");return this},a.default.Vector.prototype.mag=function(){return Math.sqrt(this.magSq())},a.default.Vector.prototype.magSq=function(){var e=this.x,t=this.y,r=this.z;return e*e+t*t+r*r},a.default.Vector.prototype.dot=function(e,t,r){return e instanceof a.default.Vector?this.dot(e.x,e.y,e.z):this.x*(e||0)+this.y*(t||0)+this.z*(r||0)},a.default.Vector.prototype.cross=function(e){var t=this.y*e.z-this.z*e.y,r=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return this.p5?new a.default.Vector(this.p5,[t,r,n]):new a.default.Vector(t,r,n)},a.default.Vector.prototype.dist=function(e){return e.copy().sub(this).mag()},a.default.Vector.prototype.normalize=function(){var e=this.mag();return 0!==e&&this.mult(1/e),this},a.default.Vector.prototype.limit=function(e){var t=this.magSq();return e*e<t&&this.div(Math.sqrt(t)).mult(e),this},a.default.Vector.prototype.setMag=function(e){return this.normalize().mult(e)},a.default.Vector.prototype.heading=function(){var e=Math.atan2(this.y,this.x);return this.p5?this.p5._fromRadians(e):e},a.default.Vector.prototype.rotate=function(e){var t=this.heading()+e;this.p5&&(t=this.p5._toRadians(t));var r=this.mag();return this.x=Math.cos(t)*r,this.y=Math.sin(t)*r,this},a.default.Vector.prototype.angleBetween=function(e){var t,r=this.dot(e)/(this.mag()*e.mag());return t=Math.acos(Math.min(1,Math.max(-1,r))),t*=Math.sign(this.cross(e).z||1),this.p5&&(t=this.p5._fromRadians(t)),t},a.default.Vector.prototype.lerp=function(e,t,r,n){return e instanceof a.default.Vector?this.lerp(e.x,e.y,e.z,t):(this.x+=(e-this.x)*n||0,this.y+=(t-this.y)*n||0,this.z+=(r-this.z)*n||0,this)},a.default.Vector.prototype.reflect=function(e){return e.normalize(),this.sub(e.mult(2*this.dot(e)))},a.default.Vector.prototype.array=function(){return[this.x||0,this.y||0,this.z||0]},a.default.Vector.prototype.equals=function(e,t,r){var n,o,i;return i=e instanceof a.default.Vector?(n=e.x||0,o=e.y||0,e.z||0):e instanceof Array?(n=e[0]||0,o=e[1]||0,e[2]||0):(n=e||0,o=t||0,r||0),this.x===n&&this.y===o&&this.z===i},a.default.Vector.fromAngle=function(e,t){return void 0===t&&(t=1),new a.default.Vector(t*Math.cos(e),t*Math.sin(e),0)},a.default.Vector.fromAngles=function(e,t,r){void 0===r&&(r=1);var n=Math.cos(t),o=Math.sin(t),i=Math.cos(e),s=Math.sin(e);return new a.default.Vector(r*s*o,-r*i,r*s*n)},a.default.Vector.random2D=function(){return this.fromAngle(Math.random()*i.TWO_PI)},a.default.Vector.random3D=function(){var e=Math.random()*i.TWO_PI,t=2*Math.random()-1,r=Math.sqrt(1-t*t),n=r*Math.cos(e),o=r*Math.sin(e);return new a.default.Vector(n,o,t)},a.default.Vector.add=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.add")),r.add(t),r},a.default.Vector.rem=function(e,t){if(e instanceof a.default.Vector&&t instanceof a.default.Vector){var r=e.copy();return r.rem(t),r}},a.default.Vector.sub=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.sub")),r.sub(t),r},a.default.Vector.mult=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.mult")),r.mult(t),r},a.default.Vector.div=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.div")),r.div(t),r},a.default.Vector.dot=function(e,t){return e.dot(t)},a.default.Vector.cross=function(e,t){return e.cross(t)},a.default.Vector.dist=function(e,t){return e.dist(t)},a.default.Vector.lerp=function(e,t,r,n){return n?n.set(e):(n=e.copy(),4===arguments.length&&a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.lerp")),n.lerp(t,r),n},a.default.Vector.mag=function(e){var t=e.x,r=e.y,n=e.z,o=t*t+r*r+n*n;return Math.sqrt(o)};var p=a.default.Vector;r.default=p},{"../core/constants":22,"../core/main":32}],66:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},a="_lcg_random_state",i=4294967296,s=0;o.default.prototype._lcg=function(e){return this[e]=(1664525*this[e]+1013904223)%i,this[e]/i},o.default.prototype._lcgSetSeed=function(e,t){this[e]=(null==t?Math.random()*i:t)>>>0},o.default.prototype.randomSeed=function(e){this._lcgSetSeed(a,e),this._gaussian_previous=!1},o.default.prototype.random=function(e,t){var r;if(o.default._validateParameters("random",arguments),r=null!=this[a]?this._lcg(a):Math.random(),void 0===e)return r;if(void 0===t)return e instanceof Array?e[Math.floor(r*e.length)]:r*e;if(t<e){var n=e;e=t,t=n}return r*(t-e)+e},o.default.prototype.randomGaussian=function(e,t){var r,n,o,a;if(this._gaussian_previous)r=s,this._gaussian_previous=!1;else{for(;1<=(a=(n=this.random(2)-1)*n+(o=this.random(2)-1)*o););r=n*(a=Math.sqrt(-2*Math.log(a)/a)),s=o*a,this._gaussian_previous=!0}return r*(t||1)+(e||0)};var l=o.default;r.default=l},{"../core/main":32}],67:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));a.default.prototype._angleMode=i.RADIANS,a.default.prototype.acos=function(e){return this._fromRadians(Math.acos(e))},a.default.prototype.asin=function(e){return this._fromRadians(Math.asin(e))},a.default.prototype.atan=function(e){return this._fromRadians(Math.atan(e))},a.default.prototype.atan2=function(e,t){return this._fromRadians(Math.atan2(e,t))},a.default.prototype.cos=function(e){return Math.cos(this._toRadians(e))},a.default.prototype.sin=function(e){return Math.sin(this._toRadians(e))},a.default.prototype.tan=function(e){return Math.tan(this._toRadians(e))},a.default.prototype.degrees=function(e){return e*i.RAD_TO_DEG},a.default.prototype.radians=function(e){return e*i.DEG_TO_RAD},a.default.prototype.angleMode=function(e){e!==i.DEGREES&&e!==i.RADIANS||(this._angleMode=e)},a.default.prototype._toRadians=function(e){return this._angleMode===i.DEGREES?e*i.DEG_TO_RAD:e},a.default.prototype._toDegrees=function(e){return this._angleMode===i.RADIANS?e*i.RAD_TO_DEG:e},a.default.prototype._fromRadians=function(e){return this._angleMode===i.DEGREES?e*i.RAD_TO_DEG:e};var s=a.default;r.default=s},{"../core/constants":22,"../core/main":32}],68:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.textAlign=function(e,t){var r;return o.default._validateParameters("textAlign",arguments),(r=this._renderer).textAlign.apply(r,arguments)},o.default.prototype.textLeading=function(e){var t;return o.default._validateParameters("textLeading",arguments),(t=this._renderer).textLeading.apply(t,arguments)},o.default.prototype.textSize=function(e){var t;return o.default._validateParameters("textSize",arguments),(t=this._renderer).textSize.apply(t,arguments)},o.default.prototype.textStyle=function(e){var t;return o.default._validateParameters("textStyle",arguments),(t=this._renderer).textStyle.apply(t,arguments)},o.default.prototype.textWidth=function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return r[0]+="",o.default._validateParameters("textWidth",r),0===r[0].length?0:(e=this._renderer).textWidth.apply(e,r)},o.default.prototype.textAscent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("textAscent",t),this._renderer.textAscent()},o.default.prototype.textDescent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("textDescent",t),this._renderer.textDescent()},o.default.prototype._updateTextMetrics=function(){return this._renderer._updateTextMetrics()};var a=o.default;r.default=a},{"../core/main":32}],69:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=p(e("../core/constants")),s=p(e("opentype.js"));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function p(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),a.default.prototype.loadFont=function(e,t,r){a.default._validateParameters("loadFont",arguments);var n=new a.default.Font(this),o=this;return s.load(e,(function(i,s){if(i)return a.default._friendlyFileLoadError(4,e),void 0!==r?r(i):void console.error(i,e);n.font=s,void 0!==t&&t(n),o._decrementPreload();var l,p,u=e.split("\\").pop().split("/").pop(),c=u.lastIndexOf("."),d=c<1?null:u.substr(c+1);["ttf","otf","woff","woff2"].includes(d)&&(l=u.substr(0,c),(p=document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(l,";\nsrc: url(").concat(e,");\n}\n"))),document.head.appendChild(p))})),n},a.default.prototype.text=function(e,t,r,n,o){var i;return a.default._validateParameters("text",arguments),this._renderer._doFill||this._renderer._doStroke?(i=this._renderer).text.apply(i,arguments):this},a.default.prototype.textFont=function(e,t){if(a.default._validateParameters("textFont",arguments),arguments.length){if(!e)throw new Error("null font passed to textFont");return this._renderer._setProperty("_textFont",e),t&&(this._renderer._setProperty("_textSize",t),this._renderer._setProperty("_textLeading",t*i._DEFAULT_LEADMULT)),this._renderer._applyTextProperties()}return this._renderer._textFont};var u=a.default;r.default=u},{"../core/constants":22,"../core/friendly_errors/fes_core":24,"../core/friendly_errors/file_errors":25,"../core/friendly_errors/validate_params":27,"../core/main":32,"opentype.js":13}],70:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==i(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var r=function(e,t){if("object"!==i(e))e=t;else for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}(t,{sampleFactor:.1,simplifyThreshold:0}),n=m(e,0,1),o=n/(n*r.sampleFactor),a=[],s=0;s<n;s+=o)a.push(m(e,s));return r.simplifyThreshold&&function(e){for(var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=e.length-1;3<e.length&&0<=r;--r)c(u(e,r-1),u(e,r),u(e,r+1),t)&&e.splice(r%e.length,1)}(a,r.simplifyThreshold),a}function l(e){for(var t,r=[],n=0;n<e.length;n++)"M"===e[n].type&&(t&&r.push(t),t=[]),t.push(p(e[n]));return r.push(t),r}function p(e){var t=[e.type];return"M"===e.type||"L"===e.type?t.push(e.x,e.y):"C"===e.type?t.push(e.x1,e.y1,e.x2,e.y2,e.x,e.y):"Q"===e.type&&t.push(e.x1,e.y1,e.x,e.y),t}function u(e,t){var r=e.length;return e[t<0?t%r+r:t%r]}function c(e,t,r,n){if(!n)return 0==(o=e,i=r,((a=t)[0]-o[0])*(i[1]-o[1])-(i[0]-o[0])*(a[1]-o[1]));var o,a,i;void 0===c.tmpPoint1&&(c.tmpPoint1=[],c.tmpPoint2=[]);var s=c.tmpPoint1,l=c.tmpPoint2;s.x=t.x-e.x,s.y=t.y-e.y,l.x=r.x-t.x,l.y=r.y-t.y;var p=s.x*l.x+s.y*l.y,u=Math.sqrt(s.x*s.x+s.y*s.y),d=Math.sqrt(l.x*l.x+l.y*l.y);return Math.acos(p/(u*d))<n}function d(e,t,r,n,o,a,i,s,l){var p=1-l,u=Math.pow(p,3),c=Math.pow(p,2),d=l*l,h=d*l,m=u*e+3*c*l*r+3*p*l*l*o+h*i,f=u*t+3*c*l*n+3*p*l*l*a+h*s,y=e+2*l*(r-e)+d*(o-2*r+e),g=t+2*l*(n-t)+d*(a-2*n+t),v=r+2*l*(o-r)+d*(i-2*o+r),b=n+2*l*(a-n)+d*(s-2*a+n),x=p*e+l*r,_=p*t+l*n,w=p*o+l*i,S=p*a+l*s,M=90-180*Math.atan2(y-v,g-b)/Math.PI;return(v<y||g<b)&&(M+=180),{x:m,y:f,m:{x:y,y:g},n:{x:v,y:b},start:{x:x,y:_},end:{x:w,y:S},alpha:M}}function h(e,t,r,n,o,a,i,s,l){return null==l?b(e,t,r,n,o,a,i,s):d(e,t,r,n,o,a,i,s,function(e,t,r,n,o,a,i,s,l){if(!(l<0||b(e,t,r,n,o,a,i,s)<l)){var p,u=.5,c=1-u;for(p=b(e,t,r,n,o,a,i,s,c);.01<Math.abs(p-l);)p=b(e,t,r,n,o,a,i,s,c+=(p<l?1:-1)*(u/=2));return c}}(e,t,r,n,o,a,i,s,l))}function m(e,t,r){for(var n,o,a,i,s,l=0,p=0,u=(e=function(e,t){function r(e,t,r){var n,o;if(!e)return["C",t.x,t.y,t.x,t.y,t.x,t.y];switch(e[0]in{T:1,Q:1}||(t.qx=t.qy=null),e[0]){case"M":t.X=e[1],t.Y=e[2];break;case"A":e=["C"].concat(function e(t,r,n,o,a,i,s,l,p,u){var c,d,h,m,f,y=Math.PI,g=120*y/180,v=y/180*(+a||0),b=[],x=function(e,t,r){return{x:e*Math.cos(r)-t*Math.sin(r),y:e*Math.sin(r)+t*Math.cos(r)}};if(u)c=u[0],d=u[1],h=u[2],m=u[3];else{t=(f=x(t,r,-v)).x,r=f.y;var _=(t-(l=(f=x(l,p,-v)).x))/2,w=(r-(p=f.y))/2,S=_*_/(n*n)+w*w/(o*o);1<S&&(n*=S=Math.sqrt(S),o*=S);var M=n*n,C=o*o,T=(i===s?-1:1)*Math.sqrt(Math.abs((M*C-M*w*w-C*_*_)/(M*w*w+C*_*_)));h=T*n*w/o+(t+l)/2,m=T*-o*_/n+(r+p)/2,c=Math.asin(((r-m)/o).toFixed(9)),d=Math.asin(((p-m)/o).toFixed(9)),(c=t<h?y-c:c)<0&&(c=2*y+c),(d=l<h?y-d:d)<0&&(d=2*y+d),s&&d<c&&(c-=2*y),!s&&c<d&&(d-=2*y)}var E=d-c;if(Math.abs(E)>g){var N=d,P=l,A=p;d=c+g*(s&&c<d?1:-1),b=e(l=h+n*Math.cos(d),p=m+o*Math.sin(d),n,o,a,0,s,P,A,[d,N,h,m])}E=d-c;var I=Math.cos(c),O=Math.sin(c),L=Math.cos(d),R=Math.sin(d),D=Math.tan(E/4),k=4/3*n*D,F=4/3*o*D,B=[t,r],U=[t+k*O,r-F*I],G=[l+k*R,p-F*L],V=[l,p];if(U[0]=2*B[0]-U[0],U[1]=2*B[1]-U[1],u)return[U,G,V].concat(b);for(var j=[],z=0,H=(b=[U,G,V].concat(b).join().split(",")).length;z<H;z++)j[z]=z%2?x(b[z-1],b[z],v).y:x(b[z],b[z+1],v).x;return j}.apply(0,[t.x,t.y].concat(e.slice(1))));break;case"S":o="C"===r||"S"===r?(n=2*t.x-t.bx,2*t.y-t.by):(n=t.x,t.y),e=["C",n,o].concat(e.slice(1));break;case"T":"Q"===r||"T"===r?(t.qx=2*t.x-t.qx,t.qy=2*t.y-t.qy):(t.qx=t.x,t.qy=t.y),e=["C"].concat(v(t.x,t.y,t.qx,t.qy,e[1],e[2]));break;case"Q":t.qx=e[1],t.qy=e[2],e=["C"].concat(v(t.x,t.y,e[1],e[2],e[3],e[4]));break;case"L":e=["C"].concat(g(t.x,t.y,e[1],e[2]));break;case"H":e=["C"].concat(g(t.x,t.y,e[1],t.y));break;case"V":e=["C"].concat(g(t.x,t.y,t.x,e[1]));break;case"Z":e=["C"].concat(g(t.x,t.y,t.X,t.Y))}return e}function n(e,t){if(7<e[t].length){e[t].shift();for(var r=e[t];r.length;)u[t]="A",s&&(c[t]="A"),e.splice(t++,0,["C"].concat(r.splice(0,6)));e.splice(t,1),a=Math.max(i.length,s&&s.length||0)}}function o(e,t,r,n,o){e&&t&&"M"===e[o][0]&&"M"!==t[o][0]&&(t.splice(o,0,["M",n.x,n.y]),r.bx=0,r.by=0,r.x=e[o][1],r.y=e[o][2],a=Math.max(i.length,s&&s.length||0))}var a,i=f(e),s=t,l={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},u=[],c=[],d="",h="";a=Math.max(i.length,s&&s.length||0);for(var m=0;m<a;m++){i[m]&&(d=i[m][0]),"C"!==d&&(u[m]=d,m&&(h=u[m-1])),i[m]=r(i[m],l,h),"A"!==u[m]&&"C"===d&&(u[m]="C"),n(i,m),s&&(s[m]&&(d=s[m][0]),"C"!==d&&(c[m]=d,m&&(h=c[m-1])),s[m]=r(s[m],p,h),"A"!==c[m]&&"C"===d&&(c[m]="C"),n(s,m)),o(i,s,l,p,m),o(s,i,p,l,m);var y=i[m],b=s&&s[m],x=y.length,_=s&&b.length;l.x=y[x-2],l.y=y[x-1],l.bx=parseFloat(y[x-4])||l.x,l.by=parseFloat(y[x-3])||l.y,p.bx=s&&(parseFloat(b[_-4])||p.x),p.by=s&&(parseFloat(b[_-3])||p.y),p.x=s&&b[_-2],p.y=s&&b[_-1]}return s?[i,s]:i}(e)).length;p<u;p++){if("M"===(a=e[p])[0])n=+a[1],o=+a[2];else{if(t<l+(i=h(n,o,a[1],a[2],a[3],a[4],a[5],a[6]))&&!r)return{x:(s=h(n,o,a[1],a[2],a[3],a[4],a[5],a[6],t-l)).x,y:s.y,alpha:s.alpha};l+=i,n=+a[5],o=+a[6]}a.shift()}return(s=r?l:d(n,o,a[0],a[1],a[2],a[3],a[4],a[5],1)).alpha&&(s={x:s.x,y:s.y,alpha:s.alpha}),s}function f(e){var t,r=[],n=0,o=0,a=0,i=0,s=0;if(!e)return r;"M"===e[0][0]&&(a=n=+e[0][1],i=o=+e[0][2],s++,r[0]=["M",n,o]);for(var l,p,u=3===e.length&&"M"===e[0][0]&&"R"===e[1][0].toUpperCase()&&"Z"===e[2][0].toUpperCase(),c=s,d=e.length;c<d;c++){if(r.push(l=[]),(p=e[c])[0]!==String.prototype.toUpperCase.call(p[0]))switch(l[0]=String.prototype.toUpperCase.call(p[0]),l[0]){case"A":l[1]=p[1],l[2]=p[2],l[3]=p[3],l[4]=p[4],l[5]=p[5],l[6]=+(p[6]+n),l[7]=+(p[7]+o);break;case"V":l[1]=+p[1]+o;break;case"H":l[1]=+p[1]+n;break;case"R":for(var h=2,m=(t=[n,o].concat(p.slice(1))).length;h<m;h++)t[h]=+t[h]+n,t[++h]=+t[h]+o;r.pop(),r=r.concat(y(t,u));break;case"M":a=+p[1]+n,i=+p[2]+o;break;default:for(var f=1,g=p.length;f<g;f++)l[f]=+p[f]+(f%2?n:o)}else if("R"===p[0])t=[n,o].concat(p.slice(1)),r.pop(),r=r.concat(y(t,u)),l=["R"].concat(p.slice(-2));else for(var v=0,b=p.length;v<b;v++)l[v]=p[v];switch(l[0]){case"Z":n=a,o=i;break;case"H":n=l[1];break;case"V":o=l[1];break;case"M":a=l[l.length-2],i=l[l.length-1];break;default:n=l[l.length-2],o=l[l.length-1]}}return r}function y(e,t){for(var r=[],n=0,o=e.length;n<o-2*!t;n+=2){var a=[{x:+e[n-2],y:+e[n-1]},{x:+e[n],y:+e[n+1]},{x:+e[n+2],y:+e[n+3]},{x:+e[n+4],y:+e[n+5]}];t?n?o-4===n?a[3]={x:+e[0],y:+e[1]}:o-2===n&&(a[2]={x:+e[0],y:+e[1]},a[3]={x:+e[2],y:+e[3]}):a[0]={x:+e[o-2],y:+e[o-1]}:o-4===n?a[3]=a[2]:n||(a[0]={x:+e[n],y:+e[n+1]}),r.push(["C",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function g(e,t,r,n){return[e,t,r,n,r,n]}function v(e,t,r,n,o,a){return[1/3*e+2/3*r,1/3*t+2/3*n,1/3*o+2/3*r,1/3*a+2/3*n,o,a]}function b(e,t,r,n,o,a,i,s,l){null==l&&(l=1);for(var p=(l=1<l?1:l<0?0:l)/2,u=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],c=0,d=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],h=0;h<12;h++){var m=p*u[h]+p,f=x(m,e,r,o,i),y=x(m,t,n,a,s),g=f*f+y*y;c+=d[h]*Math.sqrt(g)}return p*c}function x(e,t,r,n,o){return e*(e*(-3*t+9*r-9*n+3*o)+6*t-12*r+6*n)-3*t+3*r}o.default.Font=function(e){this.parent=e,this.cache={},this.font=void 0},o.default.Font.prototype.textBounds=function(e){var t,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,o=3<arguments.length?arguments[3]:void 0,i=4<arguments.length?arguments[4]:void 0,s=i&&i.renderer&&i.renderer._pInst||this.parent,l=s._renderer.drawingContext;if(l.textAlign||a.LEFT,l.textBaseline||a.BASELINE,o=o||s._renderer._textSize,!t){var p,u,c=[],d=[],h=[];h[0]=[];var m=[],f=this._scale(o),y=s._renderer.textLeading(),g=0;this.font.forEachGlyph(e,r,n,o,i,(function(e,t,r,n){var o=e.getMetrics();0===e.index||10===e.index?h[g+=1]=[]:(h[g].push(t+o.xMin*f),h[g].push(t+o.xMax*f),m.push(r+g*y+-o.yMin*f),m.push(r+g*y+-o.yMax*f))})),0<h[g].length&&(c[g]=Math.min.apply(null,h[g]),d[g]=Math.max.apply(null,h[g]));for(var v=0,b=0;b<=g;b++){c[b]=Math.min.apply(null,h[b]),d[b]=Math.max.apply(null,h[b]);var x=d[b]-c[b];v<x&&(v=x)}var _=Math.min.apply(null,c);t={x:_,y:p=Math.min.apply(null,m),h:Math.max.apply(null,m)-p,w:v,advance:_-r},u=this._handleAlignment(s._renderer,e,t.x,t.y,t.w+t.advance),t.x=u.x,t.y=u.y}return t},o.default.Font.prototype.textToPoints=function(e,t,r,n,o){var a,i=0,p=[],u=this._getGlyphs(e);n=n||this.parent._renderer._textSize;for(var c=0;c<u.length;c++){if(!(u[a=c].name&&"space"===u[a].name||e.length===u.length&&" "===e[a]||u[a].index&&3===u[a].index))for(var d=l(u[c].getPath(t,r,n).commands),h=0;h<d.length;h++)for(var m=s(d[h],o),f=0;f<m.length;f++)m[f].x+=i,p.push(m[f]);i+=u[c].advanceWidth*this._scale(n)}return p},o.default.Font.prototype._getGlyphs=function(e){return this.font.stringToGlyphs(e)},o.default.Font.prototype._getPath=function(e,t,r,n){var o=(n&&n.renderer&&n.renderer._pInst||this.parent)._renderer,a=this._handleAlignment(o,e,t,r);return this.font.getPath(e,a.x,a.y,o._textSize,n)},o.default.Font.prototype._getPathData=function(e,t,r,n){var o=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,n):"object"===i(t)&&(n=t),n&&"number"==typeof n.decimals&&(o=n.decimals),e.toPathData(o)},o.default.Font.prototype._getSVG=function(e,t,r,n){var o=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,n):"object"===i(t)&&(n=t),n&&("number"==typeof n.decimals&&(o=n.decimals),"number"==typeof n.strokeWidth&&(e.strokeWidth=n.strokeWidth),void 0!==n.fill&&(e.fill=n.fill),void 0!==n.stroke&&(e.stroke=n.stroke)),e.toSVG(o)},o.default.Font.prototype._renderPath=function(e,t,r,n){var o,s=n&&n.renderer||this.parent._renderer,l=s.drawingContext;o="object"===i(e)&&e.commands?e.commands:this._getPath(e,t,r,n).commands,l.beginPath();var p=!0,u=!1,c=void 0;try{for(var d,h=o[Symbol.iterator]();!(p=(d=h.next()).done);p=!0){var m=d.value;"M"===m.type?l.moveTo(m.x,m.y):"L"===m.type?l.lineTo(m.x,m.y):"C"===m.type?l.bezierCurveTo(m.x1,m.y1,m.x2,m.y2,m.x,m.y):"Q"===m.type?l.quadraticCurveTo(m.x1,m.y1,m.x,m.y):"Z"===m.type&&l.closePath()}}catch(e){u=!0,c=e}finally{try{p||null==h.return||h.return()}finally{if(u)throw c}}return s._doStroke&&s._strokeSet&&l.stroke(),s._doFill&&(s._fillSet||s._setFill(a._DEFAULT_TEXT_FILL),l.fill()),this},o.default.Font.prototype._textWidth=function(e,t){return this.font.getAdvanceWidth(e,t)},o.default.Font.prototype._textAscent=function(e){return this.font.ascender*this._scale(e)},o.default.Font.prototype._textDescent=function(e){return-this.font.descender*this._scale(e)},o.default.Font.prototype._scale=function(e){return 1/this.font.unitsPerEm*(e||this.parent._renderer._textSize)},o.default.Font.prototype._handleAlignment=function(e,t,r,n,o){var i=e._textSize;switch(void 0===o&&(o=this._textWidth(t,i)),e._textAlign){case a.CENTER:r-=o/2;break;case a.RIGHT:r-=o}switch(e._textBaseline){case a.TOP:n+=this._textAscent(i);break;case a.CENTER:n+=this._textAscent(i)/2;break;case a.BOTTOM:n-=this._textDescent(i)}return{x:r,y:n}};var _=o.default;r.default=_},{"../core/constants":22,"../core/main":32}],71:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.append=function(e,t){return e.push(t),e},o.default.prototype.arrayCopy=function(e,t,r,n,o){var a,i;e=void 0!==o?(i=Math.min(o,e.length),a=n,e.slice(t,i+t)):(i=void 0!==r?(i=r,Math.min(i,e.length)):e.length,a=0,r=t,e.slice(0,i)),Array.prototype.splice.apply(r,[a,i].concat(e))},o.default.prototype.concat=function(e,t){return e.concat(t)},o.default.prototype.reverse=function(e){return e.reverse()},o.default.prototype.shorten=function(e){return e.pop(),e},o.default.prototype.shuffle=function(e,t){for(var r,n,o=ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(e),a=(e=t||o?e:e.slice()).length;1<a;)r=this.random(0,1)*a|0,n=e[--a],e[a]=e[r],e[r]=n;return e},o.default.prototype.sort=function(e,t){var r=t?e.slice(0,Math.min(t,e.length)):e,n=t?e.slice(Math.min(t,e.length)):[];return(r="string"==typeof r[0]?r.sort():r.sort((function(e,t){return e-t}))).concat(n)},o.default.prototype.splice=function(e,t,r){return Array.prototype.splice.apply(e,[r,0].concat(t)),e},o.default.prototype.subset=function(e,t,r){return void 0!==r?e.slice(t,t+r):e.slice(t,e.length)};var a=o.default;r.default=a},{"../core/main":32}],72:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.float=function(e){return e instanceof Array?e.map(parseFloat):parseFloat(e)},o.default.prototype.int=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:10;return e===1/0||"Infinity"===e?1/0:e===-1/0||"-Infinity"===e?-1/0:"string"==typeof e?parseInt(e,t):"number"==typeof e?0|e:"boolean"==typeof e?e?1:0:e instanceof Array?e.map((function(e){return o.default.prototype.int(e,t)})):void 0},o.default.prototype.str=function(e){return e instanceof Array?e.map(o.default.prototype.str):String(e)},o.default.prototype.boolean=function(e){return"number"==typeof e?0!==e:"string"==typeof e?"true"===e.toLowerCase():"boolean"==typeof e?e:e instanceof Array?e.map(o.default.prototype.boolean):void 0},o.default.prototype.byte=function(e){var t=o.default.prototype.int(e,10);return"number"==typeof t?(t+128)%256-128:t instanceof Array?t.map(o.default.prototype.byte):void 0},o.default.prototype.char=function(e){return"number"!=typeof e||isNaN(e)?e instanceof Array?e.map(o.default.prototype.char):"string"==typeof e?o.default.prototype.char(parseInt(e,10)):void 0:String.fromCharCode(e)},o.default.prototype.unchar=function(e){return"string"==typeof e&&1===e.length?e.charCodeAt(0):e instanceof Array?e.map(o.default.prototype.unchar):void 0},o.default.prototype.hex=function(e,t){if(t=null==t?t=8:t,e instanceof Array)return e.map((function(e){return o.default.prototype.hex(e,t)}));if(e===1/0||e===-1/0)return(e===1/0?"F":"0").repeat(t);if("number"==typeof e){e<0&&(e=4294967295+e+1);for(var r=Number(e).toString(16).toUpperCase();r.length<t;)r="0".concat(r);return r.length>=t&&(r=r.substring(r.length-t,r.length)),r}},o.default.prototype.unhex=function(e){return e instanceof Array?e.map(o.default.prototype.unhex):parseInt("0x".concat(e),16)};var a=o.default;r.default=a},{"../core/main":32}],73:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(e,t,r){var n=e<0,o=n?e.toString().substring(1):e.toString(),a=o.indexOf("."),i=-1!==a?o.substring(0,a):o,s=-1!==a?o.substring(a+1):"",l=n?"-":"";if(void 0!==r){var p="";(-1!==a||0<r-s.length)&&(p="."),s.length>r&&(s=s.substring(0,r));for(var u=0;u<t-i.length;u++)l+="0";l+=i,l+=p,l+=s;for(var c=0;c<r-s.length;c++)l+="0";return l}for(var d=0;d<Math.max(t-i.length,0);d++)l+="0";return l+o}function i(e,t){var r=(e=e.toString()).indexOf("."),n=-1!==r?e.substring(r):"",o=-1!==r?e.substring(0,r):e;if(o=o.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),0===t)n="";else if(void 0!==t)if(t>n.length)for(var a=t-(n+=-1===r?".":"").length+1,i=0;i<a;i++)n+="0";else n=n.substring(0,t+1);return o+n}function s(e){return 0<parseFloat(e)?"+".concat(e.toString()):e.toString()}function l(e){return 0<=parseFloat(e)?" ".concat(e.toString()):e.toString()}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),o.default.prototype.join=function(e,t){return o.default._validateParameters("join",arguments),e.join(t)},o.default.prototype.match=function(e,t){return o.default._validateParameters("match",arguments),e.match(t)},o.default.prototype.matchAll=function(e,t){o.default._validateParameters("matchAll",arguments);for(var r=new RegExp(t,"g"),n=r.exec(e),a=[];null!==n;)a.push(n),n=r.exec(e);return a},o.default.prototype.nf=function(e,t,r){return o.default._validateParameters("nf",arguments),e instanceof Array?e.map((function(e){return a(e,t,r)})):"[object Arguments]"===Object.prototype.toString.call(e)?3===e.length?this.nf(e[0],e[1],e[2]):2===e.length?this.nf(e[0],e[1]):this.nf(e[0]):a(e,t,r)},o.default.prototype.nfc=function(e,t){return o.default._validateParameters("nfc",arguments),e instanceof Array?e.map((function(e){return i(e,t)})):i(e,t)},o.default.prototype.nfp=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("nfp",t);var n=o.default.prototype.nf.apply(this,t);return n instanceof Array?n.map(s):s(n)},o.default.prototype.nfs=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("nfs",t);var n=o.default.prototype.nf.apply(this,t);return n instanceof Array?n.map(l):l(n)},o.default.prototype.split=function(e,t){return o.default._validateParameters("split",arguments),e.split(t)},o.default.prototype.splitTokens=function(e,t){var r;if(o.default._validateParameters("splitTokens",arguments),void 0!==t){var n=t,a=/\]/g.exec(n),i=/\[/g.exec(n);r=i&&a?(n=n.slice(0,a.index)+n.slice(a.index+1),i=/\[/g.exec(n),n=n.slice(0,i.index)+n.slice(i.index+1),new RegExp("[\\[".concat(n,"\\]]"),"g")):a?(n=n.slice(0,a.index)+n.slice(a.index+1),new RegExp("[".concat(n,"\\]]"),"g")):i?(n=n.slice(0,i.index)+n.slice(i.index+1),new RegExp("[".concat(n,"\\[]"),"g")):new RegExp("[".concat(n,"]"),"g")}else r=/\s/g;return e.split(r).filter((function(e){return e}))},o.default.prototype.trim=function(e){return o.default._validateParameters("trim",arguments),e instanceof Array?e.map(this.trim):e.trim()};var p=o.default;r.default=p},{"../core/friendly_errors/fes_core":24,"../core/friendly_errors/file_errors":25,"../core/friendly_errors/validate_params":27,"../core/main":32}],74:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.day=function(){return(new Date).getDate()},o.default.prototype.hour=function(){return(new Date).getHours()},o.default.prototype.minute=function(){return(new Date).getMinutes()},o.default.prototype.millis=function(){return-1===this._millisStart?0:window.performance.now()-this._millisStart},o.default.prototype.month=function(){return(new Date).getMonth()+1},o.default.prototype.second=function(){return(new Date).getSeconds()},o.default.prototype.year=function(){return(new Date).getFullYear()};var a=o.default;r.default=a},{"../core/main":32}],75:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o};e("./p5.Geometry");var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(e,t,r,n,o,i,s){e=e<=0?1:e,t=t<0?0:t,r=r<=0?e:r,n=n<3?3:n;var l,p,u,c=(i=void 0===i||i)?-2:0,d=(o=o<1?1:o)+((s=void 0===s?0!==t:s)?2:0),h=Math.atan2(e-t,r),m=Math.sin(h),f=Math.cos(h);for(l=c;l<=d;++l){var y=l/o,g=r*y,v=void 0;for(v=l<0?(y=g=0,e):o<l?(g=r,y=1,t):e+(t-e)*y,-2!==l&&l!==o+2||(v=0),g-=r/2,p=0;p<n;++p){var b,x=p/(n-1),_=2*Math.PI*x,w=Math.sin(_),S=Math.cos(_);this.vertices.push(new a.default.Vector(w*v,g,S*v)),b=l<0?new a.default.Vector(0,-1,0):o<l&&t?new a.default.Vector(0,1,0):new a.default.Vector(w*f,m,S*f),this.vertexNormals.push(b),this.uvs.push(x,y)}}var M=0;if(i){for(u=0;u<n;++u){var C=(u+1)%n;this.faces.push([M+u,M+n+C,M+n+u])}M+=2*n}for(l=0;l<o;++l){for(p=0;p<n;++p){var T=(p+1)%n;this.faces.push([M+p,M+T,M+n+T]),this.faces.push([M+p,M+n+T,M+n+p])}M+=n}if(s)for(M+=n,p=0;p<n;++p)this.faces.push([M+p,M+(p+1)%n,M+n])}a.default.prototype.plane=function(e,t,r,n){this._assert3d("plane"),a.default._validateParameters("plane",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=1),void 0===n&&(n=1);var o="plane|".concat(r,"|").concat(n);if(!this._renderer.geometryInHash(o)){var i=new a.default.Geometry(r,n,(function(){for(var e,t,r,n=0;n<=this.detailY;n++){t=n/this.detailY;for(var o=0;o<=this.detailX;o++)e=o/this.detailX,r=new a.default.Vector(e-.5,t-.5,0),this.vertices.push(r),this.uvs.push(e,t)}}));i.computeFaces().computeNormals(),r<=1&&n<=1?i._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"),this._renderer.createBuffers(o,i)}return this._renderer.drawBuffersScaled(o,e,t,1),this},a.default.prototype.box=function(e,t,r,n,o){this._assert3d("box"),a.default._validateParameters("box",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=t);var i=this._renderer.attributes&&this._renderer.attributes.perPixelLighting;void 0===n&&(n=i?1:4),void 0===o&&(o=i?1:4);var s="box|".concat(n,"|").concat(o);if(!this._renderer.geometryInHash(s)){var l=new a.default.Geometry(n,o,(function(){var e=[[0,4,2,6],[1,3,5,7],[0,1,4,5],[2,6,3,7],[0,2,1,3],[4,5,6,7]];this.strokeIndices=[[0,1],[1,3],[3,2],[6,7],[8,9],[9,11],[14,15],[16,17],[17,19],[18,19],[20,21],[22,23]];for(var t=0;t<e.length;t++){for(var r=e[t],n=4*t,o=0;o<4;o++){var i=r[o],s=new a.default.Vector((2*(1&i)-1)/2,((2&i)-1)/2,((4&i)/2-1)/2);this.vertices.push(s),this.uvs.push(1&o,(2&o)/2)}this.faces.push([n,1+n,2+n]),this.faces.push([2+n,1+n,3+n])}}));l.computeNormals(),n<=4&&o<=4?l._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"),this._renderer.createBuffers(s,l)}return this._renderer.drawBuffersScaled(s,e,t,r),this},a.default.prototype.sphere=function(e,t,r){return this._assert3d("sphere"),a.default._validateParameters("sphere",arguments),void 0===e&&(e=50),void 0===t&&(t=24),void 0===r&&(r=16),this.ellipsoid(e,e,e,t,r),this},a.default.prototype.cylinder=function(e,t,r,n,o,i){this._assert3d("cylinder"),a.default._validateParameters("cylinder",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===n&&(n=1),void 0===i&&(i=!0),void 0===o&&(o=!0);var l="cylinder|".concat(r,"|").concat(n,"|").concat(o,"|").concat(i);if(!this._renderer.geometryInHash(l)){var p=new a.default.Geometry(r,n);s.call(p,1,1,1,r,n,o,i),r<=24&&n<=16?p._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(l,p)}return this._renderer.drawBuffersScaled(l,e,t,e),this},a.default.prototype.cone=function(e,t,r,n,o){this._assert3d("cone"),a.default._validateParameters("cone",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===n&&(n=1),void 0===o&&(o=!0);var i="cone|".concat(r,"|").concat(n,"|").concat(o);if(!this._renderer.geometryInHash(i)){var l=new a.default.Geometry(r,n);s.call(l,1,0,1,r,n,o,!1),r<=24&&n<=16?l._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(i,l)}return this._renderer.drawBuffersScaled(i,e,t,e),this},a.default.prototype.ellipsoid=function(e,t,r,n,o){this._assert3d("ellipsoid"),a.default._validateParameters("ellipsoid",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=e),void 0===n&&(n=24),void 0===o&&(o=16);var i="ellipsoid|".concat(n,"|").concat(o);if(!this._renderer.geometryInHash(i)){var s=new a.default.Geometry(n,o,(function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=Math.PI*t-Math.PI/2,n=Math.cos(r),o=Math.sin(r),i=0;i<=this.detailX;i++){var s=i/this.detailX,l=2*Math.PI*s,p=Math.cos(l),u=Math.sin(l),c=new a.default.Vector(n*u,o,n*p);this.vertices.push(c),this.vertexNormals.push(c),this.uvs.push(s,t)}}));s.computeFaces(),n<=24&&o<=24?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"),this._renderer.createBuffers(i,s)}return this._renderer.drawBuffersScaled(i,e,t,r),this},a.default.prototype.torus=function(e,t,r,n){if(this._assert3d("torus"),a.default._validateParameters("torus",arguments),void 0===e)e=50;else if(!e)return;if(void 0===t)t=10;else if(!t)return;void 0===r&&(r=24),void 0===n&&(n=16);var o=(t/e).toPrecision(4),i="torus|".concat(o,"|").concat(r,"|").concat(n);if(!this._renderer.geometryInHash(i)){var s=new a.default.Geometry(r,n,(function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=2*Math.PI*t,n=Math.cos(r),i=Math.sin(r),s=1+o*n,l=0;l<=this.detailX;l++){var p=l/this.detailX,u=2*Math.PI*p,c=Math.cos(u),d=Math.sin(u),h=new a.default.Vector(s*c,s*d,o*i),m=new a.default.Vector(n*c,n*d,i);this.vertices.push(h),this.vertexNormals.push(m),this.uvs.push(p,t)}}));s.computeFaces(),r<=24&&n<=16?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(i,s)}return this._renderer.drawBuffersScaled(i,e,e,e),this},a.default.RendererGL.prototype.point=function(e,t,r){void 0===r&&(r=0);var n=[];return n.push(new a.default.Vector(e,t,r)),this._drawPoints(n,this.immediateMode.buffers.point),this},a.default.RendererGL.prototype.triangle=function(e){var t=e[0],r=e[1],n=e[2],o=e[3],i=e[4],s=e[5];if(!this.geometryInHash("tri")){var l=new a.default.Geometry(1,1,(function(){var e=[];e.push(new a.default.Vector(0,0,0)),e.push(new a.default.Vector(0,1,0)),e.push(new a.default.Vector(1,0,0)),this.strokeIndices=[[0,1],[1,2],[2,0]],this.vertices=e,this.faces=[[0,1,2]],this.uvs=[0,0,0,1,1,1]}));l._makeTriangleEdges()._edgesToVertices(),l.computeNormals(),this.createBuffers("tri",l)}var p=this.uMVMatrix.copy();try{var u=new a.default.Matrix([n-t,o-r,0,0,i-t,s-r,0,0,0,0,1,0,t,r,0,1]).mult(this.uMVMatrix);this.uMVMatrix=u,this.drawBuffers("tri")}finally{this.uMVMatrix=p}return this},a.default.RendererGL.prototype.ellipse=function(e){this.arc(e[0],e[1],e[2],e[3],0,i.TWO_PI,i.OPEN,e[4])},a.default.RendererGL.prototype.arc=function(e){var t,r=e,n=arguments[1],o=arguments[2],s=arguments[3],l=arguments[4],p=arguments[5],u=arguments[6],c=arguments[7]||25;if(t=Math.abs(p-l)>=i.TWO_PI?"".concat("ellipse","|").concat(c,"|"):"".concat("arc","|").concat(l,"|").concat(p,"|").concat(u,"|").concat(c,"|"),!this.geometryInHash(t)){var d=new a.default.Geometry(c,1,(function(){if(this.strokeIndices=[],l.toFixed(10)!==p.toFixed(10)){u!==i.PIE&&void 0!==u||(this.vertices.push(new a.default.Vector(.5,.5,0)),this.uvs.push([.5,.5]));for(var e=0;e<=c;e++){var t=e/c*(p-l)+l,r=.5+Math.cos(t)/2,n=.5+Math.sin(t)/2;this.vertices.push(new a.default.Vector(r,n,0)),this.uvs.push([r,n]),e<c-1&&(this.faces.push([0,e+1,e+2]),this.strokeIndices.push([e+1,e+2]))}switch(u){case i.PIE:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case i.CHORD:this.strokeIndices.push([0,1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case i.OPEN:this.strokeIndices.push([0,1]);break;default:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1])}}}));d.computeNormals(),c<=50?d._makeTriangleEdges()._edgesToVertices(d):this._renderer._doStroke&&console.log("Cannot stroke ${shape} with more than 50 detail"),this.createBuffers(t,d)}var h=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(o,s,1),this.drawBuffers(t)}finally{this.uMVMatrix=h}return this},a.default.RendererGL.prototype.rect=function(e){var t=this._pInst._glAttributes.perPixelLighting,r=e[0],n=e[1],o=e[2],i=e[3],s=e[4]||(t?1:24),l=e[5]||(t?1:16),p="rect|".concat(s,"|").concat(l);if(!this.geometryInHash(p)){var u=new a.default.Geometry(s,l,(function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=0;r<=this.detailX;r++){var n=r/this.detailX,o=new a.default.Vector(n,t,0);this.vertices.push(o),this.uvs.push(n,t)}0<s&&0<l&&(this.strokeIndices=[[0,s],[s,(s+1)*(l+1)-1],[(s+1)*(l+1)-1,(s+1)*l],[(s+1)*l,0]])}));u.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(p,u)}var c=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(o,i,1),this.drawBuffers(p)}finally{this.uMVMatrix=c}return this},a.default.RendererGL.prototype.quad=function(e,t,r,n,o,i,s,l,p,u,c,d){var h="quad|".concat(e,"|").concat(t,"|").concat(r,"|").concat(n,"|").concat(o,"|").concat(i,"|").concat(s,"|").concat(l,"|").concat(p,"|").concat(u,"|").concat(c,"|").concat(d);if(!this.geometryInHash(h)){var m=new a.default.Geometry(2,2,(function(){this.vertices.push(new a.default.Vector(e,t,r)),this.vertices.push(new a.default.Vector(n,o,i)),this.vertices.push(new a.default.Vector(s,l,p)),this.vertices.push(new a.default.Vector(u,c,d)),this.uvs.push(0,0,1,0,1,1,0,1),this.strokeIndices=[[0,1],[1,2],[2,3],[3,0]]}));m.computeNormals()._makeTriangleEdges()._edgesToVertices(),m.faces=[[0,1,2],[2,3,0]],this.createBuffers(h,m)}return this.drawBuffers(h),this},a.default.RendererGL.prototype.bezier=function(e,t,r,n,o,a,i,s,l,p,u,c){8===arguments.length&&(u=s,p=i,s=a,i=o,o=n,n=r,r=a=l=c=0);var d=this._pInst._bezierDetail||20;this.beginShape();for(var h=0;h<=d;h++){var m=Math.pow(1-h/d,3),f=h/d*3*Math.pow(1-h/d,2),y=3*Math.pow(h/d,2)*(1-h/d),g=Math.pow(h/d,3);this.vertex(e*m+n*f+i*y+p*g,t*m+o*f+s*y+u*g,r*m+a*f+l*y+c*g)}return this.endShape(),this},a.default.RendererGL.prototype.curve=function(e,t,r,n,o,a,i,s,l,p,u,c){8===arguments.length&&(p=i,u=s,i=o,s=n,o=n=r,r=a=l=c=0);var d=this._pInst._curveDetail;this.beginShape();for(var h=0;h<=d;h++){var m=.5*Math.pow(h/d,3),f=.5*Math.pow(h/d,2),y=h/d*.5,g=m*(3*n-e-3*i+p)+f*(2*e-5*n+4*i-p)+y*(-e+i)+2*n*.5,v=m*(3*o-t-3*s+u)+f*(2*t-5*o+4*s-u)+y*(-t+s)+2*o*.5,b=m*(3*a-r-3*l+c)+f*(2*r-5*a+4*l-c)+y*(-r+l)+2*a*.5;this.vertex(g,v,b)}return this.endShape(),this},a.default.RendererGL.prototype.line=function(){return 6===arguments.length?(this.beginShape(i.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2]),this.vertex(arguments.length<=3?void 0:arguments[3],arguments.length<=4?void 0:arguments[4],arguments.length<=5?void 0:arguments[5]),this.endShape()):4===arguments.length&&(this.beginShape(i.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],0),this.vertex(arguments.length<=2?void 0:arguments[2],arguments.length<=3?void 0:arguments[3],0),this.endShape()),this},a.default.RendererGL.prototype.bezierVertex=function(){if(0===this.immediateMode._bezierVertex.length)throw Error("vertex() must be used once before calling bezierVertex()");var e,t,r,n,o,a=[],i=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var p=1/this._lutBezierDetail,u=0,c=1,d=0;u<1;){if(e=parseFloat(u.toFixed(6)),this._lookUpTableBezier[d]=this._bezierCoefficients(e),c.toFixed(6)===p.toFixed(6)){e=parseFloat(c.toFixed(6))+parseFloat(u.toFixed(6)),++d,this._lookUpTableBezier[d]=this._bezierCoefficients(e);break}u+=p,c-=p,++d}}var h=this._lookUpTableBezier.length;if(6===l){for(this.isBezier=!0,a=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2],arguments.length<=4?void 0:arguments[4]],i=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3],arguments.length<=5?void 0:arguments[5]],o=0;o<h;o++)t=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],r=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],this.vertex(t,r);this.immediateMode._bezierVertex[0]=arguments.length<=4?void 0:arguments[4],this.immediateMode._bezierVertex[1]=arguments.length<=5?void 0:arguments[5]}else if(9===l){for(this.isBezier=!0,a=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3],arguments.length<=6?void 0:arguments[6]],i=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4],arguments.length<=7?void 0:arguments[7]],s=[this.immediateMode._bezierVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5],arguments.length<=8?void 0:arguments[8]],o=0;o<h;o++)t=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],r=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],n=s[0]*this._lookUpTableBezier[o][0]+s[1]*this._lookUpTableBezier[o][1]+s[2]*this._lookUpTableBezier[o][2]+s[3]*this._lookUpTableBezier[o][3],this.vertex(t,r,n);this.immediateMode._bezierVertex[0]=arguments.length<=6?void 0:arguments[6],this.immediateMode._bezierVertex[1]=arguments.length<=7?void 0:arguments[7],this.immediateMode._bezierVertex[2]=arguments.length<=8?void 0:arguments[8]}},a.default.RendererGL.prototype.quadraticVertex=function(){if(0===this.immediateMode._quadraticVertex.length)throw Error("vertex() must be used once before calling quadraticVertex()");var e,t,r,n,o,a=[],i=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableQuadratic.length||this._lutQuadraticDetail!==this._pInst._curveDetail){this._lookUpTableQuadratic=[],this._lutQuadraticDetail=this._pInst._curveDetail;for(var p=1/this._lutQuadraticDetail,u=0,c=1,d=0;u<1;){if(e=parseFloat(u.toFixed(6)),this._lookUpTableQuadratic[d]=this._quadraticCoefficients(e),c.toFixed(6)===p.toFixed(6)){e=parseFloat(c.toFixed(6))+parseFloat(u.toFixed(6)),++d,this._lookUpTableQuadratic[d]=this._quadraticCoefficients(e);break}u+=p,c-=p,++d}}var h=this._lookUpTableQuadratic.length;if(4===l){for(this.isQuadratic=!0,a=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2]],i=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3]],o=0;o<h;o++)t=a[0]*this._lookUpTableQuadratic[o][0]+a[1]*this._lookUpTableQuadratic[o][1]+a[2]*this._lookUpTableQuadratic[o][2],r=i[0]*this._lookUpTableQuadratic[o][0]+i[1]*this._lookUpTableQuadratic[o][1]+i[2]*this._lookUpTableQuadratic[o][2],this.vertex(t,r);this.immediateMode._quadraticVertex[0]=arguments.length<=2?void 0:arguments[2],this.immediateMode._quadraticVertex[1]=arguments.length<=3?void 0:arguments[3]}else if(6===l){for(this.isQuadratic=!0,a=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3]],i=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4]],s=[this.immediateMode._quadraticVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5]],o=0;o<h;o++)t=a[0]*this._lookUpTableQuadratic[o][0]+a[1]*this._lookUpTableQuadratic[o][1]+a[2]*this._lookUpTableQuadratic[o][2],r=i[0]*this._lookUpTableQuadratic[o][0]+i[1]*this._lookUpTableQuadratic[o][1]+i[2]*this._lookUpTableQuadratic[o][2],n=s[0]*this._lookUpTableQuadratic[o][0]+s[1]*this._lookUpTableQuadratic[o][1]+s[2]*this._lookUpTableQuadratic[o][2],this.vertex(t,r,n);this.immediateMode._quadraticVertex[0]=arguments.length<=3?void 0:arguments[3],this.immediateMode._quadraticVertex[1]=arguments.length<=4?void 0:arguments[4],this.immediateMode._quadraticVertex[2]=arguments.length<=5?void 0:arguments[5]}},a.default.RendererGL.prototype.curveVertex=function(){var e,t,r,n,o,a=[],i=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var p=1/this._lutBezierDetail,u=0,c=1,d=0;u<1;){if(e=parseFloat(u.toFixed(6)),this._lookUpTableBezier[d]=this._bezierCoefficients(e),c.toFixed(6)===p.toFixed(6)){e=parseFloat(c.toFixed(6))+parseFloat(u.toFixed(6)),++d,this._lookUpTableBezier[d]=this._bezierCoefficients(e);break}u+=p,c-=p,++d}}var h=this._lookUpTableBezier.length;if(2===l){if(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),8===this.immediateMode._curveVertex.length){for(this.isCurve=!0,a=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[6]]),i=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[7]]),o=0;o<h;o++)t=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],r=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],this.vertex(t,r);for(o=0;o<l;o++)this.immediateMode._curveVertex.shift()}}else if(3===l&&(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),this.immediateMode._curveVertex.push(arguments.length<=2?void 0:arguments[2]),12===this.immediateMode._curveVertex.length)){for(this.isCurve=!0,a=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[6],this.immediateMode._curveVertex[9]]),i=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[7],this.immediateMode._curveVertex[10]]),s=this._bezierToCatmull([this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[8],this.immediateMode._curveVertex[11]]),o=0;o<h;o++)t=a[0]*this._lookUpTableBezier[o][0]+a[1]*this._lookUpTableBezier[o][1]+a[2]*this._lookUpTableBezier[o][2]+a[3]*this._lookUpTableBezier[o][3],r=i[0]*this._lookUpTableBezier[o][0]+i[1]*this._lookUpTableBezier[o][1]+i[2]*this._lookUpTableBezier[o][2]+i[3]*this._lookUpTableBezier[o][3],n=s[0]*this._lookUpTableBezier[o][0]+s[1]*this._lookUpTableBezier[o][1]+s[2]*this._lookUpTableBezier[o][2]+s[3]*this._lookUpTableBezier[o][3],this.vertex(t,r,n);for(o=0;o<l;o++)this.immediateMode._curveVertex.shift()}},a.default.RendererGL.prototype.image=function(e,t,r,n,o,a,s,l,p){this._isErasing&&this.blendMode(this._cachedBlendMode),this._pInst.push(),this._pInst.noLights(),this._pInst.texture(e),this._pInst.textureMode(i.NORMAL);var u=0;t<=e.width&&(u=t/e.width);var c=1;t+n<=e.width&&(c=(t+n)/e.width);var d=0;r<=e.height&&(d=r/e.height);var h=1;r+o<=e.height&&(h=(r+o)/e.height),this.beginShape(),this.vertex(a,s,0,u,d),this.vertex(a+l,s,0,c,d),this.vertex(a+l,s+p,0,c,h),this.vertex(a,s+p,0,u,h),this.endShape(i.CLOSE),this._pInst.pop(),this._isErasing&&this.blendMode(i.REMOVE)};var l=a.default;r.default=l},{"../core/constants":22,"../core/main":32,"./p5.Geometry":81}],76:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));a.default.prototype.orbitControl=function(e,t,r){if(this._assert3d("orbitControl"),a.default._validateParameters("orbitControl",arguments),this.mouseX<this.width&&0<this.mouseX&&this.mouseY<this.height&&0<this.mouseY){var n=this._renderer._curCamera;void 0===e&&(e=1),void 0===t&&(t=e),void 0===r&&(r=.5),!0!==this.contextMenuDisabled&&(this.canvas.oncontextmenu=function(){return!1},this._setProperty("contextMenuDisabled",!0)),!0!==this.wheelDefaultDisabled&&(this.canvas.onwheel=function(){return!1},this._setProperty("wheelDefaultDisabled",!0));var o=this.height<this.width?this.height:this.width;if(this._mouseWheelDeltaY!==this._pmouseWheelDeltaY&&(0<this._mouseWheelDeltaY?this._renderer._curCamera._orbit(0,0,r*o):this._renderer._curCamera._orbit(0,0,-r*o)),this.mouseIsPressed)if(this.mouseButton===this.LEFT){var i=-e*(this.mouseX-this.pmouseX)/o,s=t*(this.mouseY-this.pmouseY)/o;this._renderer._curCamera._orbit(i,s,0)}else if(this.mouseButton===this.RIGHT){var l=n._getLocalAxes(),p=Math.sqrt(l.x[0]*l.x[0]+l.x[2]*l.x[2]);0!==p&&(l.x[0]/=p,l.x[2]/=p);var u=Math.sqrt(l.y[0]*l.y[0]+l.y[2]*l.y[2]);0!==u&&(l.y[0]/=u,l.y[2]/=u);var c=-1*e*(this.mouseX-this.pmouseX),d=-1*t*(this.mouseY-this.pmouseY);n.setPosition(n.eyeX+c*l.x[0]+d*l.z[0],n.eyeY,n.eyeZ+c*l.x[2]+d*l.z[2])}return this}},a.default.prototype.debugMode=function(){this._assert3d("debugMode");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];a.default._validateParameters("debugMode",t);for(var n=this._registeredMethods.post.length-1;0<=n;n--)this._registeredMethods.post[n].toString()!==this._grid().toString()&&this._registeredMethods.post[n].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(n,1);t[0]===i.GRID?this.registerMethod("post",this._grid.call(this,t[1],t[2],t[3],t[4],t[5])):t[0]===i.AXES?this.registerMethod("post",this._axesIcon.call(this,t[1],t[2],t[3],t[4])):(this.registerMethod("post",this._grid.call(this,t[0],t[1],t[2],t[3],t[4])),this.registerMethod("post",this._axesIcon.call(this,t[5],t[6],t[7],t[8])))},a.default.prototype.noDebugMode=function(){this._assert3d("noDebugMode");for(var e=this._registeredMethods.post.length-1;0<=e;e--)this._registeredMethods.post[e].toString()!==this._grid().toString()&&this._registeredMethods.post[e].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(e,1)},a.default.prototype._grid=function(e,t,r,n,o){void 0===e&&(e=this.width/2),void 0===t&&(t=Math.round(e/30)<4?4:Math.round(e/30)),void 0===r&&(r=0),void 0===n&&(n=0),void 0===o&&(o=0);var a=e/t,i=e/2;return function(){this.push(),this.stroke(255*this._renderer.curStrokeColor[0],255*this._renderer.curStrokeColor[1],255*this._renderer.curStrokeColor[2]),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]);for(var e=0;e<=t;e++)this.beginShape(this.LINES),this.vertex(-i+r,n,e*a-i+o),this.vertex(+i+r,n,e*a-i+o),this.endShape();for(var s=0;s<=t;s++)this.beginShape(this.LINES),this.vertex(s*a-i+r,n,-i+o),this.vertex(s*a-i+r,n,+i+o),this.endShape();this.pop()}},a.default.prototype._axesIcon=function(e,t,r,n){return void 0===e&&(e=40<this.width/20?this.width/20:40),void 0===t&&(t=-this.width/4),void 0===r&&(r=t),void 0===n&&(n=t),function(){this.push(),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]),this.strokeWeight(2),this.stroke(255,0,0),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t+e,r,n),this.endShape(),this.stroke(0,255,0),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t,r+e,n),this.endShape(),this.stroke(0,0,255),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t,r,n+e),this.endShape(),this.pop()}};var s=a.default;r.default=s},{"../core/constants":22,"../core/main":32}],77:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.ambientLight=function(e,t,r,n){this._assert3d("ambientLight"),o.default._validateParameters("ambientLight",arguments);var a=this.color.apply(this,arguments);return this._renderer.ambientLightColors.push(a._array[0],a._array[1],a._array[2]),this._renderer._enableLighting=!0,this},o.default.prototype.specularColor=function(e,t,r){this._assert3d("specularColor"),o.default._validateParameters("specularColor",arguments);var n=this.color.apply(this,arguments);return this._renderer.specularColors=[n._array[0],n._array[1],n._array[2]],this},o.default.prototype.directionalLight=function(e,t,r,n,a,i){var s,l,p,u;this._assert3d("directionalLight"),o.default._validateParameters("directionalLight",arguments),s=e instanceof o.default.Color?e:this.color(e,t,r);var c=arguments[arguments.length-1];u="number"==typeof c?(l=arguments[arguments.length-3],p=arguments[arguments.length-2],arguments[arguments.length-1]):(l=c.x,p=c.y,c.z);var d=Math.sqrt(l*l+p*p+u*u);return this._renderer.directionalLightDirections.push(l/d,p/d,u/d),this._renderer.directionalLightDiffuseColors.push(s._array[0],s._array[1],s._array[2]),Array.prototype.push.apply(this._renderer.directionalLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},o.default.prototype.pointLight=function(e,t,r,n,a,i){var s,l,p,u;this._assert3d("pointLight"),o.default._validateParameters("pointLight",arguments),s=e instanceof o.default.Color?e:this.color(e,t,r);var c=arguments[arguments.length-1];return u="number"==typeof c?(l=arguments[arguments.length-3],p=arguments[arguments.length-2],arguments[arguments.length-1]):(l=c.x,p=c.y,c.z),this._renderer.pointLightPositions.push(l,p,u),this._renderer.pointLightDiffuseColors.push(s._array[0],s._array[1],s._array[2]),Array.prototype.push.apply(this._renderer.pointLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},o.default.prototype.lights=function(){return this._assert3d("lights"),this.ambientLight(128,128,128),this.directionalLight(128,128,128,0,0,-1),this},o.default.prototype.lightFalloff=function(e,t,r){return this._assert3d("lightFalloff"),o.default._validateParameters("lightFalloff",arguments),e<0&&(e=0,console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")),t<0&&(t=0,console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")),r<0&&(r=0,console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")),0===e&&0===t&&0===r&&(e=1,console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")),this._renderer.constantAttenuation=e,this._renderer.linearAttenuation=t,this._renderer.quadraticAttenuation=r,this},o.default.prototype.spotLight=function(e,t,r,n,a,i,s,l,p,u,c){var d,h,m;this._assert3d("spotLight"),o.default._validateParameters("spotLight",arguments);var f=arguments.length;switch(f){case 11:case 10:d=this.color(e,t,r),h=new o.default.Vector(n,a,i),m=new o.default.Vector(s,l,p);break;case 9:e instanceof o.default.Color?(d=e,h=new o.default.Vector(t,r,n),m=new o.default.Vector(a,i,s),u=l,c=p):n instanceof o.default.Vector?(d=this.color(e,t,r),h=n,m=new o.default.Vector(a,i,s),u=l,c=p):s instanceof o.default.Vector?(d=this.color(e,t,r),h=new o.default.Vector(n,a,i),m=s,u=l,c=p):(d=this.color(e,t,r),h=new o.default.Vector(n,a,i),m=new o.default.Vector(s,l,p));break;case 8:m=e instanceof o.default.Color?(d=e,h=new o.default.Vector(t,r,n),new o.default.Vector(a,i,s)):n instanceof o.default.Vector?(d=this.color(e,t,r),h=n,new o.default.Vector(a,i,s)):(d=this.color(e,t,r),h=new o.default.Vector(n,a,i),s),u=l;break;case 7:e instanceof o.default.Color&&t instanceof o.default.Vector?(d=e,h=t,m=new o.default.Vector(r,n,a),u=i,c=s):e instanceof o.default.Color&&a instanceof o.default.Vector?(d=e,h=new o.default.Vector(t,r,n),m=a,u=i,c=s):n instanceof o.default.Vector&&a instanceof o.default.Vector?(d=this.color(e,t,r),h=n,m=a,u=i,c=s):m=e instanceof o.default.Color?(d=e,h=new o.default.Vector(t,r,n),new o.default.Vector(a,i,s)):n instanceof o.default.Vector?(d=this.color(e,t,r),h=n,new o.default.Vector(a,i,s)):(d=this.color(e,t,r),h=new o.default.Vector(n,a,i),s);break;case 6:n instanceof o.default.Vector&&a instanceof o.default.Vector?(d=this.color(e,t,r),h=n,m=a,u=i):e instanceof o.default.Color&&a instanceof o.default.Vector?(d=e,h=new o.default.Vector(t,r,n),m=a,u=i):e instanceof o.default.Color&&t instanceof o.default.Vector&&(d=e,h=t,m=new o.default.Vector(r,n,a),u=i);break;case 5:e instanceof o.default.Color&&t instanceof o.default.Vector&&r instanceof o.default.Vector?(d=e,h=t,m=r,u=n,c=a):n instanceof o.default.Vector&&a instanceof o.default.Vector?(d=this.color(e,t,r),h=n,m=a):e instanceof o.default.Color&&a instanceof o.default.Vector?(d=e,h=new o.default.Vector(t,r,n),m=a):e instanceof o.default.Color&&t instanceof o.default.Vector&&(d=e,h=t,m=new o.default.Vector(r,n,a));break;case 4:d=e,h=t,m=r,u=n;break;case 3:d=e,h=t,m=r;break;default:return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(f<3?"few":"many"," arguments were provided")),this}return this._renderer.spotLightDiffuseColors.push(d._array[0],d._array[1],d._array[2]),Array.prototype.push.apply(this._renderer.spotLightSpecularColors,this._renderer.specularColors),this._renderer.spotLightPositions.push(h.x,h.y,h.z),m.normalize(),this._renderer.spotLightDirections.push(m.x,m.y,m.z),void 0===u&&(u=Math.PI/3),void 0!==c&&c<1?(c=1,console.warn("Value of concentration needs to be greater than 1. Setting it to 1")):void 0===c&&(c=100),u=this._renderer._pInst._toRadians(u),this._renderer.spotLightAngle.push(Math.cos(u)),this._renderer.spotLightConc.push(c),this._renderer._enableLighting=!0,this},o.default.prototype.noLights=function(){return this._assert3d("noLights"),o.default._validateParameters("noLights",arguments),this._renderer._enableLighting=!1,this._renderer.ambientLightColors.length=0,this._renderer.specularColors=[1,1,1],this._renderer.directionalLightDirections.length=0,this._renderer.directionalLightDiffuseColors.length=0,this._renderer.directionalLightSpecularColors.length=0,this._renderer.pointLightPositions.length=0,this._renderer.pointLightDiffuseColors.length=0,this._renderer.pointLightSpecularColors.length=0,this._renderer.spotLightPositions.length=0,this._renderer.spotLightDirections.length=0,this._renderer.spotLightDiffuseColors.length=0,this._renderer.spotLightSpecularColors.length=0,this._renderer.spotLightAngle.length=0,this._renderer.spotLightConc.length=0,this._renderer.constantAttenuation=1,this._renderer.linearAttenuation=0,this._renderer.quadraticAttenuation=0,this._renderer._useShininess=1,this};var a=o.default;r.default=a},{"../core/main":32}],78:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};function a(e,t,r){for(var n=0,o=e.length;n<o;n++)if(e[n]!==t.getUint8(r+n,!1))return!1;return!0}e("./p5.Geometry"),o.default.prototype.loadModel=function(e){var t,r,n;o.default._validateParameters("loadModel",arguments);var i=e.slice(-4);"boolean"==typeof arguments[1]?(t=arguments[1],r=arguments[2],n=arguments[3],void 0!==arguments[4]&&(i=arguments[4])):(t=!1,r=arguments[1],n=arguments[2],void 0!==arguments[3]&&(i=arguments[3]));var s=new o.default.Geometry;s.gid="".concat(e,"|").concat(t);var l=this;return i.match(/\.stl$/i)?this.httpDo(e,"GET","arrayBuffer",(function(e){!function(e,t){if(function(e){for(var t=new DataView(e),r=[115,111,108,105,100],n=0;n<5;n++)if(a(r,t,n))return!1;return!0}(t))!function(e,t){for(var r,n,a,i,s,l,p,u=new DataView(t),c=u.getUint32(80,!0),d=!1,h=0;h<70;h++)1129270351===u.getUint32(h,!1)&&82===u.getUint8(h+4)&&61===u.getUint8(h+5)&&(d=!0,i=[],s=u.getUint8(h+6)/255,l=u.getUint8(h+7)/255,p=u.getUint8(h+8)/255);for(var m=0;m<c;m++){var f=84+50*m,y=u.getFloat32(f,!0),g=u.getFloat32(4+f,!0),v=u.getFloat32(8+f,!0);if(d){var b=u.getUint16(48+f,!0);a=0==(32768&b)?(r=(31&b)/31,n=(b>>5&31)/31,(b>>10&31)/31):(r=s,n=l,p)}for(var x=new o.default.Vector(y,g,v),_=1;_<=3;_++){var w=f+12*_,S=new o.default.Vector(u.getFloat32(w,!0),u.getFloat32(4+w,!0),u.getFloat32(8+w,!0));e.vertices.push(S),e.vertexNormals.push(x),d&&i.push(r,n,a)}e.faces.push([3*m,3*m+1,3*m+2]),e.uvs.push([0,0],[0,0],[0,0])}}(e,t);else{var r=new DataView(t);if(!("TextDecoder"in window))return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");!function(e,t){for(var r,n,a="",i=[],s=0;s<t.length;++s){for(var l=t[s].trim(),p=l.split(" "),u=0;u<p.length;++u)""===p[u]&&p.splice(u,1);if(0!==p.length)switch(a){case"":if("solid"!==p[0])return console.error(l),console.error('Invalid state "'.concat(p[0],'", should be "solid"'));a="solid";break;case"solid":if("facet"!==p[0]||"normal"!==p[1])return console.error(l),console.error('Invalid state "'.concat(p[0],'", should be "facet normal"'));r=new o.default.Vector(parseFloat(p[2]),parseFloat(p[3]),parseFloat(p[4])),e.vertexNormals.push(r,r,r),a="facet normal";break;case"facet normal":if("outer"!==p[0]||"loop"!==p[1])return console.error(l),console.error('Invalid state "'.concat(p[0],'", should be "outer loop"'));a="vertex";break;case"vertex":if("vertex"===p[0])n=new o.default.Vector(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),e.vertices.push(n),e.uvs.push([0,0]),i.push(e.vertices.indexOf(n));else{if("endloop"!==p[0])return console.error(l),console.error('Invalid state "'.concat(p[0],'", should be "vertex" or "endloop"'));e.faces.push(i),i=[],a="endloop"}break;case"endloop":if("endfacet"!==p[0])return console.error(l),console.error('Invalid state "'.concat(p[0],'", should be "endfacet"'));a="endfacet";break;case"endfacet":if("endsolid"!==p[0]){if("facet"!==p[0]||"normal"!==p[1])return console.error(l),console.error('Invalid state "'.concat(p[0],'", should be "endsolid" or "facet normal"'));r=new o.default.Vector(parseFloat(p[2]),parseFloat(p[3]),parseFloat(p[4])),e.vertexNormals.push(r,r,r),a="facet normal"}break;default:console.error('Invalid state "'.concat(a,'"'))}}}(e,new TextDecoder("utf-8").decode(r).split("\n"))}}(s,e),t&&s.normalize(),l._decrementPreload(),"function"==typeof r&&r(s)}),n):i.match(/\.obj$/i)?this.loadStrings(e,(function(e){!function(e,t){for(var r={v:[],vt:[],vn:[]},n={},a=0;a<t.length;++a){var i=t[a].trim().split(/\b\s+/);if(0<i.length)if("v"===i[0]||"vn"===i[0]){var s=new o.default.Vector(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]));r[i[0]].push(s)}else if("vt"===i[0]){var l=[parseFloat(i[1]),parseFloat(i[2])];r[i[0]].push(l)}else if("f"===i[0])for(var p=3;p<i.length;++p){for(var u=[],c=[1,p-1,p],d=0;d<c.length;++d){var h=i[c[d]],m=0;if(void 0!==n[h])m=n[h];else{for(var f=h.split("/"),y=0;y<f.length;y++)f[y]=parseInt(f[y])-1;m=n[h]=e.vertices.length,e.vertices.push(r.v[f[0]].copy()),r.vt[f[1]]?e.uvs.push(r.vt[f[1]].slice()):e.uvs.push([0,0]),r.vn[f[2]]&&e.vertexNormals.push(r.vn[f[2]].copy())}u.push(m)}u[0]!==u[1]&&u[0]!==u[2]&&u[1]!==u[2]&&e.faces.push(u)}}0===e.vertexNormals.length&&e.computeNormals()}(s,e),t&&s.normalize(),l._decrementPreload(),"function"==typeof r&&r(s)}),n):(o.default._friendlyFileLoadError(3,e),n?n():console.error("Sorry, the file type is invalid. Only OBJ and STL files are supported.")),s},o.default.prototype.model=function(e){this._assert3d("model"),o.default._validateParameters("model",arguments),0<e.vertices.length&&(this._renderer.geometryInHash(e.gid)||(e._makeTriangleEdges()._edgesToVertices(),this._renderer.createBuffers(e.gid,e)),this._renderer.drawBuffers(e.gid))};var i=o.default;r.default=i},{"../core/main":32,"./p5.Geometry":81}],79:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));e("./p5.Texture"),a.default.prototype.loadShader=function(e,t,r,n){function o(){s._decrementPreload(),r&&r(i)}a.default._validateParameters("loadShader",arguments),n=n||console.error;var i=new a.default.Shader,s=this,l=!1,p=!1;return this.loadStrings(e,(function(e){i._vertSrc=e.join("\n"),p=!0,l&&o()}),n),this.loadStrings(t,(function(e){i._fragSrc=e.join("\n"),l=!0,p&&o()}),n),i},a.default.prototype.createShader=function(e,t){return this._assert3d("createShader"),a.default._validateParameters("createShader",arguments),new a.default.Shader(this._renderer,e,t)},a.default.prototype.shader=function(e){return this._assert3d("shader"),a.default._validateParameters("shader",arguments),void 0===e._renderer&&(e._renderer=this._renderer),e.isStrokeShader()?this._renderer.userStrokeShader=e:(this._renderer.userFillShader=e,this._renderer._useNormalMaterial=!1),e.init(),this},a.default.prototype.resetShader=function(){return this._renderer.userFillShader=this._renderer.userStrokeShader=null,this},a.default.prototype.normalMaterial=function(){this._assert3d("normalMaterial");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return a.default._validateParameters("normalMaterial",t),this._renderer.drawMode=i.FILL,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!0,this._renderer.curFillColor=[1,1,1,1],this._renderer._setProperty("_doFill",!0),this.noStroke(),this},a.default.prototype.texture=function(e){return this._assert3d("texture"),a.default._validateParameters("texture",arguments),e.gifProperties&&e._animateGif(this),this._renderer.drawMode=i.TEXTURE,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._tex=e,this._renderer._setProperty("_doFill",!0),this},a.default.prototype.textureMode=function(e){e!==i.IMAGE&&e!==i.NORMAL?console.warn("You tried to set ".concat(e," textureMode only supports IMAGE & NORMAL ")):this._renderer.textureMode=e},a.default.prototype.textureWrap=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:e;this._renderer.textureWrapX=e,this._renderer.textureWrapY=t;for(var r=this._renderer.textures,n=0;n<r.length;n++)r[n].setWrapMode(e,t)},a.default.prototype.ambientMaterial=function(e,t,r){this._assert3d("ambientMaterial"),a.default._validateParameters("ambientMaterial",arguments);var n=a.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=n._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},a.default.prototype.emissiveMaterial=function(e,t,r,n){this._assert3d("emissiveMaterial"),a.default._validateParameters("emissiveMaterial",arguments);var o=a.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=o._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!0,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},a.default.prototype.specularMaterial=function(e,t,r,n){this._assert3d("specularMaterial"),a.default._validateParameters("specularMaterial",arguments);var o=a.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=o._array,this._renderer._useSpecularMaterial=!0,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},a.default.prototype.shininess=function(e){return this._assert3d("shininess"),a.default._validateParameters("shininess",arguments),e<1&&(e=1),this._renderer._useShininess=e,this},a.default.RendererGL.prototype._applyColorBlend=function(e){var t=this.GL,r=this.drawMode===i.TEXTURE||e[e.length-1]<1||this._isErasing;return r!==this._isBlending&&(r||this.curBlendMode!==i.BLEND&&this.curBlendMode!==i.ADD?t.enable(t.BLEND):t.disable(t.BLEND),t.depthMask(!0),this._isBlending=r),this._applyBlendMode(),e},a.default.RendererGL.prototype._applyBlendMode=function(){if(this._cachedBlendMode!==this.curBlendMode){var e=this.GL;switch(this.curBlendMode){case i.BLEND:case i.ADD:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;case i.REMOVE:e.blendEquation(e.FUNC_REVERSE_SUBTRACT),e.blendFunc(e.SRC_ALPHA,e.DST_ALPHA);break;case i.MULTIPLY:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ONE,e.ONE);break;case i.SCREEN:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE,e.ONE,e.ONE);break;case i.EXCLUSION:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE_MINUS_SRC_COLOR,e.ONE,e.ONE);break;case i.REPLACE:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO);break;case i.SUBTRACT:e.blendEquationSeparate(e.FUNC_REVERSE_SUBTRACT,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE,e.ONE,e.ONE);break;case i.DARKEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MIN_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");break;case i.LIGHTEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MAX_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");break;default:console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.")}this._isErasing||(this._cachedBlendMode=this.curBlendMode)}};var s=a.default;r.default=s},{"../core/constants":22,"../core/main":32,"./p5.Texture":88}],80:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.prototype.camera=function(){var e;this._assert3d("camera");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("camera",r),(e=this._renderer._curCamera).camera.apply(e,r),this},o.default.prototype.perspective=function(){var e;this._assert3d("perspective");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("perspective",r),(e=this._renderer._curCamera).perspective.apply(e,r),this},o.default.prototype.ortho=function(){var e;this._assert3d("ortho");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("ortho",r),(e=this._renderer._curCamera).ortho.apply(e,r),this},o.default.prototype.frustum=function(){var e;this._assert3d("frustum");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return o.default._validateParameters("frustum",r),(e=this._renderer._curCamera).frustum.apply(e,r),this},o.default.prototype.createCamera=function(){this._assert3d("createCamera");var e=new o.default.Camera(this._renderer);return e._computeCameraDefaultSettings(),e._setDefaultCamera(),this._renderer._curCamera=e},o.default.Camera=function(e){this._renderer=e,this.cameraType="default",this.cameraMatrix=new o.default.Matrix,this.projMatrix=new o.default.Matrix},o.default.Camera.prototype.perspective=function(e,t,r,n){this.cameraType=0<arguments.length?"custom":"default",void 0===e?(e=this.defaultCameraFOV,this.cameraFOV=e):this.cameraFOV=this._renderer._pInst._toRadians(e),void 0===t&&(t=this.defaultAspectRatio),void 0===r&&(r=this.defaultCameraNear),void 0===n&&(n=this.defaultCameraFar),r<=1e-4&&(r=.01,console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")),n<r&&console.log("Perspective far plane value is less than near plane value. Nothing will be shown."),this.aspectRatio=t,this.cameraNear=r,this.cameraFar=n,this.projMatrix=o.default.Matrix.identity();var a=1/Math.tan(this.cameraFOV/2),i=1/(this.cameraNear-this.cameraFar);this.projMatrix.set(a/t,0,0,0,0,-a,0,0,0,0,(n+r)*i,-1,0,0,2*n*r*i,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15])},o.default.Camera.prototype.ortho=function(e,t,r,n,a,i){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=this._renderer.height/2),void 0===a&&(a=0),void 0===i&&(i=Math.max(this._renderer.width,this._renderer.height));var s=t-e,l=n-r,p=i-a,u=2/s,c=2/l,d=-2/p,h=-(t+e)/s,m=-(n+r)/l,f=-(i+a)/p;this.projMatrix=o.default.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,-c,0,0,0,0,d,0,h,m,f,1),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},o.default.Camera.prototype.frustum=function(e,t,r,n,a,i){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=this._renderer.height/2),void 0===a&&(a=0),void 0===i&&(i=Math.max(this._renderer.width,this._renderer.height));var s=t-e,l=n-r,p=i-a,u=2*a/s,c=2*a/l,d=-2*i*a/p,h=(t+e)/s,m=(n+r)/l,f=-(i+a)/p;this.projMatrix=o.default.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,c,0,0,h,m,f,-1,0,0,d,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},o.default.Camera.prototype._rotateView=function(e,t,r,n){var a=this.centerX,i=this.centerY,s=this.centerZ;a-=this.eyeX,i-=this.eyeY,s-=this.eyeZ;var l=o.default.Matrix.identity(this._renderer._pInst);l.rotate(this._renderer._pInst._toRadians(e),t,r,n);var p=[a*l.mat4[0]+i*l.mat4[4]+s*l.mat4[8],a*l.mat4[1]+i*l.mat4[5]+s*l.mat4[9],a*l.mat4[2]+i*l.mat4[6]+s*l.mat4[10]];p[0]+=this.eyeX,p[1]+=this.eyeY,p[2]+=this.eyeZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,p[0],p[1],p[2],this.upX,this.upY,this.upZ)},o.default.Camera.prototype.pan=function(e){var t=this._getLocalAxes();this._rotateView(e,t.y[0],t.y[1],t.y[2])},o.default.Camera.prototype.tilt=function(e){var t=this._getLocalAxes();this._rotateView(e,t.x[0],t.x[1],t.x[2])},o.default.Camera.prototype.lookAt=function(e,t,r){this.camera(this.eyeX,this.eyeY,this.eyeZ,e,t,r,this.upX,this.upY,this.upZ)},o.default.Camera.prototype.camera=function(e,t,r,n,o,a,i,s,l){void 0===e&&(e=this.defaultEyeX,t=this.defaultEyeY,r=this.defaultEyeZ,n=e,o=t,s=1,l=i=a=0),this.eyeX=e,this.eyeY=t,this.eyeZ=r,this.centerX=n,this.centerY=o,this.centerZ=a,this.upX=i,this.upY=s,this.upZ=l;var p=this._getLocalAxes();this.cameraMatrix.set(p.x[0],p.y[0],p.z[0],0,p.x[1],p.y[1],p.z[1],0,p.x[2],p.y[2],p.z[2],0,0,0,0,1);var u=-e,c=-t,d=-r;return this.cameraMatrix.translate([u,c,d]),this._isActive()&&this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0],this.cameraMatrix.mat4[1],this.cameraMatrix.mat4[2],this.cameraMatrix.mat4[3],this.cameraMatrix.mat4[4],this.cameraMatrix.mat4[5],this.cameraMatrix.mat4[6],this.cameraMatrix.mat4[7],this.cameraMatrix.mat4[8],this.cameraMatrix.mat4[9],this.cameraMatrix.mat4[10],this.cameraMatrix.mat4[11],this.cameraMatrix.mat4[12],this.cameraMatrix.mat4[13],this.cameraMatrix.mat4[14],this.cameraMatrix.mat4[15]),this},o.default.Camera.prototype.move=function(e,t,r){var n=this._getLocalAxes(),o=[n.x[0]*e,n.x[1]*e,n.x[2]*e],a=[n.y[0]*t,n.y[1]*t,n.y[2]*t],i=[n.z[0]*r,n.z[1]*r,n.z[2]*r];this.camera(this.eyeX+o[0]+a[0]+i[0],this.eyeY+o[1]+a[1]+i[1],this.eyeZ+o[2]+a[2]+i[2],this.centerX+o[0]+a[0]+i[0],this.centerY+o[1]+a[1]+i[1],this.centerZ+o[2]+a[2]+i[2],0,1,0)},o.default.Camera.prototype.setPosition=function(e,t,r){var n=e-this.eyeX,o=t-this.eyeY,a=r-this.eyeZ;this.camera(e,t,r,this.centerX+n,this.centerY+o,this.centerZ+a,0,1,0)},o.default.Camera.prototype._computeCameraDefaultSettings=function(){this.defaultCameraFOV=60/180*Math.PI,this.defaultAspectRatio=this._renderer.width/this._renderer.height,this.defaultEyeX=0,this.defaultEyeY=0,this.defaultEyeZ=this._renderer.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCenterX=0,this.defaultCenterY=0,this.defaultCenterZ=0,this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ},o.default.Camera.prototype._setDefaultCamera=function(){this.cameraFOV=this.defaultCameraFOV,this.aspectRatio=this.defaultAspectRatio,this.eyeX=this.defaultEyeX,this.eyeY=this.defaultEyeY,this.eyeZ=this.defaultEyeZ,this.centerX=this.defaultCenterX,this.centerY=this.defaultCenterY,this.centerZ=this.defaultCenterZ,this.upX=0,this.upY=1,this.upZ=0,this.cameraNear=this.defaultCameraNear,this.cameraFar=this.defaultCameraFar,this.perspective(),this.camera(),this.cameraType="default"},o.default.Camera.prototype._resize=function(){"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this._renderer.width/this._renderer.height)},o.default.Camera.prototype.copy=function(){var e=new o.default.Camera(this._renderer);return e.cameraFOV=this.cameraFOV,e.aspectRatio=this.aspectRatio,e.eyeX=this.eyeX,e.eyeY=this.eyeY,e.eyeZ=this.eyeZ,e.centerX=this.centerX,e.centerY=this.centerY,e.centerZ=this.centerZ,e.cameraNear=this.cameraNear,e.cameraFar=this.cameraFar,e.cameraType=this.cameraType,e.cameraMatrix=this.cameraMatrix.copy(),e.projMatrix=this.projMatrix.copy(),e},o.default.Camera.prototype._getLocalAxes=function(){var e=this.eyeX-this.centerX,t=this.eyeY-this.centerY,r=this.eyeZ-this.centerZ,n=Math.sqrt(e*e+t*t+r*r);0!==n&&(e/=n,t/=n,r/=n);var o=this.upX,a=this.upY,i=this.upZ,s=a*r-i*t,l=-o*r+i*e,p=o*t-a*e;o=t*p-r*l,a=-e*p+r*s,i=e*l-t*s;var u=Math.sqrt(s*s+l*l+p*p);0!==u&&(s/=u,l/=u,p/=u);var c=Math.sqrt(o*o+a*a+i*i);return 0!==c&&(o/=c,a/=c,i/=c),{x:[s,l,p],y:[o,a,i],z:[e,t,r]}},o.default.Camera.prototype._orbit=function(e,t,r){var n=this.eyeX-this.centerX,o=this.eyeY-this.centerY,a=this.eyeZ-this.centerZ,i=Math.sqrt(n*n+o*o+a*a),s=Math.atan2(n,a),l=Math.acos(Math.max(-1,Math.min(1,o/i)));s+=e,(i+=r)<0&&(i=.1),(l+=t)>Math.PI?l=Math.PI:l<=0&&(l=.001);var p=Math.sin(l)*i*Math.sin(s),u=Math.cos(l)*i,c=Math.sin(l)*i*Math.cos(s);this.camera(p+this.centerX,u+this.centerY,c+this.centerZ,this.centerX,this.centerY,this.centerZ,0,1,0)},o.default.Camera.prototype._isActive=function(){return this===this._renderer._curCamera},o.default.prototype.setCamera=function(e){this._renderer._curCamera=e,this._renderer.uPMatrix.set(e.projMatrix.mat4[0],e.projMatrix.mat4[1],e.projMatrix.mat4[2],e.projMatrix.mat4[3],e.projMatrix.mat4[4],e.projMatrix.mat4[5],e.projMatrix.mat4[6],e.projMatrix.mat4[7],e.projMatrix.mat4[8],e.projMatrix.mat4[9],e.projMatrix.mat4[10],e.projMatrix.mat4[11],e.projMatrix.mat4[12],e.projMatrix.mat4[13],e.projMatrix.mat4[14],e.projMatrix.mat4[15])};var a=o.default.Camera;r.default=a},{"../core/main":32}],81:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.Geometry=function(e,t,r){return this.vertices=[],this.lineVertices=[],this.lineNormals=[],this.vertexNormals=[],this.faces=[],this.uvs=[],this.edges=[],this.vertexColors=[],this.detailX=void 0!==e?e:1,this.detailY=void 0!==t?t:1,this.dirtyFlags={},r instanceof Function&&r.call(this),this},o.default.Geometry.prototype.reset=function(){this.lineVertices.length=0,this.lineNormals.length=0,this.vertices.length=0,this.edges.length=0,this.vertexColors.length=0,this.vertexNormals.length=0,this.uvs.length=0,this.dirtyFlags={}},o.default.Geometry.prototype.computeFaces=function(){this.faces.length=0;for(var e,t,r,n,o=this.detailX+1,a=0;a<this.detailY;a++)for(var i=0;i<this.detailX;i++)t=(e=a*o+i)+1,r=(a+1)*o+i+1,n=(a+1)*o+i,this.faces.push([e,t,n]),this.faces.push([n,t,r]);return this},o.default.Geometry.prototype._getFaceNormal=function(e){var t=this.faces[e],r=this.vertices[t[0]],n=this.vertices[t[1]],a=this.vertices[t[2]],i=o.default.Vector.sub(n,r),s=o.default.Vector.sub(a,r),l=o.default.Vector.cross(i,s),p=o.default.Vector.mag(l),u=p/(o.default.Vector.mag(i)*o.default.Vector.mag(s));return 0===u||isNaN(u)?(console.warn("p5.Geometry.prototype._getFaceNormal:","face has colinear sides or a repeated vertex"),l):(1<u&&(u=1),l.mult(Math.asin(u)/p))},o.default.Geometry.prototype.computeNormals=function(){var e,t=this.vertexNormals,r=this.vertices,n=this.faces;for(e=t.length=0;e<r.length;++e)t.push(new o.default.Vector);for(var a=0;a<n.length;++a)for(var i=n[a],s=this._getFaceNormal(a),l=0;l<3;++l)t[i[l]].add(s);for(e=0;e<r.length;++e)t[e].normalize();return this},o.default.Geometry.prototype.averageNormals=function(){for(var e=0;e<=this.detailY;e++){var t=this.detailX+1,r=o.default.Vector.add(this.vertexNormals[e*t],this.vertexNormals[e*t+this.detailX]);r=o.default.Vector.div(r,2),this.vertexNormals[e*t]=r,this.vertexNormals[e*t+this.detailX]=r}return this},o.default.Geometry.prototype.averagePoleNormals=function(){for(var e=new o.default.Vector(0,0,0),t=0;t<this.detailX;t++)e.add(this.vertexNormals[t]);e=o.default.Vector.div(e,this.detailX);for(var r=0;r<this.detailX;r++)this.vertexNormals[r]=e;e=new o.default.Vector(0,0,0);for(var n=this.vertices.length-1;n>this.vertices.length-1-this.detailX;n--)e.add(this.vertexNormals[n]);e=o.default.Vector.div(e,this.detailX);for(var a=this.vertices.length-1;a>this.vertices.length-1-this.detailX;a--)this.vertexNormals[a]=e;return this},o.default.Geometry.prototype._makeTriangleEdges=function(){if(this.edges.length=0,Array.isArray(this.strokeIndices))for(var e=0,t=this.strokeIndices.length;e<t;e++)this.edges.push(this.strokeIndices[e]);else for(var r=0;r<this.faces.length;r++)this.edges.push([this.faces[r][0],this.faces[r][1]]),this.edges.push([this.faces[r][1],this.faces[r][2]]),this.edges.push([this.faces[r][2],this.faces[r][0]]);return this},o.default.Geometry.prototype._edgesToVertices=function(){this.lineVertices.length=0;for(var e=this.lineNormals.length=0;e<this.edges.length;e++){var t=this.vertices[this.edges[e][0]],r=this.vertices[this.edges[e][1]],n=r.copy().sub(t).normalize(),o=t.array(),a=t.array(),i=r.array(),s=r.array(),l=n.array(),p=n.array();l.push(1),p.push(-1),this.lineNormals.push(l,p,l,l,p,p),this.lineVertices.push(o,a,i,i,a,s)}return this},o.default.Geometry.prototype.normalize=function(){if(0<this.vertices.length){for(var e=this.vertices[0].copy(),t=this.vertices[0].copy(),r=0;r<this.vertices.length;r++)e.x=Math.max(e.x,this.vertices[r].x),t.x=Math.min(t.x,this.vertices[r].x),e.y=Math.max(e.y,this.vertices[r].y),t.y=Math.min(t.y,this.vertices[r].y),e.z=Math.max(e.z,this.vertices[r].z),t.z=Math.min(t.z,this.vertices[r].z);for(var n=o.default.Vector.lerp(e,t,.5),a=o.default.Vector.sub(e,t),i=200/Math.max(Math.max(a.x,a.y),a.z),s=0;s<this.vertices.length;s++)this.vertices[s].sub(n),this.vertices[s].mult(i)}return this};var a=o.default.Geometry;r.default=a},{"../core/main":32}],82:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n},a=Array,i=function(e){return e instanceof Array};"undefined"!=typeof Float32Array&&(a=Float32Array,i=function(e){return e instanceof Array||e instanceof Float32Array}),o.default.Matrix=function(){for(var e=new Array(arguments.length),t=0;t<e.length;++t)e[t]=arguments[t];return e.length&&e[e.length-1]instanceof o.default&&(this.p5=e[e.length-1]),"mat3"===e[0]?this.mat3=Array.isArray(e[1])?e[1]:new a([1,0,0,0,1,0,0,0,1]):this.mat4=Array.isArray(e[0])?e[0]:new a([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this},o.default.Matrix.prototype.set=function(e){return e instanceof o.default.Matrix?this.mat4=e.mat4:i(e)?this.mat4=e:16===arguments.length&&(this.mat4[0]=e,this.mat4[1]=arguments[1],this.mat4[2]=arguments[2],this.mat4[3]=arguments[3],this.mat4[4]=arguments[4],this.mat4[5]=arguments[5],this.mat4[6]=arguments[6],this.mat4[7]=arguments[7],this.mat4[8]=arguments[8],this.mat4[9]=arguments[9],this.mat4[10]=arguments[10],this.mat4[11]=arguments[11],this.mat4[12]=arguments[12],this.mat4[13]=arguments[13],this.mat4[14]=arguments[14],this.mat4[15]=arguments[15]),this},o.default.Matrix.prototype.get=function(){return new o.default.Matrix(this.mat4,this.p5)},o.default.Matrix.prototype.copy=function(){var e=new o.default.Matrix(this.p5);return e.mat4[0]=this.mat4[0],e.mat4[1]=this.mat4[1],e.mat4[2]=this.mat4[2],e.mat4[3]=this.mat4[3],e.mat4[4]=this.mat4[4],e.mat4[5]=this.mat4[5],e.mat4[6]=this.mat4[6],e.mat4[7]=this.mat4[7],e.mat4[8]=this.mat4[8],e.mat4[9]=this.mat4[9],e.mat4[10]=this.mat4[10],e.mat4[11]=this.mat4[11],e.mat4[12]=this.mat4[12],e.mat4[13]=this.mat4[13],e.mat4[14]=this.mat4[14],e.mat4[15]=this.mat4[15],e},o.default.Matrix.identity=function(e){return new o.default.Matrix(e)},o.default.Matrix.prototype.transpose=function(e){var t,r,n,a,s,l;return e instanceof o.default.Matrix?(t=e.mat4[1],r=e.mat4[2],n=e.mat4[3],a=e.mat4[6],s=e.mat4[7],l=e.mat4[11],this.mat4[0]=e.mat4[0],this.mat4[1]=e.mat4[4],this.mat4[2]=e.mat4[8],this.mat4[3]=e.mat4[12],this.mat4[4]=t,this.mat4[5]=e.mat4[5],this.mat4[6]=e.mat4[9],this.mat4[7]=e.mat4[13],this.mat4[8]=r,this.mat4[9]=a,this.mat4[10]=e.mat4[10],this.mat4[11]=e.mat4[14],this.mat4[12]=n,this.mat4[13]=s,this.mat4[14]=l,this.mat4[15]=e.mat4[15]):i(e)&&(t=e[1],r=e[2],n=e[3],a=e[6],s=e[7],l=e[11],this.mat4[0]=e[0],this.mat4[1]=e[4],this.mat4[2]=e[8],this.mat4[3]=e[12],this.mat4[4]=t,this.mat4[5]=e[5],this.mat4[6]=e[9],this.mat4[7]=e[13],this.mat4[8]=r,this.mat4[9]=a,this.mat4[10]=e[10],this.mat4[11]=e[14],this.mat4[12]=n,this.mat4[13]=s,this.mat4[14]=l,this.mat4[15]=e[15]),this},o.default.Matrix.prototype.invert=function(e){var t,r,n,a,s,l,p,u,c,d,h,m,f,y,g,v;e instanceof o.default.Matrix?(t=e.mat4[0],r=e.mat4[1],n=e.mat4[2],a=e.mat4[3],s=e.mat4[4],l=e.mat4[5],p=e.mat4[6],u=e.mat4[7],c=e.mat4[8],d=e.mat4[9],h=e.mat4[10],m=e.mat4[11],f=e.mat4[12],y=e.mat4[13],g=e.mat4[14],v=e.mat4[15]):i(e)&&(t=e[0],r=e[1],n=e[2],a=e[3],s=e[4],l=e[5],p=e[6],u=e[7],c=e[8],d=e[9],h=e[10],m=e[11],f=e[12],y=e[13],g=e[14],v=e[15]);var b=t*l-r*s,x=t*p-n*s,_=t*u-a*s,w=r*p-n*l,S=r*u-a*l,M=n*u-a*p,C=c*y-d*f,T=c*g-h*f,E=c*v-m*f,N=d*g-h*y,P=d*v-m*y,A=h*v-m*g,I=b*A-x*P+_*N+w*E-S*T+M*C;return I?(I=1/I,this.mat4[0]=(l*A-p*P+u*N)*I,this.mat4[1]=(n*P-r*A-a*N)*I,this.mat4[2]=(y*M-g*S+v*w)*I,this.mat4[3]=(h*S-d*M-m*w)*I,this.mat4[4]=(p*E-s*A-u*T)*I,this.mat4[5]=(t*A-n*E+a*T)*I,this.mat4[6]=(g*_-f*M-v*x)*I,this.mat4[7]=(c*M-h*_+m*x)*I,this.mat4[8]=(s*P-l*E+u*C)*I,this.mat4[9]=(r*E-t*P-a*C)*I,this.mat4[10]=(f*S-y*_+v*b)*I,this.mat4[11]=(d*_-c*S-m*b)*I,this.mat4[12]=(l*T-s*N-p*C)*I,this.mat4[13]=(t*N-r*T+n*C)*I,this.mat4[14]=(y*x-f*w-g*b)*I,this.mat4[15]=(c*w-d*x+h*b)*I,this):null},o.default.Matrix.prototype.invert3x3=function(){var e=this.mat3[0],t=this.mat3[1],r=this.mat3[2],n=this.mat3[3],o=this.mat3[4],a=this.mat3[5],i=this.mat3[6],s=this.mat3[7],l=this.mat3[8],p=l*o-a*s,u=-l*n+a*i,c=s*n-o*i,d=e*p+t*u+r*c;return d?(d=1/d,this.mat3[0]=p*d,this.mat3[1]=(-l*t+r*s)*d,this.mat3[2]=(a*t-r*o)*d,this.mat3[3]=u*d,this.mat3[4]=(l*e-r*i)*d,this.mat3[5]=(-a*e+r*n)*d,this.mat3[6]=c*d,this.mat3[7]=(-s*e+t*i)*d,this.mat3[8]=(o*e-t*n)*d,this):null},o.default.Matrix.prototype.transpose3x3=function(e){var t=e[1],r=e[2],n=e[5];return this.mat3[1]=e[3],this.mat3[2]=e[6],this.mat3[3]=t,this.mat3[5]=e[7],this.mat3[6]=r,this.mat3[7]=n,this},o.default.Matrix.prototype.inverseTranspose=function(e){void 0===this.mat3?console.error("sorry, this function only works with mat3"):(this.mat3[0]=e.mat4[0],this.mat3[1]=e.mat4[1],this.mat3[2]=e.mat4[2],this.mat3[3]=e.mat4[4],this.mat3[4]=e.mat4[5],this.mat3[5]=e.mat4[6],this.mat3[6]=e.mat4[8],this.mat3[7]=e.mat4[9],this.mat3[8]=e.mat4[10]);var t=this.invert3x3();if(t)t.transpose3x3(this.mat3);else for(var r=0;r<9;r++)this.mat3[r]=0;return this},o.default.Matrix.prototype.determinant=function(){var e=this.mat4[0]*this.mat4[5]-this.mat4[1]*this.mat4[4],t=this.mat4[0]*this.mat4[6]-this.mat4[2]*this.mat4[4],r=this.mat4[0]*this.mat4[7]-this.mat4[3]*this.mat4[4],n=this.mat4[1]*this.mat4[6]-this.mat4[2]*this.mat4[5],o=this.mat4[1]*this.mat4[7]-this.mat4[3]*this.mat4[5],a=this.mat4[2]*this.mat4[7]-this.mat4[3]*this.mat4[6],i=this.mat4[8]*this.mat4[13]-this.mat4[9]*this.mat4[12],s=this.mat4[8]*this.mat4[14]-this.mat4[10]*this.mat4[12],l=this.mat4[8]*this.mat4[15]-this.mat4[11]*this.mat4[12],p=this.mat4[9]*this.mat4[14]-this.mat4[10]*this.mat4[13],u=this.mat4[9]*this.mat4[15]-this.mat4[11]*this.mat4[13];return e*(this.mat4[10]*this.mat4[15]-this.mat4[11]*this.mat4[14])-t*u+r*p+n*l-o*s+a*i},o.default.Matrix.prototype.mult=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof o.default.Matrix)t=e.mat4;else if(i(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4[0],n=this.mat4[1],a=this.mat4[2],s=this.mat4[3];return this.mat4[0]=r*t[0]+n*t[4]+a*t[8]+s*t[12],this.mat4[1]=r*t[1]+n*t[5]+a*t[9]+s*t[13],this.mat4[2]=r*t[2]+n*t[6]+a*t[10]+s*t[14],this.mat4[3]=r*t[3]+n*t[7]+a*t[11]+s*t[15],r=this.mat4[4],n=this.mat4[5],a=this.mat4[6],s=this.mat4[7],this.mat4[4]=r*t[0]+n*t[4]+a*t[8]+s*t[12],this.mat4[5]=r*t[1]+n*t[5]+a*t[9]+s*t[13],this.mat4[6]=r*t[2]+n*t[6]+a*t[10]+s*t[14],this.mat4[7]=r*t[3]+n*t[7]+a*t[11]+s*t[15],r=this.mat4[8],n=this.mat4[9],a=this.mat4[10],s=this.mat4[11],this.mat4[8]=r*t[0]+n*t[4]+a*t[8]+s*t[12],this.mat4[9]=r*t[1]+n*t[5]+a*t[9]+s*t[13],this.mat4[10]=r*t[2]+n*t[6]+a*t[10]+s*t[14],this.mat4[11]=r*t[3]+n*t[7]+a*t[11]+s*t[15],r=this.mat4[12],n=this.mat4[13],a=this.mat4[14],s=this.mat4[15],this.mat4[12]=r*t[0]+n*t[4]+a*t[8]+s*t[12],this.mat4[13]=r*t[1]+n*t[5]+a*t[9]+s*t[13],this.mat4[14]=r*t[2]+n*t[6]+a*t[10]+s*t[14],this.mat4[15]=r*t[3]+n*t[7]+a*t[11]+s*t[15],this},o.default.Matrix.prototype.apply=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof o.default.Matrix)t=e.mat4;else if(i(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4,n=r[0],a=r[4],s=r[8],l=r[12];r[0]=t[0]*n+t[1]*a+t[2]*s+t[3]*l,r[4]=t[4]*n+t[5]*a+t[6]*s+t[7]*l,r[8]=t[8]*n+t[9]*a+t[10]*s+t[11]*l,r[12]=t[12]*n+t[13]*a+t[14]*s+t[15]*l;var p=r[1],u=r[5],c=r[9],d=r[13];r[1]=t[0]*p+t[1]*u+t[2]*c+t[3]*d,r[5]=t[4]*p+t[5]*u+t[6]*c+t[7]*d,r[9]=t[8]*p+t[9]*u+t[10]*c+t[11]*d,r[13]=t[12]*p+t[13]*u+t[14]*c+t[15]*d;var h=r[2],m=r[6],f=r[10],y=r[14];r[2]=t[0]*h+t[1]*m+t[2]*f+t[3]*y,r[6]=t[4]*h+t[5]*m+t[6]*f+t[7]*y,r[10]=t[8]*h+t[9]*m+t[10]*f+t[11]*y,r[14]=t[12]*h+t[13]*m+t[14]*f+t[15]*y;var g=r[3],v=r[7],b=r[11],x=r[15];return r[3]=t[0]*g+t[1]*v+t[2]*b+t[3]*x,r[7]=t[4]*g+t[5]*v+t[6]*b+t[7]*x,r[11]=t[8]*g+t[9]*v+t[10]*b+t[11]*x,r[15]=t[12]*g+t[13]*v+t[14]*b+t[15]*x,this},o.default.Matrix.prototype.scale=function(e,t,r){return e instanceof o.default.Vector?(t=e.y,r=e.z,e=e.x):e instanceof Array&&(t=e[1],r=e[2],e=e[0]),this.mat4[0]*=e,this.mat4[1]*=e,this.mat4[2]*=e,this.mat4[3]*=e,this.mat4[4]*=t,this.mat4[5]*=t,this.mat4[6]*=t,this.mat4[7]*=t,this.mat4[8]*=r,this.mat4[9]*=r,this.mat4[10]*=r,this.mat4[11]*=r,this},o.default.Matrix.prototype.rotate=function(e,t,r,n){t instanceof o.default.Vector?(r=t.y,n=t.z,t=t.x):t instanceof Array&&(r=t[1],n=t[2],t=t[0]);var a=Math.sqrt(t*t+r*r+n*n);t*=1/a,r*=1/a,n*=1/a;var i=this.mat4[0],s=this.mat4[1],l=this.mat4[2],p=this.mat4[3],u=this.mat4[4],c=this.mat4[5],d=this.mat4[6],h=this.mat4[7],m=this.mat4[8],f=this.mat4[9],y=this.mat4[10],g=this.mat4[11],v=Math.sin(e),b=Math.cos(e),x=1-b,_=t*t*x+b,w=r*t*x+n*v,S=n*t*x-r*v,M=t*r*x-n*v,C=r*r*x+b,T=n*r*x+t*v,E=t*n*x+r*v,N=r*n*x-t*v,P=n*n*x+b;return this.mat4[0]=i*_+u*w+m*S,this.mat4[1]=s*_+c*w+f*S,this.mat4[2]=l*_+d*w+y*S,this.mat4[3]=p*_+h*w+g*S,this.mat4[4]=i*M+u*C+m*T,this.mat4[5]=s*M+c*C+f*T,this.mat4[6]=l*M+d*C+y*T,this.mat4[7]=p*M+h*C+g*T,this.mat4[8]=i*E+u*N+m*P,this.mat4[9]=s*E+c*N+f*P,this.mat4[10]=l*E+d*N+y*P,this.mat4[11]=p*E+h*N+g*P,this},o.default.Matrix.prototype.translate=function(e){var t=e[0],r=e[1],n=e[2]||0;this.mat4[12]+=this.mat4[0]*t+this.mat4[4]*r+this.mat4[8]*n,this.mat4[13]+=this.mat4[1]*t+this.mat4[5]*r+this.mat4[9]*n,this.mat4[14]+=this.mat4[2]*t+this.mat4[6]*r+this.mat4[10]*n,this.mat4[15]+=this.mat4[3]*t+this.mat4[7]*r+this.mat4[11]*n},o.default.Matrix.prototype.rotateX=function(e){this.rotate(e,1,0,0)},o.default.Matrix.prototype.rotateY=function(e){this.rotate(e,0,1,0)},o.default.Matrix.prototype.rotateZ=function(e){this.rotate(e,0,0,1)},o.default.Matrix.prototype.perspective=function(e,t,r,n){var o=1/Math.tan(e/2),a=1/(r-n);return this.mat4[0]=o/t,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=o,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=(n+r)*a,this.mat4[11]=-1,this.mat4[12]=0,this.mat4[13]=0,this.mat4[14]=2*n*r*a,this.mat4[15]=0,this},o.default.Matrix.prototype.ortho=function(e,t,r,n,o,a){var i=1/(e-t),s=1/(r-n),l=1/(o-a);return this.mat4[0]=-2*i,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=-2*s,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=2*l,this.mat4[11]=0,this.mat4[12]=(e+t)*i,this.mat4[13]=(n+r)*s,this.mat4[14]=(a+o)*l,this.mat4[15]=1,this};var s=o.default.Matrix;r.default=s},{"../core/main":32}],83:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.RenderBuffer=function(e,t,r,n,o,a){this.size=e,this.src=t,this.dst=r,this.attr=n,this._renderer=o,this.map=a},o.default.RenderBuffer.prototype._prepareBuffer=function(e,t){var r,n=t.attributes,o=this._renderer.GL;r=e.model?e.model:e;var a=n[this.attr];if(a){var i=e[this.dst],s=r[this.src];if(0<s.length){var l=!i;if(l&&(e[this.dst]=i=o.createBuffer()),o.bindBuffer(o.ARRAY_BUFFER,i),l||!1!==r.dirtyFlags[this.src]){var p=this.map,u=p?p(s):s;this._renderer._bindBuffer(i,o.ARRAY_BUFFER,u),r.dirtyFlags[this.src]=!1}t.enableAttrib(a,this.size)}}};var a=o.default.RenderBuffer;r.default=a},{"../core/main":32}],84:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));e("./p5.RenderBuffer"),a.default.RendererGL.prototype.beginShape=function(e){return this.immediateMode.shapeMode=void 0!==e?e:i.TRIANGLE_FAN,this.immediateMode.geometry.reset(),this},a.default.RendererGL.prototype.vertex=function(e,t){var r,n,o;r=n=o=0,3===arguments.length?r=arguments[2]:4===arguments.length?(n=arguments[2],o=arguments[3]):5===arguments.length&&(r=arguments[2],n=arguments[3],o=arguments[4]);var s=new a.default.Vector(e,t,r);this.immediateMode.geometry.vertices.push(s);var l=this.curFillColor||[.5,.5,.5,1];return this.immediateMode.geometry.vertexColors.push(l[0],l[1],l[2],l[3]),this.textureMode===i.IMAGE&&(null!==this._tex?0<this._tex.width&&0<this._tex.height&&(n/=this._tex.width,o/=this._tex.height):null===this._tex&&4<=arguments.length&&console.warn("You must first call texture() before using vertex() with image based u and v coordinates")),this.immediateMode.geometry.uvs.push(n,o),this.immediateMode._bezierVertex[0]=e,this.immediateMode._bezierVertex[1]=t,this.immediateMode._bezierVertex[2]=r,this.immediateMode._quadraticVertex[0]=e,this.immediateMode._quadraticVertex[1]=t,this.immediateMode._quadraticVertex[2]=r,this},a.default.RendererGL.prototype.endShape=function(e,t,r,n,o,a){return this.immediateMode.shapeMode===i.POINTS?this._drawPoints(this.immediateMode.geometry.vertices,this.immediateMode.buffers.point):(this._processVertices.apply(this,arguments),this._doFill&&1<this.immediateMode.geometry.vertices.length&&this._drawImmediateFill(),this._doStroke&&1<this.immediateMode.geometry.lineVertices.length&&this._drawImmediateStroke(),this.isBezier=!1,this.isQuadratic=!1,this.isCurve=!1,this.immediateMode._bezierVertex.length=0,this.immediateMode._quadraticVertex.length=0,this.immediateMode._curveVertex.length=0),this},a.default.RendererGL.prototype._processVertices=function(e){if(0!==this.immediateMode.geometry.vertices.length){var t=this._doStroke&&this.drawMode!==i.TEXTURE,r=e===i.CLOSE;t&&(this.immediateMode.geometry.edges=this._calculateEdges(this.immediateMode.shapeMode,this.immediateMode.geometry.vertices,r),this.immediateMode.geometry._edgesToVertices());var n=this.immediateMode.shapeMode===i.TESS;(this.isBezier||this.isQuadratic||this.isCurve||n)&&this.immediateMode.shapeMode!==i.LINES&&this._tesselateShape()}},a.default.RendererGL.prototype._calculateEdges=function(e,t,r){var n=[],o=0;switch(e){case i.TRIANGLE_STRIP:for(o=0;o<t.length-2;o++)n.push([o,o+1]),n.push([o,o+2]);n.push([o,o+1]);break;case i.TRIANGLES:for(o=0;o<t.length-2;o+=3)n.push([o,o+1]),n.push([o+1,o+2]),n.push([o+2,o]);break;case i.LINES:for(o=0;o<t.length-1;o+=2)n.push([o,o+1]);break;default:for(o=0;o<t.length-1;o++)n.push([o,o+1])}return r&&n.push([t.length-1,0]),n},a.default.RendererGL.prototype._tesselateShape=function(){this.immediateMode.shapeMode=i.TRIANGLES;var e=[new Float32Array(this._vToNArray(this.immediateMode.geometry.vertices))],t=this._triangulate(e);this.immediateMode.geometry.vertices=[];for(var r=0,n=t.length;r<n;r+=3)this.vertex(t[r],t[r+1],t[r+2])},a.default.RendererGL.prototype._drawImmediateFill=function(){var e=this.GL,t=this._getImmediateFillShader();this._calculateNormals(this.immediateMode.geometry),this._setFillUniforms(t);var r=!0,n=!1,o=void 0;try{for(var a,s=this.immediateMode.buffers.fill[Symbol.iterator]();!(r=(a=s.next()).done);r=!0)a.value._prepareBuffer(this.immediateMode.geometry,t)}catch(e){n=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(n)throw o}}this.immediateMode.shapeMode!==i.LINE_STRIP&&this.immediateMode.shapeMode!==i.LINES||(this.immediateMode.shapeMode=i.TRIANGLE_FAN),this._applyColorBlend(this.curFillColor),e.drawArrays(this.immediateMode.shapeMode,0,this.immediateMode.geometry.vertices.length),t.unbindShader()},a.default.RendererGL.prototype._drawImmediateStroke=function(){var e=this.GL,t=this._getImmediateStrokeShader();this._setStrokeUniforms(t);var r=!0,n=!1,o=void 0;try{for(var a,i=this.immediateMode.buffers.stroke[Symbol.iterator]();!(r=(a=i.next()).done);r=!0)a.value._prepareBuffer(this.immediateMode.geometry,t)}catch(e){n=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(n)throw o}}this._applyColorBlend(this.curStrokeColor),e.drawArrays(e.TRIANGLES,0,this.immediateMode.geometry.lineVertices.length),t.unbindShader()},a.default.RendererGL.prototype._calculateNormals=function(e){e.vertices.forEach((function(){e.vertexNormals.push(new a.default.Vector(0,0,1))}))};var s=a.default.RendererGL;r.default=s},{"../core/constants":22,"../core/main":32,"./p5.RenderBuffer":83}],85:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./p5.RendererGL"),e("./p5.RenderBuffer");var a=0;o.default.RendererGL.prototype._initBufferDefaults=function(e){if(this._freeBuffers(e),1e3<++a){var t=Object.keys(this.retainedMode.geometry)[0];delete this.retainedMode.geometry[t],a--}return this.retainedMode.geometry[e]={}},o.default.RendererGL.prototype._freeBuffers=function(e){var t=this.retainedMode.geometry[e];if(t){delete this.retainedMode.geometry[e],a--;var r=this.GL;t.indexBuffer&&r.deleteBuffer(t.indexBuffer),n(this.retainedMode.buffers.stroke),n(this.retainedMode.buffers.fill)}function n(e){var n=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done);n=!0){var l=i.value;t[l.dst]&&(r.deleteBuffer(t[l.dst]),t[l.dst]=null)}}catch(e){o=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}}},o.default.RendererGL.prototype.createBuffers=function(e,t){var r=this.GL,n=this._initBufferDefaults(e);n.model=t;var a=n.indexBuffer;if(t.faces.length){a=a||(n.indexBuffer=r.createBuffer());var i=o.default.RendererGL.prototype._flatten(t.faces);this._bindBuffer(a,r.ELEMENT_ARRAY_BUFFER,i,Uint16Array),n.vertexCount=3*t.faces.length}else a&&(r.deleteBuffer(a),n.indexBuffer=null),n.vertexCount=t.vertices?t.vertices.length:0;return n.lineVertexCount=t.lineVertices?t.lineVertices.length:0,n},o.default.RendererGL.prototype.drawBuffers=function(e){var t=this.GL,r=this.retainedMode.geometry[e];if(this._doStroke&&0<r.lineVertexCount){var n=this._getRetainedStrokeShader();this._setStrokeUniforms(n);var o=!0,a=!1,i=void 0;try{for(var s,l=this.retainedMode.buffers.stroke[Symbol.iterator]();!(o=(s=l.next()).done);o=!0)s.value._prepareBuffer(r,n)}catch(e){a=!0,i=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw i}}this._applyColorBlend(this.curStrokeColor),this._drawArrays(t.TRIANGLES,e),n.unbindShader()}if(this._doFill){var p=this._getRetainedFillShader();this._setFillUniforms(p);var u=!0,c=!1,d=void 0;try{for(var h,m=this.retainedMode.buffers.fill[Symbol.iterator]();!(u=(h=m.next()).done);u=!0)h.value._prepareBuffer(r,p)}catch(e){c=!0,d=e}finally{try{u||null==m.return||m.return()}finally{if(c)throw d}}r.indexBuffer&&this._bindBuffer(r.indexBuffer,t.ELEMENT_ARRAY_BUFFER),this._applyColorBlend(this.curFillColor),this._drawElements(t.TRIANGLES,e),p.unbindShader()}return this},o.default.RendererGL.prototype.drawBuffersScaled=function(e,t,r,n){var o=this.uMVMatrix.copy();try{this.uMVMatrix.scale(t,r,n),this.drawBuffers(e)}finally{this.uMVMatrix=o}},o.default.RendererGL.prototype._drawArrays=function(e,t){return this.GL.drawArrays(e,0,this.retainedMode.geometry[t].lineVertexCount),this},o.default.RendererGL.prototype._drawElements=function(e,t){var r=this.retainedMode.geometry[t],n=this.GL;r.indexBuffer?n.drawElements(n.TRIANGLES,r.vertexCount,n.UNSIGNED_SHORT,0):n.drawArrays(e||n.TRIANGLES,0,r.vertexCount)},o.default.RendererGL.prototype._drawPoints=function(e,t){var r=this.GL,n=this._getImmediatePointShader();this._setPointUniforms(n),this._bindBuffer(t,r.ARRAY_BUFFER,this._vToNArray(e),Float32Array,r.STATIC_DRAW),n.enableAttrib(n.attributes.aPosition,3),r.drawArrays(r.Points,0,e.length),n.unbindShader()};var i=o.default.RendererGL;r.default=i},{"../core/main":32,"./p5.RenderBuffer":83,"./p5.RendererGL":86}],86:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=s(e("../core/main")),a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants")),i=s(e("libtess"));function s(e){return e&&e.__esModule?e:{default:e}}function l(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}e("./p5.Shader"),e("./p5.Camera"),e("../core/p5.Renderer"),e("./p5.Matrix"),e("path");var p="precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];\t\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n",u={immediateVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",vertexColorVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n",vertexColorFrag:"precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}",normalVert:"attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n",normalFrag:"precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",basicFrag:"precision mediump float;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}",lightVert:p+"// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n}\n",lightTextureFrag:"precision highp float;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;\n  }\n}",phongVert:"precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n}\n",phongFrag:p+"// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * (diffuse + vAmbientColor) + specular;\n  }\n}",fontVert:"precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n",fontFrag:"#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision highp int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}",lineVert:"/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  vec3 scale = vec3(0.9995);\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  vec2 curPerspScale;\n\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n}\n",lineFrag:"precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}",pointVert:"attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}",pointFrag:"precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}"};o.default.RendererGL=function(e,t,r,n){return o.default.Renderer.call(this,e,t,r),this._setAttributeDefaults(t),this._initContext(),this.isP3D=!0,this.GL=this.drawingContext,this._pInst._setProperty("drawingContext",this.drawingContext),this._isErasing=!1,this._enableLighting=!1,this.ambientLightColors=[],this.specularColors=[1,1,1],this.directionalLightDirections=[],this.directionalLightDiffuseColors=[],this.directionalLightSpecularColors=[],this.pointLightPositions=[],this.pointLightDiffuseColors=[],this.pointLightSpecularColors=[],this.spotLightPositions=[],this.spotLightDirections=[],this.spotLightDiffuseColors=[],this.spotLightSpecularColors=[],this.spotLightAngle=[],this.spotLightConc=[],this.drawMode=a.FILL,this.curFillColor=this._cachedFillStyle=[1,1,1,1],this.curStrokeColor=this._cachedStrokeStyle=[0,0,0,1],this.curBlendMode=a.BLEND,this._cachedBlendMode=void 0,this.blendExt=this.GL.getExtension("EXT_blend_minmax"),this._isBlending=!1,this._useSpecularMaterial=!1,this._useEmissiveMaterial=!1,this._useNormalMaterial=!1,this._useShininess=1,this._tint=[255,255,255,255],this.constantAttenuation=1,this.linearAttenuation=0,this.quadraticAttenuation=0,this.uMVMatrix=new o.default.Matrix,this.uPMatrix=new o.default.Matrix,this.uNMatrix=new o.default.Matrix("mat3"),this._curCamera=new o.default.Camera(this),this._curCamera._computeCameraDefaultSettings(),this._curCamera._setDefaultCamera(),this._defaultLightShader=void 0,this._defaultImmediateModeShader=void 0,this._defaultNormalShader=void 0,this._defaultColorShader=void 0,this._defaultPointShader=void 0,this.userFillShader=void 0,this.userStrokeShader=void 0,this.userPointShader=void 0,this.retainedMode={geometry:{},buffers:{stroke:[new o.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new o.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],fill:[new o.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new o.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new o.default.RenderBuffer(4,"vertexColors","colorBuffer","aMaterialColor",this),new o.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new o.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],text:[new o.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new o.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)]}},this.immediateMode={geometry:new o.default.Geometry,shapeMode:a.TRIANGLE_FAN,_bezierVertex:[],_quadraticVertex:[],_curveVertex:[],buffers:{fill:[new o.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new o.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new o.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",this),new o.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new o.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],stroke:[new o.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new o.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],point:this.GL.createBuffer()}},this.pointSize=5,this.curStrokeWeight=1,this.textures=[],this.textureMode=a.IMAGE,this.textureWrapX=a.CLAMP,this.textureWrapY=a.CLAMP,this._tex=null,this._curveTightness=6,this._lookUpTableBezier=[],this._lookUpTableQuadratic=[],this._lutBezierDetail=0,this._lutQuadraticDetail=0,this._tessy=this._initTessy(),this.fontInfos={},this._curShader=void 0,this},o.default.RendererGL.prototype=Object.create(o.default.Renderer.prototype),o.default.RendererGL.prototype._setAttributeDefaults=function(e){var t={alpha:!0,depth:!0,stencil:!0,antialias:navigator.userAgent.toLowerCase().includes("safari"),premultipliedAlpha:!1,preserveDrawingBuffer:!0,perPixelLighting:!0};null===e._glAttributes?e._glAttributes=t:e._glAttributes=Object.assign(t,e._glAttributes)},o.default.RendererGL.prototype._initContext=function(){try{if(this.drawingContext=this.canvas.getContext("webgl",this._pInst._glAttributes)||this.canvas.getContext("experimental-webgl",this._pInst._glAttributes),null===this.drawingContext)throw new Error("Error creating webgl context");var e=this.drawingContext;e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),this._viewport=this.drawingContext.getParameter(this.drawingContext.VIEWPORT)}catch(e){throw e}},o.default.RendererGL.prototype._resetContext=function(e,t){var r=this.width,n=this.height,a=this.canvas.id,i=this._pInst instanceof o.default.Graphics;if(i){var s=this._pInst;s.canvas.parentNode.removeChild(s.canvas),s.canvas=document.createElement("canvas"),(s._pInst._userNode||document.body).appendChild(s.canvas),o.default.Element.call(s,s.canvas,s._pInst),s.width=r,s.height=n}else{var l=this.canvas;l&&l.parentNode.removeChild(l),(l=document.createElement("canvas")).id=a,this._pInst._userNode?this._pInst._userNode.appendChild(l):document.body.appendChild(l),this._pInst.canvas=l}var p=new o.default.RendererGL(this._pInst.canvas,this._pInst,!i);this._pInst._setProperty("_renderer",p),p.resize(r,n),p._applyDefaults(),i||this._pInst._elements.push(p),"function"==typeof t&&setTimeout((function(){t.apply(window._renderer,e)}),0)},o.default.prototype.setAttributes=function(e,t){if(void 0!==this._glAttributes){var r=!0;if(void 0!==t?(null===this._glAttributes&&(this._glAttributes={}),this._glAttributes[e]!==t&&(this._glAttributes[e]=t,r=!1)):e instanceof Object&&this._glAttributes!==e&&(this._glAttributes=e,r=!1),this._renderer.isP3D&&!r){if(!this._setupDone)for(var n in this._renderer.retainedMode.geometry)if(this._renderer.retainedMode.geometry.hasOwnProperty(n))return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");this.push(),this._renderer._resetContext(),this.pop(),this._renderer._curCamera&&(this._renderer._curCamera._renderer=this._renderer)}}else console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.")},o.default.RendererGL.prototype._update=function(){this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this.ambientLightColors.length=0,this.specularColors=[1,1,1],this.directionalLightDirections.length=0,this.directionalLightDiffuseColors.length=0,this.directionalLightSpecularColors.length=0,this.pointLightPositions.length=0,this.pointLightDiffuseColors.length=0,this.pointLightSpecularColors.length=0,this.spotLightPositions.length=0,this.spotLightDirections.length=0,this.spotLightDiffuseColors.length=0,this.spotLightSpecularColors.length=0,this.spotLightAngle.length=0,this.spotLightConc.length=0,this._enableLighting=!1,this._tint=[255,255,255,255],this.GL.clear(this.GL.DEPTH_BUFFER_BIT)},o.default.RendererGL.prototype.background=function(){var e,t=(e=this._pInst).color.apply(e,arguments),r=t.levels[0]/255,n=t.levels[1]/255,o=t.levels[2]/255,a=t.levels[3]/255;this.GL.clearColor(r,n,o,a),this.GL.clear(this.GL.COLOR_BUFFER_BIT)},o.default.RendererGL.prototype.fill=function(e,t,r,n){var i=o.default.prototype.color.apply(this._pInst,arguments);this.curFillColor=i._array,this.drawMode=a.FILL,this._useNormalMaterial=!1,this._tex=null},o.default.RendererGL.prototype.stroke=function(e,t,r,n){arguments[3]=255;var a=o.default.prototype.color.apply(this._pInst,arguments);this.curStrokeColor=a._array},o.default.RendererGL.prototype.strokeCap=function(e){console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode")},o.default.RendererGL.prototype.strokeJoin=function(e){console.error("Sorry, strokeJoin() is not yet implemented in WEBGL mode")},o.default.RendererGL.prototype.filter=function(e){console.error("filter() does not work in WEBGL mode")},o.default.RendererGL.prototype.blendMode=function(e){e===a.DARKEST||e===a.LIGHTEST||e===a.ADD||e===a.BLEND||e===a.SUBTRACT||e===a.SCREEN||e===a.EXCLUSION||e===a.REPLACE||e===a.MULTIPLY||e===a.REMOVE?this.curBlendMode=e:e!==a.BURN&&e!==a.OVERLAY&&e!==a.HARD_LIGHT&&e!==a.SOFT_LIGHT&&e!==a.DODGE||console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.")},o.default.RendererGL.prototype.erase=function(e,t){this._isErasing||(this._applyBlendMode(a.REMOVE),this._isErasing=!0,this._cachedFillStyle=this.curFillColor.slice(),this.curFillColor=[1,1,1,e/255],this._cachedStrokeStyle=this.curStrokeColor.slice(),this.curStrokeColor=[1,1,1,t/255])},o.default.RendererGL.prototype.noErase=function(){this._isErasing&&(this._isErasing=!1,this.curFillColor=this._cachedFillStyle.slice(),this.curStrokeColor=this._cachedStrokeStyle.slice(),this.blendMode(this._cachedBlendMode))},o.default.RendererGL.prototype.strokeWeight=function(e){this.curStrokeWeight!==e&&(this.pointSize=e,this.curStrokeWeight=e)},o.default.RendererGL.prototype._getPixel=function(e,t){var r;return r=new Uint8Array(4),this.drawingContext.readPixels(e,t,1,1,this.drawingContext.RGBA,this.drawingContext.UNSIGNED_BYTE,r),[r[0],r[1],r[2],r[3]]},o.default.RendererGL.prototype.loadPixels=function(){var e=this._pixelsState;if(!0===this._pInst._glAttributes.preserveDrawingBuffer){var t=e.pixels,r=this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4;t instanceof Uint8Array&&t.length===r||(t=new Uint8Array(r),this._pixelsState._setProperty("pixels",t));var n=this._pInst._pixelDensity;this.GL.readPixels(0,0,this.width*n,this.height*n,this.GL.RGBA,this.GL.UNSIGNED_BYTE,t)}else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.")},o.default.RendererGL.prototype.geometryInHash=function(e){return void 0!==this.retainedMode.geometry[e]},o.default.RendererGL.prototype.resize=function(e,t){o.default.Renderer.prototype.resize.call(this,e,t),this.GL.viewport(0,0,this.GL.drawingBufferWidth,this.GL.drawingBufferHeight),this._viewport=this.GL.getParameter(this.GL.VIEWPORT),this._curCamera._resize();var r=this._pixelsState;void 0!==r.pixels&&r._setProperty("pixels",new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4))},o.default.RendererGL.prototype.clear=function(){var e=(arguments.length<=0?void 0:arguments[0])||0,t=(arguments.length<=1?void 0:arguments[1])||0,r=(arguments.length<=2?void 0:arguments[2])||0,n=(arguments.length<=3?void 0:arguments[3])||0;this.GL.clearColor(e,t,r,n),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)},o.default.RendererGL.prototype.applyMatrix=function(e,t,r,n,a,i){16===arguments.length?o.default.Matrix.prototype.apply.apply(this.uMVMatrix,arguments):this.uMVMatrix.apply([e,t,0,0,r,n,0,0,0,0,1,0,a,i,0,1])},o.default.RendererGL.prototype.translate=function(e,t,r){return e instanceof o.default.Vector&&(r=e.z,t=e.y,e=e.x),this.uMVMatrix.translate([e,t,r]),this},o.default.RendererGL.prototype.scale=function(e,t,r){return this.uMVMatrix.scale(e,t,r),this},o.default.RendererGL.prototype.rotate=function(e,t){return void 0===t?this.rotateZ(e):(o.default.Matrix.prototype.rotate.apply(this.uMVMatrix,arguments),this)},o.default.RendererGL.prototype.rotateX=function(e){return this.rotate(e,1,0,0),this},o.default.RendererGL.prototype.rotateY=function(e){return this.rotate(e,0,1,0),this},o.default.RendererGL.prototype.rotateZ=function(e){return this.rotate(e,0,0,1),this},o.default.RendererGL.prototype.push=function(){var e=o.default.Renderer.prototype.push.apply(this),t=e.properties;return t.uMVMatrix=this.uMVMatrix.copy(),t.uPMatrix=this.uPMatrix.copy(),t._curCamera=this._curCamera,this._curCamera=this._curCamera.copy(),t.ambientLightColors=this.ambientLightColors.slice(),t.specularColors=this.specularColors.slice(),t.directionalLightDirections=this.directionalLightDirections.slice(),t.directionalLightDiffuseColors=this.directionalLightDiffuseColors.slice(),t.directionalLightSpecularColors=this.directionalLightSpecularColors.slice(),t.pointLightPositions=this.pointLightPositions.slice(),t.pointLightDiffuseColors=this.pointLightDiffuseColors.slice(),t.pointLightSpecularColors=this.pointLightSpecularColors.slice(),t.spotLightPositions=this.spotLightPositions.slice(),t.spotLightDirections=this.spotLightDirections.slice(),t.spotLightDiffuseColors=this.spotLightDiffuseColors.slice(),t.spotLightSpecularColors=this.spotLightSpecularColors.slice(),t.spotLightAngle=this.spotLightAngle.slice(),t.spotLightConc=this.spotLightConc.slice(),t.userFillShader=this.userFillShader,t.userStrokeShader=this.userStrokeShader,t.userPointShader=this.userPointShader,t.pointSize=this.pointSize,t.curStrokeWeight=this.curStrokeWeight,t.curStrokeColor=this.curStrokeColor,t.curFillColor=this.curFillColor,t._useSpecularMaterial=this._useSpecularMaterial,t._useEmissiveMaterial=this._useEmissiveMaterial,t._useShininess=this._useShininess,t.constantAttenuation=this.constantAttenuation,t.linearAttenuation=this.linearAttenuation,t.quadraticAttenuation=this.quadraticAttenuation,t._enableLighting=this._enableLighting,t._useNormalMaterial=this._useNormalMaterial,t._tex=this._tex,t.drawMode=this.drawMode,e},o.default.RendererGL.prototype.resetMatrix=function(){return this.uMVMatrix=o.default.Matrix.identity(this._pInst),this},o.default.RendererGL.prototype._getImmediateStrokeShader=function(){var e=this.userStrokeShader;return e&&e.isStrokeShader()?e:this._getLineShader()},o.default.RendererGL.prototype._getRetainedStrokeShader=o.default.RendererGL.prototype._getImmediateStrokeShader,o.default.RendererGL.prototype._getImmediateFillShader=function(){var e=this.userFillShader;if(this._useNormalMaterial&&(!e||!e.isNormalShader()))return this._getNormalShader();if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getImmediateModeShader();return e},o.default.RendererGL.prototype._getRetainedFillShader=function(){if(this._useNormalMaterial)return this._getNormalShader();var e=this.userFillShader;if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getColorShader();return e},o.default.RendererGL.prototype._getImmediatePointShader=function(){var e=this.userPointShader;return e&&e.isPointShader()?e:this._getPointShader()},o.default.RendererGL.prototype._getRetainedLineShader=o.default.RendererGL.prototype._getImmediateLineShader,o.default.RendererGL.prototype._getLightShader=function(){return this._defaultLightShader||(this._pInst._glAttributes.perPixelLighting?this._defaultLightShader=new o.default.Shader(this,u.phongVert,u.phongFrag):this._defaultLightShader=new o.default.Shader(this,u.lightVert,u.lightTextureFrag)),this._defaultLightShader},o.default.RendererGL.prototype._getImmediateModeShader=function(){return this._defaultImmediateModeShader||(this._defaultImmediateModeShader=new o.default.Shader(this,u.immediateVert,u.vertexColorFrag)),this._defaultImmediateModeShader},o.default.RendererGL.prototype._getNormalShader=function(){return this._defaultNormalShader||(this._defaultNormalShader=new o.default.Shader(this,u.normalVert,u.normalFrag)),this._defaultNormalShader},o.default.RendererGL.prototype._getColorShader=function(){return this._defaultColorShader||(this._defaultColorShader=new o.default.Shader(this,u.normalVert,u.basicFrag)),this._defaultColorShader},o.default.RendererGL.prototype._getPointShader=function(){return this._defaultPointShader||(this._defaultPointShader=new o.default.Shader(this,u.pointVert,u.pointFrag)),this._defaultPointShader},o.default.RendererGL.prototype._getLineShader=function(){return this._defaultLineShader||(this._defaultLineShader=new o.default.Shader(this,u.lineVert,u.lineFrag)),this._defaultLineShader},o.default.RendererGL.prototype._getFontShader=function(){return this._defaultFontShader||(this.GL.getExtension("OES_standard_derivatives"),this._defaultFontShader=new o.default.Shader(this,u.fontVert,u.fontFrag)),this._defaultFontShader},o.default.RendererGL.prototype._getEmptyTexture=function(){if(!this._emptyTexture){var e=new o.default.Image(1,1);e.set(0,0,255),this._emptyTexture=new o.default.Texture(this,e)}return this._emptyTexture},o.default.RendererGL.prototype.getTexture=function(e){var t=this.textures,r=!0,n=!1,a=void 0;try{for(var i,s=t[Symbol.iterator]();!(r=(i=s.next()).done);r=!0){var l=i.value;if(l.src===e)return l}}catch(e){n=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(n)throw a}}var p=new o.default.Texture(this,e);return t.push(p),p},o.default.RendererGL.prototype._setStrokeUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uStrokeWeight",this.curStrokeWeight)},o.default.RendererGL.prototype._setFillUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curFillColor),e.setUniform("isTexture",!!this._tex),this._tex&&e.setUniform("uSampler",this._tex),e.setUniform("uTint",this._tint),e.setUniform("uSpecular",this._useSpecularMaterial),e.setUniform("uEmissive",this._useEmissiveMaterial),e.setUniform("uShininess",this._useShininess),e.setUniform("uUseLighting",this._enableLighting);var t=this.pointLightDiffuseColors.length/3;e.setUniform("uPointLightCount",t),e.setUniform("uPointLightLocation",this.pointLightPositions),e.setUniform("uPointLightDiffuseColors",this.pointLightDiffuseColors),e.setUniform("uPointLightSpecularColors",this.pointLightSpecularColors);var r=this.directionalLightDiffuseColors.length/3;e.setUniform("uDirectionalLightCount",r),e.setUniform("uLightingDirection",this.directionalLightDirections),e.setUniform("uDirectionalDiffuseColors",this.directionalLightDiffuseColors),e.setUniform("uDirectionalSpecularColors",this.directionalLightSpecularColors);var n=this.ambientLightColors.length/3;e.setUniform("uAmbientLightCount",n),e.setUniform("uAmbientColor",this.ambientLightColors);var o=this.spotLightDiffuseColors.length/3;e.setUniform("uSpotLightCount",o),e.setUniform("uSpotLightAngle",this.spotLightAngle),e.setUniform("uSpotLightConc",this.spotLightConc),e.setUniform("uSpotLightDiffuseColors",this.spotLightDiffuseColors),e.setUniform("uSpotLightSpecularColors",this.spotLightSpecularColors),e.setUniform("uSpotLightLocation",this.spotLightPositions),e.setUniform("uSpotLightDirection",this.spotLightDirections),e.setUniform("uConstantAttenuation",this.constantAttenuation),e.setUniform("uLinearAttenuation",this.linearAttenuation),e.setUniform("uQuadraticAttenuation",this.quadraticAttenuation),e.bindTextures()},o.default.RendererGL.prototype._setPointUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uPointSize",this.pointSize)},o.default.RendererGL.prototype._bindBuffer=function(e,t,r,n,o){if(t=t||this.GL.ARRAY_BUFFER,this.GL.bindBuffer(t,e),void 0!==r){var a=new(n||Float32Array)(r);this.GL.bufferData(t,a,o||this.GL.STATIC_DRAW)}},o.default.RendererGL.prototype._arraysEqual=function(e,t){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0},o.default.RendererGL.prototype._isTypedArray=function(e){return Float32Array,Float64Array,Int16Array,Uint16Array,e instanceof Uint32Array},o.default.RendererGL.prototype._flatten=function(e){if(0===e.length)return[];if(2e4<e.length){var t,r=Object.prototype.toString,n=[],o=e.slice();for(t=o.pop();"[object Array]"===r.call(t)?o.push.apply(o,l(t)):n.push(t),o.length&&void 0!==(t=o.pop()););return n.reverse(),n}var a;return(a=[]).concat.apply(a,l(e))},o.default.RendererGL.prototype._vToNArray=function(e){var t=[],r=!0,n=!1,o=void 0;try{for(var a,i=e[Symbol.iterator]();!(r=(a=i.next()).done);r=!0){var s=a.value;t.push(s.x,s.y,s.z)}}catch(e){n=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(n)throw o}}return t},o.default.prototype._assert3d=function(e){if(!this._renderer.isP3D)throw new Error("".concat(e,"() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."))},o.default.RendererGL.prototype._initTessy=function(){var e=new i.default.GluTesselator;return e.gluTessCallback(i.default.gluEnum.GLU_TESS_VERTEX_DATA,(function(e,t){t[t.length]=e[0],t[t.length]=e[1],t[t.length]=e[2]})),e.gluTessCallback(i.default.gluEnum.GLU_TESS_BEGIN,(function(e){e!==i.default.primitiveType.GL_TRIANGLES&&console.log("expected TRIANGLES but got type: ".concat(e))})),e.gluTessCallback(i.default.gluEnum.GLU_TESS_ERROR,(function(e){console.log("error callback"),console.log("error number: ".concat(e))})),e.gluTessCallback(i.default.gluEnum.GLU_TESS_COMBINE,(function(e,t,r){return[e[0],e[1],e[2]]})),e.gluTessCallback(i.default.gluEnum.GLU_TESS_EDGE_FLAG,(function(e){})),e},o.default.RendererGL.prototype._triangulate=function(e){this._tessy.gluTessNormal(0,0,1);var t=[];this._tessy.gluTessBeginPolygon(t);for(var r=0;r<e.length;r++){this._tessy.gluTessBeginContour();for(var n=e[r],o=0;o<n.length;o+=3){var a=[n[o],n[o+1],n[o+2]];this._tessy.gluTessVertex(a,a)}this._tessy.gluTessEndContour()}return this._tessy.gluTessEndPolygon(),t},o.default.RendererGL.prototype._bezierCoefficients=function(e){var t=e*e,r=1-e,n=r*r;return[n*r,3*n*e,3*r*t,t*e]},o.default.RendererGL.prototype._quadraticCoefficients=function(e){var t=1-e;return[t*t,2*t*e,e*e]},o.default.RendererGL.prototype._bezierToCatmull=function(e){return[e[1],e[1]+(e[2]-e[0])/this._curveTightness,e[2]-(e[3]-e[1])/this._curveTightness,e[2]]};var c=o.default.RendererGL;r.default=c},{"../core/constants":22,"../core/main":32,"../core/p5.Renderer":35,"./p5.Camera":80,"./p5.Matrix":82,"./p5.Shader":87,libtess:11,path:14}],87:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,o=(n=e("../core/main"))&&n.__esModule?n:{default:n};o.default.Shader=function(e,t,r){this._renderer=e,this._vertSrc=t,this._fragSrc=r,this._vertShader=-1,this._fragShader=-1,this._glProgram=0,this._loadedAttributes=!1,this.attributes={},this._loadedUniforms=!1,this.uniforms={},this._bound=!1,this.samplers=[]},o.default.Shader.prototype.init=function(){if(0===this._glProgram){var e=this._renderer.GL;if(this._vertShader=e.createShader(e.VERTEX_SHADER),e.shaderSource(this._vertShader,this._vertSrc),e.compileShader(this._vertShader),!e.getShaderParameter(this._vertShader,e.COMPILE_STATUS))return console.error("Yikes! An error occurred compiling the vertex shader:".concat(e.getShaderInfoLog(this._vertShader))),null;if(this._fragShader=e.createShader(e.FRAGMENT_SHADER),e.shaderSource(this._fragShader,this._fragSrc),e.compileShader(this._fragShader),!e.getShaderParameter(this._fragShader,e.COMPILE_STATUS))return console.error("Darn! An error occurred compiling the fragment shader:".concat(e.getShaderInfoLog(this._fragShader))),null;this._glProgram=e.createProgram(),e.attachShader(this._glProgram,this._vertShader),e.attachShader(this._glProgram,this._fragShader),e.linkProgram(this._glProgram),e.getProgramParameter(this._glProgram,e.LINK_STATUS)||console.error("Snap! Error linking shader program: ".concat(e.getProgramInfoLog(this._glProgram))),this._loadAttributes(),this._loadUniforms()}return this},o.default.Shader.prototype._loadAttributes=function(){if(!this._loadedAttributes){this.attributes={};for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_ATTRIBUTES),r=0;r<t;++r){var n=e.getActiveAttrib(this._glProgram,r),o=n.name,a=e.getAttribLocation(this._glProgram,o),i={};i.name=o,i.location=a,i.index=r,i.type=n.type,i.size=n.size,this.attributes[o]=i}this._loadedAttributes=!0}},o.default.Shader.prototype._loadUniforms=function(){if(!this._loadedUniforms){for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_UNIFORMS),r=0,n=0;n<t;++n){var o=e.getActiveUniform(this._glProgram,n),a={};a.location=e.getUniformLocation(this._glProgram,o.name),a.size=o.size;var i=o.name;1<o.size&&(i=i.substring(0,i.indexOf("[0]"))),a.name=i,a.type=o.type,a._cachedData=void 0,a.type===e.SAMPLER_2D&&(a.samplerIndex=r,r++,this.samplers.push(a)),a.isArray=a.type===e.FLOAT_MAT3||a.type===e.FLOAT_MAT4||a.type===e.FLOAT_VEC2||a.type===e.FLOAT_VEC3||a.type===e.FLOAT_VEC4||a.type===e.INT_VEC2||a.type===e.INT_VEC3||a.type===e.INT_VEC4,this.uniforms[i]=a}this._loadedUniforms=!0}},o.default.Shader.prototype.compile=function(){},o.default.Shader.prototype.bindShader=function(){this.init(),this._bound||(this.useProgram(),this._bound=!0,this._setMatrixUniforms(),this.setUniform("uViewport",this._renderer._viewport))},o.default.Shader.prototype.unbindShader=function(){return this._bound&&(this.unbindTextures(),this._bound=!1),this},o.default.Shader.prototype.bindTextures=function(){var e=this._renderer.GL,t=!0,r=!1,n=void 0;try{for(var o,a=this.samplers[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var i=o.value,s=i.texture;void 0===s&&(s=this._renderer._getEmptyTexture()),e.activeTexture(e.TEXTURE0+i.samplerIndex),s.bindTexture(),s.update(),e.uniform1i(i.location,i.samplerIndex)}}catch(e){r=!0,n=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw n}}},o.default.Shader.prototype.updateTextures=function(){var e=!0,t=!1,r=void 0;try{for(var n,o=this.samplers[Symbol.iterator]();!(e=(n=o.next()).done);e=!0){var a=n.value.texture;a&&a.update()}}catch(e){t=!0,r=e}finally{try{e||null==o.return||o.return()}finally{if(t)throw r}}},o.default.Shader.prototype.unbindTextures=function(){},o.default.Shader.prototype._setMatrixUniforms=function(){this.setUniform("uProjectionMatrix",this._renderer.uPMatrix.mat4),this.isStrokeShader()&&("default"===this._renderer._curCamera.cameraType?this.setUniform("uPerspective",1):this.setUniform("uPerspective",0)),this.setUniform("uModelViewMatrix",this._renderer.uMVMatrix.mat4),this.setUniform("uViewMatrix",this._renderer._curCamera.cameraMatrix.mat4),this.uniforms.uNormalMatrix&&(this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix),this.setUniform("uNormalMatrix",this._renderer.uNMatrix.mat3))},o.default.Shader.prototype.useProgram=function(){var e=this._renderer.GL;return this._renderer._curShader!==this&&(e.useProgram(this._glProgram),this._renderer._curShader=this),this},o.default.Shader.prototype.setUniform=function(e,t){var r=this.uniforms[e];if(r){var n=this._renderer.GL;if(r.isArray){if(r._cachedData&&this._renderer._arraysEqual(r._cachedData,t))return;r._cachedData=t.slice(0)}else{if(r._cachedData&&r._cachedData===t)return;r._cachedData=t}var o=r.location;switch(this.useProgram(),r.type){case n.BOOL:!0===t?n.uniform1i(o,1):n.uniform1i(o,0);break;case n.INT:1<r.size?t.length&&n.uniform1iv(o,t):n.uniform1i(o,t);break;case n.FLOAT:1<r.size?t.length&&n.uniform1fv(o,t):n.uniform1f(o,t);break;case n.FLOAT_MAT3:n.uniformMatrix3fv(o,!1,t);break;case n.FLOAT_MAT4:n.uniformMatrix4fv(o,!1,t);break;case n.FLOAT_VEC2:1<r.size?t.length&&n.uniform2fv(o,t):n.uniform2f(o,t[0],t[1]);break;case n.FLOAT_VEC3:1<r.size?t.length&&n.uniform3fv(o,t):n.uniform3f(o,t[0],t[1],t[2]);break;case n.FLOAT_VEC4:1<r.size?t.length&&n.uniform4fv(o,t):n.uniform4f(o,t[0],t[1],t[2],t[3]);break;case n.INT_VEC2:1<r.size?t.length&&n.uniform2iv(o,t):n.uniform2i(o,t[0],t[1]);break;case n.INT_VEC3:1<r.size?t.length&&n.uniform3iv(o,t):n.uniform3i(o,t[0],t[1],t[2]);break;case n.INT_VEC4:1<r.size?t.length&&n.uniform4iv(o,t):n.uniform4i(o,t[0],t[1],t[2],t[3]);break;case n.SAMPLER_2D:n.activeTexture(n.TEXTURE0+r.samplerIndex),r.texture=this._renderer.getTexture(t),n.uniform1i(r.location,r.samplerIndex)}return this}},o.default.Shader.prototype.isLightShader=function(){return void 0!==this.attributes.aNormal||void 0!==this.uniforms.uUseLighting||void 0!==this.uniforms.uAmbientLightCount||void 0!==this.uniforms.uDirectionalLightCount||void 0!==this.uniforms.uPointLightCount||void 0!==this.uniforms.uAmbientColor||void 0!==this.uniforms.uDirectionalDiffuseColors||void 0!==this.uniforms.uDirectionalSpecularColors||void 0!==this.uniforms.uPointLightLocation||void 0!==this.uniforms.uPointLightDiffuseColors||void 0!==this.uniforms.uPointLightSpecularColors||void 0!==this.uniforms.uLightingDirection||void 0!==this.uniforms.uSpecular},o.default.Shader.prototype.isNormalShader=function(){return void 0!==this.attributes.aNormal},o.default.Shader.prototype.isTextureShader=function(){return 0<this.samplerIndex},o.default.Shader.prototype.isColorShader=function(){return void 0!==this.attributes.aVertexColor||void 0!==this.uniforms.uMaterialColor},o.default.Shader.prototype.isTexLightShader=function(){return this.isLightShader()&&this.isTextureShader()},o.default.Shader.prototype.isStrokeShader=function(){return void 0!==this.uniforms.uStrokeWeight},o.default.Shader.prototype.enableAttrib=function(e,t,r,n,o,a){if(e){var i=e.location;if(-1!==i){var s=this._renderer.GL;e.enabled||(s.enableVertexAttribArray(i),e.enabled=!0),this._renderer.GL.vertexAttribPointer(i,t,r||s.FLOAT,n||!1,o||0,a||0)}}return this};var a=o.default.Shader;r.default=a},{"../core/main":32}],88:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));a.default.Texture=function(e,t){this._renderer=e;var r=this._renderer.GL;this.src=t,this.glTex=void 0,this.glTarget=r.TEXTURE_2D,this.glFormat=r.RGBA,this.mipmaps=!1,this.glMinFilter=r.LINEAR,this.glMagFilter=r.LINEAR,this.glWrapS=r.CLAMP_TO_EDGE,this.glWrapT=r.CLAMP_TO_EDGE,this.isSrcMediaElement=void 0!==a.default.MediaElement&&t instanceof a.default.MediaElement,this._videoPrevUpdateTime=0,this.isSrcHTMLElement=void 0!==a.default.Element&&t instanceof a.default.Element&&!(t instanceof a.default.Graphics),this.isSrcP5Image=t instanceof a.default.Image,this.isSrcP5Graphics=t instanceof a.default.Graphics,this.isImageData="undefined"!=typeof ImageData&&t instanceof ImageData;var n=this._getTextureDataFromSource();return this.width=n.width,this.height=n.height,this.init(n),this},a.default.Texture.prototype._getTextureDataFromSource=function(){var e;return this.isSrcP5Image?e=this.src.canvas:this.isSrcMediaElement||this.isSrcP5Graphics||this.isSrcHTMLElement?e=this.src.elt:this.isImageData&&(e=this.src),e},a.default.Texture.prototype.init=function(e){var t=this._renderer.GL;if(this.glTex=t.createTexture(),this.glWrapS=this._renderer.textureWrapX,this.glWrapT=this._renderer.textureWrapY,this.setWrapMode(this.glWrapS,this.glWrapT),this.bindTexture(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.glMagFilter),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.glMinFilter),0===this.width||0===this.height||this.isSrcMediaElement&&!this.src.loadedmetadata){var r=new Uint8Array([1,1,1,1]);t.texImage2D(this.glTarget,0,t.RGBA,1,1,0,this.glFormat,t.UNSIGNED_BYTE,r)}else t.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,t.UNSIGNED_BYTE,e)},a.default.Texture.prototype.update=function(){var e=this.src;if(0===e.width||0===e.height)return!1;var t=this._getTextureDataFromSource(),r=!1,n=this._renderer.GL;return t.width!==this.width||t.height!==this.height?(r=!0,this.width=t.width,this.height=t.height,this.isSrcP5Image?e.setModified(!1):(this.isSrcMediaElement||this.isSrcHTMLElement)&&e.setModified(!0)):this.isSrcP5Image?e.isModified()&&(r=!0,e.setModified(!1)):this.isSrcMediaElement?e.isModified()?(r=!0,e.setModified(!1)):e.loadedmetadata&&this._videoPrevUpdateTime!==e.time()&&(this._videoPrevUpdateTime=e.time(),r=!0):this.isImageData?e._dirty&&(r=!(e._dirty=!1)):r=!0,r&&(this.bindTexture(),n.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,n.UNSIGNED_BYTE,t)),r},a.default.Texture.prototype.bindTexture=function(){return this._renderer.GL.bindTexture(this.glTarget,this.glTex),this},a.default.Texture.prototype.unbindTexture=function(){this._renderer.GL.bindTexture(this.glTarget,null)},a.default.Texture.prototype.setInterpolation=function(e,t){var r=this._renderer.GL;e===i.NEAREST?this.glMinFilter=r.NEAREST:this.glMinFilter=r.LINEAR,t===i.NEAREST?this.glMagFilter=r.NEAREST:this.glMagFilter=r.LINEAR,this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this.glMinFilter),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,this.glMagFilter),this.unbindTexture()},a.default.Texture.prototype.setWrapMode=function(e,t){function r(e){return 0==(e&e-1)}var n=this._renderer.GL,o=r(this.width),a=r(this.height);e===i.REPEAT?o&&a?this.glWrapS=n.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=n.CLAMP_TO_EDGE):e===i.MIRROR?o&&a?this.glWrapS=n.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=n.CLAMP_TO_EDGE):this.glWrapS=n.CLAMP_TO_EDGE,t===i.REPEAT?o&&a?this.glWrapT=n.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=n.CLAMP_TO_EDGE):t===i.MIRROR?o&&a?this.glWrapT=n.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=n.CLAMP_TO_EDGE):this.glWrapT=n.CLAMP_TO_EDGE,this.bindTexture(),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,this.glWrapS),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,this.glWrapT),this.unbindTexture()};var s=a.default.Texture;r.default=s},{"../core/constants":22,"../core/main":32}],89:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,a=(o=e("../core/main"))&&o.__esModule?o:{default:o},i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=function(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return e}();if(t&&t.has(e))return t.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=o?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(e,t){this.width=e,this.height=t,this.infos=[],this.findImage=function(e){var t,r,n=this.width*this.height;if(n<e)throw new Error("font is too complex to render in 3D");for(var o=this.infos.length-1;0<=o;--o){var a=this.infos[o];if(a.index+e<n){r=(t=a).imageData;break}}if(!t){try{r=new ImageData(this.width,this.height)}catch(e){var i=document.getElementsByTagName("canvas")[0],s=!i;i||((i=document.createElement("canvas")).style.display="none",document.body.appendChild(i));var l=i.getContext("2d");l&&(r=l.createImageData(this.width,this.height)),s&&document.body.removeChild(i)}t={index:0,imageData:r},this.infos.push(t)}var p=t.index;return t.index+=e,r._dirty=!0,{imageData:r,index:p}}}function l(e,t,r,n,o){var a=e.imageData.data,i=4*e.index++;a[i++]=t,a[i++]=r,a[i++]=n,a[i++]=o}function p(e){this.font=e,this.strokeImageInfos=new s(64,64),this.colDimImageInfos=new s(64,64),this.rowDimImageInfos=new s(64,64),this.colCellImageInfos=new s(64,64),this.rowCellImageInfos=new s(64,64),this.glyphInfos={},this.getGlyphInfo=function(e){var t=this.glyphInfos[e.index];if(t)return t;var r,n=e.getBoundingBox(),o=n.x1,i=n.y1,s=n.x2-o,p=n.y2-i,c=e.path.commands;if(0==s||0==p||!c.length)return this.glyphInfos[e.index]={};var d,h,m,f,y=[],g=[],v=[];for(r=8;0<=r;--r)v.push([]);for(r=8;0<=r;--r)g.push([]);function b(e,t,r){var n=y.length;function o(e,t,r){for(var n=e.length;0<n--;){var o=e[n];o<t&&(t=o),r<o&&(r=o)}return{min:t,max:r}}y.push(r);for(var a=o(e,1,0),i=Math.max(Math.floor(9*a.min),0),s=Math.min(Math.ceil(9*a.max),9),l=i;l<s;++l)v[l].push(n);for(var p=o(t,1,0),u=Math.max(Math.floor(9*p.min),0),c=Math.min(Math.ceil(9*p.max),9),d=u;d<c;++d)g[d].push(n)}function x(e){return(t=255*e)<0?0:255<t?255:t;var t}function _(e,t,r,n){this.p0=e,this.c0=t,this.c1=r,this.p1=n,this.toQuadratic=function(){return{x:this.p0.x,y:this.p0.y,x1:this.p1.x,y1:this.p1.y,cx:(3*(this.c0.x+this.c1.x)-(this.p0.x+this.p1.x))/4,cy:(3*(this.c0.y+this.c1.y)-(this.p0.y+this.p1.y))/4}},this.quadError=function(){return a.default.Vector.sub(a.default.Vector.sub(this.p1,this.p0),a.default.Vector.mult(a.default.Vector.sub(this.c1,this.c0),3)).mag()/2},this.split=function(e){var t=a.default.Vector.lerp(this.p0,this.c0,e),r=a.default.Vector.lerp(this.c0,this.c1,e),n=a.default.Vector.lerp(t,r,e);this.c1=a.default.Vector.lerp(this.c1,this.p1,e),this.c0=a.default.Vector.lerp(r,this.c1,e);var o=a.default.Vector.lerp(n,this.c0,e),i=new _(this.p0,t,n,o);return this.p0=o,i},this.splitInflections=function(){var e=a.default.Vector.sub(this.c0,this.p0),t=a.default.Vector.sub(a.default.Vector.sub(this.c1,this.c0),e),r=a.default.Vector.sub(a.default.Vector.sub(a.default.Vector.sub(this.p1,this.c1),e),a.default.Vector.mult(t,2)),n=[],o=t.x*r.y-t.y*r.x;if(0!==o){var i=e.x*r.y-e.y*r.x,s=e.x*t.y-e.y*t.x,l=i*i-4*o*s;if(0<=l){o<0&&(o=-o,i=-i,s=-s);var p=Math.sqrt(l),u=(-i-p)/(2*o),c=(-i+p)/(2*o);0<u&&u<1&&(n.push(this.split(u)),c=1-(1-c)/(1-u)),0<c&&c<1&&n.push(this.split(c))}}return n.push(this),n}}function w(e,t,r,n,o,i,s,l){var p=new _(new a.default.Vector(e,t),new a.default.Vector(r,n),new a.default.Vector(o,i),new a.default.Vector(s,l)).splitInflections(),c=[],d=30/u,h=!0,m=!1,f=void 0;try{for(var y,g=p[Symbol.iterator]();!(h=(y=g.next()).done);h=!0){for(var v=y.value,b=[],x=void 0;!(.125<=(x=d/v.quadError()));){var w=Math.pow(x,1/3),S=v.split(w),M=v.split(1-w/(1-w));c.push(S),b.push(v),v=M}x<1&&c.push(v.split(.5)),c.push(v),Array.prototype.push.apply(c,b.reverse())}}catch(e){m=!0,f=e}finally{try{h||null==g.return||g.return()}finally{if(m)throw f}}return c}function S(e,t,r,n){b([e,r],[t,n],{x:e,y:t,cx:(e+r)/2,cy:(t+n)/2})}function M(e,t,r,n){return Math.abs(r-e)<1e-5&&Math.abs(n-t)<1e-5}var C=!0,T=!1,E=void 0;try{for(var N,P=c[Symbol.iterator]();!(C=(N=P.next()).done);C=!0){var A=N.value,I=(A.x-o)/s,O=(A.y-i)/p;if(!M(d,h,I,O)){switch(A.type){case"M":m=I,f=O;break;case"L":S(d,h,I,O);break;case"Q":var L=(A.x1-o)/s,R=(A.y1-i)/p;b([d,I,L],[h,O,R],{x:d,y:h,cx:L,cy:R});break;case"Z":M(d,h,m,f)?y.push({x:d,y:h}):(S(d,h,m,f),y.push({x:m,y:f}));break;case"C":for(var D=w(d,h,(A.x1-o)/s,(A.y1-i)/p,(A.x2-o)/s,(A.y2-i)/p,I,O),k=0;k<D.length;k++){var F=D[k].toQuadratic();b([F.x,F.x1,F.cx],[F.y,F.y1,F.cy],F)}break;default:throw new Error("unknown command type: ".concat(A.type))}d=I,h=O}}}catch(e){T=!0,E=e}finally{try{C||null==P.return||P.return()}finally{if(T)throw E}}for(var B=y.length,U=this.strokeImageInfos.findImage(B),G=U.index,V=0;V<B;++V){var j=y[V];l(U,x(j.x),x(j.y),x(j.cx),x(j.cy))}function z(e,t,r){for(var n=e.length,o=t.findImage(n),a=o.index,i=0,s=0;s<n;++s)i+=e[s].length;for(var p=r.findImage(i),u=0;u<n;++u){var c=e[u],d=c.length,h=p.index;l(o,h>>7,127&h,d>>7,127&d);for(var m=0;m<d;++m){var f=c[m]+G;l(p,f>>7,127&f,0,0)}}return{cellImageInfo:p,dimOffset:a,dimImageInfo:o}}return(t=this.glyphInfos[e.index]={glyph:e,uGlyphRect:[n.x1,-n.y1,n.x2,-n.y2],strokeImageInfo:U,strokes:y,colInfo:z(v,this.colDimImageInfos,this.colCellImageInfos),rowInfo:z(g,this.rowDimImageInfos,this.rowCellImageInfos)}).uGridOffset=[t.colInfo.dimOffset,t.rowInfo.dimOffset],t}}e("./p5.Shader"),e("./p5.RendererGL.Retained"),a.default.RendererGL.prototype._applyTextProperties=function(){},a.default.RendererGL.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):0};var u=Math.sqrt(3);a.default.RendererGL.prototype._renderText=function(e,t,r,n,o){if(this._textFont&&"string"!=typeof this._textFont){if(!(o<=n)&&this._doFill){if(!this._isOpenType())return console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported"),e;e.push();var s=this._doStroke,l=this.drawMode;this._doStroke=!1,this.drawMode=i.TEXTURE;var u=this._textFont.font,c=this._textFont._fontInfo;c=c||(this._textFont._fontInfo=new p(u));var d=this._textFont._handleAlignment(this,t,r,n),h=this._textSize/u.unitsPerEm;this.translate(d.x,d.y,0),this.scale(h,h,1);var m=this.GL,f=!this._defaultFontShader,y=this._getFontShader();y.init(),y.bindShader(),f&&(y.setUniform("uGridImageSize",[64,64]),y.setUniform("uCellsImageSize",[64,64]),y.setUniform("uStrokeImageSize",[64,64]),y.setUniform("uGridSize",[9,9])),this._applyColorBlend(this.curFillColor);var g=this.retainedMode.geometry.glyph;if(!g){var v=this._textGeom=new a.default.Geometry(1,1,(function(){for(var e=0;e<=1;e++)for(var t=0;t<=1;t++)this.vertices.push(new a.default.Vector(t,e,0)),this.uvs.push(t,e)}));v.computeFaces().computeNormals(),g=this.createBuffers("glyph",v)}var b=!0,x=!1,_=void 0;try{for(var w,S=this.retainedMode.buffers.text[Symbol.iterator]();!(b=(w=S.next()).done);b=!0)w.value._prepareBuffer(g,y)}catch(e){x=!0,_=e}finally{try{b||null==S.return||S.return()}finally{if(x)throw _}}this._bindBuffer(g.indexBuffer,m.ELEMENT_ARRAY_BUFFER),y.setUniform("uMaterialColor",this.curFillColor);try{var M=0,C=null,T=u.stringToGlyphs(t),E=!0,N=!1,P=void 0;try{for(var A,I=T[Symbol.iterator]();!(E=(A=I.next()).done);E=!0){var O=A.value;C&&(M+=u.getKerningValue(C,O));var L=c.getGlyphInfo(O);if(L.uGlyphRect){var R=L.rowInfo,D=L.colInfo;y.setUniform("uSamplerStrokes",L.strokeImageInfo.imageData),y.setUniform("uSamplerRowStrokes",R.cellImageInfo.imageData),y.setUniform("uSamplerRows",R.dimImageInfo.imageData),y.setUniform("uSamplerColStrokes",D.cellImageInfo.imageData),y.setUniform("uSamplerCols",D.dimImageInfo.imageData),y.setUniform("uGridOffset",L.uGridOffset),y.setUniform("uGlyphRect",L.uGlyphRect),y.setUniform("uGlyphOffset",M),y.bindTextures(),m.drawElements(m.TRIANGLES,6,this.GL.UNSIGNED_SHORT,0)}M+=O.advanceWidth,C=O}}catch(e){N=!0,P=e}finally{try{E||null==I.return||I.return()}finally{if(N)throw P}}}finally{y.unbindShader(),this._doStroke=s,this.drawMode=l,e.pop()}return e}}else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.")}},{"../core/constants":22,"../core/main":32,"./p5.RendererGL.Retained":85,"./p5.Shader":87}]},{},[17])(17)}).call(this,r(2))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hdHRlci1qcy9idWlsZC9tYXR0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzLnRzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlcHVsc2lvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2tub2xsYm90LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2dyb3VwaW5nLnRzIiwid2VicGFjazovLy8uL3NyYy9yYW5kb21wb2tlcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYWxpZ25tZW50Mi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYmluYXJ5U2VhcmNoLnRzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wNS9saWIvcDUubWluLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiZSIsImYiLCJ1IiwiYSIsIkVycm9yIiwiY29kZSIsImxlbmd0aCIsIjEiLCJfZGVyZXFfIiwiQm9keSIsIlZlcnRpY2VzIiwiVmVjdG9yIiwiU2xlZXBpbmciLCJDb21tb24iLCJCb3VuZHMiLCJBeGVzIiwiX2luZXJ0aWFTY2FsZSIsIl9uZXh0Q29sbGlkaW5nR3JvdXBJZCIsIl9uZXh0Tm9uQ29sbGlkaW5nR3JvdXBJZCIsIl9uZXh0Q2F0ZWdvcnkiLCJvcHRpb25zIiwiZGVmYXVsdHMiLCJpZCIsIm5leHRJZCIsInR5cGUiLCJsYWJlbCIsInBhcnRzIiwicGx1Z2luIiwiYW5nbGUiLCJ2ZXJ0aWNlcyIsImZyb21QYXRoIiwicG9zaXRpb24iLCJ4IiwieSIsImZvcmNlIiwidG9ycXVlIiwicG9zaXRpb25JbXB1bHNlIiwiY29uc3RyYWludEltcHVsc2UiLCJ0b3RhbENvbnRhY3RzIiwic3BlZWQiLCJhbmd1bGFyU3BlZWQiLCJ2ZWxvY2l0eSIsImFuZ3VsYXJWZWxvY2l0eSIsImlzU2Vuc29yIiwiaXNTdGF0aWMiLCJpc1NsZWVwaW5nIiwibW90aW9uIiwic2xlZXBUaHJlc2hvbGQiLCJkZW5zaXR5IiwicmVzdGl0dXRpb24iLCJmcmljdGlvbiIsImZyaWN0aW9uU3RhdGljIiwiZnJpY3Rpb25BaXIiLCJjb2xsaXNpb25GaWx0ZXIiLCJjYXRlZ29yeSIsIm1hc2siLCJncm91cCIsInNsb3AiLCJ0aW1lU2NhbGUiLCJyZW5kZXIiLCJ2aXNpYmxlIiwib3BhY2l0eSIsInNwcml0ZSIsInhTY2FsZSIsInlTY2FsZSIsInhPZmZzZXQiLCJ5T2Zmc2V0IiwibGluZVdpZHRoIiwiYm9keSIsImV4dGVuZCIsIl9pbml0UHJvcGVydGllcyIsIm5leHRHcm91cCIsImlzTm9uQ29sbGlkaW5nIiwibmV4dENhdGVnb3J5Iiwic2V0IiwiYm91bmRzIiwicG9zaXRpb25QcmV2IiwiY2xvbmUiLCJhbmdsZVByZXYiLCJwYXJlbnQiLCJyb3RhdGUiLCJheGVzIiwidXBkYXRlIiwiYXJlYSIsIm1hc3MiLCJpbmVydGlhIiwiZGVmYXVsdEZpbGxTdHlsZSIsImNob29zZSIsImZpbGxTdHlsZSIsInN0cm9rZVN0eWxlIiwibWluIiwibWF4Iiwic2V0dGluZ3MiLCJzZXRTdGF0aWMiLCJzZXRNYXNzIiwic2V0RGVuc2l0eSIsInNldEluZXJ0aWEiLCJzZXRWZXJ0aWNlcyIsInNldFBvc2l0aW9uIiwic2V0QW5nbGUiLCJzZXRWZWxvY2l0eSIsInNldEFuZ3VsYXJWZWxvY2l0eSIsInNldFBhcnRzIiwicGFydCIsIl9vcmlnaW5hbCIsImludmVyc2VNYXNzIiwiaW52ZXJzZUluZXJ0aWEiLCJJbmZpbml0eSIsIm1vbWVudCIsImZyb21WZXJ0aWNlcyIsImNlbnRyZSIsInRyYW5zbGF0ZSIsImF1dG9IdWxsIiwic2xpY2UiLCJwdXNoIiwiY29uY2F0IiwiY2xvY2t3aXNlU29ydCIsImh1bGwiLCJodWxsQ2VudHJlIiwidG90YWwiLCJfdG90YWxQcm9wZXJ0aWVzIiwiZGVsdGEiLCJzdWIiLCJyb3RhdGVBYm91dCIsIm1hZ25pdHVkZSIsIk1hdGgiLCJhYnMiLCJ0cmFuc2xhdGlvbiIsImFkZCIsInJvdGF0aW9uIiwicG9pbnQiLCJjb3MiLCJzaW4iLCJkeCIsImR5Iiwic2NhbGUiLCJzY2FsZVgiLCJzY2FsZVkiLCJ0b3RhbEFyZWEiLCJ0b3RhbEluZXJ0aWEiLCJjaXJjbGVSYWRpdXMiLCJkZWx0YVRpbWUiLCJjb3JyZWN0aW9uIiwiZGVsdGFUaW1lU3F1YXJlZCIsInBvdyIsInZlbG9jaXR5UHJldlgiLCJ2ZWxvY2l0eVByZXZZIiwiYXBwbHlGb3JjZSIsIm9mZnNldCIsInByb3BlcnRpZXMiLCJtdWx0IiwiZGl2IiwiMiIsIkNvbXBvc2l0ZSIsIkV2ZW50cyIsImlzTW9kaWZpZWQiLCJib2RpZXMiLCJjb25zdHJhaW50cyIsImNvbXBvc2l0ZXMiLCJzZXRNb2RpZmllZCIsImNvbXBvc2l0ZSIsInVwZGF0ZVBhcmVudHMiLCJ1cGRhdGVDaGlsZHJlbiIsImNoaWxkQ29tcG9zaXRlIiwib2JqZWN0cyIsInRyaWdnZXIiLCJvYmoiLCJ3YXJuIiwiYWRkQm9keSIsImFkZENvbnN0cmFpbnQiLCJhZGRDb21wb3NpdGUiLCJjb25zdHJhaW50IiwicmVtb3ZlIiwiZGVlcCIsInJlbW92ZUJvZHkiLCJyZW1vdmVDb25zdHJhaW50IiwicmVtb3ZlQ29tcG9zaXRlIiwiY29tcG9zaXRlQSIsImNvbXBvc2l0ZUIiLCJpbmRleE9mIiwicmVtb3ZlQ29tcG9zaXRlQXQiLCJzcGxpY2UiLCJyZW1vdmVCb2R5QXQiLCJyZW1vdmVDb25zdHJhaW50QXQiLCJjbGVhciIsImtlZXBTdGF0aWMiLCJmaWx0ZXIiLCJhbGxCb2RpZXMiLCJhbGxDb25zdHJhaW50cyIsImFsbENvbXBvc2l0ZXMiLCJ0b1N0cmluZyIsIm1vdmUiLCJyZWJhc2UiLCJyZWN1cnNpdmUiLCIzIiwiV29ybGQiLCJncmF2aXR5IiwiNCIsIkNvbnRhY3QiLCJ2ZXJ0ZXgiLCJub3JtYWxJbXB1bHNlIiwidGFuZ2VudEltcHVsc2UiLCJpbmRleCIsIjUiLCJEZXRlY3RvciIsIlNBVCIsIlBhaXIiLCJjb2xsaXNpb25zIiwiYnJvYWRwaGFzZVBhaXJzIiwiZW5naW5lIiwicGFpcnNUYWJsZSIsInBhaXJzIiwidGFibGUiLCJib2R5QSIsImJvZHlCIiwiY2FuQ29sbGlkZSIsIm92ZXJsYXBzIiwiaiIsInBhcnRBIiwiayIsInBhcnRCIiwicHJldmlvdXNDb2xsaXNpb24iLCJwYWlyIiwiaXNBY3RpdmUiLCJjb2xsaXNpb24iLCJjb2xsaWRlcyIsImNvbGxpZGVkIiwiZmlsdGVyQSIsImZpbHRlckIiLCI2IiwiR3JpZCIsImNvbnRyb2xsZXIiLCJkZXRlY3RvciIsImJ1Y2tldHMiLCJwYWlyc0xpc3QiLCJidWNrZXRXaWR0aCIsImJ1Y2tldEhlaWdodCIsImdyaWQiLCJmb3JjZVVwZGF0ZSIsImNvbCIsInJvdyIsImJ1Y2tldCIsImJ1Y2tldElkIiwid29ybGQiLCJncmlkQ2hhbmdlZCIsIm5ld1JlZ2lvbiIsIl9nZXRSZWdpb24iLCJyZWdpb24iLCJ1bmlvbiIsIl9yZWdpb25VbmlvbiIsInN0YXJ0Q29sIiwiZW5kQ29sIiwic3RhcnRSb3ciLCJlbmRSb3ciLCJfZ2V0QnVja2V0SWQiLCJpc0luc2lkZU5ld1JlZ2lvbiIsImlzSW5zaWRlT2xkUmVnaW9uIiwiX2J1Y2tldFJlbW92ZUJvZHkiLCJfY3JlYXRlQnVja2V0IiwiX2J1Y2tldEFkZEJvZHkiLCJfY3JlYXRlQWN0aXZlUGFpcnNMaXN0IiwicmVnaW9uQSIsInJlZ2lvbkIiLCJfY3JlYXRlUmVnaW9uIiwiZmxvb3IiLCJjb2x1bW4iLCJwYWlySWQiLCJwYWlyS2V5cyIsImtleXMiLCI3IiwidGltZXN0YW1wIiwicGFyZW50QSIsInBhcmVudEIiLCJjb250YWN0cyIsImFjdGl2ZUNvbnRhY3RzIiwic2VwYXJhdGlvbiIsInRpbWVDcmVhdGVkIiwidGltZVVwZGF0ZWQiLCJzdXBwb3J0cyIsInN1cHBvcnQiLCJjb250YWN0SWQiLCJjb250YWN0IiwiZGVwdGgiLCJzZXRBY3RpdmUiLCI4IiwiUGFpcnMiLCJfcGFpck1heElkbGVMaWZlIiwibGlzdCIsImNvbGxpc2lvblN0YXJ0IiwiY29sbGlzaW9uQWN0aXZlIiwiY29sbGlzaW9uRW5kIiwiYWN0aXZlUGFpcklkcyIsInJlbW92ZU9sZCIsInBhaXJJbmRleCIsImluZGV4ZXNUb1JlbW92ZSIsIjkiLCJRdWVyeSIsIkJvZGllcyIsInJheSIsInN0YXJ0UG9pbnQiLCJlbmRQb2ludCIsInJheVdpZHRoIiwicmF5QW5nbGUiLCJyYXlMZW5ndGgiLCJyYXlYIiwicmF5WSIsInJlY3RhbmdsZSIsIm91dHNpZGUiLCJyZXN1bHQiLCJjb250YWlucyIsIjEwIiwiUmVzb2x2ZXIiLCJfcmVzdGluZ1RocmVzaCIsIl9yZXN0aW5nVGhyZXNoVGFuZ2VudCIsIl9wb3NpdGlvbkRhbXBlbiIsIl9wb3NpdGlvbldhcm1pbmciLCJfZnJpY3Rpb25Ob3JtYWxNdWx0aXBsaWVyIiwicHJlU29sdmVQb3NpdGlvbiIsImFjdGl2ZUNvdW50Iiwic29sdmVQb3NpdGlvbiIsIm5vcm1hbCIsImJvZHlCdG9BIiwiY29udGFjdFNoYXJlIiwidGVtcEEiLCJfdGVtcCIsInRlbXBCIiwidGVtcEMiLCJ0ZW1wRCIsInBlbmV0cmF0aW9uIiwiZG90IiwicG9zdFNvbHZlUG9zaXRpb24iLCJwcmVTb2x2ZVZlbG9jaXR5IiwidGFuZ2VudCIsImNvbnRhY3RWZXJ0ZXgiLCJpbXB1bHNlIiwiY3Jvc3MiLCJzb2x2ZVZlbG9jaXR5IiwidGltZVNjYWxlU3F1YXJlZCIsInRlbXBFIiwib2Zmc2V0QSIsIm9mZnNldEIiLCJ2ZWxvY2l0eVBvaW50QSIsInBlcnAiLCJ2ZWxvY2l0eVBvaW50QiIsInJlbGF0aXZlVmVsb2NpdHkiLCJub3JtYWxWZWxvY2l0eSIsInRhbmdlbnRWZWxvY2l0eSIsInRhbmdlbnRTcGVlZCIsInRhbmdlbnRWZWxvY2l0eURpcmVjdGlvbiIsInNpZ24iLCJub3JtYWxGb3JjZSIsImNsYW1wIiwibWF4RnJpY3Rpb24iLCJvQWNOIiwib0JjTiIsInNoYXJlIiwiY29udGFjdE5vcm1hbEltcHVsc2UiLCJjb250YWN0VGFuZ2VudEltcHVsc2UiLCIxMSIsIm92ZXJsYXBBQiIsIm92ZXJsYXBCQSIsIm1pbk92ZXJsYXAiLCJjYW5SZXVzZVByZXZDb2wiLCJheGlzQm9keUEiLCJheGlzQm9keSIsImF4aXNCb2R5QiIsImF4aXNOdW1iZXIiLCJfb3ZlcmxhcEF4ZXMiLCJyZXVzZWQiLCJvdmVybGFwIiwiYXhpcyIsInZlcnRpY2VzQiIsIl9maW5kU3VwcG9ydHMiLCJ2ZXJ0aWNlc0EiLCJuZWciLCJwcm9qZWN0aW9uQSIsInByb2plY3Rpb25CIiwiTnVtYmVyIiwiTUFYX1ZBTFVFIiwiX3Byb2plY3RUb0F4aXMiLCJwcm9qZWN0aW9uIiwiZGlzdGFuY2UiLCJ2ZXJ0ZXhBIiwidmVydGV4QiIsIm5lYXJlc3REaXN0YW5jZSIsInZlcnRleFRvQm9keSIsImJvZHlBUG9zaXRpb24iLCIxMiIsIkNvbnN0cmFpbnQiLCJfd2FybWluZyIsIl90b3JxdWVEYW1wZW4iLCJfbWluTGVuZ3RoIiwicG9pbnRBIiwicG9pbnRCIiwiaW5pdGlhbFBvaW50QSIsImluaXRpYWxQb2ludEIiLCJzdGlmZm5lc3MiLCJkYW1waW5nIiwiYW5ndWxhclN0aWZmbmVzcyIsImFuZ2xlQSIsImFuZ2xlQiIsImFuY2hvcnMiLCJwcmVTb2x2ZUFsbCIsInNvbHZlQWxsIiwiZml4ZWRBIiwiZml4ZWRCIiwic29sdmUiLCJwb2ludEFXb3JsZCIsInBvaW50QldvcmxkIiwiY3VycmVudExlbmd0aCIsImRpZmZlcmVuY2UiLCJtYXNzVG90YWwiLCJyZXNpc3RhbmNlVG90YWwiLCJ6ZXJvIiwicG9zdFNvbHZlQWxsIiwiMTMiLCJNb3VzZUNvbnN0cmFpbnQiLCJNb3VzZSIsIm1vdXNlIiwiY2FudmFzIiwiZWxlbWVudCIsIm1vdXNlQ29uc3RyYWludCIsIm9uIiwiX3RyaWdnZXJFdmVudHMiLCJidXR0b24iLCJtb3VzZUV2ZW50cyIsInNvdXJjZUV2ZW50cyIsIm1vdXNlbW92ZSIsIm1vdXNlZG93biIsIm1vdXNldXAiLCJjbGVhclNvdXJjZUV2ZW50cyIsIjE0IiwiZ2xvYmFsIiwiX25leHRJZCIsIl9zZWVkIiwiX25vd1N0YXJ0VGltZSIsIkRhdGUiLCJhcmdzU3RhcnQiLCJkZWVwQ2xvbmUiLCJhcmd1bWVudHMiLCJzb3VyY2UiLCJwcm9wIiwiY29uc3RydWN0b3IiLCJ2YWx1ZXMiLCJwYXRoIiwiYmVnaW4iLCJlbmQiLCJzcGxpdCIsInZhbCIsInNodWZmbGUiLCJhcnJheSIsInJhbmRvbSIsInRlbXAiLCJjaG9pY2VzIiwiaXNFbGVtZW50IiwiSFRNTEVsZW1lbnQiLCJub2RlVHlwZSIsIm5vZGVOYW1lIiwiaXNBcnJheSIsImlzRnVuY3Rpb24iLCJpc1BsYWluT2JqZWN0IiwiaXNTdHJpbmciLCJub3ciLCJ3aW5kb3ciLCJwZXJmb3JtYW5jZSIsIndlYmtpdE5vdyIsIl9zZWVkZWRSYW5kb20iLCJjb2xvclRvTnVtYmVyIiwiY29sb3JTdHJpbmciLCJyZXBsYWNlIiwiY2hhckF0IiwicGFyc2VJbnQiLCJsb2dMZXZlbCIsImxvZyIsImNvbnNvbGUiLCJhcHBseSIsIkFycmF5IiwiaW5mbyIsImhheXN0YWNrIiwibmVlZGxlIiwibWFwIiwiZnVuYyIsIm1hcHBlZCIsInRvcG9sb2dpY2FsU29ydCIsImdyYXBoIiwidmlzaXRlZCIsIm5vZGUiLCJfdG9wb2xvZ2ljYWxTb3J0IiwibmVpZ2hib3JzIiwibmVpZ2hib3IiLCJjaGFpbiIsImZ1bmNzIiwiX2NoYWluZWQiLCJsYXN0UmVzdWx0IiwiYXJncyIsImNoYWluUGF0aEJlZm9yZSIsImJhc2UiLCJjaGFpblBhdGhBZnRlciIsIl9yZXF1aXJlR2xvYmFsIiwiZ2xvYmFsTmFtZSIsIm1vZHVsZU5hbWUiLCJ0aGlzIiwic2VsZiIsIjE1IiwiRW5naW5lIiwiUmVuZGVyIiwicG9zaXRpb25JdGVyYXRpb25zIiwidmVsb2NpdHlJdGVyYXRpb25zIiwiY29uc3RyYWludEl0ZXJhdGlvbnMiLCJlbmFibGVTbGVlcGluZyIsImV2ZW50cyIsInRpbWluZyIsImJyb2FkcGhhc2UiLCJyZW5kZXJEZWZhdWx0cyIsIm1ldHJpY3MiLCJleHRlbmRlZCIsImV2ZW50IiwiX2JvZGllc0FwcGx5R3Jhdml0eSIsIl9ib2RpZXNVcGRhdGUiLCJhZnRlckNvbGxpc2lvbnMiLCJfYm9kaWVzQ2xlYXJGb3JjZXMiLCJtZXJnZSIsImVuZ2luZUEiLCJlbmdpbmVCIiwiZ3Jhdml0eVNjYWxlIiwid29ybGRCb3VuZHMiLCIxNiIsImV2ZW50TmFtZXMiLCJjYWxsYmFjayIsIm5hbWVzIiwib2ZmIiwiam9pbiIsImNhbGxiYWNrcyIsIm5ld0NhbGxiYWNrcyIsImV2ZW50Q2xvbmUiLCIxNyIsIk1hdHRlciIsIlBsdWdpbiIsInZlcnNpb24iLCJ1c2VzIiwidXNlZCIsInVzZSIsImJlZm9yZSIsImFmdGVyIiwiMTgiLCIxOSIsImRvY3VtZW50IiwiYWJzb2x1dGUiLCJtb3VzZWRvd25Qb3NpdGlvbiIsIm1vdXNldXBQb3NpdGlvbiIsIndoZWVsRGVsdGEiLCJwaXhlbFJhdGlvIiwiZ2V0QXR0cmlidXRlIiwibW91c2V3aGVlbCIsIl9nZXRSZWxhdGl2ZU1vdXNlUG9zaXRpb24iLCJjaGFuZ2VkVG91Y2hlcyIsInByZXZlbnREZWZhdWx0IiwiZGV0YWlsIiwic2V0RWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZXRPZmZzZXQiLCJzZXRTY2FsZSIsImVsZW1lbnRCb3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJyb290Tm9kZSIsImRvY3VtZW50RWxlbWVudCIsInBhcmVudE5vZGUiLCJzY3JvbGxYIiwidW5kZWZpbmVkIiwicGFnZVhPZmZzZXQiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsWSIsInBhZ2VZT2Zmc2V0Iiwic2Nyb2xsVG9wIiwidG91Y2hlcyIsInBhZ2VYIiwibGVmdCIsInBhZ2VZIiwidG9wIiwiY2xpZW50V2lkdGgiLCJ3aWR0aCIsImNsaWVudEhlaWdodCIsImhlaWdodCIsIjIwIiwiX3JlZ2lzdHJ5IiwicmVnaXN0ZXIiLCJpc1BsdWdpbiIsInJlZ2lzdGVyZWQiLCJwbHVnaW5WZXJzaW9uIiwidmVyc2lvblBhcnNlIiwibnVtYmVyIiwicmVnaXN0ZXJlZFZlcnNpb24iLCJyZXNvbHZlIiwiZGVwZW5kZW5jeSIsImRlcGVuZGVuY3lQYXJzZSIsInJhbmdlIiwiaW5zdGFsbCIsImlzVXNlZCIsImlzRm9yIiwicGFyc2VkIiwiZm9yIiwidmVyc2lvblNhdGlzZmllcyIsInBsdWdpbnMiLCJkZXBlbmRlbmNpZXMiLCJzb3J0ZWREZXBlbmRlbmNpZXMiLCJzdGF0dXMiLCJfd2FybmVkIiwidHJhY2tlZCIsInBhcnNlZEJhc2UiLCJyZXNvbHZlZCIsInRlc3QiLCJpZGVudGlmaWVycyIsImlzUmFuZ2UiLCJpc05hTiIsInN1YnN0ciIsIm9wZXJhdG9yIiwicHJlcmVsZWFzZSIsInJhbmdlUGFyc2VkIiwicmFuZ2VQYXJ0cyIsInZlcnNpb25QYXJzZWQiLCJ2ZXJzaW9uUGFydHMiLCIyMSIsIlJ1bm5lciIsIl9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJfY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJfZnJhbWVUaW1lb3V0IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsIm1vekNhbmNlbEFuaW1hdGlvbkZyYW1lIiwid2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtc0NhbmNlbEFuaW1hdGlvbkZyYW1lIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsInJ1bm5lciIsImZwcyIsImRlbHRhU2FtcGxlU2l6ZSIsImNvdW50ZXJUaW1lc3RhbXAiLCJmcmFtZUNvdW50ZXIiLCJkZWx0YUhpc3RvcnkiLCJ0aW1lUHJldiIsInRpbWVTY2FsZVByZXYiLCJmcmFtZVJlcXVlc3RJZCIsImlzRml4ZWQiLCJlbmFibGVkIiwiZGVsdGFNaW4iLCJkZWx0YU1heCIsInJ1biIsInRpbWUiLCJ0aWNrIiwic3RvcCIsInN0YXJ0IiwiMjIiLCJfbW90aW9uV2FrZVRocmVzaG9sZCIsIl9tb3Rpb25TbGVlcFRocmVzaG9sZCIsIl9taW5CaWFzIiwidGltZUZhY3RvciIsIm1pbk1vdGlvbiIsIm1heE1vdGlvbiIsInNsZWVwQ291bnRlciIsInNsZWVwaW5nQm9keSIsIm1vdmluZ0JvZHkiLCJ3YXNTbGVlcGluZyIsIjIzIiwiZGVjb21wIiwiY2hhbWZlciIsInJhZGl1cyIsInF1YWxpdHkiLCJxdWFsaXR5TWluIiwicXVhbGl0eU1heCIsInRyYXBlem9pZCIsInNsb3BlIiwidmVydGljZXNQYXRoIiwieDEiLCJ4MiIsIngzIiwiY2lyY2xlIiwibWF4U2lkZXMiLCJzaWRlcyIsImNlaWwiLCJwb2x5Z29uIiwidGhldGEiLCJQSSIsInh4IiwieXkiLCJ0b0ZpeGVkIiwidmVydGV4U2V0cyIsImZsYWdJbnRlcm5hbCIsInJlbW92ZUNvbGxpbmVhciIsIm1pbmltdW1BcmVhIiwiaXNDb252ZXgiLCJ2IiwieiIsImNvbmNhdmUiLCJtYWtlQ0NXIiwicmVtb3ZlQ29sbGluZWFyUG9pbnRzIiwiZGVjb21wb3NlZCIsInF1aWNrRGVjb21wIiwiY2h1bmtWZXJ0aWNlcyIsInBhdiIsInBidiIsImRhIiwibWFnbml0dWRlU3F1YXJlZCIsImRiIiwiaXNJbnRlcm5hbCIsIjI0IiwiQ29tcG9zaXRlcyIsInN0YWNrIiwiY29sdW1ucyIsInJvd3MiLCJjb2x1bW5HYXAiLCJyb3dHYXAiLCJsYXN0Qm9keSIsIm1heEhlaWdodCIsImJvZHlIZWlnaHQiLCJib2R5V2lkdGgiLCJ4T2Zmc2V0QSIsInlPZmZzZXRBIiwieE9mZnNldEIiLCJ5T2Zmc2V0QiIsImJvZHlBSGVpZ2h0IiwiYm9keUFXaWR0aCIsImJvZHlCSGVpZ2h0IiwibWVzaCIsImNyb3NzQnJhY2UiLCJib2R5QyIsInB5cmFtaWQiLCJhY3R1YWxSb3dzIiwibGFzdEJvZHlXaWR0aCIsIm5ld3RvbnNDcmFkbGUiLCJzaXplIiwiY2FyIiwid2hlZWxTaXplIiwid2hlZWxBT2Zmc2V0Iiwid2hlZWxCT2Zmc2V0Iiwid2hlZWxBIiwid2hlZWxCIiwiYXhlbEEiLCJheGVsQiIsInNvZnRCb2R5IiwicGFydGljbGVSYWRpdXMiLCJwYXJ0aWNsZU9wdGlvbnMiLCJjb25zdHJhaW50T3B0aW9ucyIsIjI1Iiwibm9ybWFsaXNlIiwiZ3JhZGllbnQiLCIyNiIsImJvdW5kc0EiLCJib3VuZHNCIiwidmVjdG9yIiwic2hpZnQiLCJkZWx0YVgiLCJkZWx0YVkiLCIyNyIsIlN2ZyIsInBhdGhUb1ZlcnRpY2VzIiwic2FtcGxlTGVuZ3RoIiwiaWwiLCJzZWdtZW50Iiwic2VnbWVudHMiLCJzZWdtZW50c1F1ZXVlIiwibGFzdFNlZ21lbnQiLCJsYXN0UG9pbnQiLCJseCIsImx5IiwicG9pbnRzIiwiYWRkUG9pbnQiLCJweCIsInB5IiwicGF0aFNlZ1R5cGUiLCJpc1JlbGF0aXZlIiwiYWRkU2VnbWVudFBvaW50Iiwic2VnVHlwZSIsInBhdGhTZWdUeXBlQXNMZXR0ZXIiLCJ0b1VwcGVyQ2FzZSIsIl9zdmdQYXRoVG9BYnNvbHV0ZSIsImdldFRvdGFsTGVuZ3RoIiwicGF0aFNlZ0xpc3QiLCJudW1iZXJPZkl0ZW1zIiwiZ2V0SXRlbSIsImdldFBhdGhTZWdBdExlbmd0aCIsImdldFBvaW50QXRMZW5ndGgiLCJ4MCIsInkwIiwieTEiLCJ5MiIsInNlZ3MiLCJsZW4iLCJzZWciLCJyZXBsYWNlSXRlbSIsImNyZWF0ZVNWR1BhdGhTZWdNb3ZldG9BYnMiLCJjcmVhdGVTVkdQYXRoU2VnTGluZXRvQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0xpbmV0b0hvcml6b250YWxBYnMiLCJjcmVhdGVTVkdQYXRoU2VnTGluZXRvVmVydGljYWxBYnMiLCJjcmVhdGVTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicyIsImNyZWF0ZVNWR1BhdGhTZWdDdXJ2ZXRvUXVhZHJhdGljQWJzIiwiY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9RdWFkcmF0aWNTbW9vdGhBYnMiLCJjcmVhdGVTVkdQYXRoU2VnQXJjQWJzIiwicjEiLCJyMiIsImxhcmdlQXJjRmxhZyIsInN3ZWVwRmxhZyIsIjI4Iiwic3FydCIsIm91dHB1dCIsInZlY3RvckEiLCJ2ZWN0b3JCIiwiY3Jvc3MzIiwidmVjdG9yQyIsInNjYWxhciIsIm5lZ2F0ZSIsImF0YW4yIiwiMjkiLCJtYXRjaCIsInBhcnNlRmxvYXQiLCJtZWFuIiwiYXZlcmFnZSIsInNpZ25lZCIsIm51bWVyYXRvciIsImRlbm9taW5hdG9yIiwidmVydGljZSIsIm5leHRWZXJ0aWNlIiwibmV3VmVydGljZXMiLCJwcmV2VmVydGV4IiwibmV4dFZlcnRleCIsImN1cnJlbnRSYWRpdXMiLCJwcmV2Tm9ybWFsIiwibmV4dE5vcm1hbCIsImRpYWdvbmFsUmFkaXVzIiwicmFkaXVzVmVjdG9yIiwibWlkTm9ybWFsIiwic2NhbGVkVmVydGV4IiwicHJlY2lzaW9uIiwiYWNvcyIsInNvcnQiLCJmbGFnIiwidXBwZXIiLCJsb3dlciIsInBvcCIsIjMwIiwiUmVuZGVyUGl4aSIsIjMxIiwiYmFja2dyb3VuZCIsIndpcmVmcmFtZUJhY2tncm91bmQiLCJoYXNCb3VuZHMiLCJ3aXJlZnJhbWVzIiwic2hvd1NsZWVwaW5nIiwic2hvd0RlYnVnIiwic2hvd0Jyb2FkcGhhc2UiLCJzaG93Qm91bmRzIiwic2hvd1ZlbG9jaXR5Iiwic2hvd0NvbGxpc2lvbnMiLCJzaG93U2VwYXJhdGlvbnMiLCJzaG93QXhlcyIsInNob3dQb3NpdGlvbnMiLCJzaG93QW5nbGVJbmRpY2F0b3IiLCJzaG93SWRzIiwic2hvd1NoYWRvd3MiLCJzaG93VmVydGV4TnVtYmVycyIsInNob3dDb252ZXhIdWxscyIsInNob3dJbnRlcm5hbEVkZ2VzIiwic2hvd01vdXNlUG9zaXRpb24iLCJfY3JlYXRlQ2FudmFzIiwiY29udGV4dCIsImdldENvbnRleHQiLCJ0ZXh0dXJlcyIsInNldFBpeGVsUmF0aW8iLCJhcHBlbmRDaGlsZCIsImxvb3AiLCJfZ2V0UGl4ZWxSYXRpbyIsInNldEF0dHJpYnV0ZSIsInN0eWxlIiwibG9va0F0IiwicGFkZGluZyIsImNlbnRlciIsInZpZXdIZWlnaHQiLCJvdXRlclJhdGlvIiwiaW5uZXJSYXRpbyIsInN0YXJ0Vmlld1RyYW5zZm9ybSIsImJvdW5kc1dpZHRoIiwiYm91bmRzSGVpZ2h0IiwiYm91bmRzU2NhbGVYIiwiYm91bmRzU2NhbGVZIiwiZW5kVmlld1RyYW5zZm9ybSIsInNldFRyYW5zZm9ybSIsImN1cnJlbnRCYWNrZ3JvdW5kIiwiX2FwcGx5QmFja2dyb3VuZCIsImdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiIsImZpbGxSZWN0IiwiYm9keUNvbnZleEh1bGxzIiwiYm9keVdpcmVmcmFtZXMiLCJib2R5Qm91bmRzIiwiYm9keUF4ZXMiLCJib2R5UG9zaXRpb25zIiwiYm9keVZlbG9jaXR5IiwiYm9keUlkcyIsInNlcGFyYXRpb25zIiwidmVydGV4TnVtYmVycyIsIm1vdXNlUG9zaXRpb24iLCJkZWJ1ZyIsImRlYnVnVGltZXN0YW1wIiwidGV4dCIsInJvdW5kIiwiZGVidWdTdHJpbmciLCJmb250IiwiZmlsbFRleHQiLCJiZWdpblBhdGgiLCJhcmMiLCJjbG9zZVBhdGgiLCJtb3ZlVG8iLCJjb2lscyIsImxpbmVUbyIsInN0cm9rZSIsImZpbGwiLCJib2R5U2hhZG93cyIsImRpc3RhbmNlWCIsImRpc3RhbmNlWSIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0WCIsInNoYWRvd09mZnNldFkiLCJzaGFkb3dCbHVyIiwiZ2xvYmFsQWxwaGEiLCJ0ZXh0dXJlIiwiX2dldFRleHR1cmUiLCJkcmF3SW1hZ2UiLCJyZWN0Iiwibm9ybWFsUG9zWCIsIm5vcm1hbFBvc1kiLCJidWNrZXRLZXlzIiwiaW5zcGVjdG9yIiwic2VsZWN0ZWQiLCJpdGVtIiwiZGF0YSIsInNldExpbmVEYXNoIiwic2VsZWN0U3RhcnQiLCJzZWxlY3RCb3VuZHMiLCJjcmVhdGVFbGVtZW50Iiwib25jb250ZXh0bWVudSIsIm9uc2VsZWN0c3RhcnQiLCJkZXZpY2VQaXhlbFJhdGlvIiwid2Via2l0QmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsIm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW8iLCJtc0JhY2tpbmdTdG9yZVBpeGVsUmF0aW8iLCJvQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyIsImJhY2tpbmdTdG9yZVBpeGVsUmF0aW8iLCJpbWFnZVBhdGgiLCJpbWFnZSIsIkltYWdlIiwic3JjIiwiY3NzQmFja2dyb3VuZCIsImJhY2tncm91bmRTaXplIiwiMzIiLCJyZW5kZXJlciIsImNvbnRhaW5lciIsInNwcml0ZUNvbnRhaW5lciIsInBpeGlPcHRpb25zIiwidHJhbnNwYXJlbnQiLCJ2aWV3IiwiYW50aWFsaWFzIiwiYmFja2dyb3VuZENvbG9yIiwiUElYSSIsIldlYkdMUmVuZGVyZXIiLCJDb250YWluZXIiLCJzcHJpdGVzIiwicHJpbWl0aXZlcyIsImFkZENoaWxkIiwiY2hpbGRyZW4iLCJyZW1vdmVDaGlsZCIsImJnU3ByaXRlIiwiYWRkQ2hpbGRBdCIsInNldEJhY2tncm91bmQiLCJpc0NvbG9yIiwiY29sb3IiLCJTcHJpdGUiLCJjb25zdHJhaW50UmVuZGVyIiwicHJpbWl0aXZlSWQiLCJwcmltaXRpdmUiLCJHcmFwaGljcyIsImJlZ2luRmlsbCIsImxpbmVTdHlsZSIsImVuZEZpbGwiLCJib2R5UmVuZGVyIiwic3ByaXRlSWQiLCJfY3JlYXRlQm9keVNwcml0ZSIsIl9jcmVhdGVCb2R5UHJpbWl0aXZlIiwiaW5pdGlhbEFuZ2xlIiwidGV4dHVyZVBhdGgiLCJhbmNob3IiLCJzdHJva2VTdHlsZUluZGljYXRvciIsInN0cm9rZVN0eWxlV2lyZWZyYW1lIiwic3Ryb2tlU3R5bGVXaXJlZnJhbWVJbmRpY2F0b3IiLCJUZXh0dXJlIiwiZnJvbUltYWdlIiwieHMiLCJyZWR1Y2UiLCJhY2MiLCJzdW0iLCJtZXRhc0J5IiwieXMiLCJ5bWF4IiwicmVzIiwibWF4c0J5IiwibWluc0J5IiwidmVjdG9yTWVhbiIsInZlYyIsInJpZ2h0bW9zdFBvaW50IiwibGVmdG1vc3RQb2ludCIsInRvcG1vc3RQb2ludCIsImJvdHRvbW1vc3RQb2ludCIsImRpc3RIb3JpeiIsImRpc3RWZXJ0aSIsImRpc3RFdWNsaWQiLCJoeXBvdCIsImNsb2VzdFBvaW50TWV0YSIsInRoaXNfIiwidGhhdCIsImVkZ2VBIiwiZWRnZUIiLCJkaXN0RnVuYyIsInRoaXNBIiwidGhpc0IiLCJ0aGF0QSIsInRoYXRCIiwiZGlzdCIsInAxIiwicDIiLCJjbG9lc3RQb2ludFBhaXJYIiwiYm9keTEiLCJib2R5MiIsImNsb2VzdFBvaW50UGFpclkiLCJmcm9tIiwicmFuZFJhbmdlIiwibG8iLCJoaSIsInVuaXQiLCJiIiwicmFuZG4iLCJudW0iLCJ1bml0VmVjIiwidG8iLCJub3JtYWxpemUiLCJub3JtIiwibWFrZVBhaXIiLCJmaXJzdCIsInNlY29uZCIsIm1ha2VVbm9yZGVyZWRQYWlyIiwiZ2V0V2lkdGgiLCJibG9jayIsImdldEhlaWdodCIsImFyZVNhbWVIZWlnaHQiLCJmb28iLCJiYXIiLCJhcmVTYW1lV2lkdGgiLCJyb3RhdGVDbG9ja3dpc2UiLCJ3IiwiaCIsInRndCIsImNyZWF0ZUltYWdlIiwibG9hZFBpeGVscyIsImluZGV4ciIsInBpeGVscyIsInVwZGF0ZVBpeGVscyIsImFyZ3NvcnQiLCJ1bmRvU29ydEJ5IiwicmVmIiwiaW5kaWNlcyIsInVuaXF1ZSIsInByZXYiLCJNSU5fU0FGRV9JTlRFR0VSIiwidGFsbHkiLCJhbnMiLCJnIiwiRnVuY3Rpb24iLCJhbnRpR3Jhdml0eU1hbmhhdHRhbiIsImNvZWZmIiwidXRpbHMiLCJjaGFyU2l6ZSIsImFudGlHcmF2aXR5UmFuZ2VkIiwicmFuZ2VGYWN0b3IiLCJhbnRpR3Jhdml0eU1hZyIsInVuaXRTcmNUb1RndCIsImFudGlHcmF2aXR5IiwiYXBwbHlBbnRpR3Jhdml0eVR3b0JvZHkiLCJmb3JjZUFudGlHcmF2aXR5IiwicmVwdWxzaW9uQ29lZmYiLCJyZXB1bHNpb25SYW5nZSIsImFwcGx5QW50aUdyYXZpdHkiLCJibG9ja3MiLCJLbm9sbGJvdCIsImZvcmNlT24iLCJTY3JlZW5XaWR0aCIsIlNjcmVlbkhlaWdodCIsIlNjcmVlbldpZHRoSGFsZiIsIlNjcmVlbkhlaWdodEhhbGYiLCJXYWxsT2Zmc2V0IiwiV2FsbFRoaWNrbmVzcyIsImltZ1BhdGhzIiwicG9rZVNjYWxlIiwicGFyYW1zIiwicG9rZURlY2F5IiwiYWxpZ25tZW50Rm9yY2VDb2VmZiIsImFsaWdubWVudEZvcmNlUmFuZ2UiLCJhbGlnbm1lbnRGb3JjZVdhbGxSYW5nZSIsImFsaWdubWVudEZvcmNlT2Zmc2V0IiwiZ3JvdXBpbmdDb2VmZiIsImRpc3BsYXlMaW5lcyIsInA1aW1ncyIsImJvZHlPcHRpb25zIiwicHJvbWlzZWRCb3hlcyIsIlByb21pc2UiLCJhbGwiLCJpbWdQYXRoIiwicmVqZWN0IiwiaW1nIiwib25sb2FkIiwib25lcnJvciIsIm9mZnNldFgiLCJvZmZzZXRZIiwid2FsbE9wdGlvbnMiLCJ3YWxsRnJpY3Rpb24iLCJ3YWxsVG9wIiwid2FsbEJvdHRvbSIsIndhbGxMZWZ0Iiwid2FsbFJpZ2h0IiwicHJlbG9hZCIsImJveGVzIiwibG9hZEltYWdlIiwic2V0dXAiLCJjcmVhdGVDYW52YXMiLCJkcmF3Iiwibm9TdHJva2UiLCJhbGlnbiIsImdldEF0dHJhY3RvclhzIiwiY29sb3JMaW5lc1ZlcnRpY2FsIiwibGluZSIsImdldEF0dHJhY3RvcllzIiwiY29sb3JMaW5lc0hvcml6b250YWwiLCJjb3VudGVyIiwiZ3JvdXBpbmciLCJhcHBseUdyb3VwaW5nIiwicmVwdWxzaW9uIiwiYXBwbHlBbGlnbm1lbnQiLCJwb2tlIiwiYXBwbHlSYW5kb21Qb2tlcyIsInRvdWNoIiwiYW5nbGVJbkRlZ3JlZXMiLCJyb3RhdGlvbkFuZ2xlIiwiYXBwbHlBbnRpR3Jhdml0eURpc2pvaW50IiwidWZYIiwidWZZIiwiYXJlQ29ubmVjdGVkIiwiYXBwbHlHcm91cGluZ1R3b0JvZHkiLCJmb3JFYWNoIiwiYXBwbHlSYW5kb21Qb2tlIiwiZml4ZWRSYWRpdXMxZENsdXN0ZXJpbmciLCJ6cyIsImNodW5rU2l6ZSIsImJpc2VjdCIsInJpZ2h0IiwiYmlzZWN0TGVmdCIsImNlbnRyb2lkIiwiZ2V0RWRnZXNNZXRhIiwiYXJyIiwiZ2V0RWRnZXNYIiwiZ2V0RWRnZXNZIiwiZ2V0QXR0cmFjdG9yc01ldGEiLCJnZXRFZGdlcyIsImVkZ2VzIiwiYXR0cmFjdG9ycyIsImF0dHJTY29yZSIsImJveCIsImlkeCIsInNyY1giLCJmb3JjZVgiLCJhcHBseUJveGVzQWxpZ25tZW50WCIsInNyY1kiLCJmb3JjZVkiLCJhcHBseUJveGVzQWxpZ25tZW50WSIsIm1lZ3VydSIsIm5nIiwib2siLCJtaWQiLCJ0cnVuYyIsInRhcmdldCIsInA1IiwiYWxwaGEiLCJkZXNjcmlwdGlvbiIsImNsYXNzIiwiYmx1ZSIsImJyaWdodG5lc3MiLCJvdmVybG9hZHMiLCJvcHRpb25hbCIsImdyZWVuIiwiaHVlIiwibGVycENvbG9yIiwibGlnaHRuZXNzIiwicmVkIiwic2F0dXJhdGlvbiIsImNoYWluYWJsZSIsImNvbG9yTW9kZSIsIm5vRmlsbCIsImVyYXNlIiwibm9FcmFzZSIsImVsbGlwc2UiLCJxdWFkIiwic3F1YXJlIiwidHJpYW5nbGUiLCJlbGxpcHNlTW9kZSIsIm5vU21vb3RoIiwicmVjdE1vZGUiLCJzbW9vdGgiLCJzdHJva2VDYXAiLCJzdHJva2VKb2luIiwic3Ryb2tlV2VpZ2h0IiwiYmV6aWVyIiwiYmV6aWVyRGV0YWlsIiwiYmV6aWVyUG9pbnQiLCJiZXppZXJUYW5nZW50IiwiY3VydmUiLCJjdXJ2ZURldGFpbCIsImN1cnZlVGlnaHRuZXNzIiwiY3VydmVQb2ludCIsImN1cnZlVGFuZ2VudCIsImJlZ2luQ29udG91ciIsImJlZ2luU2hhcGUiLCJiZXppZXJWZXJ0ZXgiLCJjdXJ2ZVZlcnRleCIsImVuZENvbnRvdXIiLCJlbmRTaGFwZSIsInF1YWRyYXRpY1ZlcnRleCIsIlAyRCIsIldFQkdMIiwiQVJST1ciLCJDUk9TUyIsIkhBTkQiLCJNT1ZFIiwiVEVYVCIsIldBSVQiLCJIQUxGX1BJIiwiUVVBUlRFUl9QSSIsIlRBVSIsIlRXT19QSSIsIkRFR1JFRVMiLCJSQURJQU5TIiwiQ09STkVSIiwiQ09STkVSUyIsIlJBRElVUyIsIlJJR0hUIiwiTEVGVCIsIkNFTlRFUiIsIlRPUCIsIkJPVFRPTSIsIkJBU0VMSU5FIiwiUE9JTlRTIiwiTElORVMiLCJMSU5FX1NUUklQIiwiTElORV9MT09QIiwiVFJJQU5HTEVTIiwiVFJJQU5HTEVfRkFOIiwiVFJJQU5HTEVfU1RSSVAiLCJRVUFEUyIsIlFVQURfU1RSSVAiLCJURVNTIiwiQ0xPU0UiLCJPUEVOIiwiQ0hPUkQiLCJQSUUiLCJQUk9KRUNUIiwiU1FVQVJFIiwiUk9VTkQiLCJCRVZFTCIsIk1JVEVSIiwiUkdCIiwiSFNCIiwiSFNMIiwiQVVUTyIsIkFMVCIsIkJBQ0tTUEFDRSIsIkNPTlRST0wiLCJERUxFVEUiLCJET1dOX0FSUk9XIiwiRU5URVIiLCJFU0NBUEUiLCJMRUZUX0FSUk9XIiwiT1BUSU9OIiwiUkVUVVJOIiwiUklHSFRfQVJST1ciLCJTSElGVCIsIlRBQiIsIlVQX0FSUk9XIiwiQkxFTkQiLCJSRU1PVkUiLCJBREQiLCJEQVJLRVNUIiwiTElHSFRFU1QiLCJESUZGRVJFTkNFIiwiU1VCVFJBQ1QiLCJFWENMVVNJT04iLCJNVUxUSVBMWSIsIlNDUkVFTiIsIlJFUExBQ0UiLCJPVkVSTEFZIiwiSEFSRF9MSUdIVCIsIlNPRlRfTElHSFQiLCJET0RHRSIsIkJVUk4iLCJUSFJFU0hPTEQiLCJHUkFZIiwiT1BBUVVFIiwiSU5WRVJUIiwiUE9TVEVSSVpFIiwiRElMQVRFIiwiRVJPREUiLCJCTFVSIiwiTk9STUFMIiwiSVRBTElDIiwiQk9MRCIsIkJPTERJVEFMSUMiLCJMSU5FQVIiLCJRVUFEUkFUSUMiLCJCRVpJRVIiLCJDVVJWRSIsIlNUUk9LRSIsIkZJTEwiLCJURVhUVVJFIiwiSU1NRURJQVRFIiwiSU1BR0UiLCJORUFSRVNUIiwiUkVQRUFUIiwiQ0xBTVAiLCJNSVJST1IiLCJMQU5EU0NBUEUiLCJQT1JUUkFJVCIsIkdSSUQiLCJBWEVTIiwicHJpbnQiLCJmcmFtZUNvdW50IiwiZm9jdXNlZCIsImN1cnNvciIsImZyYW1lUmF0ZSIsIm5vQ3Vyc29yIiwiZGlzcGxheVdpZHRoIiwiZGlzcGxheUhlaWdodCIsIndpbmRvd1dpZHRoIiwid2luZG93SGVpZ2h0Iiwid2luZG93UmVzaXplZCIsImZ1bGxzY3JlZW4iLCJwaXhlbERlbnNpdHkiLCJkaXNwbGF5RGVuc2l0eSIsImdldFVSTCIsImdldFVSTFBhdGgiLCJnZXRVUkxQYXJhbXMiLCJkaXNhYmxlRnJpZW5kbHlFcnJvcnMiLCJsZXQiLCJjb25zdCIsImZ1bmN0aW9uIiwicmV0dXJuIiwiYm9vbGVhbiIsInN0cmluZyIsIndoaWxlIiwicmVzaXplQ2FudmFzIiwibm9DYW52YXMiLCJjcmVhdGVHcmFwaGljcyIsImJsZW5kTW9kZSIsImRyYXdpbmdDb250ZXh0Iiwibm9Mb29wIiwiaXNMb29waW5nIiwicmVkcmF3IiwiYXBwbHlNYXRyaXgiLCJyZXNldE1hdHJpeCIsInJvdGF0ZVgiLCJyb3RhdGVZIiwicm90YXRlWiIsInNoZWFyWCIsInNoZWFyWSIsInN0b3JlSXRlbSIsImNsZWFyU3RvcmFnZSIsInJlbW92ZUl0ZW0iLCJjcmVhdGVTdHJpbmdEaWN0IiwiY3JlYXRlTnVtYmVyRGljdCIsInNlbGVjdCIsInNlbGVjdEFsbCIsInJlbW92ZUVsZW1lbnRzIiwiY2hhbmdlZCIsImlucHV0IiwiY3JlYXRlRGl2IiwiY3JlYXRlUCIsImNyZWF0ZVNwYW4iLCJjcmVhdGVJbWciLCJjcmVhdGVBIiwiY3JlYXRlU2xpZGVyIiwiY3JlYXRlQnV0dG9uIiwiY3JlYXRlQ2hlY2tib3giLCJjcmVhdGVTZWxlY3QiLCJjcmVhdGVSYWRpbyIsImNyZWF0ZUNvbG9yUGlja2VyIiwiY3JlYXRlSW5wdXQiLCJjcmVhdGVGaWxlSW5wdXQiLCJjcmVhdGVWaWRlbyIsImNyZWF0ZUF1ZGlvIiwiVklERU8iLCJBVURJTyIsImNyZWF0ZUNhcHR1cmUiLCJkZXZpY2VPcmllbnRhdGlvbiIsImFjY2VsZXJhdGlvblgiLCJhY2NlbGVyYXRpb25ZIiwiYWNjZWxlcmF0aW9uWiIsInBBY2NlbGVyYXRpb25YIiwicEFjY2VsZXJhdGlvblkiLCJwQWNjZWxlcmF0aW9uWiIsInJvdGF0aW9uWCIsInJvdGF0aW9uWSIsInJvdGF0aW9uWiIsInBSb3RhdGlvblgiLCJwUm90YXRpb25ZIiwicFJvdGF0aW9uWiIsInR1cm5BeGlzIiwic2V0TW92ZVRocmVzaG9sZCIsInNldFNoYWtlVGhyZXNob2xkIiwiZGV2aWNlTW92ZWQiLCJkZXZpY2VUdXJuZWQiLCJkZXZpY2VTaGFrZW4iLCJrZXlJc1ByZXNzZWQiLCJrZXlDb2RlIiwia2V5UHJlc3NlZCIsImtleVJlbGVhc2VkIiwia2V5VHlwZWQiLCJrZXlJc0Rvd24iLCJtb3ZlZFgiLCJtb3ZlZFkiLCJtb3VzZVgiLCJtb3VzZVkiLCJwbW91c2VYIiwicG1vdXNlWSIsIndpbk1vdXNlWCIsIndpbk1vdXNlWSIsInB3aW5Nb3VzZVgiLCJwd2luTW91c2VZIiwibW91c2VCdXR0b24iLCJtb3VzZUlzUHJlc3NlZCIsIm1vdXNlTW92ZWQiLCJtb3VzZURyYWdnZWQiLCJtb3VzZVByZXNzZWQiLCJtb3VzZVJlbGVhc2VkIiwibW91c2VDbGlja2VkIiwiZG91YmxlQ2xpY2tlZCIsIm1vdXNlV2hlZWwiLCJyZXF1ZXN0UG9pbnRlckxvY2siLCJleGl0UG9pbnRlckxvY2siLCJ0b3VjaFN0YXJ0ZWQiLCJ0b3VjaE1vdmVkIiwidG91Y2hFbmRlZCIsInNhdmVDYW52YXMiLCJzYXZlRnJhbWVzIiwidGludCIsIm5vVGludCIsImltYWdlTW9kZSIsImJsZW5kIiwiY29weSIsImxvYWRKU09OIiwibG9hZFN0cmluZ3MiLCJsb2FkVGFibGUiLCJsb2FkWE1MIiwibG9hZEJ5dGVzIiwiaHR0cEdldCIsImh0dHBQb3N0IiwiaHR0cERvIiwiY3JlYXRlV3JpdGVyIiwic2F2ZSIsInNhdmVKU09OIiwic2F2ZVN0cmluZ3MiLCJzYXZlVGFibGUiLCJjb25zdHJhaW4iLCJleHAiLCJsZXJwIiwibWFnIiwic3EiLCJmcmFjdCIsImNyZWF0ZVZlY3RvciIsIm5vaXNlIiwibm9pc2VEZXRhaWwiLCJub2lzZVNlZWQiLCJyYW5kb21TZWVkIiwicmFuZG9tR2F1c3NpYW4iLCJhc2luIiwiYXRhbiIsInRhbiIsImRlZ3JlZXMiLCJyYWRpYW5zIiwiYW5nbGVNb2RlIiwidGV4dEFsaWduIiwidGV4dExlYWRpbmciLCJ0ZXh0U2l6ZSIsInRleHRTdHlsZSIsInRleHRXaWR0aCIsInRleHRBc2NlbnQiLCJ0ZXh0RGVzY2VudCIsImxvYWRGb250IiwidGV4dEZvbnQiLCJhcHBlbmQiLCJhcnJheUNvcHkiLCJyZXZlcnNlIiwic2hvcnRlbiIsInN1YnNldCIsImZsb2F0IiwiaW50Iiwic3RyIiwiYnl0ZSIsImNoYXIiLCJ1bmNoYXIiLCJoZXgiLCJ1bmhleCIsIm1hdGNoQWxsIiwibmYiLCJuZmMiLCJuZnAiLCJuZnMiLCJzcGxpdFRva2VucyIsInRyaW0iLCJkYXkiLCJob3VyIiwibWludXRlIiwibWlsbGlzIiwibW9udGgiLCJ5ZWFyIiwicGxhbmUiLCJzcGhlcmUiLCJjeWxpbmRlciIsImNvbmUiLCJlbGxpcHNvaWQiLCJ0b3J1cyIsIm9yYml0Q29udHJvbCIsImRlYnVnTW9kZSIsIm5vRGVidWdNb2RlIiwiYW1iaWVudExpZ2h0Iiwic3BlY3VsYXJDb2xvciIsImRpcmVjdGlvbmFsTGlnaHQiLCJwb2ludExpZ2h0IiwibGlnaHRzIiwibGlnaHRGYWxsb2ZmIiwic3BvdExpZ2h0Iiwibm9MaWdodHMiLCJsb2FkTW9kZWwiLCJtb2RlbCIsImxvYWRTaGFkZXIiLCJjcmVhdGVTaGFkZXIiLCJzaGFkZXIiLCJyZXNldFNoYWRlciIsIm5vcm1hbE1hdGVyaWFsIiwidGV4dHVyZU1vZGUiLCJ0ZXh0dXJlV3JhcCIsImFtYmllbnRNYXRlcmlhbCIsImVtaXNzaXZlTWF0ZXJpYWwiLCJzcGVjdWxhck1hdGVyaWFsIiwic2hpbmluZXNzIiwiY2FtZXJhIiwicGVyc3BlY3RpdmUiLCJvcnRobyIsImZydXN0dW0iLCJjcmVhdGVDYW1lcmEiLCJzZXRDYW1lcmEiLCJzZXRBdHRyaWJ1dGVzIiwic2FtcGxlUmF0ZSIsImZyZXFUb01pZGkiLCJtaWRpVG9GcmVxIiwic291bmRGb3JtYXRzIiwibXVsdGlwbGUiLCJnZXRBdWRpb0NvbnRleHQiLCJ1c2VyU3RhcnRBdWRpbyIsImxvYWRTb3VuZCIsImNyZWF0ZUNvbnZvbHZlciIsInNldEJQTSIsInNhdmVTb3VuZCIsInNldFJlZCIsInNldEdyZWVuIiwic2V0Qmx1ZSIsInNldEFscGhhIiwiZWx0IiwibW91c2VPdmVyIiwibW91c2VPdXQiLCJkcmFnT3ZlciIsImRyYWdMZWF2ZSIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJoYXNDbGFzcyIsInRvZ2dsZUNsYXNzIiwiY2hpbGQiLCJodG1sIiwiYXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwic2hvdyIsImhpZGUiLCJkcm9wIiwicmVzZXQiLCJKU09OIiwic3RyaW5naWZ5IiwiaGFzS2V5IiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsIm1pbktleSIsIm1heEtleSIsInBsYXkiLCJwYXVzZSIsImF1dG9wbGF5Iiwidm9sdW1lIiwiZHVyYXRpb24iLCJvbmVuZGVkIiwiY29ubmVjdCIsImRpc2Nvbm5lY3QiLCJzaG93Q29udHJvbHMiLCJoaWRlQ29udHJvbHMiLCJhZGRDdWUiLCJyZW1vdmVDdWUiLCJjbGVhckN1ZXMiLCJmaWxlIiwic3VidHlwZSIsInJlc2l6ZSIsImdldEN1cnJlbnRGcmFtZSIsInNldEZyYW1lIiwibnVtRnJhbWVzIiwiZGVsYXkiLCJ3cml0ZSIsImNsb3NlIiwiYWRkUm93IiwicmVtb3ZlUm93IiwiZ2V0Um93IiwiZ2V0Um93cyIsImZpbmRSb3ciLCJmaW5kUm93cyIsIm1hdGNoUm93IiwibWF0Y2hSb3dzIiwiZ2V0Q29sdW1uIiwiY2xlYXJSb3dzIiwiYWRkQ29sdW1uIiwiZ2V0Q29sdW1uQ291bnQiLCJnZXRSb3dDb3VudCIsInJlbW92ZVRva2VucyIsInJlbW92ZUNvbHVtbiIsInNldE51bSIsInNldFN0cmluZyIsImdldE51bSIsImdldFN0cmluZyIsImdldE9iamVjdCIsImdldEFycmF5IiwiZ2V0UGFyZW50IiwiZ2V0TmFtZSIsInNldE5hbWUiLCJoYXNDaGlsZHJlbiIsImxpc3RDaGlsZHJlbiIsImdldENoaWxkcmVuIiwiZ2V0Q2hpbGQiLCJnZXRBdHRyaWJ1dGVDb3VudCIsImxpc3RBdHRyaWJ1dGVzIiwiaGFzQXR0cmlidXRlIiwiZ2V0Q29udGVudCIsInNldENvbnRlbnQiLCJzZXJpYWxpemUiLCJzdGF0aWMiLCJyZW0iLCJtYWdTcSIsImxpbWl0Iiwic2V0TWFnIiwiaGVhZGluZyIsImFuZ2xlQmV0d2VlbiIsInJlZmxlY3QiLCJlcXVhbHMiLCJmcm9tQW5nbGUiLCJmcm9tQW5nbGVzIiwicmFuZG9tMkQiLCJyYW5kb20zRCIsInRleHRCb3VuZHMiLCJ0ZXh0VG9Qb2ludHMiLCJwYW4iLCJ0aWx0IiwiY29tcHV0ZUZhY2VzIiwiY29tcHV0ZU5vcm1hbHMiLCJhdmVyYWdlTm9ybWFscyIsImF2ZXJhZ2VQb2xlTm9ybWFscyIsInNldFVuaWZvcm0iLCJnZXRNYXN0ZXJWb2x1bWUiLCJtYXN0ZXJWb2x1bWUiLCJzb3VuZE91dCIsImFtcCIsImRyeXdldCIsImJpcXVhZEZpbHRlciIsInByb2Nlc3MiLCJmcmVxIiwiZ2FpbiIsInRvZ2dsZSIsInNldFR5cGUiLCJwaGFzZSIsInRyaWdnZXJBdHRhY2siLCJ0cmlnZ2VyUmVsZWFzZSIsInNldEFEU1IiLCJhdHRhY2siLCJkZWNheSIsInN1c3RhaW4iLCJyZWxlYXNlIiwiZGlzcG9zZSIsIm5vdGVzIiwicG9seXZhbHVlIiwiQXVkaW9Wb2ljZSIsIm5vdGVBRFNSIiwibm90ZUF0dGFjayIsIm5vdGVSZWxlYXNlIiwiaXNMb2FkZWQiLCJwbGF5TW9kZSIsInNldExvb3AiLCJpc1BsYXlpbmciLCJpc1BhdXNlZCIsInNldFZvbHVtZSIsImdldFBhbiIsInJhdGUiLCJjdXJyZW50VGltZSIsImp1bXAiLCJjaGFubmVscyIsImZyYW1lcyIsImdldFBlYWtzIiwicmV2ZXJzZUJ1ZmZlciIsInNldFBhdGgiLCJzZXRCdWZmZXIiLCJwcm9jZXNzUGVha3MiLCJnZXRCbG9iIiwic2V0SW5wdXQiLCJnZXRMZXZlbCIsInRvZ2dsZU5vcm1hbGl6ZSIsIndhdmVmb3JtIiwiYW5hbHl6ZSIsImdldEVuZXJneSIsImdldENlbnRyb2lkIiwibGluQXZlcmFnZXMiLCJsb2dBdmVyYWdlcyIsImdldE9jdGF2ZUJhbmRzIiwiZmFkZSIsImF0dGFja1RpbWUiLCJhdHRhY2tMZXZlbCIsImRlY2F5VGltZSIsImRlY2F5TGV2ZWwiLCJyZWxlYXNlVGltZSIsInJlbGVhc2VMZXZlbCIsInNldFJhbmdlIiwic2V0RXhwIiwicmFtcCIsInN0cmVhbSIsIm1lZGlhU3RyZWFtIiwiY3VycmVudFNvdXJjZSIsImFtcGxpdHVkZSIsImdldFNvdXJjZXMiLCJzZXRTb3VyY2UiLCJiYW5kcyIsInBhbm5lciIsInBvc2l0aW9uWCIsInBvc2l0aW9uWSIsInBvc2l0aW9uWiIsIm9yaWVudCIsIm9yaWVudFgiLCJvcmllbnRZIiwib3JpZW50WiIsInNldEZhbGxvZmYiLCJtYXhEaXN0Iiwicm9sbG9mIiwibGVmdERlbGF5IiwicmlnaHREZWxheSIsImRlbGF5VGltZSIsImZlZWRiYWNrIiwiY29udm9sdmVyTm9kZSIsImltcHVsc2VzIiwiYWRkSW1wdWxzZSIsInJlc2V0SW1wdWxzZSIsInRvZ2dsZUltcHVsc2UiLCJzZXF1ZW5jZSIsImdldEJQTSIsImFkZFBocmFzZSIsInJlbW92ZVBocmFzZSIsImdldFBocmFzZSIsInJlcGxhY2VTZXF1ZW5jZSIsIm9uU3RlcCIsIm11c2ljYWxUaW1lTW9kZSIsIm1heEl0ZXJhdGlvbnMiLCJzeW5jZWRTdGFydCIsImJwbSIsInRpbWVTaWduYXR1cmUiLCJpbnRlcnZhbCIsIml0ZXJhdGlvbnMiLCJjb21wcmVzc29yIiwia25lZSIsInJhdGlvIiwidGhyZXNob2xkIiwicmVkdWN0aW9uIiwicmVjb3JkIiwiaXNEZXRlY3RlZCIsIm9uUGVhayIsIldhdmVTaGFwZXJOb2RlIiwib3B0ZGVmYXVsdCIsImdldEFtb3VudCIsImdldE92ZXJzYW1wbGUiLCJieXRlTGVuZ3RoIiwidG9CeXRlQXJyYXkiLCJjaGFyQ29kZUF0IiwiZnJvbUJ5dGVBcnJheSIsIlVpbnQ4QXJyYXkiLCJkdXAiLCJGIiwiVSIsIkJ1ZmZlciIsIlNsb3dCdWZmZXIiLCJhbGxvYyIsIklOU1BFQ1RfTUFYX0JZVEVTIiwiUmFuZ2VFcnJvciIsInNldFByb3RvdHlwZU9mIiwiVHlwZUVycm9yIiwiaXNFbmNvZGluZyIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiRCIsImJ1ZmZlciIsInZhbHVlT2YiLCJpc0J1ZmZlciIsIkEiLCJ0b1ByaW1pdGl2ZSIsIkkiLCJQIiwidG9Mb3dlckNhc2UiLCJsYXN0SW5kZXhPZiIsIlN0cmluZyIsInJlYWRVSW50MTZCRSIsIlIiLCJfIiwiZnJvbUNoYXJDb2RlIiwia01heExlbmd0aCIsIlRZUEVEX0FSUkFZX1NVUFBPUlQiLCJlcnJvciIsImJ5dGVPZmZzZXQiLCJzcGVjaWVzIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJwb29sU2l6ZSIsImFsbG9jVW5zYWZlIiwiYWxsb2NVbnNhZmVTbG93IiwiX2lzQnVmZmVyIiwiY29tcGFyZSIsInN3YXAxNiIsInN3YXAzMiIsInN3YXA2NCIsInRvTG9jYWxlU3RyaW5nIiwiTSIsIlMiLCJFIiwiaW5zcGVjdCIsImluY2x1ZGVzIiwiaXNGaW5pdGUiLCJ0b0pTT04iLCJfYXJyIiwiVCIsIkMiLCJOIiwiTyIsIkwiLCJzdWJhcnJheSIsInJlYWRVSW50TEUiLCJyZWFkVUludEJFIiwicmVhZFVJbnQ4IiwicmVhZFVJbnQxNkxFIiwicmVhZFVJbnQzMkxFIiwicmVhZFVJbnQzMkJFIiwicmVhZEludExFIiwicmVhZEludEJFIiwicmVhZEludDgiLCJyZWFkSW50MTZMRSIsInJlYWRJbnQxNkJFIiwicmVhZEludDMyTEUiLCJyZWFkSW50MzJCRSIsInJlYWRGbG9hdExFIiwicmVhZCIsInJlYWRGbG9hdEJFIiwicmVhZERvdWJsZUxFIiwicmVhZERvdWJsZUJFIiwid3JpdGVVSW50TEUiLCJ3cml0ZVVJbnRCRSIsIndyaXRlVUludDgiLCJ3cml0ZVVJbnQxNkxFIiwid3JpdGVVSW50MTZCRSIsIndyaXRlVUludDMyTEUiLCJ3cml0ZVVJbnQzMkJFIiwid3JpdGVJbnRMRSIsIndyaXRlSW50QkUiLCJ3cml0ZUludDgiLCJ3cml0ZUludDE2TEUiLCJ3cml0ZUludDE2QkUiLCJ3cml0ZUludDMyTEUiLCJ3cml0ZUludDMyQkUiLCJ3cml0ZUZsb2F0TEUiLCJ3cml0ZUZsb2F0QkUiLCJ3cml0ZURvdWJsZUxFIiwid3JpdGVEb3VibGVCRSIsImNvcHlXaXRoaW4iLCJpZWVlNzU0IiwicG9seWZpbGwiLCJWIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYktpdE11dGF0aW9uT2JzZXJ2ZXIiLCJVaW50OENsYW1wZWRBcnJheSIsImltcG9ydFNjcmlwdHMiLCJNZXNzYWdlQ2hhbm5lbCIsIl9zdGF0ZSIsIl9yZXN1bHQiLCJuZXh0VGljayIsImNyZWF0ZVRleHROb2RlIiwib2JzZXJ2ZSIsImNoYXJhY3RlckRhdGEiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvcnQyIiwicG9zdE1lc3NhZ2UiLCJyZXF1aXJlIiwicnVuT25Mb29wIiwicnVuT25Db250ZXh0Iiwic3Vic3RyaW5nIiwiX2xhYmVsIiwidGhlbiIsIl9vbmVycm9yIiwiX3N1YnNjcmliZXJzIiwiX2VudW1lcmF0ZSIsIl9lYWNoRW50cnkiLCJfaW5zdGFuY2VDb25zdHJ1Y3RvciIsIl9zZXR0bGVkQXQiLCJfcmVtYWluaW5nIiwiQiIsIl93aWxsU2V0dGxlQXQiLCJwcm9taXNlIiwiRyIsImNhdGNoIiwiZmluYWxseSIsInJhY2UiLCJfc2V0U2NoZWR1bGVyIiwiX3NldEFzYXAiLCJfYXNhcCIsImNhc3QiLCJFUzZQcm9taXNlIiwiX3Byb2Nlc3MiLCJmZXRjaEpzb25wIiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInRpbWVvdXQiLCJqc29ucENhbGxiYWNrIiwianNvbnBDYWxsYmFja0Z1bmN0aW9uIiwianNvbiIsImNoYXJzZXQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJVUkwiLCJ3ZWJraXRVUkwiLCJjcmVhdGVFbGVtZW50TlMiLCJzYWZhcmkiLCJzZXRJbW1lZGlhdGUiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwicmVhZHlTdGF0ZSIsIklOSVQiLCJjcmVhdGVPYmplY3RVUkwiLCJocmVmIiwiZG93bmxvYWQiLCJNb3VzZUV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsIkRPTkUiLCJGaWxlUmVhZGVyIiwib25sb2FkZW5kIiwib3BlbiIsImxvY2F0aW9uIiwicmVhZEFzRGF0YVVSTCIsIm1zU2F2ZU9yT3BlbkJsb2IiLCJhYm9ydCIsIldSSVRJTkciLCJvbndyaXRlc3RhcnQiLCJvbnByb2dyZXNzIiwib253cml0ZSIsIm9uYWJvcnQiLCJvbndyaXRlZW5kIiwiY29udGVudCIsInNhdmVBcyIsIk5hTiIsIkxOMiIsIkoiLCJLIiwiZWUiLCJRIiwiZGUiLCJjZSIsInVlIiwiVyIsIloiLCJsZSIsInBlIiwicmUiLCJIIiwiWCIsInEiLCJZIiwiJCIsInRlIiwiYWUiLCJvZSIsIm5lIiwic2UiLCJpZSIsImxpYnRlc3MiLCJHbHVUZXNzZWxhdG9yIiwid2luZGluZ1J1bGUiLCJHTFVfVEVTU19XSU5ESU5HX09ERCIsIkdMVV9URVNTX1dJTkRJTkdfTk9OWkVSTyIsIkdMVV9URVNTX1dJTkRJTkdfUE9TSVRJVkUiLCJHTFVfVEVTU19XSU5ESU5HX05FR0FUSVZFIiwiR0xVX1RFU1NfV0lORElOR19BQlNfR0VRX1RXTyIsInByaW1pdGl2ZVR5cGUiLCJHTF9MSU5FX0xPT1AiLCJHTF9UUklBTkdMRVMiLCJHTF9UUklBTkdMRV9TVFJJUCIsIkdMX1RSSUFOR0xFX0ZBTiIsImVycm9yVHlwZSIsIkdMVV9URVNTX01JU1NJTkdfQkVHSU5fUE9MWUdPTiIsIkdMVV9URVNTX01JU1NJTkdfRU5EX1BPTFlHT04iLCJHTFVfVEVTU19NSVNTSU5HX0JFR0lOX0NPTlRPVVIiLCJHTFVfVEVTU19NSVNTSU5HX0VORF9DT05UT1VSIiwiR0xVX1RFU1NfQ09PUkRfVE9PX0xBUkdFIiwiR0xVX1RFU1NfTkVFRF9DT01CSU5FX0NBTExCQUNLIiwiZ2x1RW51bSIsIkdMVV9URVNTX01FU0giLCJHTFVfVEVTU19UT0xFUkFOQ0UiLCJHTFVfVEVTU19XSU5ESU5HX1JVTEUiLCJHTFVfVEVTU19CT1VOREFSWV9PTkxZIiwiR0xVX0lOVkFMSURfRU5VTSIsIkdMVV9JTlZBTElEX1ZBTFVFIiwiR0xVX1RFU1NfQkVHSU4iLCJHTFVfVEVTU19WRVJURVgiLCJHTFVfVEVTU19FTkQiLCJHTFVfVEVTU19FUlJPUiIsIkdMVV9URVNTX0VER0VfRkxBRyIsIkdMVV9URVNTX0NPTUJJTkUiLCJHTFVfVEVTU19CRUdJTl9EQVRBIiwiR0xVX1RFU1NfVkVSVEVYX0RBVEEiLCJHTFVfVEVTU19FTkRfREFUQSIsIkdMVV9URVNTX0VSUk9SX0RBVEEiLCJHTFVfVEVTU19FREdFX0ZMQUdfREFUQSIsIkdMVV9URVNTX0NPTUJJTkVfREFUQSIsImdsdURlbGV0ZVRlc3MiLCJnbHVUZXNzUHJvcGVydHkiLCJnbHVHZXRUZXNzUHJvcGVydHkiLCJnbHVUZXNzTm9ybWFsIiwiZ2x1VGVzc0NhbGxiYWNrIiwiZ2x1VGVzc1ZlcnRleCIsImdsdVRlc3NCZWdpblBvbHlnb24iLCJnbHVUZXNzQmVnaW5Db250b3VyIiwiZ2x1VGVzc0VuZENvbnRvdXIiLCJnbHVUZXNzRW5kUG9seWdvbiIsIkludDMyQXJyYXkiLCJHaWZXcml0ZXIiLCJwYWxldHRlIiwiYWRkRnJhbWUiLCJkaXNwb3NhbCIsImdldE91dHB1dEJ1ZmZlciIsInNldE91dHB1dEJ1ZmZlciIsImdldE91dHB1dEJ1ZmZlclBvc2l0aW9uIiwic2V0T3V0cHV0QnVmZmVyUG9zaXRpb24iLCJHaWZSZWFkZXIiLCJoYXNfbG9jYWxfcGFsZXR0ZSIsInBhbGV0dGVfb2Zmc2V0IiwicGFsZXR0ZV9zaXplIiwiZGF0YV9vZmZzZXQiLCJkYXRhX2xlbmd0aCIsInRyYW5zcGFyZW50X2luZGV4IiwiaW50ZXJsYWNlZCIsImxvb3BDb3VudCIsImZyYW1lSW5mbyIsImRlY29kZUFuZEJsaXRGcmFtZUJHUkEiLCJkZWNvZGVBbmRCbGl0RnJhbWVSR0JBIiwianIiLCJHciIsIlVpbnQxNkFycmF5IiwidHJhbnMiLCJzb3VyY2VJbmRleCIsInRhZyIsImJpdGNvdW50IiwiZGVzdCIsImRlc3RMZW4iLCJsdHJlZSIsImR0cmVlIiwiY29kZVBvaW50QXQiLCJjb21tYW5kcyIsInN0cm9rZVdpZHRoIiwiaXNFbXB0eSIsImFkZFgiLCJhZGRZIiwiYWRkQmV6aWVyIiwiYWRkUXVhZCIsImN1cnZlVG8iLCJiZXppZXJDdXJ2ZVRvIiwicXVhZFRvIiwicXVhZHJhdGljQ3VydmVUbyIsImdldEJvdW5kaW5nQm94IiwidG9QYXRoRGF0YSIsInRvU1ZHIiwidG9ET01FbGVtZW50IiwiZmFpbCIsImFyZ3VtZW50IiwiYXNzZXJ0IiwiQllURSIsIkNIQVIiLCJDSEFSQVJSQVkiLCJVU0hPUlQiLCJTSE9SVCIsIlVJTlQyNCIsIlVMT05HIiwiTE9ORyIsIkZJWEVEIiwiRldPUkQiLCJVRldPUkQiLCJMT05HREFURVRJTUUiLCJUQUciLCJDYXJkOCIsIkNhcmQxNiIsIk9mZlNpemUiLCJTSUQiLCJOVU1CRVIiLCJOVU1CRVIxNiIsIk5VTUJFUjMyIiwiUkVBTCIsImV4ZWMiLCJOQU1FIiwiU1RSSU5HIiwiVVRGOCIsImdldFVpbnQ4IiwiVVRGMTYiLCJnZXRVaW50MTYiLCJtYWNpbnRvc2giLCJNQUNTVFJJTkciLCJXZWFrTWFwIiwiVkFSREVMVEFTIiwiSU5ERVgiLCJPQkpFQ1QiLCJESUNUIiwiT1BFUkFORCIsIk9QRVJBVE9SIiwiT1AiLCJ0YWJsZU5hbWUiLCJmaWVsZHMiLCJmb3JtYXQiLCJnbHlwaHMiLCJzY3JpcHQiLCJkZWZhdWx0TGFuZ1N5cyIsInJlcUZlYXR1cmVJbmRleCIsImZlYXR1cmVJbmRleGVzIiwibGFuZ1N5c1JlY29yZHMiLCJsYW5nU3lzIiwiZmVhdHVyZSIsImZlYXR1cmVQYXJhbXMiLCJsb29rdXBMaXN0SW5kZXhlcyIsImxvb2t1cFR5cGUiLCJsb29rdXBGbGFnIiwic3VidGFibGVzIiwiQ0hBUlNUUklORyIsIlRBQkxFIiwiUkVDT1JEIiwiTElURVJBTCIsImVuY29kZSIsInNpemVPZiIsIlRhYmxlIiwiUmVjb3JkIiwiQ292ZXJhZ2UiLCJTY3JpcHRMaXN0IiwiRmVhdHVyZUxpc3QiLCJMb29rdXBMaXN0IiwidXNob3J0TGlzdCIsInRhYmxlTGlzdCIsInJlY29yZExpc3QiLCJnZXRVaW50MzIiLCJnZXRJbnQxNiIsInVTaG9ydCIsInNob3J0IiwidUxvbmciLCJmaXhlZCIsImxvbmdEYXRlVGltZSIsInJlbGF0aXZlT2Zmc2V0IiwicGFyc2VCeXRlIiwicGFyc2VDaGFyIiwiZ2V0SW50OCIsInBhcnNlQ2FyZDgiLCJwYXJzZUNhcmQxNiIsInBhcnNlVVNob3J0IiwicGFyc2VTSUQiLCJwYXJzZU9mZnNldDE2IiwicGFyc2VTaG9ydCIsInBhcnNlRjJEb3QxNCIsInBhcnNlT2Zmc2V0MzIiLCJwYXJzZVVMb25nIiwicGFyc2VGaXhlZCIsInBhcnNlU3RyaW5nIiwicGFyc2VUYWciLCJwYXJzZUxvbmdEYXRlVGltZSIsInBhcnNlVmVyc2lvbiIsInNraXAiLCJwYXJzZVVMb25nTGlzdCIsInBhcnNlT2Zmc2V0MTZMaXN0IiwicGFyc2VVU2hvcnRMaXN0IiwicGFyc2VTaG9ydExpc3QiLCJwYXJzZUJ5dGVMaXN0IiwicGFyc2VMaXN0IiwicGFyc2VMaXN0MzIiLCJwYXJzZVJlY29yZExpc3QiLCJwYXJzZVJlY29yZExpc3QzMiIsInBhcnNlU3RydWN0IiwicGFyc2VWYWx1ZVJlY29yZCIsInhQbGFjZW1lbnQiLCJ5UGxhY2VtZW50IiwieEFkdmFuY2UiLCJ5QWR2YW5jZSIsInhQbGFEZXZpY2UiLCJ5UGxhRGV2aWNlIiwieEFkdkRldmljZSIsInlBZHZEZXZpY2UiLCJwYXJzZVZhbHVlUmVjb3JkTGlzdCIsInBhcnNlUG9pbnRlciIsInBhcnNlUG9pbnRlcjMyIiwicGFyc2VMaXN0T2ZMaXN0cyIsInBhcnNlQ292ZXJhZ2UiLCJyYW5nZXMiLCJwYXJzZUNsYXNzRGVmIiwic3RhcnRHbHlwaCIsImNsYXNzZXMiLCJjbGFzc0lkIiwibGlzdDMyIiwicmVjb3JkTGlzdDMyIiwicG9pbnRlciIsInBvaW50ZXIzMiIsIm9mZnNldDE2IiwidVNob3J0TGlzdCIsIm9mZnNldDMyIiwidUxvbmdMaXN0Iiwic3RydWN0IiwiY292ZXJhZ2UiLCJjbGFzc0RlZiIsInJlc2VydmVkIiwicGFyc2VTY3JpcHRMaXN0IiwicGFyc2VGZWF0dXJlTGlzdCIsInBhcnNlTG9va3VwTGlzdCIsIm1hcmtGaWx0ZXJpbmdTZXQiLCJwYXJzZUZlYXR1cmVWYXJpYXRpb25zTGlzdCIsImNvbmRpdGlvblNldE9mZnNldCIsImZlYXR1cmVUYWJsZVN1YnN0aXR1dGlvbk9mZnNldCIsImdldEJ5dGUiLCJnZXRDYXJkOCIsImdldFVTaG9ydCIsImdldENhcmQxNiIsImdldFNob3J0IiwiZ2V0VUxvbmciLCJnZXRGaXhlZCIsImdldFRhZyIsImdldE9mZnNldCIsImdldEJ5dGVzIiwiYnl0ZXNUb1N0cmluZyIsIlBhcnNlciIsIm51bVRhYmxlcyIsImxhbmd1YWdlIiwiZ3JvdXBDb3VudCIsImdseXBoSW5kZXhNYXAiLCJzZWdDb3VudCIsInVuaWNvZGUiLCJ1bmljb2RlcyIsImdseXBoSW5kZXgiLCJnbHlwaElkIiwic2VnQ291bnRYMiIsInNlYXJjaFJhbmdlIiwiZW50cnlTZWxlY3RvciIsInJhbmdlU2hpZnQiLCJjbWFwNExlbmd0aCIsImNtYXAxMk9mZnNldCIsImhlIiwibWUiLCJjbWFwIiwiZmUiLCJlbmNvZGluZyIsInllIiwibnVtYmVyT2ZHbHlwaHMiLCJnbHlwaE5hbWVJbmRleCIsImNoYXJUb0dseXBoSW5kZXgiLCJuYW1lVG9HbHlwaEluZGV4IiwiZ2x5cGhJbmRleFRvTmFtZSIsImdlIiwidmUiLCJiaW5kQ29uc3RydWN0b3JWYWx1ZXMiLCJiZSIsIl9lIiwieE1pbiIsInlNaW4iLCJ4TWF4IiwieU1heCIsImFkdmFuY2VXaWR0aCIsImFkZFVuaWNvZGUiLCJnZXRQYXRoIiwiaGludGluZyIsImdldENvbW1hbmRzIiwidW5pdHNQZXJFbSIsImdldENvbnRvdXJzIiwibGFzdFBvaW50T2ZDb250b3VyIiwiZ2V0TWV0cmljcyIsImxlZnRTaWRlQmVhcmluZyIsInJpZ2h0U2lkZUJlYXJpbmciLCJkcmF3UG9pbnRzIiwiZHJhd01ldHJpY3MiLCJ4ZSIsIkdseXBoU2V0IiwiZ2x5cGhMb2FkZXIiLCJ0dGZHbHlwaExvYWRlciIsImNmZkdseXBoTG9hZGVyIiwiU2UiLCJ3ZSIsIk1lIiwic3RhcnRPZmZzZXQiLCJlbmRPZmZzZXQiLCJFZSIsIlRlIiwiQ2UiLCJOZSIsIm9wIiwiT2UiLCJMZSIsIkllIiwiUGUiLCJEYXRhVmlldyIsIl9zdWJycyIsIl9zdWJyc0JpYXMiLCJwcml2YXRlIiwiX2RlZmF1bHRXaWR0aFgiLCJkZWZhdWx0V2lkdGhYIiwiX25vbWluYWxXaWR0aFgiLCJub21pbmFsV2lkdGhYIiwic3VicnMiLCJfcHJpdmF0ZURpY3QiLCJSZSIsImlzQ0lERm9udCIsInRhYmxlcyIsImNmZiIsInRvcERpY3QiLCJfZmRTZWxlY3QiLCJfZmRBcnJheSIsImdzdWJyc0JpYXMiLCJnc3VicnMiLCJEZSIsIkFlIiwia2UiLCJkaWN0IiwiRmUiLCJ0b3BEaWN0cyIsIlVlIiwiQmUiLCJmb3JtYXRNYWpvciIsImZvcm1hdE1pbm9yIiwib2Zmc2V0U2l6ZSIsInJvcyIsImZkQXJyYXkiLCJmZFNlbGVjdCIsIm51bUdseXBocyIsInN1YnJzQmlhcyIsImNoYXJTdHJpbmdzIiwibkdseXBocyIsImNmZkVuY29kaW5nIiwiZnVsbE5hbWUiLCJmYW1pbHlOYW1lIiwid2VpZ2h0Iiwid2VpZ2h0TmFtZSIsImZvbnRCQm94IiwiZm9udE1hdHJpeCIsImhlYWRlciIsIm5hbWVJbmRleCIsInBvc3RTY3JpcHROYW1lIiwidG9wRGljdEluZGV4IiwiZ2xvYmFsU3VickluZGV4IiwiY2hhcnNldHMiLCJjaGFyU3RyaW5nc0luZGV4IiwicHJpdmF0ZURpY3QiLCJzdHJpbmdJbmRleCIsInN0cmluZ3MiLCJHZSIsImZvbnRSZXZpc2lvbiIsImNoZWNrU3VtQWRqdXN0bWVudCIsIm1hZ2ljTnVtYmVyIiwiZmxhZ3MiLCJjcmVhdGVkIiwibW9kaWZpZWQiLCJtYWNTdHlsZSIsImxvd2VzdFJlY1BQRU0iLCJmb250RGlyZWN0aW9uSGludCIsImluZGV4VG9Mb2NGb3JtYXQiLCJnbHlwaERhdGFGb3JtYXQiLCJnZXRUaW1lIiwiY3JlYXRlZFRpbWVzdGFtcCIsImplIiwiYXNjZW5kZXIiLCJkZXNjZW5kZXIiLCJsaW5lR2FwIiwiYWR2YW5jZVdpZHRoTWF4IiwibWluTGVmdFNpZGVCZWFyaW5nIiwibWluUmlnaHRTaWRlQmVhcmluZyIsInhNYXhFeHRlbnQiLCJjYXJldFNsb3BlUmlzZSIsImNhcmV0U2xvcGVSdW4iLCJjYXJldE9mZnNldCIsIm1ldHJpY0RhdGFGb3JtYXQiLCJudW1iZXJPZkhNZXRyaWNzIiwiVmUiLCJ6ZSIsIkhlIiwibWF4UG9pbnRzIiwibWF4Q29udG91cnMiLCJtYXhDb21wb3NpdGVQb2ludHMiLCJtYXhDb21wb3NpdGVDb250b3VycyIsIm1heFpvbmVzIiwibWF4VHdpbGlnaHRQb2ludHMiLCJtYXhTdG9yYWdlIiwibWF4RnVuY3Rpb25EZWZzIiwibWF4SW5zdHJ1Y3Rpb25EZWZzIiwibWF4U3RhY2tFbGVtZW50cyIsIm1heFNpemVPZkluc3RydWN0aW9ucyIsIm1heENvbXBvbmVudEVsZW1lbnRzIiwibWF4Q29tcG9uZW50RGVwdGgiLCJXZSIsIlhlIiwiMCIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0MSIsIjQyIiwiNDMiLCI0NCIsIjQ1IiwiNDYiLCI0NyIsIjQ4IiwiNDkiLCI1MCIsIjUxIiwiNTIiLCI1MyIsIjU0IiwiNTUiLCI1NiIsIjU3IiwiNTgiLCI1OSIsIjYwIiwiNjEiLCI2MiIsIjYzIiwiNjQiLCI2NSIsIjY2IiwiNjciLCI2OCIsIjY5IiwiNzAiLCI3MSIsIjcyIiwiNzMiLCI3NCIsIjc1IiwiNzYiLCI3NyIsIjc4IiwiNzkiLCI4MCIsIjgxIiwiODIiLCI4MyIsIjg0IiwiODUiLCI4NiIsIjg3IiwiODgiLCI4OSIsIjkwIiwiOTEiLCI5MiIsIjkzIiwiOTQiLCIxMjgiLCIxMjkiLCIxMzAiLCIxMzEiLCIxMzIiLCIxMzMiLCIxMzQiLCIxMzUiLCIxMzYiLCIxMzciLCIxMzgiLCIxMzkiLCIxNDAiLCIxNDEiLCIxNDIiLCIxNDMiLCIxNDQiLCIxNDUiLCIxNDYiLCIxNDciLCIxNDgiLCIxNDkiLCIxNTAiLCIxNTEiLCJxZSIsIlllIiwiMTA3OCIsIjEwNTIiLCIxMTU2IiwiMTExOCIsIjUxMjEiLCIxNTM2MSIsIjMwNzMiLCIyMDQ5IiwiMTEyNjUiLCIxMzMxMyIsIjEyMjg5IiwiNDA5NyIsIjYxNDUiLCI4MTkzIiwiMTYzODUiLCIxMDI1IiwiMTAyNDEiLCI3MTY5IiwiMTQzMzciLCI5MjE3IiwiMTA2NyIsIjExMDEiLCIyMDkyIiwiMTA2OCIsIjExMzMiLCIxMDY5IiwiMTA1OSIsIjIxMTciLCIxMDkzIiwiODIxOCIsIjUxNDYiLCIxMTUwIiwiMTAyNiIsIjEwMjciLCIzMDc2IiwiNTEyNCIsIjIwNTIiLCI0MTAwIiwiMTAyOCIsIjExNTUiLCIxMDUwIiwiNDEyMiIsIjEwMjkiLCIxMDMwIiwiMTE2NCIsIjExMjUiLCIyMDY3IiwiMTA0MyIsIjMwODEiLCIxMDI0OSIsIjQxMDUiLCI5MjI1IiwiMTYzOTMiLCI2MTUzIiwiODIwMSIsIjE3NDE3IiwiNTEyOSIsIjEzMzIxIiwiMTg0NDEiLCI3MTc3IiwiMTEyNzMiLCIyMDU3IiwiMTAzMyIsIjEyMjk3IiwiMTA2MSIsIjEwODAiLCIxMTI0IiwiMTAzNSIsIjIwNjAiLCIzMDg0IiwiMTAzNiIsIjUxMzIiLCI2MTU2IiwiNDEwOCIsIjExMjIiLCIxMTEwIiwiMTA3OSIsIjMwNzkiLCIxMDMxIiwiNTEyNyIsIjQxMDMiLCIyMDU1IiwiMTAzMiIsIjExMzUiLCIxMDk1IiwiMTEyOCIsIjEwMzciLCIxMDgxIiwiMTAzOCIsIjEwMzkiLCIxMTM2IiwiMTA1NyIsIjExMTciLCIyMTQxIiwiMjEwOCIsIjEwNzYiLCIxMDc3IiwiMTA0MCIsIjIwNjQiLCIxMDQxIiwiMTA5OSIsIjEwODciLCIxMTA3IiwiMTE1OCIsIjExNTkiLCIxMDg5IiwiMTExMSIsIjEwNDIiLCIxMDg4IiwiMTEwOCIsIjEwNjIiLCIxMDYzIiwiMjA5NCIsIjExMzQiLCIxMDcxIiwiMjExMCIsIjEwODYiLCIxMTAwIiwiMTA4MiIsIjExNTMiLCIxMTQ2IiwiMTEwMiIsIjExNDgiLCIxMTA0IiwiMjEyOCIsIjExMjEiLCIxMDQ0IiwiMjA2OCIsIjExNTQiLCIxMDk2IiwiMTEyMyIsIjEwNDUiLCIxMDQ2IiwiMjA3MCIsIjEwOTQiLCIxMTMxIiwiMjE1NSIsIjMxNzkiLCIxMDQ4IiwiMTA0NyIsIjEwNDkiLCI5Mjc1IiwiNDE1NSIsIjUxNzkiLCIzMTMxIiwiMTA4MyIsIjIxMDciLCI4MjUxIiwiNjIwMyIsIjcyMjciLCIxMTAzIiwiNzE5NCIsIjMwOTgiLCI2MTcwIiwiMjA3NCIsIjExMzIiLCIxMDc0IiwiMTExNSIsIjEwNTEiLCIxMDYwIiwiMTEyNzQiLCIxNjM5NCIsIjEzMzIyIiwiOTIyNiIsIjUxMzAiLCI3MTc4IiwiMTIyOTgiLCIxNzQxOCIsIjQxMDYiLCIxODQ0MiIsIjIwNTgiLCIxOTQ2NiIsIjYxNTQiLCIxNTM3MCIsIjEwMjUwIiwiMjA0OTAiLCIzMDgyIiwiMTAzNCIsIjIxNTE0IiwiMTQzNDYiLCI4MjAyIiwiMjA3NyIsIjEwNTMiLCIxMTE0IiwiMTA2NCIsIjIxNDMiLCIxMDk3IiwiMTA5MiIsIjEwOTgiLCIxMDU0IiwiMTEwNSIsIjEwNTUiLCIxMDkwIiwiMTE1MiIsIjEwNTgiLCIxMDcwIiwiMTA1NiIsIjIxMTUiLCIxMDkxIiwiMTA2NiIsIjExMDYiLCIxMTYwIiwiMTE1NyIsIjExNDQiLCIxMTMwIiwiWmUiLCJRZSIsIktlIiwiSmUiLCIkZSIsImV0IiwidHQiLCJydCIsIm50IiwicGxhdGZvcm1JRCIsImVuY29kaW5nSUQiLCJsYW5ndWFnZUlEIiwibmFtZUlEIiwiYXQiLCJvdCIsInhBdmdDaGFyV2lkdGgiLCJ1c1dlaWdodENsYXNzIiwidXNXaWR0aENsYXNzIiwiZnNUeXBlIiwieVN1YnNjcmlwdFhTaXplIiwieVN1YnNjcmlwdFlTaXplIiwieVN1YnNjcmlwdFhPZmZzZXQiLCJ5U3Vic2NyaXB0WU9mZnNldCIsInlTdXBlcnNjcmlwdFhTaXplIiwieVN1cGVyc2NyaXB0WVNpemUiLCJ5U3VwZXJzY3JpcHRYT2Zmc2V0IiwieVN1cGVyc2NyaXB0WU9mZnNldCIsInlTdHJpa2VvdXRTaXplIiwieVN0cmlrZW91dFBvc2l0aW9uIiwic0ZhbWlseUNsYXNzIiwicGFub3NlIiwidWxVbmljb2RlUmFuZ2UxIiwidWxVbmljb2RlUmFuZ2UyIiwidWxVbmljb2RlUmFuZ2UzIiwidWxVbmljb2RlUmFuZ2U0IiwiYWNoVmVuZElEIiwiZnNTZWxlY3Rpb24iLCJ1c0ZpcnN0Q2hhckluZGV4IiwidXNMYXN0Q2hhckluZGV4Iiwic1R5cG9Bc2NlbmRlciIsInNUeXBvRGVzY2VuZGVyIiwic1R5cG9MaW5lR2FwIiwidXNXaW5Bc2NlbnQiLCJ1c1dpbkRlc2NlbnQiLCJ1bENvZGVQYWdlUmFuZ2UxIiwidWxDb2RlUGFnZVJhbmdlMiIsInN4SGVpZ2h0Iiwic0NhcEhlaWdodCIsInVzRGVmYXVsdENoYXIiLCJ1c0JyZWFrQ2hhciIsInVzTWF4Q29udGVudCIsIml0IiwiaXRhbGljQW5nbGUiLCJ1bmRlcmxpbmVQb3NpdGlvbiIsInVuZGVybGluZVRoaWNrbmVzcyIsImlzRml4ZWRQaXRjaCIsIm1pbk1lbVR5cGU0MiIsIm1heE1lbVR5cGU0MiIsIm1pbk1lbVR5cGUxIiwibWF4TWVtVHlwZTEiLCJzdCIsInN1YnN0Rm9ybWF0IiwiZGVsdGFHbHlwaElkIiwic3Vic3RpdHV0ZSIsInNlcXVlbmNlcyIsImFsdGVybmF0ZVNldHMiLCJsaWdhdHVyZVNldHMiLCJsaWdHbHlwaCIsImNvbXBvbmVudHMiLCJsdCIsInNlcXVlbmNlSW5kZXgiLCJsb29rdXBMaXN0SW5kZXgiLCJydWxlU2V0cyIsImxvb2t1cFJlY29yZHMiLCJjbGFzc1NldHMiLCJjb3ZlcmFnZXMiLCJjaGFpblJ1bGVTZXRzIiwiYmFja3RyYWNrIiwibG9va2FoZWFkIiwiYmFja3RyYWNrQ2xhc3NEZWYiLCJpbnB1dENsYXNzRGVmIiwibG9va2FoZWFkQ2xhc3NEZWYiLCJjaGFpbkNsYXNzU2V0IiwiYmFja3RyYWNrQ292ZXJhZ2UiLCJpbnB1dENvdmVyYWdlIiwibG9va2FoZWFkQ292ZXJhZ2UiLCJleHRlbnNpb24iLCJzdWJzdGl0dXRlcyIsInB0IiwidXQiLCJzY3JpcHRzIiwiZmVhdHVyZXMiLCJsb29rdXBzIiwidmFyaWF0aW9ucyIsImN0IiwiZHQiLCJodCIsIm10IiwiZnQiLCJ5dCIsImd0IiwiYWR2YW5jZVdpZHRoQXZnIiwibWF4TGVmdFNpZGVCZWFyaW5nIiwib3MyIiwiaGFzQ2hhciIsImdldEVuZ2xpc2hOYW1lIiwidW5pcXVlSUQiLCJlbiIsInByZWZlcnJlZEZhbWlseSIsImZvbnRGYW1pbHkiLCJwcmVmZXJyZWRTdWJmYW1pbHkiLCJmb250U3ViZmFtaWx5IiwibWV0YXMiLCJnc3ViIiwidnQiLCJidCIsIl90IiwieHQiLCJTdCIsInd0IiwiTXQiLCJFdCIsIlR0IiwiQ3QiLCJOdCIsIk90IiwibnVtYmVyT2ZDb250b3VycyIsIl94TWluIiwiX3lNaW4iLCJfeE1heCIsIl95TWF4IiwiZW5kUG9pbnRJbmRpY2VzIiwiaW5zdHJ1Y3Rpb25MZW5ndGgiLCJpbnN0cnVjdGlvbnMiLCJvbkN1cnZlIiwiaXNDb21wb3NpdGUiLCJzY2FsZTAxIiwic2NhbGUxMCIsIm1hdGNoZWRQb2ludHMiLCJMdCIsIkl0IiwiUHQiLCJzZWFyY2hUYWciLCJiaW5TZWFyY2giLCJnZXRUYWJsZSIsImNyZWF0ZURlZmF1bHRUYWJsZSIsImdldFNjcmlwdE5hbWVzIiwiZ2V0RGVmYXVsdFNjcmlwdE5hbWUiLCJnZXRTY3JpcHRUYWJsZSIsImdldExhbmdTeXNUYWJsZSIsImdldEZlYXR1cmVUYWJsZSIsImdldExvb2t1cFRhYmxlcyIsImdldEdseXBoQ2xhc3MiLCJnZXRDb3ZlcmFnZUluZGV4IiwiZXhwYW5kQ292ZXJhZ2UiLCJpbml0IiwiZGVmYXVsdEtlcm5pbmdUYWJsZXMiLCJnZXRLZXJuaW5nVGFibGVzIiwiZ2V0S2VybmluZ1ZhbHVlIiwicG9zRm9ybWF0IiwicGFpclNldHMiLCJzZWNvbmRHbHlwaCIsInZhbHVlMSIsImNsYXNzRGVmMSIsImNsYXNzRGVmMiIsImNsYXNzUmVjb3JkcyIsImdwb3MiLCJnZXRTaW5nbGUiLCJieSIsImdldEFsdGVybmF0ZXMiLCJnZXRMaWdhdHVyZXMiLCJhZGRTaW5nbGUiLCJhZGRBbHRlcm5hdGUiLCJhZGRMaWdhdHVyZSIsImdldEZlYXR1cmUiLCJSdCIsIkR0IiwiQXQiLCJrdCIsIkZ0IiwicGFyc2UiLCJVdCIsIl9mcGdtU3RhdGUiLCJfcHJlcFN0YXRlIiwiX2Vycm9yU3RhdGUiLCJCdCIsIkd0IiwianQiLCJWdCIsInp0IiwiSHQiLCJXdCIsInNyUGVyaW9kIiwic3JQaGFzZSIsInNyVGhyZXNob2xkIiwiWHQiLCJ4byIsImludGVycG9sYXRlIiwic2V0UmVsYXRpdmUiLCJub3JtYWxTbG9wZSIsIk5FR0FUSVZFX0lORklOSVRZIiwieW8iLCJ4VG91Y2hlZCIsInRvdWNoZWQiLCJ1bnRvdWNoIiwicXQiLCJQT1NJVElWRV9JTkZJTklUWSIsInlUb3VjaGVkIiwiWXQiLCJmcmVlemUiLCJadCIsIlF0IiwicHJldlBvaW50T25Db250b3VyIiwibmV4dFBvaW50T25Db250b3VyIiwicHJldmVudEV4dGVuc2lvbnMiLCJuZXh0VG91Y2hlZCIsInByZXZUb3VjaGVkIiwiS3QiLCJKdCIsImN2Q3V0SW4iLCJkZWx0YUJhc2UiLCJkZWx0YVNoaWZ0IiwibWluRGlzIiwiYXV0b0ZsaXAiLCIkdCIsImVudiIsInByb2ciLCJ6cDAiLCJ6cDEiLCJ6cDIiLCJycDAiLCJycDEiLCJycDIiLCJmdiIsInB2IiwiZHB2IiwiZXIiLCJ0Wm9uZSIsImdab25lIiwidHIiLCJpcCIsInJyIiwiREVCVUciLCJzdGVwIiwibnIiLCJhciIsIm9yIiwiejIiLCJ6MSIsImlyIiwic3IiLCJsciIsInowIiwicHIiLCJ1ciIsImNyIiwiY29udG91cnMiLCJkciIsImhyIiwibXIiLCJjdnQiLCJmciIsInlyIiwiZ3IiLCJwcGVtIiwidnIiLCJiciIsIl9yIiwieHIiLCJTciIsIndyIiwiZnBnbSIsInByZXAiLCJpbmhpYml0R3JpZEZpdCIsInN0b3JlIiwiaWdub3JlQ3Z0IiwiTXIiLCJFciIsImVtcHR5Iiwic3R5bGVOYW1lIiwiZGVzaWduZXIiLCJkZXNpZ25lclVSTCIsIm1hbnVmYWN0dXJlciIsIm1hbnVmYWN0dXJlclVSTCIsImxpY2Vuc2UiLCJsaWNlbnNlVVJMIiwiY29weXJpZ2h0IiwidHJhZGVtYXJrIiwid2VpZ2h0Q2xhc3MiLCJ1c1dlaWdodENsYXNzZXMiLCJNRURJVU0iLCJ3aWR0aENsYXNzIiwidXNXaWR0aENsYXNzZXMiLCJmc1NlbGVjdGlvblZhbHVlcyIsIlJFR1VMQVIiLCJzdXBwb3J0ZWQiLCJzdWJzdGl0dXRpb24iLCJfaGludGluZyIsIm91dGxpbmVzRm9ybWF0IiwiTnIiLCJjb29yZGluYXRlcyIsImNoYXJUb0dseXBoIiwic3RyaW5nVG9HbHlwaHMiLCJkZWZhdWx0UmVuZGVyT3B0aW9ucyIsImxpZ2EiLCJybGlnIiwiZ2x5cGhOYW1lcyIsIm5hbWVUb0dseXBoIiwia2VybmluZ1BhaXJzIiwia2VybmluZyIsImZvckVhY2hHbHlwaCIsImxldHRlclNwYWNpbmciLCJ0cmFja2luZyIsImdldFBhdGhzIiwiZ2V0QWR2YW5jZVdpZHRoIiwidmFsaWRhdGUiLCJ0b1RhYmxlcyIsInRvQnVmZmVyIiwidG9BcnJheUJ1ZmZlciIsInJlcXVlc3RGaWxlU3lzdGVtIiwid2Via2l0UmVxdWVzdEZpbGVTeXN0ZW0iLCJURU1QT1JBUlkiLCJyb290IiwiZ2V0RmlsZSIsInRvVVJMIiwibWVzc2FnZSIsIndyaXRlRmlsZVN5bmMiLCJVTkRFUlNDT1JFIiwiTkVHQVRJVkUiLCJPVVRMSU5FRCIsIlNUUklLRU9VVCIsIlVTRVJfVFlQT19NRVRSSUNTIiwiV1dTIiwiT0JMSVFVRSIsIlVMVFJBX0NPTkRFTlNFRCIsIkVYVFJBX0NPTkRFTlNFRCIsIkNPTkRFTlNFRCIsIlNFTUlfQ09OREVOU0VEIiwiU0VNSV9FWFBBTkRFRCIsIkVYUEFOREVEIiwiRVhUUkFfRVhQQU5ERUQiLCJVTFRSQV9FWFBBTkRFRCIsIlRISU4iLCJFWFRSQV9MSUdIVCIsIkxJR0hUIiwiU0VNSV9CT0xEIiwiRVhUUkFfQk9MRCIsIkJMQUNLIiwiT3IiLCJkZWZhdWx0VmFsdWUiLCJpbnN0YW5jZXMiLCJMciIsInZhbHVlRm9ybWF0MSIsInZhbHVlRm9ybWF0MiIsInZhbHVlMiIsImNsYXNzMUNvdW50IiwiY2xhc3MyQ291bnQiLCJQciIsIlJyIiwiRHIiLCJBciIsInJlYWRGaWxlIiwia3IiLCJYTUxIdHRwUmVxdWVzdCIsInJlc3BvbnNlVHlwZSIsInJlc3BvbnNlIiwic3RhdHVzVGV4dCIsInNlbmQiLCJGciIsImNoZWNrc3VtIiwiY29tcHJlc3Npb24iLCJVciIsImNvbXByZXNzZWRMZW5ndGgiLCJCciIsImhlYWQiLCJoaGVhIiwibWF4cCIsInBvc3QiLCJmdmFyIiwibWV0YSIsIkZvbnQiLCJHbHlwaCIsIlBhdGgiLCJCb3VuZGluZ0JveCIsIl9wYXJzZSIsImxvYWQiLCJsb2FkU3luYyIsInJlYWRGaWxlU3luYyIsIm9wZW50eXBlIiwiZnMiLCJ1bnNoaWZ0IiwiY3dkIiwiaXNBYnNvbHV0ZSIsInJlbGF0aXZlIiwic2VwIiwiZGVsaW1pdGVyIiwiZGlybmFtZSIsImJhc2VuYW1lIiwiZXh0bmFtZSIsImZ1biIsInRpdGxlIiwiYnJvd3NlciIsImFyZ3YiLCJ2ZXJzaW9ucyIsImFkZExpc3RlbmVyIiwib25jZSIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZW1pdCIsInByZXBlbmRMaXN0ZW5lciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJiaW5kaW5nIiwiY2hkaXIiLCJ1bWFzayIsImZldGNoIiwiaXNQcm90b3R5cGVPZiIsImRlbGV0ZSIsImhhcyIsImVudHJpZXMiLCJpdGVyYXRvciIsIl9ib2R5SW5pdCIsImhlYWRlcnMiLCJ1cmwiLCJyZWRpcmVjdCIsIkhlYWRlcnMiLCJSZXF1ZXN0IiwiUmVzcG9uc2UiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZVVSTCIsInJlc3BvbnNlVGV4dCIsIm9udGltZW91dCIsIm1ldGhvZCIsImNyZWRlbnRpYWxzIiwid2l0aENyZWRlbnRpYWxzIiwic2V0UmVxdWVzdEhlYWRlciIsIm5leHQiLCJkb25lIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImJvZHlVc2VkIiwicmVhZEFzQXJyYXlCdWZmZXIiLCJfaW5pdEJvZHkiLCJfYm9keVRleHQiLCJfYm9keUJsb2IiLCJGb3JtRGF0YSIsIl9ib2R5Rm9ybURhdGEiLCJVUkxTZWFyY2hQYXJhbXMiLCJfYm9keUFycmF5QnVmZmVyIiwiYmxvYiIsImFycmF5QnVmZmVyIiwicmVhZEFzVGV4dCIsImZvcm1EYXRhIiwicmVmZXJyZXIiLCJkZWNvZGVVUklDb21wb25lbnQiLCJkZWZhdWx0IiwiQ29sb3JDb252ZXJzaW9uIiwiX2hzYmFUb0hTTEEiLCJfaHNiYVRvUkdCQSIsIl9oc2xhVG9IU0JBIiwiX2hzbGFUb1JHQkEiLCJfcmdiYVRvSFNCQSIsIl9yZ2JhVG9IU0xBIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX3ZhbGlkYXRlUGFyYW1ldGVycyIsIl9nZXRBbHBoYSIsIl9nZXRCbHVlIiwiX2dldEJyaWdodG5lc3MiLCJDb2xvciIsIl9nZXRHcmVlbiIsIl9nZXRIdWUiLCJfY29sb3JNb2RlIiwiX2NvbG9yTWF4ZXMiLCJsZXZlbHMiLCJoc2JhIiwiX2dldExpZ2h0bmVzcyIsImhzbGEiLCJfZ2V0UmVkIiwiX2dldFNhdHVyYXRpb24iLCJfc3RvcmVNb2RlQW5kTWF4ZXMiLCJfYXJyYXkiLCJfcGFyc2VJbnB1dHMiLCJfY2FsY3VsYXRlTGV2ZWxzIiwidG9QcmVjaXNpb24iLCJtYXhlcyIsIl9nZXRNb2RlIiwiX2dldE1heGVzIiwiYWxpY2VibHVlIiwiYW50aXF1ZXdoaXRlIiwiYXF1YSIsImFxdWFtYXJpbmUiLCJhenVyZSIsImJlaWdlIiwiYmlzcXVlIiwiYmxhY2siLCJibGFuY2hlZGFsbW9uZCIsImJsdWV2aW9sZXQiLCJicm93biIsImJ1cmx5d29vZCIsImNhZGV0Ymx1ZSIsImNoYXJ0cmV1c2UiLCJjaG9jb2xhdGUiLCJjb3JhbCIsImNvcm5mbG93ZXJibHVlIiwiY29ybnNpbGsiLCJjcmltc29uIiwiY3lhbiIsImRhcmtibHVlIiwiZGFya2N5YW4iLCJkYXJrZ29sZGVucm9kIiwiZGFya2dyYXkiLCJkYXJrZ3JlZW4iLCJkYXJrZ3JleSIsImRhcmtraGFraSIsImRhcmttYWdlbnRhIiwiZGFya29saXZlZ3JlZW4iLCJkYXJrb3JhbmdlIiwiZGFya29yY2hpZCIsImRhcmtyZWQiLCJkYXJrc2FsbW9uIiwiZGFya3NlYWdyZWVuIiwiZGFya3NsYXRlYmx1ZSIsImRhcmtzbGF0ZWdyYXkiLCJkYXJrc2xhdGVncmV5IiwiZGFya3R1cnF1b2lzZSIsImRhcmt2aW9sZXQiLCJkZWVwcGluayIsImRlZXBza3libHVlIiwiZGltZ3JheSIsImRpbWdyZXkiLCJkb2RnZXJibHVlIiwiZmlyZWJyaWNrIiwiZmxvcmFsd2hpdGUiLCJmb3Jlc3RncmVlbiIsImZ1Y2hzaWEiLCJnYWluc2Jvcm8iLCJnaG9zdHdoaXRlIiwiZ29sZCIsImdvbGRlbnJvZCIsImdyYXkiLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGUiLCJ3aGl0ZXNtb2tlIiwieWVsbG93IiwieWVsbG93Z3JlZW4iLCJSZWdFeHAiLCJIRVgzIiwiSEVYNCIsIkhFWDYiLCJIRVg4IiwiUkdCX1BFUkNFTlQiLCJSR0JBIiwiUkdCQV9QRVJDRU5UIiwiSFNMQSIsIkhTQkEiLCJfcmVuZGVyZXIiLCJfc2V0UHJvcGVydHkiLCJfQ1RYX01JRERMRSIsIl9ERUZBVUxUX0xFQURNVUxUIiwiX0RFRkFVTFRfVEVYVF9GSUxMIiwiUkFEX1RPX0RFRyIsIkRFR19UT19SQUQiLCJfREVGQVVMVF9GSUxMIiwiX0RFRkFVTFRfU1RST0tFIiwiX2ZyYW1lUmF0ZSIsIl9sYXN0RnJhbWVUaW1lIiwiX3RhcmdldEZyYW1lUmF0ZSIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsImhhc0ZvY3VzIiwiX2N1ckVsZW1lbnQiLCJnZXRGcmFtZVJhdGUiLCJzZXRGcmFtZVJhdGUiLCJzY3JlZW4iLCJfb25yZXNpemUiLCJfaXNHbG9iYWwiLCJmdWxsc2NyZWVuRWxlbWVudCIsIndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50IiwibW96RnVsbFNjcmVlbkVsZW1lbnQiLCJtc0Z1bGxzY3JlZW5FbGVtZW50IiwiZnVsbHNjcmVlbkVuYWJsZWQiLCJ3ZWJraXRGdWxsc2NyZWVuRW5hYmxlZCIsIm1vekZ1bGxTY3JlZW5FbmFibGVkIiwibXNGdWxsc2NyZWVuRW5hYmxlZCIsInJlcXVlc3RGdWxsc2NyZWVuIiwibW96UmVxdWVzdEZ1bGxTY3JlZW4iLCJ3ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbiIsIm1zUmVxdWVzdEZ1bGxzY3JlZW4iLCJleGl0RnVsbHNjcmVlbiIsIm1vekNhbmNlbEZ1bGxTY3JlZW4iLCJ3ZWJraXRFeGl0RnVsbHNjcmVlbiIsIm1zRXhpdEZ1bGxzY3JlZW4iLCJfcGl4ZWxEZW5zaXR5IiwicGF0aG5hbWUiLCJzZWFyY2giLCJsYXN0SW5kZXgiLCJzb21lIiwiX2ZyaWVuZGx5RXJyb3IiLCJfY2hlY2tGb3JVc2VyRGVmaW5lZEZ1bmN0aW9ucyIsIl9mZXNFcnJvck1vbml0b3IiLCJfaGVscEZvck1pc3VzZWRBdFRvcExldmVsQ29kZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfZnJpZW5kbHlGaWxlTG9hZEVycm9yIiwic3RhY2t0cmFjZSIsInBhcnNlT3BlcmEiLCJwYXJzZVY4T3JJRSIsInBhcnNlRkZPclNhZmFyaSIsImV4dHJhY3RMb2NhdGlvbiIsImZ1bmN0aW9uTmFtZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsInBhcnNlT3BlcmE5IiwicGFyc2VPcGVyYTExIiwicGFyc2VPcGVyYTEwIiwiX2dldEVycm9yU3RhY2tQYXJzZXIiLCJfY2xlYXJWYWxpZGF0ZVBhcmFtc0NhY2hlIiwibW9kZUFkanVzdCIsIl9zZXR1cERvbmUiLCJtb2NoYSIsImluc3RhbmNlIiwiaW5pdGlhbGl6ZSIsInRyYW5zbGF0b3IiLCJmYWxsYmFja0xuZyIsIm5lc3RpbmdQcmVmaXgiLCJuZXN0aW5nU3VmZml4IiwiZGVmYXVsdE5TIiwicmV0dXJuRW1wdHlTdHJpbmciLCJpbnRlcnBvbGF0aW9uIiwiZXNjYXBlVmFsdWUiLCJkZXRlY3Rpb24iLCJjaGVja1doaXRlbGlzdCIsInJlc291cmNlcyIsImkxOG5leHQiLCJwdXNoU3R5bGUiLCJwb3BTdHlsZSIsInBvcE1hdHJpeCIsInB1c2hNYXRyaXgiLCJfdXNlck5vZGUiLCJfZWxlbWVudHMiLCJfZ2xBdHRyaWJ1dGVzIiwiX3JlcXVlc3RBbmltSWQiLCJfcHJlbG9hZENvdW50IiwiX2xvb3AiLCJfaW5pdGlhbGl6ZUluc3RhbmNlVmFyaWFibGVzIiwiX2RlZmF1bHRDYW52YXNTaXplIiwiX2V2ZW50cyIsImRyYWdlbmQiLCJkcmFnb3ZlciIsImNsaWNrIiwiZGJsY2xpY2siLCJtb3VzZW92ZXIiLCJtb3VzZW91dCIsImtleWRvd24iLCJrZXl1cCIsImtleXByZXNzIiwidG91Y2hzdGFydCIsInRvdWNobW92ZSIsInRvdWNoZW5kIiwiYmx1ciIsIl9taWxsaXNTdGFydCIsIl9sY2dfcmFuZG9tX3N0YXRlIiwiX2dhdXNzaWFuX3ByZXZpb3VzIiwid2hlZWwiLCJfbG9hZGluZ1NjcmVlbklkIiwiX3JlZ2lzdGVyZWRNZXRob2RzIiwiRGV2aWNlT3JpZW50YXRpb25FdmVudCIsImRldmljZW9yaWVudGF0aW9uIiwiRGV2aWNlTW90aW9uRXZlbnQiLCJfaXNOb2RlV2Via2l0IiwiZGV2aWNlbW90aW9uIiwiX3N0YXJ0IiwiaW5uZXJIVE1MIiwiX3ByZWxvYWRNZXRob2RzIiwiX3dyYXBQcmVsb2FkIiwiX3JlZ2lzdGVyZWRQcmVsb2FkTWV0aG9kcyIsIl9ydW5JZlByZWxvYWRzQXJlRG9uZSIsIl9zZXR1cCIsIl9kcmF3IiwiX2RlY3JlbWVudFByZWxvYWQiLCJfaW5jcmVtZW50UHJlbG9hZCIsImRhdGFzZXQiLCJoaWRkZW4iLCJ2aXNpYmlsaXR5IiwiX3VwZGF0ZU1vdXNlQ29vcmRzIiwiX3NldHVwUHJvbWlzZVByZWxvYWRzIiwiX2NyZWF0ZUZyaWVuZGx5R2xvYmFsRnVuY3Rpb25CaW5kZXIiLCJwYXNzaXZlIiwicmVnaXN0ZXJNZXRob2QiLCJfc3R5bGVzIiwiX2JlemllckRldGFpbCIsIl9jdXJ2ZURldGFpbCIsInJnYiIsImhzYiIsImhzbCIsIl9kb3duS2V5cyIsImdsb2JhbE9iamVjdCIsInByZSIsIkVsZW1lbnQiLCJfcEluc3QiLCJfcGl4ZWxzU3RhdGUiLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsImNsYXNzTmFtZSIsIl9hZGp1c3RMaXN0ZW5lciIsIl9zZXRNb3VzZUJ1dHRvbiIsIl9kZXRhY2hMaXN0ZW5lciIsIl9hdHRhY2hMaXN0ZW5lciIsIlJlbmRlcmVyR0wiLCJSZW5kZXJlcjJEIiwiX2FwcGx5RGVmYXVsdHMiLCJpc1AzRCIsIl91cGRhdGUiLCJvZmZzZXRQYXJlbnQiLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIiwiUmVuZGVyZXIiLCJfaXNNYWluQ2FudmFzIiwiZGlzcGxheSIsIl90ZXh0U2l6ZSIsIl90ZXh0TGVhZGluZyIsIl90ZXh0Rm9udCIsIl90ZXh0U3R5bGUiLCJfdGV4dEFzY2VudCIsIl90ZXh0RGVzY2VudCIsIl90ZXh0QWxpZ24iLCJfdGV4dEJhc2VsaW5lIiwiX3JlY3RNb2RlIiwiX2VsbGlwc2VNb2RlIiwiX2N1cnZlVGlnaHRuZXNzIiwiX2ltYWdlTW9kZSIsIl90aW50IiwiX2RvU3Ryb2tlIiwiX2RvRmlsbCIsIl9zdHJva2VTZXQiLCJfZmlsbFNldCIsImFzc2lnbiIsIl9nZXRQaXhlbCIsIl9hcHBseVRleHRQcm9wZXJ0aWVzIiwiX3VwZGF0ZVRleHRNZXRyaWNzIiwiaG9yaXpvbnRhbCIsInZlcnRpY2FsIiwiX3JlbmRlclRleHQiLCJfaXNPcGVuVHlwZSIsImZvbnRTaXplIiwib3ZlcmZsb3ciLCJ2ZXJ0aWNhbEFsaWduIiwiX2NhY2hlZEZpbGxTdHlsZSIsIl9jYWNoZWRTdHJva2VTdHlsZSIsIl9jYWNoZWRCbGVuZE1vZGUiLCJfc2V0RmlsbCIsIl9zZXRTdHJva2UiLCJsaW5lQ2FwIiwiX2dldEZpbGwiLCJfaXNFcmFzaW5nIiwicmVzdG9yZSIsImNsZWFyUmVjdCIsImdpZlByb3BlcnRpZXMiLCJfYW5pbWF0ZUdpZiIsIk1lZGlhRWxlbWVudCIsIl9nZXRUaW50ZWRJbWFnZUNhbnZhcyIsIl90b1BpeGVscyIsImNyZWF0ZUltYWdlRGF0YSIsInB1dEltYWdlRGF0YSIsImdldEltYWdlRGF0YSIsImltYWdlRGF0YSIsImRpc3BsYXlJbmRleCIsIl9hY3V0ZUFyY1RvQmV6aWVyIiwiYXgiLCJheSIsImJ4IiwiY3giLCJjeSIsIl9nZXRTdHJva2UiLCJhcmNUbyIsIlBPTFlHT04iLCJfZG9GaWxsU3Ryb2tlQ2xvc2UiLCJpc1ZlcnQiLCJsaW5lSm9pbiIsInRyYW5zZm9ybSIsInRleHRCYXNlbGluZSIsIl9yZW5kZXJQYXRoIiwic3Ryb2tlVGV4dCIsIl90ZXh0V2lkdGgiLCJtZWFzdXJlVGV4dCIsIl9wcm9taXNlUHJlbG9hZHMiLCJyZWdpc3RlclByb21pc2VQcmVsb2FkIiwiYWRkQ2FsbGJhY2tzIiwibGVnYWN5UHJlbG9hZFNldHVwIiwiX3dyYXBQcm9taXNlUHJlbG9hZCIsIl9sZWdhY3lQcmVsb2FkR2VuZXJhdG9yIiwiY3JlYXRlQmFzZU9iamVjdCIsImNsYXNzTGlzdCIsIl9kZWZhdWx0R3JhcGhpY3NDcmVhdGVkIiwiX25vcm1hbGl6ZUFyY0FuZ2xlcyIsImNvcnJlc3BvbmRUb1NhbWVQb2ludCIsIl90b1JhZGlhbnMiLCJfcmVuZGVyRWxsaXBzZSIsIl9yZW5kZXJSZWN0IiwiaW1hZ2VTbW9vdGhpbmdFbmFibGVkIiwiX2NvbnRvdXJJbml0ZWQiLCJ5MyIsIl9jb250b3VyVmVydGljZXMiLCJvUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wcyIsIl9pblVzZXJEcmF3IiwiX2Fzc2VydDNkIiwiZW5kc1dpdGgiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiU3RyaW5nRGljdCIsIk51bWJlckRpY3QiLCJUeXBlZERpY3QiLCJfdmFsaWRhdGUiLCJfYWRkT2JqIiwiZG93bmxvYWRGaWxlIiwiX3ZhbHVlVGVzdCIsIl9rZXlUZXN0IiwibG9hZGVkbWV0YWRhdGEiLCJ2aWRlb1dpZHRoIiwidmlkZW9IZWlnaHQiLCJwcmVzZXRQbGF5YmFja1JhdGUiLCJwbGF5YmFja1JhdGUiLCJfZ2V0Q29udGFpbmVyIiwicXVlcnlTZWxlY3RvciIsIl93cmFwRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0YWdOYW1lIiwiZXZlcnkiLCJjaGVja2VkIiwiSFRNTENhbnZhc0VsZW1lbnQiLCJhbHQiLCJjcm9zc09yaWdpbiIsImh0bWxGb3IiLCJIVE1MU2VsZWN0RWxlbWVudCIsIm9wdGlvbiIsInNlbGVjdGVkSW5kZXgiLCJzZWxlY3RlZE9wdGlvbnMiLCJkaXNhYmxlIiwiZGlzYWJsZWQiLCJIVE1MRGl2RWxlbWVudCIsIkhUTUxTcGFuRWxlbWVudCIsIkhUTUxJbnB1dEVsZW1lbnQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJIVE1MTGFiZWxFbGVtZW50IiwiX25hbWUiLCJfZ2V0T3B0aW9uc0FycmF5IiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiRmlsZSIsIkZpbGVMaXN0IiwiZmlsZXMiLCJfbG9hZCIsIm1lZGlhRGV2aWNlcyIsImdldFVzZXJNZWRpYSIsIndlYmtpdEdldFVzZXJNZWRpYSIsIm1vekdldFVzZXJNZWRpYSIsIkRPTUV4Y2VwdGlvbiIsInZpZGVvIiwiYXVkaW8iLCJzcmNPYmplY3QiLCJjaGlsZE5vZGVzIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiX3RyYW5zbGF0ZSIsInBhcmVudEVsZW1lbnQiLCJfcm90YXRlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJmaXJzdENoaWxkIiwiZ2V0VHJhY2tzIiwiX2RyYWdEaXNhYmxlZCIsImRhdGFUcmFuc2ZlciIsIl9wcmV2VGltZSIsIl9jdWVJRENvdW50ZXIiLCJfY3VlcyIsIl9tb2RpZmllZCIsIl9vbmVuZGVkIiwiX2ZyaWVuZGx5QXV0b3BsYXlFcnJvciIsIl9zZXR1cEF1dG9wbGF5RmFpbERldGVjdGlvbiIsIl9lbnN1cmVDYW52YXMiLCJkZXN0aW5hdGlvbiIsImF1ZGlvU291cmNlTm9kZSIsImNyZWF0ZU1lZGlhRWxlbWVudFNvdXJjZSIsImNvbnRyb2xzIiwib250aW1ldXBkYXRlIiwiX29uVGltZVVwZGF0ZSIsIl9jcmVhdGVMb2FkZXIiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJYTUwiLCJfdXBkYXRlUEFjY2VsZXJhdGlvbnMiLCJwUm90YXRlRGlyZWN0aW9uWCIsInBSb3RhdGVEaXJlY3Rpb25ZIiwicFJvdGF0ZURpcmVjdGlvbloiLCJfdXBkYXRlUFJvdGF0aW9ucyIsIl9vbmRldmljZW9yaWVudGF0aW9uIiwiX2FuZ2xlTW9kZSIsImJldGEiLCJfUEkiLCJnYW1tYSIsIl9oYW5kbGVNb3Rpb24iLCJfb25kZXZpY2Vtb3Rpb24iLCJhY2NlbGVyYXRpb24iLCJvcmllbnRhdGlvbiIsImlzS2V5UHJlc3NlZCIsIl9vbmtleWRvd24iLCJ3aGljaCIsImNoYXJDb2RlIiwiX29ua2V5dXAiLCJfYXJlRG93bktleXMiLCJfb25rZXlwcmVzcyIsIl9sYXN0S2V5Q29kZVR5cGVkIiwiX29uYmx1ciIsIl9oYXNNb3VzZUludGVyYWN0ZWQiLCJfdXBkYXRlTmV4dE1vdXNlQ29vcmRzIiwiY2xpZW50WCIsInNjcm9sbFdpZHRoIiwic2Nyb2xsSGVpZ2h0IiwiY2xpZW50WSIsIndpblgiLCJ3aW5ZIiwiaWRlbnRpZmllciIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIl9tb3VzZVdoZWVsRGVsdGFZIiwiX29ubW91c2Vtb3ZlIiwiX29ubW91c2Vkb3duIiwiX29ubW91c2V1cCIsIl9vbmRyYWdlbmQiLCJfb25kcmFnb3ZlciIsIl9vbmNsaWNrIiwiX29uZGJsY2xpY2siLCJfcG1vdXNlV2hlZWxEZWx0YVkiLCJfb253aGVlbCIsIm1velJlcXVlc3RQb2ludGVyTG9jayIsIl91cGRhdGVUb3VjaENvb3JkcyIsIl9vbnRvdWNoc3RhcnQiLCJfb250b3VjaG1vdmUiLCJfb250b3VjaGVuZCIsIkltYWdlRGF0YSIsIl90bXBDYW52YXMiLCJfdG1wQ3R4IiwiX2dldEFSR0IiLCJfc2V0UGl4ZWxzIiwiX2NoZWNrRmlsZUV4dGVuc2lvbiIsInRvQmxvYiIsInNhdmVHaWYiLCJsb29wTGltaXQiLCJTZXQiLCJVaW50MzJBcnJheSIsImZyYW1lT3B0cyIsInBpeGVsUGFsZXR0ZUluZGV4IiwiX21ha2VGcmFtZSIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImZpbGVuYW1lIiwiZXh0IiwidG9EYXRhVVJMIiwib21nZ2lmIiwicGxheWluZyIsInRpbWVEaXNwbGF5ZWQiLCJ0aW1lU2luY2VTdGFydCIsIl9jb3B5SGVscGVyIiwiY3VycmVudFN0YXRlIiwidG9rZW4iLCJlc2NhcGVkIiwiVGFibGVSb3ciLCJieXRlcyIsIl9wV3JpdGVycyIsIlByaW50V3JpdGVyIiwid3JpdGVGaWxlIiwiU291bmRGaWxlIiwic2F2ZUpTT05PYmplY3QiLCJzYXZlSlNPTkFycmF5IiwiX2lzU2FmYXJpIiwib25jbGljayIsInN0b3BQcm9wYWdhdGlvbiIsImFsZXJ0IiwiRE9NIiwiaW1wbGVtZW50YXRpb24iLCJjcmVhdGVEb2N1bWVudCIsImF0dHJpYnV0ZXMiLCJub2RlVmFsdWUiLCJ0ZXh0Q29udGVudCIsIlhNTFNlcmlhbGl6ZXIiLCJzZXJpYWxpemVUb1N0cmluZyIsInNldFNlZWQiLCJnZXRTZWVkIiwicmFuZCIsIl9mcm9tUmFkaWFucyIsIl9sY2ciLCJfbGNnU2V0U2VlZCIsIl90b0RlZ3JlZXMiLCJzYW1wbGVGYWN0b3IiLCJzaW1wbGlmeVRocmVzaG9sZCIsInRtcFBvaW50MSIsInRtcFBvaW50MiIsInF4IiwicXkiLCJjYWNoZSIsIl9zY2FsZSIsImFkdmFuY2UiLCJfaGFuZGxlQWxpZ25tZW50IiwiX2dldEdseXBocyIsIl9nZXRQYXRoIiwiX2dldFBhdGhEYXRhIiwiZGVjaW1hbHMiLCJfZ2V0U1ZHIiwicmVwZWF0IiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldE1vbnRoIiwiZ2V0U2Vjb25kcyIsImdldEZ1bGxZZWFyIiwidmVydGV4Tm9ybWFscyIsInV2cyIsImZhY2VzIiwiZ2VvbWV0cnlJbkhhc2giLCJHZW9tZXRyeSIsImRldGFpbFkiLCJkZXRhaWxYIiwiX21ha2VUcmlhbmdsZUVkZ2VzIiwiX2VkZ2VzVG9WZXJ0aWNlcyIsImNyZWF0ZUJ1ZmZlcnMiLCJkcmF3QnVmZmVyc1NjYWxlZCIsInBlclBpeGVsTGlnaHRpbmciLCJzdHJva2VJbmRpY2VzIiwiX2RyYXdQb2ludHMiLCJpbW1lZGlhdGVNb2RlIiwiYnVmZmVycyIsInVNVk1hdHJpeCIsIk1hdHJpeCIsImRyYXdCdWZmZXJzIiwiX2JlemllclZlcnRleCIsIl9sb29rVXBUYWJsZUJlemllciIsIl9sdXRCZXppZXJEZXRhaWwiLCJfYmV6aWVyQ29lZmZpY2llbnRzIiwiaXNCZXppZXIiLCJfcXVhZHJhdGljVmVydGV4IiwiX2xvb2tVcFRhYmxlUXVhZHJhdGljIiwiX2x1dFF1YWRyYXRpY0RldGFpbCIsIl9xdWFkcmF0aWNDb2VmZmljaWVudHMiLCJpc1F1YWRyYXRpYyIsIl9jdXJ2ZVZlcnRleCIsImlzQ3VydmUiLCJfYmV6aWVyVG9DYXRtdWxsIiwiX2N1ckNhbWVyYSIsImNvbnRleHRNZW51RGlzYWJsZWQiLCJ3aGVlbERlZmF1bHREaXNhYmxlZCIsIm9ud2hlZWwiLCJfb3JiaXQiLCJfZ2V0TG9jYWxBeGVzIiwiZXllWCIsImV5ZVkiLCJleWVaIiwiX2dyaWQiLCJfYXhlc0ljb24iLCJjdXJTdHJva2VDb2xvciIsImNhbWVyYU1hdHJpeCIsIm1hdDQiLCJhbWJpZW50TGlnaHRDb2xvcnMiLCJfZW5hYmxlTGlnaHRpbmciLCJzcGVjdWxhckNvbG9ycyIsImRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zIiwiZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnMiLCJkaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnMiLCJwb2ludExpZ2h0UG9zaXRpb25zIiwicG9pbnRMaWdodERpZmZ1c2VDb2xvcnMiLCJwb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMiLCJjb25zdGFudEF0dGVudWF0aW9uIiwibGluZWFyQXR0ZW51YXRpb24iLCJxdWFkcmF0aWNBdHRlbnVhdGlvbiIsInNwb3RMaWdodERpZmZ1c2VDb2xvcnMiLCJzcG90TGlnaHRTcGVjdWxhckNvbG9ycyIsInNwb3RMaWdodFBvc2l0aW9ucyIsInNwb3RMaWdodERpcmVjdGlvbnMiLCJzcG90TGlnaHRBbmdsZSIsInNwb3RMaWdodENvbmMiLCJfdXNlU2hpbmluZXNzIiwiZ2lkIiwiZ2V0RmxvYXQzMiIsIlRleHREZWNvZGVyIiwiZGVjb2RlIiwidm4iLCJTaGFkZXIiLCJfdmVydFNyYyIsIl9mcmFnU3JjIiwiaXNTdHJva2VTaGFkZXIiLCJ1c2VyU3Ryb2tlU2hhZGVyIiwidXNlckZpbGxTaGFkZXIiLCJfdXNlTm9ybWFsTWF0ZXJpYWwiLCJkcmF3TW9kZSIsIl91c2VTcGVjdWxhck1hdGVyaWFsIiwiX3VzZUVtaXNzaXZlTWF0ZXJpYWwiLCJjdXJGaWxsQ29sb3IiLCJfdGV4IiwidGV4dHVyZVdyYXBYIiwidGV4dHVyZVdyYXBZIiwic2V0V3JhcE1vZGUiLCJfYXBwbHlDb2xvckJsZW5kIiwiR0wiLCJfaXNCbGVuZGluZyIsImN1ckJsZW5kTW9kZSIsImVuYWJsZSIsImRlcHRoTWFzayIsIl9hcHBseUJsZW5kTW9kZSIsImJsZW5kRXF1YXRpb24iLCJGVU5DX0FERCIsImJsZW5kRnVuYyIsIlNSQ19BTFBIQSIsIk9ORV9NSU5VU19TUkNfQUxQSEEiLCJGVU5DX1JFVkVSU0VfU1VCVFJBQ1QiLCJEU1RfQUxQSEEiLCJibGVuZEVxdWF0aW9uU2VwYXJhdGUiLCJibGVuZEZ1bmNTZXBhcmF0ZSIsIlpFUk8iLCJTUkNfQ09MT1IiLCJPTkUiLCJPTkVfTUlOVVNfRFNUX0NPTE9SIiwiT05FX01JTlVTX1NSQ19DT0xPUiIsImJsZW5kRXh0IiwiTUlOX0VYVCIsIk1BWF9FWFQiLCJDYW1lcmEiLCJfY29tcHV0ZUNhbWVyYURlZmF1bHRTZXR0aW5ncyIsIl9zZXREZWZhdWx0Q2FtZXJhIiwiY2FtZXJhVHlwZSIsInByb2pNYXRyaXgiLCJkZWZhdWx0Q2FtZXJhRk9WIiwiY2FtZXJhRk9WIiwiZGVmYXVsdEFzcGVjdFJhdGlvIiwiZGVmYXVsdENhbWVyYU5lYXIiLCJkZWZhdWx0Q2FtZXJhRmFyIiwiYXNwZWN0UmF0aW8iLCJjYW1lcmFOZWFyIiwiY2FtZXJhRmFyIiwiaWRlbnRpdHkiLCJfaXNBY3RpdmUiLCJ1UE1hdHJpeCIsIl9yb3RhdGVWaWV3IiwiY2VudGVyWCIsImNlbnRlclkiLCJjZW50ZXJaIiwidXBYIiwidXBZIiwidXBaIiwiZGVmYXVsdEV5ZVgiLCJkZWZhdWx0RXllWSIsImRlZmF1bHRFeWVaIiwiZGVmYXVsdENlbnRlclgiLCJkZWZhdWx0Q2VudGVyWSIsImRlZmF1bHRDZW50ZXJaIiwiX3Jlc2l6ZSIsImxpbmVWZXJ0aWNlcyIsImxpbmVOb3JtYWxzIiwidmVydGV4Q29sb3JzIiwiZGlydHlGbGFncyIsIl9nZXRGYWNlTm9ybWFsIiwiRmxvYXQzMkFycmF5IiwibWF0MyIsInRyYW5zcG9zZSIsImludmVydCIsImludmVydDN4MyIsInRyYW5zcG9zZTN4MyIsImludmVyc2VUcmFuc3Bvc2UiLCJkZXRlcm1pbmFudCIsIlJlbmRlckJ1ZmZlciIsImRzdCIsImF0dHIiLCJfcHJlcGFyZUJ1ZmZlciIsImNyZWF0ZUJ1ZmZlciIsImJpbmRCdWZmZXIiLCJBUlJBWV9CVUZGRVIiLCJfYmluZEJ1ZmZlciIsImVuYWJsZUF0dHJpYiIsInNoYXBlTW9kZSIsImdlb21ldHJ5IiwiX3Byb2Nlc3NWZXJ0aWNlcyIsIl9kcmF3SW1tZWRpYXRlRmlsbCIsIl9kcmF3SW1tZWRpYXRlU3Ryb2tlIiwiX2NhbGN1bGF0ZUVkZ2VzIiwiX3Rlc3NlbGF0ZVNoYXBlIiwiX3ZUb05BcnJheSIsIl90cmlhbmd1bGF0ZSIsIl9nZXRJbW1lZGlhdGVGaWxsU2hhZGVyIiwiX2NhbGN1bGF0ZU5vcm1hbHMiLCJfc2V0RmlsbFVuaWZvcm1zIiwiZHJhd0FycmF5cyIsInVuYmluZFNoYWRlciIsIl9nZXRJbW1lZGlhdGVTdHJva2VTaGFkZXIiLCJfc2V0U3Ryb2tlVW5pZm9ybXMiLCJfaW5pdEJ1ZmZlckRlZmF1bHRzIiwiX2ZyZWVCdWZmZXJzIiwicmV0YWluZWRNb2RlIiwiaW5kZXhCdWZmZXIiLCJkZWxldGVCdWZmZXIiLCJfZmxhdHRlbiIsIkVMRU1FTlRfQVJSQVlfQlVGRkVSIiwidmVydGV4Q291bnQiLCJsaW5lVmVydGV4Q291bnQiLCJfZ2V0UmV0YWluZWRTdHJva2VTaGFkZXIiLCJfZHJhd0FycmF5cyIsIl9nZXRSZXRhaW5lZEZpbGxTaGFkZXIiLCJfZHJhd0VsZW1lbnRzIiwiZHJhd0VsZW1lbnRzIiwiVU5TSUdORURfU0hPUlQiLCJfZ2V0SW1tZWRpYXRlUG9pbnRTaGFkZXIiLCJfc2V0UG9pbnRVbmlmb3JtcyIsIlNUQVRJQ19EUkFXIiwiYVBvc2l0aW9uIiwiUG9pbnRzIiwiaW1tZWRpYXRlVmVydCIsInZlcnRleENvbG9yVmVydCIsInZlcnRleENvbG9yRnJhZyIsIm5vcm1hbFZlcnQiLCJub3JtYWxGcmFnIiwiYmFzaWNGcmFnIiwibGlnaHRWZXJ0IiwibGlnaHRUZXh0dXJlRnJhZyIsInBob25nVmVydCIsInBob25nRnJhZyIsImZvbnRWZXJ0IiwiZm9udEZyYWciLCJsaW5lVmVydCIsImxpbmVGcmFnIiwicG9pbnRWZXJ0IiwicG9pbnRGcmFnIiwiX3NldEF0dHJpYnV0ZURlZmF1bHRzIiwiX2luaXRDb250ZXh0IiwiZ2V0RXh0ZW5zaW9uIiwidU5NYXRyaXgiLCJfZGVmYXVsdExpZ2h0U2hhZGVyIiwiX2RlZmF1bHRJbW1lZGlhdGVNb2RlU2hhZGVyIiwiX2RlZmF1bHROb3JtYWxTaGFkZXIiLCJfZGVmYXVsdENvbG9yU2hhZGVyIiwiX2RlZmF1bHRQb2ludFNoYWRlciIsInVzZXJQb2ludFNoYWRlciIsInBvaW50U2l6ZSIsImN1clN0cm9rZVdlaWdodCIsIl90ZXNzeSIsIl9pbml0VGVzc3kiLCJmb250SW5mb3MiLCJfY3VyU2hhZGVyIiwic3RlbmNpbCIsInByZW11bHRpcGxpZWRBbHBoYSIsInByZXNlcnZlRHJhd2luZ0J1ZmZlciIsIkRFUFRIX1RFU1QiLCJkZXB0aEZ1bmMiLCJMRVFVQUwiLCJ2aWV3cG9ydCIsImRyYXdpbmdCdWZmZXJXaWR0aCIsImRyYXdpbmdCdWZmZXJIZWlnaHQiLCJfdmlld3BvcnQiLCJnZXRQYXJhbWV0ZXIiLCJWSUVXUE9SVCIsIl9yZXNldENvbnRleHQiLCJERVBUSF9CVUZGRVJfQklUIiwiY2xlYXJDb2xvciIsIkNPTE9SX0JVRkZFUl9CSVQiLCJyZWFkUGl4ZWxzIiwiVU5TSUdORURfQllURSIsIl9nZXRMaW5lU2hhZGVyIiwiaXNOb3JtYWxTaGFkZXIiLCJfZ2V0Tm9ybWFsU2hhZGVyIiwiaXNMaWdodFNoYWRlciIsIl9nZXRMaWdodFNoYWRlciIsImlzVGV4dHVyZVNoYWRlciIsIl9nZXRJbW1lZGlhdGVNb2RlU2hhZGVyIiwiX2dldENvbG9yU2hhZGVyIiwiaXNQb2ludFNoYWRlciIsIl9nZXRQb2ludFNoYWRlciIsIl9nZXRSZXRhaW5lZExpbmVTaGFkZXIiLCJfZ2V0SW1tZWRpYXRlTGluZVNoYWRlciIsIl9kZWZhdWx0TGluZVNoYWRlciIsIl9nZXRGb250U2hhZGVyIiwiX2RlZmF1bHRGb250U2hhZGVyIiwiX2dldEVtcHR5VGV4dHVyZSIsIl9lbXB0eVRleHR1cmUiLCJnZXRUZXh0dXJlIiwiYmluZFNoYWRlciIsImJpbmRUZXh0dXJlcyIsImJ1ZmZlckRhdGEiLCJfYXJyYXlzRXF1YWwiLCJfaXNUeXBlZEFycmF5IiwiRmxvYXQ2NEFycmF5IiwiSW50MTZBcnJheSIsIl92ZXJ0U2hhZGVyIiwiX2ZyYWdTaGFkZXIiLCJfZ2xQcm9ncmFtIiwiX2xvYWRlZEF0dHJpYnV0ZXMiLCJfbG9hZGVkVW5pZm9ybXMiLCJ1bmlmb3JtcyIsIl9ib3VuZCIsInNhbXBsZXJzIiwiVkVSVEVYX1NIQURFUiIsInNoYWRlclNvdXJjZSIsImNvbXBpbGVTaGFkZXIiLCJnZXRTaGFkZXJQYXJhbWV0ZXIiLCJDT01QSUxFX1NUQVRVUyIsImdldFNoYWRlckluZm9Mb2ciLCJGUkFHTUVOVF9TSEFERVIiLCJjcmVhdGVQcm9ncmFtIiwiYXR0YWNoU2hhZGVyIiwibGlua1Byb2dyYW0iLCJnZXRQcm9ncmFtUGFyYW1ldGVyIiwiTElOS19TVEFUVVMiLCJnZXRQcm9ncmFtSW5mb0xvZyIsIl9sb2FkQXR0cmlidXRlcyIsIl9sb2FkVW5pZm9ybXMiLCJBQ1RJVkVfQVRUUklCVVRFUyIsImdldEFjdGl2ZUF0dHJpYiIsImdldEF0dHJpYkxvY2F0aW9uIiwiQUNUSVZFX1VOSUZPUk1TIiwiZ2V0QWN0aXZlVW5pZm9ybSIsImdldFVuaWZvcm1Mb2NhdGlvbiIsIl9jYWNoZWREYXRhIiwiU0FNUExFUl8yRCIsInNhbXBsZXJJbmRleCIsIkZMT0FUX01BVDMiLCJGTE9BVF9NQVQ0IiwiRkxPQVRfVkVDMiIsIkZMT0FUX1ZFQzMiLCJGTE9BVF9WRUM0IiwiSU5UX1ZFQzIiLCJJTlRfVkVDMyIsIklOVF9WRUM0IiwiY29tcGlsZSIsInVzZVByb2dyYW0iLCJfc2V0TWF0cml4VW5pZm9ybXMiLCJ1bmJpbmRUZXh0dXJlcyIsImFjdGl2ZVRleHR1cmUiLCJURVhUVVJFMCIsImJpbmRUZXh0dXJlIiwidW5pZm9ybTFpIiwidXBkYXRlVGV4dHVyZXMiLCJ1Tm9ybWFsTWF0cml4IiwiQk9PTCIsIklOVCIsInVuaWZvcm0xaXYiLCJGTE9BVCIsInVuaWZvcm0xZnYiLCJ1bmlmb3JtMWYiLCJ1bmlmb3JtTWF0cml4M2Z2IiwidW5pZm9ybU1hdHJpeDRmdiIsInVuaWZvcm0yZnYiLCJ1bmlmb3JtMmYiLCJ1bmlmb3JtM2Z2IiwidW5pZm9ybTNmIiwidW5pZm9ybTRmdiIsInVuaWZvcm00ZiIsInVuaWZvcm0yaXYiLCJ1bmlmb3JtMmkiLCJ1bmlmb3JtM2l2IiwidW5pZm9ybTNpIiwidW5pZm9ybTRpdiIsInVuaWZvcm00aSIsImFOb3JtYWwiLCJ1VXNlTGlnaHRpbmciLCJ1QW1iaWVudExpZ2h0Q291bnQiLCJ1RGlyZWN0aW9uYWxMaWdodENvdW50IiwidVBvaW50TGlnaHRDb3VudCIsInVBbWJpZW50Q29sb3IiLCJ1RGlyZWN0aW9uYWxEaWZmdXNlQ29sb3JzIiwidURpcmVjdGlvbmFsU3BlY3VsYXJDb2xvcnMiLCJ1UG9pbnRMaWdodExvY2F0aW9uIiwidVBvaW50TGlnaHREaWZmdXNlQ29sb3JzIiwidVBvaW50TGlnaHRTcGVjdWxhckNvbG9ycyIsInVMaWdodGluZ0RpcmVjdGlvbiIsInVTcGVjdWxhciIsImlzQ29sb3JTaGFkZXIiLCJhVmVydGV4Q29sb3IiLCJ1TWF0ZXJpYWxDb2xvciIsImlzVGV4TGlnaHRTaGFkZXIiLCJ1U3Ryb2tlV2VpZ2h0IiwiZW5hYmxlVmVydGV4QXR0cmliQXJyYXkiLCJ2ZXJ0ZXhBdHRyaWJQb2ludGVyIiwiZ2xUZXgiLCJnbFRhcmdldCIsIlRFWFRVUkVfMkQiLCJnbEZvcm1hdCIsIm1pcG1hcHMiLCJnbE1pbkZpbHRlciIsImdsTWFnRmlsdGVyIiwiZ2xXcmFwUyIsIkNMQU1QX1RPX0VER0UiLCJnbFdyYXBUIiwiaXNTcmNNZWRpYUVsZW1lbnQiLCJfdmlkZW9QcmV2VXBkYXRlVGltZSIsImlzU3JjSFRNTEVsZW1lbnQiLCJpc1NyY1A1SW1hZ2UiLCJpc1NyY1A1R3JhcGhpY3MiLCJpc0ltYWdlRGF0YSIsIl9nZXRUZXh0dXJlRGF0YUZyb21Tb3VyY2UiLCJjcmVhdGVUZXh0dXJlIiwidGV4UGFyYW1ldGVyaSIsIlRFWFRVUkVfTUFHX0ZJTFRFUiIsIlRFWFRVUkVfTUlOX0ZJTFRFUiIsInRleEltYWdlMkQiLCJfZGlydHkiLCJ1bmJpbmRUZXh0dXJlIiwic2V0SW50ZXJwb2xhdGlvbiIsIk1JUlJPUkVEX1JFUEVBVCIsIlRFWFRVUkVfV1JBUF9TIiwiVEVYVFVSRV9XUkFQX1QiLCJpbmZvcyIsImZpbmRJbWFnZSIsInN0cm9rZUltYWdlSW5mb3MiLCJjb2xEaW1JbWFnZUluZm9zIiwicm93RGltSW1hZ2VJbmZvcyIsImNvbENlbGxJbWFnZUluZm9zIiwicm93Q2VsbEltYWdlSW5mb3MiLCJnbHlwaEluZm9zIiwiZ2V0R2x5cGhJbmZvIiwicDAiLCJjMCIsImMxIiwidG9RdWFkcmF0aWMiLCJxdWFkRXJyb3IiLCJzcGxpdEluZmxlY3Rpb25zIiwiY2VsbEltYWdlSW5mbyIsImRpbU9mZnNldCIsImRpbUltYWdlSW5mbyIsImdseXBoIiwidUdseXBoUmVjdCIsInN0cm9rZUltYWdlSW5mbyIsInN0cm9rZXMiLCJjb2xJbmZvIiwicm93SW5mbyIsInVHcmlkT2Zmc2V0IiwiX2ZvbnRJbmZvIiwiX3RleHRHZW9tIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUFLZkYsRUFBb0JRLEVBQUlGLEVBR3hCTixFQUFvQlMsRUFBSVYsRUFHeEJDLEVBQW9CVSxFQUFJLFNBQVNSLEVBQVNTLEVBQU1DLEdBQzNDWixFQUFvQmEsRUFBRVgsRUFBU1MsSUFDbENHLE9BQU9DLGVBQWViLEVBQVNTLEVBQU0sQ0FBRUssWUFBWSxFQUFNQyxJQUFLTCxLQUtoRVosRUFBb0JrQixFQUFJLFNBQVNoQixHQUNYLG9CQUFYaUIsUUFBMEJBLE9BQU9DLGFBQzFDTixPQUFPQyxlQUFlYixFQUFTaUIsT0FBT0MsWUFBYSxDQUFFQyxNQUFPLFdBRTdEUCxPQUFPQyxlQUFlYixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sS0FRdkRyQixFQUFvQnNCLEVBQUksU0FBU0QsRUFBT0UsR0FFdkMsR0FEVSxFQUFQQSxJQUFVRixFQUFRckIsRUFBb0JxQixJQUMvQixFQUFQRSxFQUFVLE9BQU9GLEVBQ3BCLEdBQVcsRUFBUEUsR0FBOEIsaUJBQVZGLEdBQXNCQSxHQUFTQSxFQUFNRyxXQUFZLE9BQU9ILEVBQ2hGLElBQUlJLEVBQUtYLE9BQU9ZLE9BQU8sTUFHdkIsR0FGQTFCLEVBQW9Ca0IsRUFBRU8sR0FDdEJYLE9BQU9DLGVBQWVV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QUFTLFFBQVEsT0FBTyxNQUFNLE1BQU0sUUFBUSxPQUFPLE9BQU8sTUFBTSxRQUFRLFFBQVEsT0FBTyxRQUFRLFlBQVksT0FBTyxRQUFRLFVBQVUsV0FBVyxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxjQUFjLFlBQVksZUFBZSxjQUFjLGFBQWEsWUFBWSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksWUFBWSxNQUFNLGFBQWEsYUFBYSxhQUFhLE9BQU8sV0FBVyxXQUFXLE1BQU0sU0FBUyxVQUFVLFdBQVcsY0FBYyxlQUFlLGdCQUFnQixnQkFBZ0IsaUJBQWlCLEtBQUssS0FBSyxTQUFTLFNBQVMsWUFBWSxpQkFBaUIsWUFBWSxTQUFTLGlCQUFpQixlQUFlLGdCQUFnQixpQkFBaUIsV0FBVyxjQUFjLGVBQWUsUUFBUSxRQUFRLGFBQWEsUUFBUSxTQUFTLFFBQVEsWUFBWSxXQUFXLE9BQU8sVUFBVSxlQUFlLFNBQVMsUUFBUSxTQUFTLEtBQUssY0FBYyxTQUFTLFNBQVMsS0FBSyxlQUFlLEtBQUssV0FBVyxTQUFTLFNBQVMsS0FBSyxhQUFhLGNBQWMsYUFBYSxLQUFLLFlBQVksTUFBTSxVQUFVLFlBQVksUUFBUSxhQUFhLFNBQVMsWUFBWSxTQUFTLFFBQVEsZ0JBQWdCLGNBQWMsYUFBYSxRQUFRLE1BQU0sV0FBVyxnQkFBZ0IsWUFBWSxTQUFTLGNBQWMsWUFBWSxTQUFTLFFBQVEsU0FBUyxXQUFXLFNBQVMsY0FBYyxZQUFZLFNBQVMsU0FBUyxjQUFjLFlBQVksU0FBUyxTQUFTLFNBQVMsY0FBYyxZQUFZLFNBQVMsU0FB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QUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxVQUFVQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLGFBQWFDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLE1BQU1DLEdBQUcsQ0FBQ3ZGLEVBQUUsRUFBRXQzRSxFQUFFLEVBQUVpSixFQUFFLEVBQUUwQyxFQUFFLEVBQUVHLEVBQUUsRUFBRU0sRUFBRSxFQUFFMEIsRUFBRSxFQUFFd0MsRUFBRSxFQUFFZSxFQUFFLEVBQUVXLEVBQUUsRUFBRWUsR0FBRyxFQUFFZ0QsR0FBRyxFQUFFNkIsR0FBRyxFQUFFNEIsR0FBRyxFQUFFZ0IsR0FBRyxFQUFFd0UsR0FBRyxFQUFFdUIsR0FBRyxFQUFFUyxHQUFHLEVBQUVTLEdBQUcsRUFBRUMsR0FBRyxFQUFFc0MsR0FBRyxFQUFFc0MsR0FBRyxFQUFFaUMsR0FBRyxHQUFHVyxHQUFHLEVBQUUwQyxHQUFHLEdBQUdzQyxHQUFHLEdBQUdHLEdBQUcsR0FBR08sR0FBRyxHQUFHa0QsR0FBRyxHQUFHVSxHQUFHLEVBQUUyQixHQUFHLEVBQUVFLEdBQUcsRUFBRThHLEdBQUcsRUFBRW84QyxHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxHQUFHQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxHQUFHQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksR0FBR0UsR0FBRyxDQUFDQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxNQUFNQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsTUFBTSxRQUFRQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsTUFBTSxRQUFRQyxNQUFNLFFBQVFDLE1BQU0sUUFBUUMsS0FBSyxRQUFRQyxLQUFLLE1BQU1DLEtBQUssUUFBUUMsTUFBTSxRQUFRQyxLQUFLLFFBQVFDLE1BQU0sUUFBUUMsS0FBSyxNQUFNQyxNQUFNLFFBQVFDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssVUFBVUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxVQUFVQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxRQUFRQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxRQUFRQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxRQUFRQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxNQUFNQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLFFBQVFDLE1BQU0sUUFBUUMsS0FBSyxRQUFRQyxLQUFLLFNBQVNDLE1BQU0sUUFBUUMsS0FBSyxRQUFRQyxLQUFLLFFBQVFDLE1BQU0sUUFBUUMsS0FBSyxRQUFRQyxNQUFNLFFBQVFDLE1BQU0sUUFBUUMsS0FBSyxRQUFRQyxNQUFNLFFBQVFDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxNQUFNLFFBQVFDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLE1BQU1DLEtBQUssS0FBS0MsS0FBSyxRQUFRQyxLQUFLLFFBQVFDLEtBQUssS0FBS0MsS0FBSyxRQUFRQyxLQUFLLFFBQVFDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxRQUFRQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxRQUFRQyxLQUFLLFFBQVFDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLFVBQVVDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxRQUFRQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssTUFBTUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssTUFBTUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssTUFBTUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLE1BQU1DLEtBQUssS0FBS0MsS0FBSyxNQUFNQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLFFBQVFDLEtBQUssUUFBUUMsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLE1BQU1DLEtBQUssU0FBU0MsS0FBSyxNQUFNQyxLQUFLLFFBQVFDLEtBQUssS0FBS0MsS0FBSyxRQUFRQyxLQUFLLE1BQU1DLEtBQUssU0FBU0MsS0FBSyxNQUFNQyxLQUFLLEtBQUtDLEtBQUssYUFBYUMsS0FBSyxLQUFLQyxLQUFLLGFBQWFDLEtBQUssVUFBVUMsS0FBSyxNQUFNQyxLQUFLLEtBQUtDLEtBQUssS0FBS0MsS0FBSyxLQUFLQyxLQUFLLEtBQUtDLE1BQU0sUUFBUUMsTUFBTSxRQUFR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TSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE9BQU9DLElBQUksUUFBUSxDQUFDRCxNQUFNLE9BQU9DLElBQUksUUFBUSxDQUFDRCxNQUFNLFFBQVFDLElBQUksU0FBUyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE9BQU9DLElBQUksUUFBUSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE9BQU9DLElBQUksUUFBUSxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE9BQU9DLElBQUksUUFBUSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLEtBQUtDLElBQUksTUFBTSxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLEtBQUtDLElBQUksT0FBTyxDQUFDRCxNQUFNLE1BQU1DLElBQUksT0FBTyxDQUFDRCxNQUFNLE9BQU9DLElBQUksU0FBYW12RSxHQUFVLFNBQVNqckYsRUFBRWQsR0FBRyxJQUFJSixFQUFFLEdBQUdXLEVBQUUsSUFB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R3U3RixHQUFHdjdGLFVBQUssRUFBTyxHQUFHdTdGLEdBQUd2N0YsVUFBSyxFQUFPLEdBQUd3N0YsR0FBR3g3RixVQUFLLEVBQU8sR0FBR3c3RixHQUFHeDdGLFVBQUssRUFBTyxHQUFHdzdGLEdBQUd4N0YsVUFBSyxFQUFPLEdBQUd3N0YsR0FBR3g3RixVQUFLLEVBQU8sR0FBR3c3RixHQUFHeDdGLFVBQUssRUFBTyxHQUFHdzdGLEdBQUd4N0YsVUFBSyxFQUFPLEdBQUd3N0YsR0FBR3g3RixVQUFLLEVBQU8sR0FBR3c3RixHQUFHeDdGLFVBQUssRUFBTyxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5N0YsR0FBR3o3RixVQUFLLEVBQU8sRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHeTdGLEdBQUd6N0YsVUFBSyxFQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBR3k3RixHQUFHejdGLFVBQUssRUFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUd5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QUUsUUFBUSxJQUFJd3pELEdBQUcsTUFBTVUsRUFBRW5mLFFBQVFtZixFQUFFbmYsU0FBUyxRQUFRLEdBQUcyZSxFQUFFLE1BQU1NLElBQUksUUFBUTl4QixFQUFFNDNGLGVBQWV6NkcsS0FBSys5RixVQUFVMytHLEVBQUU0Z0IsS0FBS3cwRyxTQUFTNzFILEVBQUVnQyxFQUFFeTBCLE1BQU0sT0FBT3owQixRQUFRMGQsUUFBUUQsSUFBSSw4R0FBOEcsQ0FBQyxvQkFBb0IsR0FBRyxlQUFlLEdBQUcsMkJBQTJCLEdBQUcsY0FBYyxNQUFNLEdBQUcsQ0FBQyxJQUF6eHV4QixDQUE4eHV4QixNIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNCk7XG4iLCIvKipcbiogbWF0dGVyLWpzIDAuMTQuMiBieSBAbGlhYnJ1IDIwMTgtMDYtMTFcbiogaHR0cDovL2JybS5pby9tYXR0ZXItanMvXG4qIExpY2Vuc2UgTUlUXG4qL1xuXG4vKipcbiAqIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuICogXG4gKiBDb3B5cmlnaHQgKGMpIExpYW0gQnJ1bW1pdHQgYW5kIGNvbnRyaWJ1dG9ycy5cbiAqIFxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICogXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gKiBcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuICogVEhFIFNPRlRXQVJFLlxuICovXG5cbihmdW5jdGlvbihmKXtpZih0eXBlb2YgZXhwb3J0cz09PVwib2JqZWN0XCImJnR5cGVvZiBtb2R1bGUhPT1cInVuZGVmaW5lZFwiKXttb2R1bGUuZXhwb3J0cz1mKCl9ZWxzZSBpZih0eXBlb2YgZGVmaW5lPT09XCJmdW5jdGlvblwiJiZkZWZpbmUuYW1kKXtkZWZpbmUoW10sZil9ZWxzZXt2YXIgZztpZih0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09XCJ1bmRlZmluZWRcIil7Zz1nbG9iYWx9ZWxzZSBpZih0eXBlb2Ygc2VsZiE9PVwidW5kZWZpbmVkXCIpe2c9c2VsZn1lbHNle2c9dGhpc31nLk1hdHRlciA9IGYoKX19KShmdW5jdGlvbigpe3ZhciBkZWZpbmUsbW9kdWxlLGV4cG9ydHM7cmV0dXJuIChmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkoezE6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLkJvZHlgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBjcmVhdGluZyBhbmQgbWFuaXB1bGF0aW5nIGJvZHkgbW9kZWxzLlxuKiBBIGBNYXR0ZXIuQm9keWAgaXMgYSByaWdpZCBib2R5IHRoYXQgY2FuIGJlIHNpbXVsYXRlZCBieSBhIGBNYXR0ZXIuRW5naW5lYC5cbiogRmFjdG9yaWVzIGZvciBjb21tb25seSB1c2VkIGJvZHkgY29uZmlndXJhdGlvbnMgKHN1Y2ggYXMgcmVjdGFuZ2xlcywgY2lyY2xlcyBhbmQgb3RoZXIgcG9seWdvbnMpIGNhbiBiZSBmb3VuZCBpbiB0aGUgbW9kdWxlIGBNYXR0ZXIuQm9kaWVzYC5cbipcbiogU2VlIHRoZSBpbmNsdWRlZCB1c2FnZSBbZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKS5cblxuKiBAY2xhc3MgQm9keVxuKi9cblxudmFyIEJvZHkgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBCb2R5O1xuXG52YXIgVmVydGljZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZXJ0aWNlcycpO1xudmFyIFZlY3RvciA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L1ZlY3RvcicpO1xudmFyIFNsZWVwaW5nID0gX2RlcmVxXygnLi4vY29yZS9TbGVlcGluZycpO1xudmFyIFJlbmRlciA9IF9kZXJlcV8oJy4uL3JlbmRlci9SZW5kZXInKTtcbnZhciBDb21tb24gPSBfZGVyZXFfKCcuLi9jb3JlL0NvbW1vbicpO1xudmFyIEJvdW5kcyA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L0JvdW5kcycpO1xudmFyIEF4ZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9BeGVzJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIEJvZHkuX2luZXJ0aWFTY2FsZSA9IDQ7XG4gICAgQm9keS5fbmV4dENvbGxpZGluZ0dyb3VwSWQgPSAxO1xuICAgIEJvZHkuX25leHROb25Db2xsaWRpbmdHcm91cElkID0gLTE7XG4gICAgQm9keS5fbmV4dENhdGVnb3J5ID0gMHgwMDAxO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyByaWdpZCBib2R5IG1vZGVsLiBUaGUgb3B0aW9ucyBwYXJhbWV0ZXIgaXMgYW4gb2JqZWN0IHRoYXQgc3BlY2lmaWVzIGFueSBwcm9wZXJ0aWVzIHlvdSB3aXNoIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0cy5cbiAgICAgKiBBbGwgcHJvcGVydGllcyBoYXZlIGRlZmF1bHQgdmFsdWVzLCBhbmQgbWFueSBhcmUgcHJlLWNhbGN1bGF0ZWQgYXV0b21hdGljYWxseSBiYXNlZCBvbiBvdGhlciBwcm9wZXJ0aWVzLlxuICAgICAqIFZlcnRpY2VzIG11c3QgYmUgc3BlY2lmaWVkIGluIGNsb2Nrd2lzZSBvcmRlci5cbiAgICAgKiBTZWUgdGhlIHByb3BlcnRpZXMgc2VjdGlvbiBiZWxvdyBmb3IgZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gd2hhdCB5b3UgY2FuIHBhc3MgdmlhIHRoZSBgb3B0aW9uc2Agb2JqZWN0LlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHt9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJuIHtib2R5fSBib2R5XG4gICAgICovXG4gICAgQm9keS5jcmVhdGUgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIGlkOiBDb21tb24ubmV4dElkKCksXG4gICAgICAgICAgICB0eXBlOiAnYm9keScsXG4gICAgICAgICAgICBsYWJlbDogJ0JvZHknLFxuICAgICAgICAgICAgcGFydHM6IFtdLFxuICAgICAgICAgICAgcGx1Z2luOiB7fSxcbiAgICAgICAgICAgIGFuZ2xlOiAwLFxuICAgICAgICAgICAgdmVydGljZXM6IFZlcnRpY2VzLmZyb21QYXRoKCdMIDAgMCBMIDQwIDAgTCA0MCA0MCBMIDAgNDAnKSxcbiAgICAgICAgICAgIHBvc2l0aW9uOiB7IHg6IDAsIHk6IDAgfSxcbiAgICAgICAgICAgIGZvcmNlOiB7IHg6IDAsIHk6IDAgfSxcbiAgICAgICAgICAgIHRvcnF1ZTogMCxcbiAgICAgICAgICAgIHBvc2l0aW9uSW1wdWxzZTogeyB4OiAwLCB5OiAwIH0sXG4gICAgICAgICAgICBjb25zdHJhaW50SW1wdWxzZTogeyB4OiAwLCB5OiAwLCBhbmdsZTogMCB9LFxuICAgICAgICAgICAgdG90YWxDb250YWN0czogMCxcbiAgICAgICAgICAgIHNwZWVkOiAwLFxuICAgICAgICAgICAgYW5ndWxhclNwZWVkOiAwLFxuICAgICAgICAgICAgdmVsb2NpdHk6IHsgeDogMCwgeTogMCB9LFxuICAgICAgICAgICAgYW5ndWxhclZlbG9jaXR5OiAwLFxuICAgICAgICAgICAgaXNTZW5zb3I6IGZhbHNlLFxuICAgICAgICAgICAgaXNTdGF0aWM6IGZhbHNlLFxuICAgICAgICAgICAgaXNTbGVlcGluZzogZmFsc2UsXG4gICAgICAgICAgICBtb3Rpb246IDAsXG4gICAgICAgICAgICBzbGVlcFRocmVzaG9sZDogNjAsXG4gICAgICAgICAgICBkZW5zaXR5OiAwLjAwMSxcbiAgICAgICAgICAgIHJlc3RpdHV0aW9uOiAwLFxuICAgICAgICAgICAgZnJpY3Rpb246IDAuMSxcbiAgICAgICAgICAgIGZyaWN0aW9uU3RhdGljOiAwLjUsXG4gICAgICAgICAgICBmcmljdGlvbkFpcjogMC4wMSxcbiAgICAgICAgICAgIGNvbGxpc2lvbkZpbHRlcjoge1xuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiAweDAwMDEsXG4gICAgICAgICAgICAgICAgbWFzazogMHhGRkZGRkZGRixcbiAgICAgICAgICAgICAgICBncm91cDogMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNsb3A6IDAuMDUsXG4gICAgICAgICAgICB0aW1lU2NhbGU6IDEsXG4gICAgICAgICAgICByZW5kZXI6IHtcbiAgICAgICAgICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgc3ByaXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIHhTY2FsZTogMSxcbiAgICAgICAgICAgICAgICAgICAgeVNjYWxlOiAxLFxuICAgICAgICAgICAgICAgICAgICB4T2Zmc2V0OiAwLFxuICAgICAgICAgICAgICAgICAgICB5T2Zmc2V0OiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgYm9keSA9IENvbW1vbi5leHRlbmQoZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgICAgIF9pbml0UHJvcGVydGllcyhib2R5LCBvcHRpb25zKTtcblxuICAgICAgICByZXR1cm4gYm9keTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgbmV4dCB1bmlxdWUgZ3JvdXAgaW5kZXggZm9yIHdoaWNoIGJvZGllcyB3aWxsIGNvbGxpZGUuXG4gICAgICogSWYgYGlzTm9uQ29sbGlkaW5nYCBpcyBgdHJ1ZWAsIHJldHVybnMgdGhlIG5leHQgdW5pcXVlIGdyb3VwIGluZGV4IGZvciB3aGljaCBib2RpZXMgd2lsbCBfbm90XyBjb2xsaWRlLlxuICAgICAqIFNlZSBgYm9keS5jb2xsaXNpb25GaWx0ZXJgIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAqIEBtZXRob2QgbmV4dEdyb3VwXG4gICAgICogQHBhcmFtIHtib29sfSBbaXNOb25Db2xsaWRpbmc9ZmFsc2VdXG4gICAgICogQHJldHVybiB7TnVtYmVyfSBVbmlxdWUgZ3JvdXAgaW5kZXhcbiAgICAgKi9cbiAgICBCb2R5Lm5leHRHcm91cCA9IGZ1bmN0aW9uKGlzTm9uQ29sbGlkaW5nKSB7XG4gICAgICAgIGlmIChpc05vbkNvbGxpZGluZylcbiAgICAgICAgICAgIHJldHVybiBCb2R5Ll9uZXh0Tm9uQ29sbGlkaW5nR3JvdXBJZC0tO1xuXG4gICAgICAgIHJldHVybiBCb2R5Ll9uZXh0Q29sbGlkaW5nR3JvdXBJZCsrO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBuZXh0IHVuaXF1ZSBjYXRlZ29yeSBiaXRmaWVsZCAoc3RhcnRpbmcgYWZ0ZXIgdGhlIGluaXRpYWwgZGVmYXVsdCBjYXRlZ29yeSBgMHgwMDAxYCkuXG4gICAgICogVGhlcmUgYXJlIDMyIGF2YWlsYWJsZS4gU2VlIGBib2R5LmNvbGxpc2lvbkZpbHRlcmAgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAgICogQG1ldGhvZCBuZXh0Q2F0ZWdvcnlcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9IFVuaXF1ZSBjYXRlZ29yeSBiaXRmaWVsZFxuICAgICAqL1xuICAgIEJvZHkubmV4dENhdGVnb3J5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIEJvZHkuX25leHRDYXRlZ29yeSA9IEJvZHkuX25leHRDYXRlZ29yeSA8PCAxO1xuICAgICAgICByZXR1cm4gQm9keS5fbmV4dENhdGVnb3J5O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXNlcyBib2R5IHByb3BlcnRpZXMuXG4gICAgICogQG1ldGhvZCBfaW5pdFByb3BlcnRpZXNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7fSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICB2YXIgX2luaXRQcm9wZXJ0aWVzID0gZnVuY3Rpb24oYm9keSwgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgICAgICAvLyBpbml0IHJlcXVpcmVkIHByb3BlcnRpZXMgKG9yZGVyIGlzIGltcG9ydGFudClcbiAgICAgICAgQm9keS5zZXQoYm9keSwge1xuICAgICAgICAgICAgYm91bmRzOiBib2R5LmJvdW5kcyB8fCBCb3VuZHMuY3JlYXRlKGJvZHkudmVydGljZXMpLFxuICAgICAgICAgICAgcG9zaXRpb25QcmV2OiBib2R5LnBvc2l0aW9uUHJldiB8fCBWZWN0b3IuY2xvbmUoYm9keS5wb3NpdGlvbiksXG4gICAgICAgICAgICBhbmdsZVByZXY6IGJvZHkuYW5nbGVQcmV2IHx8IGJvZHkuYW5nbGUsXG4gICAgICAgICAgICB2ZXJ0aWNlczogYm9keS52ZXJ0aWNlcyxcbiAgICAgICAgICAgIHBhcnRzOiBib2R5LnBhcnRzIHx8IFtib2R5XSxcbiAgICAgICAgICAgIGlzU3RhdGljOiBib2R5LmlzU3RhdGljLFxuICAgICAgICAgICAgaXNTbGVlcGluZzogYm9keS5pc1NsZWVwaW5nLFxuICAgICAgICAgICAgcGFyZW50OiBib2R5LnBhcmVudCB8fCBib2R5XG4gICAgICAgIH0pO1xuXG4gICAgICAgIFZlcnRpY2VzLnJvdGF0ZShib2R5LnZlcnRpY2VzLCBib2R5LmFuZ2xlLCBib2R5LnBvc2l0aW9uKTtcbiAgICAgICAgQXhlcy5yb3RhdGUoYm9keS5heGVzLCBib2R5LmFuZ2xlKTtcbiAgICAgICAgQm91bmRzLnVwZGF0ZShib2R5LmJvdW5kcywgYm9keS52ZXJ0aWNlcywgYm9keS52ZWxvY2l0eSk7XG5cbiAgICAgICAgLy8gYWxsb3cgb3B0aW9ucyB0byBvdmVycmlkZSB0aGUgYXV0b21hdGljYWxseSBjYWxjdWxhdGVkIHByb3BlcnRpZXNcbiAgICAgICAgQm9keS5zZXQoYm9keSwge1xuICAgICAgICAgICAgYXhlczogb3B0aW9ucy5heGVzIHx8IGJvZHkuYXhlcyxcbiAgICAgICAgICAgIGFyZWE6IG9wdGlvbnMuYXJlYSB8fCBib2R5LmFyZWEsXG4gICAgICAgICAgICBtYXNzOiBvcHRpb25zLm1hc3MgfHwgYm9keS5tYXNzLFxuICAgICAgICAgICAgaW5lcnRpYTogb3B0aW9ucy5pbmVydGlhIHx8IGJvZHkuaW5lcnRpYVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyByZW5kZXIgcHJvcGVydGllc1xuICAgICAgICB2YXIgZGVmYXVsdEZpbGxTdHlsZSA9IChib2R5LmlzU3RhdGljID8gJyMyZTJiNDQnIDogQ29tbW9uLmNob29zZShbJyMwMDZCQTYnLCAnIzA0OTZGRicsICcjRkZCQzQyJywgJyNEODExNTknLCAnIzhGMkQ1NiddKSksXG4gICAgICAgICAgICBkZWZhdWx0U3Ryb2tlU3R5bGUgPSAnIzAwMCc7XG4gICAgICAgIGJvZHkucmVuZGVyLmZpbGxTdHlsZSA9IGJvZHkucmVuZGVyLmZpbGxTdHlsZSB8fCBkZWZhdWx0RmlsbFN0eWxlO1xuICAgICAgICBib2R5LnJlbmRlci5zdHJva2VTdHlsZSA9IGJvZHkucmVuZGVyLnN0cm9rZVN0eWxlIHx8IGRlZmF1bHRTdHJva2VTdHlsZTtcbiAgICAgICAgYm9keS5yZW5kZXIuc3ByaXRlLnhPZmZzZXQgKz0gLShib2R5LmJvdW5kcy5taW4ueCAtIGJvZHkucG9zaXRpb24ueCkgLyAoYm9keS5ib3VuZHMubWF4LnggLSBib2R5LmJvdW5kcy5taW4ueCk7XG4gICAgICAgIGJvZHkucmVuZGVyLnNwcml0ZS55T2Zmc2V0ICs9IC0oYm9keS5ib3VuZHMubWluLnkgLSBib2R5LnBvc2l0aW9uLnkpIC8gKGJvZHkuYm91bmRzLm1heC55IC0gYm9keS5ib3VuZHMubWluLnkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHaXZlbiBhIHByb3BlcnR5IGFuZCBhIHZhbHVlIChvciBtYXAgb2YpLCBzZXRzIHRoZSBwcm9wZXJ0eShzKSBvbiB0aGUgYm9keSwgdXNpbmcgdGhlIGFwcHJvcHJpYXRlIHNldHRlciBmdW5jdGlvbnMgaWYgdGhleSBleGlzdC5cbiAgICAgKiBQcmVmZXIgdG8gdXNlIHRoZSBhY3R1YWwgc2V0dGVyIGZ1bmN0aW9ucyBpbiBwZXJmb3JtYW5jZSBjcml0aWNhbCBzaXR1YXRpb25zLlxuICAgICAqIEBtZXRob2Qgc2V0XG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHt9IHNldHRpbmdzIEEgcHJvcGVydHkgbmFtZSAob3IgbWFwIG9mIHByb3BlcnRpZXMgYW5kIHZhbHVlcykgdG8gc2V0IG9uIHRoZSBib2R5LlxuICAgICAqIEBwYXJhbSB7fSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0IGlmIGBzZXR0aW5nc2AgaXMgYSBzaW5nbGUgcHJvcGVydHkgbmFtZS5cbiAgICAgKi9cbiAgICBCb2R5LnNldCA9IGZ1bmN0aW9uKGJvZHksIHNldHRpbmdzLCB2YWx1ZSkge1xuICAgICAgICB2YXIgcHJvcGVydHk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBzZXR0aW5ncyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHByb3BlcnR5ID0gc2V0dGluZ3M7XG4gICAgICAgICAgICBzZXR0aW5ncyA9IHt9O1xuICAgICAgICAgICAgc2V0dGluZ3NbcHJvcGVydHldID0gdmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHByb3BlcnR5IGluIHNldHRpbmdzKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHNldHRpbmdzW3Byb3BlcnR5XTtcblxuICAgICAgICAgICAgaWYgKCFzZXR0aW5ncy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIHN3aXRjaCAocHJvcGVydHkpIHtcblxuICAgICAgICAgICAgY2FzZSAnaXNTdGF0aWMnOlxuICAgICAgICAgICAgICAgIEJvZHkuc2V0U3RhdGljKGJvZHksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2lzU2xlZXBpbmcnOlxuICAgICAgICAgICAgICAgIFNsZWVwaW5nLnNldChib2R5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdtYXNzJzpcbiAgICAgICAgICAgICAgICBCb2R5LnNldE1hc3MoYm9keSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGVuc2l0eSc6XG4gICAgICAgICAgICAgICAgQm9keS5zZXREZW5zaXR5KGJvZHksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2luZXJ0aWEnOlxuICAgICAgICAgICAgICAgIEJvZHkuc2V0SW5lcnRpYShib2R5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd2ZXJ0aWNlcyc6XG4gICAgICAgICAgICAgICAgQm9keS5zZXRWZXJ0aWNlcyhib2R5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdwb3NpdGlvbic6XG4gICAgICAgICAgICAgICAgQm9keS5zZXRQb3NpdGlvbihib2R5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdhbmdsZSc6XG4gICAgICAgICAgICAgICAgQm9keS5zZXRBbmdsZShib2R5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd2ZWxvY2l0eSc6XG4gICAgICAgICAgICAgICAgQm9keS5zZXRWZWxvY2l0eShib2R5LCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdhbmd1bGFyVmVsb2NpdHknOlxuICAgICAgICAgICAgICAgIEJvZHkuc2V0QW5ndWxhclZlbG9jaXR5KGJvZHksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3BhcnRzJzpcbiAgICAgICAgICAgICAgICBCb2R5LnNldFBhcnRzKGJvZHksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYm9keVtwcm9wZXJ0eV0gPSB2YWx1ZTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGJvZHkgYXMgc3RhdGljLCBpbmNsdWRpbmcgaXNTdGF0aWMgZmxhZyBhbmQgc2V0dGluZyBtYXNzIGFuZCBpbmVydGlhIHRvIEluZmluaXR5LlxuICAgICAqIEBtZXRob2Qgc2V0U3RhdGljXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHtib29sfSBpc1N0YXRpY1xuICAgICAqL1xuICAgIEJvZHkuc2V0U3RhdGljID0gZnVuY3Rpb24oYm9keSwgaXNTdGF0aWMpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2R5LnBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFydCA9IGJvZHkucGFydHNbaV07XG4gICAgICAgICAgICBwYXJ0LmlzU3RhdGljID0gaXNTdGF0aWM7XG5cbiAgICAgICAgICAgIGlmIChpc1N0YXRpYykge1xuICAgICAgICAgICAgICAgIHBhcnQuX29yaWdpbmFsID0ge1xuICAgICAgICAgICAgICAgICAgICByZXN0aXR1dGlvbjogcGFydC5yZXN0aXR1dGlvbixcbiAgICAgICAgICAgICAgICAgICAgZnJpY3Rpb246IHBhcnQuZnJpY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgIG1hc3M6IHBhcnQubWFzcyxcbiAgICAgICAgICAgICAgICAgICAgaW5lcnRpYTogcGFydC5pbmVydGlhLFxuICAgICAgICAgICAgICAgICAgICBkZW5zaXR5OiBwYXJ0LmRlbnNpdHksXG4gICAgICAgICAgICAgICAgICAgIGludmVyc2VNYXNzOiBwYXJ0LmludmVyc2VNYXNzLFxuICAgICAgICAgICAgICAgICAgICBpbnZlcnNlSW5lcnRpYTogcGFydC5pbnZlcnNlSW5lcnRpYVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBwYXJ0LnJlc3RpdHV0aW9uID0gMDtcbiAgICAgICAgICAgICAgICBwYXJ0LmZyaWN0aW9uID0gMTtcbiAgICAgICAgICAgICAgICBwYXJ0Lm1hc3MgPSBwYXJ0LmluZXJ0aWEgPSBwYXJ0LmRlbnNpdHkgPSBJbmZpbml0eTtcbiAgICAgICAgICAgICAgICBwYXJ0LmludmVyc2VNYXNzID0gcGFydC5pbnZlcnNlSW5lcnRpYSA9IDA7XG5cbiAgICAgICAgICAgICAgICBwYXJ0LnBvc2l0aW9uUHJldi54ID0gcGFydC5wb3NpdGlvbi54O1xuICAgICAgICAgICAgICAgIHBhcnQucG9zaXRpb25QcmV2LnkgPSBwYXJ0LnBvc2l0aW9uLnk7XG4gICAgICAgICAgICAgICAgcGFydC5hbmdsZVByZXYgPSBwYXJ0LmFuZ2xlO1xuICAgICAgICAgICAgICAgIHBhcnQuYW5ndWxhclZlbG9jaXR5ID0gMDtcbiAgICAgICAgICAgICAgICBwYXJ0LnNwZWVkID0gMDtcbiAgICAgICAgICAgICAgICBwYXJ0LmFuZ3VsYXJTcGVlZCA9IDA7XG4gICAgICAgICAgICAgICAgcGFydC5tb3Rpb24gPSAwO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJ0Ll9vcmlnaW5hbCkge1xuICAgICAgICAgICAgICAgIHBhcnQucmVzdGl0dXRpb24gPSBwYXJ0Ll9vcmlnaW5hbC5yZXN0aXR1dGlvbjtcbiAgICAgICAgICAgICAgICBwYXJ0LmZyaWN0aW9uID0gcGFydC5fb3JpZ2luYWwuZnJpY3Rpb247XG4gICAgICAgICAgICAgICAgcGFydC5tYXNzID0gcGFydC5fb3JpZ2luYWwubWFzcztcbiAgICAgICAgICAgICAgICBwYXJ0LmluZXJ0aWEgPSBwYXJ0Ll9vcmlnaW5hbC5pbmVydGlhO1xuICAgICAgICAgICAgICAgIHBhcnQuZGVuc2l0eSA9IHBhcnQuX29yaWdpbmFsLmRlbnNpdHk7XG4gICAgICAgICAgICAgICAgcGFydC5pbnZlcnNlTWFzcyA9IHBhcnQuX29yaWdpbmFsLmludmVyc2VNYXNzO1xuICAgICAgICAgICAgICAgIHBhcnQuaW52ZXJzZUluZXJ0aWEgPSBwYXJ0Ll9vcmlnaW5hbC5pbnZlcnNlSW5lcnRpYTtcblxuICAgICAgICAgICAgICAgIGRlbGV0ZSBwYXJ0Ll9vcmlnaW5hbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBtYXNzIG9mIHRoZSBib2R5LiBJbnZlcnNlIG1hc3MsIGRlbnNpdHkgYW5kIGluZXJ0aWEgYXJlIGF1dG9tYXRpY2FsbHkgdXBkYXRlZCB0byByZWZsZWN0IHRoZSBjaGFuZ2UuXG4gICAgICogQG1ldGhvZCBzZXRNYXNzXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG1hc3NcbiAgICAgKi9cbiAgICBCb2R5LnNldE1hc3MgPSBmdW5jdGlvbihib2R5LCBtYXNzKSB7XG4gICAgICAgIHZhciBtb21lbnQgPSBib2R5LmluZXJ0aWEgLyAoYm9keS5tYXNzIC8gNik7XG4gICAgICAgIGJvZHkuaW5lcnRpYSA9IG1vbWVudCAqIChtYXNzIC8gNik7XG4gICAgICAgIGJvZHkuaW52ZXJzZUluZXJ0aWEgPSAxIC8gYm9keS5pbmVydGlhO1xuXG4gICAgICAgIGJvZHkubWFzcyA9IG1hc3M7XG4gICAgICAgIGJvZHkuaW52ZXJzZU1hc3MgPSAxIC8gYm9keS5tYXNzO1xuICAgICAgICBib2R5LmRlbnNpdHkgPSBib2R5Lm1hc3MgLyBib2R5LmFyZWE7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGRlbnNpdHkgb2YgdGhlIGJvZHkuIE1hc3MgYW5kIGluZXJ0aWEgYXJlIGF1dG9tYXRpY2FsbHkgdXBkYXRlZCB0byByZWZsZWN0IHRoZSBjaGFuZ2UuXG4gICAgICogQG1ldGhvZCBzZXREZW5zaXR5XG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGRlbnNpdHlcbiAgICAgKi9cbiAgICBCb2R5LnNldERlbnNpdHkgPSBmdW5jdGlvbihib2R5LCBkZW5zaXR5KSB7XG4gICAgICAgIEJvZHkuc2V0TWFzcyhib2R5LCBkZW5zaXR5ICogYm9keS5hcmVhKTtcbiAgICAgICAgYm9keS5kZW5zaXR5ID0gZGVuc2l0eTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgbW9tZW50IG9mIGluZXJ0aWEgKGkuZS4gc2Vjb25kIG1vbWVudCBvZiBhcmVhKSBvZiB0aGUgYm9keSBvZiB0aGUgYm9keS4gXG4gICAgICogSW52ZXJzZSBpbmVydGlhIGlzIGF1dG9tYXRpY2FsbHkgdXBkYXRlZCB0byByZWZsZWN0IHRoZSBjaGFuZ2UuIE1hc3MgaXMgbm90IGNoYW5nZWQuXG4gICAgICogQG1ldGhvZCBzZXRJbmVydGlhXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGluZXJ0aWFcbiAgICAgKi9cbiAgICBCb2R5LnNldEluZXJ0aWEgPSBmdW5jdGlvbihib2R5LCBpbmVydGlhKSB7XG4gICAgICAgIGJvZHkuaW5lcnRpYSA9IGluZXJ0aWE7XG4gICAgICAgIGJvZHkuaW52ZXJzZUluZXJ0aWEgPSAxIC8gYm9keS5pbmVydGlhO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBib2R5J3MgdmVydGljZXMgYW5kIHVwZGF0ZXMgYm9keSBwcm9wZXJ0aWVzIGFjY29yZGluZ2x5LCBpbmNsdWRpbmcgaW5lcnRpYSwgYXJlYSBhbmQgbWFzcyAod2l0aCByZXNwZWN0IHRvIGBib2R5LmRlbnNpdHlgKS5cbiAgICAgKiBWZXJ0aWNlcyB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgdHJhbnNmb3JtZWQgdG8gYmUgb3JpZW50YXRlZCBhcm91bmQgdGhlaXIgY2VudHJlIG9mIG1hc3MgYXMgdGhlIG9yaWdpbi5cbiAgICAgKiBUaGV5IGFyZSB0aGVuIGF1dG9tYXRpY2FsbHkgdHJhbnNsYXRlZCB0byB3b3JsZCBzcGFjZSBiYXNlZCBvbiBgYm9keS5wb3NpdGlvbmAuXG4gICAgICpcbiAgICAgKiBUaGUgYHZlcnRpY2VzYCBhcmd1bWVudCBzaG91bGQgYmUgcGFzc2VkIGFzIGFuIGFycmF5IG9mIGBNYXR0ZXIuVmVjdG9yYCBwb2ludHMgKG9yIGEgYE1hdHRlci5WZXJ0aWNlc2AgYXJyYXkpLlxuICAgICAqIFZlcnRpY2VzIG11c3QgZm9ybSBhIGNvbnZleCBodWxsLCBjb25jYXZlIGh1bGxzIGFyZSBub3Qgc3VwcG9ydGVkLlxuICAgICAqXG4gICAgICogQG1ldGhvZCBzZXRWZXJ0aWNlc1xuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7dmVjdG9yW119IHZlcnRpY2VzXG4gICAgICovXG4gICAgQm9keS5zZXRWZXJ0aWNlcyA9IGZ1bmN0aW9uKGJvZHksIHZlcnRpY2VzKSB7XG4gICAgICAgIC8vIGNoYW5nZSB2ZXJ0aWNlc1xuICAgICAgICBpZiAodmVydGljZXNbMF0uYm9keSA9PT0gYm9keSkge1xuICAgICAgICAgICAgYm9keS52ZXJ0aWNlcyA9IHZlcnRpY2VzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYm9keS52ZXJ0aWNlcyA9IFZlcnRpY2VzLmNyZWF0ZSh2ZXJ0aWNlcywgYm9keSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB1cGRhdGUgcHJvcGVydGllc1xuICAgICAgICBib2R5LmF4ZXMgPSBBeGVzLmZyb21WZXJ0aWNlcyhib2R5LnZlcnRpY2VzKTtcbiAgICAgICAgYm9keS5hcmVhID0gVmVydGljZXMuYXJlYShib2R5LnZlcnRpY2VzKTtcbiAgICAgICAgQm9keS5zZXRNYXNzKGJvZHksIGJvZHkuZGVuc2l0eSAqIGJvZHkuYXJlYSk7XG5cbiAgICAgICAgLy8gb3JpZW50IHZlcnRpY2VzIGFyb3VuZCB0aGUgY2VudHJlIG9mIG1hc3MgYXQgb3JpZ2luICgwLCAwKVxuICAgICAgICB2YXIgY2VudHJlID0gVmVydGljZXMuY2VudHJlKGJvZHkudmVydGljZXMpO1xuICAgICAgICBWZXJ0aWNlcy50cmFuc2xhdGUoYm9keS52ZXJ0aWNlcywgY2VudHJlLCAtMSk7XG5cbiAgICAgICAgLy8gdXBkYXRlIGluZXJ0aWEgd2hpbGUgdmVydGljZXMgYXJlIGF0IG9yaWdpbiAoMCwgMClcbiAgICAgICAgQm9keS5zZXRJbmVydGlhKGJvZHksIEJvZHkuX2luZXJ0aWFTY2FsZSAqIFZlcnRpY2VzLmluZXJ0aWEoYm9keS52ZXJ0aWNlcywgYm9keS5tYXNzKSk7XG5cbiAgICAgICAgLy8gdXBkYXRlIGdlb21ldHJ5XG4gICAgICAgIFZlcnRpY2VzLnRyYW5zbGF0ZShib2R5LnZlcnRpY2VzLCBib2R5LnBvc2l0aW9uKTtcbiAgICAgICAgQm91bmRzLnVwZGF0ZShib2R5LmJvdW5kcywgYm9keS52ZXJ0aWNlcywgYm9keS52ZWxvY2l0eSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHBhcnRzIG9mIHRoZSBgYm9keWAgYW5kIHVwZGF0ZXMgbWFzcywgaW5lcnRpYSBhbmQgY2VudHJvaWQuXG4gICAgICogRWFjaCBwYXJ0IHdpbGwgaGF2ZSBpdHMgcGFyZW50IHNldCB0byBgYm9keWAuXG4gICAgICogQnkgZGVmYXVsdCB0aGUgY29udmV4IGh1bGwgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IGNvbXB1dGVkIGFuZCBzZXQgb24gYGJvZHlgLCB1bmxlc3MgYGF1dG9IdWxsYCBpcyBzZXQgdG8gYGZhbHNlLmBcbiAgICAgKiBOb3RlIHRoYXQgdGhpcyBtZXRob2Qgd2lsbCBlbnN1cmUgdGhhdCB0aGUgZmlyc3QgcGFydCBpbiBgYm9keS5wYXJ0c2Agd2lsbCBhbHdheXMgYmUgdGhlIGBib2R5YC5cbiAgICAgKiBAbWV0aG9kIHNldFBhcnRzXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIFtib2R5XSBwYXJ0c1xuICAgICAqIEBwYXJhbSB7Ym9vbH0gW2F1dG9IdWxsPXRydWVdXG4gICAgICovXG4gICAgQm9keS5zZXRQYXJ0cyA9IGZ1bmN0aW9uKGJvZHksIHBhcnRzLCBhdXRvSHVsbCkge1xuICAgICAgICB2YXIgaTtcblxuICAgICAgICAvLyBhZGQgYWxsIHRoZSBwYXJ0cywgZW5zdXJpbmcgdGhhdCB0aGUgZmlyc3QgcGFydCBpcyBhbHdheXMgdGhlIHBhcmVudCBib2R5XG4gICAgICAgIHBhcnRzID0gcGFydHMuc2xpY2UoMCk7XG4gICAgICAgIGJvZHkucGFydHMubGVuZ3RoID0gMDtcbiAgICAgICAgYm9keS5wYXJ0cy5wdXNoKGJvZHkpO1xuICAgICAgICBib2R5LnBhcmVudCA9IGJvZHk7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFydCA9IHBhcnRzW2ldO1xuICAgICAgICAgICAgaWYgKHBhcnQgIT09IGJvZHkpIHtcbiAgICAgICAgICAgICAgICBwYXJ0LnBhcmVudCA9IGJvZHk7XG4gICAgICAgICAgICAgICAgYm9keS5wYXJ0cy5wdXNoKHBhcnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGJvZHkucGFydHMubGVuZ3RoID09PSAxKVxuICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIGF1dG9IdWxsID0gdHlwZW9mIGF1dG9IdWxsICE9PSAndW5kZWZpbmVkJyA/IGF1dG9IdWxsIDogdHJ1ZTtcblxuICAgICAgICAvLyBmaW5kIHRoZSBjb252ZXggaHVsbCBvZiBhbGwgcGFydHMgdG8gc2V0IG9uIHRoZSBwYXJlbnQgYm9keVxuICAgICAgICBpZiAoYXV0b0h1bGwpIHtcbiAgICAgICAgICAgIHZhciB2ZXJ0aWNlcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmVydGljZXMgPSB2ZXJ0aWNlcy5jb25jYXQocGFydHNbaV0udmVydGljZXMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBWZXJ0aWNlcy5jbG9ja3dpc2VTb3J0KHZlcnRpY2VzKTtcblxuICAgICAgICAgICAgdmFyIGh1bGwgPSBWZXJ0aWNlcy5odWxsKHZlcnRpY2VzKSxcbiAgICAgICAgICAgICAgICBodWxsQ2VudHJlID0gVmVydGljZXMuY2VudHJlKGh1bGwpO1xuXG4gICAgICAgICAgICBCb2R5LnNldFZlcnRpY2VzKGJvZHksIGh1bGwpO1xuICAgICAgICAgICAgVmVydGljZXMudHJhbnNsYXRlKGJvZHkudmVydGljZXMsIGh1bGxDZW50cmUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gc3VtIHRoZSBwcm9wZXJ0aWVzIG9mIGFsbCBjb21wb3VuZCBwYXJ0cyBvZiB0aGUgcGFyZW50IGJvZHlcbiAgICAgICAgdmFyIHRvdGFsID0gQm9keS5fdG90YWxQcm9wZXJ0aWVzKGJvZHkpO1xuXG4gICAgICAgIGJvZHkuYXJlYSA9IHRvdGFsLmFyZWE7XG4gICAgICAgIGJvZHkucGFyZW50ID0gYm9keTtcbiAgICAgICAgYm9keS5wb3NpdGlvbi54ID0gdG90YWwuY2VudHJlLng7XG4gICAgICAgIGJvZHkucG9zaXRpb24ueSA9IHRvdGFsLmNlbnRyZS55O1xuICAgICAgICBib2R5LnBvc2l0aW9uUHJldi54ID0gdG90YWwuY2VudHJlLng7XG4gICAgICAgIGJvZHkucG9zaXRpb25QcmV2LnkgPSB0b3RhbC5jZW50cmUueTtcblxuICAgICAgICBCb2R5LnNldE1hc3MoYm9keSwgdG90YWwubWFzcyk7XG4gICAgICAgIEJvZHkuc2V0SW5lcnRpYShib2R5LCB0b3RhbC5pbmVydGlhKTtcbiAgICAgICAgQm9keS5zZXRQb3NpdGlvbihib2R5LCB0b3RhbC5jZW50cmUpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBwb3NpdGlvbiBvZiB0aGUgYm9keSBpbnN0YW50bHkuIFZlbG9jaXR5LCBhbmdsZSwgZm9yY2UgZXRjLiBhcmUgdW5jaGFuZ2VkLlxuICAgICAqIEBtZXRob2Qgc2V0UG9zaXRpb25cbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gcG9zaXRpb25cbiAgICAgKi9cbiAgICBCb2R5LnNldFBvc2l0aW9uID0gZnVuY3Rpb24oYm9keSwgcG9zaXRpb24pIHtcbiAgICAgICAgdmFyIGRlbHRhID0gVmVjdG9yLnN1Yihwb3NpdGlvbiwgYm9keS5wb3NpdGlvbik7XG4gICAgICAgIGJvZHkucG9zaXRpb25QcmV2LnggKz0gZGVsdGEueDtcbiAgICAgICAgYm9keS5wb3NpdGlvblByZXYueSArPSBkZWx0YS55O1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9keS5wYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHBhcnQgPSBib2R5LnBhcnRzW2ldO1xuICAgICAgICAgICAgcGFydC5wb3NpdGlvbi54ICs9IGRlbHRhLng7XG4gICAgICAgICAgICBwYXJ0LnBvc2l0aW9uLnkgKz0gZGVsdGEueTtcbiAgICAgICAgICAgIFZlcnRpY2VzLnRyYW5zbGF0ZShwYXJ0LnZlcnRpY2VzLCBkZWx0YSk7XG4gICAgICAgICAgICBCb3VuZHMudXBkYXRlKHBhcnQuYm91bmRzLCBwYXJ0LnZlcnRpY2VzLCBib2R5LnZlbG9jaXR5KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBhbmdsZSBvZiB0aGUgYm9keSBpbnN0YW50bHkuIEFuZ3VsYXIgdmVsb2NpdHksIHBvc2l0aW9uLCBmb3JjZSBldGMuIGFyZSB1bmNoYW5nZWQuXG4gICAgICogQG1ldGhvZCBzZXRBbmdsZVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBhbmdsZVxuICAgICAqL1xuICAgIEJvZHkuc2V0QW5nbGUgPSBmdW5jdGlvbihib2R5LCBhbmdsZSkge1xuICAgICAgICB2YXIgZGVsdGEgPSBhbmdsZSAtIGJvZHkuYW5nbGU7XG4gICAgICAgIGJvZHkuYW5nbGVQcmV2ICs9IGRlbHRhO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9keS5wYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHBhcnQgPSBib2R5LnBhcnRzW2ldO1xuICAgICAgICAgICAgcGFydC5hbmdsZSArPSBkZWx0YTtcbiAgICAgICAgICAgIFZlcnRpY2VzLnJvdGF0ZShwYXJ0LnZlcnRpY2VzLCBkZWx0YSwgYm9keS5wb3NpdGlvbik7XG4gICAgICAgICAgICBBeGVzLnJvdGF0ZShwYXJ0LmF4ZXMsIGRlbHRhKTtcbiAgICAgICAgICAgIEJvdW5kcy51cGRhdGUocGFydC5ib3VuZHMsIHBhcnQudmVydGljZXMsIGJvZHkudmVsb2NpdHkpO1xuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgVmVjdG9yLnJvdGF0ZUFib3V0KHBhcnQucG9zaXRpb24sIGRlbHRhLCBib2R5LnBvc2l0aW9uLCBwYXJ0LnBvc2l0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBsaW5lYXIgdmVsb2NpdHkgb2YgdGhlIGJvZHkgaW5zdGFudGx5LiBQb3NpdGlvbiwgYW5nbGUsIGZvcmNlIGV0Yy4gYXJlIHVuY2hhbmdlZC4gU2VlIGFsc28gYEJvZHkuYXBwbHlGb3JjZWAuXG4gICAgICogQG1ldGhvZCBzZXRWZWxvY2l0eVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWxvY2l0eVxuICAgICAqL1xuICAgIEJvZHkuc2V0VmVsb2NpdHkgPSBmdW5jdGlvbihib2R5LCB2ZWxvY2l0eSkge1xuICAgICAgICBib2R5LnBvc2l0aW9uUHJldi54ID0gYm9keS5wb3NpdGlvbi54IC0gdmVsb2NpdHkueDtcbiAgICAgICAgYm9keS5wb3NpdGlvblByZXYueSA9IGJvZHkucG9zaXRpb24ueSAtIHZlbG9jaXR5Lnk7XG4gICAgICAgIGJvZHkudmVsb2NpdHkueCA9IHZlbG9jaXR5Lng7XG4gICAgICAgIGJvZHkudmVsb2NpdHkueSA9IHZlbG9jaXR5Lnk7XG4gICAgICAgIGJvZHkuc3BlZWQgPSBWZWN0b3IubWFnbml0dWRlKGJvZHkudmVsb2NpdHkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBhbmd1bGFyIHZlbG9jaXR5IG9mIHRoZSBib2R5IGluc3RhbnRseS4gUG9zaXRpb24sIGFuZ2xlLCBmb3JjZSBldGMuIGFyZSB1bmNoYW5nZWQuIFNlZSBhbHNvIGBCb2R5LmFwcGx5Rm9yY2VgLlxuICAgICAqIEBtZXRob2Qgc2V0QW5ndWxhclZlbG9jaXR5XG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHZlbG9jaXR5XG4gICAgICovXG4gICAgQm9keS5zZXRBbmd1bGFyVmVsb2NpdHkgPSBmdW5jdGlvbihib2R5LCB2ZWxvY2l0eSkge1xuICAgICAgICBib2R5LmFuZ2xlUHJldiA9IGJvZHkuYW5nbGUgLSB2ZWxvY2l0eTtcbiAgICAgICAgYm9keS5hbmd1bGFyVmVsb2NpdHkgPSB2ZWxvY2l0eTtcbiAgICAgICAgYm9keS5hbmd1bGFyU3BlZWQgPSBNYXRoLmFicyhib2R5LmFuZ3VsYXJWZWxvY2l0eSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIE1vdmVzIGEgYm9keSBieSBhIGdpdmVuIHZlY3RvciByZWxhdGl2ZSB0byBpdHMgY3VycmVudCBwb3NpdGlvbiwgd2l0aG91dCBpbXBhcnRpbmcgYW55IHZlbG9jaXR5LlxuICAgICAqIEBtZXRob2QgdHJhbnNsYXRlXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHRyYW5zbGF0aW9uXG4gICAgICovXG4gICAgQm9keS50cmFuc2xhdGUgPSBmdW5jdGlvbihib2R5LCB0cmFuc2xhdGlvbikge1xuICAgICAgICBCb2R5LnNldFBvc2l0aW9uKGJvZHksIFZlY3Rvci5hZGQoYm9keS5wb3NpdGlvbiwgdHJhbnNsYXRpb24pKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUm90YXRlcyBhIGJvZHkgYnkgYSBnaXZlbiBhbmdsZSByZWxhdGl2ZSB0byBpdHMgY3VycmVudCBhbmdsZSwgd2l0aG91dCBpbXBhcnRpbmcgYW55IGFuZ3VsYXIgdmVsb2NpdHkuXG4gICAgICogQG1ldGhvZCByb3RhdGVcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcm90YXRpb25cbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gW3BvaW50XVxuICAgICAqL1xuICAgIEJvZHkucm90YXRlID0gZnVuY3Rpb24oYm9keSwgcm90YXRpb24sIHBvaW50KSB7XG4gICAgICAgIGlmICghcG9pbnQpIHtcbiAgICAgICAgICAgIEJvZHkuc2V0QW5nbGUoYm9keSwgYm9keS5hbmdsZSArIHJvdGF0aW9uKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBjb3MgPSBNYXRoLmNvcyhyb3RhdGlvbiksXG4gICAgICAgICAgICAgICAgc2luID0gTWF0aC5zaW4ocm90YXRpb24pLFxuICAgICAgICAgICAgICAgIGR4ID0gYm9keS5wb3NpdGlvbi54IC0gcG9pbnQueCxcbiAgICAgICAgICAgICAgICBkeSA9IGJvZHkucG9zaXRpb24ueSAtIHBvaW50Lnk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBCb2R5LnNldFBvc2l0aW9uKGJvZHksIHtcbiAgICAgICAgICAgICAgICB4OiBwb2ludC54ICsgKGR4ICogY29zIC0gZHkgKiBzaW4pLFxuICAgICAgICAgICAgICAgIHk6IHBvaW50LnkgKyAoZHggKiBzaW4gKyBkeSAqIGNvcylcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBCb2R5LnNldEFuZ2xlKGJvZHksIGJvZHkuYW5nbGUgKyByb3RhdGlvbik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2NhbGVzIHRoZSBib2R5LCBpbmNsdWRpbmcgdXBkYXRpbmcgcGh5c2ljYWwgcHJvcGVydGllcyAobWFzcywgYXJlYSwgYXhlcywgaW5lcnRpYSksIGZyb20gYSB3b3JsZC1zcGFjZSBwb2ludCAoZGVmYXVsdCBpcyBib2R5IGNlbnRyZSkuXG4gICAgICogQG1ldGhvZCBzY2FsZVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY2FsZVhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc2NhbGVZXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IFtwb2ludF1cbiAgICAgKi9cbiAgICBCb2R5LnNjYWxlID0gZnVuY3Rpb24oYm9keSwgc2NhbGVYLCBzY2FsZVksIHBvaW50KSB7XG4gICAgICAgIHZhciB0b3RhbEFyZWEgPSAwLFxuICAgICAgICAgICAgdG90YWxJbmVydGlhID0gMDtcblxuICAgICAgICBwb2ludCA9IHBvaW50IHx8IGJvZHkucG9zaXRpb247XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2R5LnBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFydCA9IGJvZHkucGFydHNbaV07XG5cbiAgICAgICAgICAgIC8vIHNjYWxlIHZlcnRpY2VzXG4gICAgICAgICAgICBWZXJ0aWNlcy5zY2FsZShwYXJ0LnZlcnRpY2VzLCBzY2FsZVgsIHNjYWxlWSwgcG9pbnQpO1xuXG4gICAgICAgICAgICAvLyB1cGRhdGUgcHJvcGVydGllc1xuICAgICAgICAgICAgcGFydC5heGVzID0gQXhlcy5mcm9tVmVydGljZXMocGFydC52ZXJ0aWNlcyk7XG4gICAgICAgICAgICBwYXJ0LmFyZWEgPSBWZXJ0aWNlcy5hcmVhKHBhcnQudmVydGljZXMpO1xuICAgICAgICAgICAgQm9keS5zZXRNYXNzKHBhcnQsIGJvZHkuZGVuc2l0eSAqIHBhcnQuYXJlYSk7XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSBpbmVydGlhIChyZXF1aXJlcyB2ZXJ0aWNlcyB0byBiZSBhdCBvcmlnaW4pXG4gICAgICAgICAgICBWZXJ0aWNlcy50cmFuc2xhdGUocGFydC52ZXJ0aWNlcywgeyB4OiAtcGFydC5wb3NpdGlvbi54LCB5OiAtcGFydC5wb3NpdGlvbi55IH0pO1xuICAgICAgICAgICAgQm9keS5zZXRJbmVydGlhKHBhcnQsIEJvZHkuX2luZXJ0aWFTY2FsZSAqIFZlcnRpY2VzLmluZXJ0aWEocGFydC52ZXJ0aWNlcywgcGFydC5tYXNzKSk7XG4gICAgICAgICAgICBWZXJ0aWNlcy50cmFuc2xhdGUocGFydC52ZXJ0aWNlcywgeyB4OiBwYXJ0LnBvc2l0aW9uLngsIHk6IHBhcnQucG9zaXRpb24ueSB9KTtcblxuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgdG90YWxBcmVhICs9IHBhcnQuYXJlYTtcbiAgICAgICAgICAgICAgICB0b3RhbEluZXJ0aWEgKz0gcGFydC5pbmVydGlhO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBzY2FsZSBwb3NpdGlvblxuICAgICAgICAgICAgcGFydC5wb3NpdGlvbi54ID0gcG9pbnQueCArIChwYXJ0LnBvc2l0aW9uLnggLSBwb2ludC54KSAqIHNjYWxlWDtcbiAgICAgICAgICAgIHBhcnQucG9zaXRpb24ueSA9IHBvaW50LnkgKyAocGFydC5wb3NpdGlvbi55IC0gcG9pbnQueSkgKiBzY2FsZVk7XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSBib3VuZHNcbiAgICAgICAgICAgIEJvdW5kcy51cGRhdGUocGFydC5ib3VuZHMsIHBhcnQudmVydGljZXMsIGJvZHkudmVsb2NpdHkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaGFuZGxlIHBhcmVudCBib2R5XG4gICAgICAgIGlmIChib2R5LnBhcnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIGJvZHkuYXJlYSA9IHRvdGFsQXJlYTtcblxuICAgICAgICAgICAgaWYgKCFib2R5LmlzU3RhdGljKSB7XG4gICAgICAgICAgICAgICAgQm9keS5zZXRNYXNzKGJvZHksIGJvZHkuZGVuc2l0eSAqIHRvdGFsQXJlYSk7XG4gICAgICAgICAgICAgICAgQm9keS5zZXRJbmVydGlhKGJvZHksIHRvdGFsSW5lcnRpYSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBoYW5kbGUgY2lyY2xlc1xuICAgICAgICBpZiAoYm9keS5jaXJjbGVSYWRpdXMpIHsgXG4gICAgICAgICAgICBpZiAoc2NhbGVYID09PSBzY2FsZVkpIHtcbiAgICAgICAgICAgICAgICBib2R5LmNpcmNsZVJhZGl1cyAqPSBzY2FsZVg7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGJvZHkgaXMgbm8gbG9uZ2VyIGEgY2lyY2xlXG4gICAgICAgICAgICAgICAgYm9keS5jaXJjbGVSYWRpdXMgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIGEgc2ltdWxhdGlvbiBzdGVwIGZvciB0aGUgZ2l2ZW4gYGJvZHlgLCBpbmNsdWRpbmcgdXBkYXRpbmcgcG9zaXRpb24gYW5kIGFuZ2xlIHVzaW5nIFZlcmxldCBpbnRlZ3JhdGlvbi5cbiAgICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkZWx0YVRpbWVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVNjYWxlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNvcnJlY3Rpb25cbiAgICAgKi9cbiAgICBCb2R5LnVwZGF0ZSA9IGZ1bmN0aW9uKGJvZHksIGRlbHRhVGltZSwgdGltZVNjYWxlLCBjb3JyZWN0aW9uKSB7XG4gICAgICAgIHZhciBkZWx0YVRpbWVTcXVhcmVkID0gTWF0aC5wb3coZGVsdGFUaW1lICogdGltZVNjYWxlICogYm9keS50aW1lU2NhbGUsIDIpO1xuXG4gICAgICAgIC8vIGZyb20gdGhlIHByZXZpb3VzIHN0ZXBcbiAgICAgICAgdmFyIGZyaWN0aW9uQWlyID0gMSAtIGJvZHkuZnJpY3Rpb25BaXIgKiB0aW1lU2NhbGUgKiBib2R5LnRpbWVTY2FsZSxcbiAgICAgICAgICAgIHZlbG9jaXR5UHJldlggPSBib2R5LnBvc2l0aW9uLnggLSBib2R5LnBvc2l0aW9uUHJldi54LFxuICAgICAgICAgICAgdmVsb2NpdHlQcmV2WSA9IGJvZHkucG9zaXRpb24ueSAtIGJvZHkucG9zaXRpb25QcmV2Lnk7XG5cbiAgICAgICAgLy8gdXBkYXRlIHZlbG9jaXR5IHdpdGggVmVybGV0IGludGVncmF0aW9uXG4gICAgICAgIGJvZHkudmVsb2NpdHkueCA9ICh2ZWxvY2l0eVByZXZYICogZnJpY3Rpb25BaXIgKiBjb3JyZWN0aW9uKSArIChib2R5LmZvcmNlLnggLyBib2R5Lm1hc3MpICogZGVsdGFUaW1lU3F1YXJlZDtcbiAgICAgICAgYm9keS52ZWxvY2l0eS55ID0gKHZlbG9jaXR5UHJldlkgKiBmcmljdGlvbkFpciAqIGNvcnJlY3Rpb24pICsgKGJvZHkuZm9yY2UueSAvIGJvZHkubWFzcykgKiBkZWx0YVRpbWVTcXVhcmVkO1xuXG4gICAgICAgIGJvZHkucG9zaXRpb25QcmV2LnggPSBib2R5LnBvc2l0aW9uLng7XG4gICAgICAgIGJvZHkucG9zaXRpb25QcmV2LnkgPSBib2R5LnBvc2l0aW9uLnk7XG4gICAgICAgIGJvZHkucG9zaXRpb24ueCArPSBib2R5LnZlbG9jaXR5Lng7XG4gICAgICAgIGJvZHkucG9zaXRpb24ueSArPSBib2R5LnZlbG9jaXR5Lnk7XG5cbiAgICAgICAgLy8gdXBkYXRlIGFuZ3VsYXIgdmVsb2NpdHkgd2l0aCBWZXJsZXQgaW50ZWdyYXRpb25cbiAgICAgICAgYm9keS5hbmd1bGFyVmVsb2NpdHkgPSAoKGJvZHkuYW5nbGUgLSBib2R5LmFuZ2xlUHJldikgKiBmcmljdGlvbkFpciAqIGNvcnJlY3Rpb24pICsgKGJvZHkudG9ycXVlIC8gYm9keS5pbmVydGlhKSAqIGRlbHRhVGltZVNxdWFyZWQ7XG4gICAgICAgIGJvZHkuYW5nbGVQcmV2ID0gYm9keS5hbmdsZTtcbiAgICAgICAgYm9keS5hbmdsZSArPSBib2R5LmFuZ3VsYXJWZWxvY2l0eTtcblxuICAgICAgICAvLyB0cmFjayBzcGVlZCBhbmQgYWNjZWxlcmF0aW9uXG4gICAgICAgIGJvZHkuc3BlZWQgPSBWZWN0b3IubWFnbml0dWRlKGJvZHkudmVsb2NpdHkpO1xuICAgICAgICBib2R5LmFuZ3VsYXJTcGVlZCA9IE1hdGguYWJzKGJvZHkuYW5ndWxhclZlbG9jaXR5KTtcblxuICAgICAgICAvLyB0cmFuc2Zvcm0gdGhlIGJvZHkgZ2VvbWV0cnlcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2R5LnBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFydCA9IGJvZHkucGFydHNbaV07XG5cbiAgICAgICAgICAgIFZlcnRpY2VzLnRyYW5zbGF0ZShwYXJ0LnZlcnRpY2VzLCBib2R5LnZlbG9jaXR5KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgcGFydC5wb3NpdGlvbi54ICs9IGJvZHkudmVsb2NpdHkueDtcbiAgICAgICAgICAgICAgICBwYXJ0LnBvc2l0aW9uLnkgKz0gYm9keS52ZWxvY2l0eS55O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoYm9keS5hbmd1bGFyVmVsb2NpdHkgIT09IDApIHtcbiAgICAgICAgICAgICAgICBWZXJ0aWNlcy5yb3RhdGUocGFydC52ZXJ0aWNlcywgYm9keS5hbmd1bGFyVmVsb2NpdHksIGJvZHkucG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIEF4ZXMucm90YXRlKHBhcnQuYXhlcywgYm9keS5hbmd1bGFyVmVsb2NpdHkpO1xuICAgICAgICAgICAgICAgIGlmIChpID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBWZWN0b3Iucm90YXRlQWJvdXQocGFydC5wb3NpdGlvbiwgYm9keS5hbmd1bGFyVmVsb2NpdHksIGJvZHkucG9zaXRpb24sIHBhcnQucG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgQm91bmRzLnVwZGF0ZShwYXJ0LmJvdW5kcywgcGFydC52ZXJ0aWNlcywgYm9keS52ZWxvY2l0eSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyBhIGZvcmNlIHRvIGEgYm9keSBmcm9tIGEgZ2l2ZW4gd29ybGQtc3BhY2UgcG9zaXRpb24sIGluY2x1ZGluZyByZXN1bHRpbmcgdG9ycXVlLlxuICAgICAqIEBtZXRob2QgYXBwbHlGb3JjZVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSBwb3NpdGlvblxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSBmb3JjZVxuICAgICAqL1xuICAgIEJvZHkuYXBwbHlGb3JjZSA9IGZ1bmN0aW9uKGJvZHksIHBvc2l0aW9uLCBmb3JjZSkge1xuICAgICAgICBib2R5LmZvcmNlLnggKz0gZm9yY2UueDtcbiAgICAgICAgYm9keS5mb3JjZS55ICs9IGZvcmNlLnk7XG4gICAgICAgIHZhciBvZmZzZXQgPSB7IHg6IHBvc2l0aW9uLnggLSBib2R5LnBvc2l0aW9uLngsIHk6IHBvc2l0aW9uLnkgLSBib2R5LnBvc2l0aW9uLnkgfTtcbiAgICAgICAgYm9keS50b3JxdWUgKz0gb2Zmc2V0LnggKiBmb3JjZS55IC0gb2Zmc2V0LnkgKiBmb3JjZS54O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBzdW1zIG9mIHRoZSBwcm9wZXJ0aWVzIG9mIGFsbCBjb21wb3VuZCBwYXJ0cyBvZiB0aGUgcGFyZW50IGJvZHkuXG4gICAgICogQG1ldGhvZCBfdG90YWxQcm9wZXJ0aWVzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlcbiAgICAgKiBAcmV0dXJuIHt9XG4gICAgICovXG4gICAgQm9keS5fdG90YWxQcm9wZXJ0aWVzID0gZnVuY3Rpb24oYm9keSkge1xuICAgICAgICAvLyBmcm9tIGVxdWF0aW9ucyBhdDpcbiAgICAgICAgLy8gaHR0cHM6Ly9lY291cnNlcy5vdS5lZHUvY2dpLWJpbi9lYm9vay5jZ2k/ZG9jPSZ0b3BpYz1zdCZjaGFwX3NlYz0wNy4yJnBhZ2U9dGhlb3J5XG4gICAgICAgIC8vIGh0dHA6Ly9vdXRwdXQudG8vc2lkZXdheS9kZWZhdWx0LmFzcD9xbm89MTIxMTAwMDg3XG5cbiAgICAgICAgdmFyIHByb3BlcnRpZXMgPSB7XG4gICAgICAgICAgICBtYXNzOiAwLFxuICAgICAgICAgICAgYXJlYTogMCxcbiAgICAgICAgICAgIGluZXJ0aWE6IDAsXG4gICAgICAgICAgICBjZW50cmU6IHsgeDogMCwgeTogMCB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gc3VtIHRoZSBwcm9wZXJ0aWVzIG9mIGFsbCBjb21wb3VuZCBwYXJ0cyBvZiB0aGUgcGFyZW50IGJvZHlcbiAgICAgICAgZm9yICh2YXIgaSA9IGJvZHkucGFydHMubGVuZ3RoID09PSAxID8gMCA6IDE7IGkgPCBib2R5LnBhcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFydCA9IGJvZHkucGFydHNbaV0sXG4gICAgICAgICAgICAgICAgbWFzcyA9IHBhcnQubWFzcyAhPT0gSW5maW5pdHkgPyBwYXJ0Lm1hc3MgOiAxO1xuXG4gICAgICAgICAgICBwcm9wZXJ0aWVzLm1hc3MgKz0gbWFzcztcbiAgICAgICAgICAgIHByb3BlcnRpZXMuYXJlYSArPSBwYXJ0LmFyZWE7XG4gICAgICAgICAgICBwcm9wZXJ0aWVzLmluZXJ0aWEgKz0gcGFydC5pbmVydGlhO1xuICAgICAgICAgICAgcHJvcGVydGllcy5jZW50cmUgPSBWZWN0b3IuYWRkKHByb3BlcnRpZXMuY2VudHJlLCBWZWN0b3IubXVsdChwYXJ0LnBvc2l0aW9uLCBtYXNzKSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcm9wZXJ0aWVzLmNlbnRyZSA9IFZlY3Rvci5kaXYocHJvcGVydGllcy5jZW50cmUsIHByb3BlcnRpZXMubWFzcyk7XG5cbiAgICAgICAgcmV0dXJuIHByb3BlcnRpZXM7XG4gICAgfTtcblxuICAgIC8qXG4gICAgKlxuICAgICogIEV2ZW50cyBEb2N1bWVudGF0aW9uXG4gICAgKlxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIHdoZW4gYSBib2R5IHN0YXJ0cyBzbGVlcGluZyAod2hlcmUgYHRoaXNgIGlzIHRoZSBib2R5KS5cbiAgICAqXG4gICAgKiBAZXZlbnQgc2xlZXBTdGFydFxuICAgICogQHRoaXMge2JvZHl9IFRoZSBib2R5IHRoYXQgaGFzIHN0YXJ0ZWQgc2xlZXBpbmdcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCB3aGVuIGEgYm9keSBlbmRzIHNsZWVwaW5nICh3aGVyZSBgdGhpc2AgaXMgdGhlIGJvZHkpLlxuICAgICpcbiAgICAqIEBldmVudCBzbGVlcEVuZFxuICAgICogQHRoaXMge2JvZHl9IFRoZSBib2R5IHRoYXQgaGFzIGVuZGVkIHNsZWVwaW5nXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qXG4gICAgKlxuICAgICogIFByb3BlcnRpZXMgRG9jdW1lbnRhdGlvblxuICAgICpcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gaW50ZWdlciBgTnVtYmVyYCB1bmlxdWVseSBpZGVudGlmeWluZyBudW1iZXIgZ2VuZXJhdGVkIGluIGBCb2R5LmNyZWF0ZWAgYnkgYENvbW1vbi5uZXh0SWRgLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGlkXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBTdHJpbmdgIGRlbm90aW5nIHRoZSB0eXBlIG9mIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB0eXBlXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICogQGRlZmF1bHQgXCJib2R5XCJcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGFyYml0cmFyeSBgU3RyaW5nYCBuYW1lIHRvIGhlbHAgdGhlIHVzZXIgaWRlbnRpZnkgYW5kIG1hbmFnZSBib2RpZXMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgbGFiZWxcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKiBAZGVmYXVsdCBcIkJvZHlcIlxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gYXJyYXkgb2YgYm9kaWVzIHRoYXQgbWFrZSB1cCB0aGlzIGJvZHkuIFxuICAgICAqIFRoZSBmaXJzdCBib2R5IGluIHRoZSBhcnJheSBtdXN0IGFsd2F5cyBiZSBhIHNlbGYgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGJvZHkgaW5zdGFuY2UuXG4gICAgICogQWxsIGJvZGllcyBpbiB0aGUgYHBhcnRzYCBhcnJheSB0b2dldGhlciBmb3JtIGEgc2luZ2xlIHJpZ2lkIGNvbXBvdW5kIGJvZHkuXG4gICAgICogUGFydHMgYXJlIGFsbG93ZWQgdG8gb3ZlcmxhcCwgaGF2ZSBnYXBzIG9yIGhvbGVzIG9yIGV2ZW4gZm9ybSBjb25jYXZlIGJvZGllcy5cbiAgICAgKiBQYXJ0cyB0aGVtc2VsdmVzIHNob3VsZCBuZXZlciBiZSBhZGRlZCB0byBhIGBXb3JsZGAsIG9ubHkgdGhlIHBhcmVudCBib2R5IHNob3VsZCBiZS5cbiAgICAgKiBVc2UgYEJvZHkuc2V0UGFydHNgIHdoZW4gc2V0dGluZyBwYXJ0cyB0byBlbnN1cmUgY29ycmVjdCB1cGRhdGVzIG9mIGFsbCBwcm9wZXJ0aWVzLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHBhcnRzXG4gICAgICogQHR5cGUgYm9keVtdXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBvYmplY3QgcmVzZXJ2ZWQgZm9yIHN0b3JpbmcgcGx1Z2luLXNwZWNpZmljIHByb3BlcnRpZXMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgcGx1Z2luXG4gICAgICogQHR5cGUge31cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgc2VsZiByZWZlcmVuY2UgaWYgdGhlIGJvZHkgaXMgX25vdF8gYSBwYXJ0IG9mIGFub3RoZXIgYm9keS5cbiAgICAgKiBPdGhlcndpc2UgdGhpcyBpcyBhIHJlZmVyZW5jZSB0byB0aGUgYm9keSB0aGF0IHRoaXMgaXMgYSBwYXJ0IG9mLlxuICAgICAqIFNlZSBgYm9keS5wYXJ0c2AuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgcGFyZW50XG4gICAgICogQHR5cGUgYm9keVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCBzcGVjaWZ5aW5nIHRoZSBhbmdsZSBvZiB0aGUgYm9keSwgaW4gcmFkaWFucy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBhbmdsZVxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IG9mIGBWZWN0b3JgIG9iamVjdHMgdGhhdCBzcGVjaWZ5IHRoZSBjb252ZXggaHVsbCBvZiB0aGUgcmlnaWQgYm9keS5cbiAgICAgKiBUaGVzZSBzaG91bGQgYmUgcHJvdmlkZWQgYWJvdXQgdGhlIG9yaWdpbiBgKDAsIDApYC4gRS5nLlxuICAgICAqXG4gICAgICogICAgIFt7IHg6IDAsIHk6IDAgfSwgeyB4OiAyNSwgeTogNTAgfSwgeyB4OiA1MCwgeTogMCB9XVxuICAgICAqXG4gICAgICogV2hlbiBwYXNzZWQgdmlhIGBCb2R5LmNyZWF0ZWAsIHRoZSB2ZXJ0aWNlcyBhcmUgdHJhbnNsYXRlZCByZWxhdGl2ZSB0byBgYm9keS5wb3NpdGlvbmAgKGkuZS4gd29ybGQtc3BhY2UsIGFuZCBjb25zdGFudGx5IHVwZGF0ZWQgYnkgYEJvZHkudXBkYXRlYCBkdXJpbmcgc2ltdWxhdGlvbikuXG4gICAgICogVGhlIGBWZWN0b3JgIG9iamVjdHMgYXJlIGFsc28gYXVnbWVudGVkIHdpdGggYWRkaXRpb25hbCBwcm9wZXJ0aWVzIHJlcXVpcmVkIGZvciBlZmZpY2llbnQgY29sbGlzaW9uIGRldGVjdGlvbi4gXG4gICAgICpcbiAgICAgKiBPdGhlciBwcm9wZXJ0aWVzIHN1Y2ggYXMgYGluZXJ0aWFgIGFuZCBgYm91bmRzYCBhcmUgYXV0b21hdGljYWxseSBjYWxjdWxhdGVkIGZyb20gdGhlIHBhc3NlZCB2ZXJ0aWNlcyAodW5sZXNzIHByb3ZpZGVkIHZpYSBgb3B0aW9uc2ApLlxuICAgICAqIENvbmNhdmUgaHVsbHMgYXJlIG5vdCBjdXJyZW50bHkgc3VwcG9ydGVkLiBUaGUgbW9kdWxlIGBNYXR0ZXIuVmVydGljZXNgIGNvbnRhaW5zIHVzZWZ1bCBtZXRob2RzIGZvciB3b3JraW5nIHdpdGggdmVydGljZXMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgdmVydGljZXNcbiAgICAgKiBAdHlwZSB2ZWN0b3JbXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgVmVjdG9yYCB0aGF0IHNwZWNpZmllcyB0aGUgY3VycmVudCB3b3JsZC1zcGFjZSBwb3NpdGlvbiBvZiB0aGUgYm9keS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBwb3NpdGlvblxuICAgICAqIEB0eXBlIHZlY3RvclxuICAgICAqIEBkZWZhdWx0IHsgeDogMCwgeTogMCB9XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBWZWN0b3JgIHRoYXQgc3BlY2lmaWVzIHRoZSBmb3JjZSB0byBhcHBseSBpbiB0aGUgY3VycmVudCBzdGVwLiBJdCBpcyB6ZXJvZWQgYWZ0ZXIgZXZlcnkgYEJvZHkudXBkYXRlYC4gU2VlIGFsc28gYEJvZHkuYXBwbHlGb3JjZWAuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZm9yY2VcbiAgICAgKiBAdHlwZSB2ZWN0b3JcbiAgICAgKiBAZGVmYXVsdCB7IHg6IDAsIHk6IDAgfVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IHNwZWNpZmllcyB0aGUgdG9ycXVlICh0dXJuaW5nIGZvcmNlKSB0byBhcHBseSBpbiB0aGUgY3VycmVudCBzdGVwLiBJdCBpcyB6ZXJvZWQgYWZ0ZXIgZXZlcnkgYEJvZHkudXBkYXRlYC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB0b3JxdWVcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgX21lYXN1cmVzXyB0aGUgY3VycmVudCBzcGVlZCBvZiB0aGUgYm9keSBhZnRlciB0aGUgbGFzdCBgQm9keS51cGRhdGVgLiBJdCBpcyByZWFkLW9ubHkgYW5kIGFsd2F5cyBwb3NpdGl2ZSAoaXQncyB0aGUgbWFnbml0dWRlIG9mIGBib2R5LnZlbG9jaXR5YCkuXG4gICAgICpcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKiBAcHJvcGVydHkgc3BlZWRcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgX21lYXN1cmVzXyB0aGUgY3VycmVudCBhbmd1bGFyIHNwZWVkIG9mIHRoZSBib2R5IGFmdGVyIHRoZSBsYXN0IGBCb2R5LnVwZGF0ZWAuIEl0IGlzIHJlYWQtb25seSBhbmQgYWx3YXlzIHBvc2l0aXZlIChpdCdzIHRoZSBtYWduaXR1ZGUgb2YgYGJvZHkuYW5ndWxhclZlbG9jaXR5YCkuXG4gICAgICpcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKiBAcHJvcGVydHkgYW5ndWxhclNwZWVkXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgVmVjdG9yYCB0aGF0IF9tZWFzdXJlc18gdGhlIGN1cnJlbnQgdmVsb2NpdHkgb2YgdGhlIGJvZHkgYWZ0ZXIgdGhlIGxhc3QgYEJvZHkudXBkYXRlYC4gSXQgaXMgcmVhZC1vbmx5LiBcbiAgICAgKiBJZiB5b3UgbmVlZCB0byBtb2RpZnkgYSBib2R5J3MgdmVsb2NpdHkgZGlyZWN0bHksIHlvdSBzaG91bGQgZWl0aGVyIGFwcGx5IGEgZm9yY2Ugb3Igc2ltcGx5IGNoYW5nZSB0aGUgYm9keSdzIGBwb3NpdGlvbmAgKGFzIHRoZSBlbmdpbmUgdXNlcyBwb3NpdGlvbi1WZXJsZXQgaW50ZWdyYXRpb24pLlxuICAgICAqXG4gICAgICogQHJlYWRPbmx5XG4gICAgICogQHByb3BlcnR5IHZlbG9jaXR5XG4gICAgICogQHR5cGUgdmVjdG9yXG4gICAgICogQGRlZmF1bHQgeyB4OiAwLCB5OiAwIH1cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBfbWVhc3VyZXNfIHRoZSBjdXJyZW50IGFuZ3VsYXIgdmVsb2NpdHkgb2YgdGhlIGJvZHkgYWZ0ZXIgdGhlIGxhc3QgYEJvZHkudXBkYXRlYC4gSXQgaXMgcmVhZC1vbmx5LiBcbiAgICAgKiBJZiB5b3UgbmVlZCB0byBtb2RpZnkgYSBib2R5J3MgYW5ndWxhciB2ZWxvY2l0eSBkaXJlY3RseSwgeW91IHNob3VsZCBhcHBseSBhIHRvcnF1ZSBvciBzaW1wbHkgY2hhbmdlIHRoZSBib2R5J3MgYGFuZ2xlYCAoYXMgdGhlIGVuZ2luZSB1c2VzIHBvc2l0aW9uLVZlcmxldCBpbnRlZ3JhdGlvbikuXG4gICAgICpcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKiBAcHJvcGVydHkgYW5ndWxhclZlbG9jaXR5XG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBmbGFnIHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgYSBib2R5IGlzIGNvbnNpZGVyZWQgc3RhdGljLiBBIHN0YXRpYyBib2R5IGNhbiBuZXZlciBjaGFuZ2UgcG9zaXRpb24gb3IgYW5nbGUgYW5kIGlzIGNvbXBsZXRlbHkgZml4ZWQuXG4gICAgICogSWYgeW91IG5lZWQgdG8gc2V0IGEgYm9keSBhcyBzdGF0aWMgYWZ0ZXIgaXRzIGNyZWF0aW9uLCB5b3Ugc2hvdWxkIHVzZSBgQm9keS5zZXRTdGF0aWNgIGFzIHRoaXMgcmVxdWlyZXMgbW9yZSB0aGFuIGp1c3Qgc2V0dGluZyB0aGlzIGZsYWcuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgaXNTdGF0aWNcbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgZmxhZyB0aGF0IGluZGljYXRlcyB3aGV0aGVyIGEgYm9keSBpcyBhIHNlbnNvci4gU2Vuc29yIHRyaWdnZXJzIGNvbGxpc2lvbiBldmVudHMsIGJ1dCBkb2Vzbid0IHJlYWN0IHdpdGggY29sbGlkaW5nIGJvZHkgcGh5c2ljYWxseS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBpc1NlbnNvclxuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBmbGFnIHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGJvZHkgaXMgY29uc2lkZXJlZCBzbGVlcGluZy4gQSBzbGVlcGluZyBib2R5IGFjdHMgc2ltaWxhciB0byBhIHN0YXRpYyBib2R5LCBleGNlcHQgaXQgaXMgb25seSB0ZW1wb3JhcnkgYW5kIGNhbiBiZSBhd29rZW4uXG4gICAgICogSWYgeW91IG5lZWQgdG8gc2V0IGEgYm9keSBhcyBzbGVlcGluZywgeW91IHNob3VsZCB1c2UgYFNsZWVwaW5nLnNldGAgYXMgdGhpcyByZXF1aXJlcyBtb3JlIHRoYW4ganVzdCBzZXR0aW5nIHRoaXMgZmxhZy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBpc1NsZWVwaW5nXG4gICAgICogQHR5cGUgYm9vbGVhblxuICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgX21lYXN1cmVzXyB0aGUgYW1vdW50IG9mIG1vdmVtZW50IGEgYm9keSBjdXJyZW50bHkgaGFzIChhIGNvbWJpbmF0aW9uIG9mIGBzcGVlZGAgYW5kIGBhbmd1bGFyU3BlZWRgKS4gSXQgaXMgcmVhZC1vbmx5IGFuZCBhbHdheXMgcG9zaXRpdmUuXG4gICAgICogSXQgaXMgdXNlZCBhbmQgdXBkYXRlZCBieSB0aGUgYE1hdHRlci5TbGVlcGluZ2AgbW9kdWxlIGR1cmluZyBzaW11bGF0aW9uIHRvIGRlY2lkZSBpZiBhIGJvZHkgaGFzIGNvbWUgdG8gcmVzdC5cbiAgICAgKlxuICAgICAqIEByZWFkT25seVxuICAgICAqIEBwcm9wZXJ0eSBtb3Rpb25cbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgZGVmaW5lcyB0aGUgbnVtYmVyIG9mIHVwZGF0ZXMgaW4gd2hpY2ggdGhpcyBib2R5IG11c3QgaGF2ZSBuZWFyLXplcm8gdmVsb2NpdHkgYmVmb3JlIGl0IGlzIHNldCBhcyBzbGVlcGluZyBieSB0aGUgYE1hdHRlci5TbGVlcGluZ2AgbW9kdWxlIChpZiBzbGVlcGluZyBpcyBlbmFibGVkIGJ5IHRoZSBlbmdpbmUpLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHNsZWVwVGhyZXNob2xkXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgNjBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBkZWZpbmVzIHRoZSBkZW5zaXR5IG9mIHRoZSBib2R5LCB0aGF0IGlzIGl0cyBtYXNzIHBlciB1bml0IGFyZWEuXG4gICAgICogSWYgeW91IHBhc3MgdGhlIGRlbnNpdHkgdmlhIGBCb2R5LmNyZWF0ZWAgdGhlIGBtYXNzYCBwcm9wZXJ0eSBpcyBhdXRvbWF0aWNhbGx5IGNhbGN1bGF0ZWQgZm9yIHlvdSBiYXNlZCBvbiB0aGUgc2l6ZSAoYXJlYSkgb2YgdGhlIG9iamVjdC5cbiAgICAgKiBUaGlzIGlzIGdlbmVyYWxseSBwcmVmZXJhYmxlIHRvIHNpbXBseSBzZXR0aW5nIG1hc3MgYW5kIGFsbG93cyBmb3IgbW9yZSBpbnR1aXRpdmUgZGVmaW5pdGlvbiBvZiBtYXRlcmlhbHMgKGUuZy4gcm9jayBoYXMgYSBoaWdoZXIgZGVuc2l0eSB0aGFuIHdvb2QpLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGRlbnNpdHlcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAwLjAwMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIG1hc3Mgb2YgdGhlIGJvZHksIGFsdGhvdWdoIGl0IG1heSBiZSBtb3JlIGFwcHJvcHJpYXRlIHRvIHNwZWNpZnkgdGhlIGBkZW5zaXR5YCBwcm9wZXJ0eSBpbnN0ZWFkLlxuICAgICAqIElmIHlvdSBtb2RpZnkgdGhpcyB2YWx1ZSwgeW91IG11c3QgYWxzbyBtb2RpZnkgdGhlIGBib2R5LmludmVyc2VNYXNzYCBwcm9wZXJ0eSAoYDEgLyBtYXNzYCkuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgbWFzc1xuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIGludmVyc2UgbWFzcyBvZiB0aGUgYm9keSAoYDEgLyBtYXNzYCkuXG4gICAgICogSWYgeW91IG1vZGlmeSB0aGlzIHZhbHVlLCB5b3UgbXVzdCBhbHNvIG1vZGlmeSB0aGUgYGJvZHkubWFzc2AgcHJvcGVydHkuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgaW52ZXJzZU1hc3NcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBkZWZpbmVzIHRoZSBtb21lbnQgb2YgaW5lcnRpYSAoaS5lLiBzZWNvbmQgbW9tZW50IG9mIGFyZWEpIG9mIHRoZSBib2R5LlxuICAgICAqIEl0IGlzIGF1dG9tYXRpY2FsbHkgY2FsY3VsYXRlZCBmcm9tIHRoZSBnaXZlbiBjb252ZXggaHVsbCAoYHZlcnRpY2VzYCBhcnJheSkgYW5kIGRlbnNpdHkgaW4gYEJvZHkuY3JlYXRlYC5cbiAgICAgKiBJZiB5b3UgbW9kaWZ5IHRoaXMgdmFsdWUsIHlvdSBtdXN0IGFsc28gbW9kaWZ5IHRoZSBgYm9keS5pbnZlcnNlSW5lcnRpYWAgcHJvcGVydHkgKGAxIC8gaW5lcnRpYWApLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGluZXJ0aWFcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBkZWZpbmVzIHRoZSBpbnZlcnNlIG1vbWVudCBvZiBpbmVydGlhIG9mIHRoZSBib2R5IChgMSAvIGluZXJ0aWFgKS5cbiAgICAgKiBJZiB5b3UgbW9kaWZ5IHRoaXMgdmFsdWUsIHlvdSBtdXN0IGFsc28gbW9kaWZ5IHRoZSBgYm9keS5pbmVydGlhYCBwcm9wZXJ0eS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBpbnZlcnNlSW5lcnRpYVxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIHJlc3RpdHV0aW9uIChlbGFzdGljaXR5KSBvZiB0aGUgYm9keS4gVGhlIHZhbHVlIGlzIGFsd2F5cyBwb3NpdGl2ZSBhbmQgaXMgaW4gdGhlIHJhbmdlIGAoMCwgMSlgLlxuICAgICAqIEEgdmFsdWUgb2YgYDBgIG1lYW5zIGNvbGxpc2lvbnMgbWF5IGJlIHBlcmZlY3RseSBpbmVsYXN0aWMgYW5kIG5vIGJvdW5jaW5nIG1heSBvY2N1ci4gXG4gICAgICogQSB2YWx1ZSBvZiBgMC44YCBtZWFucyB0aGUgYm9keSBtYXkgYm91bmNlIGJhY2sgd2l0aCBhcHByb3hpbWF0ZWx5IDgwJSBvZiBpdHMga2luZXRpYyBlbmVyZ3kuXG4gICAgICogTm90ZSB0aGF0IGNvbGxpc2lvbiByZXNwb25zZSBpcyBiYXNlZCBvbiBfcGFpcnNfIG9mIGJvZGllcywgYW5kIHRoYXQgYHJlc3RpdHV0aW9uYCB2YWx1ZXMgYXJlIF9jb21iaW5lZF8gd2l0aCB0aGUgZm9sbG93aW5nIGZvcm11bGE6XG4gICAgICpcbiAgICAgKiAgICAgTWF0aC5tYXgoYm9keUEucmVzdGl0dXRpb24sIGJvZHlCLnJlc3RpdHV0aW9uKVxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlc3RpdHV0aW9uXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIGZyaWN0aW9uIG9mIHRoZSBib2R5LiBUaGUgdmFsdWUgaXMgYWx3YXlzIHBvc2l0aXZlIGFuZCBpcyBpbiB0aGUgcmFuZ2UgYCgwLCAxKWAuXG4gICAgICogQSB2YWx1ZSBvZiBgMGAgbWVhbnMgdGhhdCB0aGUgYm9keSBtYXkgc2xpZGUgaW5kZWZpbml0ZWx5LlxuICAgICAqIEEgdmFsdWUgb2YgYDFgIG1lYW5zIHRoZSBib2R5IG1heSBjb21lIHRvIGEgc3RvcCBhbG1vc3QgaW5zdGFudGx5IGFmdGVyIGEgZm9yY2UgaXMgYXBwbGllZC5cbiAgICAgKlxuICAgICAqIFRoZSBlZmZlY3RzIG9mIHRoZSB2YWx1ZSBtYXkgYmUgbm9uLWxpbmVhci4gXG4gICAgICogSGlnaCB2YWx1ZXMgbWF5IGJlIHVuc3RhYmxlIGRlcGVuZGluZyBvbiB0aGUgYm9keS5cbiAgICAgKiBUaGUgZW5naW5lIHVzZXMgYSBDb3Vsb21iIGZyaWN0aW9uIG1vZGVsIGluY2x1ZGluZyBzdGF0aWMgYW5kIGtpbmV0aWMgZnJpY3Rpb24uXG4gICAgICogTm90ZSB0aGF0IGNvbGxpc2lvbiByZXNwb25zZSBpcyBiYXNlZCBvbiBfcGFpcnNfIG9mIGJvZGllcywgYW5kIHRoYXQgYGZyaWN0aW9uYCB2YWx1ZXMgYXJlIF9jb21iaW5lZF8gd2l0aCB0aGUgZm9sbG93aW5nIGZvcm11bGE6XG4gICAgICpcbiAgICAgKiAgICAgTWF0aC5taW4oYm9keUEuZnJpY3Rpb24sIGJvZHlCLmZyaWN0aW9uKVxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGZyaWN0aW9uXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMC4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgZGVmaW5lcyB0aGUgc3RhdGljIGZyaWN0aW9uIG9mIHRoZSBib2R5IChpbiB0aGUgQ291bG9tYiBmcmljdGlvbiBtb2RlbCkuIFxuICAgICAqIEEgdmFsdWUgb2YgYDBgIG1lYW5zIHRoZSBib2R5IHdpbGwgbmV2ZXIgJ3N0aWNrJyB3aGVuIGl0IGlzIG5lYXJseSBzdGF0aW9uYXJ5IGFuZCBvbmx5IGR5bmFtaWMgYGZyaWN0aW9uYCBpcyB1c2VkLlxuICAgICAqIFRoZSBoaWdoZXIgdGhlIHZhbHVlIChlLmcuIGAxMGApLCB0aGUgbW9yZSBmb3JjZSBpdCB3aWxsIHRha2UgdG8gaW5pdGlhbGx5IGdldCB0aGUgYm9keSBtb3Zpbmcgd2hlbiBuZWFybHkgc3RhdGlvbmFyeS5cbiAgICAgKiBUaGlzIHZhbHVlIGlzIG11bHRpcGxpZWQgd2l0aCB0aGUgYGZyaWN0aW9uYCBwcm9wZXJ0eSB0byBtYWtlIGl0IGVhc2llciB0byBjaGFuZ2UgYGZyaWN0aW9uYCBhbmQgbWFpbnRhaW4gYW4gYXBwcm9wcmlhdGUgYW1vdW50IG9mIHN0YXRpYyBmcmljdGlvbi5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBmcmljdGlvblN0YXRpY1xuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDAuNVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIGFpciBmcmljdGlvbiBvZiB0aGUgYm9keSAoYWlyIHJlc2lzdGFuY2UpLiBcbiAgICAgKiBBIHZhbHVlIG9mIGAwYCBtZWFucyB0aGUgYm9keSB3aWxsIG5ldmVyIHNsb3cgYXMgaXQgbW92ZXMgdGhyb3VnaCBzcGFjZS5cbiAgICAgKiBUaGUgaGlnaGVyIHRoZSB2YWx1ZSwgdGhlIGZhc3RlciBhIGJvZHkgc2xvd3Mgd2hlbiBtb3ZpbmcgdGhyb3VnaCBzcGFjZS5cbiAgICAgKiBUaGUgZWZmZWN0cyBvZiB0aGUgdmFsdWUgYXJlIG5vbi1saW5lYXIuIFxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGZyaWN0aW9uQWlyXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMC4wMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gYE9iamVjdGAgdGhhdCBzcGVjaWZpZXMgdGhlIGNvbGxpc2lvbiBmaWx0ZXJpbmcgcHJvcGVydGllcyBvZiB0aGlzIGJvZHkuXG4gICAgICpcbiAgICAgKiBDb2xsaXNpb25zIGJldHdlZW4gdHdvIGJvZGllcyB3aWxsIG9iZXkgdGhlIGZvbGxvd2luZyBydWxlczpcbiAgICAgKiAtIElmIHRoZSB0d28gYm9kaWVzIGhhdmUgdGhlIHNhbWUgbm9uLXplcm8gdmFsdWUgb2YgYGNvbGxpc2lvbkZpbHRlci5ncm91cGAsXG4gICAgICogICB0aGV5IHdpbGwgYWx3YXlzIGNvbGxpZGUgaWYgdGhlIHZhbHVlIGlzIHBvc2l0aXZlLCBhbmQgdGhleSB3aWxsIG5ldmVyIGNvbGxpZGVcbiAgICAgKiAgIGlmIHRoZSB2YWx1ZSBpcyBuZWdhdGl2ZS5cbiAgICAgKiAtIElmIHRoZSB0d28gYm9kaWVzIGhhdmUgZGlmZmVyZW50IHZhbHVlcyBvZiBgY29sbGlzaW9uRmlsdGVyLmdyb3VwYCBvciBpZiBvbmVcbiAgICAgKiAgIChvciBib3RoKSBvZiB0aGUgYm9kaWVzIGhhcyBhIHZhbHVlIG9mIDAsIHRoZW4gdGhlIGNhdGVnb3J5L21hc2sgcnVsZXMgYXBwbHkgYXMgZm9sbG93czpcbiAgICAgKlxuICAgICAqIEVhY2ggYm9keSBiZWxvbmdzIHRvIGEgY29sbGlzaW9uIGNhdGVnb3J5LCBnaXZlbiBieSBgY29sbGlzaW9uRmlsdGVyLmNhdGVnb3J5YC4gVGhpc1xuICAgICAqIHZhbHVlIGlzIHVzZWQgYXMgYSBiaXQgZmllbGQgYW5kIHRoZSBjYXRlZ29yeSBzaG91bGQgaGF2ZSBvbmx5IG9uZSBiaXQgc2V0LCBtZWFuaW5nIHRoYXRcbiAgICAgKiB0aGUgdmFsdWUgb2YgdGhpcyBwcm9wZXJ0eSBpcyBhIHBvd2VyIG9mIHR3byBpbiB0aGUgcmFuZ2UgWzEsIDJeMzFdLiBUaHVzLCB0aGVyZSBhcmUgMzJcbiAgICAgKiBkaWZmZXJlbnQgY29sbGlzaW9uIGNhdGVnb3JpZXMgYXZhaWxhYmxlLlxuICAgICAqXG4gICAgICogRWFjaCBib2R5IGFsc28gZGVmaW5lcyBhIGNvbGxpc2lvbiBiaXRtYXNrLCBnaXZlbiBieSBgY29sbGlzaW9uRmlsdGVyLm1hc2tgIHdoaWNoIHNwZWNpZmllc1xuICAgICAqIHRoZSBjYXRlZ29yaWVzIGl0IGNvbGxpZGVzIHdpdGggKHRoZSB2YWx1ZSBpcyB0aGUgYml0d2lzZSBBTkQgdmFsdWUgb2YgYWxsIHRoZXNlIGNhdGVnb3JpZXMpLlxuICAgICAqXG4gICAgICogVXNpbmcgdGhlIGNhdGVnb3J5L21hc2sgcnVsZXMsIHR3byBib2RpZXMgYEFgIGFuZCBgQmAgY29sbGlkZSBpZiBlYWNoIGluY2x1ZGVzIHRoZSBvdGhlcidzXG4gICAgICogY2F0ZWdvcnkgaW4gaXRzIG1hc2ssIGkuZS4gYChjYXRlZ29yeUEgJiBtYXNrQikgIT09IDBgIGFuZCBgKGNhdGVnb3J5QiAmIG1hc2tBKSAhPT0gMGBcbiAgICAgKiBhcmUgYm90aCB0cnVlLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGNvbGxpc2lvbkZpbHRlclxuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gSW50ZWdlciBgTnVtYmVyYCwgdGhhdCBzcGVjaWZpZXMgdGhlIGNvbGxpc2lvbiBncm91cCB0aGlzIGJvZHkgYmVsb25ncyB0by5cbiAgICAgKiBTZWUgYGJvZHkuY29sbGlzaW9uRmlsdGVyYCBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBjb2xsaXNpb25GaWx0ZXIuZ3JvdXBcbiAgICAgKiBAdHlwZSBvYmplY3RcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGJpdCBmaWVsZCB0aGF0IHNwZWNpZmllcyB0aGUgY29sbGlzaW9uIGNhdGVnb3J5IHRoaXMgYm9keSBiZWxvbmdzIHRvLlxuICAgICAqIFRoZSBjYXRlZ29yeSB2YWx1ZSBzaG91bGQgaGF2ZSBvbmx5IG9uZSBiaXQgc2V0LCBmb3IgZXhhbXBsZSBgMHgwMDAxYC5cbiAgICAgKiBUaGlzIG1lYW5zIHRoZXJlIGFyZSB1cCB0byAzMiB1bmlxdWUgY29sbGlzaW9uIGNhdGVnb3JpZXMgYXZhaWxhYmxlLlxuICAgICAqIFNlZSBgYm9keS5jb2xsaXNpb25GaWx0ZXJgIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGNvbGxpc2lvbkZpbHRlci5jYXRlZ29yeVxuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqIEBkZWZhdWx0IDFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYml0IG1hc2sgdGhhdCBzcGVjaWZpZXMgdGhlIGNvbGxpc2lvbiBjYXRlZ29yaWVzIHRoaXMgYm9keSBtYXkgY29sbGlkZSB3aXRoLlxuICAgICAqIFNlZSBgYm9keS5jb2xsaXNpb25GaWx0ZXJgIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGNvbGxpc2lvbkZpbHRlci5tYXNrXG4gICAgICogQHR5cGUgb2JqZWN0XG4gICAgICogQGRlZmF1bHQgLTFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBzcGVjaWZpZXMgYSB0b2xlcmFuY2Ugb24gaG93IGZhciBhIGJvZHkgaXMgYWxsb3dlZCB0byAnc2luaycgb3Igcm90YXRlIGludG8gb3RoZXIgYm9kaWVzLlxuICAgICAqIEF2b2lkIGNoYW5naW5nIHRoaXMgdmFsdWUgdW5sZXNzIHlvdSB1bmRlcnN0YW5kIHRoZSBwdXJwb3NlIG9mIGBzbG9wYCBpbiBwaHlzaWNzIGVuZ2luZXMuXG4gICAgICogVGhlIGRlZmF1bHQgc2hvdWxkIGdlbmVyYWxseSBzdWZmaWNlLCBhbHRob3VnaCB2ZXJ5IGxhcmdlIGJvZGllcyBtYXkgcmVxdWlyZSBsYXJnZXIgdmFsdWVzIGZvciBzdGFibGUgc3RhY2tpbmcuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgc2xvcFxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDAuMDVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBhbGxvd3MgcGVyLWJvZHkgdGltZSBzY2FsaW5nLCBlLmcuIGEgZm9yY2UtZmllbGQgd2hlcmUgYm9kaWVzIGluc2lkZSBhcmUgaW4gc2xvdy1tb3Rpb24sIHdoaWxlIG90aGVycyBhcmUgYXQgZnVsbCBzcGVlZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB0aW1lU2NhbGVcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAxXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBgT2JqZWN0YCB0aGF0IGRlZmluZXMgdGhlIHJlbmRlcmluZyBwcm9wZXJ0aWVzIHRvIGJlIGNvbnN1bWVkIGJ5IHRoZSBtb2R1bGUgYE1hdHRlci5SZW5kZXJgLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlclxuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBmbGFnIHRoYXQgaW5kaWNhdGVzIGlmIHRoZSBib2R5IHNob3VsZCBiZSByZW5kZXJlZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIudmlzaWJsZVxuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBvcGFjaXR5IHRvIHVzZSB3aGVuIHJlbmRlcmluZy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIub3BhY2l0eVxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDFcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gYE9iamVjdGAgdGhhdCBkZWZpbmVzIHRoZSBzcHJpdGUgcHJvcGVydGllcyB0byB1c2Ugd2hlbiByZW5kZXJpbmcsIGlmIGFueS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIuc3ByaXRlXG4gICAgICogQHR5cGUgb2JqZWN0XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBgU3RyaW5nYCB0aGF0IGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGltYWdlIHRvIHVzZSBhcyB0aGUgc3ByaXRlIHRleHR1cmUsIGlmIGFueS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIuc3ByaXRlLnRleHR1cmVcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKi9cbiAgICAgXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIHNjYWxpbmcgaW4gdGhlIHgtYXhpcyBmb3IgdGhlIHNwcml0ZSwgaWYgYW55LlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlci5zcHJpdGUueFNjYWxlXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IGRlZmluZXMgdGhlIHNjYWxpbmcgaW4gdGhlIHktYXhpcyBmb3IgdGhlIHNwcml0ZSwgaWYgYW55LlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlci5zcHJpdGUueVNjYWxlXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMVxuICAgICAqL1xuXG4gICAgIC8qKlxuICAgICAgKiBBIGBOdW1iZXJgIHRoYXQgZGVmaW5lcyB0aGUgb2Zmc2V0IGluIHRoZSB4LWF4aXMgZm9yIHRoZSBzcHJpdGUgKG5vcm1hbGlzZWQgYnkgdGV4dHVyZSB3aWR0aCkuXG4gICAgICAqXG4gICAgICAqIEBwcm9wZXJ0eSByZW5kZXIuc3ByaXRlLnhPZmZzZXRcbiAgICAgICogQHR5cGUgbnVtYmVyXG4gICAgICAqIEBkZWZhdWx0IDBcbiAgICAgICovXG5cbiAgICAgLyoqXG4gICAgICAqIEEgYE51bWJlcmAgdGhhdCBkZWZpbmVzIHRoZSBvZmZzZXQgaW4gdGhlIHktYXhpcyBmb3IgdGhlIHNwcml0ZSAobm9ybWFsaXNlZCBieSB0ZXh0dXJlIGhlaWdodCkuXG4gICAgICAqXG4gICAgICAqIEBwcm9wZXJ0eSByZW5kZXIuc3ByaXRlLnlPZmZzZXRcbiAgICAgICogQHR5cGUgbnVtYmVyXG4gICAgICAqIEBkZWZhdWx0IDBcbiAgICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgZGVmaW5lcyB0aGUgbGluZSB3aWR0aCB0byB1c2Ugd2hlbiByZW5kZXJpbmcgdGhlIGJvZHkgb3V0bGluZSAoaWYgYSBzcHJpdGUgaXMgbm90IGRlZmluZWQpLlxuICAgICAqIEEgdmFsdWUgb2YgYDBgIG1lYW5zIG5vIG91dGxpbmUgd2lsbCBiZSByZW5kZXJlZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIubGluZVdpZHRoXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgU3RyaW5nYCB0aGF0IGRlZmluZXMgdGhlIGZpbGwgc3R5bGUgdG8gdXNlIHdoZW4gcmVuZGVyaW5nIHRoZSBib2R5IChpZiBhIHNwcml0ZSBpcyBub3QgZGVmaW5lZCkuXG4gICAgICogSXQgaXMgdGhlIHNhbWUgYXMgd2hlbiB1c2luZyBhIGNhbnZhcywgc28gaXQgYWNjZXB0cyBDU1Mgc3R5bGUgcHJvcGVydHkgdmFsdWVzLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlci5maWxsU3R5bGVcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKiBAZGVmYXVsdCBhIHJhbmRvbSBjb2xvdXJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYFN0cmluZ2AgdGhhdCBkZWZpbmVzIHRoZSBzdHJva2Ugc3R5bGUgdG8gdXNlIHdoZW4gcmVuZGVyaW5nIHRoZSBib2R5IG91dGxpbmUgKGlmIGEgc3ByaXRlIGlzIG5vdCBkZWZpbmVkKS5cbiAgICAgKiBJdCBpcyB0aGUgc2FtZSBhcyB3aGVuIHVzaW5nIGEgY2FudmFzLCBzbyBpdCBhY2NlcHRzIENTUyBzdHlsZSBwcm9wZXJ0eSB2YWx1ZXMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgcmVuZGVyLnN0cm9rZVN0eWxlXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICogQGRlZmF1bHQgYSByYW5kb20gY29sb3VyXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBhcnJheSBvZiB1bmlxdWUgYXhpcyB2ZWN0b3JzIChlZGdlIG5vcm1hbHMpIHVzZWQgZm9yIGNvbGxpc2lvbiBkZXRlY3Rpb24uXG4gICAgICogVGhlc2UgYXJlIGF1dG9tYXRpY2FsbHkgY2FsY3VsYXRlZCBmcm9tIHRoZSBnaXZlbiBjb252ZXggaHVsbCAoYHZlcnRpY2VzYCBhcnJheSkgaW4gYEJvZHkuY3JlYXRlYC5cbiAgICAgKiBUaGV5IGFyZSBjb25zdGFudGx5IHVwZGF0ZWQgYnkgYEJvZHkudXBkYXRlYCBkdXJpbmcgdGhlIHNpbXVsYXRpb24uXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgYXhlc1xuICAgICAqIEB0eXBlIHZlY3RvcltdXG4gICAgICovXG4gICAgIFxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBfbWVhc3VyZXNfIHRoZSBhcmVhIG9mIHRoZSBib2R5J3MgY29udmV4IGh1bGwsIGNhbGN1bGF0ZWQgYXQgY3JlYXRpb24gYnkgYEJvZHkuY3JlYXRlYC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBhcmVhXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICogQGRlZmF1bHQgXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBCb3VuZHNgIG9iamVjdCB0aGF0IGRlZmluZXMgdGhlIEFBQkIgcmVnaW9uIGZvciB0aGUgYm9keS5cbiAgICAgKiBJdCBpcyBhdXRvbWF0aWNhbGx5IGNhbGN1bGF0ZWQgZnJvbSB0aGUgZ2l2ZW4gY29udmV4IGh1bGwgKGB2ZXJ0aWNlc2AgYXJyYXkpIGluIGBCb2R5LmNyZWF0ZWAgYW5kIGNvbnN0YW50bHkgdXBkYXRlZCBieSBgQm9keS51cGRhdGVgIGR1cmluZyBzaW11bGF0aW9uLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGJvdW5kc1xuICAgICAqIEB0eXBlIGJvdW5kc1xuICAgICAqL1xuXG59KSgpO1xuXG59LHtcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL1NsZWVwaW5nXCI6MjIsXCIuLi9nZW9tZXRyeS9BeGVzXCI6MjUsXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIjoyNixcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4LFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIjoyOSxcIi4uL3JlbmRlci9SZW5kZXJcIjozMX1dLDI6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLkNvbXBvc2l0ZWAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgY29tcG9zaXRlIGJvZGllcy5cbiogQSBjb21wb3NpdGUgYm9keSBpcyBhIGNvbGxlY3Rpb24gb2YgYE1hdHRlci5Cb2R5YCwgYE1hdHRlci5Db25zdHJhaW50YCBhbmQgb3RoZXIgYE1hdHRlci5Db21wb3NpdGVgLCB0aGVyZWZvcmUgY29tcG9zaXRlcyBmb3JtIGEgdHJlZSBzdHJ1Y3R1cmUuXG4qIEl0IGlzIGltcG9ydGFudCB0byB1c2UgdGhlIGZ1bmN0aW9ucyBpbiB0aGlzIG1vZHVsZSB0byBtb2RpZnkgY29tcG9zaXRlcywgcmF0aGVyIHRoYW4gZGlyZWN0bHkgbW9kaWZ5aW5nIHRoZWlyIHByb3BlcnRpZXMuXG4qIE5vdGUgdGhhdCB0aGUgYE1hdHRlci5Xb3JsZGAgb2JqZWN0IGlzIGFsc28gYSB0eXBlIG9mIGBNYXR0ZXIuQ29tcG9zaXRlYCBhbmQgYXMgc3VjaCBhbGwgY29tcG9zaXRlIG1ldGhvZHMgaGVyZSBjYW4gYWxzbyBvcGVyYXRlIG9uIGEgYE1hdHRlci5Xb3JsZGAuXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBDb21wb3NpdGVcbiovXG5cbnZhciBDb21wb3NpdGUgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb21wb3NpdGU7XG5cbnZhciBFdmVudHMgPSBfZGVyZXFfKCcuLi9jb3JlL0V2ZW50cycpO1xudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4uL2NvcmUvQ29tbW9uJyk7XG52YXIgQm91bmRzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvQm91bmRzJyk7XG52YXIgQm9keSA9IF9kZXJlcV8oJy4vQm9keScpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGNvbXBvc2l0ZS4gVGhlIG9wdGlvbnMgcGFyYW1ldGVyIGlzIGFuIG9iamVjdCB0aGF0IHNwZWNpZmllcyBhbnkgcHJvcGVydGllcyB5b3Ugd2lzaCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHMuXG4gICAgICogU2VlIHRoZSBwcm9wZXJpdGVzIHNlY3Rpb24gYmVsb3cgZm9yIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHdoYXQgeW91IGNhbiBwYXNzIHZpYSB0aGUgYG9wdGlvbnNgIG9iamVjdC5cbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBwYXJhbSB7fSBbb3B0aW9uc11cbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IEEgbmV3IGNvbXBvc2l0ZVxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5jcmVhdGUgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBDb21tb24uZXh0ZW5kKHsgXG4gICAgICAgICAgICBpZDogQ29tbW9uLm5leHRJZCgpLFxuICAgICAgICAgICAgdHlwZTogJ2NvbXBvc2l0ZScsXG4gICAgICAgICAgICBwYXJlbnQ6IG51bGwsXG4gICAgICAgICAgICBpc01vZGlmaWVkOiBmYWxzZSxcbiAgICAgICAgICAgIGJvZGllczogW10sIFxuICAgICAgICAgICAgY29uc3RyYWludHM6IFtdLCBcbiAgICAgICAgICAgIGNvbXBvc2l0ZXM6IFtdLFxuICAgICAgICAgICAgbGFiZWw6ICdDb21wb3NpdGUnLFxuICAgICAgICAgICAgcGx1Z2luOiB7fVxuICAgICAgICB9LCBvcHRpb25zKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgY29tcG9zaXRlJ3MgYGlzTW9kaWZpZWRgIGZsYWcuIFxuICAgICAqIElmIGB1cGRhdGVQYXJlbnRzYCBpcyB0cnVlLCBhbGwgcGFyZW50cyB3aWxsIGJlIHNldCAoZGVmYXVsdDogZmFsc2UpLlxuICAgICAqIElmIGB1cGRhdGVDaGlsZHJlbmAgaXMgdHJ1ZSwgYWxsIGNoaWxkcmVuIHdpbGwgYmUgc2V0IChkZWZhdWx0OiBmYWxzZSkuXG4gICAgICogQG1ldGhvZCBzZXRNb2RpZmllZFxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzTW9kaWZpZWRcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFt1cGRhdGVQYXJlbnRzPWZhbHNlXVxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3VwZGF0ZUNoaWxkcmVuPWZhbHNlXVxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZCA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgaXNNb2RpZmllZCwgdXBkYXRlUGFyZW50cywgdXBkYXRlQ2hpbGRyZW4pIHtcbiAgICAgICAgY29tcG9zaXRlLmlzTW9kaWZpZWQgPSBpc01vZGlmaWVkO1xuXG4gICAgICAgIGlmICh1cGRhdGVQYXJlbnRzICYmIGNvbXBvc2l0ZS5wYXJlbnQpIHtcbiAgICAgICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjb21wb3NpdGUucGFyZW50LCBpc01vZGlmaWVkLCB1cGRhdGVQYXJlbnRzLCB1cGRhdGVDaGlsZHJlbik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodXBkYXRlQ2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBjb21wb3NpdGUuY29tcG9zaXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZENvbXBvc2l0ZSA9IGNvbXBvc2l0ZS5jb21wb3NpdGVzW2ldO1xuICAgICAgICAgICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjaGlsZENvbXBvc2l0ZSwgaXNNb2RpZmllZCwgdXBkYXRlUGFyZW50cywgdXBkYXRlQ2hpbGRyZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdlbmVyaWMgYWRkIGZ1bmN0aW9uLiBBZGRzIG9uZSBvciBtYW55IGJvZHkocyksIGNvbnN0cmFpbnQocykgb3IgYSBjb21wb3NpdGUocykgdG8gdGhlIGdpdmVuIGNvbXBvc2l0ZS5cbiAgICAgKiBUcmlnZ2VycyBgYmVmb3JlQWRkYCBhbmQgYGFmdGVyQWRkYCBldmVudHMgb24gdGhlIGBjb21wb3NpdGVgLlxuICAgICAqIEBtZXRob2QgYWRkXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEBwYXJhbSB7fSBvYmplY3RcbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCBjb21wb3NpdGUgd2l0aCB0aGUgb2JqZWN0cyBhZGRlZFxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5hZGQgPSBmdW5jdGlvbihjb21wb3NpdGUsIG9iamVjdCkge1xuICAgICAgICB2YXIgb2JqZWN0cyA9IFtdLmNvbmNhdChvYmplY3QpO1xuXG4gICAgICAgIEV2ZW50cy50cmlnZ2VyKGNvbXBvc2l0ZSwgJ2JlZm9yZUFkZCcsIHsgb2JqZWN0OiBvYmplY3QgfSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgb2JqID0gb2JqZWN0c1tpXTtcblxuICAgICAgICAgICAgc3dpdGNoIChvYmoudHlwZSkge1xuXG4gICAgICAgICAgICBjYXNlICdib2R5JzpcbiAgICAgICAgICAgICAgICAvLyBza2lwIGFkZGluZyBjb21wb3VuZCBwYXJ0c1xuICAgICAgICAgICAgICAgIGlmIChvYmoucGFyZW50ICE9PSBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgQ29tbW9uLndhcm4oJ0NvbXBvc2l0ZS5hZGQ6IHNraXBwZWQgYWRkaW5nIGEgY29tcG91bmQgYm9keSBwYXJ0ICh5b3UgbXVzdCBhZGQgaXRzIHBhcmVudCBpbnN0ZWFkKScpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQm9keShjb21wb3NpdGUsIG9iaik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdjb25zdHJhaW50JzpcbiAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludChjb21wb3NpdGUsIG9iaik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdjb21wb3NpdGUnOlxuICAgICAgICAgICAgICAgIENvbXBvc2l0ZS5hZGRDb21wb3NpdGUoY29tcG9zaXRlLCBvYmopO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbW91c2VDb25zdHJhaW50JzpcbiAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludChjb21wb3NpdGUsIG9iai5jb25zdHJhaW50KTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgRXZlbnRzLnRyaWdnZXIoY29tcG9zaXRlLCAnYWZ0ZXJBZGQnLCB7IG9iamVjdDogb2JqZWN0IH0pO1xuXG4gICAgICAgIHJldHVybiBjb21wb3NpdGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdlbmVyaWMgcmVtb3ZlIGZ1bmN0aW9uLiBSZW1vdmVzIG9uZSBvciBtYW55IGJvZHkocyksIGNvbnN0cmFpbnQocykgb3IgYSBjb21wb3NpdGUocykgdG8gdGhlIGdpdmVuIGNvbXBvc2l0ZS5cbiAgICAgKiBPcHRpb25hbGx5IHNlYXJjaGluZyBpdHMgY2hpbGRyZW4gcmVjdXJzaXZlbHkuXG4gICAgICogVHJpZ2dlcnMgYGJlZm9yZVJlbW92ZWAgYW5kIGBhZnRlclJlbW92ZWAgZXZlbnRzIG9uIHRoZSBgY29tcG9zaXRlYC5cbiAgICAgKiBAbWV0aG9kIHJlbW92ZVxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge30gb2JqZWN0XG4gICAgICogQHBhcmFtIHtib29sZWFufSBbZGVlcD1mYWxzZV1cbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCBjb21wb3NpdGUgd2l0aCB0aGUgb2JqZWN0cyByZW1vdmVkXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnJlbW92ZSA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgb2JqZWN0LCBkZWVwKSB7XG4gICAgICAgIHZhciBvYmplY3RzID0gW10uY29uY2F0KG9iamVjdCk7XG5cbiAgICAgICAgRXZlbnRzLnRyaWdnZXIoY29tcG9zaXRlLCAnYmVmb3JlUmVtb3ZlJywgeyBvYmplY3Q6IG9iamVjdCB9KTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iamVjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBvYmogPSBvYmplY3RzW2ldO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKG9iai50eXBlKSB7XG5cbiAgICAgICAgICAgIGNhc2UgJ2JvZHknOlxuICAgICAgICAgICAgICAgIENvbXBvc2l0ZS5yZW1vdmVCb2R5KGNvbXBvc2l0ZSwgb2JqLCBkZWVwKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NvbnN0cmFpbnQnOlxuICAgICAgICAgICAgICAgIENvbXBvc2l0ZS5yZW1vdmVDb25zdHJhaW50KGNvbXBvc2l0ZSwgb2JqLCBkZWVwKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NvbXBvc2l0ZSc6XG4gICAgICAgICAgICAgICAgQ29tcG9zaXRlLnJlbW92ZUNvbXBvc2l0ZShjb21wb3NpdGUsIG9iaiwgZGVlcCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdtb3VzZUNvbnN0cmFpbnQnOlxuICAgICAgICAgICAgICAgIENvbXBvc2l0ZS5yZW1vdmVDb25zdHJhaW50KGNvbXBvc2l0ZSwgb2JqLmNvbnN0cmFpbnQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBFdmVudHMudHJpZ2dlcihjb21wb3NpdGUsICdhZnRlclJlbW92ZScsIHsgb2JqZWN0OiBvYmplY3QgfSk7XG5cbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQWRkcyBhIGNvbXBvc2l0ZSB0byB0aGUgZ2l2ZW4gY29tcG9zaXRlLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBhZGRDb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlQVxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVCXG4gICAgICogQHJldHVybiB7Y29tcG9zaXRlfSBUaGUgb3JpZ2luYWwgY29tcG9zaXRlQSB3aXRoIHRoZSBvYmplY3RzIGZyb20gY29tcG9zaXRlQiBhZGRlZFxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5hZGRDb21wb3NpdGUgPSBmdW5jdGlvbihjb21wb3NpdGVBLCBjb21wb3NpdGVCKSB7XG4gICAgICAgIGNvbXBvc2l0ZUEuY29tcG9zaXRlcy5wdXNoKGNvbXBvc2l0ZUIpO1xuICAgICAgICBjb21wb3NpdGVCLnBhcmVudCA9IGNvbXBvc2l0ZUE7XG4gICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjb21wb3NpdGVBLCB0cnVlLCB0cnVlLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiBjb21wb3NpdGVBO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgY29tcG9zaXRlIGZyb20gdGhlIGdpdmVuIGNvbXBvc2l0ZSwgYW5kIG9wdGlvbmFsbHkgc2VhcmNoaW5nIGl0cyBjaGlsZHJlbiByZWN1cnNpdmVseS5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgcmVtb3ZlQ29tcG9zaXRlXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZUFcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlQlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2RlZXA9ZmFsc2VdXG4gICAgICogQHJldHVybiB7Y29tcG9zaXRlfSBUaGUgb3JpZ2luYWwgY29tcG9zaXRlQSB3aXRoIHRoZSBjb21wb3NpdGUgcmVtb3ZlZFxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5yZW1vdmVDb21wb3NpdGUgPSBmdW5jdGlvbihjb21wb3NpdGVBLCBjb21wb3NpdGVCLCBkZWVwKSB7XG4gICAgICAgIHZhciBwb3NpdGlvbiA9IENvbW1vbi5pbmRleE9mKGNvbXBvc2l0ZUEuY29tcG9zaXRlcywgY29tcG9zaXRlQik7XG4gICAgICAgIGlmIChwb3NpdGlvbiAhPT0gLTEpIHtcbiAgICAgICAgICAgIENvbXBvc2l0ZS5yZW1vdmVDb21wb3NpdGVBdChjb21wb3NpdGVBLCBwb3NpdGlvbik7XG4gICAgICAgICAgICBDb21wb3NpdGUuc2V0TW9kaWZpZWQoY29tcG9zaXRlQSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlZXApIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9zaXRlQS5jb21wb3NpdGVzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBDb21wb3NpdGUucmVtb3ZlQ29tcG9zaXRlKGNvbXBvc2l0ZUEuY29tcG9zaXRlc1tpXSwgY29tcG9zaXRlQiwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29tcG9zaXRlQTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIGNvbXBvc2l0ZSBmcm9tIHRoZSBnaXZlbiBjb21wb3NpdGUuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHJlbW92ZUNvbXBvc2l0ZUF0XG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwb3NpdGlvblxuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gVGhlIG9yaWdpbmFsIGNvbXBvc2l0ZSB3aXRoIHRoZSBjb21wb3NpdGUgcmVtb3ZlZFxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5yZW1vdmVDb21wb3NpdGVBdCA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgcG9zaXRpb24pIHtcbiAgICAgICAgY29tcG9zaXRlLmNvbXBvc2l0ZXMuc3BsaWNlKHBvc2l0aW9uLCAxKTtcbiAgICAgICAgQ29tcG9zaXRlLnNldE1vZGlmaWVkKGNvbXBvc2l0ZSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIGEgYm9keSB0byB0aGUgZ2l2ZW4gY29tcG9zaXRlLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBhZGRCb2R5XG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gVGhlIG9yaWdpbmFsIGNvbXBvc2l0ZSB3aXRoIHRoZSBib2R5IGFkZGVkXG4gICAgICovXG4gICAgQ29tcG9zaXRlLmFkZEJvZHkgPSBmdW5jdGlvbihjb21wb3NpdGUsIGJvZHkpIHtcbiAgICAgICAgY29tcG9zaXRlLmJvZGllcy5wdXNoKGJvZHkpO1xuICAgICAgICBDb21wb3NpdGUuc2V0TW9kaWZpZWQoY29tcG9zaXRlLCB0cnVlLCB0cnVlLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiBjb21wb3NpdGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYSBib2R5IGZyb20gdGhlIGdpdmVuIGNvbXBvc2l0ZSwgYW5kIG9wdGlvbmFsbHkgc2VhcmNoaW5nIGl0cyBjaGlsZHJlbiByZWN1cnNpdmVseS5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgcmVtb3ZlQm9keVxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtkZWVwPWZhbHNlXVxuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gVGhlIG9yaWdpbmFsIGNvbXBvc2l0ZSB3aXRoIHRoZSBib2R5IHJlbW92ZWRcbiAgICAgKi9cbiAgICBDb21wb3NpdGUucmVtb3ZlQm9keSA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgYm9keSwgZGVlcCkge1xuICAgICAgICB2YXIgcG9zaXRpb24gPSBDb21tb24uaW5kZXhPZihjb21wb3NpdGUuYm9kaWVzLCBib2R5KTtcbiAgICAgICAgaWYgKHBvc2l0aW9uICE9PSAtMSkge1xuICAgICAgICAgICAgQ29tcG9zaXRlLnJlbW92ZUJvZHlBdChjb21wb3NpdGUsIHBvc2l0aW9uKTtcbiAgICAgICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjb21wb3NpdGUsIHRydWUsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZWVwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvc2l0ZS5jb21wb3NpdGVzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBDb21wb3NpdGUucmVtb3ZlQm9keShjb21wb3NpdGUuY29tcG9zaXRlc1tpXSwgYm9keSwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgYm9keSBmcm9tIHRoZSBnaXZlbiBjb21wb3NpdGUuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHJlbW92ZUJvZHlBdFxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcG9zaXRpb25cbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCBjb21wb3NpdGUgd2l0aCB0aGUgYm9keSByZW1vdmVkXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnJlbW92ZUJvZHlBdCA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgcG9zaXRpb24pIHtcbiAgICAgICAgY29tcG9zaXRlLmJvZGllcy5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgICAgICBDb21wb3NpdGUuc2V0TW9kaWZpZWQoY29tcG9zaXRlLCB0cnVlLCB0cnVlLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiBjb21wb3NpdGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFkZHMgYSBjb25zdHJhaW50IHRvIHRoZSBnaXZlbiBjb21wb3NpdGUuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIGFkZENvbnN0cmFpbnRcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHBhcmFtIHtjb25zdHJhaW50fSBjb25zdHJhaW50XG4gICAgICogQHJldHVybiB7Y29tcG9zaXRlfSBUaGUgb3JpZ2luYWwgY29tcG9zaXRlIHdpdGggdGhlIGNvbnN0cmFpbnQgYWRkZWRcbiAgICAgKi9cbiAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludCA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgY29uc3RyYWludCkge1xuICAgICAgICBjb21wb3NpdGUuY29uc3RyYWludHMucHVzaChjb25zdHJhaW50KTtcbiAgICAgICAgQ29tcG9zaXRlLnNldE1vZGlmaWVkKGNvbXBvc2l0ZSwgdHJ1ZSwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgY29uc3RyYWludCBmcm9tIHRoZSBnaXZlbiBjb21wb3NpdGUsIGFuZCBvcHRpb25hbGx5IHNlYXJjaGluZyBpdHMgY2hpbGRyZW4gcmVjdXJzaXZlbHkuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHJlbW92ZUNvbnN0cmFpbnRcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHBhcmFtIHtjb25zdHJhaW50fSBjb25zdHJhaW50XG4gICAgICogQHBhcmFtIHtib29sZWFufSBbZGVlcD1mYWxzZV1cbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCBjb21wb3NpdGUgd2l0aCB0aGUgY29uc3RyYWludCByZW1vdmVkXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnJlbW92ZUNvbnN0cmFpbnQgPSBmdW5jdGlvbihjb21wb3NpdGUsIGNvbnN0cmFpbnQsIGRlZXApIHtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gQ29tbW9uLmluZGV4T2YoY29tcG9zaXRlLmNvbnN0cmFpbnRzLCBjb25zdHJhaW50KTtcbiAgICAgICAgaWYgKHBvc2l0aW9uICE9PSAtMSkge1xuICAgICAgICAgICAgQ29tcG9zaXRlLnJlbW92ZUNvbnN0cmFpbnRBdChjb21wb3NpdGUsIHBvc2l0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZWVwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvc2l0ZS5jb21wb3NpdGVzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBDb21wb3NpdGUucmVtb3ZlQ29uc3RyYWludChjb21wb3NpdGUuY29tcG9zaXRlc1tpXSwgY29uc3RyYWludCwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgYm9keSBmcm9tIHRoZSBnaXZlbiBjb21wb3NpdGUuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHJlbW92ZUNvbnN0cmFpbnRBdFxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcG9zaXRpb25cbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCBjb21wb3NpdGUgd2l0aCB0aGUgY29uc3RyYWludCByZW1vdmVkXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnJlbW92ZUNvbnN0cmFpbnRBdCA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgcG9zaXRpb24pIHtcbiAgICAgICAgY29tcG9zaXRlLmNvbnN0cmFpbnRzLnNwbGljZShwb3NpdGlvbiwgMSk7XG4gICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjb21wb3NpdGUsIHRydWUsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwgYm9kaWVzLCBjb25zdHJhaW50cyBhbmQgY29tcG9zaXRlcyBmcm9tIHRoZSBnaXZlbiBjb21wb3NpdGUuXG4gICAgICogT3B0aW9uYWxseSBjbGVhcmluZyBpdHMgY2hpbGRyZW4gcmVjdXJzaXZlbHkuXG4gICAgICogQG1ldGhvZCBjbGVhclxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGtlZXBTdGF0aWNcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtkZWVwPWZhbHNlXVxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5jbGVhciA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwga2VlcFN0YXRpYywgZGVlcCkge1xuICAgICAgICBpZiAoZGVlcCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21wb3NpdGUuY29tcG9zaXRlcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgQ29tcG9zaXRlLmNsZWFyKGNvbXBvc2l0ZS5jb21wb3NpdGVzW2ldLCBrZWVwU3RhdGljLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKGtlZXBTdGF0aWMpIHtcbiAgICAgICAgICAgIGNvbXBvc2l0ZS5ib2RpZXMgPSBjb21wb3NpdGUuYm9kaWVzLmZpbHRlcihmdW5jdGlvbihib2R5KSB7IHJldHVybiBib2R5LmlzU3RhdGljOyB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbXBvc2l0ZS5ib2RpZXMubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbXBvc2l0ZS5jb25zdHJhaW50cy5sZW5ndGggPSAwO1xuICAgICAgICBjb21wb3NpdGUuY29tcG9zaXRlcy5sZW5ndGggPSAwO1xuICAgICAgICBDb21wb3NpdGUuc2V0TW9kaWZpZWQoY29tcG9zaXRlLCB0cnVlLCB0cnVlLCBmYWxzZSk7XG5cbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbGwgYm9kaWVzIGluIHRoZSBnaXZlbiBjb21wb3NpdGUsIGluY2x1ZGluZyBhbGwgYm9kaWVzIGluIGl0cyBjaGlsZHJlbiwgcmVjdXJzaXZlbHkuXG4gICAgICogQG1ldGhvZCBhbGxCb2RpZXNcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHJldHVybiB7Ym9keVtdfSBBbGwgdGhlIGJvZGllc1xuICAgICAqL1xuICAgIENvbXBvc2l0ZS5hbGxCb2RpZXMgPSBmdW5jdGlvbihjb21wb3NpdGUpIHtcbiAgICAgICAgdmFyIGJvZGllcyA9IFtdLmNvbmNhdChjb21wb3NpdGUuYm9kaWVzKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvc2l0ZS5jb21wb3NpdGVzLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgYm9kaWVzID0gYm9kaWVzLmNvbmNhdChDb21wb3NpdGUuYWxsQm9kaWVzKGNvbXBvc2l0ZS5jb21wb3NpdGVzW2ldKSk7XG5cbiAgICAgICAgcmV0dXJuIGJvZGllcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbGwgY29uc3RyYWludHMgaW4gdGhlIGdpdmVuIGNvbXBvc2l0ZSwgaW5jbHVkaW5nIGFsbCBjb25zdHJhaW50cyBpbiBpdHMgY2hpbGRyZW4sIHJlY3Vyc2l2ZWx5LlxuICAgICAqIEBtZXRob2QgYWxsQ29uc3RyYWludHNcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHJldHVybiB7Y29uc3RyYWludFtdfSBBbGwgdGhlIGNvbnN0cmFpbnRzXG4gICAgICovXG4gICAgQ29tcG9zaXRlLmFsbENvbnN0cmFpbnRzID0gZnVuY3Rpb24oY29tcG9zaXRlKSB7XG4gICAgICAgIHZhciBjb25zdHJhaW50cyA9IFtdLmNvbmNhdChjb21wb3NpdGUuY29uc3RyYWludHMpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9zaXRlLmNvbXBvc2l0ZXMubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBjb25zdHJhaW50cyA9IGNvbnN0cmFpbnRzLmNvbmNhdChDb21wb3NpdGUuYWxsQ29uc3RyYWludHMoY29tcG9zaXRlLmNvbXBvc2l0ZXNbaV0pKTtcblxuICAgICAgICByZXR1cm4gY29uc3RyYWludHM7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYWxsIGNvbXBvc2l0ZXMgaW4gdGhlIGdpdmVuIGNvbXBvc2l0ZSwgaW5jbHVkaW5nIGFsbCBjb21wb3NpdGVzIGluIGl0cyBjaGlsZHJlbiwgcmVjdXJzaXZlbHkuXG4gICAgICogQG1ldGhvZCBhbGxDb21wb3NpdGVzXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZVtdfSBBbGwgdGhlIGNvbXBvc2l0ZXNcbiAgICAgKi9cbiAgICBDb21wb3NpdGUuYWxsQ29tcG9zaXRlcyA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSkge1xuICAgICAgICB2YXIgY29tcG9zaXRlcyA9IFtdLmNvbmNhdChjb21wb3NpdGUuY29tcG9zaXRlcyk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21wb3NpdGUuY29tcG9zaXRlcy5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIGNvbXBvc2l0ZXMgPSBjb21wb3NpdGVzLmNvbmNhdChDb21wb3NpdGUuYWxsQ29tcG9zaXRlcyhjb21wb3NpdGUuY29tcG9zaXRlc1tpXSkpO1xuXG4gICAgICAgIHJldHVybiBjb21wb3NpdGVzO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZWFyY2hlcyB0aGUgY29tcG9zaXRlIHJlY3Vyc2l2ZWx5IGZvciBhbiBvYmplY3QgbWF0Y2hpbmcgdGhlIHR5cGUgYW5kIGlkIHN1cHBsaWVkLCBudWxsIGlmIG5vdCBmb3VuZC5cbiAgICAgKiBAbWV0aG9kIGdldFxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaWRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqIEByZXR1cm4ge29iamVjdH0gVGhlIHJlcXVlc3RlZCBvYmplY3QsIGlmIGZvdW5kXG4gICAgICovXG4gICAgQ29tcG9zaXRlLmdldCA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgaWQsIHR5cGUpIHtcbiAgICAgICAgdmFyIG9iamVjdHMsXG4gICAgICAgICAgICBvYmplY3Q7XG5cbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgJ2JvZHknOlxuICAgICAgICAgICAgb2JqZWN0cyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMoY29tcG9zaXRlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdjb25zdHJhaW50JzpcbiAgICAgICAgICAgIG9iamVjdHMgPSBDb21wb3NpdGUuYWxsQ29uc3RyYWludHMoY29tcG9zaXRlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdjb21wb3NpdGUnOlxuICAgICAgICAgICAgb2JqZWN0cyA9IENvbXBvc2l0ZS5hbGxDb21wb3NpdGVzKGNvbXBvc2l0ZSkuY29uY2F0KGNvbXBvc2l0ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghb2JqZWN0cylcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuXG4gICAgICAgIG9iamVjdCA9IG9iamVjdHMuZmlsdGVyKGZ1bmN0aW9uKG9iamVjdCkgeyBcbiAgICAgICAgICAgIHJldHVybiBvYmplY3QuaWQudG9TdHJpbmcoKSA9PT0gaWQudG9TdHJpbmcoKTsgXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBvYmplY3QubGVuZ3RoID09PSAwID8gbnVsbCA6IG9iamVjdFswXTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogTW92ZXMgdGhlIGdpdmVuIG9iamVjdChzKSBmcm9tIGNvbXBvc2l0ZUEgdG8gY29tcG9zaXRlQiAoZXF1YWwgdG8gYSByZW1vdmUgZm9sbG93ZWQgYnkgYW4gYWRkKS5cbiAgICAgKiBAbWV0aG9kIG1vdmVcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZUF9IGNvbXBvc2l0ZUFcbiAgICAgKiBAcGFyYW0ge29iamVjdFtdfSBvYmplY3RzXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGVCfSBjb21wb3NpdGVCXG4gICAgICogQHJldHVybiB7Y29tcG9zaXRlfSBSZXR1cm5zIGNvbXBvc2l0ZUFcbiAgICAgKi9cbiAgICBDb21wb3NpdGUubW92ZSA9IGZ1bmN0aW9uKGNvbXBvc2l0ZUEsIG9iamVjdHMsIGNvbXBvc2l0ZUIpIHtcbiAgICAgICAgQ29tcG9zaXRlLnJlbW92ZShjb21wb3NpdGVBLCBvYmplY3RzKTtcbiAgICAgICAgQ29tcG9zaXRlLmFkZChjb21wb3NpdGVCLCBvYmplY3RzKTtcbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZUE7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFzc2lnbnMgbmV3IGlkcyBmb3IgYWxsIG9iamVjdHMgaW4gdGhlIGNvbXBvc2l0ZSwgcmVjdXJzaXZlbHkuXG4gICAgICogQG1ldGhvZCByZWJhc2VcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHJldHVybiB7Y29tcG9zaXRlfSBSZXR1cm5zIGNvbXBvc2l0ZVxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5yZWJhc2UgPSBmdW5jdGlvbihjb21wb3NpdGUpIHtcbiAgICAgICAgdmFyIG9iamVjdHMgPSBDb21wb3NpdGUuYWxsQm9kaWVzKGNvbXBvc2l0ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoQ29tcG9zaXRlLmFsbENvbnN0cmFpbnRzKGNvbXBvc2l0ZSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KENvbXBvc2l0ZS5hbGxDb21wb3NpdGVzKGNvbXBvc2l0ZSkpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JqZWN0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgb2JqZWN0c1tpXS5pZCA9IENvbW1vbi5uZXh0SWQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjb21wb3NpdGUsIHRydWUsIHRydWUsIGZhbHNlKTtcblxuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUcmFuc2xhdGVzIGFsbCBjaGlsZHJlbiBpbiB0aGUgY29tcG9zaXRlIGJ5IGEgZ2l2ZW4gdmVjdG9yIHJlbGF0aXZlIHRvIHRoZWlyIGN1cnJlbnQgcG9zaXRpb25zLCBcbiAgICAgKiB3aXRob3V0IGltcGFydGluZyBhbnkgdmVsb2NpdHkuXG4gICAgICogQG1ldGhvZCB0cmFuc2xhdGVcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHRyYW5zbGF0aW9uXG4gICAgICogQHBhcmFtIHtib29sfSBbcmVjdXJzaXZlPXRydWVdXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgdHJhbnNsYXRpb24sIHJlY3Vyc2l2ZSkge1xuICAgICAgICB2YXIgYm9kaWVzID0gcmVjdXJzaXZlID8gQ29tcG9zaXRlLmFsbEJvZGllcyhjb21wb3NpdGUpIDogY29tcG9zaXRlLmJvZGllcztcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgQm9keS50cmFuc2xhdGUoYm9kaWVzW2ldLCB0cmFuc2xhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICBDb21wb3NpdGUuc2V0TW9kaWZpZWQoY29tcG9zaXRlLCB0cnVlLCB0cnVlLCBmYWxzZSk7XG5cbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUm90YXRlcyBhbGwgY2hpbGRyZW4gaW4gdGhlIGNvbXBvc2l0ZSBieSBhIGdpdmVuIGFuZ2xlIGFib3V0IHRoZSBnaXZlbiBwb2ludCwgd2l0aG91dCBpbXBhcnRpbmcgYW55IGFuZ3VsYXIgdmVsb2NpdHkuXG4gICAgICogQG1ldGhvZCByb3RhdGVcbiAgICAgKiBAcGFyYW0ge2NvbXBvc2l0ZX0gY29tcG9zaXRlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJvdGF0aW9uXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHBhcmFtIHtib29sfSBbcmVjdXJzaXZlPXRydWVdXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnJvdGF0ZSA9IGZ1bmN0aW9uKGNvbXBvc2l0ZSwgcm90YXRpb24sIHBvaW50LCByZWN1cnNpdmUpIHtcbiAgICAgICAgdmFyIGNvcyA9IE1hdGguY29zKHJvdGF0aW9uKSxcbiAgICAgICAgICAgIHNpbiA9IE1hdGguc2luKHJvdGF0aW9uKSxcbiAgICAgICAgICAgIGJvZGllcyA9IHJlY3Vyc2l2ZSA/IENvbXBvc2l0ZS5hbGxCb2RpZXMoY29tcG9zaXRlKSA6IGNvbXBvc2l0ZS5ib2RpZXM7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gYm9kaWVzW2ldLFxuICAgICAgICAgICAgICAgIGR4ID0gYm9keS5wb3NpdGlvbi54IC0gcG9pbnQueCxcbiAgICAgICAgICAgICAgICBkeSA9IGJvZHkucG9zaXRpb24ueSAtIHBvaW50Lnk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBCb2R5LnNldFBvc2l0aW9uKGJvZHksIHtcbiAgICAgICAgICAgICAgICB4OiBwb2ludC54ICsgKGR4ICogY29zIC0gZHkgKiBzaW4pLFxuICAgICAgICAgICAgICAgIHk6IHBvaW50LnkgKyAoZHggKiBzaW4gKyBkeSAqIGNvcylcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBCb2R5LnJvdGF0ZShib2R5LCByb3RhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICBDb21wb3NpdGUuc2V0TW9kaWZpZWQoY29tcG9zaXRlLCB0cnVlLCB0cnVlLCBmYWxzZSk7XG5cbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2NhbGVzIGFsbCBjaGlsZHJlbiBpbiB0aGUgY29tcG9zaXRlLCBpbmNsdWRpbmcgdXBkYXRpbmcgcGh5c2ljYWwgcHJvcGVydGllcyAobWFzcywgYXJlYSwgYXhlcywgaW5lcnRpYSksIGZyb20gYSB3b3JsZC1zcGFjZSBwb2ludC5cbiAgICAgKiBAbWV0aG9kIHNjYWxlXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY2FsZVhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc2NhbGVZXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHBhcmFtIHtib29sfSBbcmVjdXJzaXZlPXRydWVdXG4gICAgICovXG4gICAgQ29tcG9zaXRlLnNjYWxlID0gZnVuY3Rpb24oY29tcG9zaXRlLCBzY2FsZVgsIHNjYWxlWSwgcG9pbnQsIHJlY3Vyc2l2ZSkge1xuICAgICAgICB2YXIgYm9kaWVzID0gcmVjdXJzaXZlID8gQ29tcG9zaXRlLmFsbEJvZGllcyhjb21wb3NpdGUpIDogY29tcG9zaXRlLmJvZGllcztcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV0sXG4gICAgICAgICAgICAgICAgZHggPSBib2R5LnBvc2l0aW9uLnggLSBwb2ludC54LFxuICAgICAgICAgICAgICAgIGR5ID0gYm9keS5wb3NpdGlvbi55IC0gcG9pbnQueTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIEJvZHkuc2V0UG9zaXRpb24oYm9keSwge1xuICAgICAgICAgICAgICAgIHg6IHBvaW50LnggKyBkeCAqIHNjYWxlWCxcbiAgICAgICAgICAgICAgICB5OiBwb2ludC55ICsgZHkgKiBzY2FsZVlcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBCb2R5LnNjYWxlKGJvZHksIHNjYWxlWCwgc2NhbGVZKTtcbiAgICAgICAgfVxuXG4gICAgICAgIENvbXBvc2l0ZS5zZXRNb2RpZmllZChjb21wb3NpdGUsIHRydWUsIHRydWUsIGZhbHNlKTtcblxuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB1bmlvbiBvZiB0aGUgYm91bmRzIG9mIGFsbCBvZiB0aGUgY29tcG9zaXRlJ3MgYm9kaWVzLlxuICAgICAqIEBtZXRob2QgYm91bmRzXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZSBUaGUgY29tcG9zaXRlLlxuICAgICAqIEByZXR1cm5zIHtib3VuZHN9IFRoZSBjb21wb3NpdGUgYm91bmRzLlxuICAgICAqL1xuICAgIENvbXBvc2l0ZS5ib3VuZHMgPSBmdW5jdGlvbihjb21wb3NpdGUpIHtcbiAgICAgICAgdmFyIGJvZGllcyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMoY29tcG9zaXRlKSxcbiAgICAgICAgICAgIHZlcnRpY2VzID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gYm9kaWVzW2ldO1xuICAgICAgICAgICAgdmVydGljZXMucHVzaChib2R5LmJvdW5kcy5taW4sIGJvZHkuYm91bmRzLm1heCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gQm91bmRzLmNyZWF0ZSh2ZXJ0aWNlcyk7XG4gICAgfTtcblxuICAgIC8qXG4gICAgKlxuICAgICogIEV2ZW50cyBEb2N1bWVudGF0aW9uXG4gICAgKlxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIHdoZW4gYSBjYWxsIHRvIGBDb21wb3NpdGUuYWRkYCBpcyBtYWRlLCBiZWZvcmUgb2JqZWN0cyBoYXZlIGJlZW4gYWRkZWQuXG4gICAgKlxuICAgICogQGV2ZW50IGJlZm9yZUFkZFxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm9iamVjdCBUaGUgb2JqZWN0KHMpIHRvIGJlIGFkZGVkIChtYXkgYmUgYSBzaW5nbGUgYm9keSwgY29uc3RyYWludCwgY29tcG9zaXRlIG9yIGEgbWl4ZWQgYXJyYXkgb2YgdGhlc2UpXG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgd2hlbiBhIGNhbGwgdG8gYENvbXBvc2l0ZS5hZGRgIGlzIG1hZGUsIGFmdGVyIG9iamVjdHMgaGF2ZSBiZWVuIGFkZGVkLlxuICAgICpcbiAgICAqIEBldmVudCBhZnRlckFkZFxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm9iamVjdCBUaGUgb2JqZWN0KHMpIHRoYXQgaGF2ZSBiZWVuIGFkZGVkIChtYXkgYmUgYSBzaW5nbGUgYm9keSwgY29uc3RyYWludCwgY29tcG9zaXRlIG9yIGEgbWl4ZWQgYXJyYXkgb2YgdGhlc2UpXG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgd2hlbiBhIGNhbGwgdG8gYENvbXBvc2l0ZS5yZW1vdmVgIGlzIG1hZGUsIGJlZm9yZSBvYmplY3RzIGhhdmUgYmVlbiByZW1vdmVkLlxuICAgICpcbiAgICAqIEBldmVudCBiZWZvcmVSZW1vdmVcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7fSBldmVudC5vYmplY3QgVGhlIG9iamVjdChzKSB0byBiZSByZW1vdmVkIChtYXkgYmUgYSBzaW5nbGUgYm9keSwgY29uc3RyYWludCwgY29tcG9zaXRlIG9yIGEgbWl4ZWQgYXJyYXkgb2YgdGhlc2UpXG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgd2hlbiBhIGNhbGwgdG8gYENvbXBvc2l0ZS5yZW1vdmVgIGlzIG1hZGUsIGFmdGVyIG9iamVjdHMgaGF2ZSBiZWVuIHJlbW92ZWQuXG4gICAgKlxuICAgICogQGV2ZW50IGFmdGVyUmVtb3ZlXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge30gZXZlbnQub2JqZWN0IFRoZSBvYmplY3QocykgdGhhdCBoYXZlIGJlZW4gcmVtb3ZlZCAobWF5IGJlIGEgc2luZ2xlIGJvZHksIGNvbnN0cmFpbnQsIGNvbXBvc2l0ZSBvciBhIG1peGVkIGFycmF5IG9mIHRoZXNlKVxuICAgICogQHBhcmFtIHt9IGV2ZW50LnNvdXJjZSBUaGUgc291cmNlIG9iamVjdCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5uYW1lIFRoZSBuYW1lIG9mIHRoZSBldmVudFxuICAgICovXG5cbiAgICAvKlxuICAgICpcbiAgICAqICBQcm9wZXJ0aWVzIERvY3VtZW50YXRpb25cbiAgICAqXG4gICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGludGVnZXIgYE51bWJlcmAgdW5pcXVlbHkgaWRlbnRpZnlpbmcgbnVtYmVyIGdlbmVyYXRlZCBpbiBgQ29tcG9zaXRlLmNyZWF0ZWAgYnkgYENvbW1vbi5uZXh0SWRgLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGlkXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBTdHJpbmdgIGRlbm90aW5nIHRoZSB0eXBlIG9mIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB0eXBlXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICogQGRlZmF1bHQgXCJjb21wb3NpdGVcIlxuICAgICAqIEByZWFkT25seVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gYXJiaXRyYXJ5IGBTdHJpbmdgIG5hbWUgdG8gaGVscCB0aGUgdXNlciBpZGVudGlmeSBhbmQgbWFuYWdlIGNvbXBvc2l0ZXMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgbGFiZWxcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKiBAZGVmYXVsdCBcIkNvbXBvc2l0ZVwiXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGZsYWcgdGhhdCBzcGVjaWZpZXMgd2hldGhlciB0aGUgY29tcG9zaXRlIGhhcyBiZWVuIG1vZGlmaWVkIGR1cmluZyB0aGUgY3VycmVudCBzdGVwLlxuICAgICAqIE1vc3QgYE1hdHRlci5Db21wb3NpdGVgIG1ldGhvZHMgd2lsbCBhdXRvbWF0aWNhbGx5IHNldCB0aGlzIGZsYWcgdG8gYHRydWVgIHRvIGluZm9ybSB0aGUgZW5naW5lIG9mIGNoYW5nZXMgdG8gYmUgaGFuZGxlZC5cbiAgICAgKiBJZiB5b3UgbmVlZCB0byBjaGFuZ2UgaXQgbWFudWFsbHksIHlvdSBzaG91bGQgdXNlIHRoZSBgQ29tcG9zaXRlLnNldE1vZGlmaWVkYCBtZXRob2QuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgaXNNb2RpZmllZFxuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGhlIGBDb21wb3NpdGVgIHRoYXQgaXMgdGhlIHBhcmVudCBvZiB0aGlzIGNvbXBvc2l0ZS4gSXQgaXMgYXV0b21hdGljYWxseSBtYW5hZ2VkIGJ5IHRoZSBgTWF0dGVyLkNvbXBvc2l0ZWAgbWV0aG9kcy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBwYXJlbnRcbiAgICAgKiBAdHlwZSBjb21wb3NpdGVcbiAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBhcnJheSBvZiBgQm9keWAgdGhhdCBhcmUgX2RpcmVjdF8gY2hpbGRyZW4gb2YgdGhpcyBjb21wb3NpdGUuXG4gICAgICogVG8gYWRkIG9yIHJlbW92ZSBib2RpZXMgeW91IHNob3VsZCB1c2UgYENvbXBvc2l0ZS5hZGRgIGFuZCBgQ29tcG9zaXRlLnJlbW92ZWAgbWV0aG9kcyByYXRoZXIgdGhhbiBkaXJlY3RseSBtb2RpZnlpbmcgdGhpcyBwcm9wZXJ0eS5cbiAgICAgKiBJZiB5b3Ugd2lzaCB0byByZWN1cnNpdmVseSBmaW5kIGFsbCBkZXNjZW5kYW50cywgeW91IHNob3VsZCB1c2UgdGhlIGBDb21wb3NpdGUuYWxsQm9kaWVzYCBtZXRob2QuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgYm9kaWVzXG4gICAgICogQHR5cGUgYm9keVtdXG4gICAgICogQGRlZmF1bHQgW11cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IG9mIGBDb25zdHJhaW50YCB0aGF0IGFyZSBfZGlyZWN0XyBjaGlsZHJlbiBvZiB0aGlzIGNvbXBvc2l0ZS5cbiAgICAgKiBUbyBhZGQgb3IgcmVtb3ZlIGNvbnN0cmFpbnRzIHlvdSBzaG91bGQgdXNlIGBDb21wb3NpdGUuYWRkYCBhbmQgYENvbXBvc2l0ZS5yZW1vdmVgIG1ldGhvZHMgcmF0aGVyIHRoYW4gZGlyZWN0bHkgbW9kaWZ5aW5nIHRoaXMgcHJvcGVydHkuXG4gICAgICogSWYgeW91IHdpc2ggdG8gcmVjdXJzaXZlbHkgZmluZCBhbGwgZGVzY2VuZGFudHMsIHlvdSBzaG91bGQgdXNlIHRoZSBgQ29tcG9zaXRlLmFsbENvbnN0cmFpbnRzYCBtZXRob2QuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgY29uc3RyYWludHNcbiAgICAgKiBAdHlwZSBjb25zdHJhaW50W11cbiAgICAgKiBAZGVmYXVsdCBbXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gYXJyYXkgb2YgYENvbXBvc2l0ZWAgdGhhdCBhcmUgX2RpcmVjdF8gY2hpbGRyZW4gb2YgdGhpcyBjb21wb3NpdGUuXG4gICAgICogVG8gYWRkIG9yIHJlbW92ZSBjb21wb3NpdGVzIHlvdSBzaG91bGQgdXNlIGBDb21wb3NpdGUuYWRkYCBhbmQgYENvbXBvc2l0ZS5yZW1vdmVgIG1ldGhvZHMgcmF0aGVyIHRoYW4gZGlyZWN0bHkgbW9kaWZ5aW5nIHRoaXMgcHJvcGVydHkuXG4gICAgICogSWYgeW91IHdpc2ggdG8gcmVjdXJzaXZlbHkgZmluZCBhbGwgZGVzY2VuZGFudHMsIHlvdSBzaG91bGQgdXNlIHRoZSBgQ29tcG9zaXRlLmFsbENvbXBvc2l0ZXNgIG1ldGhvZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBjb21wb3NpdGVzXG4gICAgICogQHR5cGUgY29tcG9zaXRlW11cbiAgICAgKiBAZGVmYXVsdCBbXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gb2JqZWN0IHJlc2VydmVkIGZvciBzdG9yaW5nIHBsdWdpbi1zcGVjaWZpYyBwcm9wZXJ0aWVzLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHBsdWdpblxuICAgICAqIEB0eXBlIHt9XG4gICAgICovXG5cbn0pKCk7XG5cbn0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2NvcmUvRXZlbnRzXCI6MTYsXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIjoyNixcIi4vQm9keVwiOjF9XSwzOltmdW5jdGlvbihfZGVyZXFfLG1vZHVsZSxleHBvcnRzKXtcbi8qKlxuKiBUaGUgYE1hdHRlci5Xb3JsZGAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgdGhlIHdvcmxkIGNvbXBvc2l0ZS5cbiogQSBgTWF0dGVyLldvcmxkYCBpcyBhIGBNYXR0ZXIuQ29tcG9zaXRlYCBib2R5LCB3aGljaCBpcyBhIGNvbGxlY3Rpb24gb2YgYE1hdHRlci5Cb2R5YCwgYE1hdHRlci5Db25zdHJhaW50YCBhbmQgb3RoZXIgYE1hdHRlci5Db21wb3NpdGVgLlxuKiBBIGBNYXR0ZXIuV29ybGRgIGhhcyBhIGZldyBhZGRpdGlvbmFsIHByb3BlcnRpZXMgaW5jbHVkaW5nIGBncmF2aXR5YCBhbmQgYGJvdW5kc2AuXG4qIEl0IGlzIGltcG9ydGFudCB0byB1c2UgdGhlIGZ1bmN0aW9ucyBpbiB0aGUgYE1hdHRlci5Db21wb3NpdGVgIG1vZHVsZSB0byBtb2RpZnkgdGhlIHdvcmxkIGNvbXBvc2l0ZSwgcmF0aGVyIHRoYW4gZGlyZWN0bHkgbW9kaWZ5aW5nIGl0cyBwcm9wZXJ0aWVzLlxuKiBUaGVyZSBhcmUgYWxzbyBhIGZldyBtZXRob2RzIGhlcmUgdGhhdCBhbGlhcyB0aG9zZSBpbiBgTWF0dGVyLkNvbXBvc2l0ZWAgZm9yIGVhc2llciByZWFkYWJpbGl0eS5cbipcbiogU2VlIHRoZSBpbmNsdWRlZCB1c2FnZSBbZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKS5cbipcbiogQGNsYXNzIFdvcmxkXG4qIEBleHRlbmRzIENvbXBvc2l0ZVxuKi9cblxudmFyIFdvcmxkID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gV29ybGQ7XG5cbnZhciBDb21wb3NpdGUgPSBfZGVyZXFfKCcuL0NvbXBvc2l0ZScpO1xudmFyIENvbnN0cmFpbnQgPSBfZGVyZXFfKCcuLi9jb25zdHJhaW50L0NvbnN0cmFpbnQnKTtcbnZhciBDb21tb24gPSBfZGVyZXFfKCcuLi9jb3JlL0NvbW1vbicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHdvcmxkIGNvbXBvc2l0ZS4gVGhlIG9wdGlvbnMgcGFyYW1ldGVyIGlzIGFuIG9iamVjdCB0aGF0IHNwZWNpZmllcyBhbnkgcHJvcGVydGllcyB5b3Ugd2lzaCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHMuXG4gICAgICogU2VlIHRoZSBwcm9wZXJ0aWVzIHNlY3Rpb24gYmVsb3cgZm9yIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHdoYXQgeW91IGNhbiBwYXNzIHZpYSB0aGUgYG9wdGlvbnNgIG9iamVjdC5cbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7fSBvcHRpb25zXG4gICAgICogQHJldHVybiB7d29ybGR9IEEgbmV3IHdvcmxkXG4gICAgICovXG4gICAgV29ybGQuY3JlYXRlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICB2YXIgY29tcG9zaXRlID0gQ29tcG9zaXRlLmNyZWF0ZSgpO1xuXG4gICAgICAgIHZhciBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIGxhYmVsOiAnV29ybGQnLFxuICAgICAgICAgICAgZ3Jhdml0eToge1xuICAgICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgICAgeTogMSxcbiAgICAgICAgICAgICAgICBzY2FsZTogMC4wMDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib3VuZHM6IHsgXG4gICAgICAgICAgICAgICAgbWluOiB7IHg6IC1JbmZpbml0eSwgeTogLUluZmluaXR5IH0sIFxuICAgICAgICAgICAgICAgIG1heDogeyB4OiBJbmZpbml0eSwgeTogSW5maW5pdHkgfSBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBDb21tb24uZXh0ZW5kKGNvbXBvc2l0ZSwgZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgIH07XG5cbiAgICAvKlxuICAgICpcbiAgICAqICBQcm9wZXJ0aWVzIERvY3VtZW50YXRpb25cbiAgICAqXG4gICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBncmF2aXR5IHRvIGFwcGx5IG9uIHRoZSB3b3JsZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBncmF2aXR5XG4gICAgICogQHR5cGUgb2JqZWN0XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZ3Jhdml0eSB4IGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBncmF2aXR5LnhcbiAgICAgKiBAdHlwZSBvYmplY3RcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZ3Jhdml0eSB5IGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBncmF2aXR5LnlcbiAgICAgKiBAdHlwZSBvYmplY3RcbiAgICAgKiBAZGVmYXVsdCAxXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZ3Jhdml0eSBzY2FsZSBmYWN0b3IuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZ3Jhdml0eS5zY2FsZVxuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqIEBkZWZhdWx0IDAuMDAxXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBCb3VuZHNgIG9iamVjdCB0aGF0IGRlZmluZXMgdGhlIHdvcmxkIGJvdW5kcyBmb3IgY29sbGlzaW9uIGRldGVjdGlvbi5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBib3VuZHNcbiAgICAgKiBAdHlwZSBib3VuZHNcbiAgICAgKiBAZGVmYXVsdCB7IG1pbjogeyB4OiAtSW5maW5pdHksIHk6IC1JbmZpbml0eSB9LCBtYXg6IHsgeDogSW5maW5pdHksIHk6IEluZmluaXR5IH0gfVxuICAgICAqL1xuXG4gICAgLy8gV29ybGQgaXMgYSBDb21wb3NpdGUgYm9keVxuICAgIC8vIHNlZSBzcmMvbW9kdWxlL091dHJvLmpzIGZvciB0aGVzZSBhbGlhc2VzOlxuICAgIFxuICAgIC8qKlxuICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuYWRkXG4gICAgICogQG1ldGhvZCBhZGRcbiAgICAgKiBAcGFyYW0ge3dvcmxkfSB3b3JsZFxuICAgICAqIEBwYXJhbSB7fSBvYmplY3RcbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCB3b3JsZCB3aXRoIHRoZSBvYmplY3RzIGFkZGVkXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBhbGlhcyBmb3IgQ29tcG9zaXRlLnJlbW92ZVxuICAgICAqIEBtZXRob2QgcmVtb3ZlXG4gICAgICogQHBhcmFtIHt3b3JsZH0gd29ybGRcbiAgICAgKiBAcGFyYW0ge30gb2JqZWN0XG4gICAgICogQHBhcmFtIHtib29sZWFufSBbZGVlcD1mYWxzZV1cbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IFRoZSBvcmlnaW5hbCB3b3JsZCB3aXRoIHRoZSBvYmplY3RzIHJlbW92ZWRcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuY2xlYXJcbiAgICAgKiBAbWV0aG9kIGNsZWFyXG4gICAgICogQHBhcmFtIHt3b3JsZH0gd29ybGRcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGtlZXBTdGF0aWNcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuYWRkQ29tcG9zaXRlXG4gICAgICogQG1ldGhvZCBhZGRDb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge3dvcmxkfSB3b3JsZFxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcmV0dXJuIHt3b3JsZH0gVGhlIG9yaWdpbmFsIHdvcmxkIHdpdGggdGhlIG9iamVjdHMgZnJvbSBjb21wb3NpdGUgYWRkZWRcbiAgICAgKi9cbiAgICBcbiAgICAgLyoqXG4gICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuYWRkQm9keVxuICAgICAgKiBAbWV0aG9kIGFkZEJvZHlcbiAgICAgICogQHBhcmFtIHt3b3JsZH0gd29ybGRcbiAgICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICAqIEByZXR1cm4ge3dvcmxkfSBUaGUgb3JpZ2luYWwgd29ybGQgd2l0aCB0aGUgYm9keSBhZGRlZFxuICAgICAgKi9cblxuICAgICAvKipcbiAgICAgICogQW4gYWxpYXMgZm9yIENvbXBvc2l0ZS5hZGRDb25zdHJhaW50XG4gICAgICAqIEBtZXRob2QgYWRkQ29uc3RyYWludFxuICAgICAgKiBAcGFyYW0ge3dvcmxkfSB3b3JsZFxuICAgICAgKiBAcGFyYW0ge2NvbnN0cmFpbnR9IGNvbnN0cmFpbnRcbiAgICAgICogQHJldHVybiB7d29ybGR9IFRoZSBvcmlnaW5hbCB3b3JsZCB3aXRoIHRoZSBjb25zdHJhaW50IGFkZGVkXG4gICAgICAqL1xuXG59KSgpO1xuXG59LHtcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiOjEyLFwiLi4vY29yZS9Db21tb25cIjoxNCxcIi4vQ29tcG9zaXRlXCI6Mn1dLDQ6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLkNvbnRhY3RgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBjcmVhdGluZyBhbmQgbWFuaXB1bGF0aW5nIGNvbGxpc2lvbiBjb250YWN0cy5cbipcbiogQGNsYXNzIENvbnRhY3RcbiovXG5cbnZhciBDb250YWN0ID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gQ29udGFjdDtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBjb250YWN0LlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHt2ZXJ0ZXh9IHZlcnRleFxuICAgICAqIEByZXR1cm4ge2NvbnRhY3R9IEEgbmV3IGNvbnRhY3RcbiAgICAgKi9cbiAgICBDb250YWN0LmNyZWF0ZSA9IGZ1bmN0aW9uKHZlcnRleCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IENvbnRhY3QuaWQodmVydGV4KSxcbiAgICAgICAgICAgIHZlcnRleDogdmVydGV4LFxuICAgICAgICAgICAgbm9ybWFsSW1wdWxzZTogMCxcbiAgICAgICAgICAgIHRhbmdlbnRJbXB1bHNlOiAwXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYSBjb250YWN0IGlkLlxuICAgICAqIEBtZXRob2QgaWRcbiAgICAgKiBAcGFyYW0ge3ZlcnRleH0gdmVydGV4XG4gICAgICogQHJldHVybiB7c3RyaW5nfSBVbmlxdWUgY29udGFjdElEXG4gICAgICovXG4gICAgQ29udGFjdC5pZCA9IGZ1bmN0aW9uKHZlcnRleCkge1xuICAgICAgICByZXR1cm4gdmVydGV4LmJvZHkuaWQgKyAnXycgKyB2ZXJ0ZXguaW5kZXg7XG4gICAgfTtcblxufSkoKTtcblxufSx7fV0sNTpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuRGV0ZWN0b3JgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBkZXRlY3RpbmcgY29sbGlzaW9ucyBnaXZlbiBhIHNldCBvZiBwYWlycy5cbipcbiogQGNsYXNzIERldGVjdG9yXG4qL1xuXG4vLyBUT0RPOiBzcGVjdWxhdGl2ZSBjb250YWN0c1xuXG52YXIgRGV0ZWN0b3IgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBEZXRlY3RvcjtcblxudmFyIFNBVCA9IF9kZXJlcV8oJy4vU0FUJyk7XG52YXIgUGFpciA9IF9kZXJlcV8oJy4vUGFpcicpO1xudmFyIEJvdW5kcyA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L0JvdW5kcycpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBGaW5kcyBhbGwgY29sbGlzaW9ucyBnaXZlbiBhIGxpc3Qgb2YgcGFpcnMuXG4gICAgICogQG1ldGhvZCBjb2xsaXNpb25zXG4gICAgICogQHBhcmFtIHtwYWlyW119IGJyb2FkcGhhc2VQYWlyc1xuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKiBAcmV0dXJuIHthcnJheX0gY29sbGlzaW9uc1xuICAgICAqL1xuICAgIERldGVjdG9yLmNvbGxpc2lvbnMgPSBmdW5jdGlvbihicm9hZHBoYXNlUGFpcnMsIGVuZ2luZSkge1xuICAgICAgICB2YXIgY29sbGlzaW9ucyA9IFtdLFxuICAgICAgICAgICAgcGFpcnNUYWJsZSA9IGVuZ2luZS5wYWlycy50YWJsZTtcblxuICAgICAgICBcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBicm9hZHBoYXNlUGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5QSA9IGJyb2FkcGhhc2VQYWlyc1tpXVswXSwgXG4gICAgICAgICAgICAgICAgYm9keUIgPSBicm9hZHBoYXNlUGFpcnNbaV1bMV07XG5cbiAgICAgICAgICAgIGlmICgoYm9keUEuaXNTdGF0aWMgfHwgYm9keUEuaXNTbGVlcGluZykgJiYgKGJvZHlCLmlzU3RhdGljIHx8IGJvZHlCLmlzU2xlZXBpbmcpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoIURldGVjdG9yLmNhbkNvbGxpZGUoYm9keUEuY29sbGlzaW9uRmlsdGVyLCBib2R5Qi5jb2xsaXNpb25GaWx0ZXIpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG5cbiAgICAgICAgICAgIC8vIG1pZCBwaGFzZVxuICAgICAgICAgICAgaWYgKEJvdW5kcy5vdmVybGFwcyhib2R5QS5ib3VuZHMsIGJvZHlCLmJvdW5kcykpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gYm9keUEucGFydHMubGVuZ3RoID4gMSA/IDEgOiAwOyBqIDwgYm9keUEucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnRBID0gYm9keUEucGFydHNbal07XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IGJvZHlCLnBhcnRzLmxlbmd0aCA+IDEgPyAxIDogMDsgayA8IGJvZHlCLnBhcnRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFydEIgPSBib2R5Qi5wYXJ0c1trXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChwYXJ0QSA9PT0gYm9keUEgJiYgcGFydEIgPT09IGJvZHlCKSB8fCBCb3VuZHMub3ZlcmxhcHMocGFydEEuYm91bmRzLCBwYXJ0Qi5ib3VuZHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmluZCBhIHByZXZpb3VzIGNvbGxpc2lvbiB3ZSBjb3VsZCByZXVzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYWlySWQgPSBQYWlyLmlkKHBhcnRBLCBwYXJ0QiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhaXIgPSBwYWlyc1RhYmxlW3BhaXJJZF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzQ29sbGlzaW9uO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhaXIgJiYgcGFpci5pc0FjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c0NvbGxpc2lvbiA9IHBhaXIuY29sbGlzaW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzQ29sbGlzaW9uID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuYXJyb3cgcGhhc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29sbGlzaW9uID0gU0FULmNvbGxpZGVzKHBhcnRBLCBwYXJ0QiwgcHJldmlvdXNDb2xsaXNpb24pO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29sbGlzaW9uLmNvbGxpZGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxpc2lvbnMucHVzaChjb2xsaXNpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb2xsaXNpb25zO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGB0cnVlYCBpZiBib3RoIHN1cHBsaWVkIGNvbGxpc2lvbiBmaWx0ZXJzIHdpbGwgYWxsb3cgYSBjb2xsaXNpb24gdG8gb2NjdXIuXG4gICAgICogU2VlIGBib2R5LmNvbGxpc2lvbkZpbHRlcmAgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAgICogQG1ldGhvZCBjYW5Db2xsaWRlXG4gICAgICogQHBhcmFtIHt9IGZpbHRlckFcbiAgICAgKiBAcGFyYW0ge30gZmlsdGVyQlxuICAgICAqIEByZXR1cm4ge2Jvb2x9IGB0cnVlYCBpZiBjb2xsaXNpb24gY2FuIG9jY3VyXG4gICAgICovXG4gICAgRGV0ZWN0b3IuY2FuQ29sbGlkZSA9IGZ1bmN0aW9uKGZpbHRlckEsIGZpbHRlckIpIHtcbiAgICAgICAgaWYgKGZpbHRlckEuZ3JvdXAgPT09IGZpbHRlckIuZ3JvdXAgJiYgZmlsdGVyQS5ncm91cCAhPT0gMClcbiAgICAgICAgICAgIHJldHVybiBmaWx0ZXJBLmdyb3VwID4gMDtcblxuICAgICAgICByZXR1cm4gKGZpbHRlckEubWFzayAmIGZpbHRlckIuY2F0ZWdvcnkpICE9PSAwICYmIChmaWx0ZXJCLm1hc2sgJiBmaWx0ZXJBLmNhdGVnb3J5KSAhPT0gMDtcbiAgICB9O1xuXG59KSgpO1xuXG59LHtcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi9QYWlyXCI6NyxcIi4vU0FUXCI6MTF9XSw2OltmdW5jdGlvbihfZGVyZXFfLG1vZHVsZSxleHBvcnRzKXtcbi8qKlxuKiBUaGUgYE1hdHRlci5HcmlkYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgY3JlYXRpbmcgYW5kIG1hbmlwdWxhdGluZyBjb2xsaXNpb24gYnJvYWRwaGFzZSBncmlkIHN0cnVjdHVyZXMuXG4qXG4qIEBjbGFzcyBHcmlkXG4qL1xuXG52YXIgR3JpZCA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWQ7XG5cbnZhciBQYWlyID0gX2RlcmVxXygnLi9QYWlyJyk7XG52YXIgRGV0ZWN0b3IgPSBfZGVyZXFfKCcuL0RldGVjdG9yJyk7XG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi4vY29yZS9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBncmlkLlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHt9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJuIHtncmlkfSBBIG5ldyBncmlkXG4gICAgICovXG4gICAgR3JpZC5jcmVhdGUgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IEdyaWQsXG4gICAgICAgICAgICBkZXRlY3RvcjogRGV0ZWN0b3IuY29sbGlzaW9ucyxcbiAgICAgICAgICAgIGJ1Y2tldHM6IHt9LFxuICAgICAgICAgICAgcGFpcnM6IHt9LFxuICAgICAgICAgICAgcGFpcnNMaXN0OiBbXSxcbiAgICAgICAgICAgIGJ1Y2tldFdpZHRoOiA0OCxcbiAgICAgICAgICAgIGJ1Y2tldEhlaWdodDogNDhcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gQ29tbW9uLmV4dGVuZChkZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRoZSB3aWR0aCBvZiBhIHNpbmdsZSBncmlkIGJ1Y2tldC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBidWNrZXRXaWR0aFxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDQ4XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgaGVpZ2h0IG9mIGEgc2luZ2xlIGdyaWQgYnVja2V0LlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGJ1Y2tldEhlaWdodFxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDQ4XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBncmlkLlxuICAgICAqIEBtZXRob2QgdXBkYXRlXG4gICAgICogQHBhcmFtIHtncmlkfSBncmlkXG4gICAgICogQHBhcmFtIHtib2R5W119IGJvZGllc1xuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGZvcmNlVXBkYXRlXG4gICAgICovXG4gICAgR3JpZC51cGRhdGUgPSBmdW5jdGlvbihncmlkLCBib2RpZXMsIGVuZ2luZSwgZm9yY2VVcGRhdGUpIHtcbiAgICAgICAgdmFyIGksIGNvbCwgcm93LFxuICAgICAgICAgICAgd29ybGQgPSBlbmdpbmUud29ybGQsXG4gICAgICAgICAgICBidWNrZXRzID0gZ3JpZC5idWNrZXRzLFxuICAgICAgICAgICAgYnVja2V0LFxuICAgICAgICAgICAgYnVja2V0SWQsXG4gICAgICAgICAgICBncmlkQ2hhbmdlZCA9IGZhbHNlO1xuXG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV07XG5cbiAgICAgICAgICAgIGlmIChib2R5LmlzU2xlZXBpbmcgJiYgIWZvcmNlVXBkYXRlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAvLyBkb24ndCB1cGRhdGUgb3V0IG9mIHdvcmxkIGJvZGllc1xuICAgICAgICAgICAgaWYgKGJvZHkuYm91bmRzLm1heC54IDwgd29ybGQuYm91bmRzLm1pbi54IHx8IGJvZHkuYm91bmRzLm1pbi54ID4gd29ybGQuYm91bmRzLm1heC54XG4gICAgICAgICAgICAgICAgfHwgYm9keS5ib3VuZHMubWF4LnkgPCB3b3JsZC5ib3VuZHMubWluLnkgfHwgYm9keS5ib3VuZHMubWluLnkgPiB3b3JsZC5ib3VuZHMubWF4LnkpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIHZhciBuZXdSZWdpb24gPSBHcmlkLl9nZXRSZWdpb24oZ3JpZCwgYm9keSk7XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZSBib2R5IGhhcyBjaGFuZ2VkIGdyaWQgcmVnaW9uXG4gICAgICAgICAgICBpZiAoIWJvZHkucmVnaW9uIHx8IG5ld1JlZ2lvbi5pZCAhPT0gYm9keS5yZWdpb24uaWQgfHwgZm9yY2VVcGRhdGUpIHtcblxuXG4gICAgICAgICAgICAgICAgaWYgKCFib2R5LnJlZ2lvbiB8fCBmb3JjZVVwZGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgYm9keS5yZWdpb24gPSBuZXdSZWdpb247XG5cbiAgICAgICAgICAgICAgICB2YXIgdW5pb24gPSBHcmlkLl9yZWdpb25VbmlvbihuZXdSZWdpb24sIGJvZHkucmVnaW9uKTtcblxuICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSBncmlkIGJ1Y2tldHMgYWZmZWN0ZWQgYnkgcmVnaW9uIGNoYW5nZVxuICAgICAgICAgICAgICAgIC8vIGl0ZXJhdGUgb3ZlciB0aGUgdW5pb24gb2YgYm90aCByZWdpb25zXG4gICAgICAgICAgICAgICAgZm9yIChjb2wgPSB1bmlvbi5zdGFydENvbDsgY29sIDw9IHVuaW9uLmVuZENvbDsgY29sKyspIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChyb3cgPSB1bmlvbi5zdGFydFJvdzsgcm93IDw9IHVuaW9uLmVuZFJvdzsgcm93KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1Y2tldElkID0gR3JpZC5fZ2V0QnVja2V0SWQoY29sLCByb3cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVja2V0ID0gYnVja2V0c1tidWNrZXRJZF07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpc0luc2lkZU5ld1JlZ2lvbiA9IChjb2wgPj0gbmV3UmVnaW9uLnN0YXJ0Q29sICYmIGNvbCA8PSBuZXdSZWdpb24uZW5kQ29sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiByb3cgPj0gbmV3UmVnaW9uLnN0YXJ0Um93ICYmIHJvdyA8PSBuZXdSZWdpb24uZW5kUm93KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzSW5zaWRlT2xkUmVnaW9uID0gKGNvbCA+PSBib2R5LnJlZ2lvbi5zdGFydENvbCAmJiBjb2wgPD0gYm9keS5yZWdpb24uZW5kQ29sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiByb3cgPj0gYm9keS5yZWdpb24uc3RhcnRSb3cgJiYgcm93IDw9IGJvZHkucmVnaW9uLmVuZFJvdyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJlbW92ZSBmcm9tIG9sZCByZWdpb24gYnVja2V0c1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc0luc2lkZU5ld1JlZ2lvbiAmJiBpc0luc2lkZU9sZFJlZ2lvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc0luc2lkZU9sZFJlZ2lvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnVja2V0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR3JpZC5fYnVja2V0UmVtb3ZlQm9keShncmlkLCBidWNrZXQsIGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWRkIHRvIG5ldyByZWdpb24gYnVja2V0c1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJvZHkucmVnaW9uID09PSBuZXdSZWdpb24gfHwgKGlzSW5zaWRlTmV3UmVnaW9uICYmICFpc0luc2lkZU9sZFJlZ2lvbikgfHwgZm9yY2VVcGRhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWJ1Y2tldClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVja2V0ID0gR3JpZC5fY3JlYXRlQnVja2V0KGJ1Y2tldHMsIGJ1Y2tldElkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHcmlkLl9idWNrZXRBZGRCb2R5KGdyaWQsIGJ1Y2tldCwgYm9keSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBzZXQgdGhlIG5ldyByZWdpb25cbiAgICAgICAgICAgICAgICBib2R5LnJlZ2lvbiA9IG5ld1JlZ2lvbjtcblxuICAgICAgICAgICAgICAgIC8vIGZsYWcgY2hhbmdlcyBzbyB3ZSBjYW4gdXBkYXRlIHBhaXJzXG4gICAgICAgICAgICAgICAgZ3JpZENoYW5nZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIHBhaXJzIGxpc3Qgb25seSBpZiBwYWlycyBjaGFuZ2VkIChpLmUuIGEgYm9keSBjaGFuZ2VkIHJlZ2lvbilcbiAgICAgICAgaWYgKGdyaWRDaGFuZ2VkKVxuICAgICAgICAgICAgZ3JpZC5wYWlyc0xpc3QgPSBHcmlkLl9jcmVhdGVBY3RpdmVQYWlyc0xpc3QoZ3JpZCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsZWFycyB0aGUgZ3JpZC5cbiAgICAgKiBAbWV0aG9kIGNsZWFyXG4gICAgICogQHBhcmFtIHtncmlkfSBncmlkXG4gICAgICovXG4gICAgR3JpZC5jbGVhciA9IGZ1bmN0aW9uKGdyaWQpIHtcbiAgICAgICAgZ3JpZC5idWNrZXRzID0ge307XG4gICAgICAgIGdyaWQucGFpcnMgPSB7fTtcbiAgICAgICAgZ3JpZC5wYWlyc0xpc3QgPSBbXTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRmluZHMgdGhlIHVuaW9uIG9mIHR3byByZWdpb25zLlxuICAgICAqIEBtZXRob2QgX3JlZ2lvblVuaW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gcmVnaW9uQVxuICAgICAqIEBwYXJhbSB7fSByZWdpb25CXG4gICAgICogQHJldHVybiB7fSByZWdpb25cbiAgICAgKi9cbiAgICBHcmlkLl9yZWdpb25VbmlvbiA9IGZ1bmN0aW9uKHJlZ2lvbkEsIHJlZ2lvbkIpIHtcbiAgICAgICAgdmFyIHN0YXJ0Q29sID0gTWF0aC5taW4ocmVnaW9uQS5zdGFydENvbCwgcmVnaW9uQi5zdGFydENvbCksXG4gICAgICAgICAgICBlbmRDb2wgPSBNYXRoLm1heChyZWdpb25BLmVuZENvbCwgcmVnaW9uQi5lbmRDb2wpLFxuICAgICAgICAgICAgc3RhcnRSb3cgPSBNYXRoLm1pbihyZWdpb25BLnN0YXJ0Um93LCByZWdpb25CLnN0YXJ0Um93KSxcbiAgICAgICAgICAgIGVuZFJvdyA9IE1hdGgubWF4KHJlZ2lvbkEuZW5kUm93LCByZWdpb25CLmVuZFJvdyk7XG5cbiAgICAgICAgcmV0dXJuIEdyaWQuX2NyZWF0ZVJlZ2lvbihzdGFydENvbCwgZW5kQ29sLCBzdGFydFJvdywgZW5kUm93KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcmVnaW9uIGEgZ2l2ZW4gYm9keSBmYWxscyBpbiBmb3IgYSBnaXZlbiBncmlkLlxuICAgICAqIEBtZXRob2QgX2dldFJlZ2lvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHt9IGdyaWRcbiAgICAgKiBAcGFyYW0ge30gYm9keVxuICAgICAqIEByZXR1cm4ge30gcmVnaW9uXG4gICAgICovXG4gICAgR3JpZC5fZ2V0UmVnaW9uID0gZnVuY3Rpb24oZ3JpZCwgYm9keSkge1xuICAgICAgICB2YXIgYm91bmRzID0gYm9keS5ib3VuZHMsXG4gICAgICAgICAgICBzdGFydENvbCA9IE1hdGguZmxvb3IoYm91bmRzLm1pbi54IC8gZ3JpZC5idWNrZXRXaWR0aCksXG4gICAgICAgICAgICBlbmRDb2wgPSBNYXRoLmZsb29yKGJvdW5kcy5tYXgueCAvIGdyaWQuYnVja2V0V2lkdGgpLFxuICAgICAgICAgICAgc3RhcnRSb3cgPSBNYXRoLmZsb29yKGJvdW5kcy5taW4ueSAvIGdyaWQuYnVja2V0SGVpZ2h0KSxcbiAgICAgICAgICAgIGVuZFJvdyA9IE1hdGguZmxvb3IoYm91bmRzLm1heC55IC8gZ3JpZC5idWNrZXRIZWlnaHQpO1xuXG4gICAgICAgIHJldHVybiBHcmlkLl9jcmVhdGVSZWdpb24oc3RhcnRDb2wsIGVuZENvbCwgc3RhcnRSb3csIGVuZFJvdyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSByZWdpb24uXG4gICAgICogQG1ldGhvZCBfY3JlYXRlUmVnaW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gc3RhcnRDb2xcbiAgICAgKiBAcGFyYW0ge30gZW5kQ29sXG4gICAgICogQHBhcmFtIHt9IHN0YXJ0Um93XG4gICAgICogQHBhcmFtIHt9IGVuZFJvd1xuICAgICAqIEByZXR1cm4ge30gcmVnaW9uXG4gICAgICovXG4gICAgR3JpZC5fY3JlYXRlUmVnaW9uID0gZnVuY3Rpb24oc3RhcnRDb2wsIGVuZENvbCwgc3RhcnRSb3csIGVuZFJvdykge1xuICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICAgIGlkOiBzdGFydENvbCArICcsJyArIGVuZENvbCArICcsJyArIHN0YXJ0Um93ICsgJywnICsgZW5kUm93LFxuICAgICAgICAgICAgc3RhcnRDb2w6IHN0YXJ0Q29sLCBcbiAgICAgICAgICAgIGVuZENvbDogZW5kQ29sLCBcbiAgICAgICAgICAgIHN0YXJ0Um93OiBzdGFydFJvdywgXG4gICAgICAgICAgICBlbmRSb3c6IGVuZFJvdyBcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYnVja2V0IGlkIGF0IHRoZSBnaXZlbiBwb3NpdGlvbi5cbiAgICAgKiBAbWV0aG9kIF9nZXRCdWNrZXRJZFxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHt9IGNvbHVtblxuICAgICAqIEBwYXJhbSB7fSByb3dcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IGJ1Y2tldCBpZFxuICAgICAqL1xuICAgIEdyaWQuX2dldEJ1Y2tldElkID0gZnVuY3Rpb24oY29sdW1uLCByb3cpIHtcbiAgICAgICAgcmV0dXJuICdDJyArIGNvbHVtbiArICdSJyArIHJvdztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGJ1Y2tldC5cbiAgICAgKiBAbWV0aG9kIF9jcmVhdGVCdWNrZXRcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7fSBidWNrZXRzXG4gICAgICogQHBhcmFtIHt9IGJ1Y2tldElkXG4gICAgICogQHJldHVybiB7fSBidWNrZXRcbiAgICAgKi9cbiAgICBHcmlkLl9jcmVhdGVCdWNrZXQgPSBmdW5jdGlvbihidWNrZXRzLCBidWNrZXRJZCkge1xuICAgICAgICB2YXIgYnVja2V0ID0gYnVja2V0c1tidWNrZXRJZF0gPSBbXTtcbiAgICAgICAgcmV0dXJuIGJ1Y2tldDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQWRkcyBhIGJvZHkgdG8gYSBidWNrZXQuXG4gICAgICogQG1ldGhvZCBfYnVja2V0QWRkQm9keVxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHt9IGdyaWRcbiAgICAgKiBAcGFyYW0ge30gYnVja2V0XG4gICAgICogQHBhcmFtIHt9IGJvZHlcbiAgICAgKi9cbiAgICBHcmlkLl9idWNrZXRBZGRCb2R5ID0gZnVuY3Rpb24oZ3JpZCwgYnVja2V0LCBib2R5KSB7XG4gICAgICAgIC8vIGFkZCBuZXcgcGFpcnNcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWNrZXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5QiA9IGJ1Y2tldFtpXTtcblxuICAgICAgICAgICAgaWYgKGJvZHkuaWQgPT09IGJvZHlCLmlkIHx8IChib2R5LmlzU3RhdGljICYmIGJvZHlCLmlzU3RhdGljKSlcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgLy8ga2VlcCB0cmFjayBvZiB0aGUgbnVtYmVyIG9mIGJ1Y2tldHMgdGhlIHBhaXIgZXhpc3RzIGluXG4gICAgICAgICAgICAvLyBpbXBvcnRhbnQgZm9yIEdyaWQudXBkYXRlIHRvIHdvcmtcbiAgICAgICAgICAgIHZhciBwYWlySWQgPSBQYWlyLmlkKGJvZHksIGJvZHlCKSxcbiAgICAgICAgICAgICAgICBwYWlyID0gZ3JpZC5wYWlyc1twYWlySWRdO1xuXG4gICAgICAgICAgICBpZiAocGFpcikge1xuICAgICAgICAgICAgICAgIHBhaXJbMl0gKz0gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZ3JpZC5wYWlyc1twYWlySWRdID0gW2JvZHksIGJvZHlCLCAxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFkZCB0byBib2RpZXMgKGFmdGVyIHBhaXJzLCBvdGhlcndpc2UgcGFpcnMgd2l0aCBzZWxmKVxuICAgICAgICBidWNrZXQucHVzaChib2R5KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIGJvZHkgZnJvbSBhIGJ1Y2tldC5cbiAgICAgKiBAbWV0aG9kIF9idWNrZXRSZW1vdmVCb2R5XG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gZ3JpZFxuICAgICAqIEBwYXJhbSB7fSBidWNrZXRcbiAgICAgKiBAcGFyYW0ge30gYm9keVxuICAgICAqL1xuICAgIEdyaWQuX2J1Y2tldFJlbW92ZUJvZHkgPSBmdW5jdGlvbihncmlkLCBidWNrZXQsIGJvZHkpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGZyb20gYnVja2V0XG4gICAgICAgIGJ1Y2tldC5zcGxpY2UoQ29tbW9uLmluZGV4T2YoYnVja2V0LCBib2R5KSwgMSk7XG5cbiAgICAgICAgLy8gdXBkYXRlIHBhaXIgY291bnRzXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnVja2V0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAvLyBrZWVwIHRyYWNrIG9mIHRoZSBudW1iZXIgb2YgYnVja2V0cyB0aGUgcGFpciBleGlzdHMgaW5cbiAgICAgICAgICAgIC8vIGltcG9ydGFudCBmb3IgX2NyZWF0ZUFjdGl2ZVBhaXJzTGlzdCB0byB3b3JrXG4gICAgICAgICAgICB2YXIgYm9keUIgPSBidWNrZXRbaV0sXG4gICAgICAgICAgICAgICAgcGFpcklkID0gUGFpci5pZChib2R5LCBib2R5QiksXG4gICAgICAgICAgICAgICAgcGFpciA9IGdyaWQucGFpcnNbcGFpcklkXTtcblxuICAgICAgICAgICAgaWYgKHBhaXIpXG4gICAgICAgICAgICAgICAgcGFpclsyXSAtPSAxO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhIGxpc3Qgb2YgdGhlIGFjdGl2ZSBwYWlycyBpbiB0aGUgZ3JpZC5cbiAgICAgKiBAbWV0aG9kIF9jcmVhdGVBY3RpdmVQYWlyc0xpc3RcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7fSBncmlkXG4gICAgICogQHJldHVybiBbXSBwYWlyc1xuICAgICAqL1xuICAgIEdyaWQuX2NyZWF0ZUFjdGl2ZVBhaXJzTGlzdCA9IGZ1bmN0aW9uKGdyaWQpIHtcbiAgICAgICAgdmFyIHBhaXJLZXlzLFxuICAgICAgICAgICAgcGFpcixcbiAgICAgICAgICAgIHBhaXJzID0gW107XG5cbiAgICAgICAgLy8gZ3JpZC5wYWlycyBpcyB1c2VkIGFzIGEgaGFzaG1hcFxuICAgICAgICBwYWlyS2V5cyA9IENvbW1vbi5rZXlzKGdyaWQucGFpcnMpO1xuXG4gICAgICAgIC8vIGl0ZXJhdGUgb3ZlciBncmlkLnBhaXJzXG4gICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgcGFpcktleXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBncmlkLnBhaXJzW3BhaXJLZXlzW2tdXTtcblxuICAgICAgICAgICAgLy8gaWYgcGFpciBleGlzdHMgaW4gYXQgbGVhc3Qgb25lIGJ1Y2tldFxuICAgICAgICAgICAgLy8gaXQgaXMgYSBwYWlyIHRoYXQgbmVlZHMgZnVydGhlciBjb2xsaXNpb24gdGVzdGluZyBzbyBwdXNoIGl0XG4gICAgICAgICAgICBpZiAocGFpclsyXSA+IDApIHtcbiAgICAgICAgICAgICAgICBwYWlycy5wdXNoKHBhaXIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgZ3JpZC5wYWlyc1twYWlyS2V5c1trXV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcGFpcnM7XG4gICAgfTtcbiAgICBcbn0pKCk7XG5cbn0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4vRGV0ZWN0b3JcIjo1LFwiLi9QYWlyXCI6N31dLDc6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLlBhaXJgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBjcmVhdGluZyBhbmQgbWFuaXB1bGF0aW5nIGNvbGxpc2lvbiBwYWlycy5cbipcbiogQGNsYXNzIFBhaXJcbiovXG5cbnZhciBQYWlyID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gUGFpcjtcblxudmFyIENvbnRhY3QgPSBfZGVyZXFfKCcuL0NvbnRhY3QnKTtcblxuKGZ1bmN0aW9uKCkge1xuICAgIFxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBwYWlyLlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHtjb2xsaXNpb259IGNvbGxpc2lvblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lc3RhbXBcbiAgICAgKiBAcmV0dXJuIHtwYWlyfSBBIG5ldyBwYWlyXG4gICAgICovXG4gICAgUGFpci5jcmVhdGUgPSBmdW5jdGlvbihjb2xsaXNpb24sIHRpbWVzdGFtcCkge1xuICAgICAgICB2YXIgYm9keUEgPSBjb2xsaXNpb24uYm9keUEsXG4gICAgICAgICAgICBib2R5QiA9IGNvbGxpc2lvbi5ib2R5QixcbiAgICAgICAgICAgIHBhcmVudEEgPSBjb2xsaXNpb24ucGFyZW50QSxcbiAgICAgICAgICAgIHBhcmVudEIgPSBjb2xsaXNpb24ucGFyZW50QjtcblxuICAgICAgICB2YXIgcGFpciA9IHtcbiAgICAgICAgICAgIGlkOiBQYWlyLmlkKGJvZHlBLCBib2R5QiksXG4gICAgICAgICAgICBib2R5QTogYm9keUEsXG4gICAgICAgICAgICBib2R5QjogYm9keUIsXG4gICAgICAgICAgICBjb250YWN0czoge30sXG4gICAgICAgICAgICBhY3RpdmVDb250YWN0czogW10sXG4gICAgICAgICAgICBzZXBhcmF0aW9uOiAwLFxuICAgICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBpc1NlbnNvcjogYm9keUEuaXNTZW5zb3IgfHwgYm9keUIuaXNTZW5zb3IsXG4gICAgICAgICAgICB0aW1lQ3JlYXRlZDogdGltZXN0YW1wLFxuICAgICAgICAgICAgdGltZVVwZGF0ZWQ6IHRpbWVzdGFtcCxcbiAgICAgICAgICAgIGludmVyc2VNYXNzOiBwYXJlbnRBLmludmVyc2VNYXNzICsgcGFyZW50Qi5pbnZlcnNlTWFzcyxcbiAgICAgICAgICAgIGZyaWN0aW9uOiBNYXRoLm1pbihwYXJlbnRBLmZyaWN0aW9uLCBwYXJlbnRCLmZyaWN0aW9uKSxcbiAgICAgICAgICAgIGZyaWN0aW9uU3RhdGljOiBNYXRoLm1heChwYXJlbnRBLmZyaWN0aW9uU3RhdGljLCBwYXJlbnRCLmZyaWN0aW9uU3RhdGljKSxcbiAgICAgICAgICAgIHJlc3RpdHV0aW9uOiBNYXRoLm1heChwYXJlbnRBLnJlc3RpdHV0aW9uLCBwYXJlbnRCLnJlc3RpdHV0aW9uKSxcbiAgICAgICAgICAgIHNsb3A6IE1hdGgubWF4KHBhcmVudEEuc2xvcCwgcGFyZW50Qi5zbG9wKVxuICAgICAgICB9O1xuXG4gICAgICAgIFBhaXIudXBkYXRlKHBhaXIsIGNvbGxpc2lvbiwgdGltZXN0YW1wKTtcblxuICAgICAgICByZXR1cm4gcGFpcjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyBhIHBhaXIgZ2l2ZW4gYSBjb2xsaXNpb24uXG4gICAgICogQG1ldGhvZCB1cGRhdGVcbiAgICAgKiBAcGFyYW0ge3BhaXJ9IHBhaXJcbiAgICAgKiBAcGFyYW0ge2NvbGxpc2lvbn0gY29sbGlzaW9uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVzdGFtcFxuICAgICAqL1xuICAgIFBhaXIudXBkYXRlID0gZnVuY3Rpb24ocGFpciwgY29sbGlzaW9uLCB0aW1lc3RhbXApIHtcbiAgICAgICAgdmFyIGNvbnRhY3RzID0gcGFpci5jb250YWN0cyxcbiAgICAgICAgICAgIHN1cHBvcnRzID0gY29sbGlzaW9uLnN1cHBvcnRzLFxuICAgICAgICAgICAgYWN0aXZlQ29udGFjdHMgPSBwYWlyLmFjdGl2ZUNvbnRhY3RzLFxuICAgICAgICAgICAgcGFyZW50QSA9IGNvbGxpc2lvbi5wYXJlbnRBLFxuICAgICAgICAgICAgcGFyZW50QiA9IGNvbGxpc2lvbi5wYXJlbnRCO1xuICAgICAgICBcbiAgICAgICAgcGFpci5jb2xsaXNpb24gPSBjb2xsaXNpb247XG4gICAgICAgIHBhaXIuaW52ZXJzZU1hc3MgPSBwYXJlbnRBLmludmVyc2VNYXNzICsgcGFyZW50Qi5pbnZlcnNlTWFzcztcbiAgICAgICAgcGFpci5mcmljdGlvbiA9IE1hdGgubWluKHBhcmVudEEuZnJpY3Rpb24sIHBhcmVudEIuZnJpY3Rpb24pO1xuICAgICAgICBwYWlyLmZyaWN0aW9uU3RhdGljID0gTWF0aC5tYXgocGFyZW50QS5mcmljdGlvblN0YXRpYywgcGFyZW50Qi5mcmljdGlvblN0YXRpYyk7XG4gICAgICAgIHBhaXIucmVzdGl0dXRpb24gPSBNYXRoLm1heChwYXJlbnRBLnJlc3RpdHV0aW9uLCBwYXJlbnRCLnJlc3RpdHV0aW9uKTtcbiAgICAgICAgcGFpci5zbG9wID0gTWF0aC5tYXgocGFyZW50QS5zbG9wLCBwYXJlbnRCLnNsb3ApO1xuICAgICAgICBhY3RpdmVDb250YWN0cy5sZW5ndGggPSAwO1xuICAgICAgICBcbiAgICAgICAgaWYgKGNvbGxpc2lvbi5jb2xsaWRlZCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdXBwb3J0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBzdXBwb3J0ID0gc3VwcG9ydHNbaV0sXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhY3RJZCA9IENvbnRhY3QuaWQoc3VwcG9ydCksXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhY3QgPSBjb250YWN0c1tjb250YWN0SWRdO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNvbnRhY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlQ29udGFjdHMucHVzaChjb250YWN0KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhY3RpdmVDb250YWN0cy5wdXNoKGNvbnRhY3RzW2NvbnRhY3RJZF0gPSBDb250YWN0LmNyZWF0ZShzdXBwb3J0KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwYWlyLnNlcGFyYXRpb24gPSBjb2xsaXNpb24uZGVwdGg7XG4gICAgICAgICAgICBQYWlyLnNldEFjdGl2ZShwYWlyLCB0cnVlLCB0aW1lc3RhbXApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHBhaXIuaXNBY3RpdmUgPT09IHRydWUpXG4gICAgICAgICAgICAgICAgUGFpci5zZXRBY3RpdmUocGFpciwgZmFsc2UsIHRpbWVzdGFtcCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIFNldCBhIHBhaXIgYXMgYWN0aXZlIG9yIGluYWN0aXZlLlxuICAgICAqIEBtZXRob2Qgc2V0QWN0aXZlXG4gICAgICogQHBhcmFtIHtwYWlyfSBwYWlyXG4gICAgICogQHBhcmFtIHtib29sfSBpc0FjdGl2ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lc3RhbXBcbiAgICAgKi9cbiAgICBQYWlyLnNldEFjdGl2ZSA9IGZ1bmN0aW9uKHBhaXIsIGlzQWN0aXZlLCB0aW1lc3RhbXApIHtcbiAgICAgICAgaWYgKGlzQWN0aXZlKSB7XG4gICAgICAgICAgICBwYWlyLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIHBhaXIudGltZVVwZGF0ZWQgPSB0aW1lc3RhbXA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYWlyLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgICBwYWlyLmFjdGl2ZUNvbnRhY3RzLmxlbmd0aCA9IDA7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBpZCBmb3IgdGhlIGdpdmVuIHBhaXIuXG4gICAgICogQG1ldGhvZCBpZFxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keUFcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlCXG4gICAgICogQHJldHVybiB7c3RyaW5nfSBVbmlxdWUgcGFpcklkXG4gICAgICovXG4gICAgUGFpci5pZCA9IGZ1bmN0aW9uKGJvZHlBLCBib2R5Qikge1xuICAgICAgICBpZiAoYm9keUEuaWQgPCBib2R5Qi5pZCkge1xuICAgICAgICAgICAgcmV0dXJuICdBJyArIGJvZHlBLmlkICsgJ0InICsgYm9keUIuaWQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gJ0EnICsgYm9keUIuaWQgKyAnQicgKyBib2R5QS5pZDtcbiAgICAgICAgfVxuICAgIH07XG5cbn0pKCk7XG5cbn0se1wiLi9Db250YWN0XCI6NH1dLDg6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLlBhaXJzYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgY3JlYXRpbmcgYW5kIG1hbmlwdWxhdGluZyBjb2xsaXNpb24gcGFpciBzZXRzLlxuKlxuKiBAY2xhc3MgUGFpcnNcbiovXG5cbnZhciBQYWlycyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhaXJzO1xuXG52YXIgUGFpciA9IF9kZXJlcV8oJy4vUGFpcicpO1xudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4uL2NvcmUvQ29tbW9uJyk7XG5cbihmdW5jdGlvbigpIHtcbiAgICBcbiAgICBQYWlycy5fcGFpck1heElkbGVMaWZlID0gMTAwMDtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgcGFpcnMgc3RydWN0dXJlLlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJuIHtwYWlyc30gQSBuZXcgcGFpcnMgc3RydWN0dXJlXG4gICAgICovXG4gICAgUGFpcnMuY3JlYXRlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gQ29tbW9uLmV4dGVuZCh7IFxuICAgICAgICAgICAgdGFibGU6IHt9LFxuICAgICAgICAgICAgbGlzdDogW10sXG4gICAgICAgICAgICBjb2xsaXNpb25TdGFydDogW10sXG4gICAgICAgICAgICBjb2xsaXNpb25BY3RpdmU6IFtdLFxuICAgICAgICAgICAgY29sbGlzaW9uRW5kOiBbXVxuICAgICAgICB9LCBvcHRpb25zKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyBwYWlycyBnaXZlbiBhIGxpc3Qgb2YgY29sbGlzaW9ucy5cbiAgICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBwYWlyc1xuICAgICAqIEBwYXJhbSB7Y29sbGlzaW9uW119IGNvbGxpc2lvbnNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZXN0YW1wXG4gICAgICovXG4gICAgUGFpcnMudXBkYXRlID0gZnVuY3Rpb24ocGFpcnMsIGNvbGxpc2lvbnMsIHRpbWVzdGFtcCkge1xuICAgICAgICB2YXIgcGFpcnNMaXN0ID0gcGFpcnMubGlzdCxcbiAgICAgICAgICAgIHBhaXJzVGFibGUgPSBwYWlycy50YWJsZSxcbiAgICAgICAgICAgIGNvbGxpc2lvblN0YXJ0ID0gcGFpcnMuY29sbGlzaW9uU3RhcnQsXG4gICAgICAgICAgICBjb2xsaXNpb25FbmQgPSBwYWlycy5jb2xsaXNpb25FbmQsXG4gICAgICAgICAgICBjb2xsaXNpb25BY3RpdmUgPSBwYWlycy5jb2xsaXNpb25BY3RpdmUsXG4gICAgICAgICAgICBhY3RpdmVQYWlySWRzID0gW10sXG4gICAgICAgICAgICBjb2xsaXNpb24sXG4gICAgICAgICAgICBwYWlySWQsXG4gICAgICAgICAgICBwYWlyLFxuICAgICAgICAgICAgaTtcblxuICAgICAgICAvLyBjbGVhciBjb2xsaXNpb24gc3RhdGUgYXJyYXlzLCBidXQgbWFpbnRhaW4gb2xkIHJlZmVyZW5jZVxuICAgICAgICBjb2xsaXNpb25TdGFydC5sZW5ndGggPSAwO1xuICAgICAgICBjb2xsaXNpb25FbmQubGVuZ3RoID0gMDtcbiAgICAgICAgY29sbGlzaW9uQWN0aXZlLmxlbmd0aCA9IDA7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGNvbGxpc2lvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbGxpc2lvbiA9IGNvbGxpc2lvbnNbaV07XG5cbiAgICAgICAgICAgIGlmIChjb2xsaXNpb24uY29sbGlkZWQpIHtcbiAgICAgICAgICAgICAgICBwYWlySWQgPSBQYWlyLmlkKGNvbGxpc2lvbi5ib2R5QSwgY29sbGlzaW9uLmJvZHlCKTtcbiAgICAgICAgICAgICAgICBhY3RpdmVQYWlySWRzLnB1c2gocGFpcklkKTtcblxuICAgICAgICAgICAgICAgIHBhaXIgPSBwYWlyc1RhYmxlW3BhaXJJZF07XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKHBhaXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcGFpciBhbHJlYWR5IGV4aXN0cyAoYnV0IG1heSBvciBtYXkgbm90IGJlIGFjdGl2ZSlcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhaXIuaXNBY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBhaXIgZXhpc3RzIGFuZCBpcyBhY3RpdmVcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxpc2lvbkFjdGl2ZS5wdXNoKHBhaXIpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcGFpciBleGlzdHMgYnV0IHdhcyBpbmFjdGl2ZSwgc28gYSBjb2xsaXNpb24gaGFzIGp1c3Qgc3RhcnRlZCBhZ2FpblxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlzaW9uU3RhcnQucHVzaChwYWlyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSB0aGUgcGFpclxuICAgICAgICAgICAgICAgICAgICBQYWlyLnVwZGF0ZShwYWlyLCBjb2xsaXNpb24sIHRpbWVzdGFtcCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcGFpciBkaWQgbm90IGV4aXN0LCBjcmVhdGUgYSBuZXcgcGFpclxuICAgICAgICAgICAgICAgICAgICBwYWlyID0gUGFpci5jcmVhdGUoY29sbGlzaW9uLCB0aW1lc3RhbXApO1xuICAgICAgICAgICAgICAgICAgICBwYWlyc1RhYmxlW3BhaXJJZF0gPSBwYWlyO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIHB1c2ggdGhlIG5ldyBwYWlyXG4gICAgICAgICAgICAgICAgICAgIGNvbGxpc2lvblN0YXJ0LnB1c2gocGFpcik7XG4gICAgICAgICAgICAgICAgICAgIHBhaXJzTGlzdC5wdXNoKHBhaXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlYWN0aXZhdGUgcHJldmlvdXNseSBhY3RpdmUgcGFpcnMgdGhhdCBhcmUgbm93IGluYWN0aXZlXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBwYWlyc0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc0xpc3RbaV07XG4gICAgICAgICAgICBpZiAocGFpci5pc0FjdGl2ZSAmJiBDb21tb24uaW5kZXhPZihhY3RpdmVQYWlySWRzLCBwYWlyLmlkKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBQYWlyLnNldEFjdGl2ZShwYWlyLCBmYWxzZSwgdGltZXN0YW1wKTtcbiAgICAgICAgICAgICAgICBjb2xsaXNpb25FbmQucHVzaChwYWlyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogRmluZHMgYW5kIHJlbW92ZXMgcGFpcnMgdGhhdCBoYXZlIGJlZW4gaW5hY3RpdmUgZm9yIGEgc2V0IGFtb3VudCBvZiB0aW1lLlxuICAgICAqIEBtZXRob2QgcmVtb3ZlT2xkXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHBhaXJzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVzdGFtcFxuICAgICAqL1xuICAgIFBhaXJzLnJlbW92ZU9sZCA9IGZ1bmN0aW9uKHBhaXJzLCB0aW1lc3RhbXApIHtcbiAgICAgICAgdmFyIHBhaXJzTGlzdCA9IHBhaXJzLmxpc3QsXG4gICAgICAgICAgICBwYWlyc1RhYmxlID0gcGFpcnMudGFibGUsXG4gICAgICAgICAgICBpbmRleGVzVG9SZW1vdmUgPSBbXSxcbiAgICAgICAgICAgIHBhaXIsXG4gICAgICAgICAgICBjb2xsaXNpb24sXG4gICAgICAgICAgICBwYWlySW5kZXgsXG4gICAgICAgICAgICBpO1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBwYWlyc0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc0xpc3RbaV07XG4gICAgICAgICAgICBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gbmV2ZXIgcmVtb3ZlIHNsZWVwaW5nIHBhaXJzXG4gICAgICAgICAgICBpZiAoY29sbGlzaW9uLmJvZHlBLmlzU2xlZXBpbmcgfHwgY29sbGlzaW9uLmJvZHlCLmlzU2xlZXBpbmcpIHtcbiAgICAgICAgICAgICAgICBwYWlyLnRpbWVVcGRhdGVkID0gdGltZXN0YW1wO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBpZiBwYWlyIGlzIGluYWN0aXZlIGZvciB0b28gbG9uZywgbWFyayBpdCB0byBiZSByZW1vdmVkXG4gICAgICAgICAgICBpZiAodGltZXN0YW1wIC0gcGFpci50aW1lVXBkYXRlZCA+IFBhaXJzLl9wYWlyTWF4SWRsZUxpZmUpIHtcbiAgICAgICAgICAgICAgICBpbmRleGVzVG9SZW1vdmUucHVzaChpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHJlbW92ZSBtYXJrZWQgcGFpcnNcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGluZGV4ZXNUb1JlbW92ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcGFpckluZGV4ID0gaW5kZXhlc1RvUmVtb3ZlW2ldIC0gaTtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc0xpc3RbcGFpckluZGV4XTtcbiAgICAgICAgICAgIGRlbGV0ZSBwYWlyc1RhYmxlW3BhaXIuaWRdO1xuICAgICAgICAgICAgcGFpcnNMaXN0LnNwbGljZShwYWlySW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsZWFycyB0aGUgZ2l2ZW4gcGFpcnMgc3RydWN0dXJlLlxuICAgICAqIEBtZXRob2QgY2xlYXJcbiAgICAgKiBAcGFyYW0ge3BhaXJzfSBwYWlyc1xuICAgICAqIEByZXR1cm4ge3BhaXJzfSBwYWlyc1xuICAgICAqL1xuICAgIFBhaXJzLmNsZWFyID0gZnVuY3Rpb24ocGFpcnMpIHtcbiAgICAgICAgcGFpcnMudGFibGUgPSB7fTtcbiAgICAgICAgcGFpcnMubGlzdC5sZW5ndGggPSAwO1xuICAgICAgICBwYWlycy5jb2xsaXNpb25TdGFydC5sZW5ndGggPSAwO1xuICAgICAgICBwYWlycy5jb2xsaXNpb25BY3RpdmUubGVuZ3RoID0gMDtcbiAgICAgICAgcGFpcnMuY29sbGlzaW9uRW5kLmxlbmd0aCA9IDA7XG4gICAgICAgIHJldHVybiBwYWlycztcbiAgICB9O1xuXG59KSgpO1xuXG59LHtcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuL1BhaXJcIjo3fV0sOTpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuUXVlcnlgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBwZXJmb3JtaW5nIGNvbGxpc2lvbiBxdWVyaWVzLlxuKlxuKiBTZWUgdGhlIGluY2x1ZGVkIHVzYWdlIFtleGFtcGxlc10oaHR0cHM6Ly9naXRodWIuY29tL2xpYWJydS9tYXR0ZXItanMvdHJlZS9tYXN0ZXIvZXhhbXBsZXMpLlxuKlxuKiBAY2xhc3MgUXVlcnlcbiovXG5cbnZhciBRdWVyeSA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFF1ZXJ5O1xuXG52YXIgVmVjdG9yID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvVmVjdG9yJyk7XG52YXIgU0FUID0gX2RlcmVxXygnLi9TQVQnKTtcbnZhciBCb3VuZHMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9Cb3VuZHMnKTtcbnZhciBCb2RpZXMgPSBfZGVyZXFfKCcuLi9mYWN0b3J5L0JvZGllcycpO1xudmFyIFZlcnRpY2VzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvVmVydGljZXMnKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGxpc3Qgb2YgY29sbGlzaW9ucyBiZXR3ZWVuIGBib2R5YCBhbmQgYGJvZGllc2AuXG4gICAgICogQG1ldGhvZCBjb2xsaWRlc1xuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keVxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcmV0dXJuIHtvYmplY3RbXX0gQ29sbGlzaW9uc1xuICAgICAqL1xuICAgIFF1ZXJ5LmNvbGxpZGVzID0gZnVuY3Rpb24oYm9keSwgYm9kaWVzKSB7XG4gICAgICAgIHZhciBjb2xsaXNpb25zID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5QSA9IGJvZGllc1tpXTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKEJvdW5kcy5vdmVybGFwcyhib2R5QS5ib3VuZHMsIGJvZHkuYm91bmRzKSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSBib2R5QS5wYXJ0cy5sZW5ndGggPT09IDEgPyAwIDogMTsgaiA8IGJvZHlBLnBhcnRzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJ0ID0gYm9keUEucGFydHNbal07XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKEJvdW5kcy5vdmVybGFwcyhwYXJ0LmJvdW5kcywgYm9keS5ib3VuZHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29sbGlzaW9uID0gU0FULmNvbGxpZGVzKHBhcnQsIGJvZHkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29sbGlzaW9uLmNvbGxpZGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlzaW9ucy5wdXNoKGNvbGxpc2lvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29sbGlzaW9ucztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2FzdHMgYSByYXkgc2VnbWVudCBhZ2FpbnN0IGEgc2V0IG9mIGJvZGllcyBhbmQgcmV0dXJucyBhbGwgY29sbGlzaW9ucywgcmF5IHdpZHRoIGlzIG9wdGlvbmFsLiBJbnRlcnNlY3Rpb24gcG9pbnRzIGFyZSBub3QgcHJvdmlkZWQuXG4gICAgICogQG1ldGhvZCByYXlcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHN0YXJ0UG9pbnRcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gZW5kUG9pbnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW3JheVdpZHRoXVxuICAgICAqIEByZXR1cm4ge29iamVjdFtdfSBDb2xsaXNpb25zXG4gICAgICovXG4gICAgUXVlcnkucmF5ID0gZnVuY3Rpb24oYm9kaWVzLCBzdGFydFBvaW50LCBlbmRQb2ludCwgcmF5V2lkdGgpIHtcbiAgICAgICAgcmF5V2lkdGggPSByYXlXaWR0aCB8fCAxZS0xMDA7XG5cbiAgICAgICAgdmFyIHJheUFuZ2xlID0gVmVjdG9yLmFuZ2xlKHN0YXJ0UG9pbnQsIGVuZFBvaW50KSxcbiAgICAgICAgICAgIHJheUxlbmd0aCA9IFZlY3Rvci5tYWduaXR1ZGUoVmVjdG9yLnN1YihzdGFydFBvaW50LCBlbmRQb2ludCkpLFxuICAgICAgICAgICAgcmF5WCA9IChlbmRQb2ludC54ICsgc3RhcnRQb2ludC54KSAqIDAuNSxcbiAgICAgICAgICAgIHJheVkgPSAoZW5kUG9pbnQueSArIHN0YXJ0UG9pbnQueSkgKiAwLjUsXG4gICAgICAgICAgICByYXkgPSBCb2RpZXMucmVjdGFuZ2xlKHJheVgsIHJheVksIHJheUxlbmd0aCwgcmF5V2lkdGgsIHsgYW5nbGU6IHJheUFuZ2xlIH0pLFxuICAgICAgICAgICAgY29sbGlzaW9ucyA9IFF1ZXJ5LmNvbGxpZGVzKHJheSwgYm9kaWVzKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbGxpc2lvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBjb2xsaXNpb24gPSBjb2xsaXNpb25zW2ldO1xuICAgICAgICAgICAgY29sbGlzaW9uLmJvZHkgPSBjb2xsaXNpb24uYm9keUIgPSBjb2xsaXNpb24uYm9keUE7ICAgICAgICAgICAgXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29sbGlzaW9ucztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbGwgYm9kaWVzIHdob3NlIGJvdW5kcyBhcmUgaW5zaWRlIChvciBvdXRzaWRlIGlmIHNldCkgdGhlIGdpdmVuIHNldCBvZiBib3VuZHMsIGZyb20gdGhlIGdpdmVuIHNldCBvZiBib2RpZXMuXG4gICAgICogQG1ldGhvZCByZWdpb25cbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHtib3VuZHN9IGJvdW5kc1xuICAgICAqIEBwYXJhbSB7Ym9vbH0gW291dHNpZGU9ZmFsc2VdXG4gICAgICogQHJldHVybiB7Ym9keVtdfSBUaGUgYm9kaWVzIG1hdGNoaW5nIHRoZSBxdWVyeVxuICAgICAqL1xuICAgIFF1ZXJ5LnJlZ2lvbiA9IGZ1bmN0aW9uKGJvZGllcywgYm91bmRzLCBvdXRzaWRlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV0sXG4gICAgICAgICAgICAgICAgb3ZlcmxhcHMgPSBCb3VuZHMub3ZlcmxhcHMoYm9keS5ib3VuZHMsIGJvdW5kcyk7XG4gICAgICAgICAgICBpZiAoKG92ZXJsYXBzICYmICFvdXRzaWRlKSB8fCAoIW92ZXJsYXBzICYmIG91dHNpZGUpKVxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGJvZHkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbGwgYm9kaWVzIHdob3NlIHZlcnRpY2VzIGNvbnRhaW4gdGhlIGdpdmVuIHBvaW50LCBmcm9tIHRoZSBnaXZlbiBzZXQgb2YgYm9kaWVzLlxuICAgICAqIEBtZXRob2QgcG9pbnRcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHJldHVybiB7Ym9keVtdfSBUaGUgYm9kaWVzIG1hdGNoaW5nIHRoZSBxdWVyeVxuICAgICAqL1xuICAgIFF1ZXJ5LnBvaW50ID0gZnVuY3Rpb24oYm9kaWVzLCBwb2ludCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gYm9kaWVzW2ldO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoQm91bmRzLmNvbnRhaW5zKGJvZHkuYm91bmRzLCBwb2ludCkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gYm9keS5wYXJ0cy5sZW5ndGggPT09IDEgPyAwIDogMTsgaiA8IGJvZHkucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnQgPSBib2R5LnBhcnRzW2pdO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChCb3VuZHMuY29udGFpbnMocGFydC5ib3VuZHMsIHBvaW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgJiYgVmVydGljZXMuY29udGFpbnMocGFydC52ZXJ0aWNlcywgcG9pbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG59KSgpO1xuXG59LHtcIi4uL2ZhY3RvcnkvQm9kaWVzXCI6MjMsXCIuLi9nZW9tZXRyeS9Cb3VuZHNcIjoyNixcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4LFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIjoyOSxcIi4vU0FUXCI6MTF9XSwxMDpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuUmVzb2x2ZXJgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciByZXNvbHZpbmcgY29sbGlzaW9uIHBhaXJzLlxuKlxuKiBAY2xhc3MgUmVzb2x2ZXJcbiovXG5cbnZhciBSZXNvbHZlciA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc29sdmVyO1xuXG52YXIgVmVydGljZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZXJ0aWNlcycpO1xudmFyIFZlY3RvciA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L1ZlY3RvcicpO1xudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4uL2NvcmUvQ29tbW9uJyk7XG52YXIgQm91bmRzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvQm91bmRzJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIFJlc29sdmVyLl9yZXN0aW5nVGhyZXNoID0gNDtcbiAgICBSZXNvbHZlci5fcmVzdGluZ1RocmVzaFRhbmdlbnQgPSA2O1xuICAgIFJlc29sdmVyLl9wb3NpdGlvbkRhbXBlbiA9IDAuOTtcbiAgICBSZXNvbHZlci5fcG9zaXRpb25XYXJtaW5nID0gMC44O1xuICAgIFJlc29sdmVyLl9mcmljdGlvbk5vcm1hbE11bHRpcGxpZXIgPSA1O1xuXG4gICAgLyoqXG4gICAgICogUHJlcGFyZSBwYWlycyBmb3IgcG9zaXRpb24gc29sdmluZy5cbiAgICAgKiBAbWV0aG9kIHByZVNvbHZlUG9zaXRpb25cbiAgICAgKiBAcGFyYW0ge3BhaXJbXX0gcGFpcnNcbiAgICAgKi9cbiAgICBSZXNvbHZlci5wcmVTb2x2ZVBvc2l0aW9uID0gZnVuY3Rpb24ocGFpcnMpIHtcbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgICBwYWlyLFxuICAgICAgICAgICAgYWN0aXZlQ291bnQ7XG5cbiAgICAgICAgLy8gZmluZCB0b3RhbCBjb250YWN0cyBvbiBlYWNoIGJvZHlcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYWlyID0gcGFpcnNbaV07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICghcGFpci5pc0FjdGl2ZSlcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYWN0aXZlQ291bnQgPSBwYWlyLmFjdGl2ZUNvbnRhY3RzLmxlbmd0aDtcbiAgICAgICAgICAgIHBhaXIuY29sbGlzaW9uLnBhcmVudEEudG90YWxDb250YWN0cyArPSBhY3RpdmVDb3VudDtcbiAgICAgICAgICAgIHBhaXIuY29sbGlzaW9uLnBhcmVudEIudG90YWxDb250YWN0cyArPSBhY3RpdmVDb3VudDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBGaW5kIGEgc29sdXRpb24gZm9yIHBhaXIgcG9zaXRpb25zLlxuICAgICAqIEBtZXRob2Qgc29sdmVQb3NpdGlvblxuICAgICAqIEBwYXJhbSB7cGFpcltdfSBwYWlyc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lU2NhbGVcbiAgICAgKi9cbiAgICBSZXNvbHZlci5zb2x2ZVBvc2l0aW9uID0gZnVuY3Rpb24ocGFpcnMsIHRpbWVTY2FsZSkge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIHBhaXIsXG4gICAgICAgICAgICBjb2xsaXNpb24sXG4gICAgICAgICAgICBib2R5QSxcbiAgICAgICAgICAgIGJvZHlCLFxuICAgICAgICAgICAgbm9ybWFsLFxuICAgICAgICAgICAgYm9keUJ0b0EsXG4gICAgICAgICAgICBjb250YWN0U2hhcmUsXG4gICAgICAgICAgICBwb3NpdGlvbkltcHVsc2UsXG4gICAgICAgICAgICBjb250YWN0Q291bnQgPSB7fSxcbiAgICAgICAgICAgIHRlbXBBID0gVmVjdG9yLl90ZW1wWzBdLFxuICAgICAgICAgICAgdGVtcEIgPSBWZWN0b3IuX3RlbXBbMV0sXG4gICAgICAgICAgICB0ZW1wQyA9IFZlY3Rvci5fdGVtcFsyXSxcbiAgICAgICAgICAgIHRlbXBEID0gVmVjdG9yLl90ZW1wWzNdO1xuXG4gICAgICAgIC8vIGZpbmQgaW1wdWxzZXMgcmVxdWlyZWQgdG8gcmVzb2x2ZSBwZW5ldHJhdGlvblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc1tpXTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFwYWlyLmlzQWN0aXZlIHx8IHBhaXIuaXNTZW5zb3IpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGNvbGxpc2lvbiA9IHBhaXIuY29sbGlzaW9uO1xuICAgICAgICAgICAgYm9keUEgPSBjb2xsaXNpb24ucGFyZW50QTtcbiAgICAgICAgICAgIGJvZHlCID0gY29sbGlzaW9uLnBhcmVudEI7XG4gICAgICAgICAgICBub3JtYWwgPSBjb2xsaXNpb24ubm9ybWFsO1xuXG4gICAgICAgICAgICAvLyBnZXQgY3VycmVudCBzZXBhcmF0aW9uIGJldHdlZW4gYm9keSBlZGdlcyBpbnZvbHZlZCBpbiBjb2xsaXNpb25cbiAgICAgICAgICAgIGJvZHlCdG9BID0gVmVjdG9yLnN1YihWZWN0b3IuYWRkKGJvZHlCLnBvc2l0aW9uSW1wdWxzZSwgYm9keUIucG9zaXRpb24sIHRlbXBBKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBWZWN0b3IuYWRkKGJvZHlBLnBvc2l0aW9uSW1wdWxzZSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVmVjdG9yLnN1Yihib2R5Qi5wb3NpdGlvbiwgY29sbGlzaW9uLnBlbmV0cmF0aW9uLCB0ZW1wQiksIHRlbXBDKSwgdGVtcEQpO1xuXG4gICAgICAgICAgICBwYWlyLnNlcGFyYXRpb24gPSBWZWN0b3IuZG90KG5vcm1hbCwgYm9keUJ0b0EpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFwYWlyLmlzQWN0aXZlIHx8IHBhaXIuaXNTZW5zb3IpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbGxpc2lvbiA9IHBhaXIuY29sbGlzaW9uO1xuICAgICAgICAgICAgYm9keUEgPSBjb2xsaXNpb24ucGFyZW50QTtcbiAgICAgICAgICAgIGJvZHlCID0gY29sbGlzaW9uLnBhcmVudEI7XG4gICAgICAgICAgICBub3JtYWwgPSBjb2xsaXNpb24ubm9ybWFsO1xuICAgICAgICAgICAgcG9zaXRpb25JbXB1bHNlID0gKHBhaXIuc2VwYXJhdGlvbiAtIHBhaXIuc2xvcCkgKiB0aW1lU2NhbGU7XG5cbiAgICAgICAgICAgIGlmIChib2R5QS5pc1N0YXRpYyB8fCBib2R5Qi5pc1N0YXRpYylcbiAgICAgICAgICAgICAgICBwb3NpdGlvbkltcHVsc2UgKj0gMjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCEoYm9keUEuaXNTdGF0aWMgfHwgYm9keUEuaXNTbGVlcGluZykpIHtcbiAgICAgICAgICAgICAgICBjb250YWN0U2hhcmUgPSBSZXNvbHZlci5fcG9zaXRpb25EYW1wZW4gLyBib2R5QS50b3RhbENvbnRhY3RzO1xuICAgICAgICAgICAgICAgIGJvZHlBLnBvc2l0aW9uSW1wdWxzZS54ICs9IG5vcm1hbC54ICogcG9zaXRpb25JbXB1bHNlICogY29udGFjdFNoYXJlO1xuICAgICAgICAgICAgICAgIGJvZHlBLnBvc2l0aW9uSW1wdWxzZS55ICs9IG5vcm1hbC55ICogcG9zaXRpb25JbXB1bHNlICogY29udGFjdFNoYXJlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIShib2R5Qi5pc1N0YXRpYyB8fCBib2R5Qi5pc1NsZWVwaW5nKSkge1xuICAgICAgICAgICAgICAgIGNvbnRhY3RTaGFyZSA9IFJlc29sdmVyLl9wb3NpdGlvbkRhbXBlbiAvIGJvZHlCLnRvdGFsQ29udGFjdHM7XG4gICAgICAgICAgICAgICAgYm9keUIucG9zaXRpb25JbXB1bHNlLnggLT0gbm9ybWFsLnggKiBwb3NpdGlvbkltcHVsc2UgKiBjb250YWN0U2hhcmU7XG4gICAgICAgICAgICAgICAgYm9keUIucG9zaXRpb25JbXB1bHNlLnkgLT0gbm9ybWFsLnkgKiBwb3NpdGlvbkltcHVsc2UgKiBjb250YWN0U2hhcmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQXBwbHkgcG9zaXRpb24gcmVzb2x1dGlvbi5cbiAgICAgKiBAbWV0aG9kIHBvc3RTb2x2ZVBvc2l0aW9uXG4gICAgICogQHBhcmFtIHtib2R5W119IGJvZGllc1xuICAgICAqL1xuICAgIFJlc29sdmVyLnBvc3RTb2x2ZVBvc2l0aW9uID0gZnVuY3Rpb24oYm9kaWVzKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgLy8gcmVzZXQgY29udGFjdCBjb3VudFxuICAgICAgICAgICAgYm9keS50b3RhbENvbnRhY3RzID0gMDtcblxuICAgICAgICAgICAgaWYgKGJvZHkucG9zaXRpb25JbXB1bHNlLnggIT09IDAgfHwgYm9keS5wb3NpdGlvbkltcHVsc2UueSAhPT0gMCkge1xuICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSBib2R5IGdlb21ldHJ5XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBib2R5LnBhcnRzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJ0ID0gYm9keS5wYXJ0c1tqXTtcbiAgICAgICAgICAgICAgICAgICAgVmVydGljZXMudHJhbnNsYXRlKHBhcnQudmVydGljZXMsIGJvZHkucG9zaXRpb25JbXB1bHNlKTtcbiAgICAgICAgICAgICAgICAgICAgQm91bmRzLnVwZGF0ZShwYXJ0LmJvdW5kcywgcGFydC52ZXJ0aWNlcywgYm9keS52ZWxvY2l0eSk7XG4gICAgICAgICAgICAgICAgICAgIHBhcnQucG9zaXRpb24ueCArPSBib2R5LnBvc2l0aW9uSW1wdWxzZS54O1xuICAgICAgICAgICAgICAgICAgICBwYXJ0LnBvc2l0aW9uLnkgKz0gYm9keS5wb3NpdGlvbkltcHVsc2UueTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBtb3ZlIHRoZSBib2R5IHdpdGhvdXQgY2hhbmdpbmcgdmVsb2NpdHlcbiAgICAgICAgICAgICAgICBib2R5LnBvc2l0aW9uUHJldi54ICs9IGJvZHkucG9zaXRpb25JbXB1bHNlLng7XG4gICAgICAgICAgICAgICAgYm9keS5wb3NpdGlvblByZXYueSArPSBib2R5LnBvc2l0aW9uSW1wdWxzZS55O1xuXG4gICAgICAgICAgICAgICAgaWYgKFZlY3Rvci5kb3QoYm9keS5wb3NpdGlvbkltcHVsc2UsIGJvZHkudmVsb2NpdHkpIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAvLyByZXNldCBjYWNoZWQgaW1wdWxzZSBpZiB0aGUgYm9keSBoYXMgdmVsb2NpdHkgYWxvbmcgaXRcbiAgICAgICAgICAgICAgICAgICAgYm9keS5wb3NpdGlvbkltcHVsc2UueCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkucG9zaXRpb25JbXB1bHNlLnkgPSAwO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHdhcm0gdGhlIG5leHQgaXRlcmF0aW9uXG4gICAgICAgICAgICAgICAgICAgIGJvZHkucG9zaXRpb25JbXB1bHNlLnggKj0gUmVzb2x2ZXIuX3Bvc2l0aW9uV2FybWluZztcbiAgICAgICAgICAgICAgICAgICAgYm9keS5wb3NpdGlvbkltcHVsc2UueSAqPSBSZXNvbHZlci5fcG9zaXRpb25XYXJtaW5nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQcmVwYXJlIHBhaXJzIGZvciB2ZWxvY2l0eSBzb2x2aW5nLlxuICAgICAqIEBtZXRob2QgcHJlU29sdmVWZWxvY2l0eVxuICAgICAqIEBwYXJhbSB7cGFpcltdfSBwYWlyc1xuICAgICAqL1xuICAgIFJlc29sdmVyLnByZVNvbHZlVmVsb2NpdHkgPSBmdW5jdGlvbihwYWlycykge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBwYWlyLFxuICAgICAgICAgICAgY29udGFjdHMsXG4gICAgICAgICAgICBjb2xsaXNpb24sXG4gICAgICAgICAgICBib2R5QSxcbiAgICAgICAgICAgIGJvZHlCLFxuICAgICAgICAgICAgbm9ybWFsLFxuICAgICAgICAgICAgdGFuZ2VudCxcbiAgICAgICAgICAgIGNvbnRhY3QsXG4gICAgICAgICAgICBjb250YWN0VmVydGV4LFxuICAgICAgICAgICAgbm9ybWFsSW1wdWxzZSxcbiAgICAgICAgICAgIHRhbmdlbnRJbXB1bHNlLFxuICAgICAgICAgICAgb2Zmc2V0LFxuICAgICAgICAgICAgaW1wdWxzZSA9IFZlY3Rvci5fdGVtcFswXSxcbiAgICAgICAgICAgIHRlbXBBID0gVmVjdG9yLl90ZW1wWzFdO1xuICAgICAgICBcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYWlyID0gcGFpcnNbaV07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICghcGFpci5pc0FjdGl2ZSB8fCBwYWlyLmlzU2Vuc29yKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb250YWN0cyA9IHBhaXIuYWN0aXZlQ29udGFjdHM7XG4gICAgICAgICAgICBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbjtcbiAgICAgICAgICAgIGJvZHlBID0gY29sbGlzaW9uLnBhcmVudEE7XG4gICAgICAgICAgICBib2R5QiA9IGNvbGxpc2lvbi5wYXJlbnRCO1xuICAgICAgICAgICAgbm9ybWFsID0gY29sbGlzaW9uLm5vcm1hbDtcbiAgICAgICAgICAgIHRhbmdlbnQgPSBjb2xsaXNpb24udGFuZ2VudDtcblxuICAgICAgICAgICAgLy8gcmVzb2x2ZSBlYWNoIGNvbnRhY3RcbiAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBjb250YWN0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIGNvbnRhY3QgPSBjb250YWN0c1tqXTtcbiAgICAgICAgICAgICAgICBjb250YWN0VmVydGV4ID0gY29udGFjdC52ZXJ0ZXg7XG4gICAgICAgICAgICAgICAgbm9ybWFsSW1wdWxzZSA9IGNvbnRhY3Qubm9ybWFsSW1wdWxzZTtcbiAgICAgICAgICAgICAgICB0YW5nZW50SW1wdWxzZSA9IGNvbnRhY3QudGFuZ2VudEltcHVsc2U7XG5cbiAgICAgICAgICAgICAgICBpZiAobm9ybWFsSW1wdWxzZSAhPT0gMCB8fCB0YW5nZW50SW1wdWxzZSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAvLyB0b3RhbCBpbXB1bHNlIGZyb20gY29udGFjdFxuICAgICAgICAgICAgICAgICAgICBpbXB1bHNlLnggPSAobm9ybWFsLnggKiBub3JtYWxJbXB1bHNlKSArICh0YW5nZW50LnggKiB0YW5nZW50SW1wdWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIGltcHVsc2UueSA9IChub3JtYWwueSAqIG5vcm1hbEltcHVsc2UpICsgKHRhbmdlbnQueSAqIHRhbmdlbnRJbXB1bHNlKTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vIGFwcGx5IGltcHVsc2UgZnJvbSBjb250YWN0XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGJvZHlBLmlzU3RhdGljIHx8IGJvZHlBLmlzU2xlZXBpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSBWZWN0b3Iuc3ViKGNvbnRhY3RWZXJ0ZXgsIGJvZHlBLnBvc2l0aW9uLCB0ZW1wQSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5QS5wb3NpdGlvblByZXYueCArPSBpbXB1bHNlLnggKiBib2R5QS5pbnZlcnNlTWFzcztcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlBLnBvc2l0aW9uUHJldi55ICs9IGltcHVsc2UueSAqIGJvZHlBLmludmVyc2VNYXNzO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9keUEuYW5nbGVQcmV2ICs9IFZlY3Rvci5jcm9zcyhvZmZzZXQsIGltcHVsc2UpICogYm9keUEuaW52ZXJzZUluZXJ0aWE7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoIShib2R5Qi5pc1N0YXRpYyB8fCBib2R5Qi5pc1NsZWVwaW5nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0gVmVjdG9yLnN1Yihjb250YWN0VmVydGV4LCBib2R5Qi5wb3NpdGlvbiwgdGVtcEEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9keUIucG9zaXRpb25QcmV2LnggLT0gaW1wdWxzZS54ICogYm9keUIuaW52ZXJzZU1hc3M7XG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5Qi5wb3NpdGlvblByZXYueSAtPSBpbXB1bHNlLnkgKiBib2R5Qi5pbnZlcnNlTWFzcztcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlCLmFuZ2xlUHJldiAtPSBWZWN0b3IuY3Jvc3Mob2Zmc2V0LCBpbXB1bHNlKSAqIGJvZHlCLmludmVyc2VJbmVydGlhO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEZpbmQgYSBzb2x1dGlvbiBmb3IgcGFpciB2ZWxvY2l0aWVzLlxuICAgICAqIEBtZXRob2Qgc29sdmVWZWxvY2l0eVxuICAgICAqIEBwYXJhbSB7cGFpcltdfSBwYWlyc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lU2NhbGVcbiAgICAgKi9cbiAgICBSZXNvbHZlci5zb2x2ZVZlbG9jaXR5ID0gZnVuY3Rpb24ocGFpcnMsIHRpbWVTY2FsZSkge1xuICAgICAgICB2YXIgdGltZVNjYWxlU3F1YXJlZCA9IHRpbWVTY2FsZSAqIHRpbWVTY2FsZSxcbiAgICAgICAgICAgIGltcHVsc2UgPSBWZWN0b3IuX3RlbXBbMF0sXG4gICAgICAgICAgICB0ZW1wQSA9IFZlY3Rvci5fdGVtcFsxXSxcbiAgICAgICAgICAgIHRlbXBCID0gVmVjdG9yLl90ZW1wWzJdLFxuICAgICAgICAgICAgdGVtcEMgPSBWZWN0b3IuX3RlbXBbM10sXG4gICAgICAgICAgICB0ZW1wRCA9IFZlY3Rvci5fdGVtcFs0XSxcbiAgICAgICAgICAgIHRlbXBFID0gVmVjdG9yLl90ZW1wWzVdO1xuICAgICAgICBcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWlycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHBhaXIgPSBwYWlyc1tpXTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFwYWlyLmlzQWN0aXZlIHx8IHBhaXIuaXNTZW5zb3IpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbixcbiAgICAgICAgICAgICAgICBib2R5QSA9IGNvbGxpc2lvbi5wYXJlbnRBLFxuICAgICAgICAgICAgICAgIGJvZHlCID0gY29sbGlzaW9uLnBhcmVudEIsXG4gICAgICAgICAgICAgICAgbm9ybWFsID0gY29sbGlzaW9uLm5vcm1hbCxcbiAgICAgICAgICAgICAgICB0YW5nZW50ID0gY29sbGlzaW9uLnRhbmdlbnQsXG4gICAgICAgICAgICAgICAgY29udGFjdHMgPSBwYWlyLmFjdGl2ZUNvbnRhY3RzLFxuICAgICAgICAgICAgICAgIGNvbnRhY3RTaGFyZSA9IDEgLyBjb250YWN0cy5sZW5ndGg7XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSBib2R5IHZlbG9jaXRpZXNcbiAgICAgICAgICAgIGJvZHlBLnZlbG9jaXR5LnggPSBib2R5QS5wb3NpdGlvbi54IC0gYm9keUEucG9zaXRpb25QcmV2Lng7XG4gICAgICAgICAgICBib2R5QS52ZWxvY2l0eS55ID0gYm9keUEucG9zaXRpb24ueSAtIGJvZHlBLnBvc2l0aW9uUHJldi55O1xuICAgICAgICAgICAgYm9keUIudmVsb2NpdHkueCA9IGJvZHlCLnBvc2l0aW9uLnggLSBib2R5Qi5wb3NpdGlvblByZXYueDtcbiAgICAgICAgICAgIGJvZHlCLnZlbG9jaXR5LnkgPSBib2R5Qi5wb3NpdGlvbi55IC0gYm9keUIucG9zaXRpb25QcmV2Lnk7XG4gICAgICAgICAgICBib2R5QS5hbmd1bGFyVmVsb2NpdHkgPSBib2R5QS5hbmdsZSAtIGJvZHlBLmFuZ2xlUHJldjtcbiAgICAgICAgICAgIGJvZHlCLmFuZ3VsYXJWZWxvY2l0eSA9IGJvZHlCLmFuZ2xlIC0gYm9keUIuYW5nbGVQcmV2O1xuXG4gICAgICAgICAgICAvLyByZXNvbHZlIGVhY2ggY29udGFjdFxuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBjb250YWN0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIHZhciBjb250YWN0ID0gY29udGFjdHNbal0sXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhY3RWZXJ0ZXggPSBjb250YWN0LnZlcnRleCxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0QSA9IFZlY3Rvci5zdWIoY29udGFjdFZlcnRleCwgYm9keUEucG9zaXRpb24sIHRlbXBBKSxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0QiA9IFZlY3Rvci5zdWIoY29udGFjdFZlcnRleCwgYm9keUIucG9zaXRpb24sIHRlbXBCKSxcbiAgICAgICAgICAgICAgICAgICAgdmVsb2NpdHlQb2ludEEgPSBWZWN0b3IuYWRkKGJvZHlBLnZlbG9jaXR5LCBWZWN0b3IubXVsdChWZWN0b3IucGVycChvZmZzZXRBKSwgYm9keUEuYW5ndWxhclZlbG9jaXR5KSwgdGVtcEMpLFxuICAgICAgICAgICAgICAgICAgICB2ZWxvY2l0eVBvaW50QiA9IFZlY3Rvci5hZGQoYm9keUIudmVsb2NpdHksIFZlY3Rvci5tdWx0KFZlY3Rvci5wZXJwKG9mZnNldEIpLCBib2R5Qi5hbmd1bGFyVmVsb2NpdHkpLCB0ZW1wRCksIFxuICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZVZlbG9jaXR5ID0gVmVjdG9yLnN1Yih2ZWxvY2l0eVBvaW50QSwgdmVsb2NpdHlQb2ludEIsIHRlbXBFKSxcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsVmVsb2NpdHkgPSBWZWN0b3IuZG90KG5vcm1hbCwgcmVsYXRpdmVWZWxvY2l0eSk7XG5cbiAgICAgICAgICAgICAgICB2YXIgdGFuZ2VudFZlbG9jaXR5ID0gVmVjdG9yLmRvdCh0YW5nZW50LCByZWxhdGl2ZVZlbG9jaXR5KSxcbiAgICAgICAgICAgICAgICAgICAgdGFuZ2VudFNwZWVkID0gTWF0aC5hYnModGFuZ2VudFZlbG9jaXR5KSxcbiAgICAgICAgICAgICAgICAgICAgdGFuZ2VudFZlbG9jaXR5RGlyZWN0aW9uID0gQ29tbW9uLnNpZ24odGFuZ2VudFZlbG9jaXR5KTtcblxuICAgICAgICAgICAgICAgIC8vIHJhdyBpbXB1bHNlc1xuICAgICAgICAgICAgICAgIHZhciBub3JtYWxJbXB1bHNlID0gKDEgKyBwYWlyLnJlc3RpdHV0aW9uKSAqIG5vcm1hbFZlbG9jaXR5LFxuICAgICAgICAgICAgICAgICAgICBub3JtYWxGb3JjZSA9IENvbW1vbi5jbGFtcChwYWlyLnNlcGFyYXRpb24gKyBub3JtYWxWZWxvY2l0eSwgMCwgMSkgKiBSZXNvbHZlci5fZnJpY3Rpb25Ob3JtYWxNdWx0aXBsaWVyO1xuXG4gICAgICAgICAgICAgICAgLy8gY291bG9tYiBmcmljdGlvblxuICAgICAgICAgICAgICAgIHZhciB0YW5nZW50SW1wdWxzZSA9IHRhbmdlbnRWZWxvY2l0eSxcbiAgICAgICAgICAgICAgICAgICAgbWF4RnJpY3Rpb24gPSBJbmZpbml0eTtcblxuICAgICAgICAgICAgICAgIGlmICh0YW5nZW50U3BlZWQgPiBwYWlyLmZyaWN0aW9uICogcGFpci5mcmljdGlvblN0YXRpYyAqIG5vcm1hbEZvcmNlICogdGltZVNjYWxlU3F1YXJlZCkge1xuICAgICAgICAgICAgICAgICAgICBtYXhGcmljdGlvbiA9IHRhbmdlbnRTcGVlZDtcbiAgICAgICAgICAgICAgICAgICAgdGFuZ2VudEltcHVsc2UgPSBDb21tb24uY2xhbXAoXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWlyLmZyaWN0aW9uICogdGFuZ2VudFZlbG9jaXR5RGlyZWN0aW9uICogdGltZVNjYWxlU3F1YXJlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIC1tYXhGcmljdGlvbiwgbWF4RnJpY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBtb2RpZnkgaW1wdWxzZXMgYWNjb3VudGluZyBmb3IgbWFzcywgaW5lcnRpYSBhbmQgb2Zmc2V0XG4gICAgICAgICAgICAgICAgdmFyIG9BY04gPSBWZWN0b3IuY3Jvc3Mob2Zmc2V0QSwgbm9ybWFsKSxcbiAgICAgICAgICAgICAgICAgICAgb0JjTiA9IFZlY3Rvci5jcm9zcyhvZmZzZXRCLCBub3JtYWwpLFxuICAgICAgICAgICAgICAgICAgICBzaGFyZSA9IGNvbnRhY3RTaGFyZSAvIChib2R5QS5pbnZlcnNlTWFzcyArIGJvZHlCLmludmVyc2VNYXNzICsgYm9keUEuaW52ZXJzZUluZXJ0aWEgKiBvQWNOICogb0FjTiAgKyBib2R5Qi5pbnZlcnNlSW5lcnRpYSAqIG9CY04gKiBvQmNOKTtcblxuICAgICAgICAgICAgICAgIG5vcm1hbEltcHVsc2UgKj0gc2hhcmU7XG4gICAgICAgICAgICAgICAgdGFuZ2VudEltcHVsc2UgKj0gc2hhcmU7XG5cbiAgICAgICAgICAgICAgICAvLyBoYW5kbGUgaGlnaCB2ZWxvY2l0eSBhbmQgcmVzdGluZyBjb2xsaXNpb25zIHNlcGFyYXRlbHlcbiAgICAgICAgICAgICAgICBpZiAobm9ybWFsVmVsb2NpdHkgPCAwICYmIG5vcm1hbFZlbG9jaXR5ICogbm9ybWFsVmVsb2NpdHkgPiBSZXNvbHZlci5fcmVzdGluZ1RocmVzaCAqIHRpbWVTY2FsZVNxdWFyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaGlnaCBub3JtYWwgdmVsb2NpdHkgc28gY2xlYXIgY2FjaGVkIGNvbnRhY3Qgbm9ybWFsIGltcHVsc2VcbiAgICAgICAgICAgICAgICAgICAgY29udGFjdC5ub3JtYWxJbXB1bHNlID0gMDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBzb2x2ZSByZXN0aW5nIGNvbGxpc2lvbiBjb25zdHJhaW50cyB1c2luZyBFcmluIENhdHRvJ3MgbWV0aG9kIChHREMwOClcbiAgICAgICAgICAgICAgICAgICAgLy8gaW1wdWxzZSBjb25zdHJhaW50IHRlbmRzIHRvIDBcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRhY3ROb3JtYWxJbXB1bHNlID0gY29udGFjdC5ub3JtYWxJbXB1bHNlO1xuICAgICAgICAgICAgICAgICAgICBjb250YWN0Lm5vcm1hbEltcHVsc2UgPSBNYXRoLm1pbihjb250YWN0Lm5vcm1hbEltcHVsc2UgKyBub3JtYWxJbXB1bHNlLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsSW1wdWxzZSA9IGNvbnRhY3Qubm9ybWFsSW1wdWxzZSAtIGNvbnRhY3ROb3JtYWxJbXB1bHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGhhbmRsZSBoaWdoIHZlbG9jaXR5IGFuZCByZXN0aW5nIGNvbGxpc2lvbnMgc2VwYXJhdGVseVxuICAgICAgICAgICAgICAgIGlmICh0YW5nZW50VmVsb2NpdHkgKiB0YW5nZW50VmVsb2NpdHkgPiBSZXNvbHZlci5fcmVzdGluZ1RocmVzaFRhbmdlbnQgKiB0aW1lU2NhbGVTcXVhcmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGhpZ2ggdGFuZ2VudCB2ZWxvY2l0eSBzbyBjbGVhciBjYWNoZWQgY29udGFjdCB0YW5nZW50IGltcHVsc2VcbiAgICAgICAgICAgICAgICAgICAgY29udGFjdC50YW5nZW50SW1wdWxzZSA9IDA7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gc29sdmUgcmVzdGluZyBjb2xsaXNpb24gY29uc3RyYWludHMgdXNpbmcgRXJpbiBDYXR0bydzIG1ldGhvZCAoR0RDMDgpXG4gICAgICAgICAgICAgICAgICAgIC8vIHRhbmdlbnQgaW1wdWxzZSB0ZW5kcyB0byAtdGFuZ2VudFNwZWVkIG9yICt0YW5nZW50U3BlZWRcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRhY3RUYW5nZW50SW1wdWxzZSA9IGNvbnRhY3QudGFuZ2VudEltcHVsc2U7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhY3QudGFuZ2VudEltcHVsc2UgPSBDb21tb24uY2xhbXAoY29udGFjdC50YW5nZW50SW1wdWxzZSArIHRhbmdlbnRJbXB1bHNlLCAtbWF4RnJpY3Rpb24sIG1heEZyaWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgdGFuZ2VudEltcHVsc2UgPSBjb250YWN0LnRhbmdlbnRJbXB1bHNlIC0gY29udGFjdFRhbmdlbnRJbXB1bHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIHRvdGFsIGltcHVsc2UgZnJvbSBjb250YWN0XG4gICAgICAgICAgICAgICAgaW1wdWxzZS54ID0gKG5vcm1hbC54ICogbm9ybWFsSW1wdWxzZSkgKyAodGFuZ2VudC54ICogdGFuZ2VudEltcHVsc2UpO1xuICAgICAgICAgICAgICAgIGltcHVsc2UueSA9IChub3JtYWwueSAqIG5vcm1hbEltcHVsc2UpICsgKHRhbmdlbnQueSAqIHRhbmdlbnRJbXB1bHNlKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBhcHBseSBpbXB1bHNlIGZyb20gY29udGFjdFxuICAgICAgICAgICAgICAgIGlmICghKGJvZHlBLmlzU3RhdGljIHx8IGJvZHlBLmlzU2xlZXBpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGJvZHlBLnBvc2l0aW9uUHJldi54ICs9IGltcHVsc2UueCAqIGJvZHlBLmludmVyc2VNYXNzO1xuICAgICAgICAgICAgICAgICAgICBib2R5QS5wb3NpdGlvblByZXYueSArPSBpbXB1bHNlLnkgKiBib2R5QS5pbnZlcnNlTWFzcztcbiAgICAgICAgICAgICAgICAgICAgYm9keUEuYW5nbGVQcmV2ICs9IFZlY3Rvci5jcm9zcyhvZmZzZXRBLCBpbXB1bHNlKSAqIGJvZHlBLmludmVyc2VJbmVydGlhO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghKGJvZHlCLmlzU3RhdGljIHx8IGJvZHlCLmlzU2xlZXBpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGJvZHlCLnBvc2l0aW9uUHJldi54IC09IGltcHVsc2UueCAqIGJvZHlCLmludmVyc2VNYXNzO1xuICAgICAgICAgICAgICAgICAgICBib2R5Qi5wb3NpdGlvblByZXYueSAtPSBpbXB1bHNlLnkgKiBib2R5Qi5pbnZlcnNlTWFzcztcbiAgICAgICAgICAgICAgICAgICAgYm9keUIuYW5nbGVQcmV2IC09IFZlY3Rvci5jcm9zcyhvZmZzZXRCLCBpbXB1bHNlKSAqIGJvZHlCLmludmVyc2VJbmVydGlhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbn0pKCk7XG5cbn0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6MjgsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5fV0sMTE6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLlNBVGAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGRldGVjdGluZyBjb2xsaXNpb25zIHVzaW5nIHRoZSBTZXBhcmF0aW5nIEF4aXMgVGhlb3JlbS5cbipcbiogQGNsYXNzIFNBVFxuKi9cblxuLy8gVE9ETzogdHJ1ZSBjaXJjbGVzIGFuZCBjdXJ2ZXNcblxudmFyIFNBVCA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNBVDtcblxudmFyIFZlcnRpY2VzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvVmVydGljZXMnKTtcbnZhciBWZWN0b3IgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogRGV0ZWN0IGNvbGxpc2lvbiBiZXR3ZWVuIHR3byBib2RpZXMgdXNpbmcgdGhlIFNlcGFyYXRpbmcgQXhpcyBUaGVvcmVtLlxuICAgICAqIEBtZXRob2QgY29sbGlkZXNcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlBXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5QlxuICAgICAqIEBwYXJhbSB7Y29sbGlzaW9ufSBwcmV2aW91c0NvbGxpc2lvblxuICAgICAqIEByZXR1cm4ge2NvbGxpc2lvbn0gY29sbGlzaW9uXG4gICAgICovXG4gICAgU0FULmNvbGxpZGVzID0gZnVuY3Rpb24oYm9keUEsIGJvZHlCLCBwcmV2aW91c0NvbGxpc2lvbikge1xuICAgICAgICB2YXIgb3ZlcmxhcEFCLFxuICAgICAgICAgICAgb3ZlcmxhcEJBLCBcbiAgICAgICAgICAgIG1pbk92ZXJsYXAsXG4gICAgICAgICAgICBjb2xsaXNpb24sXG4gICAgICAgICAgICBjYW5SZXVzZVByZXZDb2wgPSBmYWxzZTtcblxuICAgICAgICBpZiAocHJldmlvdXNDb2xsaXNpb24pIHtcbiAgICAgICAgICAgIC8vIGVzdGltYXRlIHRvdGFsIG1vdGlvblxuICAgICAgICAgICAgdmFyIHBhcmVudEEgPSBib2R5QS5wYXJlbnQsXG4gICAgICAgICAgICAgICAgcGFyZW50QiA9IGJvZHlCLnBhcmVudCxcbiAgICAgICAgICAgICAgICBtb3Rpb24gPSBwYXJlbnRBLnNwZWVkICogcGFyZW50QS5zcGVlZCArIHBhcmVudEEuYW5ndWxhclNwZWVkICogcGFyZW50QS5hbmd1bGFyU3BlZWRcbiAgICAgICAgICAgICAgICAgICAgICAgKyBwYXJlbnRCLnNwZWVkICogcGFyZW50Qi5zcGVlZCArIHBhcmVudEIuYW5ndWxhclNwZWVkICogcGFyZW50Qi5hbmd1bGFyU3BlZWQ7XG5cbiAgICAgICAgICAgIC8vIHdlIG1heSBiZSBhYmxlIHRvIChwYXJ0aWFsbHkpIHJldXNlIGNvbGxpc2lvbiByZXN1bHQgXG4gICAgICAgICAgICAvLyBidXQgb25seSBzYWZlIGlmIGNvbGxpc2lvbiB3YXMgcmVzdGluZ1xuICAgICAgICAgICAgY2FuUmV1c2VQcmV2Q29sID0gcHJldmlvdXNDb2xsaXNpb24gJiYgcHJldmlvdXNDb2xsaXNpb24uY29sbGlkZWQgJiYgbW90aW9uIDwgMC4yO1xuXG4gICAgICAgICAgICAvLyByZXVzZSBjb2xsaXNpb24gb2JqZWN0XG4gICAgICAgICAgICBjb2xsaXNpb24gPSBwcmV2aW91c0NvbGxpc2lvbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbGxpc2lvbiA9IHsgY29sbGlkZWQ6IGZhbHNlLCBib2R5QTogYm9keUEsIGJvZHlCOiBib2R5QiB9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHByZXZpb3VzQ29sbGlzaW9uICYmIGNhblJldXNlUHJldkNvbCkge1xuICAgICAgICAgICAgLy8gaWYgd2UgY2FuIHJldXNlIHRoZSBjb2xsaXNpb24gcmVzdWx0XG4gICAgICAgICAgICAvLyB3ZSBvbmx5IG5lZWQgdG8gdGVzdCB0aGUgcHJldmlvdXNseSBmb3VuZCBheGlzXG4gICAgICAgICAgICB2YXIgYXhpc0JvZHlBID0gY29sbGlzaW9uLmF4aXNCb2R5LFxuICAgICAgICAgICAgICAgIGF4aXNCb2R5QiA9IGF4aXNCb2R5QSA9PT0gYm9keUEgPyBib2R5QiA6IGJvZHlBLFxuICAgICAgICAgICAgICAgIGF4ZXMgPSBbYXhpc0JvZHlBLmF4ZXNbcHJldmlvdXNDb2xsaXNpb24uYXhpc051bWJlcl1dO1xuXG4gICAgICAgICAgICBtaW5PdmVybGFwID0gU0FULl9vdmVybGFwQXhlcyhheGlzQm9keUEudmVydGljZXMsIGF4aXNCb2R5Qi52ZXJ0aWNlcywgYXhlcyk7XG4gICAgICAgICAgICBjb2xsaXNpb24ucmV1c2VkID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKG1pbk92ZXJsYXAub3ZlcmxhcCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgY29sbGlzaW9uLmNvbGxpZGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbGxpc2lvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGlmIHdlIGNhbid0IHJldXNlIGEgcmVzdWx0LCBwZXJmb3JtIGEgZnVsbCBTQVQgdGVzdFxuXG4gICAgICAgICAgICBvdmVybGFwQUIgPSBTQVQuX292ZXJsYXBBeGVzKGJvZHlBLnZlcnRpY2VzLCBib2R5Qi52ZXJ0aWNlcywgYm9keUEuYXhlcyk7XG5cbiAgICAgICAgICAgIGlmIChvdmVybGFwQUIub3ZlcmxhcCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgY29sbGlzaW9uLmNvbGxpZGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbGxpc2lvbjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgb3ZlcmxhcEJBID0gU0FULl9vdmVybGFwQXhlcyhib2R5Qi52ZXJ0aWNlcywgYm9keUEudmVydGljZXMsIGJvZHlCLmF4ZXMpO1xuXG4gICAgICAgICAgICBpZiAob3ZlcmxhcEJBLm92ZXJsYXAgPD0gMCkge1xuICAgICAgICAgICAgICAgIGNvbGxpc2lvbi5jb2xsaWRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb2xsaXNpb247XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvdmVybGFwQUIub3ZlcmxhcCA8IG92ZXJsYXBCQS5vdmVybGFwKSB7XG4gICAgICAgICAgICAgICAgbWluT3ZlcmxhcCA9IG92ZXJsYXBBQjtcbiAgICAgICAgICAgICAgICBjb2xsaXNpb24uYXhpc0JvZHkgPSBib2R5QTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbWluT3ZlcmxhcCA9IG92ZXJsYXBCQTtcbiAgICAgICAgICAgICAgICBjb2xsaXNpb24uYXhpc0JvZHkgPSBib2R5QjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaW1wb3J0YW50IGZvciByZXVzZSBsYXRlclxuICAgICAgICAgICAgY29sbGlzaW9uLmF4aXNOdW1iZXIgPSBtaW5PdmVybGFwLmF4aXNOdW1iZXI7XG4gICAgICAgIH1cblxuICAgICAgICBjb2xsaXNpb24uYm9keUEgPSBib2R5QS5pZCA8IGJvZHlCLmlkID8gYm9keUEgOiBib2R5QjtcbiAgICAgICAgY29sbGlzaW9uLmJvZHlCID0gYm9keUEuaWQgPCBib2R5Qi5pZCA/IGJvZHlCIDogYm9keUE7XG4gICAgICAgIGNvbGxpc2lvbi5jb2xsaWRlZCA9IHRydWU7XG4gICAgICAgIGNvbGxpc2lvbi5kZXB0aCA9IG1pbk92ZXJsYXAub3ZlcmxhcDtcbiAgICAgICAgY29sbGlzaW9uLnBhcmVudEEgPSBjb2xsaXNpb24uYm9keUEucGFyZW50O1xuICAgICAgICBjb2xsaXNpb24ucGFyZW50QiA9IGNvbGxpc2lvbi5ib2R5Qi5wYXJlbnQ7XG4gICAgICAgIFxuICAgICAgICBib2R5QSA9IGNvbGxpc2lvbi5ib2R5QTtcbiAgICAgICAgYm9keUIgPSBjb2xsaXNpb24uYm9keUI7XG5cbiAgICAgICAgLy8gZW5zdXJlIG5vcm1hbCBpcyBmYWNpbmcgYXdheSBmcm9tIGJvZHlBXG4gICAgICAgIGlmIChWZWN0b3IuZG90KG1pbk92ZXJsYXAuYXhpcywgVmVjdG9yLnN1Yihib2R5Qi5wb3NpdGlvbiwgYm9keUEucG9zaXRpb24pKSA8IDApIHtcbiAgICAgICAgICAgIGNvbGxpc2lvbi5ub3JtYWwgPSB7XG4gICAgICAgICAgICAgICAgeDogbWluT3ZlcmxhcC5heGlzLngsXG4gICAgICAgICAgICAgICAgeTogbWluT3ZlcmxhcC5heGlzLnlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb2xsaXNpb24ubm9ybWFsID0ge1xuICAgICAgICAgICAgICAgIHg6IC1taW5PdmVybGFwLmF4aXMueCxcbiAgICAgICAgICAgICAgICB5OiAtbWluT3ZlcmxhcC5heGlzLnlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBjb2xsaXNpb24udGFuZ2VudCA9IFZlY3Rvci5wZXJwKGNvbGxpc2lvbi5ub3JtYWwpO1xuXG4gICAgICAgIGNvbGxpc2lvbi5wZW5ldHJhdGlvbiA9IGNvbGxpc2lvbi5wZW5ldHJhdGlvbiB8fCB7fTtcbiAgICAgICAgY29sbGlzaW9uLnBlbmV0cmF0aW9uLnggPSBjb2xsaXNpb24ubm9ybWFsLnggKiBjb2xsaXNpb24uZGVwdGg7XG4gICAgICAgIGNvbGxpc2lvbi5wZW5ldHJhdGlvbi55ID0gY29sbGlzaW9uLm5vcm1hbC55ICogY29sbGlzaW9uLmRlcHRoOyBcblxuICAgICAgICAvLyBmaW5kIHN1cHBvcnQgcG9pbnRzLCB0aGVyZSBpcyBhbHdheXMgZWl0aGVyIGV4YWN0bHkgb25lIG9yIHR3b1xuICAgICAgICB2YXIgdmVydGljZXNCID0gU0FULl9maW5kU3VwcG9ydHMoYm9keUEsIGJvZHlCLCBjb2xsaXNpb24ubm9ybWFsKSxcbiAgICAgICAgICAgIHN1cHBvcnRzID0gW107XG5cbiAgICAgICAgLy8gZmluZCB0aGUgc3VwcG9ydHMgZnJvbSBib2R5QiB0aGF0IGFyZSBpbnNpZGUgYm9keUFcbiAgICAgICAgaWYgKFZlcnRpY2VzLmNvbnRhaW5zKGJvZHlBLnZlcnRpY2VzLCB2ZXJ0aWNlc0JbMF0pKVxuICAgICAgICAgICAgc3VwcG9ydHMucHVzaCh2ZXJ0aWNlc0JbMF0pO1xuXG4gICAgICAgIGlmIChWZXJ0aWNlcy5jb250YWlucyhib2R5QS52ZXJ0aWNlcywgdmVydGljZXNCWzFdKSlcbiAgICAgICAgICAgIHN1cHBvcnRzLnB1c2godmVydGljZXNCWzFdKTtcblxuICAgICAgICAvLyBmaW5kIHRoZSBzdXBwb3J0cyBmcm9tIGJvZHlBIHRoYXQgYXJlIGluc2lkZSBib2R5QlxuICAgICAgICBpZiAoc3VwcG9ydHMubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgdmFyIHZlcnRpY2VzQSA9IFNBVC5fZmluZFN1cHBvcnRzKGJvZHlCLCBib2R5QSwgVmVjdG9yLm5lZyhjb2xsaXNpb24ubm9ybWFsKSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoVmVydGljZXMuY29udGFpbnMoYm9keUIudmVydGljZXMsIHZlcnRpY2VzQVswXSkpXG4gICAgICAgICAgICAgICAgc3VwcG9ydHMucHVzaCh2ZXJ0aWNlc0FbMF0pO1xuXG4gICAgICAgICAgICBpZiAoc3VwcG9ydHMubGVuZ3RoIDwgMiAmJiBWZXJ0aWNlcy5jb250YWlucyhib2R5Qi52ZXJ0aWNlcywgdmVydGljZXNBWzFdKSlcbiAgICAgICAgICAgICAgICBzdXBwb3J0cy5wdXNoKHZlcnRpY2VzQVsxXSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhY2NvdW50IGZvciB0aGUgZWRnZSBjYXNlIG9mIG92ZXJsYXBwaW5nIGJ1dCBubyB2ZXJ0ZXggY29udGFpbm1lbnRcbiAgICAgICAgaWYgKHN1cHBvcnRzLmxlbmd0aCA8IDEpXG4gICAgICAgICAgICBzdXBwb3J0cyA9IFt2ZXJ0aWNlc0JbMF1dO1xuICAgICAgICBcbiAgICAgICAgY29sbGlzaW9uLnN1cHBvcnRzID0gc3VwcG9ydHM7XG5cbiAgICAgICAgcmV0dXJuIGNvbGxpc2lvbjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRmluZCB0aGUgb3ZlcmxhcCBiZXR3ZWVuIHR3byBzZXRzIG9mIHZlcnRpY2VzLlxuICAgICAqIEBtZXRob2QgX292ZXJsYXBBeGVzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gdmVydGljZXNBXG4gICAgICogQHBhcmFtIHt9IHZlcnRpY2VzQlxuICAgICAqIEBwYXJhbSB7fSBheGVzXG4gICAgICogQHJldHVybiByZXN1bHRcbiAgICAgKi9cbiAgICBTQVQuX292ZXJsYXBBeGVzID0gZnVuY3Rpb24odmVydGljZXNBLCB2ZXJ0aWNlc0IsIGF4ZXMpIHtcbiAgICAgICAgdmFyIHByb2plY3Rpb25BID0gVmVjdG9yLl90ZW1wWzBdLCBcbiAgICAgICAgICAgIHByb2plY3Rpb25CID0gVmVjdG9yLl90ZW1wWzFdLFxuICAgICAgICAgICAgcmVzdWx0ID0geyBvdmVybGFwOiBOdW1iZXIuTUFYX1ZBTFVFIH0sXG4gICAgICAgICAgICBvdmVybGFwLFxuICAgICAgICAgICAgYXhpcztcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF4ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGF4aXMgPSBheGVzW2ldO1xuXG4gICAgICAgICAgICBTQVQuX3Byb2plY3RUb0F4aXMocHJvamVjdGlvbkEsIHZlcnRpY2VzQSwgYXhpcyk7XG4gICAgICAgICAgICBTQVQuX3Byb2plY3RUb0F4aXMocHJvamVjdGlvbkIsIHZlcnRpY2VzQiwgYXhpcyk7XG5cbiAgICAgICAgICAgIG92ZXJsYXAgPSBNYXRoLm1pbihwcm9qZWN0aW9uQS5tYXggLSBwcm9qZWN0aW9uQi5taW4sIHByb2plY3Rpb25CLm1heCAtIHByb2plY3Rpb25BLm1pbik7XG5cbiAgICAgICAgICAgIGlmIChvdmVybGFwIDw9IDApIHtcbiAgICAgICAgICAgICAgICByZXN1bHQub3ZlcmxhcCA9IG92ZXJsYXA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG92ZXJsYXAgPCByZXN1bHQub3ZlcmxhcCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5vdmVybGFwID0gb3ZlcmxhcDtcbiAgICAgICAgICAgICAgICByZXN1bHQuYXhpcyA9IGF4aXM7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmF4aXNOdW1iZXIgPSBpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUHJvamVjdHMgdmVydGljZXMgb24gYW4gYXhpcyBhbmQgcmV0dXJucyBhbiBpbnRlcnZhbC5cbiAgICAgKiBAbWV0aG9kIF9wcm9qZWN0VG9BeGlzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gcHJvamVjdGlvblxuICAgICAqIEBwYXJhbSB7fSB2ZXJ0aWNlc1xuICAgICAqIEBwYXJhbSB7fSBheGlzXG4gICAgICovXG4gICAgU0FULl9wcm9qZWN0VG9BeGlzID0gZnVuY3Rpb24ocHJvamVjdGlvbiwgdmVydGljZXMsIGF4aXMpIHtcbiAgICAgICAgdmFyIG1pbiA9IFZlY3Rvci5kb3QodmVydGljZXNbMF0sIGF4aXMpLFxuICAgICAgICAgICAgbWF4ID0gbWluO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBkb3QgPSBWZWN0b3IuZG90KHZlcnRpY2VzW2ldLCBheGlzKTtcblxuICAgICAgICAgICAgaWYgKGRvdCA+IG1heCkgeyBcbiAgICAgICAgICAgICAgICBtYXggPSBkb3Q7IFxuICAgICAgICAgICAgfSBlbHNlIGlmIChkb3QgPCBtaW4pIHsgXG4gICAgICAgICAgICAgICAgbWluID0gZG90OyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByb2plY3Rpb24ubWluID0gbWluO1xuICAgICAgICBwcm9qZWN0aW9uLm1heCA9IG1heDtcbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIEZpbmRzIHN1cHBvcnRpbmcgdmVydGljZXMgZ2l2ZW4gdHdvIGJvZGllcyBhbG9uZyBhIGdpdmVuIGRpcmVjdGlvbiB1c2luZyBoaWxsLWNsaW1iaW5nLlxuICAgICAqIEBtZXRob2QgX2ZpbmRTdXBwb3J0c1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHt9IGJvZHlBXG4gICAgICogQHBhcmFtIHt9IGJvZHlCXG4gICAgICogQHBhcmFtIHt9IG5vcm1hbFxuICAgICAqIEByZXR1cm4gW3ZlY3Rvcl1cbiAgICAgKi9cbiAgICBTQVQuX2ZpbmRTdXBwb3J0cyA9IGZ1bmN0aW9uKGJvZHlBLCBib2R5Qiwgbm9ybWFsKSB7XG4gICAgICAgIHZhciBuZWFyZXN0RGlzdGFuY2UgPSBOdW1iZXIuTUFYX1ZBTFVFLFxuICAgICAgICAgICAgdmVydGV4VG9Cb2R5ID0gVmVjdG9yLl90ZW1wWzBdLFxuICAgICAgICAgICAgdmVydGljZXMgPSBib2R5Qi52ZXJ0aWNlcyxcbiAgICAgICAgICAgIGJvZHlBUG9zaXRpb24gPSBib2R5QS5wb3NpdGlvbixcbiAgICAgICAgICAgIGRpc3RhbmNlLFxuICAgICAgICAgICAgdmVydGV4LFxuICAgICAgICAgICAgdmVydGV4QSxcbiAgICAgICAgICAgIHZlcnRleEI7XG5cbiAgICAgICAgLy8gZmluZCBjbG9zZXN0IHZlcnRleCBvbiBib2R5QlxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZlcnRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2ZXJ0ZXggPSB2ZXJ0aWNlc1tpXTtcbiAgICAgICAgICAgIHZlcnRleFRvQm9keS54ID0gdmVydGV4LnggLSBib2R5QVBvc2l0aW9uLng7XG4gICAgICAgICAgICB2ZXJ0ZXhUb0JvZHkueSA9IHZlcnRleC55IC0gYm9keUFQb3NpdGlvbi55O1xuICAgICAgICAgICAgZGlzdGFuY2UgPSAtVmVjdG9yLmRvdChub3JtYWwsIHZlcnRleFRvQm9keSk7XG5cbiAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IG5lYXJlc3REaXN0YW5jZSkge1xuICAgICAgICAgICAgICAgIG5lYXJlc3REaXN0YW5jZSA9IGRpc3RhbmNlO1xuICAgICAgICAgICAgICAgIHZlcnRleEEgPSB2ZXJ0ZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBmaW5kIG5leHQgY2xvc2VzdCB2ZXJ0ZXggdXNpbmcgdGhlIHR3byBjb25uZWN0ZWQgdG8gaXRcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IHZlcnRleEEuaW5kZXggLSAxID49IDAgPyB2ZXJ0ZXhBLmluZGV4IC0gMSA6IHZlcnRpY2VzLmxlbmd0aCAtIDE7XG4gICAgICAgIHZlcnRleCA9IHZlcnRpY2VzW3ByZXZJbmRleF07XG4gICAgICAgIHZlcnRleFRvQm9keS54ID0gdmVydGV4LnggLSBib2R5QVBvc2l0aW9uLng7XG4gICAgICAgIHZlcnRleFRvQm9keS55ID0gdmVydGV4LnkgLSBib2R5QVBvc2l0aW9uLnk7XG4gICAgICAgIG5lYXJlc3REaXN0YW5jZSA9IC1WZWN0b3IuZG90KG5vcm1hbCwgdmVydGV4VG9Cb2R5KTtcbiAgICAgICAgdmVydGV4QiA9IHZlcnRleDtcblxuICAgICAgICB2YXIgbmV4dEluZGV4ID0gKHZlcnRleEEuaW5kZXggKyAxKSAlIHZlcnRpY2VzLmxlbmd0aDtcbiAgICAgICAgdmVydGV4ID0gdmVydGljZXNbbmV4dEluZGV4XTtcbiAgICAgICAgdmVydGV4VG9Cb2R5LnggPSB2ZXJ0ZXgueCAtIGJvZHlBUG9zaXRpb24ueDtcbiAgICAgICAgdmVydGV4VG9Cb2R5LnkgPSB2ZXJ0ZXgueSAtIGJvZHlBUG9zaXRpb24ueTtcbiAgICAgICAgZGlzdGFuY2UgPSAtVmVjdG9yLmRvdChub3JtYWwsIHZlcnRleFRvQm9keSk7XG4gICAgICAgIGlmIChkaXN0YW5jZSA8IG5lYXJlc3REaXN0YW5jZSkge1xuICAgICAgICAgICAgdmVydGV4QiA9IHZlcnRleDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbdmVydGV4QSwgdmVydGV4Ql07XG4gICAgfTtcblxufSkoKTtcblxufSx7XCIuLi9nZW9tZXRyeS9WZWN0b3JcIjoyOCxcIi4uL2dlb21ldHJ5L1ZlcnRpY2VzXCI6Mjl9XSwxMjpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuQ29uc3RyYWludGAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgY29uc3RyYWludHMuXG4qIENvbnN0cmFpbnRzIGFyZSB1c2VkIGZvciBzcGVjaWZ5aW5nIHRoYXQgYSBmaXhlZCBkaXN0YW5jZSBtdXN0IGJlIG1haW50YWluZWQgYmV0d2VlbiB0d28gYm9kaWVzIChvciBhIGJvZHkgYW5kIGEgZml4ZWQgd29ybGQtc3BhY2UgcG9zaXRpb24pLlxuKiBUaGUgc3RpZmZuZXNzIG9mIGNvbnN0cmFpbnRzIGNhbiBiZSBtb2RpZmllZCB0byBjcmVhdGUgc3ByaW5ncyBvciBlbGFzdGljLlxuKlxuKiBTZWUgdGhlIGluY2x1ZGVkIHVzYWdlIFtleGFtcGxlc10oaHR0cHM6Ly9naXRodWIuY29tL2xpYWJydS9tYXR0ZXItanMvdHJlZS9tYXN0ZXIvZXhhbXBsZXMpLlxuKlxuKiBAY2xhc3MgQ29uc3RyYWludFxuKi9cblxudmFyIENvbnN0cmFpbnQgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb25zdHJhaW50O1xuXG52YXIgVmVydGljZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZXJ0aWNlcycpO1xudmFyIFZlY3RvciA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L1ZlY3RvcicpO1xudmFyIFNsZWVwaW5nID0gX2RlcmVxXygnLi4vY29yZS9TbGVlcGluZycpO1xudmFyIEJvdW5kcyA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L0JvdW5kcycpO1xudmFyIEF4ZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9BeGVzJyk7XG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi4vY29yZS9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgQ29uc3RyYWludC5fd2FybWluZyA9IDAuNDtcbiAgICBDb25zdHJhaW50Ll90b3JxdWVEYW1wZW4gPSAxO1xuICAgIENvbnN0cmFpbnQuX21pbkxlbmd0aCA9IDAuMDAwMDAxO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBjb25zdHJhaW50LlxuICAgICAqIEFsbCBwcm9wZXJ0aWVzIGhhdmUgZGVmYXVsdCB2YWx1ZXMsIGFuZCBtYW55IGFyZSBwcmUtY2FsY3VsYXRlZCBhdXRvbWF0aWNhbGx5IGJhc2VkIG9uIG90aGVyIHByb3BlcnRpZXMuXG4gICAgICogVG8gc2ltdWxhdGUgYSByZXZvbHV0ZSBjb25zdHJhaW50IChvciBwaW4gam9pbnQpIHNldCBgbGVuZ3RoOiAwYCBhbmQgYSBoaWdoIGBzdGlmZm5lc3NgIHZhbHVlIChlLmcuIGAwLjdgIG9yIGFib3ZlKS5cbiAgICAgKiBJZiB0aGUgY29uc3RyYWludCBpcyB1bnN0YWJsZSwgdHJ5IGxvd2VyaW5nIHRoZSBgc3RpZmZuZXNzYCB2YWx1ZSBhbmQgLyBvciBpbmNyZWFzaW5nIGBlbmdpbmUuY29uc3RyYWludEl0ZXJhdGlvbnNgLlxuICAgICAqIEZvciBjb21wb3VuZCBib2RpZXMsIGNvbnN0cmFpbnRzIG11c3QgYmUgYXBwbGllZCB0byB0aGUgcGFyZW50IGJvZHkgKG5vdCBvbmUgb2YgaXRzIHBhcnRzKS5cbiAgICAgKiBTZWUgdGhlIHByb3BlcnRpZXMgc2VjdGlvbiBiZWxvdyBmb3IgZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gd2hhdCB5b3UgY2FuIHBhc3MgdmlhIHRoZSBgb3B0aW9uc2Agb2JqZWN0LlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHt9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJuIHtjb25zdHJhaW50fSBjb25zdHJhaW50XG4gICAgICovXG4gICAgQ29uc3RyYWludC5jcmVhdGUgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHZhciBjb25zdHJhaW50ID0gb3B0aW9ucztcblxuICAgICAgICAvLyBpZiBib2RpZXMgZGVmaW5lZCBidXQgbm8gcG9pbnRzLCB1c2UgYm9keSBjZW50cmVcbiAgICAgICAgaWYgKGNvbnN0cmFpbnQuYm9keUEgJiYgIWNvbnN0cmFpbnQucG9pbnRBKVxuICAgICAgICAgICAgY29uc3RyYWludC5wb2ludEEgPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgaWYgKGNvbnN0cmFpbnQuYm9keUIgJiYgIWNvbnN0cmFpbnQucG9pbnRCKVxuICAgICAgICAgICAgY29uc3RyYWludC5wb2ludEIgPSB7IHg6IDAsIHk6IDAgfTtcblxuICAgICAgICAvLyBjYWxjdWxhdGUgc3RhdGljIGxlbmd0aCB1c2luZyBpbml0aWFsIHdvcmxkIHNwYWNlIHBvaW50c1xuICAgICAgICB2YXIgaW5pdGlhbFBvaW50QSA9IGNvbnN0cmFpbnQuYm9keUEgPyBWZWN0b3IuYWRkKGNvbnN0cmFpbnQuYm9keUEucG9zaXRpb24sIGNvbnN0cmFpbnQucG9pbnRBKSA6IGNvbnN0cmFpbnQucG9pbnRBLFxuICAgICAgICAgICAgaW5pdGlhbFBvaW50QiA9IGNvbnN0cmFpbnQuYm9keUIgPyBWZWN0b3IuYWRkKGNvbnN0cmFpbnQuYm9keUIucG9zaXRpb24sIGNvbnN0cmFpbnQucG9pbnRCKSA6IGNvbnN0cmFpbnQucG9pbnRCLFxuICAgICAgICAgICAgbGVuZ3RoID0gVmVjdG9yLm1hZ25pdHVkZShWZWN0b3Iuc3ViKGluaXRpYWxQb2ludEEsIGluaXRpYWxQb2ludEIpKTtcbiAgICBcbiAgICAgICAgY29uc3RyYWludC5sZW5ndGggPSB0eXBlb2YgY29uc3RyYWludC5sZW5ndGggIT09ICd1bmRlZmluZWQnID8gY29uc3RyYWludC5sZW5ndGggOiBsZW5ndGg7XG5cbiAgICAgICAgLy8gb3B0aW9uIGRlZmF1bHRzXG4gICAgICAgIGNvbnN0cmFpbnQuaWQgPSBjb25zdHJhaW50LmlkIHx8IENvbW1vbi5uZXh0SWQoKTtcbiAgICAgICAgY29uc3RyYWludC5sYWJlbCA9IGNvbnN0cmFpbnQubGFiZWwgfHwgJ0NvbnN0cmFpbnQnO1xuICAgICAgICBjb25zdHJhaW50LnR5cGUgPSAnY29uc3RyYWludCc7XG4gICAgICAgIGNvbnN0cmFpbnQuc3RpZmZuZXNzID0gY29uc3RyYWludC5zdGlmZm5lc3MgfHwgKGNvbnN0cmFpbnQubGVuZ3RoID4gMCA/IDEgOiAwLjcpO1xuICAgICAgICBjb25zdHJhaW50LmRhbXBpbmcgPSBjb25zdHJhaW50LmRhbXBpbmcgfHwgMDtcbiAgICAgICAgY29uc3RyYWludC5hbmd1bGFyU3RpZmZuZXNzID0gY29uc3RyYWludC5hbmd1bGFyU3RpZmZuZXNzIHx8IDA7XG4gICAgICAgIGNvbnN0cmFpbnQuYW5nbGVBID0gY29uc3RyYWludC5ib2R5QSA/IGNvbnN0cmFpbnQuYm9keUEuYW5nbGUgOiBjb25zdHJhaW50LmFuZ2xlQTtcbiAgICAgICAgY29uc3RyYWludC5hbmdsZUIgPSBjb25zdHJhaW50LmJvZHlCID8gY29uc3RyYWludC5ib2R5Qi5hbmdsZSA6IGNvbnN0cmFpbnQuYW5nbGVCO1xuICAgICAgICBjb25zdHJhaW50LnBsdWdpbiA9IHt9O1xuXG4gICAgICAgIC8vIHJlbmRlclxuICAgICAgICB2YXIgcmVuZGVyID0ge1xuICAgICAgICAgICAgdmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGxpbmVXaWR0aDogMixcbiAgICAgICAgICAgIHN0cm9rZVN0eWxlOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICB0eXBlOiAnbGluZScsXG4gICAgICAgICAgICBhbmNob3JzOiB0cnVlXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKGNvbnN0cmFpbnQubGVuZ3RoID09PSAwICYmIGNvbnN0cmFpbnQuc3RpZmZuZXNzID4gMC4xKSB7XG4gICAgICAgICAgICByZW5kZXIudHlwZSA9ICdwaW4nO1xuICAgICAgICAgICAgcmVuZGVyLmFuY2hvcnMgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmIChjb25zdHJhaW50LnN0aWZmbmVzcyA8IDAuOSkge1xuICAgICAgICAgICAgcmVuZGVyLnR5cGUgPSAnc3ByaW5nJztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0cmFpbnQucmVuZGVyID0gQ29tbW9uLmV4dGVuZChyZW5kZXIsIGNvbnN0cmFpbnQucmVuZGVyKTtcblxuICAgICAgICByZXR1cm4gY29uc3RyYWludDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUHJlcGFyZXMgZm9yIHNvbHZpbmcgYnkgY29uc3RyYWludCB3YXJtaW5nLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBwcmVTb2x2ZUFsbFxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKi9cbiAgICBDb25zdHJhaW50LnByZVNvbHZlQWxsID0gZnVuY3Rpb24oYm9kaWVzKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXSxcbiAgICAgICAgICAgICAgICBpbXB1bHNlID0gYm9keS5jb25zdHJhaW50SW1wdWxzZTtcblxuICAgICAgICAgICAgaWYgKGJvZHkuaXNTdGF0aWMgfHwgKGltcHVsc2UueCA9PT0gMCAmJiBpbXB1bHNlLnkgPT09IDAgJiYgaW1wdWxzZS5hbmdsZSA9PT0gMCkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYm9keS5wb3NpdGlvbi54ICs9IGltcHVsc2UueDtcbiAgICAgICAgICAgIGJvZHkucG9zaXRpb24ueSArPSBpbXB1bHNlLnk7XG4gICAgICAgICAgICBib2R5LmFuZ2xlICs9IGltcHVsc2UuYW5nbGU7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU29sdmVzIGFsbCBjb25zdHJhaW50cyBpbiBhIGxpc3Qgb2YgY29sbGlzaW9ucy5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2Qgc29sdmVBbGxcbiAgICAgKiBAcGFyYW0ge2NvbnN0cmFpbnRbXX0gY29uc3RyYWludHNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVNjYWxlXG4gICAgICovXG4gICAgQ29uc3RyYWludC5zb2x2ZUFsbCA9IGZ1bmN0aW9uKGNvbnN0cmFpbnRzLCB0aW1lU2NhbGUpIHtcbiAgICAgICAgLy8gU29sdmUgZml4ZWQgY29uc3RyYWludHMgZmlyc3QuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29uc3RyYWludHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBjb25zdHJhaW50ID0gY29uc3RyYWludHNbaV0sXG4gICAgICAgICAgICAgICAgZml4ZWRBID0gIWNvbnN0cmFpbnQuYm9keUEgfHwgKGNvbnN0cmFpbnQuYm9keUEgJiYgY29uc3RyYWludC5ib2R5QS5pc1N0YXRpYyksXG4gICAgICAgICAgICAgICAgZml4ZWRCID0gIWNvbnN0cmFpbnQuYm9keUIgfHwgKGNvbnN0cmFpbnQuYm9keUIgJiYgY29uc3RyYWludC5ib2R5Qi5pc1N0YXRpYyk7XG5cbiAgICAgICAgICAgIGlmIChmaXhlZEEgfHwgZml4ZWRCKSB7XG4gICAgICAgICAgICAgICAgQ29uc3RyYWludC5zb2x2ZShjb25zdHJhaW50c1tpXSwgdGltZVNjYWxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFNvbHZlIGZyZWUgY29uc3RyYWludHMgbGFzdC5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGNvbnN0cmFpbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBjb25zdHJhaW50ID0gY29uc3RyYWludHNbaV07XG4gICAgICAgICAgICBmaXhlZEEgPSAhY29uc3RyYWludC5ib2R5QSB8fCAoY29uc3RyYWludC5ib2R5QSAmJiBjb25zdHJhaW50LmJvZHlBLmlzU3RhdGljKTtcbiAgICAgICAgICAgIGZpeGVkQiA9ICFjb25zdHJhaW50LmJvZHlCIHx8IChjb25zdHJhaW50LmJvZHlCICYmIGNvbnN0cmFpbnQuYm9keUIuaXNTdGF0aWMpO1xuXG4gICAgICAgICAgICBpZiAoIWZpeGVkQSAmJiAhZml4ZWRCKSB7XG4gICAgICAgICAgICAgICAgQ29uc3RyYWludC5zb2x2ZShjb25zdHJhaW50c1tpXSwgdGltZVNjYWxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTb2x2ZXMgYSBkaXN0YW5jZSBjb25zdHJhaW50IHdpdGggR2F1c3MtU2llZGVsIG1ldGhvZC5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2Qgc29sdmVcbiAgICAgKiBAcGFyYW0ge2NvbnN0cmFpbnR9IGNvbnN0cmFpbnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVNjYWxlXG4gICAgICovXG4gICAgQ29uc3RyYWludC5zb2x2ZSA9IGZ1bmN0aW9uKGNvbnN0cmFpbnQsIHRpbWVTY2FsZSkge1xuICAgICAgICB2YXIgYm9keUEgPSBjb25zdHJhaW50LmJvZHlBLFxuICAgICAgICAgICAgYm9keUIgPSBjb25zdHJhaW50LmJvZHlCLFxuICAgICAgICAgICAgcG9pbnRBID0gY29uc3RyYWludC5wb2ludEEsXG4gICAgICAgICAgICBwb2ludEIgPSBjb25zdHJhaW50LnBvaW50QjtcblxuICAgICAgICBpZiAoIWJvZHlBICYmICFib2R5QilcbiAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICAvLyB1cGRhdGUgcmVmZXJlbmNlIGFuZ2xlXG4gICAgICAgIGlmIChib2R5QSAmJiAhYm9keUEuaXNTdGF0aWMpIHtcbiAgICAgICAgICAgIFZlY3Rvci5yb3RhdGUocG9pbnRBLCBib2R5QS5hbmdsZSAtIGNvbnN0cmFpbnQuYW5nbGVBLCBwb2ludEEpO1xuICAgICAgICAgICAgY29uc3RyYWludC5hbmdsZUEgPSBib2R5QS5hbmdsZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gdXBkYXRlIHJlZmVyZW5jZSBhbmdsZVxuICAgICAgICBpZiAoYm9keUIgJiYgIWJvZHlCLmlzU3RhdGljKSB7XG4gICAgICAgICAgICBWZWN0b3Iucm90YXRlKHBvaW50QiwgYm9keUIuYW5nbGUgLSBjb25zdHJhaW50LmFuZ2xlQiwgcG9pbnRCKTtcbiAgICAgICAgICAgIGNvbnN0cmFpbnQuYW5nbGVCID0gYm9keUIuYW5nbGU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcG9pbnRBV29ybGQgPSBwb2ludEEsXG4gICAgICAgICAgICBwb2ludEJXb3JsZCA9IHBvaW50QjtcblxuICAgICAgICBpZiAoYm9keUEpIHBvaW50QVdvcmxkID0gVmVjdG9yLmFkZChib2R5QS5wb3NpdGlvbiwgcG9pbnRBKTtcbiAgICAgICAgaWYgKGJvZHlCKSBwb2ludEJXb3JsZCA9IFZlY3Rvci5hZGQoYm9keUIucG9zaXRpb24sIHBvaW50Qik7XG5cbiAgICAgICAgaWYgKCFwb2ludEFXb3JsZCB8fCAhcG9pbnRCV29ybGQpXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgdmFyIGRlbHRhID0gVmVjdG9yLnN1Yihwb2ludEFXb3JsZCwgcG9pbnRCV29ybGQpLFxuICAgICAgICAgICAgY3VycmVudExlbmd0aCA9IFZlY3Rvci5tYWduaXR1ZGUoZGVsdGEpO1xuXG4gICAgICAgIC8vIHByZXZlbnQgc2luZ3VsYXJpdHlcbiAgICAgICAgaWYgKGN1cnJlbnRMZW5ndGggPCBDb25zdHJhaW50Ll9taW5MZW5ndGgpIHtcbiAgICAgICAgICAgIGN1cnJlbnRMZW5ndGggPSBDb25zdHJhaW50Ll9taW5MZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzb2x2ZSBkaXN0YW5jZSBjb25zdHJhaW50IHdpdGggR2F1c3MtU2llZGVsIG1ldGhvZFxuICAgICAgICB2YXIgZGlmZmVyZW5jZSA9IChjdXJyZW50TGVuZ3RoIC0gY29uc3RyYWludC5sZW5ndGgpIC8gY3VycmVudExlbmd0aCxcbiAgICAgICAgICAgIHN0aWZmbmVzcyA9IGNvbnN0cmFpbnQuc3RpZmZuZXNzIDwgMSA/IGNvbnN0cmFpbnQuc3RpZmZuZXNzICogdGltZVNjYWxlIDogY29uc3RyYWludC5zdGlmZm5lc3MsXG4gICAgICAgICAgICBmb3JjZSA9IFZlY3Rvci5tdWx0KGRlbHRhLCBkaWZmZXJlbmNlICogc3RpZmZuZXNzKSxcbiAgICAgICAgICAgIG1hc3NUb3RhbCA9IChib2R5QSA/IGJvZHlBLmludmVyc2VNYXNzIDogMCkgKyAoYm9keUIgPyBib2R5Qi5pbnZlcnNlTWFzcyA6IDApLFxuICAgICAgICAgICAgaW5lcnRpYVRvdGFsID0gKGJvZHlBID8gYm9keUEuaW52ZXJzZUluZXJ0aWEgOiAwKSArIChib2R5QiA/IGJvZHlCLmludmVyc2VJbmVydGlhIDogMCksXG4gICAgICAgICAgICByZXNpc3RhbmNlVG90YWwgPSBtYXNzVG90YWwgKyBpbmVydGlhVG90YWwsXG4gICAgICAgICAgICB0b3JxdWUsXG4gICAgICAgICAgICBzaGFyZSxcbiAgICAgICAgICAgIG5vcm1hbCxcbiAgICAgICAgICAgIG5vcm1hbFZlbG9jaXR5LFxuICAgICAgICAgICAgcmVsYXRpdmVWZWxvY2l0eTtcblxuICAgICAgICBpZiAoY29uc3RyYWludC5kYW1waW5nKSB7XG4gICAgICAgICAgICB2YXIgemVybyA9IFZlY3Rvci5jcmVhdGUoKTtcbiAgICAgICAgICAgIG5vcm1hbCA9IFZlY3Rvci5kaXYoZGVsdGEsIGN1cnJlbnRMZW5ndGgpO1xuXG4gICAgICAgICAgICByZWxhdGl2ZVZlbG9jaXR5ID0gVmVjdG9yLnN1YihcbiAgICAgICAgICAgICAgICBib2R5QiAmJiBWZWN0b3Iuc3ViKGJvZHlCLnBvc2l0aW9uLCBib2R5Qi5wb3NpdGlvblByZXYpIHx8IHplcm8sXG4gICAgICAgICAgICAgICAgYm9keUEgJiYgVmVjdG9yLnN1Yihib2R5QS5wb3NpdGlvbiwgYm9keUEucG9zaXRpb25QcmV2KSB8fCB6ZXJvXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBub3JtYWxWZWxvY2l0eSA9IFZlY3Rvci5kb3Qobm9ybWFsLCByZWxhdGl2ZVZlbG9jaXR5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChib2R5QSAmJiAhYm9keUEuaXNTdGF0aWMpIHtcbiAgICAgICAgICAgIHNoYXJlID0gYm9keUEuaW52ZXJzZU1hc3MgLyBtYXNzVG90YWw7XG5cbiAgICAgICAgICAgIC8vIGtlZXAgdHJhY2sgb2YgYXBwbGllZCBpbXB1bHNlcyBmb3IgcG9zdCBzb2x2aW5nXG4gICAgICAgICAgICBib2R5QS5jb25zdHJhaW50SW1wdWxzZS54IC09IGZvcmNlLnggKiBzaGFyZTtcbiAgICAgICAgICAgIGJvZHlBLmNvbnN0cmFpbnRJbXB1bHNlLnkgLT0gZm9yY2UueSAqIHNoYXJlO1xuXG4gICAgICAgICAgICAvLyBhcHBseSBmb3JjZXNcbiAgICAgICAgICAgIGJvZHlBLnBvc2l0aW9uLnggLT0gZm9yY2UueCAqIHNoYXJlO1xuICAgICAgICAgICAgYm9keUEucG9zaXRpb24ueSAtPSBmb3JjZS55ICogc2hhcmU7XG5cbiAgICAgICAgICAgIC8vIGFwcGx5IGRhbXBpbmdcbiAgICAgICAgICAgIGlmIChjb25zdHJhaW50LmRhbXBpbmcpIHtcbiAgICAgICAgICAgICAgICBib2R5QS5wb3NpdGlvblByZXYueCAtPSBjb25zdHJhaW50LmRhbXBpbmcgKiBub3JtYWwueCAqIG5vcm1hbFZlbG9jaXR5ICogc2hhcmU7XG4gICAgICAgICAgICAgICAgYm9keUEucG9zaXRpb25QcmV2LnkgLT0gY29uc3RyYWludC5kYW1waW5nICogbm9ybWFsLnkgKiBub3JtYWxWZWxvY2l0eSAqIHNoYXJlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBhcHBseSB0b3JxdWVcbiAgICAgICAgICAgIHRvcnF1ZSA9IChWZWN0b3IuY3Jvc3MocG9pbnRBLCBmb3JjZSkgLyByZXNpc3RhbmNlVG90YWwpICogQ29uc3RyYWludC5fdG9ycXVlRGFtcGVuICogYm9keUEuaW52ZXJzZUluZXJ0aWEgKiAoMSAtIGNvbnN0cmFpbnQuYW5ndWxhclN0aWZmbmVzcyk7XG4gICAgICAgICAgICBib2R5QS5jb25zdHJhaW50SW1wdWxzZS5hbmdsZSAtPSB0b3JxdWU7XG4gICAgICAgICAgICBib2R5QS5hbmdsZSAtPSB0b3JxdWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYm9keUIgJiYgIWJvZHlCLmlzU3RhdGljKSB7XG4gICAgICAgICAgICBzaGFyZSA9IGJvZHlCLmludmVyc2VNYXNzIC8gbWFzc1RvdGFsO1xuXG4gICAgICAgICAgICAvLyBrZWVwIHRyYWNrIG9mIGFwcGxpZWQgaW1wdWxzZXMgZm9yIHBvc3Qgc29sdmluZ1xuICAgICAgICAgICAgYm9keUIuY29uc3RyYWludEltcHVsc2UueCArPSBmb3JjZS54ICogc2hhcmU7XG4gICAgICAgICAgICBib2R5Qi5jb25zdHJhaW50SW1wdWxzZS55ICs9IGZvcmNlLnkgKiBzaGFyZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gYXBwbHkgZm9yY2VzXG4gICAgICAgICAgICBib2R5Qi5wb3NpdGlvbi54ICs9IGZvcmNlLnggKiBzaGFyZTtcbiAgICAgICAgICAgIGJvZHlCLnBvc2l0aW9uLnkgKz0gZm9yY2UueSAqIHNoYXJlO1xuXG4gICAgICAgICAgICAvLyBhcHBseSBkYW1waW5nXG4gICAgICAgICAgICBpZiAoY29uc3RyYWludC5kYW1waW5nKSB7XG4gICAgICAgICAgICAgICAgYm9keUIucG9zaXRpb25QcmV2LnggKz0gY29uc3RyYWludC5kYW1waW5nICogbm9ybWFsLnggKiBub3JtYWxWZWxvY2l0eSAqIHNoYXJlO1xuICAgICAgICAgICAgICAgIGJvZHlCLnBvc2l0aW9uUHJldi55ICs9IGNvbnN0cmFpbnQuZGFtcGluZyAqIG5vcm1hbC55ICogbm9ybWFsVmVsb2NpdHkgKiBzaGFyZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gYXBwbHkgdG9ycXVlXG4gICAgICAgICAgICB0b3JxdWUgPSAoVmVjdG9yLmNyb3NzKHBvaW50QiwgZm9yY2UpIC8gcmVzaXN0YW5jZVRvdGFsKSAqIENvbnN0cmFpbnQuX3RvcnF1ZURhbXBlbiAqIGJvZHlCLmludmVyc2VJbmVydGlhICogKDEgLSBjb25zdHJhaW50LmFuZ3VsYXJTdGlmZm5lc3MpO1xuICAgICAgICAgICAgYm9keUIuY29uc3RyYWludEltcHVsc2UuYW5nbGUgKz0gdG9ycXVlO1xuICAgICAgICAgICAgYm9keUIuYW5nbGUgKz0gdG9ycXVlO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgYm9keSB1cGRhdGVzIHJlcXVpcmVkIGFmdGVyIHNvbHZpbmcgY29uc3RyYWludHMuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHBvc3RTb2x2ZUFsbFxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKi9cbiAgICBDb25zdHJhaW50LnBvc3RTb2x2ZUFsbCA9IGZ1bmN0aW9uKGJvZGllcykge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV0sXG4gICAgICAgICAgICAgICAgaW1wdWxzZSA9IGJvZHkuY29uc3RyYWludEltcHVsc2U7XG5cbiAgICAgICAgICAgIGlmIChib2R5LmlzU3RhdGljIHx8IChpbXB1bHNlLnggPT09IDAgJiYgaW1wdWxzZS55ID09PSAwICYmIGltcHVsc2UuYW5nbGUgPT09IDApKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFNsZWVwaW5nLnNldChib2R5LCBmYWxzZSk7XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSBnZW9tZXRyeSBhbmQgcmVzZXRcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgYm9keS5wYXJ0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIHZhciBwYXJ0ID0gYm9keS5wYXJ0c1tqXTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBWZXJ0aWNlcy50cmFuc2xhdGUocGFydC52ZXJ0aWNlcywgaW1wdWxzZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoaiA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcGFydC5wb3NpdGlvbi54ICs9IGltcHVsc2UueDtcbiAgICAgICAgICAgICAgICAgICAgcGFydC5wb3NpdGlvbi55ICs9IGltcHVsc2UueTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaW1wdWxzZS5hbmdsZSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBWZXJ0aWNlcy5yb3RhdGUocGFydC52ZXJ0aWNlcywgaW1wdWxzZS5hbmdsZSwgYm9keS5wb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIEF4ZXMucm90YXRlKHBhcnQuYXhlcywgaW1wdWxzZS5hbmdsZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChqID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgVmVjdG9yLnJvdGF0ZUFib3V0KHBhcnQucG9zaXRpb24sIGltcHVsc2UuYW5nbGUsIGJvZHkucG9zaXRpb24sIHBhcnQucG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgQm91bmRzLnVwZGF0ZShwYXJ0LmJvdW5kcywgcGFydC52ZXJ0aWNlcywgYm9keS52ZWxvY2l0eSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGRhbXBlbiB0aGUgY2FjaGVkIGltcHVsc2UgZm9yIHdhcm1pbmcgbmV4dCBzdGVwXG4gICAgICAgICAgICBpbXB1bHNlLmFuZ2xlICo9IENvbnN0cmFpbnQuX3dhcm1pbmc7XG4gICAgICAgICAgICBpbXB1bHNlLnggKj0gQ29uc3RyYWludC5fd2FybWluZztcbiAgICAgICAgICAgIGltcHVsc2UueSAqPSBDb25zdHJhaW50Ll93YXJtaW5nO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qXG4gICAgKlxuICAgICogIFByb3BlcnRpZXMgRG9jdW1lbnRhdGlvblxuICAgICpcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gaW50ZWdlciBgTnVtYmVyYCB1bmlxdWVseSBpZGVudGlmeWluZyBudW1iZXIgZ2VuZXJhdGVkIGluIGBDb21wb3NpdGUuY3JlYXRlYCBieSBgQ29tbW9uLm5leHRJZGAuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgaWRcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYFN0cmluZ2AgZGVub3RpbmcgdGhlIHR5cGUgb2Ygb2JqZWN0LlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHR5cGVcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKiBAZGVmYXVsdCBcImNvbnN0cmFpbnRcIlxuICAgICAqIEByZWFkT25seVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gYXJiaXRyYXJ5IGBTdHJpbmdgIG5hbWUgdG8gaGVscCB0aGUgdXNlciBpZGVudGlmeSBhbmQgbWFuYWdlIGJvZGllcy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBsYWJlbFxuICAgICAqIEB0eXBlIHN0cmluZ1xuICAgICAqIEBkZWZhdWx0IFwiQ29uc3RyYWludFwiXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBgT2JqZWN0YCB0aGF0IGRlZmluZXMgdGhlIHJlbmRlcmluZyBwcm9wZXJ0aWVzIHRvIGJlIGNvbnN1bWVkIGJ5IHRoZSBtb2R1bGUgYE1hdHRlci5SZW5kZXJgLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlclxuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBmbGFnIHRoYXQgaW5kaWNhdGVzIGlmIHRoZSBjb25zdHJhaW50IHNob3VsZCBiZSByZW5kZXJlZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIudmlzaWJsZVxuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgZGVmaW5lcyB0aGUgbGluZSB3aWR0aCB0byB1c2Ugd2hlbiByZW5kZXJpbmcgdGhlIGNvbnN0cmFpbnQgb3V0bGluZS5cbiAgICAgKiBBIHZhbHVlIG9mIGAwYCBtZWFucyBubyBvdXRsaW5lIHdpbGwgYmUgcmVuZGVyZWQuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgcmVuZGVyLmxpbmVXaWR0aFxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYFN0cmluZ2AgdGhhdCBkZWZpbmVzIHRoZSBzdHJva2Ugc3R5bGUgdG8gdXNlIHdoZW4gcmVuZGVyaW5nIHRoZSBjb25zdHJhaW50IG91dGxpbmUuXG4gICAgICogSXQgaXMgdGhlIHNhbWUgYXMgd2hlbiB1c2luZyBhIGNhbnZhcywgc28gaXQgYWNjZXB0cyBDU1Mgc3R5bGUgcHJvcGVydHkgdmFsdWVzLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlci5zdHJva2VTdHlsZVxuICAgICAqIEB0eXBlIHN0cmluZ1xuICAgICAqIEBkZWZhdWx0IGEgcmFuZG9tIGNvbG91clxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgU3RyaW5nYCB0aGF0IGRlZmluZXMgdGhlIGNvbnN0cmFpbnQgcmVuZGVyaW5nIHR5cGUuIFxuICAgICAqIFRoZSBwb3NzaWJsZSB2YWx1ZXMgYXJlICdsaW5lJywgJ3BpbicsICdzcHJpbmcnLlxuICAgICAqIEFuIGFwcHJvcHJpYXRlIHJlbmRlciB0eXBlIHdpbGwgYmUgYXV0b21hdGljYWxseSBjaG9zZW4gdW5sZXNzIG9uZSBpcyBnaXZlbiBpbiBvcHRpb25zLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHJlbmRlci50eXBlXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICogQGRlZmF1bHQgJ2xpbmUnXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBCb29sZWFuYCB0aGF0IGRlZmluZXMgaWYgdGhlIGNvbnN0cmFpbnQncyBhbmNob3IgcG9pbnRzIHNob3VsZCBiZSByZW5kZXJlZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSByZW5kZXIuYW5jaG9yc1xuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZmlyc3QgcG9zc2libGUgYEJvZHlgIHRoYXQgdGhpcyBjb25zdHJhaW50IGlzIGF0dGFjaGVkIHRvLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGJvZHlBXG4gICAgICogQHR5cGUgYm9keVxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBzZWNvbmQgcG9zc2libGUgYEJvZHlgIHRoYXQgdGhpcyBjb25zdHJhaW50IGlzIGF0dGFjaGVkIHRvLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGJvZHlCXG4gICAgICogQHR5cGUgYm9keVxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYFZlY3RvcmAgdGhhdCBzcGVjaWZpZXMgdGhlIG9mZnNldCBvZiB0aGUgY29uc3RyYWludCBmcm9tIGNlbnRlciBvZiB0aGUgYGNvbnN0cmFpbnQuYm9keUFgIGlmIGRlZmluZWQsIG90aGVyd2lzZSBhIHdvcmxkLXNwYWNlIHBvc2l0aW9uLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHBvaW50QVxuICAgICAqIEB0eXBlIHZlY3RvclxuICAgICAqIEBkZWZhdWx0IHsgeDogMCwgeTogMCB9XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBWZWN0b3JgIHRoYXQgc3BlY2lmaWVzIHRoZSBvZmZzZXQgb2YgdGhlIGNvbnN0cmFpbnQgZnJvbSBjZW50ZXIgb2YgdGhlIGBjb25zdHJhaW50LmJvZHlCYCBpZiBkZWZpbmVkLCBvdGhlcndpc2UgYSB3b3JsZC1zcGFjZSBwb3NpdGlvbi5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBwb2ludEJcbiAgICAgKiBAdHlwZSB2ZWN0b3JcbiAgICAgKiBAZGVmYXVsdCB7IHg6IDAsIHk6IDAgfVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IHNwZWNpZmllcyB0aGUgc3RpZmZuZXNzIG9mIHRoZSBjb25zdHJhaW50LCBpLmUuIHRoZSByYXRlIGF0IHdoaWNoIGl0IHJldHVybnMgdG8gaXRzIHJlc3RpbmcgYGNvbnN0cmFpbnQubGVuZ3RoYC5cbiAgICAgKiBBIHZhbHVlIG9mIGAxYCBtZWFucyB0aGUgY29uc3RyYWludCBzaG91bGQgYmUgdmVyeSBzdGlmZi5cbiAgICAgKiBBIHZhbHVlIG9mIGAwLjJgIG1lYW5zIHRoZSBjb25zdHJhaW50IGFjdHMgbGlrZSBhIHNvZnQgc3ByaW5nLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHN0aWZmbmVzc1xuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBzcGVjaWZpZXMgdGhlIGRhbXBpbmcgb2YgdGhlIGNvbnN0cmFpbnQsIFxuICAgICAqIGkuZS4gdGhlIGFtb3VudCBvZiByZXNpc3RhbmNlIGFwcGxpZWQgdG8gZWFjaCBib2R5IGJhc2VkIG9uIHRoZWlyIHZlbG9jaXRpZXMgdG8gbGltaXQgdGhlIGFtb3VudCBvZiBvc2NpbGxhdGlvbi5cbiAgICAgKiBEYW1waW5nIHdpbGwgb25seSBiZSBhcHBhcmVudCB3aGVuIHRoZSBjb25zdHJhaW50IGFsc28gaGFzIGEgdmVyeSBsb3cgYHN0aWZmbmVzc2AuXG4gICAgICogQSB2YWx1ZSBvZiBgMC4xYCBtZWFucyB0aGUgY29uc3RyYWludCB3aWxsIGFwcGx5IGhlYXZ5IGRhbXBpbmcsIHJlc3VsdGluZyBpbiBsaXR0bGUgdG8gbm8gb3NjaWxsYXRpb24uXG4gICAgICogQSB2YWx1ZSBvZiBgMGAgbWVhbnMgdGhlIGNvbnN0cmFpbnQgd2lsbCBhcHBseSBubyBkYW1waW5nLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGRhbXBpbmdcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBOdW1iZXJgIHRoYXQgc3BlY2lmaWVzIHRoZSB0YXJnZXQgcmVzdGluZyBsZW5ndGggb2YgdGhlIGNvbnN0cmFpbnQuIFxuICAgICAqIEl0IGlzIGNhbGN1bGF0ZWQgYXV0b21hdGljYWxseSBpbiBgQ29uc3RyYWludC5jcmVhdGVgIGZyb20gaW5pdGlhbCBwb3NpdGlvbnMgb2YgdGhlIGBjb25zdHJhaW50LmJvZHlBYCBhbmQgYGNvbnN0cmFpbnQuYm9keUJgLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGxlbmd0aFxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gb2JqZWN0IHJlc2VydmVkIGZvciBzdG9yaW5nIHBsdWdpbi1zcGVjaWZpYyBwcm9wZXJ0aWVzLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHBsdWdpblxuICAgICAqIEB0eXBlIHt9XG4gICAgICovXG5cbn0pKCk7XG5cbn0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2NvcmUvU2xlZXBpbmdcIjoyMixcIi4uL2dlb21ldHJ5L0F4ZXNcIjoyNSxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6MjgsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5fV0sMTM6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLk1vdXNlQ29uc3RyYWludGAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIG1vdXNlIGNvbnN0cmFpbnRzLlxuKiBNb3VzZSBjb25zdHJhaW50cyBhcmUgdXNlZCBmb3IgYWxsb3dpbmcgdXNlciBpbnRlcmFjdGlvbiwgcHJvdmlkaW5nIHRoZSBhYmlsaXR5IHRvIG1vdmUgYm9kaWVzIHZpYSB0aGUgbW91c2Ugb3IgdG91Y2guXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBNb3VzZUNvbnN0cmFpbnRcbiovXG5cbnZhciBNb3VzZUNvbnN0cmFpbnQgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBNb3VzZUNvbnN0cmFpbnQ7XG5cbnZhciBWZXJ0aWNlcyA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L1ZlcnRpY2VzJyk7XG52YXIgU2xlZXBpbmcgPSBfZGVyZXFfKCcuLi9jb3JlL1NsZWVwaW5nJyk7XG52YXIgTW91c2UgPSBfZGVyZXFfKCcuLi9jb3JlL01vdXNlJyk7XG52YXIgRXZlbnRzID0gX2RlcmVxXygnLi4vY29yZS9FdmVudHMnKTtcbnZhciBEZXRlY3RvciA9IF9kZXJlcV8oJy4uL2NvbGxpc2lvbi9EZXRlY3RvcicpO1xudmFyIENvbnN0cmFpbnQgPSBfZGVyZXFfKCcuL0NvbnN0cmFpbnQnKTtcbnZhciBDb21wb3NpdGUgPSBfZGVyZXFfKCcuLi9ib2R5L0NvbXBvc2l0ZScpO1xudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4uL2NvcmUvQ29tbW9uJyk7XG52YXIgQm91bmRzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvQm91bmRzJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgbW91c2UgY29uc3RyYWludC5cbiAgICAgKiBBbGwgcHJvcGVydGllcyBoYXZlIGRlZmF1bHQgdmFsdWVzLCBhbmQgbWFueSBhcmUgcHJlLWNhbGN1bGF0ZWQgYXV0b21hdGljYWxseSBiYXNlZCBvbiBvdGhlciBwcm9wZXJ0aWVzLlxuICAgICAqIFNlZSB0aGUgcHJvcGVydGllcyBzZWN0aW9uIGJlbG93IGZvciBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB3aGF0IHlvdSBjYW4gcGFzcyB2aWEgdGhlIGBvcHRpb25zYCBvYmplY3QuXG4gICAgICogQG1ldGhvZCBjcmVhdGVcbiAgICAgKiBAcGFyYW0ge2VuZ2luZX0gZW5naW5lXG4gICAgICogQHBhcmFtIHt9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJuIHtNb3VzZUNvbnN0cmFpbnR9IEEgbmV3IE1vdXNlQ29uc3RyYWludFxuICAgICAqL1xuICAgIE1vdXNlQ29uc3RyYWludC5jcmVhdGUgPSBmdW5jdGlvbihlbmdpbmUsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIG1vdXNlID0gKGVuZ2luZSA/IGVuZ2luZS5tb3VzZSA6IG51bGwpIHx8IChvcHRpb25zID8gb3B0aW9ucy5tb3VzZSA6IG51bGwpO1xuXG4gICAgICAgIGlmICghbW91c2UpIHtcbiAgICAgICAgICAgIGlmIChlbmdpbmUgJiYgZW5naW5lLnJlbmRlciAmJiBlbmdpbmUucmVuZGVyLmNhbnZhcykge1xuICAgICAgICAgICAgICAgIG1vdXNlID0gTW91c2UuY3JlYXRlKGVuZ2luZS5yZW5kZXIuY2FudmFzKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICBtb3VzZSA9IE1vdXNlLmNyZWF0ZShvcHRpb25zLmVsZW1lbnQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtb3VzZSA9IE1vdXNlLmNyZWF0ZSgpO1xuICAgICAgICAgICAgICAgIENvbW1vbi53YXJuKCdNb3VzZUNvbnN0cmFpbnQuY3JlYXRlOiBvcHRpb25zLm1vdXNlIHdhcyB1bmRlZmluZWQsIG9wdGlvbnMuZWxlbWVudCB3YXMgdW5kZWZpbmVkLCBtYXkgbm90IGZ1bmN0aW9uIGFzIGV4cGVjdGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY29uc3RyYWludCA9IENvbnN0cmFpbnQuY3JlYXRlKHsgXG4gICAgICAgICAgICBsYWJlbDogJ01vdXNlIENvbnN0cmFpbnQnLFxuICAgICAgICAgICAgcG9pbnRBOiBtb3VzZS5wb3NpdGlvbixcbiAgICAgICAgICAgIHBvaW50QjogeyB4OiAwLCB5OiAwIH0sXG4gICAgICAgICAgICBsZW5ndGg6IDAuMDEsIFxuICAgICAgICAgICAgc3RpZmZuZXNzOiAwLjEsXG4gICAgICAgICAgICBhbmd1bGFyU3RpZmZuZXNzOiAxLFxuICAgICAgICAgICAgcmVuZGVyOiB7XG4gICAgICAgICAgICAgICAgc3Ryb2tlU3R5bGU6ICcjOTBFRTkwJyxcbiAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDNcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGRlZmF1bHRzID0ge1xuICAgICAgICAgICAgdHlwZTogJ21vdXNlQ29uc3RyYWludCcsXG4gICAgICAgICAgICBtb3VzZTogbW91c2UsXG4gICAgICAgICAgICBlbGVtZW50OiBudWxsLFxuICAgICAgICAgICAgYm9keTogbnVsbCxcbiAgICAgICAgICAgIGNvbnN0cmFpbnQ6IGNvbnN0cmFpbnQsXG4gICAgICAgICAgICBjb2xsaXNpb25GaWx0ZXI6IHtcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogMHgwMDAxLFxuICAgICAgICAgICAgICAgIG1hc2s6IDB4RkZGRkZGRkYsXG4gICAgICAgICAgICAgICAgZ3JvdXA6IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgbW91c2VDb25zdHJhaW50ID0gQ29tbW9uLmV4dGVuZChkZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICAgICAgRXZlbnRzLm9uKGVuZ2luZSwgJ2JlZm9yZVVwZGF0ZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGFsbEJvZGllcyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMoZW5naW5lLndvcmxkKTtcbiAgICAgICAgICAgIE1vdXNlQ29uc3RyYWludC51cGRhdGUobW91c2VDb25zdHJhaW50LCBhbGxCb2RpZXMpO1xuICAgICAgICAgICAgTW91c2VDb25zdHJhaW50Ll90cmlnZ2VyRXZlbnRzKG1vdXNlQ29uc3RyYWludCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBtb3VzZUNvbnN0cmFpbnQ7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdGhlIGdpdmVuIG1vdXNlIGNvbnN0cmFpbnQuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICAqIEBwYXJhbSB7TW91c2VDb25zdHJhaW50fSBtb3VzZUNvbnN0cmFpbnRcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICovXG4gICAgTW91c2VDb25zdHJhaW50LnVwZGF0ZSA9IGZ1bmN0aW9uKG1vdXNlQ29uc3RyYWludCwgYm9kaWVzKSB7XG4gICAgICAgIHZhciBtb3VzZSA9IG1vdXNlQ29uc3RyYWludC5tb3VzZSxcbiAgICAgICAgICAgIGNvbnN0cmFpbnQgPSBtb3VzZUNvbnN0cmFpbnQuY29uc3RyYWludCxcbiAgICAgICAgICAgIGJvZHkgPSBtb3VzZUNvbnN0cmFpbnQuYm9keTtcblxuICAgICAgICBpZiAobW91c2UuYnV0dG9uID09PSAwKSB7XG4gICAgICAgICAgICBpZiAoIWNvbnN0cmFpbnQuYm9keUIpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gYm9kaWVzW2ldO1xuICAgICAgICAgICAgICAgICAgICBpZiAoQm91bmRzLmNvbnRhaW5zKGJvZHkuYm91bmRzLCBtb3VzZS5wb3NpdGlvbikgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgRGV0ZWN0b3IuY2FuQ29sbGlkZShib2R5LmNvbGxpc2lvbkZpbHRlciwgbW91c2VDb25zdHJhaW50LmNvbGxpc2lvbkZpbHRlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSBib2R5LnBhcnRzLmxlbmd0aCA+IDEgPyAxIDogMDsgaiA8IGJvZHkucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFydCA9IGJvZHkucGFydHNbal07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFZlcnRpY2VzLmNvbnRhaW5zKHBhcnQudmVydGljZXMsIG1vdXNlLnBvc2l0aW9uKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdHJhaW50LnBvaW50QSA9IG1vdXNlLnBvc2l0aW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdHJhaW50LmJvZHlCID0gbW91c2VDb25zdHJhaW50LmJvZHkgPSBib2R5O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdHJhaW50LnBvaW50QiA9IHsgeDogbW91c2UucG9zaXRpb24ueCAtIGJvZHkucG9zaXRpb24ueCwgeTogbW91c2UucG9zaXRpb24ueSAtIGJvZHkucG9zaXRpb24ueSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdHJhaW50LmFuZ2xlQiA9IGJvZHkuYW5nbGU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2xlZXBpbmcuc2V0KGJvZHksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRzLnRyaWdnZXIobW91c2VDb25zdHJhaW50LCAnc3RhcnRkcmFnJywgeyBtb3VzZTogbW91c2UsIGJvZHk6IGJvZHkgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBTbGVlcGluZy5zZXQoY29uc3RyYWludC5ib2R5QiwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGNvbnN0cmFpbnQucG9pbnRBID0gbW91c2UucG9zaXRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdHJhaW50LmJvZHlCID0gbW91c2VDb25zdHJhaW50LmJvZHkgPSBudWxsO1xuICAgICAgICAgICAgY29uc3RyYWludC5wb2ludEIgPSBudWxsO1xuXG4gICAgICAgICAgICBpZiAoYm9keSlcbiAgICAgICAgICAgICAgICBFdmVudHMudHJpZ2dlcihtb3VzZUNvbnN0cmFpbnQsICdlbmRkcmFnJywgeyBtb3VzZTogbW91c2UsIGJvZHk6IGJvZHkgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVHJpZ2dlcnMgbW91c2UgY29uc3RyYWludCBldmVudHMuXG4gICAgICogQG1ldGhvZCBfdHJpZ2dlckV2ZW50c1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHttb3VzZX0gbW91c2VDb25zdHJhaW50XG4gICAgICovXG4gICAgTW91c2VDb25zdHJhaW50Ll90cmlnZ2VyRXZlbnRzID0gZnVuY3Rpb24obW91c2VDb25zdHJhaW50KSB7XG4gICAgICAgIHZhciBtb3VzZSA9IG1vdXNlQ29uc3RyYWludC5tb3VzZSxcbiAgICAgICAgICAgIG1vdXNlRXZlbnRzID0gbW91c2Uuc291cmNlRXZlbnRzO1xuXG4gICAgICAgIGlmIChtb3VzZUV2ZW50cy5tb3VzZW1vdmUpXG4gICAgICAgICAgICBFdmVudHMudHJpZ2dlcihtb3VzZUNvbnN0cmFpbnQsICdtb3VzZW1vdmUnLCB7IG1vdXNlOiBtb3VzZSB9KTtcblxuICAgICAgICBpZiAobW91c2VFdmVudHMubW91c2Vkb3duKVxuICAgICAgICAgICAgRXZlbnRzLnRyaWdnZXIobW91c2VDb25zdHJhaW50LCAnbW91c2Vkb3duJywgeyBtb3VzZTogbW91c2UgfSk7XG5cbiAgICAgICAgaWYgKG1vdXNlRXZlbnRzLm1vdXNldXApXG4gICAgICAgICAgICBFdmVudHMudHJpZ2dlcihtb3VzZUNvbnN0cmFpbnQsICdtb3VzZXVwJywgeyBtb3VzZTogbW91c2UgfSk7XG5cbiAgICAgICAgLy8gcmVzZXQgdGhlIG1vdXNlIHN0YXRlIHJlYWR5IGZvciB0aGUgbmV4dCBzdGVwXG4gICAgICAgIE1vdXNlLmNsZWFyU291cmNlRXZlbnRzKG1vdXNlKTtcbiAgICB9O1xuXG4gICAgLypcbiAgICAqXG4gICAgKiAgRXZlbnRzIERvY3VtZW50YXRpb25cbiAgICAqXG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgd2hlbiB0aGUgbW91c2UgaGFzIG1vdmVkIChvciBhIHRvdWNoIG1vdmVzKSBkdXJpbmcgdGhlIGxhc3Qgc3RlcFxuICAgICpcbiAgICAqIEBldmVudCBtb3VzZW1vdmVcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7bW91c2V9IGV2ZW50Lm1vdXNlIFRoZSBlbmdpbmUncyBtb3VzZSBpbnN0YW5jZVxuICAgICogQHBhcmFtIHt9IGV2ZW50LnNvdXJjZSBUaGUgc291cmNlIG9iamVjdCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5uYW1lIFRoZSBuYW1lIG9mIHRoZSBldmVudFxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIHdoZW4gdGhlIG1vdXNlIGlzIGRvd24gKG9yIGEgdG91Y2ggaGFzIHN0YXJ0ZWQpIGR1cmluZyB0aGUgbGFzdCBzdGVwXG4gICAgKlxuICAgICogQGV2ZW50IG1vdXNlZG93blxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHttb3VzZX0gZXZlbnQubW91c2UgVGhlIGVuZ2luZSdzIG1vdXNlIGluc3RhbmNlXG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgd2hlbiB0aGUgbW91c2UgaXMgdXAgKG9yIGEgdG91Y2ggaGFzIGVuZGVkKSBkdXJpbmcgdGhlIGxhc3Qgc3RlcFxuICAgICpcbiAgICAqIEBldmVudCBtb3VzZXVwXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge21vdXNlfSBldmVudC5tb3VzZSBUaGUgZW5naW5lJ3MgbW91c2UgaW5zdGFuY2VcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCB3aGVuIHRoZSB1c2VyIHN0YXJ0cyBkcmFnZ2luZyBhIGJvZHlcbiAgICAqXG4gICAgKiBAZXZlbnQgc3RhcnRkcmFnXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge21vdXNlfSBldmVudC5tb3VzZSBUaGUgZW5naW5lJ3MgbW91c2UgaW5zdGFuY2VcbiAgICAqIEBwYXJhbSB7Ym9keX0gZXZlbnQuYm9keSBUaGUgYm9keSBiZWluZyBkcmFnZ2VkXG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgd2hlbiB0aGUgdXNlciBlbmRzIGRyYWdnaW5nIGEgYm9keVxuICAgICpcbiAgICAqIEBldmVudCBlbmRkcmFnXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge21vdXNlfSBldmVudC5tb3VzZSBUaGUgZW5naW5lJ3MgbW91c2UgaW5zdGFuY2VcbiAgICAqIEBwYXJhbSB7Ym9keX0gZXZlbnQuYm9keSBUaGUgYm9keSB0aGF0IGhhcyBzdG9wcGVkIGJlaW5nIGRyYWdnZWRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLypcbiAgICAqXG4gICAgKiAgUHJvcGVydGllcyBEb2N1bWVudGF0aW9uXG4gICAgKlxuICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBTdHJpbmdgIGRlbm90aW5nIHRoZSB0eXBlIG9mIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB0eXBlXG4gICAgICogQHR5cGUgc3RyaW5nXG4gICAgICogQGRlZmF1bHQgXCJjb25zdHJhaW50XCJcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBgTW91c2VgIGluc3RhbmNlIGluIHVzZS4gSWYgbm90IHN1cHBsaWVkIGluIGBNb3VzZUNvbnN0cmFpbnQuY3JlYXRlYCwgb25lIHdpbGwgYmUgY3JlYXRlZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBtb3VzZVxuICAgICAqIEB0eXBlIG1vdXNlXG4gICAgICogQGRlZmF1bHQgbW91c2VcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBgQm9keWAgdGhhdCBpcyBjdXJyZW50bHkgYmVpbmcgbW92ZWQgYnkgdGhlIHVzZXIsIG9yIGBudWxsYCBpZiBubyBib2R5LlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGJvZHlcbiAgICAgKiBAdHlwZSBib2R5XG4gICAgICogQGRlZmF1bHQgbnVsbFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGhlIGBDb25zdHJhaW50YCBvYmplY3QgdGhhdCBpcyB1c2VkIHRvIG1vdmUgdGhlIGJvZHkgZHVyaW5nIGludGVyYWN0aW9uLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGNvbnN0cmFpbnRcbiAgICAgKiBAdHlwZSBjb25zdHJhaW50XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBgT2JqZWN0YCB0aGF0IHNwZWNpZmllcyB0aGUgY29sbGlzaW9uIGZpbHRlciBwcm9wZXJ0aWVzLlxuICAgICAqIFRoZSBjb2xsaXNpb24gZmlsdGVyIGFsbG93cyB0aGUgdXNlciB0byBkZWZpbmUgd2hpY2ggdHlwZXMgb2YgYm9keSB0aGlzIG1vdXNlIGNvbnN0cmFpbnQgY2FuIGludGVyYWN0IHdpdGguXG4gICAgICogU2VlIGBib2R5LmNvbGxpc2lvbkZpbHRlcmAgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgY29sbGlzaW9uRmlsdGVyXG4gICAgICogQHR5cGUgb2JqZWN0XG4gICAgICovXG5cbn0pKCk7XG5cbn0se1wiLi4vYm9keS9Db21wb3NpdGVcIjoyLFwiLi4vY29sbGlzaW9uL0RldGVjdG9yXCI6NSxcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL0V2ZW50c1wiOjE2LFwiLi4vY29yZS9Nb3VzZVwiOjE5LFwiLi4vY29yZS9TbGVlcGluZ1wiOjIyLFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5LFwiLi9Db25zdHJhaW50XCI6MTJ9XSwxNDpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKGdsb2JhbCl7XG4vKipcbiogVGhlIGBNYXR0ZXIuQ29tbW9uYCBtb2R1bGUgY29udGFpbnMgdXRpbGl0eSBmdW5jdGlvbnMgdGhhdCBhcmUgY29tbW9uIHRvIGFsbCBtb2R1bGVzLlxuKlxuKiBAY2xhc3MgQ29tbW9uXG4qL1xuXG52YXIgQ29tbW9uID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gQ29tbW9uO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICBDb21tb24uX25leHRJZCA9IDA7XG4gICAgQ29tbW9uLl9zZWVkID0gMDtcbiAgICBDb21tb24uX25vd1N0YXJ0VGltZSA9ICsobmV3IERhdGUoKSk7XG5cbiAgICAvKipcbiAgICAgKiBFeHRlbmRzIHRoZSBvYmplY3QgaW4gdGhlIGZpcnN0IGFyZ3VtZW50IHVzaW5nIHRoZSBvYmplY3QgaW4gdGhlIHNlY29uZCBhcmd1bWVudC5cbiAgICAgKiBAbWV0aG9kIGV4dGVuZFxuICAgICAqIEBwYXJhbSB7fSBvYmpcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRlZXBcbiAgICAgKiBAcmV0dXJuIHt9IG9iaiBleHRlbmRlZFxuICAgICAqL1xuICAgIENvbW1vbi5leHRlbmQgPSBmdW5jdGlvbihvYmosIGRlZXApIHtcbiAgICAgICAgdmFyIGFyZ3NTdGFydCxcbiAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgICBkZWVwQ2xvbmU7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBkZWVwID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgIGFyZ3NTdGFydCA9IDI7XG4gICAgICAgICAgICBkZWVwQ2xvbmUgPSBkZWVwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXJnc1N0YXJ0ID0gMTtcbiAgICAgICAgICAgIGRlZXBDbG9uZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBpID0gYXJnc1N0YXJ0OyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRlZXBDbG9uZSAmJiBzb3VyY2VbcHJvcF0gJiYgc291cmNlW3Byb3BdLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JqW3Byb3BdIHx8IG9ialtwcm9wXS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqW3Byb3BdID0gb2JqW3Byb3BdIHx8IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbW1vbi5leHRlbmQob2JqW3Byb3BdLCBkZWVwQ2xvbmUsIHNvdXJjZVtwcm9wXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBjbG9uZSBvZiB0aGUgb2JqZWN0LCBpZiBkZWVwIGlzIHRydWUgcmVmZXJlbmNlcyB3aWxsIGFsc28gYmUgY2xvbmVkLlxuICAgICAqIEBtZXRob2QgY2xvbmVcbiAgICAgKiBAcGFyYW0ge30gb2JqXG4gICAgICogQHBhcmFtIHtib29sfSBkZWVwXG4gICAgICogQHJldHVybiB7fSBvYmogY2xvbmVkXG4gICAgICovXG4gICAgQ29tbW9uLmNsb25lID0gZnVuY3Rpb24ob2JqLCBkZWVwKSB7XG4gICAgICAgIHJldHVybiBDb21tb24uZXh0ZW5kKHt9LCBkZWVwLCBvYmopO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBsaXN0IG9mIGtleXMgZm9yIHRoZSBnaXZlbiBvYmplY3QuXG4gICAgICogQG1ldGhvZCBrZXlzXG4gICAgICogQHBhcmFtIHt9IG9ialxuICAgICAqIEByZXR1cm4ge3N0cmluZ1tdfSBrZXlzXG4gICAgICovXG4gICAgQ29tbW9uLmtleXMgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKVxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaik7XG5cbiAgICAgICAgLy8gYXZvaWQgaGFzT3duUHJvcGVydHkgZm9yIHBlcmZvcm1hbmNlXG4gICAgICAgIHZhciBrZXlzID0gW107XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmopXG4gICAgICAgICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICAgICAgcmV0dXJuIGtleXM7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGxpc3Qgb2YgdmFsdWVzIGZvciB0aGUgZ2l2ZW4gb2JqZWN0LlxuICAgICAqIEBtZXRob2QgdmFsdWVzXG4gICAgICogQHBhcmFtIHt9IG9ialxuICAgICAqIEByZXR1cm4ge2FycmF5fSBBcnJheSBvZiB0aGUgb2JqZWN0cyBwcm9wZXJ0eSB2YWx1ZXNcbiAgICAgKi9cbiAgICBDb21tb24udmFsdWVzID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgICAgXG4gICAgICAgIGlmIChPYmplY3Qua2V5cykge1xuICAgICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzLnB1c2gob2JqW2tleXNbaV1dKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIGF2b2lkIGhhc093blByb3BlcnR5IGZvciBwZXJmb3JtYW5jZVxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKVxuICAgICAgICAgICAgdmFsdWVzLnB1c2gob2JqW2tleV0pO1xuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIGEgdmFsdWUgZnJvbSBgYmFzZWAgcmVsYXRpdmUgdG8gdGhlIGBwYXRoYCBzdHJpbmcuXG4gICAgICogQG1ldGhvZCBnZXRcbiAgICAgKiBAcGFyYW0ge30gb2JqIFRoZSBiYXNlIG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHJlbGF0aXZlIHRvIGBiYXNlYCwgZS5nLiAnRm9vLkJhci5iYXonXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtiZWdpbl0gUGF0aCBzbGljZSBiZWdpblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5kXSBQYXRoIHNsaWNlIGVuZFxuICAgICAqIEByZXR1cm4ge30gVGhlIG9iamVjdCBhdCB0aGUgZ2l2ZW4gcGF0aFxuICAgICAqL1xuICAgIENvbW1vbi5nZXQgPSBmdW5jdGlvbihvYmosIHBhdGgsIGJlZ2luLCBlbmQpIHtcbiAgICAgICAgcGF0aCA9IHBhdGguc3BsaXQoJy4nKS5zbGljZShiZWdpbiwgZW5kKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIG9iaiA9IG9ialtwYXRoW2ldXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgYSB2YWx1ZSBvbiBgYmFzZWAgcmVsYXRpdmUgdG8gdGhlIGdpdmVuIGBwYXRoYCBzdHJpbmcuXG4gICAgICogQG1ldGhvZCBzZXRcbiAgICAgKiBAcGFyYW0ge30gb2JqIFRoZSBiYXNlIG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHJlbGF0aXZlIHRvIGBiYXNlYCwgZS5nLiAnRm9vLkJhci5iYXonXG4gICAgICogQHBhcmFtIHt9IHZhbCBUaGUgdmFsdWUgdG8gc2V0XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtiZWdpbl0gUGF0aCBzbGljZSBiZWdpblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbZW5kXSBQYXRoIHNsaWNlIGVuZFxuICAgICAqIEByZXR1cm4ge30gUGFzcyB0aHJvdWdoIGB2YWxgIGZvciBjaGFpbmluZ1xuICAgICAqL1xuICAgIENvbW1vbi5zZXQgPSBmdW5jdGlvbihvYmosIHBhdGgsIHZhbCwgYmVnaW4sIGVuZCkge1xuICAgICAgICB2YXIgcGFydHMgPSBwYXRoLnNwbGl0KCcuJykuc2xpY2UoYmVnaW4sIGVuZCk7XG4gICAgICAgIENvbW1vbi5nZXQob2JqLCBwYXRoLCAwLCAtMSlbcGFydHNbcGFydHMubGVuZ3RoIC0gMV1dID0gdmFsO1xuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTaHVmZmxlcyB0aGUgZ2l2ZW4gYXJyYXkgaW4tcGxhY2UuXG4gICAgICogVGhlIGZ1bmN0aW9uIHVzZXMgYSBzZWVkZWQgcmFuZG9tIGdlbmVyYXRvci5cbiAgICAgKiBAbWV0aG9kIHNodWZmbGVcbiAgICAgKiBAcGFyYW0ge2FycmF5fSBhcnJheVxuICAgICAqIEByZXR1cm4ge2FycmF5fSBhcnJheSBzaHVmZmxlZCByYW5kb21seVxuICAgICAqL1xuICAgIENvbW1vbi5zaHVmZmxlID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHtcbiAgICAgICAgICAgIHZhciBqID0gTWF0aC5mbG9vcihDb21tb24ucmFuZG9tKCkgKiAoaSArIDEpKTtcbiAgICAgICAgICAgIHZhciB0ZW1wID0gYXJyYXlbaV07XG4gICAgICAgICAgICBhcnJheVtpXSA9IGFycmF5W2pdO1xuICAgICAgICAgICAgYXJyYXlbal0gPSB0ZW1wO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmFuZG9tbHkgY2hvb3NlcyBhIHZhbHVlIGZyb20gYSBsaXN0IHdpdGggZXF1YWwgcHJvYmFiaWxpdHkuXG4gICAgICogVGhlIGZ1bmN0aW9uIHVzZXMgYSBzZWVkZWQgcmFuZG9tIGdlbmVyYXRvci5cbiAgICAgKiBAbWV0aG9kIGNob29zZVxuICAgICAqIEBwYXJhbSB7YXJyYXl9IGNob2ljZXNcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9IEEgcmFuZG9tIGNob2ljZSBvYmplY3QgZnJvbSB0aGUgYXJyYXlcbiAgICAgKi9cbiAgICBDb21tb24uY2hvb3NlID0gZnVuY3Rpb24oY2hvaWNlcykge1xuICAgICAgICByZXR1cm4gY2hvaWNlc1tNYXRoLmZsb29yKENvbW1vbi5yYW5kb20oKSAqIGNob2ljZXMubGVuZ3RoKV07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgb2JqZWN0IGlzIGEgSFRNTEVsZW1lbnQsIG90aGVyd2lzZSBmYWxzZS5cbiAgICAgKiBAbWV0aG9kIGlzRWxlbWVudFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBvYmplY3QgaXMgYSBIVE1MRWxlbWVudCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgICovXG4gICAgQ29tbW9uLmlzRWxlbWVudCA9IGZ1bmN0aW9uKG9iaikge1xuICAgICAgICBpZiAodHlwZW9mIEhUTUxFbGVtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIEhUTUxFbGVtZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhKG9iaiAmJiBvYmoubm9kZVR5cGUgJiYgb2JqLm5vZGVOYW1lKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBvYmplY3QgaXMgYW4gYXJyYXkuXG4gICAgICogQG1ldGhvZCBpc0FycmF5XG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9ialxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIG9iamVjdCBpcyBhbiBhcnJheSwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgICovXG4gICAgQ29tbW9uLmlzQXJyYXkgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBBcnJheV0nO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIG9iamVjdCBpcyBhIGZ1bmN0aW9uLlxuICAgICAqIEBtZXRob2QgaXNGdW5jdGlvblxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBvYmplY3QgaXMgYSBmdW5jdGlvbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgICovXG4gICAgQ29tbW9uLmlzRnVuY3Rpb24gPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBvYmplY3QgaXMgYSBwbGFpbiBvYmplY3QuXG4gICAgICogQG1ldGhvZCBpc1BsYWluT2JqZWN0XG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9ialxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIG9iamVjdCBpcyBhIHBsYWluIG9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgICovXG4gICAgQ29tbW9uLmlzUGxhaW5PYmplY3QgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIG9iamVjdCBpcyBhIHN0cmluZy5cbiAgICAgKiBAbWV0aG9kIGlzU3RyaW5nXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9ialxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIG9iamVjdCBpcyBhIHN0cmluZywgb3RoZXJ3aXNlIGZhbHNlXG4gICAgICovXG4gICAgQ29tbW9uLmlzU3RyaW5nID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIHJldHVybiB0b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IFN0cmluZ10nO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgZ2l2ZW4gdmFsdWUgY2xhbXBlZCBiZXR3ZWVuIGEgbWluaW11bSBhbmQgbWF4aW11bSB2YWx1ZS5cbiAgICAgKiBAbWV0aG9kIGNsYW1wXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG1pblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXhcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IFRoZSB2YWx1ZSBjbGFtcGVkIGJldHdlZW4gbWluIGFuZCBtYXggaW5jbHVzaXZlXG4gICAgICovXG4gICAgQ29tbW9uLmNsYW1wID0gZnVuY3Rpb24odmFsdWUsIG1pbiwgbWF4KSB7XG4gICAgICAgIGlmICh2YWx1ZSA8IG1pbilcbiAgICAgICAgICAgIHJldHVybiBtaW47XG4gICAgICAgIGlmICh2YWx1ZSA+IG1heClcbiAgICAgICAgICAgIHJldHVybiBtYXg7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHNpZ24gb2YgdGhlIGdpdmVuIHZhbHVlLlxuICAgICAqIEBtZXRob2Qgc2lnblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICAgICAqIEByZXR1cm4ge251bWJlcn0gLTEgaWYgbmVnYXRpdmUsICsxIGlmIDAgb3IgcG9zaXRpdmVcbiAgICAgKi9cbiAgICBDb21tb24uc2lnbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA8IDAgPyAtMSA6IDE7XG4gICAgfTtcbiAgICBcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IHRpbWVzdGFtcCBzaW5jZSB0aGUgdGltZSBvcmlnaW4gKGUuZy4gZnJvbSBwYWdlIGxvYWQpLlxuICAgICAqIFRoZSByZXN1bHQgd2lsbCBiZSBoaWdoLXJlc29sdXRpb24gaW5jbHVkaW5nIGRlY2ltYWwgcGxhY2VzIGlmIGF2YWlsYWJsZS5cbiAgICAgKiBAbWV0aG9kIG5vd1xuICAgICAqIEByZXR1cm4ge251bWJlcn0gdGhlIGN1cnJlbnQgdGltZXN0YW1wXG4gICAgICovXG4gICAgQ29tbW9uLm5vdyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAod2luZG93LnBlcmZvcm1hbmNlKSB7XG4gICAgICAgICAgICBpZiAod2luZG93LnBlcmZvcm1hbmNlLm5vdykge1xuICAgICAgICAgICAgICAgIHJldHVybiB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHdpbmRvdy5wZXJmb3JtYW5jZS53ZWJraXROb3cpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gd2luZG93LnBlcmZvcm1hbmNlLndlYmtpdE5vdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChuZXcgRGF0ZSgpKSAtIENvbW1vbi5fbm93U3RhcnRUaW1lO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHJhbmRvbSB2YWx1ZSBiZXR3ZWVuIGEgbWluaW11bSBhbmQgYSBtYXhpbXVtIHZhbHVlIGluY2x1c2l2ZS5cbiAgICAgKiBUaGUgZnVuY3Rpb24gdXNlcyBhIHNlZWRlZCByYW5kb20gZ2VuZXJhdG9yLlxuICAgICAqIEBtZXRob2QgcmFuZG9tXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG1pblxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXhcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IEEgcmFuZG9tIG51bWJlciBiZXR3ZWVuIG1pbiBhbmQgbWF4IGluY2x1c2l2ZVxuICAgICAqL1xuICAgIENvbW1vbi5yYW5kb20gPSBmdW5jdGlvbihtaW4sIG1heCkge1xuICAgICAgICBtaW4gPSAodHlwZW9mIG1pbiAhPT0gXCJ1bmRlZmluZWRcIikgPyBtaW4gOiAwO1xuICAgICAgICBtYXggPSAodHlwZW9mIG1heCAhPT0gXCJ1bmRlZmluZWRcIikgPyBtYXggOiAxO1xuICAgICAgICByZXR1cm4gbWluICsgX3NlZWRlZFJhbmRvbSgpICogKG1heCAtIG1pbik7XG4gICAgfTtcblxuICAgIHZhciBfc2VlZGVkUmFuZG9tID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpbmVhcl9jb25ncnVlbnRpYWxfZ2VuZXJhdG9yXG4gICAgICAgIENvbW1vbi5fc2VlZCA9IChDb21tb24uX3NlZWQgKiA5MzAxICsgNDkyOTcpICUgMjMzMjgwO1xuICAgICAgICByZXR1cm4gQ29tbW9uLl9zZWVkIC8gMjMzMjgwO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBhIENTUyBoZXggY29sb3VyIHN0cmluZyBpbnRvIGFuIGludGVnZXIuXG4gICAgICogQG1ldGhvZCBjb2xvclRvTnVtYmVyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbG9yU3RyaW5nXG4gICAgICogQHJldHVybiB7bnVtYmVyfSBBbiBpbnRlZ2VyIHJlcHJlc2VudGluZyB0aGUgQ1NTIGhleCBzdHJpbmdcbiAgICAgKi9cbiAgICBDb21tb24uY29sb3JUb051bWJlciA9IGZ1bmN0aW9uKGNvbG9yU3RyaW5nKSB7XG4gICAgICAgIGNvbG9yU3RyaW5nID0gY29sb3JTdHJpbmcucmVwbGFjZSgnIycsJycpO1xuXG4gICAgICAgIGlmIChjb2xvclN0cmluZy5sZW5ndGggPT0gMykge1xuICAgICAgICAgICAgY29sb3JTdHJpbmcgPSBjb2xvclN0cmluZy5jaGFyQXQoMCkgKyBjb2xvclN0cmluZy5jaGFyQXQoMClcbiAgICAgICAgICAgICAgICAgICAgICAgICsgY29sb3JTdHJpbmcuY2hhckF0KDEpICsgY29sb3JTdHJpbmcuY2hhckF0KDEpXG4gICAgICAgICAgICAgICAgICAgICAgICArIGNvbG9yU3RyaW5nLmNoYXJBdCgyKSArIGNvbG9yU3RyaW5nLmNoYXJBdCgyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwYXJzZUludChjb2xvclN0cmluZywgMTYpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29uc29sZSBsb2dnaW5nIGxldmVsIHRvIHVzZSwgd2hlcmUgZWFjaCBsZXZlbCBpbmNsdWRlcyBhbGwgbGV2ZWxzIGFib3ZlIGFuZCBleGNsdWRlcyB0aGUgbGV2ZWxzIGJlbG93LlxuICAgICAqIFRoZSBkZWZhdWx0IGxldmVsIGlzICdkZWJ1Zycgd2hpY2ggc2hvd3MgYWxsIGNvbnNvbGUgbWVzc2FnZXMuICBcbiAgICAgKlxuICAgICAqIFBvc3NpYmxlIGxldmVsIHZhbHVlcyBhcmU6XG4gICAgICogLSAwID0gTm9uZVxuICAgICAqIC0gMSA9IERlYnVnXG4gICAgICogLSAyID0gSW5mb1xuICAgICAqIC0gMyA9IFdhcm5cbiAgICAgKiAtIDQgPSBFcnJvclxuICAgICAqIEBwcm9wZXJ0eSBDb21tb24ubG9nTGV2ZWxcbiAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAqIEBkZWZhdWx0IDFcbiAgICAgKi9cbiAgICBDb21tb24ubG9nTGV2ZWwgPSAxO1xuXG4gICAgLyoqXG4gICAgICogU2hvd3MgYSBgY29uc29sZS5sb2dgIG1lc3NhZ2Ugb25seSBpZiB0aGUgY3VycmVudCBgQ29tbW9uLmxvZ0xldmVsYCBhbGxvd3MgaXQuXG4gICAgICogVGhlIG1lc3NhZ2Ugd2lsbCBiZSBwcmVmaXhlZCB3aXRoICdtYXR0ZXItanMnIHRvIG1ha2UgaXQgZWFzaWx5IGlkZW50aWZpYWJsZS5cbiAgICAgKiBAbWV0aG9kIGxvZ1xuICAgICAqIEBwYXJhbSAuLi5vYmpzIHt9IFRoZSBvYmplY3RzIHRvIGxvZy5cbiAgICAgKi9cbiAgICBDb21tb24ubG9nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChjb25zb2xlICYmIENvbW1vbi5sb2dMZXZlbCA+IDAgJiYgQ29tbW9uLmxvZ0xldmVsIDw9IDMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsIFsnbWF0dGVyLWpzOiddLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2hvd3MgYSBgY29uc29sZS5pbmZvYCBtZXNzYWdlIG9ubHkgaWYgdGhlIGN1cnJlbnQgYENvbW1vbi5sb2dMZXZlbGAgYWxsb3dzIGl0LlxuICAgICAqIFRoZSBtZXNzYWdlIHdpbGwgYmUgcHJlZml4ZWQgd2l0aCAnbWF0dGVyLWpzJyB0byBtYWtlIGl0IGVhc2lseSBpZGVudGlmaWFibGUuXG4gICAgICogQG1ldGhvZCBpbmZvXG4gICAgICogQHBhcmFtIC4uLm9ianMge30gVGhlIG9iamVjdHMgdG8gbG9nLlxuICAgICAqL1xuICAgIENvbW1vbi5pbmZvID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChjb25zb2xlICYmIENvbW1vbi5sb2dMZXZlbCA+IDAgJiYgQ29tbW9uLmxvZ0xldmVsIDw9IDIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuaW5mby5hcHBseShjb25zb2xlLCBbJ21hdHRlci1qczonXS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSkpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNob3dzIGEgYGNvbnNvbGUud2FybmAgbWVzc2FnZSBvbmx5IGlmIHRoZSBjdXJyZW50IGBDb21tb24ubG9nTGV2ZWxgIGFsbG93cyBpdC5cbiAgICAgKiBUaGUgbWVzc2FnZSB3aWxsIGJlIHByZWZpeGVkIHdpdGggJ21hdHRlci1qcycgdG8gbWFrZSBpdCBlYXNpbHkgaWRlbnRpZmlhYmxlLlxuICAgICAqIEBtZXRob2Qgd2FyblxuICAgICAqIEBwYXJhbSAuLi5vYmpzIHt9IFRoZSBvYmplY3RzIHRvIGxvZy5cbiAgICAgKi9cbiAgICBDb21tb24ud2FybiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoY29uc29sZSAmJiBDb21tb24ubG9nTGV2ZWwgPiAwICYmIENvbW1vbi5sb2dMZXZlbCA8PSAzKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4uYXBwbHkoY29uc29sZSwgWydtYXR0ZXItanM6J10uY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBuZXh0IHVuaXF1ZSBzZXF1ZW50aWFsIElELlxuICAgICAqIEBtZXRob2QgbmV4dElkXG4gICAgICogQHJldHVybiB7TnVtYmVyfSBVbmlxdWUgc2VxdWVudGlhbCBJRFxuICAgICAqL1xuICAgIENvbW1vbi5uZXh0SWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIENvbW1vbi5fbmV4dElkKys7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEEgY3Jvc3MgYnJvd3NlciBjb21wYXRpYmxlIGluZGV4T2YgaW1wbGVtZW50YXRpb24uXG4gICAgICogQG1ldGhvZCBpbmRleE9mXG4gICAgICogQHBhcmFtIHthcnJheX0gaGF5c3RhY2tcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbmVlZGxlXG4gICAgICogQHJldHVybiB7bnVtYmVyfSBUaGUgcG9zaXRpb24gb2YgbmVlZGxlIGluIGhheXN0YWNrLCBvdGhlcndpc2UgLTEuXG4gICAgICovXG4gICAgQ29tbW9uLmluZGV4T2YgPSBmdW5jdGlvbihoYXlzdGFjaywgbmVlZGxlKSB7XG4gICAgICAgIGlmIChoYXlzdGFjay5pbmRleE9mKVxuICAgICAgICAgICAgcmV0dXJuIGhheXN0YWNrLmluZGV4T2YobmVlZGxlKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhheXN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaGF5c3RhY2tbaV0gPT09IG5lZWRsZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQSBjcm9zcyBicm93c2VyIGNvbXBhdGlibGUgYXJyYXkgbWFwIGltcGxlbWVudGF0aW9uLlxuICAgICAqIEBtZXRob2QgbWFwXG4gICAgICogQHBhcmFtIHthcnJheX0gbGlzdFxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGZ1bmNcbiAgICAgKiBAcmV0dXJuIHthcnJheX0gVmFsdWVzIGZyb20gbGlzdCB0cmFuc2Zvcm1lZCBieSBmdW5jLlxuICAgICAqL1xuICAgIENvbW1vbi5tYXAgPSBmdW5jdGlvbihsaXN0LCBmdW5jKSB7XG4gICAgICAgIGlmIChsaXN0Lm1hcCkge1xuICAgICAgICAgICAgcmV0dXJuIGxpc3QubWFwKGZ1bmMpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG1hcHBlZCA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgbWFwcGVkLnB1c2goZnVuYyhsaXN0W2ldKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbWFwcGVkO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUYWtlcyBhIGRpcmVjdGVkIGdyYXBoIGFuZCByZXR1cm5zIHRoZSBwYXJ0aWFsbHkgb3JkZXJlZCBzZXQgb2YgdmVydGljZXMgaW4gdG9wb2xvZ2ljYWwgb3JkZXIuXG4gICAgICogQ2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFyZSBhbGxvd2VkLlxuICAgICAqIEBtZXRob2QgdG9wb2xvZ2ljYWxTb3J0XG4gICAgICogQHBhcmFtIHtvYmplY3R9IGdyYXBoXG4gICAgICogQHJldHVybiB7YXJyYXl9IFBhcnRpYWxseSBvcmRlcmVkIHNldCBvZiB2ZXJ0aWNlcyBpbiB0b3BvbG9naWNhbCBvcmRlci5cbiAgICAgKi9cbiAgICBDb21tb24udG9wb2xvZ2ljYWxTb3J0ID0gZnVuY3Rpb24oZ3JhcGgpIHtcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21nZWNoZXYvamF2YXNjcmlwdC1hbGdvcml0aG1zXG4gICAgICAgIC8vIENvcHlyaWdodCAoYykgTWlua28gR2VjaGV2IChNSVQgbGljZW5zZSlcbiAgICAgICAgLy8gTW9kaWZpY2F0aW9uczogdGlkeSBmb3JtYXR0aW5nIGFuZCBuYW1pbmdcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdLFxuICAgICAgICAgICAgdmlzaXRlZCA9IFtdLFxuICAgICAgICAgICAgdGVtcCA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIG5vZGUgaW4gZ3JhcGgpIHtcbiAgICAgICAgICAgIGlmICghdmlzaXRlZFtub2RlXSAmJiAhdGVtcFtub2RlXSkge1xuICAgICAgICAgICAgICAgIENvbW1vbi5fdG9wb2xvZ2ljYWxTb3J0KG5vZGUsIHZpc2l0ZWQsIHRlbXAsIGdyYXBoLCByZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgQ29tbW9uLl90b3BvbG9naWNhbFNvcnQgPSBmdW5jdGlvbihub2RlLCB2aXNpdGVkLCB0ZW1wLCBncmFwaCwgcmVzdWx0KSB7XG4gICAgICAgIHZhciBuZWlnaGJvcnMgPSBncmFwaFtub2RlXSB8fCBbXTtcbiAgICAgICAgdGVtcFtub2RlXSA9IHRydWU7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvcnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBuZWlnaGJvciA9IG5laWdoYm9yc1tpXTtcblxuICAgICAgICAgICAgaWYgKHRlbXBbbmVpZ2hib3JdKSB7XG4gICAgICAgICAgICAgICAgLy8gc2tpcCBjaXJjdWxhciBkZXBlbmRlbmNpZXNcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF2aXNpdGVkW25laWdoYm9yXSkge1xuICAgICAgICAgICAgICAgIENvbW1vbi5fdG9wb2xvZ2ljYWxTb3J0KG5laWdoYm9yLCB2aXNpdGVkLCB0ZW1wLCBncmFwaCwgcmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRlbXBbbm9kZV0gPSBmYWxzZTtcbiAgICAgICAgdmlzaXRlZFtub2RlXSA9IHRydWU7XG5cbiAgICAgICAgcmVzdWx0LnB1c2gobm9kZSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRha2VzIF9uXyBmdW5jdGlvbnMgYXMgYXJndW1lbnRzIGFuZCByZXR1cm5zIGEgbmV3IGZ1bmN0aW9uIHRoYXQgY2FsbHMgdGhlbSBpbiBvcmRlci5cbiAgICAgKiBUaGUgYXJndW1lbnRzIGFwcGxpZWQgd2hlbiBjYWxsaW5nIHRoZSBuZXcgZnVuY3Rpb24gd2lsbCBhbHNvIGJlIGFwcGxpZWQgdG8gZXZlcnkgZnVuY3Rpb24gcGFzc2VkLlxuICAgICAqIFRoZSB2YWx1ZSBvZiBgdGhpc2AgcmVmZXJzIHRvIHRoZSBsYXN0IHZhbHVlIHJldHVybmVkIGluIHRoZSBjaGFpbiB0aGF0IHdhcyBub3QgYHVuZGVmaW5lZGAuXG4gICAgICogVGhlcmVmb3JlIGlmIGEgcGFzc2VkIGZ1bmN0aW9uIGRvZXMgbm90IHJldHVybiBhIHZhbHVlLCB0aGUgcHJldmlvdXNseSByZXR1cm5lZCB2YWx1ZSBpcyBtYWludGFpbmVkLlxuICAgICAqIEFmdGVyIGFsbCBwYXNzZWQgZnVuY3Rpb25zIGhhdmUgYmVlbiBjYWxsZWQgdGhlIG5ldyBmdW5jdGlvbiByZXR1cm5zIHRoZSBsYXN0IHJldHVybmVkIHZhbHVlIChpZiBhbnkpLlxuICAgICAqIElmIGFueSBvZiB0aGUgcGFzc2VkIGZ1bmN0aW9ucyBhcmUgYSBjaGFpbiwgdGhlbiB0aGUgY2hhaW4gd2lsbCBiZSBmbGF0dGVuZWQuXG4gICAgICogQG1ldGhvZCBjaGFpblxuICAgICAqIEBwYXJhbSAuLi5mdW5jcyB7ZnVuY3Rpb259IFRoZSBmdW5jdGlvbnMgdG8gY2hhaW4uXG4gICAgICogQHJldHVybiB7ZnVuY3Rpb259IEEgbmV3IGZ1bmN0aW9uIHRoYXQgY2FsbHMgdGhlIHBhc3NlZCBmdW5jdGlvbnMgaW4gb3JkZXIuXG4gICAgICovXG4gICAgQ29tbW9uLmNoYWluID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBmdW5jcyA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICB2YXIgZnVuYyA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgICAgICAgaWYgKGZ1bmMuX2NoYWluZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBmbGF0dGVuIGFscmVhZHkgY2hhaW5lZCBmdW5jdGlvbnNcbiAgICAgICAgICAgICAgICBmdW5jcy5wdXNoLmFwcGx5KGZ1bmNzLCBmdW5jLl9jaGFpbmVkKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZnVuY3MucHVzaChmdW5jKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBjaGFpbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS9kZXZ0b29scy1kb2NzL2lzc3Vlcy81MyNpc3N1ZWNvbW1lbnQtNTE5NDEzNThcbiAgICAgICAgICAgIHZhciBsYXN0UmVzdWx0LFxuICAgICAgICAgICAgICAgIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBmdW5jcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBmdW5jc1tpXS5hcHBseShsYXN0UmVzdWx0LCBhcmdzKTtcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICBsYXN0UmVzdWx0ID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgY2hhaW4uX2NoYWluZWQgPSBmdW5jcztcblxuICAgICAgICByZXR1cm4gY2hhaW47XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENoYWlucyBhIGZ1bmN0aW9uIHRvIGV4Y3V0ZSBiZWZvcmUgdGhlIG9yaWdpbmFsIGZ1bmN0aW9uIG9uIHRoZSBnaXZlbiBgcGF0aGAgcmVsYXRpdmUgdG8gYGJhc2VgLlxuICAgICAqIFNlZSBhbHNvIGRvY3MgZm9yIGBDb21tb24uY2hhaW5gLlxuICAgICAqIEBtZXRob2QgY2hhaW5QYXRoQmVmb3JlXG4gICAgICogQHBhcmFtIHt9IGJhc2UgVGhlIGJhc2Ugb2JqZWN0XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggVGhlIHBhdGggcmVsYXRpdmUgdG8gYGJhc2VgXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hhaW4gYmVmb3JlIHRoZSBvcmlnaW5hbFxuICAgICAqIEByZXR1cm4ge2Z1bmN0aW9ufSBUaGUgY2hhaW5lZCBmdW5jdGlvbiB0aGF0IHJlcGxhY2VkIHRoZSBvcmlnaW5hbFxuICAgICAqL1xuICAgIENvbW1vbi5jaGFpblBhdGhCZWZvcmUgPSBmdW5jdGlvbihiYXNlLCBwYXRoLCBmdW5jKSB7XG4gICAgICAgIHJldHVybiBDb21tb24uc2V0KGJhc2UsIHBhdGgsIENvbW1vbi5jaGFpbihcbiAgICAgICAgICAgIGZ1bmMsXG4gICAgICAgICAgICBDb21tb24uZ2V0KGJhc2UsIHBhdGgpXG4gICAgICAgICkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDaGFpbnMgYSBmdW5jdGlvbiB0byBleGN1dGUgYWZ0ZXIgdGhlIG9yaWdpbmFsIGZ1bmN0aW9uIG9uIHRoZSBnaXZlbiBgcGF0aGAgcmVsYXRpdmUgdG8gYGJhc2VgLlxuICAgICAqIFNlZSBhbHNvIGRvY3MgZm9yIGBDb21tb24uY2hhaW5gLlxuICAgICAqIEBtZXRob2QgY2hhaW5QYXRoQWZ0ZXJcbiAgICAgKiBAcGFyYW0ge30gYmFzZSBUaGUgYmFzZSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBUaGUgcGF0aCByZWxhdGl2ZSB0byBgYmFzZWBcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjaGFpbiBhZnRlciB0aGUgb3JpZ2luYWxcbiAgICAgKiBAcmV0dXJuIHtmdW5jdGlvbn0gVGhlIGNoYWluZWQgZnVuY3Rpb24gdGhhdCByZXBsYWNlZCB0aGUgb3JpZ2luYWxcbiAgICAgKi9cbiAgICBDb21tb24uY2hhaW5QYXRoQWZ0ZXIgPSBmdW5jdGlvbihiYXNlLCBwYXRoLCBmdW5jKSB7XG4gICAgICAgIHJldHVybiBDb21tb24uc2V0KGJhc2UsIHBhdGgsIENvbW1vbi5jaGFpbihcbiAgICAgICAgICAgIENvbW1vbi5nZXQoYmFzZSwgcGF0aCksXG4gICAgICAgICAgICBmdW5jXG4gICAgICAgICkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIHJlcXVpcmUgZXh0ZXJuYWwgbGlicmFyaWVzIG91dHNpZGUgb2YgdGhlIGJ1bmRsZS5cbiAgICAgKiBJdCBmaXJzdCBsb29rcyBmb3IgdGhlIGBnbG9iYWxOYW1lYCBvbiB0aGUgZW52aXJvbm1lbnQncyBnbG9iYWwgbmFtZXNwYWNlLlxuICAgICAqIElmIHRoZSBnbG9iYWwgaXMgbm90IGZvdW5kLCBpdCB3aWxsIGZhbGwgYmFjayB0byB1c2luZyB0aGUgc3RhbmRhcmQgYHJlcXVpcmVgIHVzaW5nIHRoZSBgbW9kdWxlTmFtZWAuXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIF9yZXF1aXJlR2xvYmFsXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGdsb2JhbE5hbWUgVGhlIGdsb2JhbCBtb2R1bGUgbmFtZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2R1bGVOYW1lIFRoZSBmYWxsYmFjayBDb21tb25KUyBtb2R1bGUgbmFtZVxuICAgICAqIEByZXR1cm4ge30gVGhlIGxvYWRlZCBtb2R1bGVcbiAgICAgKi9cbiAgICBDb21tb24uX3JlcXVpcmVHbG9iYWwgPSBmdW5jdGlvbihnbG9iYWxOYW1lLCBtb2R1bGVOYW1lKSB7XG4gICAgICAgIHZhciBvYmogPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3dbZ2xvYmFsTmFtZV0gOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFtnbG9iYWxOYW1lXSA6IG51bGwpO1xuICAgICAgICByZXR1cm4gb2JqIHx8IF9kZXJlcV8obW9kdWxlTmFtZSk7XG4gICAgfTtcbn0pKCk7XG5cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxufSx7fV0sMTU6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLkVuZ2luZWAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgZW5naW5lcy5cbiogQW4gZW5naW5lIGlzIGEgY29udHJvbGxlciB0aGF0IG1hbmFnZXMgdXBkYXRpbmcgdGhlIHNpbXVsYXRpb24gb2YgdGhlIHdvcmxkLlxuKiBTZWUgYE1hdHRlci5SdW5uZXJgIGZvciBhbiBvcHRpb25hbCBnYW1lIGxvb3AgdXRpbGl0eS5cbipcbiogU2VlIHRoZSBpbmNsdWRlZCB1c2FnZSBbZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKS5cbipcbiogQGNsYXNzIEVuZ2luZVxuKi9cblxudmFyIEVuZ2luZSA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEVuZ2luZTtcblxudmFyIFdvcmxkID0gX2RlcmVxXygnLi4vYm9keS9Xb3JsZCcpO1xudmFyIFNsZWVwaW5nID0gX2RlcmVxXygnLi9TbGVlcGluZycpO1xudmFyIFJlc29sdmVyID0gX2RlcmVxXygnLi4vY29sbGlzaW9uL1Jlc29sdmVyJyk7XG52YXIgUmVuZGVyID0gX2RlcmVxXygnLi4vcmVuZGVyL1JlbmRlcicpO1xudmFyIFBhaXJzID0gX2RlcmVxXygnLi4vY29sbGlzaW9uL1BhaXJzJyk7XG52YXIgTWV0cmljcyA9IF9kZXJlcV8oJy4vTWV0cmljcycpO1xudmFyIEdyaWQgPSBfZGVyZXFfKCcuLi9jb2xsaXNpb24vR3JpZCcpO1xudmFyIEV2ZW50cyA9IF9kZXJlcV8oJy4vRXZlbnRzJyk7XG52YXIgQ29tcG9zaXRlID0gX2RlcmVxXygnLi4vYm9keS9Db21wb3NpdGUnKTtcbnZhciBDb25zdHJhaW50ID0gX2RlcmVxXygnLi4vY29uc3RyYWludC9Db25zdHJhaW50Jyk7XG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi9Db21tb24nKTtcbnZhciBCb2R5ID0gX2RlcmVxXygnLi4vYm9keS9Cb2R5Jyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgZW5naW5lLiBUaGUgb3B0aW9ucyBwYXJhbWV0ZXIgaXMgYW4gb2JqZWN0IHRoYXQgc3BlY2lmaWVzIGFueSBwcm9wZXJ0aWVzIHlvdSB3aXNoIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0cy5cbiAgICAgKiBBbGwgcHJvcGVydGllcyBoYXZlIGRlZmF1bHQgdmFsdWVzLCBhbmQgbWFueSBhcmUgcHJlLWNhbGN1bGF0ZWQgYXV0b21hdGljYWxseSBiYXNlZCBvbiBvdGhlciBwcm9wZXJ0aWVzLlxuICAgICAqIFNlZSB0aGUgcHJvcGVydGllcyBzZWN0aW9uIGJlbG93IGZvciBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB3aGF0IHlvdSBjYW4gcGFzcyB2aWEgdGhlIGBvcHRpb25zYCBvYmplY3QuXG4gICAgICogQG1ldGhvZCBjcmVhdGVcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAgICogQHJldHVybiB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKi9cbiAgICBFbmdpbmUuY3JlYXRlID0gZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucykge1xuICAgICAgICAvLyBvcHRpb25zIG1heSBiZSBwYXNzZWQgYXMgdGhlIGZpcnN0IChhbmQgb25seSkgYXJndW1lbnRcbiAgICAgICAgb3B0aW9ucyA9IENvbW1vbi5pc0VsZW1lbnQoZWxlbWVudCkgPyBvcHRpb25zIDogZWxlbWVudDtcbiAgICAgICAgZWxlbWVudCA9IENvbW1vbi5pc0VsZW1lbnQoZWxlbWVudCkgPyBlbGVtZW50IDogbnVsbDtcbiAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICAgICAgaWYgKGVsZW1lbnQgfHwgb3B0aW9ucy5yZW5kZXIpIHtcbiAgICAgICAgICAgIENvbW1vbi53YXJuKCdFbmdpbmUuY3JlYXRlOiBlbmdpbmUucmVuZGVyIGlzIGRlcHJlY2F0ZWQgKHNlZSBkb2NzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRlZmF1bHRzID0ge1xuICAgICAgICAgICAgcG9zaXRpb25JdGVyYXRpb25zOiA2LFxuICAgICAgICAgICAgdmVsb2NpdHlJdGVyYXRpb25zOiA0LFxuICAgICAgICAgICAgY29uc3RyYWludEl0ZXJhdGlvbnM6IDIsXG4gICAgICAgICAgICBlbmFibGVTbGVlcGluZzogZmFsc2UsXG4gICAgICAgICAgICBldmVudHM6IFtdLFxuICAgICAgICAgICAgcGx1Z2luOiB7fSxcbiAgICAgICAgICAgIHRpbWluZzoge1xuICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogMCxcbiAgICAgICAgICAgICAgICB0aW1lU2NhbGU6IDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBicm9hZHBoYXNlOiB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogR3JpZFxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBlbmdpbmUgPSBDb21tb24uZXh0ZW5kKGRlZmF1bHRzLCBvcHRpb25zKTtcblxuICAgICAgICAvLyBAZGVwcmVjYXRlZFxuICAgICAgICBpZiAoZWxlbWVudCB8fCBlbmdpbmUucmVuZGVyKSB7XG4gICAgICAgICAgICB2YXIgcmVuZGVyRGVmYXVsdHMgPSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudDogZWxlbWVudCxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiBSZW5kZXJcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGVuZ2luZS5yZW5kZXIgPSBDb21tb24uZXh0ZW5kKHJlbmRlckRlZmF1bHRzLCBlbmdpbmUucmVuZGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEBkZXByZWNhdGVkXG4gICAgICAgIGlmIChlbmdpbmUucmVuZGVyICYmIGVuZ2luZS5yZW5kZXIuY29udHJvbGxlcikge1xuICAgICAgICAgICAgZW5naW5lLnJlbmRlciA9IGVuZ2luZS5yZW5kZXIuY29udHJvbGxlci5jcmVhdGUoZW5naW5lLnJlbmRlcik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBAZGVwcmVjYXRlZFxuICAgICAgICBpZiAoZW5naW5lLnJlbmRlcikge1xuICAgICAgICAgICAgZW5naW5lLnJlbmRlci5lbmdpbmUgPSBlbmdpbmU7XG4gICAgICAgIH1cblxuICAgICAgICBlbmdpbmUud29ybGQgPSBvcHRpb25zLndvcmxkIHx8IFdvcmxkLmNyZWF0ZShlbmdpbmUud29ybGQpO1xuICAgICAgICBlbmdpbmUucGFpcnMgPSBQYWlycy5jcmVhdGUoKTtcbiAgICAgICAgZW5naW5lLmJyb2FkcGhhc2UgPSBlbmdpbmUuYnJvYWRwaGFzZS5jb250cm9sbGVyLmNyZWF0ZShlbmdpbmUuYnJvYWRwaGFzZSk7XG4gICAgICAgIGVuZ2luZS5tZXRyaWNzID0gZW5naW5lLm1ldHJpY3MgfHwgeyBleHRlbmRlZDogZmFsc2UgfTtcblxuXG4gICAgICAgIHJldHVybiBlbmdpbmU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIE1vdmVzIHRoZSBzaW11bGF0aW9uIGZvcndhcmQgaW4gdGltZSBieSBgZGVsdGFgIG1zLlxuICAgICAqIFRoZSBgY29ycmVjdGlvbmAgYXJndW1lbnQgaXMgYW4gb3B0aW9uYWwgYE51bWJlcmAgdGhhdCBzcGVjaWZpZXMgdGhlIHRpbWUgY29ycmVjdGlvbiBmYWN0b3IgdG8gYXBwbHkgdG8gdGhlIHVwZGF0ZS5cbiAgICAgKiBUaGlzIGNhbiBoZWxwIGltcHJvdmUgdGhlIGFjY3VyYWN5IG9mIHRoZSBzaW11bGF0aW9uIGluIGNhc2VzIHdoZXJlIGBkZWx0YWAgaXMgY2hhbmdpbmcgYmV0d2VlbiB1cGRhdGVzLlxuICAgICAqIFRoZSB2YWx1ZSBvZiBgY29ycmVjdGlvbmAgaXMgZGVmaW5lZCBhcyBgZGVsdGEgLyBsYXN0RGVsdGFgLCBpLmUuIHRoZSBwZXJjZW50YWdlIGNoYW5nZSBvZiBgZGVsdGFgIG92ZXIgdGhlIGxhc3Qgc3RlcC5cbiAgICAgKiBUaGVyZWZvcmUgdGhlIHZhbHVlIGlzIGFsd2F5cyBgMWAgKG5vIGNvcnJlY3Rpb24pIHdoZW4gYGRlbHRhYCBjb25zdGFudCAob3Igd2hlbiBubyBjb3JyZWN0aW9uIGlzIGRlc2lyZWQsIHdoaWNoIGlzIHRoZSBkZWZhdWx0KS5cbiAgICAgKiBTZWUgdGhlIHBhcGVyIG9uIDxhIGhyZWY9XCJodHRwOi8vbG9uZXNvY2submV0L2FydGljbGUvdmVybGV0Lmh0bWxcIj5UaW1lIENvcnJlY3RlZCBWZXJsZXQ8L2E+IGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAqXG4gICAgICogVHJpZ2dlcnMgYGJlZm9yZVVwZGF0ZWAgYW5kIGBhZnRlclVwZGF0ZWAgZXZlbnRzLlxuICAgICAqIFRyaWdnZXJzIGBjb2xsaXNpb25TdGFydGAsIGBjb2xsaXNpb25BY3RpdmVgIGFuZCBgY29sbGlzaW9uRW5kYCBldmVudHMuXG4gICAgICogQG1ldGhvZCB1cGRhdGVcbiAgICAgKiBAcGFyYW0ge2VuZ2luZX0gZW5naW5lXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtkZWx0YT0xNi42NjZdXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtjb3JyZWN0aW9uPTFdXG4gICAgICovXG4gICAgRW5naW5lLnVwZGF0ZSA9IGZ1bmN0aW9uKGVuZ2luZSwgZGVsdGEsIGNvcnJlY3Rpb24pIHtcbiAgICAgICAgZGVsdGEgPSBkZWx0YSB8fCAxMDAwIC8gNjA7XG4gICAgICAgIGNvcnJlY3Rpb24gPSBjb3JyZWN0aW9uIHx8IDE7XG5cbiAgICAgICAgdmFyIHdvcmxkID0gZW5naW5lLndvcmxkLFxuICAgICAgICAgICAgdGltaW5nID0gZW5naW5lLnRpbWluZyxcbiAgICAgICAgICAgIGJyb2FkcGhhc2UgPSBlbmdpbmUuYnJvYWRwaGFzZSxcbiAgICAgICAgICAgIGJyb2FkcGhhc2VQYWlycyA9IFtdLFxuICAgICAgICAgICAgaTtcblxuICAgICAgICAvLyBpbmNyZW1lbnQgdGltZXN0YW1wXG4gICAgICAgIHRpbWluZy50aW1lc3RhbXAgKz0gZGVsdGEgKiB0aW1pbmcudGltZVNjYWxlO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBhbiBldmVudCBvYmplY3RcbiAgICAgICAgdmFyIGV2ZW50ID0ge1xuICAgICAgICAgICAgdGltZXN0YW1wOiB0aW1pbmcudGltZXN0YW1wXG4gICAgICAgIH07XG5cbiAgICAgICAgRXZlbnRzLnRyaWdnZXIoZW5naW5lLCAnYmVmb3JlVXBkYXRlJywgZXZlbnQpO1xuXG4gICAgICAgIC8vIGdldCBsaXN0cyBvZiBhbGwgYm9kaWVzIGFuZCBjb25zdHJhaW50cywgbm8gbWF0dGVyIHdoYXQgY29tcG9zaXRlcyB0aGV5IGFyZSBpblxuICAgICAgICB2YXIgYWxsQm9kaWVzID0gQ29tcG9zaXRlLmFsbEJvZGllcyh3b3JsZCksXG4gICAgICAgICAgICBhbGxDb25zdHJhaW50cyA9IENvbXBvc2l0ZS5hbGxDb25zdHJhaW50cyh3b3JsZCk7XG5cblxuICAgICAgICAvLyBpZiBzbGVlcGluZyBlbmFibGVkLCBjYWxsIHRoZSBzbGVlcGluZyBjb250cm9sbGVyXG4gICAgICAgIGlmIChlbmdpbmUuZW5hYmxlU2xlZXBpbmcpXG4gICAgICAgICAgICBTbGVlcGluZy51cGRhdGUoYWxsQm9kaWVzLCB0aW1pbmcudGltZVNjYWxlKTtcblxuICAgICAgICAvLyBhcHBsaWVzIGdyYXZpdHkgdG8gYWxsIGJvZGllc1xuICAgICAgICBFbmdpbmUuX2JvZGllc0FwcGx5R3Jhdml0eShhbGxCb2RpZXMsIHdvcmxkLmdyYXZpdHkpO1xuXG4gICAgICAgIC8vIHVwZGF0ZSBhbGwgYm9keSBwb3NpdGlvbiBhbmQgcm90YXRpb24gYnkgaW50ZWdyYXRpb25cbiAgICAgICAgRW5naW5lLl9ib2RpZXNVcGRhdGUoYWxsQm9kaWVzLCBkZWx0YSwgdGltaW5nLnRpbWVTY2FsZSwgY29ycmVjdGlvbiwgd29ybGQuYm91bmRzKTtcblxuICAgICAgICAvLyB1cGRhdGUgYWxsIGNvbnN0cmFpbnRzIChmaXJzdCBwYXNzKVxuICAgICAgICBDb25zdHJhaW50LnByZVNvbHZlQWxsKGFsbEJvZGllcyk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBlbmdpbmUuY29uc3RyYWludEl0ZXJhdGlvbnM7IGkrKykge1xuICAgICAgICAgICAgQ29uc3RyYWludC5zb2x2ZUFsbChhbGxDb25zdHJhaW50cywgdGltaW5nLnRpbWVTY2FsZSk7XG4gICAgICAgIH1cbiAgICAgICAgQ29uc3RyYWludC5wb3N0U29sdmVBbGwoYWxsQm9kaWVzKTtcblxuICAgICAgICAvLyBicm9hZHBoYXNlIHBhc3M6IGZpbmQgcG90ZW50aWFsIGNvbGxpc2lvbiBwYWlyc1xuICAgICAgICBpZiAoYnJvYWRwaGFzZS5jb250cm9sbGVyKSB7XG4gICAgICAgICAgICAvLyBpZiB3b3JsZCBpcyBkaXJ0eSwgd2UgbXVzdCBmbHVzaCB0aGUgd2hvbGUgZ3JpZFxuICAgICAgICAgICAgaWYgKHdvcmxkLmlzTW9kaWZpZWQpXG4gICAgICAgICAgICAgICAgYnJvYWRwaGFzZS5jb250cm9sbGVyLmNsZWFyKGJyb2FkcGhhc2UpO1xuXG4gICAgICAgICAgICAvLyB1cGRhdGUgdGhlIGdyaWQgYnVja2V0cyBiYXNlZCBvbiBjdXJyZW50IGJvZGllc1xuICAgICAgICAgICAgYnJvYWRwaGFzZS5jb250cm9sbGVyLnVwZGF0ZShicm9hZHBoYXNlLCBhbGxCb2RpZXMsIGVuZ2luZSwgd29ybGQuaXNNb2RpZmllZCk7XG4gICAgICAgICAgICBicm9hZHBoYXNlUGFpcnMgPSBicm9hZHBoYXNlLnBhaXJzTGlzdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGlmIG5vIGJyb2FkcGhhc2Ugc2V0LCB3ZSBqdXN0IHBhc3MgYWxsIGJvZGllc1xuICAgICAgICAgICAgYnJvYWRwaGFzZVBhaXJzID0gYWxsQm9kaWVzO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY2xlYXIgYWxsIGNvbXBvc2l0ZSBtb2RpZmllZCBmbGFnc1xuICAgICAgICBpZiAod29ybGQuaXNNb2RpZmllZCkge1xuICAgICAgICAgICAgQ29tcG9zaXRlLnNldE1vZGlmaWVkKHdvcmxkLCBmYWxzZSwgZmFsc2UsIHRydWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gbmFycm93cGhhc2UgcGFzczogZmluZCBhY3R1YWwgY29sbGlzaW9ucywgdGhlbiBjcmVhdGUgb3IgdXBkYXRlIGNvbGxpc2lvbiBwYWlyc1xuICAgICAgICB2YXIgY29sbGlzaW9ucyA9IGJyb2FkcGhhc2UuZGV0ZWN0b3IoYnJvYWRwaGFzZVBhaXJzLCBlbmdpbmUpO1xuXG4gICAgICAgIC8vIHVwZGF0ZSBjb2xsaXNpb24gcGFpcnNcbiAgICAgICAgdmFyIHBhaXJzID0gZW5naW5lLnBhaXJzLFxuICAgICAgICAgICAgdGltZXN0YW1wID0gdGltaW5nLnRpbWVzdGFtcDtcbiAgICAgICAgUGFpcnMudXBkYXRlKHBhaXJzLCBjb2xsaXNpb25zLCB0aW1lc3RhbXApO1xuICAgICAgICBQYWlycy5yZW1vdmVPbGQocGFpcnMsIHRpbWVzdGFtcCk7XG5cbiAgICAgICAgLy8gd2FrZSB1cCBib2RpZXMgaW52b2x2ZWQgaW4gY29sbGlzaW9uc1xuICAgICAgICBpZiAoZW5naW5lLmVuYWJsZVNsZWVwaW5nKVxuICAgICAgICAgICAgU2xlZXBpbmcuYWZ0ZXJDb2xsaXNpb25zKHBhaXJzLmxpc3QsIHRpbWluZy50aW1lU2NhbGUpO1xuXG4gICAgICAgIC8vIHRyaWdnZXIgY29sbGlzaW9uIGV2ZW50c1xuICAgICAgICBpZiAocGFpcnMuY29sbGlzaW9uU3RhcnQubGVuZ3RoID4gMClcbiAgICAgICAgICAgIEV2ZW50cy50cmlnZ2VyKGVuZ2luZSwgJ2NvbGxpc2lvblN0YXJ0JywgeyBwYWlyczogcGFpcnMuY29sbGlzaW9uU3RhcnQgfSk7XG5cbiAgICAgICAgLy8gaXRlcmF0aXZlbHkgcmVzb2x2ZSBwb3NpdGlvbiBiZXR3ZWVuIGNvbGxpc2lvbnNcbiAgICAgICAgUmVzb2x2ZXIucHJlU29sdmVQb3NpdGlvbihwYWlycy5saXN0KTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGVuZ2luZS5wb3NpdGlvbkl0ZXJhdGlvbnM7IGkrKykge1xuICAgICAgICAgICAgUmVzb2x2ZXIuc29sdmVQb3NpdGlvbihwYWlycy5saXN0LCB0aW1pbmcudGltZVNjYWxlKTtcbiAgICAgICAgfVxuICAgICAgICBSZXNvbHZlci5wb3N0U29sdmVQb3NpdGlvbihhbGxCb2RpZXMpO1xuXG4gICAgICAgIC8vIHVwZGF0ZSBhbGwgY29uc3RyYWludHMgKHNlY29uZCBwYXNzKVxuICAgICAgICBDb25zdHJhaW50LnByZVNvbHZlQWxsKGFsbEJvZGllcyk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBlbmdpbmUuY29uc3RyYWludEl0ZXJhdGlvbnM7IGkrKykge1xuICAgICAgICAgICAgQ29uc3RyYWludC5zb2x2ZUFsbChhbGxDb25zdHJhaW50cywgdGltaW5nLnRpbWVTY2FsZSk7XG4gICAgICAgIH1cbiAgICAgICAgQ29uc3RyYWludC5wb3N0U29sdmVBbGwoYWxsQm9kaWVzKTtcblxuICAgICAgICAvLyBpdGVyYXRpdmVseSByZXNvbHZlIHZlbG9jaXR5IGJldHdlZW4gY29sbGlzaW9uc1xuICAgICAgICBSZXNvbHZlci5wcmVTb2x2ZVZlbG9jaXR5KHBhaXJzLmxpc3QpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZW5naW5lLnZlbG9jaXR5SXRlcmF0aW9uczsgaSsrKSB7XG4gICAgICAgICAgICBSZXNvbHZlci5zb2x2ZVZlbG9jaXR5KHBhaXJzLmxpc3QsIHRpbWluZy50aW1lU2NhbGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gdHJpZ2dlciBjb2xsaXNpb24gZXZlbnRzXG4gICAgICAgIGlmIChwYWlycy5jb2xsaXNpb25BY3RpdmUubGVuZ3RoID4gMClcbiAgICAgICAgICAgIEV2ZW50cy50cmlnZ2VyKGVuZ2luZSwgJ2NvbGxpc2lvbkFjdGl2ZScsIHsgcGFpcnM6IHBhaXJzLmNvbGxpc2lvbkFjdGl2ZSB9KTtcblxuICAgICAgICBpZiAocGFpcnMuY29sbGlzaW9uRW5kLmxlbmd0aCA+IDApXG4gICAgICAgICAgICBFdmVudHMudHJpZ2dlcihlbmdpbmUsICdjb2xsaXNpb25FbmQnLCB7IHBhaXJzOiBwYWlycy5jb2xsaXNpb25FbmQgfSk7XG5cblxuICAgICAgICAvLyBjbGVhciBmb3JjZSBidWZmZXJzXG4gICAgICAgIEVuZ2luZS5fYm9kaWVzQ2xlYXJGb3JjZXMoYWxsQm9kaWVzKTtcblxuICAgICAgICBFdmVudHMudHJpZ2dlcihlbmdpbmUsICdhZnRlclVwZGF0ZScsIGV2ZW50KTtcblxuICAgICAgICByZXR1cm4gZW5naW5lO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogTWVyZ2VzIHR3byBlbmdpbmVzIGJ5IGtlZXBpbmcgdGhlIGNvbmZpZ3VyYXRpb24gb2YgYGVuZ2luZUFgIGJ1dCByZXBsYWNpbmcgdGhlIHdvcmxkIHdpdGggdGhlIG9uZSBmcm9tIGBlbmdpbmVCYC5cbiAgICAgKiBAbWV0aG9kIG1lcmdlXG4gICAgICogQHBhcmFtIHtlbmdpbmV9IGVuZ2luZUFcbiAgICAgKiBAcGFyYW0ge2VuZ2luZX0gZW5naW5lQlxuICAgICAqL1xuICAgIEVuZ2luZS5tZXJnZSA9IGZ1bmN0aW9uKGVuZ2luZUEsIGVuZ2luZUIpIHtcbiAgICAgICAgQ29tbW9uLmV4dGVuZChlbmdpbmVBLCBlbmdpbmVCKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChlbmdpbmVCLndvcmxkKSB7XG4gICAgICAgICAgICBlbmdpbmVBLndvcmxkID0gZW5naW5lQi53b3JsZDtcblxuICAgICAgICAgICAgRW5naW5lLmNsZWFyKGVuZ2luZUEpO1xuXG4gICAgICAgICAgICB2YXIgYm9kaWVzID0gQ29tcG9zaXRlLmFsbEJvZGllcyhlbmdpbmVBLndvcmxkKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXTtcbiAgICAgICAgICAgICAgICBTbGVlcGluZy5zZXQoYm9keSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGJvZHkuaWQgPSBDb21tb24ubmV4dElkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2xlYXJzIHRoZSBlbmdpbmUgaW5jbHVkaW5nIHRoZSB3b3JsZCwgcGFpcnMgYW5kIGJyb2FkcGhhc2UuXG4gICAgICogQG1ldGhvZCBjbGVhclxuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKi9cbiAgICBFbmdpbmUuY2xlYXIgPSBmdW5jdGlvbihlbmdpbmUpIHtcbiAgICAgICAgdmFyIHdvcmxkID0gZW5naW5lLndvcmxkO1xuICAgICAgICBcbiAgICAgICAgUGFpcnMuY2xlYXIoZW5naW5lLnBhaXJzKTtcblxuICAgICAgICB2YXIgYnJvYWRwaGFzZSA9IGVuZ2luZS5icm9hZHBoYXNlO1xuICAgICAgICBpZiAoYnJvYWRwaGFzZS5jb250cm9sbGVyKSB7XG4gICAgICAgICAgICB2YXIgYm9kaWVzID0gQ29tcG9zaXRlLmFsbEJvZGllcyh3b3JsZCk7XG4gICAgICAgICAgICBicm9hZHBoYXNlLmNvbnRyb2xsZXIuY2xlYXIoYnJvYWRwaGFzZSk7XG4gICAgICAgICAgICBicm9hZHBoYXNlLmNvbnRyb2xsZXIudXBkYXRlKGJyb2FkcGhhc2UsIGJvZGllcywgZW5naW5lLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBaZXJvZXMgdGhlIGBib2R5LmZvcmNlYCBhbmQgYGJvZHkudG9ycXVlYCBmb3JjZSBidWZmZXJzLlxuICAgICAqIEBtZXRob2QgX2JvZGllc0NsZWFyRm9yY2VzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICovXG4gICAgRW5naW5lLl9ib2RpZXNDbGVhckZvcmNlcyA9IGZ1bmN0aW9uKGJvZGllcykge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV07XG5cbiAgICAgICAgICAgIC8vIHJlc2V0IGZvcmNlIGJ1ZmZlcnNcbiAgICAgICAgICAgIGJvZHkuZm9yY2UueCA9IDA7XG4gICAgICAgICAgICBib2R5LmZvcmNlLnkgPSAwO1xuICAgICAgICAgICAgYm9keS50b3JxdWUgPSAwO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFwcGx5cyBhIG1hc3MgZGVwZW5kYW50IGZvcmNlIHRvIGFsbCBnaXZlbiBib2RpZXMuXG4gICAgICogQG1ldGhvZCBfYm9kaWVzQXBwbHlHcmF2aXR5XG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IGdyYXZpdHlcbiAgICAgKi9cbiAgICBFbmdpbmUuX2JvZGllc0FwcGx5R3Jhdml0eSA9IGZ1bmN0aW9uKGJvZGllcywgZ3Jhdml0eSkge1xuICAgICAgICB2YXIgZ3Jhdml0eVNjYWxlID0gdHlwZW9mIGdyYXZpdHkuc2NhbGUgIT09ICd1bmRlZmluZWQnID8gZ3Jhdml0eS5zY2FsZSA6IDAuMDAxO1xuXG4gICAgICAgIGlmICgoZ3Jhdml0eS54ID09PSAwICYmIGdyYXZpdHkueSA9PT0gMCkgfHwgZ3Jhdml0eVNjYWxlID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgaWYgKGJvZHkuaXNTdGF0aWMgfHwgYm9keS5pc1NsZWVwaW5nKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAvLyBhcHBseSBncmF2aXR5XG4gICAgICAgICAgICBib2R5LmZvcmNlLnkgKz0gYm9keS5tYXNzICogZ3Jhdml0eS55ICogZ3Jhdml0eVNjYWxlO1xuICAgICAgICAgICAgYm9keS5mb3JjZS54ICs9IGJvZHkubWFzcyAqIGdyYXZpdHkueCAqIGdyYXZpdHlTY2FsZTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBcHBseXMgYEJvZHkudXBkYXRlYCB0byBhbGwgZ2l2ZW4gYGJvZGllc2AuXG4gICAgICogQG1ldGhvZCBfYm9kaWVzVXBkYXRlXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGRlbHRhVGltZSBcbiAgICAgKiBUaGUgYW1vdW50IG9mIHRpbWUgZWxhcHNlZCBiZXR3ZWVuIHVwZGF0ZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVNjYWxlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNvcnJlY3Rpb24gXG4gICAgICogVGhlIFZlcmxldCBjb3JyZWN0aW9uIGZhY3RvciAoZGVsdGFUaW1lIC8gbGFzdERlbHRhVGltZSlcbiAgICAgKiBAcGFyYW0ge2JvdW5kc30gd29ybGRCb3VuZHNcbiAgICAgKi9cbiAgICBFbmdpbmUuX2JvZGllc1VwZGF0ZSA9IGZ1bmN0aW9uKGJvZGllcywgZGVsdGFUaW1lLCB0aW1lU2NhbGUsIGNvcnJlY3Rpb24sIHdvcmxkQm91bmRzKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgaWYgKGJvZHkuaXNTdGF0aWMgfHwgYm9keS5pc1NsZWVwaW5nKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBCb2R5LnVwZGF0ZShib2R5LCBkZWx0YVRpbWUsIHRpbWVTY2FsZSwgY29ycmVjdGlvbik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQW4gYWxpYXMgZm9yIGBSdW5uZXIucnVuYCwgc2VlIGBNYXR0ZXIuUnVubmVyYCBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICAgKiBAbWV0aG9kIHJ1blxuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQganVzdCBiZWZvcmUgYW4gdXBkYXRlXG4gICAgKlxuICAgICogQGV2ZW50IGJlZm9yZVVwZGF0ZVxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGV2ZW50LnRpbWVzdGFtcCBUaGUgZW5naW5lLnRpbWluZy50aW1lc3RhbXAgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgYWZ0ZXIgZW5naW5lIHVwZGF0ZSBhbmQgYWxsIGNvbGxpc2lvbiBldmVudHNcbiAgICAqXG4gICAgKiBAZXZlbnQgYWZ0ZXJVcGRhdGVcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBldmVudC50aW1lc3RhbXAgVGhlIGVuZ2luZS50aW1pbmcudGltZXN0YW1wIG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50LnNvdXJjZSBUaGUgc291cmNlIG9iamVjdCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5uYW1lIFRoZSBuYW1lIG9mIHRoZSBldmVudFxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIGFmdGVyIGVuZ2luZSB1cGRhdGUsIHByb3ZpZGVzIGEgbGlzdCBvZiBhbGwgcGFpcnMgdGhhdCBoYXZlIHN0YXJ0ZWQgdG8gY29sbGlkZSBpbiB0aGUgY3VycmVudCB0aWNrIChpZiBhbnkpXG4gICAgKlxuICAgICogQGV2ZW50IGNvbGxpc2lvblN0YXJ0XG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge30gZXZlbnQucGFpcnMgTGlzdCBvZiBhZmZlY3RlZCBwYWlyc1xuICAgICogQHBhcmFtIHtudW1iZXJ9IGV2ZW50LnRpbWVzdGFtcCBUaGUgZW5naW5lLnRpbWluZy50aW1lc3RhbXAgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgYWZ0ZXIgZW5naW5lIHVwZGF0ZSwgcHJvdmlkZXMgYSBsaXN0IG9mIGFsbCBwYWlycyB0aGF0IGFyZSBjb2xsaWRpbmcgaW4gdGhlIGN1cnJlbnQgdGljayAoaWYgYW55KVxuICAgICpcbiAgICAqIEBldmVudCBjb2xsaXNpb25BY3RpdmVcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7fSBldmVudC5wYWlycyBMaXN0IG9mIGFmZmVjdGVkIHBhaXJzXG4gICAgKiBAcGFyYW0ge251bWJlcn0gZXZlbnQudGltZXN0YW1wIFRoZSBlbmdpbmUudGltaW5nLnRpbWVzdGFtcCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCBhZnRlciBlbmdpbmUgdXBkYXRlLCBwcm92aWRlcyBhIGxpc3Qgb2YgYWxsIHBhaXJzIHRoYXQgaGF2ZSBlbmRlZCBjb2xsaXNpb24gaW4gdGhlIGN1cnJlbnQgdGljayAoaWYgYW55KVxuICAgICpcbiAgICAqIEBldmVudCBjb2xsaXNpb25FbmRcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7fSBldmVudC5wYWlycyBMaXN0IG9mIGFmZmVjdGVkIHBhaXJzXG4gICAgKiBAcGFyYW0ge251bWJlcn0gZXZlbnQudGltZXN0YW1wIFRoZSBlbmdpbmUudGltaW5nLnRpbWVzdGFtcCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLypcbiAgICAqXG4gICAgKiAgUHJvcGVydGllcyBEb2N1bWVudGF0aW9uXG4gICAgKlxuICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBpbnRlZ2VyIGBOdW1iZXJgIHRoYXQgc3BlY2lmaWVzIHRoZSBudW1iZXIgb2YgcG9zaXRpb24gaXRlcmF0aW9ucyB0byBwZXJmb3JtIGVhY2ggdXBkYXRlLlxuICAgICAqIFRoZSBoaWdoZXIgdGhlIHZhbHVlLCB0aGUgaGlnaGVyIHF1YWxpdHkgdGhlIHNpbXVsYXRpb24gd2lsbCBiZSBhdCB0aGUgZXhwZW5zZSBvZiBwZXJmb3JtYW5jZS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBwb3NpdGlvbkl0ZXJhdGlvbnNcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCA2XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBpbnRlZ2VyIGBOdW1iZXJgIHRoYXQgc3BlY2lmaWVzIHRoZSBudW1iZXIgb2YgdmVsb2NpdHkgaXRlcmF0aW9ucyB0byBwZXJmb3JtIGVhY2ggdXBkYXRlLlxuICAgICAqIFRoZSBoaWdoZXIgdGhlIHZhbHVlLCB0aGUgaGlnaGVyIHF1YWxpdHkgdGhlIHNpbXVsYXRpb24gd2lsbCBiZSBhdCB0aGUgZXhwZW5zZSBvZiBwZXJmb3JtYW5jZS5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB2ZWxvY2l0eUl0ZXJhdGlvbnNcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCA0XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBbiBpbnRlZ2VyIGBOdW1iZXJgIHRoYXQgc3BlY2lmaWVzIHRoZSBudW1iZXIgb2YgY29uc3RyYWludCBpdGVyYXRpb25zIHRvIHBlcmZvcm0gZWFjaCB1cGRhdGUuXG4gICAgICogVGhlIGhpZ2hlciB0aGUgdmFsdWUsIHRoZSBoaWdoZXIgcXVhbGl0eSB0aGUgc2ltdWxhdGlvbiB3aWxsIGJlIGF0IHRoZSBleHBlbnNlIG9mIHBlcmZvcm1hbmNlLlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIG9mIGAyYCBpcyB1c3VhbGx5IHZlcnkgYWRlcXVhdGUuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgY29uc3RyYWludEl0ZXJhdGlvbnNcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAyXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGZsYWcgdGhhdCBzcGVjaWZpZXMgd2hldGhlciB0aGUgZW5naW5lIHNob3VsZCBhbGxvdyBzbGVlcGluZyB2aWEgdGhlIGBNYXR0ZXIuU2xlZXBpbmdgIG1vZHVsZS5cbiAgICAgKiBTbGVlcGluZyBjYW4gaW1wcm92ZSBzdGFiaWxpdHkgYW5kIHBlcmZvcm1hbmNlLCBidXQgb2Z0ZW4gYXQgdGhlIGV4cGVuc2Ugb2YgYWNjdXJhY3kuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZW5hYmxlU2xlZXBpbmdcbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGBPYmplY3RgIGNvbnRhaW5pbmcgcHJvcGVydGllcyByZWdhcmRpbmcgdGhlIHRpbWluZyBzeXN0ZW1zIG9mIHRoZSBlbmdpbmUuIFxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHRpbWluZ1xuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IHNwZWNpZmllcyB0aGUgZ2xvYmFsIHNjYWxpbmcgZmFjdG9yIG9mIHRpbWUgZm9yIGFsbCBib2RpZXMuXG4gICAgICogQSB2YWx1ZSBvZiBgMGAgZnJlZXplcyB0aGUgc2ltdWxhdGlvbi5cbiAgICAgKiBBIHZhbHVlIG9mIGAwLjFgIGdpdmVzIGEgc2xvdy1tb3Rpb24gZWZmZWN0LlxuICAgICAqIEEgdmFsdWUgb2YgYDEuMmAgZ2l2ZXMgYSBzcGVlZC11cCBlZmZlY3QuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgdGltaW5nLnRpbWVTY2FsZVxuICAgICAqIEB0eXBlIG51bWJlclxuICAgICAqIEBkZWZhdWx0IDFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYE51bWJlcmAgdGhhdCBzcGVjaWZpZXMgdGhlIGN1cnJlbnQgc2ltdWxhdGlvbi10aW1lIGluIG1pbGxpc2Vjb25kcyBzdGFydGluZyBmcm9tIGAwYC4gXG4gICAgICogSXQgaXMgaW5jcmVtZW50ZWQgb24gZXZlcnkgYEVuZ2luZS51cGRhdGVgIGJ5IHRoZSBnaXZlbiBgZGVsdGFgIGFyZ3VtZW50LiBcbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB0aW1pbmcudGltZXN0YW1wXG4gICAgICogQHR5cGUgbnVtYmVyXG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gaW5zdGFuY2Ugb2YgYSBgUmVuZGVyYCBjb250cm9sbGVyLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBhIGBNYXR0ZXIuUmVuZGVyYCBpbnN0YW5jZSBjcmVhdGVkIGJ5IGBFbmdpbmUuY3JlYXRlYC5cbiAgICAgKiBPbmUgbWF5IGFsc28gZGV2ZWxvcCBhIGN1c3RvbSByZW5kZXJlciBtb2R1bGUgYmFzZWQgb24gYE1hdHRlci5SZW5kZXJgIGFuZCBwYXNzIGFuIGluc3RhbmNlIG9mIGl0IHRvIGBFbmdpbmUuY3JlYXRlYCB2aWEgYG9wdGlvbnMucmVuZGVyYC5cbiAgICAgKlxuICAgICAqIEEgbWluaW1hbCBjdXN0b20gcmVuZGVyZXIgb2JqZWN0IG11c3QgZGVmaW5lIGF0IGxlYXN0IHRocmVlIGZ1bmN0aW9uczogYGNyZWF0ZWAsIGBjbGVhcmAgYW5kIGB3b3JsZGAgKHNlZSBgTWF0dGVyLlJlbmRlcmApLlxuICAgICAqIEl0IGlzIGFsc28gcG9zc2libGUgdG8gaW5zdGVhZCBwYXNzIHRoZSBfbW9kdWxlXyByZWZlcmVuY2UgdmlhIGBvcHRpb25zLnJlbmRlci5jb250cm9sbGVyYCBhbmQgYEVuZ2luZS5jcmVhdGVgIHdpbGwgaW5zdGFudGlhdGUgb25lIGZvciB5b3UuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgcmVuZGVyXG4gICAgICogQHR5cGUgcmVuZGVyXG4gICAgICogQGRlcHJlY2F0ZWQgc2VlIERlbW8uanMgZm9yIGFuIGV4YW1wbGUgb2YgY3JlYXRpbmcgYSByZW5kZXJlclxuICAgICAqIEBkZWZhdWx0IGEgTWF0dGVyLlJlbmRlciBpbnN0YW5jZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQW4gaW5zdGFuY2Ugb2YgYSBicm9hZHBoYXNlIGNvbnRyb2xsZXIuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGEgYE1hdHRlci5HcmlkYCBpbnN0YW5jZSBjcmVhdGVkIGJ5IGBFbmdpbmUuY3JlYXRlYC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBicm9hZHBoYXNlXG4gICAgICogQHR5cGUgZ3JpZFxuICAgICAqIEBkZWZhdWx0IGEgTWF0dGVyLkdyaWQgaW5zdGFuY2VcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYFdvcmxkYCBjb21wb3NpdGUgb2JqZWN0IHRoYXQgd2lsbCBjb250YWluIGFsbCBzaW11bGF0ZWQgYm9kaWVzIGFuZCBjb25zdHJhaW50cy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB3b3JsZFxuICAgICAqIEB0eXBlIHdvcmxkXG4gICAgICogQGRlZmF1bHQgYSBNYXR0ZXIuV29ybGQgaW5zdGFuY2VcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIG9iamVjdCByZXNlcnZlZCBmb3Igc3RvcmluZyBwbHVnaW4tc3BlY2lmaWMgcHJvcGVydGllcy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBwbHVnaW5cbiAgICAgKiBAdHlwZSB7fVxuICAgICAqL1xuXG59KSgpO1xuXG59LHtcIi4uL2JvZHkvQm9keVwiOjEsXCIuLi9ib2R5L0NvbXBvc2l0ZVwiOjIsXCIuLi9ib2R5L1dvcmxkXCI6MyxcIi4uL2NvbGxpc2lvbi9HcmlkXCI6NixcIi4uL2NvbGxpc2lvbi9QYWlyc1wiOjgsXCIuLi9jb2xsaXNpb24vUmVzb2x2ZXJcIjoxMCxcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiOjEyLFwiLi4vcmVuZGVyL1JlbmRlclwiOjMxLFwiLi9Db21tb25cIjoxNCxcIi4vRXZlbnRzXCI6MTYsXCIuL01ldHJpY3NcIjoxOCxcIi4vU2xlZXBpbmdcIjoyMn1dLDE2OltmdW5jdGlvbihfZGVyZXFfLG1vZHVsZSxleHBvcnRzKXtcbi8qKlxuKiBUaGUgYE1hdHRlci5FdmVudHNgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIHRvIGZpcmUgYW5kIGxpc3RlbiB0byBldmVudHMgb24gb3RoZXIgb2JqZWN0cy5cbipcbiogU2VlIHRoZSBpbmNsdWRlZCB1c2FnZSBbZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKS5cbipcbiogQGNsYXNzIEV2ZW50c1xuKi9cblxudmFyIEV2ZW50cyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50cztcblxudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4vQ29tbW9uJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZXMgYSBjYWxsYmFjayBmdW5jdGlvbiB0byB0aGUgZ2l2ZW4gb2JqZWN0J3MgYGV2ZW50TmFtZWAuXG4gICAgICogQG1ldGhvZCBvblxuICAgICAqIEBwYXJhbSB7fSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnROYW1lc1xuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICovXG4gICAgRXZlbnRzLm9uID0gZnVuY3Rpb24ob2JqZWN0LCBldmVudE5hbWVzLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgbmFtZXMgPSBldmVudE5hbWVzLnNwbGl0KCcgJyksXG4gICAgICAgICAgICBuYW1lO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIG5hbWUgPSBuYW1lc1tpXTtcbiAgICAgICAgICAgIG9iamVjdC5ldmVudHMgPSBvYmplY3QuZXZlbnRzIHx8IHt9O1xuICAgICAgICAgICAgb2JqZWN0LmV2ZW50c1tuYW1lXSA9IG9iamVjdC5ldmVudHNbbmFtZV0gfHwgW107XG4gICAgICAgICAgICBvYmplY3QuZXZlbnRzW25hbWVdLnB1c2goY2FsbGJhY2spO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIHRoZSBnaXZlbiBldmVudCBjYWxsYmFjay4gSWYgbm8gY2FsbGJhY2ssIGNsZWFycyBhbGwgY2FsbGJhY2tzIGluIGBldmVudE5hbWVzYC4gSWYgbm8gYGV2ZW50TmFtZXNgLCBjbGVhcnMgYWxsIGV2ZW50cy5cbiAgICAgKiBAbWV0aG9kIG9mZlxuICAgICAqIEBwYXJhbSB7fSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnROYW1lc1xuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gICAgICovXG4gICAgRXZlbnRzLm9mZiA9IGZ1bmN0aW9uKG9iamVjdCwgZXZlbnROYW1lcywgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKCFldmVudE5hbWVzKSB7XG4gICAgICAgICAgICBvYmplY3QuZXZlbnRzID0ge307XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBoYW5kbGUgRXZlbnRzLm9mZihvYmplY3QsIGNhbGxiYWNrKVxuICAgICAgICBpZiAodHlwZW9mIGV2ZW50TmFtZXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrID0gZXZlbnROYW1lcztcbiAgICAgICAgICAgIGV2ZW50TmFtZXMgPSBDb21tb24ua2V5cyhvYmplY3QuZXZlbnRzKS5qb2luKCcgJyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbmFtZXMgPSBldmVudE5hbWVzLnNwbGl0KCcgJyk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IG9iamVjdC5ldmVudHNbbmFtZXNbaV1dLFxuICAgICAgICAgICAgICAgIG5ld0NhbGxiYWNrcyA9IFtdO1xuXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2sgJiYgY2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBjYWxsYmFja3MubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tqXSAhPT0gY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDYWxsYmFja3MucHVzaChjYWxsYmFja3Nbal0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgb2JqZWN0LmV2ZW50c1tuYW1lc1tpXV0gPSBuZXdDYWxsYmFja3M7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRmlyZXMgYWxsIHRoZSBjYWxsYmFja3Mgc3Vic2NyaWJlZCB0byB0aGUgZ2l2ZW4gb2JqZWN0J3MgYGV2ZW50TmFtZWAsIGluIHRoZSBvcmRlciB0aGV5IHN1YnNjcmliZWQsIGlmIGFueS5cbiAgICAgKiBAbWV0aG9kIHRyaWdnZXJcbiAgICAgKiBAcGFyYW0ge30gb2JqZWN0XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50TmFtZXNcbiAgICAgKiBAcGFyYW0ge30gZXZlbnRcbiAgICAgKi9cbiAgICBFdmVudHMudHJpZ2dlciA9IGZ1bmN0aW9uKG9iamVjdCwgZXZlbnROYW1lcywgZXZlbnQpIHtcbiAgICAgICAgdmFyIG5hbWVzLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIGNhbGxiYWNrcyxcbiAgICAgICAgICAgIGV2ZW50Q2xvbmU7XG5cbiAgICAgICAgaWYgKG9iamVjdC5ldmVudHMpIHtcbiAgICAgICAgICAgIGlmICghZXZlbnQpXG4gICAgICAgICAgICAgICAgZXZlbnQgPSB7fTtcblxuICAgICAgICAgICAgbmFtZXMgPSBldmVudE5hbWVzLnNwbGl0KCcgJyk7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBuYW1lID0gbmFtZXNbaV07XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzID0gb2JqZWN0LmV2ZW50c1tuYW1lXTtcblxuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFja3MpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRDbG9uZSA9IENvbW1vbi5jbG9uZShldmVudCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBldmVudENsb25lLm5hbWUgPSBuYW1lO1xuICAgICAgICAgICAgICAgICAgICBldmVudENsb25lLnNvdXJjZSA9IG9iamVjdDtcblxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNhbGxiYWNrcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tzW2pdLmFwcGx5KG9iamVjdCwgW2V2ZW50Q2xvbmVdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbn0pKCk7XG5cbn0se1wiLi9Db21tb25cIjoxNH1dLDE3OltmdW5jdGlvbihfZGVyZXFfLG1vZHVsZSxleHBvcnRzKXtcbi8qKlxuKiBUaGUgYE1hdHRlcmAgbW9kdWxlIGlzIHRoZSB0b3AgbGV2ZWwgbmFtZXNwYWNlLiBJdCBhbHNvIGluY2x1ZGVzIGEgZnVuY3Rpb24gZm9yIGluc3RhbGxpbmcgcGx1Z2lucyBvbiB0b3Agb2YgdGhlIGxpYnJhcnkuXG4qXG4qIEBjbGFzcyBNYXR0ZXJcbiovXG5cbnZhciBNYXR0ZXIgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXR0ZXI7XG5cbnZhciBQbHVnaW4gPSBfZGVyZXFfKCcuL1BsdWdpbicpO1xudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4vQ29tbW9uJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIFRoZSBsaWJyYXJ5IG5hbWUuXG4gICAgICogQHByb3BlcnR5IG5hbWVcbiAgICAgKiBAcmVhZE9ubHlcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIE1hdHRlci5uYW1lID0gJ21hdHRlci1qcyc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbGlicmFyeSB2ZXJzaW9uLlxuICAgICAqIEBwcm9wZXJ0eSB2ZXJzaW9uXG4gICAgICogQHJlYWRPbmx5XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICBNYXR0ZXIudmVyc2lvbiA9ICcwLjE0LjInO1xuXG4gICAgLyoqXG4gICAgICogQSBsaXN0IG9mIHBsdWdpbiBkZXBlbmRlbmNpZXMgdG8gYmUgaW5zdGFsbGVkLiBUaGVzZSBhcmUgbm9ybWFsbHkgc2V0IGFuZCBpbnN0YWxsZWQgdGhyb3VnaCBgTWF0dGVyLnVzZWAuXG4gICAgICogQWx0ZXJuYXRpdmVseSB5b3UgbWF5IHNldCBgTWF0dGVyLnVzZXNgIG1hbnVhbGx5IGFuZCBpbnN0YWxsIHRoZW0gYnkgY2FsbGluZyBgUGx1Z2luLnVzZShNYXR0ZXIpYC5cbiAgICAgKiBAcHJvcGVydHkgdXNlc1xuICAgICAqIEB0eXBlIHtBcnJheX1cbiAgICAgKi9cbiAgICBNYXR0ZXIudXNlcyA9IFtdO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHBsdWdpbnMgdGhhdCBoYXZlIGJlZW4gaW5zdGFsbGVkIHRocm91Z2ggYE1hdHRlci5QbHVnaW4uaW5zdGFsbGAuIFJlYWQgb25seS5cbiAgICAgKiBAcHJvcGVydHkgdXNlZFxuICAgICAqIEByZWFkT25seVxuICAgICAqIEB0eXBlIHtBcnJheX1cbiAgICAgKi9cbiAgICBNYXR0ZXIudXNlZCA9IFtdO1xuXG4gICAgLyoqXG4gICAgICogSW5zdGFsbHMgdGhlIGdpdmVuIHBsdWdpbnMgb24gdGhlIGBNYXR0ZXJgIG5hbWVzcGFjZS5cbiAgICAgKiBUaGlzIGlzIGEgc2hvcnQtaGFuZCBmb3IgYFBsdWdpbi51c2VgLCBzZWUgaXQgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAgICogQ2FsbCB0aGlzIGZ1bmN0aW9uIG9uY2UgYXQgdGhlIHN0YXJ0IG9mIHlvdXIgY29kZSwgd2l0aCBhbGwgb2YgdGhlIHBsdWdpbnMgeW91IHdpc2ggdG8gaW5zdGFsbCBhcyBhcmd1bWVudHMuXG4gICAgICogQXZvaWQgY2FsbGluZyB0aGlzIGZ1bmN0aW9uIG11bHRpcGxlIHRpbWVzIHVubGVzcyB5b3UgaW50ZW5kIHRvIG1hbnVhbGx5IGNvbnRyb2wgaW5zdGFsbGF0aW9uIG9yZGVyLlxuICAgICAqIEBtZXRob2QgdXNlXG4gICAgICogQHBhcmFtIC4uLnBsdWdpbiB7RnVuY3Rpb259IFRoZSBwbHVnaW4ocykgdG8gaW5zdGFsbCBvbiBgYmFzZWAgKG11bHRpLWFyZ3VtZW50KS5cbiAgICAgKi9cbiAgICBNYXR0ZXIudXNlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIFBsdWdpbi51c2UoTWF0dGVyLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2hhaW5zIGEgZnVuY3Rpb24gdG8gZXhjdXRlIGJlZm9yZSB0aGUgb3JpZ2luYWwgZnVuY3Rpb24gb24gdGhlIGdpdmVuIGBwYXRoYCByZWxhdGl2ZSB0byBgTWF0dGVyYC5cbiAgICAgKiBTZWUgYWxzbyBkb2NzIGZvciBgQ29tbW9uLmNoYWluYC5cbiAgICAgKiBAbWV0aG9kIGJlZm9yZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHJlbGF0aXZlIHRvIGBNYXR0ZXJgXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hhaW4gYmVmb3JlIHRoZSBvcmlnaW5hbFxuICAgICAqIEByZXR1cm4ge2Z1bmN0aW9ufSBUaGUgY2hhaW5lZCBmdW5jdGlvbiB0aGF0IHJlcGxhY2VkIHRoZSBvcmlnaW5hbFxuICAgICAqL1xuICAgIE1hdHRlci5iZWZvcmUgPSBmdW5jdGlvbihwYXRoLCBmdW5jKSB7XG4gICAgICAgIHBhdGggPSBwYXRoLnJlcGxhY2UoL15NYXR0ZXIuLywgJycpO1xuICAgICAgICByZXR1cm4gQ29tbW9uLmNoYWluUGF0aEJlZm9yZShNYXR0ZXIsIHBhdGgsIGZ1bmMpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDaGFpbnMgYSBmdW5jdGlvbiB0byBleGN1dGUgYWZ0ZXIgdGhlIG9yaWdpbmFsIGZ1bmN0aW9uIG9uIHRoZSBnaXZlbiBgcGF0aGAgcmVsYXRpdmUgdG8gYE1hdHRlcmAuXG4gICAgICogU2VlIGFsc28gZG9jcyBmb3IgYENvbW1vbi5jaGFpbmAuXG4gICAgICogQG1ldGhvZCBhZnRlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHJlbGF0aXZlIHRvIGBNYXR0ZXJgXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hhaW4gYWZ0ZXIgdGhlIG9yaWdpbmFsXG4gICAgICogQHJldHVybiB7ZnVuY3Rpb259IFRoZSBjaGFpbmVkIGZ1bmN0aW9uIHRoYXQgcmVwbGFjZWQgdGhlIG9yaWdpbmFsXG4gICAgICovXG4gICAgTWF0dGVyLmFmdGVyID0gZnVuY3Rpb24ocGF0aCwgZnVuYykge1xuICAgICAgICBwYXRoID0gcGF0aC5yZXBsYWNlKC9eTWF0dGVyLi8sICcnKTtcbiAgICAgICAgcmV0dXJuIENvbW1vbi5jaGFpblBhdGhBZnRlcihNYXR0ZXIsIHBhdGgsIGZ1bmMpO1xuICAgIH07XG5cbn0pKCk7XG5cbn0se1wiLi9Db21tb25cIjoxNCxcIi4vUGx1Z2luXCI6MjB9XSwxODpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG5cbn0se1wiLi4vYm9keS9Db21wb3NpdGVcIjoyLFwiLi9Db21tb25cIjoxNH1dLDE5OltmdW5jdGlvbihfZGVyZXFfLG1vZHVsZSxleHBvcnRzKXtcbi8qKlxuKiBUaGUgYE1hdHRlci5Nb3VzZWAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgbW91c2UgaW5wdXRzLlxuKlxuKiBAY2xhc3MgTW91c2VcbiovXG5cbnZhciBNb3VzZSA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1vdXNlO1xuXG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi4vY29yZS9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG1vdXNlIGlucHV0LlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgICAqIEByZXR1cm4ge21vdXNlfSBBIG5ldyBtb3VzZVxuICAgICAqL1xuICAgIE1vdXNlLmNyZWF0ZSA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIG1vdXNlID0ge307XG5cbiAgICAgICAgaWYgKCFlbGVtZW50KSB7XG4gICAgICAgICAgICBDb21tb24ubG9nKCdNb3VzZS5jcmVhdGU6IGVsZW1lbnQgd2FzIHVuZGVmaW5lZCwgZGVmYXVsdGluZyB0byBkb2N1bWVudC5ib2R5JywgJ3dhcm4nKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgbW91c2UuZWxlbWVudCA9IGVsZW1lbnQgfHwgZG9jdW1lbnQuYm9keTtcbiAgICAgICAgbW91c2UuYWJzb2x1dGUgPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgbW91c2UucG9zaXRpb24gPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgbW91c2UubW91c2Vkb3duUG9zaXRpb24gPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgbW91c2UubW91c2V1cFBvc2l0aW9uID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIG1vdXNlLm9mZnNldCA9IHsgeDogMCwgeTogMCB9O1xuICAgICAgICBtb3VzZS5zY2FsZSA9IHsgeDogMSwgeTogMSB9O1xuICAgICAgICBtb3VzZS53aGVlbERlbHRhID0gMDtcbiAgICAgICAgbW91c2UuYnV0dG9uID0gLTE7XG4gICAgICAgIG1vdXNlLnBpeGVsUmF0aW8gPSBtb3VzZS5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1waXhlbC1yYXRpbycpIHx8IDE7XG5cbiAgICAgICAgbW91c2Uuc291cmNlRXZlbnRzID0ge1xuICAgICAgICAgICAgbW91c2Vtb3ZlOiBudWxsLFxuICAgICAgICAgICAgbW91c2Vkb3duOiBudWxsLFxuICAgICAgICAgICAgbW91c2V1cDogbnVsbCxcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IG51bGxcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIG1vdXNlLm1vdXNlbW92ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7IFxuICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gTW91c2UuX2dldFJlbGF0aXZlTW91c2VQb3NpdGlvbihldmVudCwgbW91c2UuZWxlbWVudCwgbW91c2UucGl4ZWxSYXRpbyksXG4gICAgICAgICAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzO1xuXG4gICAgICAgICAgICBpZiAodG91Y2hlcykge1xuICAgICAgICAgICAgICAgIG1vdXNlLmJ1dHRvbiA9IDA7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbW91c2UuYWJzb2x1dGUueCA9IHBvc2l0aW9uLng7XG4gICAgICAgICAgICBtb3VzZS5hYnNvbHV0ZS55ID0gcG9zaXRpb24ueTtcbiAgICAgICAgICAgIG1vdXNlLnBvc2l0aW9uLnggPSBtb3VzZS5hYnNvbHV0ZS54ICogbW91c2Uuc2NhbGUueCArIG1vdXNlLm9mZnNldC54O1xuICAgICAgICAgICAgbW91c2UucG9zaXRpb24ueSA9IG1vdXNlLmFic29sdXRlLnkgKiBtb3VzZS5zY2FsZS55ICsgbW91c2Uub2Zmc2V0Lnk7XG4gICAgICAgICAgICBtb3VzZS5zb3VyY2VFdmVudHMubW91c2Vtb3ZlID0gZXZlbnQ7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBtb3VzZS5tb3VzZWRvd24gPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gTW91c2UuX2dldFJlbGF0aXZlTW91c2VQb3NpdGlvbihldmVudCwgbW91c2UuZWxlbWVudCwgbW91c2UucGl4ZWxSYXRpbyksXG4gICAgICAgICAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzO1xuXG4gICAgICAgICAgICBpZiAodG91Y2hlcykge1xuICAgICAgICAgICAgICAgIG1vdXNlLmJ1dHRvbiA9IDA7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbW91c2UuYnV0dG9uID0gZXZlbnQuYnV0dG9uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBtb3VzZS5hYnNvbHV0ZS54ID0gcG9zaXRpb24ueDtcbiAgICAgICAgICAgIG1vdXNlLmFic29sdXRlLnkgPSBwb3NpdGlvbi55O1xuICAgICAgICAgICAgbW91c2UucG9zaXRpb24ueCA9IG1vdXNlLmFic29sdXRlLnggKiBtb3VzZS5zY2FsZS54ICsgbW91c2Uub2Zmc2V0Lng7XG4gICAgICAgICAgICBtb3VzZS5wb3NpdGlvbi55ID0gbW91c2UuYWJzb2x1dGUueSAqIG1vdXNlLnNjYWxlLnkgKyBtb3VzZS5vZmZzZXQueTtcbiAgICAgICAgICAgIG1vdXNlLm1vdXNlZG93blBvc2l0aW9uLnggPSBtb3VzZS5wb3NpdGlvbi54O1xuICAgICAgICAgICAgbW91c2UubW91c2Vkb3duUG9zaXRpb24ueSA9IG1vdXNlLnBvc2l0aW9uLnk7XG4gICAgICAgICAgICBtb3VzZS5zb3VyY2VFdmVudHMubW91c2Vkb3duID0gZXZlbnQ7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBtb3VzZS5tb3VzZXVwID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBwb3NpdGlvbiA9IE1vdXNlLl9nZXRSZWxhdGl2ZU1vdXNlUG9zaXRpb24oZXZlbnQsIG1vdXNlLmVsZW1lbnQsIG1vdXNlLnBpeGVsUmF0aW8pLFxuICAgICAgICAgICAgICAgIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcztcblxuICAgICAgICAgICAgaWYgKHRvdWNoZXMpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBtb3VzZS5idXR0b24gPSAtMTtcbiAgICAgICAgICAgIG1vdXNlLmFic29sdXRlLnggPSBwb3NpdGlvbi54O1xuICAgICAgICAgICAgbW91c2UuYWJzb2x1dGUueSA9IHBvc2l0aW9uLnk7XG4gICAgICAgICAgICBtb3VzZS5wb3NpdGlvbi54ID0gbW91c2UuYWJzb2x1dGUueCAqIG1vdXNlLnNjYWxlLnggKyBtb3VzZS5vZmZzZXQueDtcbiAgICAgICAgICAgIG1vdXNlLnBvc2l0aW9uLnkgPSBtb3VzZS5hYnNvbHV0ZS55ICogbW91c2Uuc2NhbGUueSArIG1vdXNlLm9mZnNldC55O1xuICAgICAgICAgICAgbW91c2UubW91c2V1cFBvc2l0aW9uLnggPSBtb3VzZS5wb3NpdGlvbi54O1xuICAgICAgICAgICAgbW91c2UubW91c2V1cFBvc2l0aW9uLnkgPSBtb3VzZS5wb3NpdGlvbi55O1xuICAgICAgICAgICAgbW91c2Uuc291cmNlRXZlbnRzLm1vdXNldXAgPSBldmVudDtcbiAgICAgICAgfTtcblxuICAgICAgICBtb3VzZS5tb3VzZXdoZWVsID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIG1vdXNlLndoZWVsRGVsdGEgPSBNYXRoLm1heCgtMSwgTWF0aC5taW4oMSwgZXZlbnQud2hlZWxEZWx0YSB8fCAtZXZlbnQuZGV0YWlsKSk7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIE1vdXNlLnNldEVsZW1lbnQobW91c2UsIG1vdXNlLmVsZW1lbnQpO1xuXG4gICAgICAgIHJldHVybiBtb3VzZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZWxlbWVudCB0aGUgbW91c2UgaXMgYm91bmQgdG8gKGFuZCByZWxhdGl2ZSB0bykuXG4gICAgICogQG1ldGhvZCBzZXRFbGVtZW50XG4gICAgICogQHBhcmFtIHttb3VzZX0gbW91c2VcbiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAgICovXG4gICAgTW91c2Uuc2V0RWxlbWVudCA9IGZ1bmN0aW9uKG1vdXNlLCBlbGVtZW50KSB7XG4gICAgICAgIG1vdXNlLmVsZW1lbnQgPSBlbGVtZW50O1xuXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgbW91c2UubW91c2Vtb3ZlKTtcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBtb3VzZS5tb3VzZWRvd24pO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBtb3VzZS5tb3VzZXVwKTtcbiAgICAgICAgXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIG1vdXNlLm1vdXNld2hlZWwpO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTU1vdXNlU2Nyb2xsJywgbW91c2UubW91c2V3aGVlbCk7XG5cbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBtb3VzZS5tb3VzZW1vdmUpO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBtb3VzZS5tb3VzZWRvd24pO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgbW91c2UubW91c2V1cCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsZWFycyBhbGwgY2FwdHVyZWQgc291cmNlIGV2ZW50cy5cbiAgICAgKiBAbWV0aG9kIGNsZWFyU291cmNlRXZlbnRzXG4gICAgICogQHBhcmFtIHttb3VzZX0gbW91c2VcbiAgICAgKi9cbiAgICBNb3VzZS5jbGVhclNvdXJjZUV2ZW50cyA9IGZ1bmN0aW9uKG1vdXNlKSB7XG4gICAgICAgIG1vdXNlLnNvdXJjZUV2ZW50cy5tb3VzZW1vdmUgPSBudWxsO1xuICAgICAgICBtb3VzZS5zb3VyY2VFdmVudHMubW91c2Vkb3duID0gbnVsbDtcbiAgICAgICAgbW91c2Uuc291cmNlRXZlbnRzLm1vdXNldXAgPSBudWxsO1xuICAgICAgICBtb3VzZS5zb3VyY2VFdmVudHMubW91c2V3aGVlbCA9IG51bGw7XG4gICAgICAgIG1vdXNlLndoZWVsRGVsdGEgPSAwO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBtb3VzZSBwb3NpdGlvbiBvZmZzZXQuXG4gICAgICogQG1ldGhvZCBzZXRPZmZzZXRcbiAgICAgKiBAcGFyYW0ge21vdXNlfSBtb3VzZVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSBvZmZzZXRcbiAgICAgKi9cbiAgICBNb3VzZS5zZXRPZmZzZXQgPSBmdW5jdGlvbihtb3VzZSwgb2Zmc2V0KSB7XG4gICAgICAgIG1vdXNlLm9mZnNldC54ID0gb2Zmc2V0Lng7XG4gICAgICAgIG1vdXNlLm9mZnNldC55ID0gb2Zmc2V0Lnk7XG4gICAgICAgIG1vdXNlLnBvc2l0aW9uLnggPSBtb3VzZS5hYnNvbHV0ZS54ICogbW91c2Uuc2NhbGUueCArIG1vdXNlLm9mZnNldC54O1xuICAgICAgICBtb3VzZS5wb3NpdGlvbi55ID0gbW91c2UuYWJzb2x1dGUueSAqIG1vdXNlLnNjYWxlLnkgKyBtb3VzZS5vZmZzZXQueTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgbW91c2UgcG9zaXRpb24gc2NhbGUuXG4gICAgICogQG1ldGhvZCBzZXRTY2FsZVxuICAgICAqIEBwYXJhbSB7bW91c2V9IG1vdXNlXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHNjYWxlXG4gICAgICovXG4gICAgTW91c2Uuc2V0U2NhbGUgPSBmdW5jdGlvbihtb3VzZSwgc2NhbGUpIHtcbiAgICAgICAgbW91c2Uuc2NhbGUueCA9IHNjYWxlLng7XG4gICAgICAgIG1vdXNlLnNjYWxlLnkgPSBzY2FsZS55O1xuICAgICAgICBtb3VzZS5wb3NpdGlvbi54ID0gbW91c2UuYWJzb2x1dGUueCAqIG1vdXNlLnNjYWxlLnggKyBtb3VzZS5vZmZzZXQueDtcbiAgICAgICAgbW91c2UucG9zaXRpb24ueSA9IG1vdXNlLmFic29sdXRlLnkgKiBtb3VzZS5zY2FsZS55ICsgbW91c2Uub2Zmc2V0Lnk7XG4gICAgfTtcbiAgICBcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBtb3VzZSBwb3NpdGlvbiByZWxhdGl2ZSB0byBhbiBlbGVtZW50IGdpdmVuIGEgc2NyZWVuIHBpeGVsIHJhdGlvLlxuICAgICAqIEBtZXRob2QgX2dldFJlbGF0aXZlTW91c2VQb3NpdGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHt9IGV2ZW50XG4gICAgICogQHBhcmFtIHt9IGVsZW1lbnRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcGl4ZWxSYXRpb1xuICAgICAqIEByZXR1cm4ge31cbiAgICAgKi9cbiAgICBNb3VzZS5fZ2V0UmVsYXRpdmVNb3VzZVBvc2l0aW9uID0gZnVuY3Rpb24oZXZlbnQsIGVsZW1lbnQsIHBpeGVsUmF0aW8pIHtcbiAgICAgICAgdmFyIGVsZW1lbnRCb3VuZHMgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgICAgcm9vdE5vZGUgPSAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50IHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZSB8fCBkb2N1bWVudC5ib2R5KSxcbiAgICAgICAgICAgIHNjcm9sbFggPSAod2luZG93LnBhZ2VYT2Zmc2V0ICE9PSB1bmRlZmluZWQpID8gd2luZG93LnBhZ2VYT2Zmc2V0IDogcm9vdE5vZGUuc2Nyb2xsTGVmdCxcbiAgICAgICAgICAgIHNjcm9sbFkgPSAod2luZG93LnBhZ2VZT2Zmc2V0ICE9PSB1bmRlZmluZWQpID8gd2luZG93LnBhZ2VZT2Zmc2V0IDogcm9vdE5vZGUuc2Nyb2xsVG9wLFxuICAgICAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICAgICAgeCwgeTtcbiAgICAgICAgXG4gICAgICAgIGlmICh0b3VjaGVzKSB7XG4gICAgICAgICAgICB4ID0gdG91Y2hlc1swXS5wYWdlWCAtIGVsZW1lbnRCb3VuZHMubGVmdCAtIHNjcm9sbFg7XG4gICAgICAgICAgICB5ID0gdG91Y2hlc1swXS5wYWdlWSAtIGVsZW1lbnRCb3VuZHMudG9wIC0gc2Nyb2xsWTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHggPSBldmVudC5wYWdlWCAtIGVsZW1lbnRCb3VuZHMubGVmdCAtIHNjcm9sbFg7XG4gICAgICAgICAgICB5ID0gZXZlbnQucGFnZVkgLSBlbGVtZW50Qm91bmRzLnRvcCAtIHNjcm9sbFk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4geyBcbiAgICAgICAgICAgIHg6IHggLyAoZWxlbWVudC5jbGllbnRXaWR0aCAvIChlbGVtZW50LndpZHRoIHx8IGVsZW1lbnQuY2xpZW50V2lkdGgpICogcGl4ZWxSYXRpbyksXG4gICAgICAgICAgICB5OiB5IC8gKGVsZW1lbnQuY2xpZW50SGVpZ2h0IC8gKGVsZW1lbnQuaGVpZ2h0IHx8IGVsZW1lbnQuY2xpZW50SGVpZ2h0KSAqIHBpeGVsUmF0aW8pXG4gICAgICAgIH07XG4gICAgfTtcblxufSkoKTtcblxufSx7XCIuLi9jb3JlL0NvbW1vblwiOjE0fV0sMjA6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLlBsdWdpbmAgbW9kdWxlIGNvbnRhaW5zIGZ1bmN0aW9ucyBmb3IgcmVnaXN0ZXJpbmcgYW5kIGluc3RhbGxpbmcgcGx1Z2lucyBvbiBtb2R1bGVzLlxuKlxuKiBAY2xhc3MgUGx1Z2luXG4qL1xuXG52YXIgUGx1Z2luID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gUGx1Z2luO1xuXG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgUGx1Z2luLl9yZWdpc3RyeSA9IHt9O1xuXG4gICAgLyoqXG4gICAgICogUmVnaXN0ZXJzIGEgcGx1Z2luIG9iamVjdCBzbyBpdCBjYW4gYmUgcmVzb2x2ZWQgbGF0ZXIgYnkgbmFtZS5cbiAgICAgKiBAbWV0aG9kIHJlZ2lzdGVyXG4gICAgICogQHBhcmFtIHBsdWdpbiB7fSBUaGUgcGx1Z2luIHRvIHJlZ2lzdGVyLlxuICAgICAqIEByZXR1cm4ge29iamVjdH0gVGhlIHBsdWdpbi5cbiAgICAgKi9cbiAgICBQbHVnaW4ucmVnaXN0ZXIgPSBmdW5jdGlvbihwbHVnaW4pIHtcbiAgICAgICAgaWYgKCFQbHVnaW4uaXNQbHVnaW4ocGx1Z2luKSkge1xuICAgICAgICAgICAgQ29tbW9uLndhcm4oJ1BsdWdpbi5yZWdpc3RlcjonLCBQbHVnaW4udG9TdHJpbmcocGx1Z2luKSwgJ2RvZXMgbm90IGltcGxlbWVudCBhbGwgcmVxdWlyZWQgZmllbGRzLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBsdWdpbi5uYW1lIGluIFBsdWdpbi5fcmVnaXN0cnkpIHtcbiAgICAgICAgICAgIHZhciByZWdpc3RlcmVkID0gUGx1Z2luLl9yZWdpc3RyeVtwbHVnaW4ubmFtZV0sXG4gICAgICAgICAgICAgICAgcGx1Z2luVmVyc2lvbiA9IFBsdWdpbi52ZXJzaW9uUGFyc2UocGx1Z2luLnZlcnNpb24pLm51bWJlcixcbiAgICAgICAgICAgICAgICByZWdpc3RlcmVkVmVyc2lvbiA9IFBsdWdpbi52ZXJzaW9uUGFyc2UocmVnaXN0ZXJlZC52ZXJzaW9uKS5udW1iZXI7XG5cbiAgICAgICAgICAgIGlmIChwbHVnaW5WZXJzaW9uID4gcmVnaXN0ZXJlZFZlcnNpb24pIHtcbiAgICAgICAgICAgICAgICBDb21tb24ud2FybignUGx1Z2luLnJlZ2lzdGVyOicsIFBsdWdpbi50b1N0cmluZyhyZWdpc3RlcmVkKSwgJ3dhcyB1cGdyYWRlZCB0bycsIFBsdWdpbi50b1N0cmluZyhwbHVnaW4pKTtcbiAgICAgICAgICAgICAgICBQbHVnaW4uX3JlZ2lzdHJ5W3BsdWdpbi5uYW1lXSA9IHBsdWdpbjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocGx1Z2luVmVyc2lvbiA8IHJlZ2lzdGVyZWRWZXJzaW9uKSB7XG4gICAgICAgICAgICAgICAgQ29tbW9uLndhcm4oJ1BsdWdpbi5yZWdpc3RlcjonLCBQbHVnaW4udG9TdHJpbmcocmVnaXN0ZXJlZCksICdjYW4gbm90IGJlIGRvd25ncmFkZWQgdG8nLCBQbHVnaW4udG9TdHJpbmcocGx1Z2luKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBsdWdpbiAhPT0gcmVnaXN0ZXJlZCkge1xuICAgICAgICAgICAgICAgIENvbW1vbi53YXJuKCdQbHVnaW4ucmVnaXN0ZXI6JywgUGx1Z2luLnRvU3RyaW5nKHBsdWdpbiksICdpcyBhbHJlYWR5IHJlZ2lzdGVyZWQgdG8gZGlmZmVyZW50IHBsdWdpbiBvYmplY3QnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFBsdWdpbi5fcmVnaXN0cnlbcGx1Z2luLm5hbWVdID0gcGx1Z2luO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHBsdWdpbjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVzb2x2ZXMgYSBkZXBlbmRlbmN5IHRvIGEgcGx1Z2luIG9iamVjdCBmcm9tIHRoZSByZWdpc3RyeSBpZiBpdCBleGlzdHMuIFxuICAgICAqIFRoZSBgZGVwZW5kZW5jeWAgbWF5IGNvbnRhaW4gYSB2ZXJzaW9uLCBidXQgb25seSB0aGUgbmFtZSBtYXR0ZXJzIHdoZW4gcmVzb2x2aW5nLlxuICAgICAqIEBtZXRob2QgcmVzb2x2ZVxuICAgICAqIEBwYXJhbSBkZXBlbmRlbmN5IHtzdHJpbmd9IFRoZSBkZXBlbmRlbmN5LlxuICAgICAqIEByZXR1cm4ge29iamVjdH0gVGhlIHBsdWdpbiBpZiByZXNvbHZlZCwgb3RoZXJ3aXNlIGB1bmRlZmluZWRgLlxuICAgICAqL1xuICAgIFBsdWdpbi5yZXNvbHZlID0gZnVuY3Rpb24oZGVwZW5kZW5jeSkge1xuICAgICAgICByZXR1cm4gUGx1Z2luLl9yZWdpc3RyeVtQbHVnaW4uZGVwZW5kZW5jeVBhcnNlKGRlcGVuZGVuY3kpLm5hbWVdO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgcHJldHR5IHByaW50ZWQgcGx1Z2luIG5hbWUgYW5kIHZlcnNpb24uXG4gICAgICogQG1ldGhvZCB0b1N0cmluZ1xuICAgICAqIEBwYXJhbSBwbHVnaW4ge30gVGhlIHBsdWdpbi5cbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFByZXR0eSBwcmludGVkIHBsdWdpbiBuYW1lIGFuZCB2ZXJzaW9uLlxuICAgICAqL1xuICAgIFBsdWdpbi50b1N0cmluZyA9IGZ1bmN0aW9uKHBsdWdpbikge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHBsdWdpbiA9PT0gJ3N0cmluZycgPyBwbHVnaW4gOiAocGx1Z2luLm5hbWUgfHwgJ2Fub255bW91cycpICsgJ0AnICsgKHBsdWdpbi52ZXJzaW9uIHx8IHBsdWdpbi5yYW5nZSB8fCAnMC4wLjAnKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdCBtZWV0cyB0aGUgbWluaW11bSBzdGFuZGFyZCB0byBiZSBjb25zaWRlcmVkIGEgcGx1Z2luLlxuICAgICAqIFRoaXMgbWVhbnMgaXQgbXVzdCBkZWZpbmUgdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICAgICAqIC0gYG5hbWVgXG4gICAgICogLSBgdmVyc2lvbmBcbiAgICAgKiAtIGBpbnN0YWxsYFxuICAgICAqIEBtZXRob2QgaXNQbHVnaW5cbiAgICAgKiBAcGFyYW0gb2JqIHt9IFRoZSBvYmogdG8gdGVzdC5cbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBgdHJ1ZWAgaWYgdGhlIG9iamVjdCBjYW4gYmUgY29uc2lkZXJlZCBhIHBsdWdpbiBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICBQbHVnaW4uaXNQbHVnaW4gPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIG9iaiAmJiBvYmoubmFtZSAmJiBvYmoudmVyc2lvbiAmJiBvYmouaW5zdGFsbDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgYSBwbHVnaW4gd2l0aCB0aGUgZ2l2ZW4gYG5hbWVgIGJlZW4gaW5zdGFsbGVkIG9uIGBtb2R1bGVgLlxuICAgICAqIEBtZXRob2QgaXNVc2VkXG4gICAgICogQHBhcmFtIG1vZHVsZSB7fSBUaGUgbW9kdWxlLlxuICAgICAqIEBwYXJhbSBuYW1lIHtzdHJpbmd9IFRoZSBwbHVnaW4gbmFtZS5cbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBgdHJ1ZWAgaWYgYSBwbHVnaW4gd2l0aCB0aGUgZ2l2ZW4gYG5hbWVgIGJlZW4gaW5zdGFsbGVkIG9uIGBtb2R1bGVgLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICBQbHVnaW4uaXNVc2VkID0gZnVuY3Rpb24obW9kdWxlLCBuYW1lKSB7XG4gICAgICAgIHJldHVybiBtb2R1bGUudXNlZC5pbmRleE9mKG5hbWUpID4gLTE7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYHRydWVgIGlmIGBwbHVnaW4uZm9yYCBpcyBhcHBsaWNhYmxlIHRvIGBtb2R1bGVgIGJ5IGNvbXBhcmluZyBhZ2FpbnN0IGBtb2R1bGUubmFtZWAgYW5kIGBtb2R1bGUudmVyc2lvbmAuXG4gICAgICogSWYgYHBsdWdpbi5mb3JgIGlzIG5vdCBzcGVjaWZpZWQgdGhlbiBpdCBpcyBhc3N1bWVkIHRvIGJlIGFwcGxpY2FibGUuXG4gICAgICogVGhlIHZhbHVlIG9mIGBwbHVnaW4uZm9yYCBpcyBhIHN0cmluZyBvZiB0aGUgZm9ybWF0IGAnbW9kdWxlLW5hbWUnYCBvciBgJ21vZHVsZS1uYW1lQHZlcnNpb24nYC5cbiAgICAgKiBAbWV0aG9kIGlzRm9yXG4gICAgICogQHBhcmFtIHBsdWdpbiB7fSBUaGUgcGx1Z2luLlxuICAgICAqIEBwYXJhbSBtb2R1bGUge30gVGhlIG1vZHVsZS5cbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBgdHJ1ZWAgaWYgYHBsdWdpbi5mb3JgIGlzIGFwcGxpY2FibGUgdG8gYG1vZHVsZWAsIG90aGVyd2lzZSBgZmFsc2VgLlxuICAgICAqL1xuICAgIFBsdWdpbi5pc0ZvciA9IGZ1bmN0aW9uKHBsdWdpbiwgbW9kdWxlKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSBwbHVnaW4uZm9yICYmIFBsdWdpbi5kZXBlbmRlbmN5UGFyc2UocGx1Z2luLmZvcik7XG4gICAgICAgIHJldHVybiAhcGx1Z2luLmZvciB8fCAobW9kdWxlLm5hbWUgPT09IHBhcnNlZC5uYW1lICYmIFBsdWdpbi52ZXJzaW9uU2F0aXNmaWVzKG1vZHVsZS52ZXJzaW9uLCBwYXJzZWQucmFuZ2UpKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogSW5zdGFsbHMgdGhlIHBsdWdpbnMgYnkgY2FsbGluZyBgcGx1Z2luLmluc3RhbGxgIG9uIGVhY2ggcGx1Z2luIHNwZWNpZmllZCBpbiBgcGx1Z2luc2AgaWYgcGFzc2VkLCBvdGhlcndpc2UgYG1vZHVsZS51c2VzYC5cbiAgICAgKiBGb3IgaW5zdGFsbGluZyBwbHVnaW5zIG9uIGBNYXR0ZXJgIHNlZSB0aGUgY29udmVuaWVuY2UgZnVuY3Rpb24gYE1hdHRlci51c2VgLlxuICAgICAqIFBsdWdpbnMgbWF5IGJlIHNwZWNpZmllZCBlaXRoZXIgYnkgdGhlaXIgbmFtZSBvciBhIHJlZmVyZW5jZSB0byB0aGUgcGx1Z2luIG9iamVjdC5cbiAgICAgKiBQbHVnaW5zIHRoZW1zZWx2ZXMgbWF5IHNwZWNpZnkgZnVydGhlciBkZXBlbmRlbmNpZXMsIGJ1dCBlYWNoIHBsdWdpbiBpcyBpbnN0YWxsZWQgb25seSBvbmNlLlxuICAgICAqIE9yZGVyIGlzIGltcG9ydGFudCwgYSB0b3BvbG9naWNhbCBzb3J0IGlzIHBlcmZvcm1lZCB0byBmaW5kIHRoZSBiZXN0IHJlc3VsdGluZyBvcmRlciBvZiBpbnN0YWxsYXRpb24uXG4gICAgICogVGhpcyBzb3J0aW5nIGF0dGVtcHRzIHRvIHNhdGlzZnkgZXZlcnkgZGVwZW5kZW5jeSdzIHJlcXVlc3RlZCBvcmRlcmluZywgYnV0IG1heSBub3QgYmUgZXhhY3QgaW4gYWxsIGNhc2VzLlxuICAgICAqIFRoaXMgZnVuY3Rpb24gbG9ncyB0aGUgcmVzdWx0aW5nIHN0YXR1cyBvZiBlYWNoIGRlcGVuZGVuY3kgaW4gdGhlIGNvbnNvbGUsIGFsb25nIHdpdGggYW55IHdhcm5pbmdzLlxuICAgICAqIC0gQSBncmVlbiB0aWNrIOKchSBpbmRpY2F0ZXMgYSBkZXBlbmRlbmN5IHdhcyByZXNvbHZlZCBhbmQgaW5zdGFsbGVkLlxuICAgICAqIC0gQW4gb3JhbmdlIGRpYW1vbmQg8J+UtiBpbmRpY2F0ZXMgYSBkZXBlbmRlbmN5IHdhcyByZXNvbHZlZCBidXQgYSB3YXJuaW5nIHdhcyB0aHJvd24gZm9yIGl0IG9yIG9uZSBpZiBpdHMgZGVwZW5kZW5jaWVzLlxuICAgICAqIC0gQSByZWQgY3Jvc3Mg4p2MIGluZGljYXRlcyBhIGRlcGVuZGVuY3kgY291bGQgbm90IGJlIHJlc29sdmVkLlxuICAgICAqIEF2b2lkIGNhbGxpbmcgdGhpcyBmdW5jdGlvbiBtdWx0aXBsZSB0aW1lcyBvbiB0aGUgc2FtZSBtb2R1bGUgdW5sZXNzIHlvdSBpbnRlbmQgdG8gbWFudWFsbHkgY29udHJvbCBpbnN0YWxsYXRpb24gb3JkZXIuXG4gICAgICogQG1ldGhvZCB1c2VcbiAgICAgKiBAcGFyYW0gbW9kdWxlIHt9IFRoZSBtb2R1bGUgaW5zdGFsbCBwbHVnaW5zIG9uLlxuICAgICAqIEBwYXJhbSBbcGx1Z2lucz1tb2R1bGUudXNlc10ge30gVGhlIHBsdWdpbnMgdG8gaW5zdGFsbCBvbiBtb2R1bGUgKG9wdGlvbmFsLCBkZWZhdWx0cyB0byBgbW9kdWxlLnVzZXNgKS5cbiAgICAgKi9cbiAgICBQbHVnaW4udXNlID0gZnVuY3Rpb24obW9kdWxlLCBwbHVnaW5zKSB7XG4gICAgICAgIG1vZHVsZS51c2VzID0gKG1vZHVsZS51c2VzIHx8IFtdKS5jb25jYXQocGx1Z2lucyB8fCBbXSk7XG5cbiAgICAgICAgaWYgKG1vZHVsZS51c2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgQ29tbW9uLndhcm4oJ1BsdWdpbi51c2U6JywgUGx1Z2luLnRvU3RyaW5nKG1vZHVsZSksICdkb2VzIG5vdCBzcGVjaWZ5IGFueSBkZXBlbmRlbmNpZXMgdG8gaW5zdGFsbC4nKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkZXBlbmRlbmNpZXMgPSBQbHVnaW4uZGVwZW5kZW5jaWVzKG1vZHVsZSksXG4gICAgICAgICAgICBzb3J0ZWREZXBlbmRlbmNpZXMgPSBDb21tb24udG9wb2xvZ2ljYWxTb3J0KGRlcGVuZGVuY2llcyksXG4gICAgICAgICAgICBzdGF0dXMgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvcnRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgaWYgKHNvcnRlZERlcGVuZGVuY2llc1tpXSA9PT0gbW9kdWxlLm5hbWUpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHBsdWdpbiA9IFBsdWdpbi5yZXNvbHZlKHNvcnRlZERlcGVuZGVuY2llc1tpXSk7XG5cbiAgICAgICAgICAgIGlmICghcGx1Z2luKSB7XG4gICAgICAgICAgICAgICAgc3RhdHVzLnB1c2goJ+KdjCAnICsgc29ydGVkRGVwZW5kZW5jaWVzW2ldKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKFBsdWdpbi5pc1VzZWQobW9kdWxlLCBwbHVnaW4ubmFtZSkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFQbHVnaW4uaXNGb3IocGx1Z2luLCBtb2R1bGUpKSB7XG4gICAgICAgICAgICAgICAgQ29tbW9uLndhcm4oJ1BsdWdpbi51c2U6JywgUGx1Z2luLnRvU3RyaW5nKHBsdWdpbiksICdpcyBmb3InLCBwbHVnaW4uZm9yLCAnYnV0IGluc3RhbGxlZCBvbicsIFBsdWdpbi50b1N0cmluZyhtb2R1bGUpICsgJy4nKTtcbiAgICAgICAgICAgICAgICBwbHVnaW4uX3dhcm5lZCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwbHVnaW4uaW5zdGFsbCkge1xuICAgICAgICAgICAgICAgIHBsdWdpbi5pbnN0YWxsKG1vZHVsZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIENvbW1vbi53YXJuKCdQbHVnaW4udXNlOicsIFBsdWdpbi50b1N0cmluZyhwbHVnaW4pLCAnZG9lcyBub3Qgc3BlY2lmeSBhbiBpbnN0YWxsIGZ1bmN0aW9uLicpO1xuICAgICAgICAgICAgICAgIHBsdWdpbi5fd2FybmVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHBsdWdpbi5fd2FybmVkKSB7XG4gICAgICAgICAgICAgICAgc3RhdHVzLnB1c2goJ/CflLYgJyArIFBsdWdpbi50b1N0cmluZyhwbHVnaW4pKTtcbiAgICAgICAgICAgICAgICBkZWxldGUgcGx1Z2luLl93YXJuZWQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0YXR1cy5wdXNoKCfinIUgJyArIFBsdWdpbi50b1N0cmluZyhwbHVnaW4pKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbW9kdWxlLnVzZWQucHVzaChwbHVnaW4ubmFtZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3RhdHVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIENvbW1vbi5pbmZvKHN0YXR1cy5qb2luKCcgICcpKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZWN1cnNpdmVseSBmaW5kcyBhbGwgb2YgYSBtb2R1bGUncyBkZXBlbmRlbmNpZXMgYW5kIHJldHVybnMgYSBmbGF0IGRlcGVuZGVuY3kgZ3JhcGguXG4gICAgICogQG1ldGhvZCBkZXBlbmRlbmNpZXNcbiAgICAgKiBAcGFyYW0gbW9kdWxlIHt9IFRoZSBtb2R1bGUuXG4gICAgICogQHJldHVybiB7b2JqZWN0fSBBIGRlcGVuZGVuY3kgZ3JhcGguXG4gICAgICovXG4gICAgUGx1Z2luLmRlcGVuZGVuY2llcyA9IGZ1bmN0aW9uKG1vZHVsZSwgdHJhY2tlZCkge1xuICAgICAgICB2YXIgcGFyc2VkQmFzZSA9IFBsdWdpbi5kZXBlbmRlbmN5UGFyc2UobW9kdWxlKSxcbiAgICAgICAgICAgIG5hbWUgPSBwYXJzZWRCYXNlLm5hbWU7XG5cbiAgICAgICAgdHJhY2tlZCA9IHRyYWNrZWQgfHwge307XG5cbiAgICAgICAgaWYgKG5hbWUgaW4gdHJhY2tlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbW9kdWxlID0gUGx1Z2luLnJlc29sdmUobW9kdWxlKSB8fCBtb2R1bGU7XG5cbiAgICAgICAgdHJhY2tlZFtuYW1lXSA9IENvbW1vbi5tYXAobW9kdWxlLnVzZXMgfHwgW10sIGZ1bmN0aW9uKGRlcGVuZGVuY3kpIHtcbiAgICAgICAgICAgIGlmIChQbHVnaW4uaXNQbHVnaW4oZGVwZW5kZW5jeSkpIHtcbiAgICAgICAgICAgICAgICBQbHVnaW4ucmVnaXN0ZXIoZGVwZW5kZW5jeSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBwYXJzZWQgPSBQbHVnaW4uZGVwZW5kZW5jeVBhcnNlKGRlcGVuZGVuY3kpLFxuICAgICAgICAgICAgICAgIHJlc29sdmVkID0gUGx1Z2luLnJlc29sdmUoZGVwZW5kZW5jeSk7XG5cbiAgICAgICAgICAgIGlmIChyZXNvbHZlZCAmJiAhUGx1Z2luLnZlcnNpb25TYXRpc2ZpZXMocmVzb2x2ZWQudmVyc2lvbiwgcGFyc2VkLnJhbmdlKSkge1xuICAgICAgICAgICAgICAgIENvbW1vbi53YXJuKFxuICAgICAgICAgICAgICAgICAgICAnUGx1Z2luLmRlcGVuZGVuY2llczonLCBQbHVnaW4udG9TdHJpbmcocmVzb2x2ZWQpLCAnZG9lcyBub3Qgc2F0aXNmeScsXG4gICAgICAgICAgICAgICAgICAgIFBsdWdpbi50b1N0cmluZyhwYXJzZWQpLCAndXNlZCBieScsIFBsdWdpbi50b1N0cmluZyhwYXJzZWRCYXNlKSArICcuJ1xuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICByZXNvbHZlZC5fd2FybmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBtb2R1bGUuX3dhcm5lZCA9IHRydWU7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFyZXNvbHZlZCkge1xuICAgICAgICAgICAgICAgIENvbW1vbi53YXJuKFxuICAgICAgICAgICAgICAgICAgICAnUGx1Z2luLmRlcGVuZGVuY2llczonLCBQbHVnaW4udG9TdHJpbmcoZGVwZW5kZW5jeSksICd1c2VkIGJ5JyxcbiAgICAgICAgICAgICAgICAgICAgUGx1Z2luLnRvU3RyaW5nKHBhcnNlZEJhc2UpLCAnY291bGQgbm90IGJlIHJlc29sdmVkLidcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgbW9kdWxlLl93YXJuZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gcGFyc2VkLm5hbWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJhY2tlZFtuYW1lXS5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgUGx1Z2luLmRlcGVuZGVuY2llcyh0cmFja2VkW25hbWVdW2ldLCB0cmFja2VkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cmFja2VkO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgYSBkZXBlbmRlbmN5IHN0cmluZyBpbnRvIGl0cyBjb21wb25lbnRzLlxuICAgICAqIFRoZSBgZGVwZW5kZW5jeWAgaXMgYSBzdHJpbmcgb2YgdGhlIGZvcm1hdCBgJ21vZHVsZS1uYW1lJ2Agb3IgYCdtb2R1bGUtbmFtZUB2ZXJzaW9uJ2AuXG4gICAgICogU2VlIGRvY3VtZW50YXRpb24gZm9yIGBQbHVnaW4udmVyc2lvblBhcnNlYCBmb3IgYSBkZXNjcmlwdGlvbiBvZiB0aGUgZm9ybWF0LlxuICAgICAqIFRoaXMgZnVuY3Rpb24gY2FuIGFsc28gaGFuZGxlIGRlcGVuZGVuY2llcyB0aGF0IGFyZSBhbHJlYWR5IHJlc29sdmVkIChlLmcuIGEgbW9kdWxlIG9iamVjdCkuXG4gICAgICogQG1ldGhvZCBkZXBlbmRlbmN5UGFyc2VcbiAgICAgKiBAcGFyYW0gZGVwZW5kZW5jeSB7c3RyaW5nfSBUaGUgZGVwZW5kZW5jeSBvZiB0aGUgZm9ybWF0IGAnbW9kdWxlLW5hbWUnYCBvciBgJ21vZHVsZS1uYW1lQHZlcnNpb24nYC5cbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9IFRoZSBkZXBlbmRlbmN5IHBhcnNlZCBpbnRvIGl0cyBjb21wb25lbnRzLlxuICAgICAqL1xuICAgIFBsdWdpbi5kZXBlbmRlbmN5UGFyc2UgPSBmdW5jdGlvbihkZXBlbmRlbmN5KSB7XG4gICAgICAgIGlmIChDb21tb24uaXNTdHJpbmcoZGVwZW5kZW5jeSkpIHtcbiAgICAgICAgICAgIHZhciBwYXR0ZXJuID0gL15bXFx3LV0rKEAoXFwqfFtcXF5+XT9cXGQrXFwuXFxkK1xcLlxcZCsoLVswLTlBLVphLXotXSspPykpPyQvO1xuXG4gICAgICAgICAgICBpZiAoIXBhdHRlcm4udGVzdChkZXBlbmRlbmN5KSkge1xuICAgICAgICAgICAgICAgIENvbW1vbi53YXJuKCdQbHVnaW4uZGVwZW5kZW5jeVBhcnNlOicsIGRlcGVuZGVuY3ksICdpcyBub3QgYSB2YWxpZCBkZXBlbmRlbmN5IHN0cmluZy4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBkZXBlbmRlbmN5LnNwbGl0KCdAJylbMF0sXG4gICAgICAgICAgICAgICAgcmFuZ2U6IGRlcGVuZGVuY3kuc3BsaXQoJ0AnKVsxXSB8fCAnKidcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogZGVwZW5kZW5jeS5uYW1lLFxuICAgICAgICAgICAgcmFuZ2U6IGRlcGVuZGVuY3kucmFuZ2UgfHwgZGVwZW5kZW5jeS52ZXJzaW9uXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFBhcnNlcyBhIHZlcnNpb24gc3RyaW5nIGludG8gaXRzIGNvbXBvbmVudHMuICBcbiAgICAgKiBWZXJzaW9ucyBhcmUgc3RyaWN0bHkgb2YgdGhlIGZvcm1hdCBgeC55LnpgIChhcyBpbiBbc2VtdmVyXShodHRwOi8vc2VtdmVyLm9yZy8pKS5cbiAgICAgKiBWZXJzaW9ucyBtYXkgb3B0aW9uYWxseSBoYXZlIGEgcHJlcmVsZWFzZSB0YWcgaW4gdGhlIGZvcm1hdCBgeC55LnotYWxwaGFgLlxuICAgICAqIFJhbmdlcyBhcmUgYSBzdHJpY3Qgc3Vic2V0IG9mIFtucG0gcmFuZ2VzXShodHRwczovL2RvY3MubnBtanMuY29tL21pc2Mvc2VtdmVyI2FkdmFuY2VkLXJhbmdlLXN5bnRheCkuXG4gICAgICogT25seSB0aGUgZm9sbG93aW5nIHJhbmdlIHR5cGVzIGFyZSBzdXBwb3J0ZWQ6XG4gICAgICogLSBUaWxkZSByYW5nZXMgZS5nLiBgfjEuMi4zYFxuICAgICAqIC0gQ2FyZXQgcmFuZ2VzIGUuZy4gYF4xLjIuM2BcbiAgICAgKiAtIEV4YWN0IHZlcnNpb24gZS5nLiBgMS4yLjNgXG4gICAgICogLSBBbnkgdmVyc2lvbiBgKmBcbiAgICAgKiBAbWV0aG9kIHZlcnNpb25QYXJzZVxuICAgICAqIEBwYXJhbSByYW5nZSB7c3RyaW5nfSBUaGUgdmVyc2lvbiBzdHJpbmcuXG4gICAgICogQHJldHVybiB7b2JqZWN0fSBUaGUgdmVyc2lvbiByYW5nZSBwYXJzZWQgaW50byBpdHMgY29tcG9uZW50cy5cbiAgICAgKi9cbiAgICBQbHVnaW4udmVyc2lvblBhcnNlID0gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgdmFyIHBhdHRlcm4gPSAvXlxcKnxbXFxefl0/XFxkK1xcLlxcZCtcXC5cXGQrKC1bMC05QS1aYS16LV0rKT8kLztcblxuICAgICAgICBpZiAoIXBhdHRlcm4udGVzdChyYW5nZSkpIHtcbiAgICAgICAgICAgIENvbW1vbi53YXJuKCdQbHVnaW4udmVyc2lvblBhcnNlOicsIHJhbmdlLCAnaXMgbm90IGEgdmFsaWQgdmVyc2lvbiBvciByYW5nZS4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpZGVudGlmaWVycyA9IHJhbmdlLnNwbGl0KCctJyk7XG4gICAgICAgIHJhbmdlID0gaWRlbnRpZmllcnNbMF07XG5cbiAgICAgICAgdmFyIGlzUmFuZ2UgPSBpc05hTihOdW1iZXIocmFuZ2VbMF0pKSxcbiAgICAgICAgICAgIHZlcnNpb24gPSBpc1JhbmdlID8gcmFuZ2Uuc3Vic3RyKDEpIDogcmFuZ2UsXG4gICAgICAgICAgICBwYXJ0cyA9IENvbW1vbi5tYXAodmVyc2lvbi5zcGxpdCgnLicpLCBmdW5jdGlvbihwYXJ0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihwYXJ0KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpc1JhbmdlOiBpc1JhbmdlLFxuICAgICAgICAgICAgdmVyc2lvbjogdmVyc2lvbixcbiAgICAgICAgICAgIHJhbmdlOiByYW5nZSxcbiAgICAgICAgICAgIG9wZXJhdG9yOiBpc1JhbmdlID8gcmFuZ2VbMF0gOiAnJyxcbiAgICAgICAgICAgIHBhcnRzOiBwYXJ0cyxcbiAgICAgICAgICAgIHByZXJlbGVhc2U6IGlkZW50aWZpZXJzWzFdLFxuICAgICAgICAgICAgbnVtYmVyOiBwYXJ0c1swXSAqIDFlOCArIHBhcnRzWzFdICogMWU0ICsgcGFydHNbMl1cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgYHZlcnNpb25gIHNhdGlzZmllcyB0aGUgZ2l2ZW4gYHJhbmdlYC5cbiAgICAgKiBTZWUgZG9jdW1lbnRhdGlvbiBmb3IgYFBsdWdpbi52ZXJzaW9uUGFyc2VgIGZvciBhIGRlc2NyaXB0aW9uIG9mIHRoZSBmb3JtYXQuXG4gICAgICogSWYgYSB2ZXJzaW9uIG9yIHJhbmdlIGlzIG5vdCBzcGVjaWZpZWQsIHRoZW4gYW55IHZlcnNpb24gKGAqYCkgaXMgYXNzdW1lZCB0byBzYXRpc2Z5LlxuICAgICAqIEBtZXRob2QgdmVyc2lvblNhdGlzZmllc1xuICAgICAqIEBwYXJhbSB2ZXJzaW9uIHtzdHJpbmd9IFRoZSB2ZXJzaW9uIHN0cmluZy5cbiAgICAgKiBAcGFyYW0gcmFuZ2Uge3N0cmluZ30gVGhlIHJhbmdlIHN0cmluZy5cbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBgdHJ1ZWAgaWYgYHZlcnNpb25gIHNhdGlzZmllcyBgcmFuZ2VgLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICBQbHVnaW4udmVyc2lvblNhdGlzZmllcyA9IGZ1bmN0aW9uKHZlcnNpb24sIHJhbmdlKSB7XG4gICAgICAgIHJhbmdlID0gcmFuZ2UgfHwgJyonO1xuXG4gICAgICAgIHZhciByYW5nZVBhcnNlZCA9IFBsdWdpbi52ZXJzaW9uUGFyc2UocmFuZ2UpLFxuICAgICAgICAgICAgcmFuZ2VQYXJ0cyA9IHJhbmdlUGFyc2VkLnBhcnRzLFxuICAgICAgICAgICAgdmVyc2lvblBhcnNlZCA9IFBsdWdpbi52ZXJzaW9uUGFyc2UodmVyc2lvbiksXG4gICAgICAgICAgICB2ZXJzaW9uUGFydHMgPSB2ZXJzaW9uUGFyc2VkLnBhcnRzO1xuXG4gICAgICAgIGlmIChyYW5nZVBhcnNlZC5pc1JhbmdlKSB7XG4gICAgICAgICAgICBpZiAocmFuZ2VQYXJzZWQub3BlcmF0b3IgPT09ICcqJyB8fCB2ZXJzaW9uID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHJhbmdlUGFyc2VkLm9wZXJhdG9yID09PSAnficpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmVyc2lvblBhcnRzWzBdID09PSByYW5nZVBhcnRzWzBdICYmIHZlcnNpb25QYXJ0c1sxXSA9PT0gcmFuZ2VQYXJ0c1sxXSAmJiB2ZXJzaW9uUGFydHNbMl0gPj0gcmFuZ2VQYXJ0c1syXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHJhbmdlUGFyc2VkLm9wZXJhdG9yID09PSAnXicpIHtcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2VQYXJ0c1swXSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZlcnNpb25QYXJ0c1swXSA9PT0gcmFuZ2VQYXJ0c1swXSAmJiB2ZXJzaW9uUGFyc2VkLm51bWJlciA+PSByYW5nZVBhcnNlZC5udW1iZXI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlUGFydHNbMV0gPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2ZXJzaW9uUGFydHNbMV0gPT09IHJhbmdlUGFydHNbMV0gJiYgdmVyc2lvblBhcnRzWzJdID49IHJhbmdlUGFydHNbMl07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZlcnNpb25QYXJ0c1syXSA9PT0gcmFuZ2VQYXJ0c1syXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2ZXJzaW9uID09PSByYW5nZSB8fCB2ZXJzaW9uID09PSAnKic7XG4gICAgfTtcblxufSkoKTtcblxufSx7XCIuL0NvbW1vblwiOjE0fV0sMjE6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLlJ1bm5lcmAgbW9kdWxlIGlzIGFuIG9wdGlvbmFsIHV0aWxpdHkgd2hpY2ggcHJvdmlkZXMgYSBnYW1lIGxvb3AsIFxuKiB0aGF0IGhhbmRsZXMgY29udGludW91c2x5IHVwZGF0aW5nIGEgYE1hdHRlci5FbmdpbmVgIGZvciB5b3Ugd2l0aGluIGEgYnJvd3Nlci5cbiogSXQgaXMgaW50ZW5kZWQgZm9yIGRldmVsb3BtZW50IGFuZCBkZWJ1Z2dpbmcgcHVycG9zZXMsIGJ1dCBtYXkgYWxzbyBiZSBzdWl0YWJsZSBmb3Igc2ltcGxlIGdhbWVzLlxuKiBJZiB5b3UgYXJlIHVzaW5nIHlvdXIgb3duIGdhbWUgbG9vcCBpbnN0ZWFkLCB0aGVuIHlvdSBkbyBub3QgbmVlZCB0aGUgYE1hdHRlci5SdW5uZXJgIG1vZHVsZS5cbiogSW5zdGVhZCBqdXN0IGNhbGwgYEVuZ2luZS51cGRhdGUoZW5naW5lLCBkZWx0YSlgIGluIHlvdXIgb3duIGxvb3AuXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBSdW5uZXJcbiovXG5cbnZhciBSdW5uZXIgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBSdW5uZXI7XG5cbnZhciBFdmVudHMgPSBfZGVyZXFfKCcuL0V2ZW50cycpO1xudmFyIEVuZ2luZSA9IF9kZXJlcV8oJy4vRW5naW5lJyk7XG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgdmFyIF9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsXG4gICAgICAgIF9jYW5jZWxBbmltYXRpb25GcmFtZTtcblxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lO1xuICAgXG4gICAgICAgIF9jYW5jZWxBbmltYXRpb25GcmFtZSA9IHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWUgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IHdpbmRvdy53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubXNDYW5jZWxBbmltYXRpb25GcmFtZTtcbiAgICB9XG5cbiAgICBpZiAoIV9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgICAgdmFyIF9mcmFtZVRpbWVvdXQ7XG5cbiAgICAgICAgX3JlcXVlc3RBbmltYXRpb25GcmFtZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKXsgXG4gICAgICAgICAgICBfZnJhbWVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHsgXG4gICAgICAgICAgICAgICAgY2FsbGJhY2soQ29tbW9uLm5vdygpKTsgXG4gICAgICAgICAgICB9LCAxMDAwIC8gNjApO1xuICAgICAgICB9O1xuXG4gICAgICAgIF9jYW5jZWxBbmltYXRpb25GcmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KF9mcmFtZVRpbWVvdXQpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgUnVubmVyLiBUaGUgb3B0aW9ucyBwYXJhbWV0ZXIgaXMgYW4gb2JqZWN0IHRoYXQgc3BlY2lmaWVzIGFueSBwcm9wZXJ0aWVzIHlvdSB3aXNoIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0cy5cbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBwYXJhbSB7fSBvcHRpb25zXG4gICAgICovXG4gICAgUnVubmVyLmNyZWF0ZSA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGRlZmF1bHRzID0ge1xuICAgICAgICAgICAgZnBzOiA2MCxcbiAgICAgICAgICAgIGNvcnJlY3Rpb246IDEsXG4gICAgICAgICAgICBkZWx0YVNhbXBsZVNpemU6IDYwLFxuICAgICAgICAgICAgY291bnRlclRpbWVzdGFtcDogMCxcbiAgICAgICAgICAgIGZyYW1lQ291bnRlcjogMCxcbiAgICAgICAgICAgIGRlbHRhSGlzdG9yeTogW10sXG4gICAgICAgICAgICB0aW1lUHJldjogbnVsbCxcbiAgICAgICAgICAgIHRpbWVTY2FsZVByZXY6IDEsXG4gICAgICAgICAgICBmcmFtZVJlcXVlc3RJZDogbnVsbCxcbiAgICAgICAgICAgIGlzRml4ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBydW5uZXIgPSBDb21tb24uZXh0ZW5kKGRlZmF1bHRzLCBvcHRpb25zKTtcblxuICAgICAgICBydW5uZXIuZGVsdGEgPSBydW5uZXIuZGVsdGEgfHwgMTAwMCAvIHJ1bm5lci5mcHM7XG4gICAgICAgIHJ1bm5lci5kZWx0YU1pbiA9IHJ1bm5lci5kZWx0YU1pbiB8fCAxMDAwIC8gcnVubmVyLmZwcztcbiAgICAgICAgcnVubmVyLmRlbHRhTWF4ID0gcnVubmVyLmRlbHRhTWF4IHx8IDEwMDAgLyAocnVubmVyLmZwcyAqIDAuNSk7XG4gICAgICAgIHJ1bm5lci5mcHMgPSAxMDAwIC8gcnVubmVyLmRlbHRhO1xuXG4gICAgICAgIHJldHVybiBydW5uZXI7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENvbnRpbnVvdXNseSB0aWNrcyBhIGBNYXR0ZXIuRW5naW5lYCBieSBjYWxsaW5nIGBSdW5uZXIudGlja2Agb24gdGhlIGByZXF1ZXN0QW5pbWF0aW9uRnJhbWVgIGV2ZW50LlxuICAgICAqIEBtZXRob2QgcnVuXG4gICAgICogQHBhcmFtIHtlbmdpbmV9IGVuZ2luZVxuICAgICAqL1xuICAgIFJ1bm5lci5ydW4gPSBmdW5jdGlvbihydW5uZXIsIGVuZ2luZSkge1xuICAgICAgICAvLyBjcmVhdGUgcnVubmVyIGlmIGVuZ2luZSBpcyBmaXJzdCBhcmd1bWVudFxuICAgICAgICBpZiAodHlwZW9mIHJ1bm5lci5wb3NpdGlvbkl0ZXJhdGlvbnMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBlbmdpbmUgPSBydW5uZXI7XG4gICAgICAgICAgICBydW5uZXIgPSBSdW5uZXIuY3JlYXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAoZnVuY3Rpb24gcmVuZGVyKHRpbWUpe1xuICAgICAgICAgICAgcnVubmVyLmZyYW1lUmVxdWVzdElkID0gX3JlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuXG4gICAgICAgICAgICBpZiAodGltZSAmJiBydW5uZXIuZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIFJ1bm5lci50aWNrKHJ1bm5lciwgZW5naW5lLCB0aW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcblxuICAgICAgICByZXR1cm4gcnVubmVyO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBIGdhbWUgbG9vcCB1dGlsaXR5IHRoYXQgdXBkYXRlcyB0aGUgZW5naW5lIGFuZCByZW5kZXJlciBieSBvbmUgc3RlcCAoYSAndGljaycpLlxuICAgICAqIEZlYXR1cmVzIGRlbHRhIHNtb290aGluZywgdGltZSBjb3JyZWN0aW9uIGFuZCBmaXhlZCBvciBkeW5hbWljIHRpbWluZy5cbiAgICAgKiBUcmlnZ2VycyBgYmVmb3JlVGlja2AsIGB0aWNrYCBhbmQgYGFmdGVyVGlja2AgZXZlbnRzIG9uIHRoZSBlbmdpbmUuXG4gICAgICogQ29uc2lkZXIganVzdCBgRW5naW5lLnVwZGF0ZShlbmdpbmUsIGRlbHRhKWAgaWYgeW91J3JlIHVzaW5nIHlvdXIgb3duIGxvb3AuXG4gICAgICogQG1ldGhvZCB0aWNrXG4gICAgICogQHBhcmFtIHtydW5uZXJ9IHJ1bm5lclxuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVxuICAgICAqL1xuICAgIFJ1bm5lci50aWNrID0gZnVuY3Rpb24ocnVubmVyLCBlbmdpbmUsIHRpbWUpIHtcbiAgICAgICAgdmFyIHRpbWluZyA9IGVuZ2luZS50aW1pbmcsXG4gICAgICAgICAgICBjb3JyZWN0aW9uID0gMSxcbiAgICAgICAgICAgIGRlbHRhO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBhbiBldmVudCBvYmplY3RcbiAgICAgICAgdmFyIGV2ZW50ID0ge1xuICAgICAgICAgICAgdGltZXN0YW1wOiB0aW1pbmcudGltZXN0YW1wXG4gICAgICAgIH07XG5cbiAgICAgICAgRXZlbnRzLnRyaWdnZXIocnVubmVyLCAnYmVmb3JlVGljaycsIGV2ZW50KTtcbiAgICAgICAgRXZlbnRzLnRyaWdnZXIoZW5naW5lLCAnYmVmb3JlVGljaycsIGV2ZW50KTsgLy8gQGRlcHJlY2F0ZWRcblxuICAgICAgICBpZiAocnVubmVyLmlzRml4ZWQpIHtcbiAgICAgICAgICAgIC8vIGZpeGVkIHRpbWVzdGVwXG4gICAgICAgICAgICBkZWx0YSA9IHJ1bm5lci5kZWx0YTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGR5bmFtaWMgdGltZXN0ZXAgYmFzZWQgb24gd2FsbCBjbG9jayBiZXR3ZWVuIGNhbGxzXG4gICAgICAgICAgICBkZWx0YSA9ICh0aW1lIC0gcnVubmVyLnRpbWVQcmV2KSB8fCBydW5uZXIuZGVsdGE7XG4gICAgICAgICAgICBydW5uZXIudGltZVByZXYgPSB0aW1lO1xuXG4gICAgICAgICAgICAvLyBvcHRpbWlzdGljYWxseSBmaWx0ZXIgZGVsdGEgb3ZlciBhIGZldyBmcmFtZXMsIHRvIGltcHJvdmUgc3RhYmlsaXR5XG4gICAgICAgICAgICBydW5uZXIuZGVsdGFIaXN0b3J5LnB1c2goZGVsdGEpO1xuICAgICAgICAgICAgcnVubmVyLmRlbHRhSGlzdG9yeSA9IHJ1bm5lci5kZWx0YUhpc3Rvcnkuc2xpY2UoLXJ1bm5lci5kZWx0YVNhbXBsZVNpemUpO1xuICAgICAgICAgICAgZGVsdGEgPSBNYXRoLm1pbi5hcHBseShudWxsLCBydW5uZXIuZGVsdGFIaXN0b3J5KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gbGltaXQgZGVsdGFcbiAgICAgICAgICAgIGRlbHRhID0gZGVsdGEgPCBydW5uZXIuZGVsdGFNaW4gPyBydW5uZXIuZGVsdGFNaW4gOiBkZWx0YTtcbiAgICAgICAgICAgIGRlbHRhID0gZGVsdGEgPiBydW5uZXIuZGVsdGFNYXggPyBydW5uZXIuZGVsdGFNYXggOiBkZWx0YTtcblxuICAgICAgICAgICAgLy8gY29ycmVjdGlvbiBmb3IgZGVsdGFcbiAgICAgICAgICAgIGNvcnJlY3Rpb24gPSBkZWx0YSAvIHJ1bm5lci5kZWx0YTtcblxuICAgICAgICAgICAgLy8gdXBkYXRlIGVuZ2luZSB0aW1pbmcgb2JqZWN0XG4gICAgICAgICAgICBydW5uZXIuZGVsdGEgPSBkZWx0YTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHRpbWUgY29ycmVjdGlvbiBmb3IgdGltZSBzY2FsaW5nXG4gICAgICAgIGlmIChydW5uZXIudGltZVNjYWxlUHJldiAhPT0gMClcbiAgICAgICAgICAgIGNvcnJlY3Rpb24gKj0gdGltaW5nLnRpbWVTY2FsZSAvIHJ1bm5lci50aW1lU2NhbGVQcmV2O1xuXG4gICAgICAgIGlmICh0aW1pbmcudGltZVNjYWxlID09PSAwKVxuICAgICAgICAgICAgY29ycmVjdGlvbiA9IDA7XG5cbiAgICAgICAgcnVubmVyLnRpbWVTY2FsZVByZXYgPSB0aW1pbmcudGltZVNjYWxlO1xuICAgICAgICBydW5uZXIuY29ycmVjdGlvbiA9IGNvcnJlY3Rpb247XG5cbiAgICAgICAgLy8gZnBzIGNvdW50ZXJcbiAgICAgICAgcnVubmVyLmZyYW1lQ291bnRlciArPSAxO1xuICAgICAgICBpZiAodGltZSAtIHJ1bm5lci5jb3VudGVyVGltZXN0YW1wID49IDEwMDApIHtcbiAgICAgICAgICAgIHJ1bm5lci5mcHMgPSBydW5uZXIuZnJhbWVDb3VudGVyICogKCh0aW1lIC0gcnVubmVyLmNvdW50ZXJUaW1lc3RhbXApIC8gMTAwMCk7XG4gICAgICAgICAgICBydW5uZXIuY291bnRlclRpbWVzdGFtcCA9IHRpbWU7XG4gICAgICAgICAgICBydW5uZXIuZnJhbWVDb3VudGVyID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIEV2ZW50cy50cmlnZ2VyKHJ1bm5lciwgJ3RpY2snLCBldmVudCk7XG4gICAgICAgIEV2ZW50cy50cmlnZ2VyKGVuZ2luZSwgJ3RpY2snLCBldmVudCk7IC8vIEBkZXByZWNhdGVkXG5cbiAgICAgICAgLy8gaWYgd29ybGQgaGFzIGJlZW4gbW9kaWZpZWQsIGNsZWFyIHRoZSByZW5kZXIgc2NlbmUgZ3JhcGhcbiAgICAgICAgaWYgKGVuZ2luZS53b3JsZC5pc01vZGlmaWVkIFxuICAgICAgICAgICAgJiYgZW5naW5lLnJlbmRlclxuICAgICAgICAgICAgJiYgZW5naW5lLnJlbmRlci5jb250cm9sbGVyXG4gICAgICAgICAgICAmJiBlbmdpbmUucmVuZGVyLmNvbnRyb2xsZXIuY2xlYXIpIHtcbiAgICAgICAgICAgIGVuZ2luZS5yZW5kZXIuY29udHJvbGxlci5jbGVhcihlbmdpbmUucmVuZGVyKTsgLy8gQGRlcHJlY2F0ZWRcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZVxuICAgICAgICBFdmVudHMudHJpZ2dlcihydW5uZXIsICdiZWZvcmVVcGRhdGUnLCBldmVudCk7XG4gICAgICAgIEVuZ2luZS51cGRhdGUoZW5naW5lLCBkZWx0YSwgY29ycmVjdGlvbik7XG4gICAgICAgIEV2ZW50cy50cmlnZ2VyKHJ1bm5lciwgJ2FmdGVyVXBkYXRlJywgZXZlbnQpO1xuXG4gICAgICAgIC8vIHJlbmRlclxuICAgICAgICAvLyBAZGVwcmVjYXRlZFxuICAgICAgICBpZiAoZW5naW5lLnJlbmRlciAmJiBlbmdpbmUucmVuZGVyLmNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIEV2ZW50cy50cmlnZ2VyKHJ1bm5lciwgJ2JlZm9yZVJlbmRlcicsIGV2ZW50KTtcbiAgICAgICAgICAgIEV2ZW50cy50cmlnZ2VyKGVuZ2luZSwgJ2JlZm9yZVJlbmRlcicsIGV2ZW50KTsgLy8gQGRlcHJlY2F0ZWRcblxuICAgICAgICAgICAgZW5naW5lLnJlbmRlci5jb250cm9sbGVyLndvcmxkKGVuZ2luZS5yZW5kZXIpO1xuXG4gICAgICAgICAgICBFdmVudHMudHJpZ2dlcihydW5uZXIsICdhZnRlclJlbmRlcicsIGV2ZW50KTtcbiAgICAgICAgICAgIEV2ZW50cy50cmlnZ2VyKGVuZ2luZSwgJ2FmdGVyUmVuZGVyJywgZXZlbnQpOyAvLyBAZGVwcmVjYXRlZFxuICAgICAgICB9XG5cbiAgICAgICAgRXZlbnRzLnRyaWdnZXIocnVubmVyLCAnYWZ0ZXJUaWNrJywgZXZlbnQpO1xuICAgICAgICBFdmVudHMudHJpZ2dlcihlbmdpbmUsICdhZnRlclRpY2snLCBldmVudCk7IC8vIEBkZXByZWNhdGVkXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEVuZHMgZXhlY3V0aW9uIG9mIGBSdW5uZXIucnVuYCBvbiB0aGUgZ2l2ZW4gYHJ1bm5lcmAsIGJ5IGNhbmNlbGluZyB0aGUgYW5pbWF0aW9uIGZyYW1lIHJlcXVlc3QgZXZlbnQgbG9vcC5cbiAgICAgKiBJZiB5b3Ugd2lzaCB0byBvbmx5IHRlbXBvcmFyaWx5IHBhdXNlIHRoZSBlbmdpbmUsIHNlZSBgZW5naW5lLmVuYWJsZWRgIGluc3RlYWQuXG4gICAgICogQG1ldGhvZCBzdG9wXG4gICAgICogQHBhcmFtIHtydW5uZXJ9IHJ1bm5lclxuICAgICAqL1xuICAgIFJ1bm5lci5zdG9wID0gZnVuY3Rpb24ocnVubmVyKSB7XG4gICAgICAgIF9jYW5jZWxBbmltYXRpb25GcmFtZShydW5uZXIuZnJhbWVSZXF1ZXN0SWQpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBbGlhcyBmb3IgYFJ1bm5lci5ydW5gLlxuICAgICAqIEBtZXRob2Qgc3RhcnRcbiAgICAgKiBAcGFyYW0ge3J1bm5lcn0gcnVubmVyXG4gICAgICogQHBhcmFtIHtlbmdpbmV9IGVuZ2luZVxuICAgICAqL1xuICAgIFJ1bm5lci5zdGFydCA9IGZ1bmN0aW9uKHJ1bm5lciwgZW5naW5lKSB7XG4gICAgICAgIFJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpO1xuICAgIH07XG5cbiAgICAvKlxuICAgICpcbiAgICAqICBFdmVudHMgRG9jdW1lbnRhdGlvblxuICAgICpcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCBhdCB0aGUgc3RhcnQgb2YgYSB0aWNrLCBiZWZvcmUgYW55IHVwZGF0ZXMgdG8gdGhlIGVuZ2luZSBvciB0aW1pbmdcbiAgICAqXG4gICAgKiBAZXZlbnQgYmVmb3JlVGlja1xuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGV2ZW50LnRpbWVzdGFtcCBUaGUgZW5naW5lLnRpbWluZy50aW1lc3RhbXAgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgYWZ0ZXIgZW5naW5lIHRpbWluZyB1cGRhdGVkLCBidXQganVzdCBiZWZvcmUgdXBkYXRlXG4gICAgKlxuICAgICogQGV2ZW50IHRpY2tcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBldmVudC50aW1lc3RhbXAgVGhlIGVuZ2luZS50aW1pbmcudGltZXN0YW1wIG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50LnNvdXJjZSBUaGUgc291cmNlIG9iamVjdCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5uYW1lIFRoZSBuYW1lIG9mIHRoZSBldmVudFxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIGF0IHRoZSBlbmQgb2YgYSB0aWNrLCBhZnRlciBlbmdpbmUgdXBkYXRlIGFuZCBhZnRlciByZW5kZXJpbmdcbiAgICAqXG4gICAgKiBAZXZlbnQgYWZ0ZXJUaWNrXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge251bWJlcn0gZXZlbnQudGltZXN0YW1wIFRoZSBlbmdpbmUudGltaW5nLnRpbWVzdGFtcCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCBiZWZvcmUgdXBkYXRlXG4gICAgKlxuICAgICogQGV2ZW50IGJlZm9yZVVwZGF0ZVxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGV2ZW50LnRpbWVzdGFtcCBUaGUgZW5naW5lLnRpbWluZy50aW1lc3RhbXAgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKi9cblxuICAgIC8qKlxuICAgICogRmlyZWQgYWZ0ZXIgdXBkYXRlXG4gICAgKlxuICAgICogQGV2ZW50IGFmdGVyVXBkYXRlXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge251bWJlcn0gZXZlbnQudGltZXN0YW1wIFRoZSBlbmdpbmUudGltaW5nLnRpbWVzdGFtcCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCBiZWZvcmUgcmVuZGVyaW5nXG4gICAgKlxuICAgICogQGV2ZW50IGJlZm9yZVJlbmRlclxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGV2ZW50LnRpbWVzdGFtcCBUaGUgZW5naW5lLnRpbWluZy50aW1lc3RhbXAgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKiBAZGVwcmVjYXRlZFxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIGFmdGVyIHJlbmRlcmluZ1xuICAgICpcbiAgICAqIEBldmVudCBhZnRlclJlbmRlclxuICAgICogQHBhcmFtIHt9IGV2ZW50IEFuIGV2ZW50IG9iamVjdFxuICAgICogQHBhcmFtIHtudW1iZXJ9IGV2ZW50LnRpbWVzdGFtcCBUaGUgZW5naW5lLnRpbWluZy50aW1lc3RhbXAgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQuc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0IG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50Lm5hbWUgVGhlIG5hbWUgb2YgdGhlIGV2ZW50XG4gICAgKiBAZGVwcmVjYXRlZFxuICAgICovXG5cbiAgICAvKlxuICAgICpcbiAgICAqICBQcm9wZXJ0aWVzIERvY3VtZW50YXRpb25cbiAgICAqXG4gICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgZmxhZyB0aGF0IHNwZWNpZmllcyB3aGV0aGVyIHRoZSBydW5uZXIgaXMgcnVubmluZyBvciBub3QuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZW5hYmxlZFxuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBCb29sZWFuYCB0aGF0IHNwZWNpZmllcyBpZiB0aGUgcnVubmVyIHNob3VsZCB1c2UgYSBmaXhlZCB0aW1lc3RlcCAob3RoZXJ3aXNlIGl0IGlzIHZhcmlhYmxlKS5cbiAgICAgKiBJZiB0aW1pbmcgaXMgZml4ZWQsIHRoZW4gdGhlIGFwcGFyZW50IHNpbXVsYXRpb24gc3BlZWQgd2lsbCBjaGFuZ2UgZGVwZW5kaW5nIG9uIHRoZSBmcmFtZSByYXRlIChidXQgYmVoYXZpb3VyIHdpbGwgYmUgZGV0ZXJtaW5pc3RpYykuXG4gICAgICogSWYgdGhlIHRpbWluZyBpcyB2YXJpYWJsZSwgdGhlbiB0aGUgYXBwYXJlbnQgc2ltdWxhdGlvbiBzcGVlZCB3aWxsIGJlIGNvbnN0YW50IChhcHByb3hpbWF0ZWx5LCBidXQgYXQgdGhlIGNvc3Qgb2YgZGV0ZXJtaW5pbmlzbSkuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgaXNGaXhlZFxuICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSBgTnVtYmVyYCB0aGF0IHNwZWNpZmllcyB0aGUgdGltZSBzdGVwIGJldHdlZW4gdXBkYXRlcyBpbiBtaWxsaXNlY29uZHMuXG4gICAgICogSWYgYGVuZ2luZS50aW1pbmcuaXNGaXhlZGAgaXMgc2V0IHRvIGB0cnVlYCwgdGhlbiBgZGVsdGFgIGlzIGZpeGVkLlxuICAgICAqIElmIGl0IGlzIGBmYWxzZWAsIHRoZW4gYGRlbHRhYCBjYW4gZHluYW1pY2FsbHkgY2hhbmdlIHRvIG1haW50YWluIHRoZSBjb3JyZWN0IGFwcGFyZW50IHNpbXVsYXRpb24gc3BlZWQuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZGVsdGFcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCAxMDAwIC8gNjBcbiAgICAgKi9cblxufSkoKTtcblxufSx7XCIuL0NvbW1vblwiOjE0LFwiLi9FbmdpbmVcIjoxNSxcIi4vRXZlbnRzXCI6MTZ9XSwyMjpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuU2xlZXBpbmdgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIHRvIG1hbmFnZSB0aGUgc2xlZXBpbmcgc3RhdGUgb2YgYm9kaWVzLlxuKlxuKiBAY2xhc3MgU2xlZXBpbmdcbiovXG5cbnZhciBTbGVlcGluZyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNsZWVwaW5nO1xuXG52YXIgRXZlbnRzID0gX2RlcmVxXygnLi9FdmVudHMnKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgU2xlZXBpbmcuX21vdGlvbldha2VUaHJlc2hvbGQgPSAwLjE4O1xuICAgIFNsZWVwaW5nLl9tb3Rpb25TbGVlcFRocmVzaG9sZCA9IDAuMDg7XG4gICAgU2xlZXBpbmcuX21pbkJpYXMgPSAwLjk7XG5cbiAgICAvKipcbiAgICAgKiBQdXRzIGJvZGllcyB0byBzbGVlcCBvciB3YWtlcyB0aGVtIHVwIGRlcGVuZGluZyBvbiB0aGVpciBtb3Rpb24uXG4gICAgICogQG1ldGhvZCB1cGRhdGVcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVTY2FsZVxuICAgICAqL1xuICAgIFNsZWVwaW5nLnVwZGF0ZSA9IGZ1bmN0aW9uKGJvZGllcywgdGltZVNjYWxlKSB7XG4gICAgICAgIHZhciB0aW1lRmFjdG9yID0gdGltZVNjYWxlICogdGltZVNjYWxlICogdGltZVNjYWxlO1xuXG4gICAgICAgIC8vIHVwZGF0ZSBib2RpZXMgc2xlZXBpbmcgc3RhdHVzXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXSxcbiAgICAgICAgICAgICAgICBtb3Rpb24gPSBib2R5LnNwZWVkICogYm9keS5zcGVlZCArIGJvZHkuYW5ndWxhclNwZWVkICogYm9keS5hbmd1bGFyU3BlZWQ7XG5cbiAgICAgICAgICAgIC8vIHdha2UgdXAgYm9kaWVzIGlmIHRoZXkgaGF2ZSBhIGZvcmNlIGFwcGxpZWRcbiAgICAgICAgICAgIGlmIChib2R5LmZvcmNlLnggIT09IDAgfHwgYm9keS5mb3JjZS55ICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgU2xlZXBpbmcuc2V0KGJvZHksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG1pbk1vdGlvbiA9IE1hdGgubWluKGJvZHkubW90aW9uLCBtb3Rpb24pLFxuICAgICAgICAgICAgICAgIG1heE1vdGlvbiA9IE1hdGgubWF4KGJvZHkubW90aW9uLCBtb3Rpb24pO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIGJpYXNlZCBhdmVyYWdlIG1vdGlvbiBlc3RpbWF0aW9uIGJldHdlZW4gZnJhbWVzXG4gICAgICAgICAgICBib2R5Lm1vdGlvbiA9IFNsZWVwaW5nLl9taW5CaWFzICogbWluTW90aW9uICsgKDEgLSBTbGVlcGluZy5fbWluQmlhcykgKiBtYXhNb3Rpb247XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChib2R5LnNsZWVwVGhyZXNob2xkID4gMCAmJiBib2R5Lm1vdGlvbiA8IFNsZWVwaW5nLl9tb3Rpb25TbGVlcFRocmVzaG9sZCAqIHRpbWVGYWN0b3IpIHtcbiAgICAgICAgICAgICAgICBib2R5LnNsZWVwQ291bnRlciArPSAxO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChib2R5LnNsZWVwQ291bnRlciA+PSBib2R5LnNsZWVwVGhyZXNob2xkKVxuICAgICAgICAgICAgICAgICAgICBTbGVlcGluZy5zZXQoYm9keSwgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJvZHkuc2xlZXBDb3VudGVyID4gMCkge1xuICAgICAgICAgICAgICAgIGJvZHkuc2xlZXBDb3VudGVyIC09IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2l2ZW4gYSBzZXQgb2YgY29sbGlkaW5nIHBhaXJzLCB3YWtlcyB0aGUgc2xlZXBpbmcgYm9kaWVzIGludm9sdmVkLlxuICAgICAqIEBtZXRob2QgYWZ0ZXJDb2xsaXNpb25zXG4gICAgICogQHBhcmFtIHtwYWlyW119IHBhaXJzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVTY2FsZVxuICAgICAqL1xuICAgIFNsZWVwaW5nLmFmdGVyQ29sbGlzaW9ucyA9IGZ1bmN0aW9uKHBhaXJzLCB0aW1lU2NhbGUpIHtcbiAgICAgICAgdmFyIHRpbWVGYWN0b3IgPSB0aW1lU2NhbGUgKiB0aW1lU2NhbGUgKiB0aW1lU2NhbGU7XG5cbiAgICAgICAgLy8gd2FrZSB1cCBib2RpZXMgaW52b2x2ZWQgaW4gY29sbGlzaW9uc1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhaXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFpciA9IHBhaXJzW2ldO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBkb24ndCB3YWtlIGluYWN0aXZlIHBhaXJzXG4gICAgICAgICAgICBpZiAoIXBhaXIuaXNBY3RpdmUpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIHZhciBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbixcbiAgICAgICAgICAgICAgICBib2R5QSA9IGNvbGxpc2lvbi5ib2R5QS5wYXJlbnQsIFxuICAgICAgICAgICAgICAgIGJvZHlCID0gY29sbGlzaW9uLmJvZHlCLnBhcmVudDtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBkb24ndCB3YWtlIGlmIGF0IGxlYXN0IG9uZSBib2R5IGlzIHN0YXRpY1xuICAgICAgICAgICAgaWYgKChib2R5QS5pc1NsZWVwaW5nICYmIGJvZHlCLmlzU2xlZXBpbmcpIHx8IGJvZHlBLmlzU3RhdGljIHx8IGJvZHlCLmlzU3RhdGljKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmIChib2R5QS5pc1NsZWVwaW5nIHx8IGJvZHlCLmlzU2xlZXBpbmcpIHtcbiAgICAgICAgICAgICAgICB2YXIgc2xlZXBpbmdCb2R5ID0gKGJvZHlBLmlzU2xlZXBpbmcgJiYgIWJvZHlBLmlzU3RhdGljKSA/IGJvZHlBIDogYm9keUIsXG4gICAgICAgICAgICAgICAgICAgIG1vdmluZ0JvZHkgPSBzbGVlcGluZ0JvZHkgPT09IGJvZHlBID8gYm9keUIgOiBib2R5QTtcblxuICAgICAgICAgICAgICAgIGlmICghc2xlZXBpbmdCb2R5LmlzU3RhdGljICYmIG1vdmluZ0JvZHkubW90aW9uID4gU2xlZXBpbmcuX21vdGlvbldha2VUaHJlc2hvbGQgKiB0aW1lRmFjdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIFNsZWVwaW5nLnNldChzbGVlcGluZ0JvZHksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICBcbiAgICAvKipcbiAgICAgKiBTZXQgYSBib2R5IGFzIHNsZWVwaW5nIG9yIGF3YWtlLlxuICAgICAqIEBtZXRob2Qgc2V0XG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHBhcmFtIHtib29sZWFufSBpc1NsZWVwaW5nXG4gICAgICovXG4gICAgU2xlZXBpbmcuc2V0ID0gZnVuY3Rpb24oYm9keSwgaXNTbGVlcGluZykge1xuICAgICAgICB2YXIgd2FzU2xlZXBpbmcgPSBib2R5LmlzU2xlZXBpbmc7XG5cbiAgICAgICAgaWYgKGlzU2xlZXBpbmcpIHtcbiAgICAgICAgICAgIGJvZHkuaXNTbGVlcGluZyA9IHRydWU7XG4gICAgICAgICAgICBib2R5LnNsZWVwQ291bnRlciA9IGJvZHkuc2xlZXBUaHJlc2hvbGQ7XG5cbiAgICAgICAgICAgIGJvZHkucG9zaXRpb25JbXB1bHNlLnggPSAwO1xuICAgICAgICAgICAgYm9keS5wb3NpdGlvbkltcHVsc2UueSA9IDA7XG5cbiAgICAgICAgICAgIGJvZHkucG9zaXRpb25QcmV2LnggPSBib2R5LnBvc2l0aW9uLng7XG4gICAgICAgICAgICBib2R5LnBvc2l0aW9uUHJldi55ID0gYm9keS5wb3NpdGlvbi55O1xuXG4gICAgICAgICAgICBib2R5LmFuZ2xlUHJldiA9IGJvZHkuYW5nbGU7XG4gICAgICAgICAgICBib2R5LnNwZWVkID0gMDtcbiAgICAgICAgICAgIGJvZHkuYW5ndWxhclNwZWVkID0gMDtcbiAgICAgICAgICAgIGJvZHkubW90aW9uID0gMDtcblxuICAgICAgICAgICAgaWYgKCF3YXNTbGVlcGluZykge1xuICAgICAgICAgICAgICAgIEV2ZW50cy50cmlnZ2VyKGJvZHksICdzbGVlcFN0YXJ0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBib2R5LmlzU2xlZXBpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIGJvZHkuc2xlZXBDb3VudGVyID0gMDtcblxuICAgICAgICAgICAgaWYgKHdhc1NsZWVwaW5nKSB7XG4gICAgICAgICAgICAgICAgRXZlbnRzLnRyaWdnZXIoYm9keSwgJ3NsZWVwRW5kJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSgpO1xuXG59LHtcIi4vRXZlbnRzXCI6MTZ9XSwyMzpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuQm9kaWVzYCBtb2R1bGUgY29udGFpbnMgZmFjdG9yeSBtZXRob2RzIGZvciBjcmVhdGluZyByaWdpZCBib2R5IG1vZGVscyBcbiogd2l0aCBjb21tb25seSB1c2VkIGJvZHkgY29uZmlndXJhdGlvbnMgKHN1Y2ggYXMgcmVjdGFuZ2xlcywgY2lyY2xlcyBhbmQgb3RoZXIgcG9seWdvbnMpLlxuKlxuKiBTZWUgdGhlIGluY2x1ZGVkIHVzYWdlIFtleGFtcGxlc10oaHR0cHM6Ly9naXRodWIuY29tL2xpYWJydS9tYXR0ZXItanMvdHJlZS9tYXN0ZXIvZXhhbXBsZXMpLlxuKlxuKiBAY2xhc3MgQm9kaWVzXG4qL1xuXG4vLyBUT0RPOiB0cnVlIGNpcmNsZSBib2RpZXNcblxudmFyIEJvZGllcyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJvZGllcztcblxudmFyIFZlcnRpY2VzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvVmVydGljZXMnKTtcbnZhciBDb21tb24gPSBfZGVyZXFfKCcuLi9jb3JlL0NvbW1vbicpO1xudmFyIEJvZHkgPSBfZGVyZXFfKCcuLi9ib2R5L0JvZHknKTtcbnZhciBCb3VuZHMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9Cb3VuZHMnKTtcbnZhciBWZWN0b3IgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcbnZhciBkZWNvbXA7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgcmlnaWQgYm9keSBtb2RlbCB3aXRoIGEgcmVjdGFuZ2xlIGh1bGwuIFxuICAgICAqIFRoZSBvcHRpb25zIHBhcmFtZXRlciBpcyBhbiBvYmplY3QgdGhhdCBzcGVjaWZpZXMgYW55IHByb3BlcnRpZXMgeW91IHdpc2ggdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHRzLlxuICAgICAqIFNlZSB0aGUgcHJvcGVydGllcyBzZWN0aW9uIG9mIHRoZSBgTWF0dGVyLkJvZHlgIG1vZHVsZSBmb3IgZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gd2hhdCB5b3UgY2FuIHBhc3MgdmlhIHRoZSBgb3B0aW9uc2Agb2JqZWN0LlxuICAgICAqIEBtZXRob2QgcmVjdGFuZ2xlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB3aWR0aFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBoZWlnaHRcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gICAgICogQHJldHVybiB7Ym9keX0gQSBuZXcgcmVjdGFuZ2xlIGJvZHlcbiAgICAgKi9cbiAgICBCb2RpZXMucmVjdGFuZ2xlID0gZnVuY3Rpb24oeCwgeSwgd2lkdGgsIGhlaWdodCwgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgICAgICB2YXIgcmVjdGFuZ2xlID0geyBcbiAgICAgICAgICAgIGxhYmVsOiAnUmVjdGFuZ2xlIEJvZHknLFxuICAgICAgICAgICAgcG9zaXRpb246IHsgeDogeCwgeTogeSB9LFxuICAgICAgICAgICAgdmVydGljZXM6IFZlcnRpY2VzLmZyb21QYXRoKCdMIDAgMCBMICcgKyB3aWR0aCArICcgMCBMICcgKyB3aWR0aCArICcgJyArIGhlaWdodCArICcgTCAwICcgKyBoZWlnaHQpXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuY2hhbWZlcikge1xuICAgICAgICAgICAgdmFyIGNoYW1mZXIgPSBvcHRpb25zLmNoYW1mZXI7XG4gICAgICAgICAgICByZWN0YW5nbGUudmVydGljZXMgPSBWZXJ0aWNlcy5jaGFtZmVyKHJlY3RhbmdsZS52ZXJ0aWNlcywgY2hhbWZlci5yYWRpdXMsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbWZlci5xdWFsaXR5LCBjaGFtZmVyLnF1YWxpdHlNaW4sIGNoYW1mZXIucXVhbGl0eU1heCk7XG4gICAgICAgICAgICBkZWxldGUgb3B0aW9ucy5jaGFtZmVyO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIEJvZHkuY3JlYXRlKENvbW1vbi5leHRlbmQoe30sIHJlY3RhbmdsZSwgb3B0aW9ucykpO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyByaWdpZCBib2R5IG1vZGVsIHdpdGggYSB0cmFwZXpvaWQgaHVsbC4gXG4gICAgICogVGhlIG9wdGlvbnMgcGFyYW1ldGVyIGlzIGFuIG9iamVjdCB0aGF0IHNwZWNpZmllcyBhbnkgcHJvcGVydGllcyB5b3Ugd2lzaCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHMuXG4gICAgICogU2VlIHRoZSBwcm9wZXJ0aWVzIHNlY3Rpb24gb2YgdGhlIGBNYXR0ZXIuQm9keWAgbW9kdWxlIGZvciBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB3aGF0IHlvdSBjYW4gcGFzcyB2aWEgdGhlIGBvcHRpb25zYCBvYmplY3QuXG4gICAgICogQG1ldGhvZCB0cmFwZXpvaWRcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHdpZHRoXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzbG9wZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcmV0dXJuIHtib2R5fSBBIG5ldyB0cmFwZXpvaWQgYm9keVxuICAgICAqL1xuICAgIEJvZGllcy50cmFwZXpvaWQgPSBmdW5jdGlvbih4LCB5LCB3aWR0aCwgaGVpZ2h0LCBzbG9wZSwgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgICAgICBzbG9wZSAqPSAwLjU7XG4gICAgICAgIHZhciByb29mID0gKDEgLSAoc2xvcGUgKiAyKSkgKiB3aWR0aDtcbiAgICAgICAgXG4gICAgICAgIHZhciB4MSA9IHdpZHRoICogc2xvcGUsXG4gICAgICAgICAgICB4MiA9IHgxICsgcm9vZixcbiAgICAgICAgICAgIHgzID0geDIgKyB4MSxcbiAgICAgICAgICAgIHZlcnRpY2VzUGF0aDtcblxuICAgICAgICBpZiAoc2xvcGUgPCAwLjUpIHtcbiAgICAgICAgICAgIHZlcnRpY2VzUGF0aCA9ICdMIDAgMCBMICcgKyB4MSArICcgJyArICgtaGVpZ2h0KSArICcgTCAnICsgeDIgKyAnICcgKyAoLWhlaWdodCkgKyAnIEwgJyArIHgzICsgJyAwJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZlcnRpY2VzUGF0aCA9ICdMIDAgMCBMICcgKyB4MiArICcgJyArICgtaGVpZ2h0KSArICcgTCAnICsgeDMgKyAnIDAnO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRyYXBlem9pZCA9IHsgXG4gICAgICAgICAgICBsYWJlbDogJ1RyYXBlem9pZCBCb2R5JyxcbiAgICAgICAgICAgIHBvc2l0aW9uOiB7IHg6IHgsIHk6IHkgfSxcbiAgICAgICAgICAgIHZlcnRpY2VzOiBWZXJ0aWNlcy5mcm9tUGF0aCh2ZXJ0aWNlc1BhdGgpXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuY2hhbWZlcikge1xuICAgICAgICAgICAgdmFyIGNoYW1mZXIgPSBvcHRpb25zLmNoYW1mZXI7XG4gICAgICAgICAgICB0cmFwZXpvaWQudmVydGljZXMgPSBWZXJ0aWNlcy5jaGFtZmVyKHRyYXBlem9pZC52ZXJ0aWNlcywgY2hhbWZlci5yYWRpdXMsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbWZlci5xdWFsaXR5LCBjaGFtZmVyLnF1YWxpdHlNaW4sIGNoYW1mZXIucXVhbGl0eU1heCk7XG4gICAgICAgICAgICBkZWxldGUgb3B0aW9ucy5jaGFtZmVyO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIEJvZHkuY3JlYXRlKENvbW1vbi5leHRlbmQoe30sIHRyYXBlem9pZCwgb3B0aW9ucykpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHJpZ2lkIGJvZHkgbW9kZWwgd2l0aCBhIGNpcmNsZSBodWxsLiBcbiAgICAgKiBUaGUgb3B0aW9ucyBwYXJhbWV0ZXIgaXMgYW4gb2JqZWN0IHRoYXQgc3BlY2lmaWVzIGFueSBwcm9wZXJ0aWVzIHlvdSB3aXNoIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0cy5cbiAgICAgKiBTZWUgdGhlIHByb3BlcnRpZXMgc2VjdGlvbiBvZiB0aGUgYE1hdHRlci5Cb2R5YCBtb2R1bGUgZm9yIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHdoYXQgeW91IGNhbiBwYXNzIHZpYSB0aGUgYG9wdGlvbnNgIG9iamVjdC5cbiAgICAgKiBAbWV0aG9kIGNpcmNsZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHlcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcmFkaXVzXG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbbWF4U2lkZXNdXG4gICAgICogQHJldHVybiB7Ym9keX0gQSBuZXcgY2lyY2xlIGJvZHlcbiAgICAgKi9cbiAgICBCb2RpZXMuY2lyY2xlID0gZnVuY3Rpb24oeCwgeSwgcmFkaXVzLCBvcHRpb25zLCBtYXhTaWRlcykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgICAgICB2YXIgY2lyY2xlID0ge1xuICAgICAgICAgICAgbGFiZWw6ICdDaXJjbGUgQm9keScsXG4gICAgICAgICAgICBjaXJjbGVSYWRpdXM6IHJhZGl1c1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgLy8gYXBwcm94aW1hdGUgY2lyY2xlcyB3aXRoIHBvbHlnb25zIHVudGlsIHRydWUgY2lyY2xlcyBpbXBsZW1lbnRlZCBpbiBTQVRcbiAgICAgICAgbWF4U2lkZXMgPSBtYXhTaWRlcyB8fCAyNTtcbiAgICAgICAgdmFyIHNpZGVzID0gTWF0aC5jZWlsKE1hdGgubWF4KDEwLCBNYXRoLm1pbihtYXhTaWRlcywgcmFkaXVzKSkpO1xuXG4gICAgICAgIC8vIG9wdGltaXNhdGlvbjogYWx3YXlzIHVzZSBldmVuIG51bWJlciBvZiBzaWRlcyAoaGFsZiB0aGUgbnVtYmVyIG9mIHVuaXF1ZSBheGVzKVxuICAgICAgICBpZiAoc2lkZXMgJSAyID09PSAxKVxuICAgICAgICAgICAgc2lkZXMgKz0gMTtcblxuICAgICAgICByZXR1cm4gQm9kaWVzLnBvbHlnb24oeCwgeSwgc2lkZXMsIHJhZGl1cywgQ29tbW9uLmV4dGVuZCh7fSwgY2lyY2xlLCBvcHRpb25zKSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgcmlnaWQgYm9keSBtb2RlbCB3aXRoIGEgcmVndWxhciBwb2x5Z29uIGh1bGwgd2l0aCB0aGUgZ2l2ZW4gbnVtYmVyIG9mIHNpZGVzLiBcbiAgICAgKiBUaGUgb3B0aW9ucyBwYXJhbWV0ZXIgaXMgYW4gb2JqZWN0IHRoYXQgc3BlY2lmaWVzIGFueSBwcm9wZXJ0aWVzIHlvdSB3aXNoIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0cy5cbiAgICAgKiBTZWUgdGhlIHByb3BlcnRpZXMgc2VjdGlvbiBvZiB0aGUgYE1hdHRlci5Cb2R5YCBtb2R1bGUgZm9yIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHdoYXQgeW91IGNhbiBwYXNzIHZpYSB0aGUgYG9wdGlvbnNgIG9iamVjdC5cbiAgICAgKiBAbWV0aG9kIHBvbHlnb25cbiAgICAgKiBAcGFyYW0ge251bWJlcn0geFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNpZGVzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJhZGl1c1xuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcmV0dXJuIHtib2R5fSBBIG5ldyByZWd1bGFyIHBvbHlnb24gYm9keVxuICAgICAqL1xuICAgIEJvZGllcy5wb2x5Z29uID0gZnVuY3Rpb24oeCwgeSwgc2lkZXMsIHJhZGl1cywgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgICAgICBpZiAoc2lkZXMgPCAzKVxuICAgICAgICAgICAgcmV0dXJuIEJvZGllcy5jaXJjbGUoeCwgeSwgcmFkaXVzLCBvcHRpb25zKTtcblxuICAgICAgICB2YXIgdGhldGEgPSAyICogTWF0aC5QSSAvIHNpZGVzLFxuICAgICAgICAgICAgcGF0aCA9ICcnLFxuICAgICAgICAgICAgb2Zmc2V0ID0gdGhldGEgKiAwLjU7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaWRlczsgaSArPSAxKSB7XG4gICAgICAgICAgICB2YXIgYW5nbGUgPSBvZmZzZXQgKyAoaSAqIHRoZXRhKSxcbiAgICAgICAgICAgICAgICB4eCA9IE1hdGguY29zKGFuZ2xlKSAqIHJhZGl1cyxcbiAgICAgICAgICAgICAgICB5eSA9IE1hdGguc2luKGFuZ2xlKSAqIHJhZGl1cztcblxuICAgICAgICAgICAgcGF0aCArPSAnTCAnICsgeHgudG9GaXhlZCgzKSArICcgJyArIHl5LnRvRml4ZWQoMykgKyAnICc7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcG9seWdvbiA9IHsgXG4gICAgICAgICAgICBsYWJlbDogJ1BvbHlnb24gQm9keScsXG4gICAgICAgICAgICBwb3NpdGlvbjogeyB4OiB4LCB5OiB5IH0sXG4gICAgICAgICAgICB2ZXJ0aWNlczogVmVydGljZXMuZnJvbVBhdGgocGF0aClcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAob3B0aW9ucy5jaGFtZmVyKSB7XG4gICAgICAgICAgICB2YXIgY2hhbWZlciA9IG9wdGlvbnMuY2hhbWZlcjtcbiAgICAgICAgICAgIHBvbHlnb24udmVydGljZXMgPSBWZXJ0aWNlcy5jaGFtZmVyKHBvbHlnb24udmVydGljZXMsIGNoYW1mZXIucmFkaXVzLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW1mZXIucXVhbGl0eSwgY2hhbWZlci5xdWFsaXR5TWluLCBjaGFtZmVyLnF1YWxpdHlNYXgpO1xuICAgICAgICAgICAgZGVsZXRlIG9wdGlvbnMuY2hhbWZlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBCb2R5LmNyZWF0ZShDb21tb24uZXh0ZW5kKHt9LCBwb2x5Z29uLCBvcHRpb25zKSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBib2R5IHVzaW5nIHRoZSBzdXBwbGllZCB2ZXJ0aWNlcyAob3IgYW4gYXJyYXkgY29udGFpbmluZyBtdWx0aXBsZSBzZXRzIG9mIHZlcnRpY2VzKS5cbiAgICAgKiBJZiB0aGUgdmVydGljZXMgYXJlIGNvbnZleCwgdGhleSB3aWxsIHBhc3MgdGhyb3VnaCBhcyBzdXBwbGllZC5cbiAgICAgKiBPdGhlcndpc2UgaWYgdGhlIHZlcnRpY2VzIGFyZSBjb25jYXZlLCB0aGV5IHdpbGwgYmUgZGVjb21wb3NlZCBpZiBbcG9seS1kZWNvbXAuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zY2h0ZXBwZS9wb2x5LWRlY29tcC5qcykgaXMgYXZhaWxhYmxlLlxuICAgICAqIE5vdGUgdGhhdCB0aGlzIHByb2Nlc3MgaXMgbm90IGd1YXJhbnRlZWQgdG8gc3VwcG9ydCBjb21wbGV4IHNldHMgb2YgdmVydGljZXMgKGUuZy4gdGhvc2Ugd2l0aCBob2xlcyBtYXkgZmFpbCkuXG4gICAgICogQnkgZGVmYXVsdCB0aGUgZGVjb21wb3NpdGlvbiB3aWxsIGRpc2NhcmQgY29sbGluZWFyIGVkZ2VzICh0byBpbXByb3ZlIHBlcmZvcm1hbmNlKS5cbiAgICAgKiBJdCBjYW4gYWxzbyBvcHRpb25hbGx5IGRpc2NhcmQgYW55IHBhcnRzIHRoYXQgaGF2ZSBhbiBhcmVhIGxlc3MgdGhhbiBgbWluaW11bUFyZWFgLlxuICAgICAqIElmIHRoZSB2ZXJ0aWNlcyBjYW4gbm90IGJlIGRlY29tcG9zZWQsIHRoZSByZXN1bHQgd2lsbCBmYWxsIGJhY2sgdG8gdXNpbmcgdGhlIGNvbnZleCBodWxsLlxuICAgICAqIFRoZSBvcHRpb25zIHBhcmFtZXRlciBpcyBhbiBvYmplY3QgdGhhdCBzcGVjaWZpZXMgYW55IGBNYXR0ZXIuQm9keWAgcHJvcGVydGllcyB5b3Ugd2lzaCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHMuXG4gICAgICogU2VlIHRoZSBwcm9wZXJ0aWVzIHNlY3Rpb24gb2YgdGhlIGBNYXR0ZXIuQm9keWAgbW9kdWxlIGZvciBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB3aGF0IHlvdSBjYW4gcGFzcyB2aWEgdGhlIGBvcHRpb25zYCBvYmplY3QuXG4gICAgICogQG1ldGhvZCBmcm9tVmVydGljZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5XG4gICAgICogQHBhcmFtIFtbdmVjdG9yXV0gdmVydGV4U2V0c1xuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAgICAgKiBAcGFyYW0ge2Jvb2x9IFtmbGFnSW50ZXJuYWw9ZmFsc2VdXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtyZW1vdmVDb2xsaW5lYXI9MC4wMV1cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW21pbmltdW1BcmVhPTEwXVxuICAgICAqIEByZXR1cm4ge2JvZHl9XG4gICAgICovXG4gICAgQm9kaWVzLmZyb21WZXJ0aWNlcyA9IGZ1bmN0aW9uKHgsIHksIHZlcnRleFNldHMsIG9wdGlvbnMsIGZsYWdJbnRlcm5hbCwgcmVtb3ZlQ29sbGluZWFyLCBtaW5pbXVtQXJlYSkge1xuICAgICAgICBpZiAoIWRlY29tcCkge1xuICAgICAgICAgICAgZGVjb21wID0gQ29tbW9uLl9yZXF1aXJlR2xvYmFsKCdkZWNvbXAnLCAncG9seS1kZWNvbXAnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBib2R5LFxuICAgICAgICAgICAgcGFydHMsXG4gICAgICAgICAgICBpc0NvbnZleCxcbiAgICAgICAgICAgIHZlcnRpY2VzLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBrLFxuICAgICAgICAgICAgdixcbiAgICAgICAgICAgIHo7XG5cbiAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgICAgIHBhcnRzID0gW107XG5cbiAgICAgICAgZmxhZ0ludGVybmFsID0gdHlwZW9mIGZsYWdJbnRlcm5hbCAhPT0gJ3VuZGVmaW5lZCcgPyBmbGFnSW50ZXJuYWwgOiBmYWxzZTtcbiAgICAgICAgcmVtb3ZlQ29sbGluZWFyID0gdHlwZW9mIHJlbW92ZUNvbGxpbmVhciAhPT0gJ3VuZGVmaW5lZCcgPyByZW1vdmVDb2xsaW5lYXIgOiAwLjAxO1xuICAgICAgICBtaW5pbXVtQXJlYSA9IHR5cGVvZiBtaW5pbXVtQXJlYSAhPT0gJ3VuZGVmaW5lZCcgPyBtaW5pbXVtQXJlYSA6IDEwO1xuXG4gICAgICAgIGlmICghZGVjb21wKSB7XG4gICAgICAgICAgICBDb21tb24ud2FybignQm9kaWVzLmZyb21WZXJ0aWNlczogcG9seS1kZWNvbXAuanMgcmVxdWlyZWQuIENvdWxkIG5vdCBkZWNvbXBvc2UgdmVydGljZXMuIEZhbGxiYWNrIHRvIGNvbnZleCBodWxsLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZW5zdXJlIHZlcnRleFNldHMgaXMgYW4gYXJyYXkgb2YgYXJyYXlzXG4gICAgICAgIGlmICghQ29tbW9uLmlzQXJyYXkodmVydGV4U2V0c1swXSkpIHtcbiAgICAgICAgICAgIHZlcnRleFNldHMgPSBbdmVydGV4U2V0c107XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHYgPSAwOyB2IDwgdmVydGV4U2V0cy5sZW5ndGg7IHYgKz0gMSkge1xuICAgICAgICAgICAgdmVydGljZXMgPSB2ZXJ0ZXhTZXRzW3ZdO1xuICAgICAgICAgICAgaXNDb252ZXggPSBWZXJ0aWNlcy5pc0NvbnZleCh2ZXJ0aWNlcyk7XG5cbiAgICAgICAgICAgIGlmIChpc0NvbnZleCB8fCAhZGVjb21wKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzQ29udmV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHZlcnRpY2VzID0gVmVydGljZXMuY2xvY2t3aXNlU29ydCh2ZXJ0aWNlcyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZmFsbGJhY2sgdG8gY29udmV4IGh1bGwgd2hlbiBkZWNvbXBvc2l0aW9uIGlzIG5vdCBwb3NzaWJsZVxuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNlcyA9IFZlcnRpY2VzLmh1bGwodmVydGljZXMpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHBhcnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogeyB4OiB4LCB5OiB5IH0sXG4gICAgICAgICAgICAgICAgICAgIHZlcnRpY2VzOiB2ZXJ0aWNlc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBpbml0aWFsaXNlIGEgZGVjb21wb3NpdGlvblxuICAgICAgICAgICAgICAgIHZhciBjb25jYXZlID0gdmVydGljZXMubWFwKGZ1bmN0aW9uKHZlcnRleCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW3ZlcnRleC54LCB2ZXJ0ZXgueV07XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyB2ZXJ0aWNlcyBhcmUgY29uY2F2ZSBhbmQgc2ltcGxlLCB3ZSBjYW4gZGVjb21wb3NlIGludG8gcGFydHNcbiAgICAgICAgICAgICAgICBkZWNvbXAubWFrZUNDVyhjb25jYXZlKTtcbiAgICAgICAgICAgICAgICBpZiAocmVtb3ZlQ29sbGluZWFyICE9PSBmYWxzZSlcbiAgICAgICAgICAgICAgICAgICAgZGVjb21wLnJlbW92ZUNvbGxpbmVhclBvaW50cyhjb25jYXZlLCByZW1vdmVDb2xsaW5lYXIpO1xuXG4gICAgICAgICAgICAgICAgLy8gdXNlIHRoZSBxdWljayBkZWNvbXBvc2l0aW9uIGFsZ29yaXRobSAoQmF5YXppdClcbiAgICAgICAgICAgICAgICB2YXIgZGVjb21wb3NlZCA9IGRlY29tcC5xdWlja0RlY29tcChjb25jYXZlKTtcblxuICAgICAgICAgICAgICAgIC8vIGZvciBlYWNoIGRlY29tcG9zZWQgY2h1bmtcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZGVjb21wb3NlZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2h1bmsgPSBkZWNvbXBvc2VkW2ldO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnZlcnQgdmVydGljZXMgaW50byB0aGUgY29ycmVjdCBzdHJ1Y3R1cmVcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNodW5rVmVydGljZXMgPSBjaHVuay5tYXAoZnVuY3Rpb24odmVydGljZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeDogdmVydGljZXNbMF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeTogdmVydGljZXNbMV1cbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIHNraXAgc21hbGwgY2h1bmtzXG4gICAgICAgICAgICAgICAgICAgIGlmIChtaW5pbXVtQXJlYSA+IDAgJiYgVmVydGljZXMuYXJlYShjaHVua1ZlcnRpY2VzKSA8IG1pbmltdW1BcmVhKVxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gY3JlYXRlIGEgY29tcG91bmQgcGFydFxuICAgICAgICAgICAgICAgICAgICBwYXJ0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBWZXJ0aWNlcy5jZW50cmUoY2h1bmtWZXJ0aWNlcyksXG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNlczogY2h1bmtWZXJ0aWNlc1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjcmVhdGUgYm9keSBwYXJ0c1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhcnRzW2ldID0gQm9keS5jcmVhdGUoQ29tbW9uLmV4dGVuZChwYXJ0c1tpXSwgb3B0aW9ucykpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZmxhZyBpbnRlcm5hbCBlZGdlcyAoY29pbmNpZGVudCBwYXJ0IGVkZ2VzKVxuICAgICAgICBpZiAoZmxhZ0ludGVybmFsKSB7XG4gICAgICAgICAgICB2YXIgY29pbmNpZGVudF9tYXhfZGlzdCA9IDU7XG5cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBwYXJ0QSA9IHBhcnRzW2ldO1xuXG4gICAgICAgICAgICAgICAgZm9yIChqID0gaSArIDE7IGogPCBwYXJ0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFydEIgPSBwYXJ0c1tqXTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoQm91bmRzLm92ZXJsYXBzKHBhcnRBLmJvdW5kcywgcGFydEIuYm91bmRzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhdiA9IHBhcnRBLnZlcnRpY2VzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBidiA9IHBhcnRCLnZlcnRpY2VzO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpdGVyYXRlIHZlcnRpY2VzIG9mIGJvdGggcGFydHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoayA9IDA7IGsgPCBwYXJ0QS52ZXJ0aWNlcy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoeiA9IDA7IHogPCBwYXJ0Qi52ZXJ0aWNlcy5sZW5ndGg7IHorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBmaW5kIGRpc3RhbmNlcyBiZXR3ZWVuIHRoZSB2ZXJ0aWNlc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGEgPSBWZWN0b3IubWFnbml0dWRlU3F1YXJlZChWZWN0b3Iuc3ViKHBhdlsoayArIDEpICUgcGF2Lmxlbmd0aF0sIHBidlt6XSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGIgPSBWZWN0b3IubWFnbml0dWRlU3F1YXJlZChWZWN0b3Iuc3ViKHBhdltrXSwgcGJ2Wyh6ICsgMSkgJSBwYnYubGVuZ3RoXSkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIGJvdGggdmVydGljZXMgYXJlIHZlcnkgY2xvc2UsIGNvbnNpZGVyIHRoZSBlZGdlIGNvbmNpZGVudCAoaW50ZXJuYWwpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYSA8IGNvaW5jaWRlbnRfbWF4X2Rpc3QgJiYgZGIgPCBjb2luY2lkZW50X21heF9kaXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXZba10uaXNJbnRlcm5hbCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYnZbel0uaXNJbnRlcm5hbCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAvLyBjcmVhdGUgdGhlIHBhcmVudCBib2R5IHRvIGJlIHJldHVybmVkLCB0aGF0IGNvbnRhaW5zIGdlbmVyYXRlZCBjb21wb3VuZCBwYXJ0c1xuICAgICAgICAgICAgYm9keSA9IEJvZHkuY3JlYXRlKENvbW1vbi5leHRlbmQoeyBwYXJ0czogcGFydHMuc2xpY2UoMCkgfSwgb3B0aW9ucykpO1xuICAgICAgICAgICAgQm9keS5zZXRQb3NpdGlvbihib2R5LCB7IHg6IHgsIHk6IHkgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBib2R5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnRzWzBdO1xuICAgICAgICB9XG4gICAgfTtcblxufSkoKTtcblxufSx7XCIuLi9ib2R5L0JvZHlcIjoxLFwiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6MjgsXCIuLi9nZW9tZXRyeS9WZXJ0aWNlc1wiOjI5fV0sMjQ6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLkNvbXBvc2l0ZXNgIG1vZHVsZSBjb250YWlucyBmYWN0b3J5IG1ldGhvZHMgZm9yIGNyZWF0aW5nIGNvbXBvc2l0ZSBib2RpZXNcbiogd2l0aCBjb21tb25seSB1c2VkIGNvbmZpZ3VyYXRpb25zIChzdWNoIGFzIHN0YWNrcyBhbmQgY2hhaW5zKS5cbipcbiogU2VlIHRoZSBpbmNsdWRlZCB1c2FnZSBbZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKS5cbipcbiogQGNsYXNzIENvbXBvc2l0ZXNcbiovXG5cbnZhciBDb21wb3NpdGVzID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gQ29tcG9zaXRlcztcblxudmFyIENvbXBvc2l0ZSA9IF9kZXJlcV8oJy4uL2JvZHkvQ29tcG9zaXRlJyk7XG52YXIgQ29uc3RyYWludCA9IF9kZXJlcV8oJy4uL2NvbnN0cmFpbnQvQ29uc3RyYWludCcpO1xudmFyIENvbW1vbiA9IF9kZXJlcV8oJy4uL2NvcmUvQ29tbW9uJyk7XG52YXIgQm9keSA9IF9kZXJlcV8oJy4uL2JvZHkvQm9keScpO1xudmFyIEJvZGllcyA9IF9kZXJlcV8oJy4vQm9kaWVzJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBjb21wb3NpdGUgY29udGFpbmluZyBib2RpZXMgY3JlYXRlZCBpbiB0aGUgY2FsbGJhY2sgaW4gYSBncmlkIGFycmFuZ2VtZW50LlxuICAgICAqIFRoaXMgZnVuY3Rpb24gdXNlcyB0aGUgYm9keSdzIGJvdW5kcyB0byBwcmV2ZW50IG92ZXJsYXBzLlxuICAgICAqIEBtZXRob2Qgc3RhY2tcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geHhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geXlcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gY29sdW1uc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSByb3dzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNvbHVtbkdhcFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSByb3dHYXBcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gQSBuZXcgY29tcG9zaXRlIGNvbnRhaW5pbmcgb2JqZWN0cyBjcmVhdGVkIGluIHRoZSBjYWxsYmFja1xuICAgICAqL1xuICAgIENvbXBvc2l0ZXMuc3RhY2sgPSBmdW5jdGlvbih4eCwgeXksIGNvbHVtbnMsIHJvd3MsIGNvbHVtbkdhcCwgcm93R2FwLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgc3RhY2sgPSBDb21wb3NpdGUuY3JlYXRlKHsgbGFiZWw6ICdTdGFjaycgfSksXG4gICAgICAgICAgICB4ID0geHgsXG4gICAgICAgICAgICB5ID0geXksXG4gICAgICAgICAgICBsYXN0Qm9keSxcbiAgICAgICAgICAgIGkgPSAwO1xuXG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IHJvd3M7IHJvdysrKSB7XG4gICAgICAgICAgICB2YXIgbWF4SGVpZ2h0ID0gMDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZm9yICh2YXIgY29sdW1uID0gMDsgY29sdW1uIDwgY29sdW1uczsgY29sdW1uKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgYm9keSA9IGNhbGxiYWNrKHgsIHksIGNvbHVtbiwgcm93LCBsYXN0Qm9keSwgaSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChib2R5KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBib2R5SGVpZ2h0ID0gYm9keS5ib3VuZHMubWF4LnkgLSBib2R5LmJvdW5kcy5taW4ueSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlXaWR0aCA9IGJvZHkuYm91bmRzLm1heC54IC0gYm9keS5ib3VuZHMubWluLng7IFxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChib2R5SGVpZ2h0ID4gbWF4SGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4SGVpZ2h0ID0gYm9keUhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIEJvZHkudHJhbnNsYXRlKGJvZHksIHsgeDogYm9keVdpZHRoICogMC41LCB5OiBib2R5SGVpZ2h0ICogMC41IH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHggPSBib2R5LmJvdW5kcy5tYXgueCArIGNvbHVtbkdhcDtcblxuICAgICAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQm9keShzdGFjaywgYm9keSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsYXN0Qm9keSA9IGJvZHk7XG4gICAgICAgICAgICAgICAgICAgIGkgKz0gMTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB4ICs9IGNvbHVtbkdhcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHkgKz0gbWF4SGVpZ2h0ICsgcm93R2FwO1xuICAgICAgICAgICAgeCA9IHh4O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogQ2hhaW5zIGFsbCBib2RpZXMgaW4gdGhlIGdpdmVuIGNvbXBvc2l0ZSB0b2dldGhlciB1c2luZyBjb25zdHJhaW50cy5cbiAgICAgKiBAbWV0aG9kIGNoYWluXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4T2Zmc2V0QVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5T2Zmc2V0QVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4T2Zmc2V0QlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5T2Zmc2V0QlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAgICogQHJldHVybiB7Y29tcG9zaXRlfSBBIG5ldyBjb21wb3NpdGUgY29udGFpbmluZyBvYmplY3RzIGNoYWluZWQgdG9nZXRoZXIgd2l0aCBjb25zdHJhaW50c1xuICAgICAqL1xuICAgIENvbXBvc2l0ZXMuY2hhaW4gPSBmdW5jdGlvbihjb21wb3NpdGUsIHhPZmZzZXRBLCB5T2Zmc2V0QSwgeE9mZnNldEIsIHlPZmZzZXRCLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBib2RpZXMgPSBjb21wb3NpdGUuYm9kaWVzO1xuICAgICAgICBcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5QSA9IGJvZGllc1tpIC0gMV0sXG4gICAgICAgICAgICAgICAgYm9keUIgPSBib2RpZXNbaV0sXG4gICAgICAgICAgICAgICAgYm9keUFIZWlnaHQgPSBib2R5QS5ib3VuZHMubWF4LnkgLSBib2R5QS5ib3VuZHMubWluLnksXG4gICAgICAgICAgICAgICAgYm9keUFXaWR0aCA9IGJvZHlBLmJvdW5kcy5tYXgueCAtIGJvZHlBLmJvdW5kcy5taW4ueCwgXG4gICAgICAgICAgICAgICAgYm9keUJIZWlnaHQgPSBib2R5Qi5ib3VuZHMubWF4LnkgLSBib2R5Qi5ib3VuZHMubWluLnksXG4gICAgICAgICAgICAgICAgYm9keUJXaWR0aCA9IGJvZHlCLmJvdW5kcy5tYXgueCAtIGJvZHlCLmJvdW5kcy5taW4ueDtcbiAgICAgICAgXG4gICAgICAgICAgICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgICAgICAgICAgICAgYm9keUE6IGJvZHlBLFxuICAgICAgICAgICAgICAgIHBvaW50QTogeyB4OiBib2R5QVdpZHRoICogeE9mZnNldEEsIHk6IGJvZHlBSGVpZ2h0ICogeU9mZnNldEEgfSxcbiAgICAgICAgICAgICAgICBib2R5QjogYm9keUIsXG4gICAgICAgICAgICAgICAgcG9pbnRCOiB7IHg6IGJvZHlCV2lkdGggKiB4T2Zmc2V0QiwgeTogYm9keUJIZWlnaHQgKiB5T2Zmc2V0QiB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB2YXIgY29uc3RyYWludCA9IENvbW1vbi5leHRlbmQoZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgICAgICBcbiAgICAgICAgICAgIENvbXBvc2l0ZS5hZGRDb25zdHJhaW50KGNvbXBvc2l0ZSwgQ29uc3RyYWludC5jcmVhdGUoY29uc3RyYWludCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29tcG9zaXRlLmxhYmVsICs9ICcgQ2hhaW4nO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGNvbXBvc2l0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ29ubmVjdHMgYm9kaWVzIGluIHRoZSBjb21wb3NpdGUgd2l0aCBjb25zdHJhaW50cyBpbiBhIGdyaWQgcGF0dGVybiwgd2l0aCBvcHRpb25hbCBjcm9zcyBicmFjZXMuXG4gICAgICogQG1ldGhvZCBtZXNoXG4gICAgICogQHBhcmFtIHtjb21wb3NpdGV9IGNvbXBvc2l0ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb2x1bW5zXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJvd3NcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGNyb3NzQnJhY2VcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gVGhlIGNvbXBvc2l0ZSBjb250YWluaW5nIG9iamVjdHMgbWVzaGVkIHRvZ2V0aGVyIHdpdGggY29uc3RyYWludHNcbiAgICAgKi9cbiAgICBDb21wb3NpdGVzLm1lc2ggPSBmdW5jdGlvbihjb21wb3NpdGUsIGNvbHVtbnMsIHJvd3MsIGNyb3NzQnJhY2UsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGJvZGllcyA9IGNvbXBvc2l0ZS5ib2RpZXMsXG4gICAgICAgICAgICByb3csXG4gICAgICAgICAgICBjb2wsXG4gICAgICAgICAgICBib2R5QSxcbiAgICAgICAgICAgIGJvZHlCLFxuICAgICAgICAgICAgYm9keUM7XG4gICAgICAgIFxuICAgICAgICBmb3IgKHJvdyA9IDA7IHJvdyA8IHJvd3M7IHJvdysrKSB7XG4gICAgICAgICAgICBmb3IgKGNvbCA9IDE7IGNvbCA8IGNvbHVtbnM7IGNvbCsrKSB7XG4gICAgICAgICAgICAgICAgYm9keUEgPSBib2RpZXNbKGNvbCAtIDEpICsgKHJvdyAqIGNvbHVtbnMpXTtcbiAgICAgICAgICAgICAgICBib2R5QiA9IGJvZGllc1tjb2wgKyAocm93ICogY29sdW1ucyldO1xuICAgICAgICAgICAgICAgIENvbXBvc2l0ZS5hZGRDb25zdHJhaW50KGNvbXBvc2l0ZSwgQ29uc3RyYWludC5jcmVhdGUoQ29tbW9uLmV4dGVuZCh7IGJvZHlBOiBib2R5QSwgYm9keUI6IGJvZHlCIH0sIG9wdGlvbnMpKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyb3cgPiAwKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb2wgPSAwOyBjb2wgPCBjb2x1bW5zOyBjb2wrKykge1xuICAgICAgICAgICAgICAgICAgICBib2R5QSA9IGJvZGllc1tjb2wgKyAoKHJvdyAtIDEpICogY29sdW1ucyldO1xuICAgICAgICAgICAgICAgICAgICBib2R5QiA9IGJvZGllc1tjb2wgKyAocm93ICogY29sdW1ucyldO1xuICAgICAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludChjb21wb3NpdGUsIENvbnN0cmFpbnQuY3JlYXRlKENvbW1vbi5leHRlbmQoeyBib2R5QTogYm9keUEsIGJvZHlCOiBib2R5QiB9LCBvcHRpb25zKSkpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChjcm9zc0JyYWNlICYmIGNvbCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlDID0gYm9kaWVzWyhjb2wgLSAxKSArICgocm93IC0gMSkgKiBjb2x1bW5zKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludChjb21wb3NpdGUsIENvbnN0cmFpbnQuY3JlYXRlKENvbW1vbi5leHRlbmQoeyBib2R5QTogYm9keUMsIGJvZHlCOiBib2R5QiB9LCBvcHRpb25zKSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNyb3NzQnJhY2UgJiYgY29sIDwgY29sdW1ucyAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlDID0gYm9kaWVzWyhjb2wgKyAxKSArICgocm93IC0gMSkgKiBjb2x1bW5zKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludChjb21wb3NpdGUsIENvbnN0cmFpbnQuY3JlYXRlKENvbW1vbi5leHRlbmQoeyBib2R5QTogYm9keUMsIGJvZHlCOiBib2R5QiB9LCBvcHRpb25zKSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29tcG9zaXRlLmxhYmVsICs9ICcgTWVzaCc7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gY29tcG9zaXRlO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGNvbXBvc2l0ZSBjb250YWluaW5nIGJvZGllcyBjcmVhdGVkIGluIHRoZSBjYWxsYmFjayBpbiBhIHB5cmFtaWQgYXJyYW5nZW1lbnQuXG4gICAgICogVGhpcyBmdW5jdGlvbiB1c2VzIHRoZSBib2R5J3MgYm91bmRzIHRvIHByZXZlbnQgb3ZlcmxhcHMuXG4gICAgICogQG1ldGhvZCBweXJhbWlkXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHh4XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHl5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNvbHVtbnNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcm93c1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb2x1bW5HYXBcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcm93R2FwXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IEEgbmV3IGNvbXBvc2l0ZSBjb250YWluaW5nIG9iamVjdHMgY3JlYXRlZCBpbiB0aGUgY2FsbGJhY2tcbiAgICAgKi9cbiAgICBDb21wb3NpdGVzLnB5cmFtaWQgPSBmdW5jdGlvbih4eCwgeXksIGNvbHVtbnMsIHJvd3MsIGNvbHVtbkdhcCwgcm93R2FwLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gQ29tcG9zaXRlcy5zdGFjayh4eCwgeXksIGNvbHVtbnMsIHJvd3MsIGNvbHVtbkdhcCwgcm93R2FwLCBmdW5jdGlvbih4LCB5LCBjb2x1bW4sIHJvdywgbGFzdEJvZHksIGkpIHtcbiAgICAgICAgICAgIHZhciBhY3R1YWxSb3dzID0gTWF0aC5taW4ocm93cywgTWF0aC5jZWlsKGNvbHVtbnMgLyAyKSksXG4gICAgICAgICAgICAgICAgbGFzdEJvZHlXaWR0aCA9IGxhc3RCb2R5ID8gbGFzdEJvZHkuYm91bmRzLm1heC54IC0gbGFzdEJvZHkuYm91bmRzLm1pbi54IDogMDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHJvdyA+IGFjdHVhbFJvd3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyByZXZlcnNlIHJvdyBvcmRlclxuICAgICAgICAgICAgcm93ID0gYWN0dWFsUm93cyAtIHJvdztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcm93LFxuICAgICAgICAgICAgICAgIGVuZCA9IGNvbHVtbnMgLSAxIC0gcm93O1xuXG4gICAgICAgICAgICBpZiAoY29sdW1uIDwgc3RhcnQgfHwgY29sdW1uID4gZW5kKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gcmV0cm9hY3RpdmVseSBmaXggdGhlIGZpcnN0IGJvZHkncyBwb3NpdGlvbiwgc2luY2Ugd2lkdGggd2FzIHVua25vd25cbiAgICAgICAgICAgIGlmIChpID09PSAxKSB7XG4gICAgICAgICAgICAgICAgQm9keS50cmFuc2xhdGUobGFzdEJvZHksIHsgeDogKGNvbHVtbiArIChjb2x1bW5zICUgMiA9PT0gMSA/IDEgOiAtMSkpICogbGFzdEJvZHlXaWR0aCwgeTogMCB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHhPZmZzZXQgPSBsYXN0Qm9keSA/IGNvbHVtbiAqIGxhc3RCb2R5V2lkdGggOiAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soeHggKyB4T2Zmc2V0ICsgY29sdW1uICogY29sdW1uR2FwLCB5LCBjb2x1bW4sIHJvdywgbGFzdEJvZHksIGkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGNvbXBvc2l0ZSB3aXRoIGEgTmV3dG9uJ3MgQ3JhZGxlIHNldHVwIG9mIGJvZGllcyBhbmQgY29uc3RyYWludHMuXG4gICAgICogQG1ldGhvZCBuZXd0b25zQ3JhZGxlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHh4XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHl5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG51bWJlclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzaXplXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gQSBuZXcgY29tcG9zaXRlIG5ld3RvbnNDcmFkbGUgYm9keVxuICAgICAqL1xuICAgIENvbXBvc2l0ZXMubmV3dG9uc0NyYWRsZSA9IGZ1bmN0aW9uKHh4LCB5eSwgbnVtYmVyLCBzaXplLCBsZW5ndGgpIHtcbiAgICAgICAgdmFyIG5ld3RvbnNDcmFkbGUgPSBDb21wb3NpdGUuY3JlYXRlKHsgbGFiZWw6ICdOZXd0b25zIENyYWRsZScgfSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1iZXI7IGkrKykge1xuICAgICAgICAgICAgdmFyIHNlcGFyYXRpb24gPSAxLjksXG4gICAgICAgICAgICAgICAgY2lyY2xlID0gQm9kaWVzLmNpcmNsZSh4eCArIGkgKiAoc2l6ZSAqIHNlcGFyYXRpb24pLCB5eSArIGxlbmd0aCwgc2l6ZSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpbmVydGlhOiBJbmZpbml0eSwgcmVzdGl0dXRpb246IDEsIGZyaWN0aW9uOiAwLCBmcmljdGlvbkFpcjogMC4wMDAxLCBzbG9wOiAxIH0pLFxuICAgICAgICAgICAgICAgIGNvbnN0cmFpbnQgPSBDb25zdHJhaW50LmNyZWF0ZSh7IHBvaW50QTogeyB4OiB4eCArIGkgKiAoc2l6ZSAqIHNlcGFyYXRpb24pLCB5OiB5eSB9LCBib2R5QjogY2lyY2xlIH0pO1xuXG4gICAgICAgICAgICBDb21wb3NpdGUuYWRkQm9keShuZXd0b25zQ3JhZGxlLCBjaXJjbGUpO1xuICAgICAgICAgICAgQ29tcG9zaXRlLmFkZENvbnN0cmFpbnQobmV3dG9uc0NyYWRsZSwgY29uc3RyYWludCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3dG9uc0NyYWRsZTtcbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBjb21wb3NpdGUgd2l0aCBzaW1wbGUgY2FyIHNldHVwIG9mIGJvZGllcyBhbmQgY29uc3RyYWludHMuXG4gICAgICogQG1ldGhvZCBjYXJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geHhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geXlcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gd2lkdGhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHdoZWVsU2l6ZVxuICAgICAqIEByZXR1cm4ge2NvbXBvc2l0ZX0gQSBuZXcgY29tcG9zaXRlIGNhciBib2R5XG4gICAgICovXG4gICAgQ29tcG9zaXRlcy5jYXIgPSBmdW5jdGlvbih4eCwgeXksIHdpZHRoLCBoZWlnaHQsIHdoZWVsU2l6ZSkge1xuICAgICAgICB2YXIgZ3JvdXAgPSBCb2R5Lm5leHRHcm91cCh0cnVlKSxcbiAgICAgICAgICAgIHdoZWVsQmFzZSA9IDIwLFxuICAgICAgICAgICAgd2hlZWxBT2Zmc2V0ID0gLXdpZHRoICogMC41ICsgd2hlZWxCYXNlLFxuICAgICAgICAgICAgd2hlZWxCT2Zmc2V0ID0gd2lkdGggKiAwLjUgLSB3aGVlbEJhc2UsXG4gICAgICAgICAgICB3aGVlbFlPZmZzZXQgPSAwO1xuICAgIFxuICAgICAgICB2YXIgY2FyID0gQ29tcG9zaXRlLmNyZWF0ZSh7IGxhYmVsOiAnQ2FyJyB9KSxcbiAgICAgICAgICAgIGJvZHkgPSBCb2RpZXMucmVjdGFuZ2xlKHh4LCB5eSwgd2lkdGgsIGhlaWdodCwgeyBcbiAgICAgICAgICAgICAgICBjb2xsaXNpb25GaWx0ZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IGdyb3VwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjaGFtZmVyOiB7XG4gICAgICAgICAgICAgICAgICAgIHJhZGl1czogaGVpZ2h0ICogMC41XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkZW5zaXR5OiAwLjAwMDJcbiAgICAgICAgICAgIH0pO1xuICAgIFxuICAgICAgICB2YXIgd2hlZWxBID0gQm9kaWVzLmNpcmNsZSh4eCArIHdoZWVsQU9mZnNldCwgeXkgKyB3aGVlbFlPZmZzZXQsIHdoZWVsU2l6ZSwgeyBcbiAgICAgICAgICAgIGNvbGxpc2lvbkZpbHRlcjoge1xuICAgICAgICAgICAgICAgIGdyb3VwOiBncm91cFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZyaWN0aW9uOiAwLjhcbiAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICB2YXIgd2hlZWxCID0gQm9kaWVzLmNpcmNsZSh4eCArIHdoZWVsQk9mZnNldCwgeXkgKyB3aGVlbFlPZmZzZXQsIHdoZWVsU2l6ZSwgeyBcbiAgICAgICAgICAgIGNvbGxpc2lvbkZpbHRlcjoge1xuICAgICAgICAgICAgICAgIGdyb3VwOiBncm91cFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZyaWN0aW9uOiAwLjhcbiAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICB2YXIgYXhlbEEgPSBDb25zdHJhaW50LmNyZWF0ZSh7XG4gICAgICAgICAgICBib2R5QjogYm9keSxcbiAgICAgICAgICAgIHBvaW50QjogeyB4OiB3aGVlbEFPZmZzZXQsIHk6IHdoZWVsWU9mZnNldCB9LFxuICAgICAgICAgICAgYm9keUE6IHdoZWVsQSxcbiAgICAgICAgICAgIHN0aWZmbmVzczogMSxcbiAgICAgICAgICAgIGxlbmd0aDogMFxuICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICB2YXIgYXhlbEIgPSBDb25zdHJhaW50LmNyZWF0ZSh7XG4gICAgICAgICAgICBib2R5QjogYm9keSxcbiAgICAgICAgICAgIHBvaW50QjogeyB4OiB3aGVlbEJPZmZzZXQsIHk6IHdoZWVsWU9mZnNldCB9LFxuICAgICAgICAgICAgYm9keUE6IHdoZWVsQixcbiAgICAgICAgICAgIHN0aWZmbmVzczogMSxcbiAgICAgICAgICAgIGxlbmd0aDogMFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIENvbXBvc2l0ZS5hZGRCb2R5KGNhciwgYm9keSk7XG4gICAgICAgIENvbXBvc2l0ZS5hZGRCb2R5KGNhciwgd2hlZWxBKTtcbiAgICAgICAgQ29tcG9zaXRlLmFkZEJvZHkoY2FyLCB3aGVlbEIpO1xuICAgICAgICBDb21wb3NpdGUuYWRkQ29uc3RyYWludChjYXIsIGF4ZWxBKTtcbiAgICAgICAgQ29tcG9zaXRlLmFkZENvbnN0cmFpbnQoY2FyLCBheGVsQik7XG5cbiAgICAgICAgcmV0dXJuIGNhcjtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNpbXBsZSBzb2Z0IGJvZHkgbGlrZSBvYmplY3QuXG4gICAgICogQG1ldGhvZCBzb2Z0Qm9keVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4eFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5eVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb2x1bW5zXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJvd3NcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gY29sdW1uR2FwXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJvd0dhcFxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gY3Jvc3NCcmFjZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwYXJ0aWNsZVJhZGl1c1xuICAgICAqIEBwYXJhbSB7fSBwYXJ0aWNsZU9wdGlvbnNcbiAgICAgKiBAcGFyYW0ge30gY29uc3RyYWludE9wdGlvbnNcbiAgICAgKiBAcmV0dXJuIHtjb21wb3NpdGV9IEEgbmV3IGNvbXBvc2l0ZSBzb2Z0Qm9keVxuICAgICAqL1xuICAgIENvbXBvc2l0ZXMuc29mdEJvZHkgPSBmdW5jdGlvbih4eCwgeXksIGNvbHVtbnMsIHJvd3MsIGNvbHVtbkdhcCwgcm93R2FwLCBjcm9zc0JyYWNlLCBwYXJ0aWNsZVJhZGl1cywgcGFydGljbGVPcHRpb25zLCBjb25zdHJhaW50T3B0aW9ucykge1xuICAgICAgICBwYXJ0aWNsZU9wdGlvbnMgPSBDb21tb24uZXh0ZW5kKHsgaW5lcnRpYTogSW5maW5pdHkgfSwgcGFydGljbGVPcHRpb25zKTtcbiAgICAgICAgY29uc3RyYWludE9wdGlvbnMgPSBDb21tb24uZXh0ZW5kKHsgc3RpZmZuZXNzOiAwLjIsIHJlbmRlcjogeyB0eXBlOiAnbGluZScsIGFuY2hvcnM6IGZhbHNlIH0gfSwgY29uc3RyYWludE9wdGlvbnMpO1xuXG4gICAgICAgIHZhciBzb2Z0Qm9keSA9IENvbXBvc2l0ZXMuc3RhY2soeHgsIHl5LCBjb2x1bW5zLCByb3dzLCBjb2x1bW5HYXAsIHJvd0dhcCwgZnVuY3Rpb24oeCwgeSkge1xuICAgICAgICAgICAgcmV0dXJuIEJvZGllcy5jaXJjbGUoeCwgeSwgcGFydGljbGVSYWRpdXMsIHBhcnRpY2xlT3B0aW9ucyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIENvbXBvc2l0ZXMubWVzaChzb2Z0Qm9keSwgY29sdW1ucywgcm93cywgY3Jvc3NCcmFjZSwgY29uc3RyYWludE9wdGlvbnMpO1xuXG4gICAgICAgIHNvZnRCb2R5LmxhYmVsID0gJ1NvZnQgQm9keSc7XG5cbiAgICAgICAgcmV0dXJuIHNvZnRCb2R5O1xuICAgIH07XG5cbn0pKCk7XG5cbn0se1wiLi4vYm9keS9Cb2R5XCI6MSxcIi4uL2JvZHkvQ29tcG9zaXRlXCI6MixcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiOjEyLFwiLi4vY29yZS9Db21tb25cIjoxNCxcIi4vQm9kaWVzXCI6MjN9XSwyNTpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuQXhlc2AgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgc2V0cyBvZiBheGVzLlxuKlxuKiBAY2xhc3MgQXhlc1xuKi9cblxudmFyIEF4ZXMgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBBeGVzO1xuXG52YXIgVmVjdG9yID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvVmVjdG9yJyk7XG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi4vY29yZS9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBzZXQgb2YgYXhlcyBmcm9tIHRoZSBnaXZlbiB2ZXJ0aWNlcy5cbiAgICAgKiBAbWV0aG9kIGZyb21WZXJ0aWNlc1xuICAgICAqIEBwYXJhbSB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICogQHJldHVybiB7YXhlc30gQSBuZXcgYXhlcyBmcm9tIHRoZSBnaXZlbiB2ZXJ0aWNlc1xuICAgICAqL1xuICAgIEF4ZXMuZnJvbVZlcnRpY2VzID0gZnVuY3Rpb24odmVydGljZXMpIHtcbiAgICAgICAgdmFyIGF4ZXMgPSB7fTtcblxuICAgICAgICAvLyBmaW5kIHRoZSB1bmlxdWUgYXhlcywgdXNpbmcgZWRnZSBub3JtYWwgZ3JhZGllbnRzXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBqID0gKGkgKyAxKSAlIHZlcnRpY2VzLmxlbmd0aCwgXG4gICAgICAgICAgICAgICAgbm9ybWFsID0gVmVjdG9yLm5vcm1hbGlzZSh7IFxuICAgICAgICAgICAgICAgICAgICB4OiB2ZXJ0aWNlc1tqXS55IC0gdmVydGljZXNbaV0ueSwgXG4gICAgICAgICAgICAgICAgICAgIHk6IHZlcnRpY2VzW2ldLnggLSB2ZXJ0aWNlc1tqXS54XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgZ3JhZGllbnQgPSAobm9ybWFsLnkgPT09IDApID8gSW5maW5pdHkgOiAobm9ybWFsLnggLyBub3JtYWwueSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGxpbWl0IHByZWNpc2lvblxuICAgICAgICAgICAgZ3JhZGllbnQgPSBncmFkaWVudC50b0ZpeGVkKDMpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICBheGVzW2dyYWRpZW50XSA9IG5vcm1hbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBDb21tb24udmFsdWVzKGF4ZXMpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSb3RhdGVzIGEgc2V0IG9mIGF4ZXMgYnkgdGhlIGdpdmVuIGFuZ2xlLlxuICAgICAqIEBtZXRob2Qgcm90YXRlXG4gICAgICogQHBhcmFtIHtheGVzfSBheGVzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGFuZ2xlXG4gICAgICovXG4gICAgQXhlcy5yb3RhdGUgPSBmdW5jdGlvbihheGVzLCBhbmdsZSkge1xuICAgICAgICBpZiAoYW5nbGUgPT09IDApXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIFxuICAgICAgICB2YXIgY29zID0gTWF0aC5jb3MoYW5nbGUpLFxuICAgICAgICAgICAgc2luID0gTWF0aC5zaW4oYW5nbGUpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXhlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGF4aXMgPSBheGVzW2ldLFxuICAgICAgICAgICAgICAgIHh4O1xuICAgICAgICAgICAgeHggPSBheGlzLnggKiBjb3MgLSBheGlzLnkgKiBzaW47XG4gICAgICAgICAgICBheGlzLnkgPSBheGlzLnggKiBzaW4gKyBheGlzLnkgKiBjb3M7XG4gICAgICAgICAgICBheGlzLnggPSB4eDtcbiAgICAgICAgfVxuICAgIH07XG5cbn0pKCk7XG5cbn0se1wiLi4vY29yZS9Db21tb25cIjoxNCxcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4fV0sMjY6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLkJvdW5kc2AgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgYXhpcy1hbGlnbmVkIGJvdW5kaW5nIGJveGVzIChBQUJCKS5cbipcbiogQGNsYXNzIEJvdW5kc1xuKi9cblxudmFyIEJvdW5kcyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJvdW5kcztcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBheGlzLWFsaWduZWQgYm91bmRpbmcgYm94IChBQUJCKSBmb3IgdGhlIGdpdmVuIHZlcnRpY2VzLlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHt2ZXJ0aWNlc30gdmVydGljZXNcbiAgICAgKiBAcmV0dXJuIHtib3VuZHN9IEEgbmV3IGJvdW5kcyBvYmplY3RcbiAgICAgKi9cbiAgICBCb3VuZHMuY3JlYXRlID0gZnVuY3Rpb24odmVydGljZXMpIHtcbiAgICAgICAgdmFyIGJvdW5kcyA9IHsgXG4gICAgICAgICAgICBtaW46IHsgeDogMCwgeTogMCB9LCBcbiAgICAgICAgICAgIG1heDogeyB4OiAwLCB5OiAwIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAodmVydGljZXMpXG4gICAgICAgICAgICBCb3VuZHMudXBkYXRlKGJvdW5kcywgdmVydGljZXMpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGJvdW5kcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyBib3VuZHMgdXNpbmcgdGhlIGdpdmVuIHZlcnRpY2VzIGFuZCBleHRlbmRzIHRoZSBib3VuZHMgZ2l2ZW4gYSB2ZWxvY2l0eS5cbiAgICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICAqIEBwYXJhbSB7Ym91bmRzfSBib3VuZHNcbiAgICAgKiBAcGFyYW0ge3ZlcnRpY2VzfSB2ZXJ0aWNlc1xuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWxvY2l0eVxuICAgICAqL1xuICAgIEJvdW5kcy51cGRhdGUgPSBmdW5jdGlvbihib3VuZHMsIHZlcnRpY2VzLCB2ZWxvY2l0eSkge1xuICAgICAgICBib3VuZHMubWluLnggPSBJbmZpbml0eTtcbiAgICAgICAgYm91bmRzLm1heC54ID0gLUluZmluaXR5O1xuICAgICAgICBib3VuZHMubWluLnkgPSBJbmZpbml0eTtcbiAgICAgICAgYm91bmRzLm1heC55ID0gLUluZmluaXR5O1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciB2ZXJ0ZXggPSB2ZXJ0aWNlc1tpXTtcbiAgICAgICAgICAgIGlmICh2ZXJ0ZXgueCA+IGJvdW5kcy5tYXgueCkgYm91bmRzLm1heC54ID0gdmVydGV4Lng7XG4gICAgICAgICAgICBpZiAodmVydGV4LnggPCBib3VuZHMubWluLngpIGJvdW5kcy5taW4ueCA9IHZlcnRleC54O1xuICAgICAgICAgICAgaWYgKHZlcnRleC55ID4gYm91bmRzLm1heC55KSBib3VuZHMubWF4LnkgPSB2ZXJ0ZXgueTtcbiAgICAgICAgICAgIGlmICh2ZXJ0ZXgueSA8IGJvdW5kcy5taW4ueSkgYm91bmRzLm1pbi55ID0gdmVydGV4Lnk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmICh2ZWxvY2l0eSkge1xuICAgICAgICAgICAgaWYgKHZlbG9jaXR5LnggPiAwKSB7XG4gICAgICAgICAgICAgICAgYm91bmRzLm1heC54ICs9IHZlbG9jaXR5Lng7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGJvdW5kcy5taW4ueCArPSB2ZWxvY2l0eS54O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAodmVsb2NpdHkueSA+IDApIHtcbiAgICAgICAgICAgICAgICBib3VuZHMubWF4LnkgKz0gdmVsb2NpdHkueTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYm91bmRzLm1pbi55ICs9IHZlbG9jaXR5Lnk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBib3VuZHMgY29udGFpbnMgdGhlIGdpdmVuIHBvaW50LlxuICAgICAqIEBtZXRob2QgY29udGFpbnNcbiAgICAgKiBAcGFyYW0ge2JvdW5kc30gYm91bmRzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYm91bmRzIGNvbnRhaW4gdGhlIHBvaW50LCBvdGhlcndpc2UgZmFsc2VcbiAgICAgKi9cbiAgICBCb3VuZHMuY29udGFpbnMgPSBmdW5jdGlvbihib3VuZHMsIHBvaW50KSB7XG4gICAgICAgIHJldHVybiBwb2ludC54ID49IGJvdW5kcy5taW4ueCAmJiBwb2ludC54IDw9IGJvdW5kcy5tYXgueCBcbiAgICAgICAgICAgICAgICYmIHBvaW50LnkgPj0gYm91bmRzLm1pbi55ICYmIHBvaW50LnkgPD0gYm91bmRzLm1heC55O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIHR3byBib3VuZHMgaW50ZXJzZWN0LlxuICAgICAqIEBtZXRob2Qgb3ZlcmxhcHNcbiAgICAgKiBAcGFyYW0ge2JvdW5kc30gYm91bmRzQVxuICAgICAqIEBwYXJhbSB7Ym91bmRzfSBib3VuZHNCXG4gICAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYm91bmRzIG92ZXJsYXAsIG90aGVyd2lzZSBmYWxzZVxuICAgICAqL1xuICAgIEJvdW5kcy5vdmVybGFwcyA9IGZ1bmN0aW9uKGJvdW5kc0EsIGJvdW5kc0IpIHtcbiAgICAgICAgcmV0dXJuIChib3VuZHNBLm1pbi54IDw9IGJvdW5kc0IubWF4LnggJiYgYm91bmRzQS5tYXgueCA+PSBib3VuZHNCLm1pbi54XG4gICAgICAgICAgICAgICAgJiYgYm91bmRzQS5tYXgueSA+PSBib3VuZHNCLm1pbi55ICYmIGJvdW5kc0EubWluLnkgPD0gYm91bmRzQi5tYXgueSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRyYW5zbGF0ZXMgdGhlIGJvdW5kcyBieSB0aGUgZ2l2ZW4gdmVjdG9yLlxuICAgICAqIEBtZXRob2QgdHJhbnNsYXRlXG4gICAgICogQHBhcmFtIHtib3VuZHN9IGJvdW5kc1xuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JcbiAgICAgKi9cbiAgICBCb3VuZHMudHJhbnNsYXRlID0gZnVuY3Rpb24oYm91bmRzLCB2ZWN0b3IpIHtcbiAgICAgICAgYm91bmRzLm1pbi54ICs9IHZlY3Rvci54O1xuICAgICAgICBib3VuZHMubWF4LnggKz0gdmVjdG9yLng7XG4gICAgICAgIGJvdW5kcy5taW4ueSArPSB2ZWN0b3IueTtcbiAgICAgICAgYm91bmRzLm1heC55ICs9IHZlY3Rvci55O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTaGlmdHMgdGhlIGJvdW5kcyB0byB0aGUgZ2l2ZW4gcG9zaXRpb24uXG4gICAgICogQG1ldGhvZCBzaGlmdFxuICAgICAqIEBwYXJhbSB7Ym91bmRzfSBib3VuZHNcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gcG9zaXRpb25cbiAgICAgKi9cbiAgICBCb3VuZHMuc2hpZnQgPSBmdW5jdGlvbihib3VuZHMsIHBvc2l0aW9uKSB7XG4gICAgICAgIHZhciBkZWx0YVggPSBib3VuZHMubWF4LnggLSBib3VuZHMubWluLngsXG4gICAgICAgICAgICBkZWx0YVkgPSBib3VuZHMubWF4LnkgLSBib3VuZHMubWluLnk7XG4gICAgICAgICAgICBcbiAgICAgICAgYm91bmRzLm1pbi54ID0gcG9zaXRpb24ueDtcbiAgICAgICAgYm91bmRzLm1heC54ID0gcG9zaXRpb24ueCArIGRlbHRhWDtcbiAgICAgICAgYm91bmRzLm1pbi55ID0gcG9zaXRpb24ueTtcbiAgICAgICAgYm91bmRzLm1heC55ID0gcG9zaXRpb24ueSArIGRlbHRhWTtcbiAgICB9O1xuICAgIFxufSkoKTtcblxufSx7fV0sMjc6W2Z1bmN0aW9uKF9kZXJlcV8sbW9kdWxlLGV4cG9ydHMpe1xuLyoqXG4qIFRoZSBgTWF0dGVyLlN2Z2AgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNvbnZlcnRpbmcgU1ZHIGltYWdlcyBpbnRvIGFuIGFycmF5IG9mIHZlY3RvciBwb2ludHMuXG4qXG4qIFRvIHVzZSB0aGlzIG1vZHVsZSB5b3UgYWxzbyBuZWVkIHRoZSBTVkdQYXRoU2VnIHBvbHlmaWxsOiBodHRwczovL2dpdGh1Yi5jb20vcHJvZ2Vycy9wYXRoc2VnXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBTdmdcbiovXG5cbnZhciBTdmcgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBTdmc7XG5cbnZhciBCb3VuZHMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9Cb3VuZHMnKTtcbnZhciBDb21tb24gPSBfZGVyZXFfKCcuLi9jb3JlL0NvbW1vbicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0cyBhbiBTVkcgcGF0aCBpbnRvIGFuIGFycmF5IG9mIHZlY3RvciBwb2ludHMuXG4gICAgICogSWYgdGhlIGlucHV0IHBhdGggZm9ybXMgYSBjb25jYXZlIHNoYXBlLCB5b3UgbXVzdCBkZWNvbXBvc2UgdGhlIHJlc3VsdCBpbnRvIGNvbnZleCBwYXJ0cyBiZWZvcmUgdXNlLlxuICAgICAqIFNlZSBgQm9kaWVzLmZyb21WZXJ0aWNlc2Agd2hpY2ggcHJvdmlkZXMgc3VwcG9ydCBmb3IgdGhpcy5cbiAgICAgKiBOb3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBub3QgZ3VhcmFudGVlZCB0byBzdXBwb3J0IGNvbXBsZXggcGF0aHMgKHN1Y2ggYXMgdGhvc2Ugd2l0aCBob2xlcykuXG4gICAgICogWW91IG11c3QgbG9hZCB0aGUgYHBhdGhzZWcuanNgIHBvbHlmaWxsIG9uIG5ld2VyIGJyb3dzZXJzLlxuICAgICAqIEBtZXRob2QgcGF0aFRvVmVydGljZXNcbiAgICAgKiBAcGFyYW0ge1NWR1BhdGhFbGVtZW50fSBwYXRoXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IFtzYW1wbGVMZW5ndGg9MTVdXG4gICAgICogQHJldHVybiB7VmVjdG9yW119IHBvaW50c1xuICAgICAqL1xuICAgIFN2Zy5wYXRoVG9WZXJ0aWNlcyA9IGZ1bmN0aW9uKHBhdGgsIHNhbXBsZUxlbmd0aCkge1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgISgnU1ZHUGF0aFNlZycgaW4gd2luZG93KSkge1xuICAgICAgICAgICAgQ29tbW9uLndhcm4oJ1N2Zy5wYXRoVG9WZXJ0aWNlczogU1ZHUGF0aFNlZyBub3QgZGVmaW5lZCwgYSBwb2x5ZmlsbCBpcyByZXF1aXJlZC4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS93b3V0L3N2Zy50b3BvbHkuanMvYmxvYi9tYXN0ZXIvc3ZnLnRvcG9seS5qc1xuICAgICAgICB2YXIgaSwgaWwsIHRvdGFsLCBwb2ludCwgc2VnbWVudCwgc2VnbWVudHMsIFxuICAgICAgICAgICAgc2VnbWVudHNRdWV1ZSwgbGFzdFNlZ21lbnQsIFxuICAgICAgICAgICAgbGFzdFBvaW50LCBzZWdtZW50SW5kZXgsIHBvaW50cyA9IFtdLFxuICAgICAgICAgICAgbHgsIGx5LCBsZW5ndGggPSAwLCB4ID0gMCwgeSA9IDA7XG5cbiAgICAgICAgc2FtcGxlTGVuZ3RoID0gc2FtcGxlTGVuZ3RoIHx8IDE1O1xuXG4gICAgICAgIHZhciBhZGRQb2ludCA9IGZ1bmN0aW9uKHB4LCBweSwgcGF0aFNlZ1R5cGUpIHtcbiAgICAgICAgICAgIC8vIGFsbCBvZGQtbnVtYmVyZWQgcGF0aCB0eXBlcyBhcmUgcmVsYXRpdmUgZXhjZXB0IFBBVEhTRUdfQ0xPU0VQQVRIICgxKVxuICAgICAgICAgICAgdmFyIGlzUmVsYXRpdmUgPSBwYXRoU2VnVHlwZSAlIDIgPT09IDEgJiYgcGF0aFNlZ1R5cGUgPiAxO1xuXG4gICAgICAgICAgICAvLyB3aGVuIHRoZSBsYXN0IHBvaW50IGRvZXNuJ3QgZXF1YWwgdGhlIGN1cnJlbnQgcG9pbnQgYWRkIHRoZSBjdXJyZW50IHBvaW50XG4gICAgICAgICAgICBpZiAoIWxhc3RQb2ludCB8fCBweCAhPSBsYXN0UG9pbnQueCB8fCBweSAhPSBsYXN0UG9pbnQueSkge1xuICAgICAgICAgICAgICAgIGlmIChsYXN0UG9pbnQgJiYgaXNSZWxhdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICBseCA9IGxhc3RQb2ludC54O1xuICAgICAgICAgICAgICAgICAgICBseSA9IGxhc3RQb2ludC55O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGx4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgbHkgPSAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBwb2ludCA9IHtcbiAgICAgICAgICAgICAgICAgICAgeDogbHggKyBweCxcbiAgICAgICAgICAgICAgICAgICAgeTogbHkgKyBweVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAvLyBzZXQgbGFzdCBwb2ludFxuICAgICAgICAgICAgICAgIGlmIChpc1JlbGF0aXZlIHx8ICFsYXN0UG9pbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgbGFzdFBvaW50ID0gcG9pbnQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcG9pbnRzLnB1c2gocG9pbnQpO1xuXG4gICAgICAgICAgICAgICAgeCA9IGx4ICsgcHg7XG4gICAgICAgICAgICAgICAgeSA9IGx5ICsgcHk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGFkZFNlZ21lbnRQb2ludCA9IGZ1bmN0aW9uKHNlZ21lbnQpIHtcbiAgICAgICAgICAgIHZhciBzZWdUeXBlID0gc2VnbWVudC5wYXRoU2VnVHlwZUFzTGV0dGVyLnRvVXBwZXJDYXNlKCk7XG5cbiAgICAgICAgICAgIC8vIHNraXAgcGF0aCBlbmRzXG4gICAgICAgICAgICBpZiAoc2VnVHlwZSA9PT0gJ1onKSBcbiAgICAgICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgICAgIC8vIG1hcCBzZWdtZW50IHRvIHggYW5kIHlcbiAgICAgICAgICAgIHN3aXRjaCAoc2VnVHlwZSkge1xuXG4gICAgICAgICAgICBjYXNlICdNJzpcbiAgICAgICAgICAgIGNhc2UgJ0wnOlxuICAgICAgICAgICAgY2FzZSAnVCc6XG4gICAgICAgICAgICBjYXNlICdDJzpcbiAgICAgICAgICAgIGNhc2UgJ1MnOlxuICAgICAgICAgICAgY2FzZSAnUSc6XG4gICAgICAgICAgICAgICAgeCA9IHNlZ21lbnQueDtcbiAgICAgICAgICAgICAgICB5ID0gc2VnbWVudC55O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnSCc6XG4gICAgICAgICAgICAgICAgeCA9IHNlZ21lbnQueDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ1YnOlxuICAgICAgICAgICAgICAgIHkgPSBzZWdtZW50Lnk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFkZFBvaW50KHgsIHksIHNlZ21lbnQucGF0aFNlZ1R5cGUpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGVuc3VyZSBwYXRoIGlzIGFic29sdXRlXG4gICAgICAgIFN2Zy5fc3ZnUGF0aFRvQWJzb2x1dGUocGF0aCk7XG5cbiAgICAgICAgLy8gZ2V0IHRvdGFsIGxlbmd0aFxuICAgICAgICB0b3RhbCA9IHBhdGguZ2V0VG90YWxMZW5ndGgoKTtcblxuICAgICAgICAvLyBxdWV1ZSBzZWdtZW50c1xuICAgICAgICBzZWdtZW50cyA9IFtdO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGF0aC5wYXRoU2VnTGlzdC5udW1iZXJPZkl0ZW1zOyBpICs9IDEpXG4gICAgICAgICAgICBzZWdtZW50cy5wdXNoKHBhdGgucGF0aFNlZ0xpc3QuZ2V0SXRlbShpKSk7XG5cbiAgICAgICAgc2VnbWVudHNRdWV1ZSA9IHNlZ21lbnRzLmNvbmNhdCgpO1xuXG4gICAgICAgIC8vIHNhbXBsZSB0aHJvdWdoIHBhdGhcbiAgICAgICAgd2hpbGUgKGxlbmd0aCA8IHRvdGFsKSB7XG4gICAgICAgICAgICAvLyBnZXQgc2VnbWVudCBhdCBwb3NpdGlvblxuICAgICAgICAgICAgc2VnbWVudEluZGV4ID0gcGF0aC5nZXRQYXRoU2VnQXRMZW5ndGgobGVuZ3RoKTtcbiAgICAgICAgICAgIHNlZ21lbnQgPSBzZWdtZW50c1tzZWdtZW50SW5kZXhdO1xuXG4gICAgICAgICAgICAvLyBuZXcgc2VnbWVudFxuICAgICAgICAgICAgaWYgKHNlZ21lbnQgIT0gbGFzdFNlZ21lbnQpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAoc2VnbWVudHNRdWV1ZS5sZW5ndGggJiYgc2VnbWVudHNRdWV1ZVswXSAhPSBzZWdtZW50KVxuICAgICAgICAgICAgICAgICAgICBhZGRTZWdtZW50UG9pbnQoc2VnbWVudHNRdWV1ZS5zaGlmdCgpKTtcblxuICAgICAgICAgICAgICAgIGxhc3RTZWdtZW50ID0gc2VnbWVudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gYWRkIHBvaW50cyBpbiBiZXR3ZWVuIHdoZW4gY3VydmluZ1xuICAgICAgICAgICAgLy8gVE9ETzogYWRhcHRpdmUgc2FtcGxpbmdcbiAgICAgICAgICAgIHN3aXRjaCAoc2VnbWVudC5wYXRoU2VnVHlwZUFzTGV0dGVyLnRvVXBwZXJDYXNlKCkpIHtcblxuICAgICAgICAgICAgY2FzZSAnQyc6XG4gICAgICAgICAgICBjYXNlICdUJzpcbiAgICAgICAgICAgIGNhc2UgJ1MnOlxuICAgICAgICAgICAgY2FzZSAnUSc6XG4gICAgICAgICAgICBjYXNlICdBJzpcbiAgICAgICAgICAgICAgICBwb2ludCA9IHBhdGguZ2V0UG9pbnRBdExlbmd0aChsZW5ndGgpO1xuICAgICAgICAgICAgICAgIGFkZFBvaW50KHBvaW50LngsIHBvaW50LnksIDApO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGluY3JlbWVudCBieSBzYW1wbGUgdmFsdWVcbiAgICAgICAgICAgIGxlbmd0aCArPSBzYW1wbGVMZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhZGQgcmVtYWluaW5nIHNlZ21lbnRzIG5vdCBwYXNzZWQgYnkgc2FtcGxpbmdcbiAgICAgICAgZm9yIChpID0gMCwgaWwgPSBzZWdtZW50c1F1ZXVlLmxlbmd0aDsgaSA8IGlsOyArK2kpXG4gICAgICAgICAgICBhZGRTZWdtZW50UG9pbnQoc2VnbWVudHNRdWV1ZVtpXSk7XG5cbiAgICAgICAgcmV0dXJuIHBvaW50cztcbiAgICB9O1xuXG4gICAgU3ZnLl9zdmdQYXRoVG9BYnNvbHV0ZSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICAgICAgLy8gaHR0cDovL3Bocm9nei5uZXQvY29udmVydC1zdmctcGF0aC10by1hbGwtYWJzb2x1dGUtY29tbWFuZHNcbiAgICAgICAgLy8gQ29weXJpZ2h0IChjKSBHYXZpbiBLaXN0bmVyXG4gICAgICAgIC8vIGh0dHA6Ly9waHJvZ3oubmV0L2pzL19SZXVzZUxpY2Vuc2UudHh0XG4gICAgICAgIC8vIE1vZGlmaWNhdGlvbnM6IHRpZHkgZm9ybWF0dGluZyBhbmQgbmFtaW5nXG4gICAgICAgIHZhciB4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCBzZWdzID0gcGF0aC5wYXRoU2VnTGlzdCxcbiAgICAgICAgICAgIHggPSAwLCB5ID0gMCwgbGVuID0gc2Vncy5udW1iZXJPZkl0ZW1zO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBzZWcgPSBzZWdzLmdldEl0ZW0oaSksXG4gICAgICAgICAgICAgICAgc2VnVHlwZSA9IHNlZy5wYXRoU2VnVHlwZUFzTGV0dGVyO1xuXG4gICAgICAgICAgICBpZiAoL1tNTEhWQ1NRVEFdLy50ZXN0KHNlZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCd4JyBpbiBzZWcpIHggPSBzZWcueDtcbiAgICAgICAgICAgICAgICBpZiAoJ3knIGluIHNlZykgeSA9IHNlZy55O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoJ3gxJyBpbiBzZWcpIHgxID0geCArIHNlZy54MTtcbiAgICAgICAgICAgICAgICBpZiAoJ3gyJyBpbiBzZWcpIHgyID0geCArIHNlZy54MjtcbiAgICAgICAgICAgICAgICBpZiAoJ3kxJyBpbiBzZWcpIHkxID0geSArIHNlZy55MTtcbiAgICAgICAgICAgICAgICBpZiAoJ3kyJyBpbiBzZWcpIHkyID0geSArIHNlZy55MjtcbiAgICAgICAgICAgICAgICBpZiAoJ3gnIGluIHNlZykgeCArPSBzZWcueDtcbiAgICAgICAgICAgICAgICBpZiAoJ3knIGluIHNlZykgeSArPSBzZWcueTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoc2VnVHlwZSkge1xuXG4gICAgICAgICAgICAgICAgY2FzZSAnbSc6XG4gICAgICAgICAgICAgICAgICAgIHNlZ3MucmVwbGFjZUl0ZW0ocGF0aC5jcmVhdGVTVkdQYXRoU2VnTW92ZXRvQWJzKHgsIHkpLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnbCc6XG4gICAgICAgICAgICAgICAgICAgIHNlZ3MucmVwbGFjZUl0ZW0ocGF0aC5jcmVhdGVTVkdQYXRoU2VnTGluZXRvQWJzKHgsIHkpLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnaCc6XG4gICAgICAgICAgICAgICAgICAgIHNlZ3MucmVwbGFjZUl0ZW0ocGF0aC5jcmVhdGVTVkdQYXRoU2VnTGluZXRvSG9yaXpvbnRhbEFicyh4KSwgaSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3YnOlxuICAgICAgICAgICAgICAgICAgICBzZWdzLnJlcGxhY2VJdGVtKHBhdGguY3JlYXRlU1ZHUGF0aFNlZ0xpbmV0b1ZlcnRpY2FsQWJzKHkpLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnYyc6XG4gICAgICAgICAgICAgICAgICAgIHNlZ3MucmVwbGFjZUl0ZW0ocGF0aC5jcmVhdGVTVkdQYXRoU2VnQ3VydmV0b0N1YmljQWJzKHgsIHksIHgxLCB5MSwgeDIsIHkyKSwgaSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3MnOlxuICAgICAgICAgICAgICAgICAgICBzZWdzLnJlcGxhY2VJdGVtKHBhdGguY3JlYXRlU1ZHUGF0aFNlZ0N1cnZldG9DdWJpY1Ntb290aEFicyh4LCB5LCB4MiwgeTIpLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAncSc6XG4gICAgICAgICAgICAgICAgICAgIHNlZ3MucmVwbGFjZUl0ZW0ocGF0aC5jcmVhdGVTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY0Ficyh4LCB5LCB4MSwgeTEpLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAndCc6XG4gICAgICAgICAgICAgICAgICAgIHNlZ3MucmVwbGFjZUl0ZW0ocGF0aC5jcmVhdGVTVkdQYXRoU2VnQ3VydmV0b1F1YWRyYXRpY1Ntb290aEFicyh4LCB5KSwgaSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2EnOlxuICAgICAgICAgICAgICAgICAgICBzZWdzLnJlcGxhY2VJdGVtKHBhdGguY3JlYXRlU1ZHUGF0aFNlZ0FyY0Ficyh4LCB5LCBzZWcucjEsIHNlZy5yMiwgc2VnLmFuZ2xlLCBzZWcubGFyZ2VBcmNGbGFnLCBzZWcuc3dlZXBGbGFnKSwgaSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3onOlxuICAgICAgICAgICAgICAgIGNhc2UgJ1onOlxuICAgICAgICAgICAgICAgICAgICB4ID0geDA7XG4gICAgICAgICAgICAgICAgICAgIHkgPSB5MDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzZWdUeXBlID09ICdNJyB8fCBzZWdUeXBlID09ICdtJykge1xuICAgICAgICAgICAgICAgIHgwID0geDtcbiAgICAgICAgICAgICAgICB5MCA9IHk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSgpO1xufSx7XCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjZ9XSwyODpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuVmVjdG9yYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgY3JlYXRpbmcgYW5kIG1hbmlwdWxhdGluZyB2ZWN0b3JzLlxuKiBWZWN0b3JzIGFyZSB0aGUgYmFzaXMgb2YgYWxsIHRoZSBnZW9tZXRyeSByZWxhdGVkIG9wZXJhdGlvbnMgaW4gdGhlIGVuZ2luZS5cbiogQSBgTWF0dGVyLlZlY3RvcmAgb2JqZWN0IGlzIG9mIHRoZSBmb3JtIGB7IHg6IDAsIHk6IDAgfWAuXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBWZWN0b3JcbiovXG5cbi8vIFRPRE86IGNvbnNpZGVyIHBhcmFtcyBmb3IgcmV1c2luZyB2ZWN0b3Igb2JqZWN0c1xuXG52YXIgVmVjdG9yID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gVmVjdG9yO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHZlY3Rvci5cbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHlcbiAgICAgKiBAcmV0dXJuIHt2ZWN0b3J9IEEgbmV3IHZlY3RvclxuICAgICAqL1xuICAgIFZlY3Rvci5jcmVhdGUgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgIHJldHVybiB7IHg6IHggfHwgMCwgeTogeSB8fCAwIH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgdmVjdG9yIHdpdGggYHhgIGFuZCBgeWAgY29waWVkIGZyb20gdGhlIGdpdmVuIGB2ZWN0b3JgLlxuICAgICAqIEBtZXRob2QgY2xvbmVcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBBIG5ldyBjbG9uZWQgdmVjdG9yXG4gICAgICovXG4gICAgVmVjdG9yLmNsb25lID0gZnVuY3Rpb24odmVjdG9yKSB7XG4gICAgICAgIHJldHVybiB7IHg6IHZlY3Rvci54LCB5OiB2ZWN0b3IueSB9O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBtYWduaXR1ZGUgKGxlbmd0aCkgb2YgYSB2ZWN0b3IuXG4gICAgICogQG1ldGhvZCBtYWduaXR1ZGVcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yXG4gICAgICogQHJldHVybiB7bnVtYmVyfSBUaGUgbWFnbml0dWRlIG9mIHRoZSB2ZWN0b3JcbiAgICAgKi9cbiAgICBWZWN0b3IubWFnbml0dWRlID0gZnVuY3Rpb24odmVjdG9yKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnNxcnQoKHZlY3Rvci54ICogdmVjdG9yLngpICsgKHZlY3Rvci55ICogdmVjdG9yLnkpKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgbWFnbml0dWRlIChsZW5ndGgpIG9mIGEgdmVjdG9yICh0aGVyZWZvcmUgc2F2aW5nIGEgYHNxcnRgIG9wZXJhdGlvbikuXG4gICAgICogQG1ldGhvZCBtYWduaXR1ZGVTcXVhcmVkXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvclxuICAgICAqIEByZXR1cm4ge251bWJlcn0gVGhlIHNxdWFyZWQgbWFnbml0dWRlIG9mIHRoZSB2ZWN0b3JcbiAgICAgKi9cbiAgICBWZWN0b3IubWFnbml0dWRlU3F1YXJlZCA9IGZ1bmN0aW9uKHZlY3Rvcikge1xuICAgICAgICByZXR1cm4gKHZlY3Rvci54ICogdmVjdG9yLngpICsgKHZlY3Rvci55ICogdmVjdG9yLnkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSb3RhdGVzIHRoZSB2ZWN0b3IgYWJvdXQgKDAsIDApIGJ5IHNwZWNpZmllZCBhbmdsZS5cbiAgICAgKiBAbWV0aG9kIHJvdGF0ZVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYW5nbGVcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gW291dHB1dF1cbiAgICAgKiBAcmV0dXJuIHt2ZWN0b3J9IFRoZSB2ZWN0b3Igcm90YXRlZCBhYm91dCAoMCwgMClcbiAgICAgKi9cbiAgICBWZWN0b3Iucm90YXRlID0gZnVuY3Rpb24odmVjdG9yLCBhbmdsZSwgb3V0cHV0KSB7XG4gICAgICAgIHZhciBjb3MgPSBNYXRoLmNvcyhhbmdsZSksIHNpbiA9IE1hdGguc2luKGFuZ2xlKTtcbiAgICAgICAgaWYgKCFvdXRwdXQpIG91dHB1dCA9IHt9O1xuICAgICAgICB2YXIgeCA9IHZlY3Rvci54ICogY29zIC0gdmVjdG9yLnkgKiBzaW47XG4gICAgICAgIG91dHB1dC55ID0gdmVjdG9yLnggKiBzaW4gKyB2ZWN0b3IueSAqIGNvcztcbiAgICAgICAgb3V0cHV0LnggPSB4O1xuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSb3RhdGVzIHRoZSB2ZWN0b3IgYWJvdXQgYSBzcGVjaWZpZWQgcG9pbnQgYnkgc3BlY2lmaWVkIGFuZ2xlLlxuICAgICAqIEBtZXRob2Qgcm90YXRlQWJvdXRcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGFuZ2xlXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IFtvdXRwdXRdXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBBIG5ldyB2ZWN0b3Igcm90YXRlZCBhYm91dCB0aGUgcG9pbnRcbiAgICAgKi9cbiAgICBWZWN0b3Iucm90YXRlQWJvdXQgPSBmdW5jdGlvbih2ZWN0b3IsIGFuZ2xlLCBwb2ludCwgb3V0cHV0KSB7XG4gICAgICAgIHZhciBjb3MgPSBNYXRoLmNvcyhhbmdsZSksIHNpbiA9IE1hdGguc2luKGFuZ2xlKTtcbiAgICAgICAgaWYgKCFvdXRwdXQpIG91dHB1dCA9IHt9O1xuICAgICAgICB2YXIgeCA9IHBvaW50LnggKyAoKHZlY3Rvci54IC0gcG9pbnQueCkgKiBjb3MgLSAodmVjdG9yLnkgLSBwb2ludC55KSAqIHNpbik7XG4gICAgICAgIG91dHB1dC55ID0gcG9pbnQueSArICgodmVjdG9yLnggLSBwb2ludC54KSAqIHNpbiArICh2ZWN0b3IueSAtIHBvaW50LnkpICogY29zKTtcbiAgICAgICAgb3V0cHV0LnggPSB4O1xuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBOb3JtYWxpc2VzIGEgdmVjdG9yIChzdWNoIHRoYXQgaXRzIG1hZ25pdHVkZSBpcyBgMWApLlxuICAgICAqIEBtZXRob2Qgbm9ybWFsaXNlXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvclxuICAgICAqIEByZXR1cm4ge3ZlY3Rvcn0gQSBuZXcgdmVjdG9yIG5vcm1hbGlzZWRcbiAgICAgKi9cbiAgICBWZWN0b3Iubm9ybWFsaXNlID0gZnVuY3Rpb24odmVjdG9yKSB7XG4gICAgICAgIHZhciBtYWduaXR1ZGUgPSBWZWN0b3IubWFnbml0dWRlKHZlY3Rvcik7XG4gICAgICAgIGlmIChtYWduaXR1ZGUgPT09IDApXG4gICAgICAgICAgICByZXR1cm4geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIHJldHVybiB7IHg6IHZlY3Rvci54IC8gbWFnbml0dWRlLCB5OiB2ZWN0b3IueSAvIG1hZ25pdHVkZSB9O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBkb3QtcHJvZHVjdCBvZiB0d28gdmVjdG9ycy5cbiAgICAgKiBAbWV0aG9kIGRvdFxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JBXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvckJcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IFRoZSBkb3QgcHJvZHVjdCBvZiB0aGUgdHdvIHZlY3RvcnNcbiAgICAgKi9cbiAgICBWZWN0b3IuZG90ID0gZnVuY3Rpb24odmVjdG9yQSwgdmVjdG9yQikge1xuICAgICAgICByZXR1cm4gKHZlY3RvckEueCAqIHZlY3RvckIueCkgKyAodmVjdG9yQS55ICogdmVjdG9yQi55KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY3Jvc3MtcHJvZHVjdCBvZiB0d28gdmVjdG9ycy5cbiAgICAgKiBAbWV0aG9kIGNyb3NzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvckFcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yQlxuICAgICAqIEByZXR1cm4ge251bWJlcn0gVGhlIGNyb3NzIHByb2R1Y3Qgb2YgdGhlIHR3byB2ZWN0b3JzXG4gICAgICovXG4gICAgVmVjdG9yLmNyb3NzID0gZnVuY3Rpb24odmVjdG9yQSwgdmVjdG9yQikge1xuICAgICAgICByZXR1cm4gKHZlY3RvckEueCAqIHZlY3RvckIueSkgLSAodmVjdG9yQS55ICogdmVjdG9yQi54KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY3Jvc3MtcHJvZHVjdCBvZiB0aHJlZSB2ZWN0b3JzLlxuICAgICAqIEBtZXRob2QgY3Jvc3MzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvckFcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yQlxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JDXG4gICAgICogQHJldHVybiB7bnVtYmVyfSBUaGUgY3Jvc3MgcHJvZHVjdCBvZiB0aGUgdGhyZWUgdmVjdG9yc1xuICAgICAqL1xuICAgIFZlY3Rvci5jcm9zczMgPSBmdW5jdGlvbih2ZWN0b3JBLCB2ZWN0b3JCLCB2ZWN0b3JDKSB7XG4gICAgICAgIHJldHVybiAodmVjdG9yQi54IC0gdmVjdG9yQS54KSAqICh2ZWN0b3JDLnkgLSB2ZWN0b3JBLnkpIC0gKHZlY3RvckIueSAtIHZlY3RvckEueSkgKiAodmVjdG9yQy54IC0gdmVjdG9yQS54KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQWRkcyB0aGUgdHdvIHZlY3RvcnMuXG4gICAgICogQG1ldGhvZCBhZGRcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yQVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JCXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IFtvdXRwdXRdXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBBIG5ldyB2ZWN0b3Igb2YgdmVjdG9yQSBhbmQgdmVjdG9yQiBhZGRlZFxuICAgICAqL1xuICAgIFZlY3Rvci5hZGQgPSBmdW5jdGlvbih2ZWN0b3JBLCB2ZWN0b3JCLCBvdXRwdXQpIHtcbiAgICAgICAgaWYgKCFvdXRwdXQpIG91dHB1dCA9IHt9O1xuICAgICAgICBvdXRwdXQueCA9IHZlY3RvckEueCArIHZlY3RvckIueDtcbiAgICAgICAgb3V0cHV0LnkgPSB2ZWN0b3JBLnkgKyB2ZWN0b3JCLnk7XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFN1YnRyYWN0cyB0aGUgdHdvIHZlY3RvcnMuXG4gICAgICogQG1ldGhvZCBzdWJcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yQVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JCXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IFtvdXRwdXRdXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBBIG5ldyB2ZWN0b3Igb2YgdmVjdG9yQSBhbmQgdmVjdG9yQiBzdWJ0cmFjdGVkXG4gICAgICovXG4gICAgVmVjdG9yLnN1YiA9IGZ1bmN0aW9uKHZlY3RvckEsIHZlY3RvckIsIG91dHB1dCkge1xuICAgICAgICBpZiAoIW91dHB1dCkgb3V0cHV0ID0ge307XG4gICAgICAgIG91dHB1dC54ID0gdmVjdG9yQS54IC0gdmVjdG9yQi54O1xuICAgICAgICBvdXRwdXQueSA9IHZlY3RvckEueSAtIHZlY3RvckIueTtcbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogTXVsdGlwbGllcyBhIHZlY3RvciBhbmQgYSBzY2FsYXIuXG4gICAgICogQG1ldGhvZCBtdWx0XG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY2FsYXJcbiAgICAgKiBAcmV0dXJuIHt2ZWN0b3J9IEEgbmV3IHZlY3RvciBtdWx0aXBsaWVkIGJ5IHNjYWxhclxuICAgICAqL1xuICAgIFZlY3Rvci5tdWx0ID0gZnVuY3Rpb24odmVjdG9yLCBzY2FsYXIpIHtcbiAgICAgICAgcmV0dXJuIHsgeDogdmVjdG9yLnggKiBzY2FsYXIsIHk6IHZlY3Rvci55ICogc2NhbGFyIH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERpdmlkZXMgYSB2ZWN0b3IgYW5kIGEgc2NhbGFyLlxuICAgICAqIEBtZXRob2QgZGl2XG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY2FsYXJcbiAgICAgKiBAcmV0dXJuIHt2ZWN0b3J9IEEgbmV3IHZlY3RvciBkaXZpZGVkIGJ5IHNjYWxhclxuICAgICAqL1xuICAgIFZlY3Rvci5kaXYgPSBmdW5jdGlvbih2ZWN0b3IsIHNjYWxhcikge1xuICAgICAgICByZXR1cm4geyB4OiB2ZWN0b3IueCAvIHNjYWxhciwgeTogdmVjdG9yLnkgLyBzY2FsYXIgfTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgcGVycGVuZGljdWxhciB2ZWN0b3IuIFNldCBgbmVnYXRlYCB0byB0cnVlIGZvciB0aGUgcGVycGVuZGljdWxhciBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uLlxuICAgICAqIEBtZXRob2QgcGVycFxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JcbiAgICAgKiBAcGFyYW0ge2Jvb2x9IFtuZWdhdGU9ZmFsc2VdXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBUaGUgcGVycGVuZGljdWxhciB2ZWN0b3JcbiAgICAgKi9cbiAgICBWZWN0b3IucGVycCA9IGZ1bmN0aW9uKHZlY3RvciwgbmVnYXRlKSB7XG4gICAgICAgIG5lZ2F0ZSA9IG5lZ2F0ZSA9PT0gdHJ1ZSA/IC0xIDogMTtcbiAgICAgICAgcmV0dXJuIHsgeDogbmVnYXRlICogLXZlY3Rvci55LCB5OiBuZWdhdGUgKiB2ZWN0b3IueCB9O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBOZWdhdGVzIGJvdGggY29tcG9uZW50cyBvZiBhIHZlY3RvciBzdWNoIHRoYXQgaXQgcG9pbnRzIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24uXG4gICAgICogQG1ldGhvZCBuZWdcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBUaGUgbmVnYXRlZCB2ZWN0b3JcbiAgICAgKi9cbiAgICBWZWN0b3IubmVnID0gZnVuY3Rpb24odmVjdG9yKSB7XG4gICAgICAgIHJldHVybiB7IHg6IC12ZWN0b3IueCwgeTogLXZlY3Rvci55IH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGFuZ2xlIGJldHdlZW4gdGhlIHZlY3RvciBgdmVjdG9yQiAtIHZlY3RvckFgIGFuZCB0aGUgeC1heGlzIGluIHJhZGlhbnMuXG4gICAgICogQG1ldGhvZCBhbmdsZVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSB2ZWN0b3JBXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvckJcbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IFRoZSBhbmdsZSBpbiByYWRpYW5zXG4gICAgICovXG4gICAgVmVjdG9yLmFuZ2xlID0gZnVuY3Rpb24odmVjdG9yQSwgdmVjdG9yQikge1xuICAgICAgICByZXR1cm4gTWF0aC5hdGFuMih2ZWN0b3JCLnkgLSB2ZWN0b3JBLnksIHZlY3RvckIueCAtIHZlY3RvckEueCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRlbXBvcmFyeSB2ZWN0b3IgcG9vbCAobm90IHRocmVhZC1zYWZlKS5cbiAgICAgKiBAcHJvcGVydHkgX3RlbXBcbiAgICAgKiBAdHlwZSB7dmVjdG9yW119XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBWZWN0b3IuX3RlbXAgPSBbXG4gICAgICAgIFZlY3Rvci5jcmVhdGUoKSwgVmVjdG9yLmNyZWF0ZSgpLCBcbiAgICAgICAgVmVjdG9yLmNyZWF0ZSgpLCBWZWN0b3IuY3JlYXRlKCksIFxuICAgICAgICBWZWN0b3IuY3JlYXRlKCksIFZlY3Rvci5jcmVhdGUoKVxuICAgIF07XG5cbn0pKCk7XG59LHt9XSwyOTpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuVmVydGljZXNgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBjcmVhdGluZyBhbmQgbWFuaXB1bGF0aW5nIHNldHMgb2YgdmVydGljZXMuXG4qIEEgc2V0IG9mIHZlcnRpY2VzIGlzIGFuIGFycmF5IG9mIGBNYXR0ZXIuVmVjdG9yYCB3aXRoIGFkZGl0aW9uYWwgaW5kZXhpbmcgcHJvcGVydGllcyBpbnNlcnRlZCBieSBgVmVydGljZXMuY3JlYXRlYC5cbiogQSBgTWF0dGVyLkJvZHlgIG1haW50YWlucyBhIHNldCBvZiB2ZXJ0aWNlcyB0byByZXByZXNlbnQgdGhlIHNoYXBlIG9mIHRoZSBvYmplY3QgKGl0cyBjb252ZXggaHVsbCkuXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBWZXJ0aWNlc1xuKi9cblxudmFyIFZlcnRpY2VzID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gVmVydGljZXM7XG5cbnZhciBWZWN0b3IgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcbnZhciBDb21tb24gPSBfZGVyZXFfKCcuLi9jb3JlL0NvbW1vbicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHNldCBvZiBgTWF0dGVyLkJvZHlgIGNvbXBhdGlibGUgdmVydGljZXMuXG4gICAgICogVGhlIGBwb2ludHNgIGFyZ3VtZW50IGFjY2VwdHMgYW4gYXJyYXkgb2YgYE1hdHRlci5WZWN0b3JgIHBvaW50cyBvcmllbnRhdGVkIGFyb3VuZCB0aGUgb3JpZ2luIGAoMCwgMClgLCBmb3IgZXhhbXBsZTpcbiAgICAgKlxuICAgICAqICAgICBbeyB4OiAwLCB5OiAwIH0sIHsgeDogMjUsIHk6IDUwIH0sIHsgeDogNTAsIHk6IDAgfV1cbiAgICAgKlxuICAgICAqIFRoZSBgVmVydGljZXMuY3JlYXRlYCBtZXRob2QgcmV0dXJucyBhIG5ldyBhcnJheSBvZiB2ZXJ0aWNlcywgd2hpY2ggYXJlIHNpbWlsYXIgdG8gTWF0dGVyLlZlY3RvciBvYmplY3RzLFxuICAgICAqIGJ1dCB3aXRoIHNvbWUgYWRkaXRpb25hbCByZWZlcmVuY2VzIHJlcXVpcmVkIGZvciBlZmZpY2llbnQgY29sbGlzaW9uIGRldGVjdGlvbiByb3V0aW5lcy5cbiAgICAgKlxuICAgICAqIFZlcnRpY2VzIG11c3QgYmUgc3BlY2lmaWVkIGluIGNsb2Nrd2lzZSBvcmRlci5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB0aGUgYGJvZHlgIGFyZ3VtZW50IGlzIG5vdCBvcHRpb25hbCwgYSBgTWF0dGVyLkJvZHlgIHJlZmVyZW5jZSBtdXN0IGJlIHByb3ZpZGVkLlxuICAgICAqXG4gICAgICogQG1ldGhvZCBjcmVhdGVcbiAgICAgKiBAcGFyYW0ge3ZlY3RvcltdfSBwb2ludHNcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlcbiAgICAgKi9cbiAgICBWZXJ0aWNlcy5jcmVhdGUgPSBmdW5jdGlvbihwb2ludHMsIGJvZHkpIHtcbiAgICAgICAgdmFyIHZlcnRpY2VzID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBwb2ludCA9IHBvaW50c1tpXSxcbiAgICAgICAgICAgICAgICB2ZXJ0ZXggPSB7XG4gICAgICAgICAgICAgICAgICAgIHg6IHBvaW50LngsXG4gICAgICAgICAgICAgICAgICAgIHk6IHBvaW50LnksXG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBpLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiBib2R5LFxuICAgICAgICAgICAgICAgICAgICBpc0ludGVybmFsOiBmYWxzZVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHZlcnRpY2VzLnB1c2godmVydGV4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2ZXJ0aWNlcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUGFyc2VzIGEgc3RyaW5nIGNvbnRhaW5pbmcgb3JkZXJlZCB4IHkgcGFpcnMgc2VwYXJhdGVkIGJ5IHNwYWNlcyAoYW5kIG9wdGlvbmFsbHkgY29tbWFzKSwgXG4gICAgICogaW50byBhIGBNYXR0ZXIuVmVydGljZXNgIG9iamVjdCBmb3IgdGhlIGdpdmVuIGBNYXR0ZXIuQm9keWAuXG4gICAgICogRm9yIHBhcnNpbmcgU1ZHIHBhdGhzLCBzZWUgYFN2Zy5wYXRoVG9WZXJ0aWNlc2AuXG4gICAgICogQG1ldGhvZCBmcm9tUGF0aFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHJldHVybiB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICovXG4gICAgVmVydGljZXMuZnJvbVBhdGggPSBmdW5jdGlvbihwYXRoLCBib2R5KSB7XG4gICAgICAgIHZhciBwYXRoUGF0dGVybiA9IC9MP1xccyooW1xcLVxcZFxcLmVdKylbXFxzLF0qKFtcXC1cXGRcXC5lXSspKi9pZyxcbiAgICAgICAgICAgIHBvaW50cyA9IFtdO1xuXG4gICAgICAgIHBhdGgucmVwbGFjZShwYXRoUGF0dGVybiwgZnVuY3Rpb24obWF0Y2gsIHgsIHkpIHtcbiAgICAgICAgICAgIHBvaW50cy5wdXNoKHsgeDogcGFyc2VGbG9hdCh4KSwgeTogcGFyc2VGbG9hdCh5KSB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIFZlcnRpY2VzLmNyZWF0ZShwb2ludHMsIGJvZHkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjZW50cmUgKGNlbnRyb2lkKSBvZiB0aGUgc2V0IG9mIHZlcnRpY2VzLlxuICAgICAqIEBtZXRob2QgY2VudHJlXG4gICAgICogQHBhcmFtIHt2ZXJ0aWNlc30gdmVydGljZXNcbiAgICAgKiBAcmV0dXJuIHt2ZWN0b3J9IFRoZSBjZW50cmUgcG9pbnRcbiAgICAgKi9cbiAgICBWZXJ0aWNlcy5jZW50cmUgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgICAgICB2YXIgYXJlYSA9IFZlcnRpY2VzLmFyZWEodmVydGljZXMsIHRydWUpLFxuICAgICAgICAgICAgY2VudHJlID0geyB4OiAwLCB5OiAwIH0sXG4gICAgICAgICAgICBjcm9zcyxcbiAgICAgICAgICAgIHRlbXAsXG4gICAgICAgICAgICBqO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGogPSAoaSArIDEpICUgdmVydGljZXMubGVuZ3RoO1xuICAgICAgICAgICAgY3Jvc3MgPSBWZWN0b3IuY3Jvc3ModmVydGljZXNbaV0sIHZlcnRpY2VzW2pdKTtcbiAgICAgICAgICAgIHRlbXAgPSBWZWN0b3IubXVsdChWZWN0b3IuYWRkKHZlcnRpY2VzW2ldLCB2ZXJ0aWNlc1tqXSksIGNyb3NzKTtcbiAgICAgICAgICAgIGNlbnRyZSA9IFZlY3Rvci5hZGQoY2VudHJlLCB0ZW1wKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBWZWN0b3IuZGl2KGNlbnRyZSwgNiAqIGFyZWEpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBhdmVyYWdlIChtZWFuKSBvZiB0aGUgc2V0IG9mIHZlcnRpY2VzLlxuICAgICAqIEBtZXRob2QgbWVhblxuICAgICAqIEBwYXJhbSB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICogQHJldHVybiB7dmVjdG9yfSBUaGUgYXZlcmFnZSBwb2ludFxuICAgICAqL1xuICAgIFZlcnRpY2VzLm1lYW4gPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgICAgICB2YXIgYXZlcmFnZSA9IHsgeDogMCwgeTogMCB9O1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGF2ZXJhZ2UueCArPSB2ZXJ0aWNlc1tpXS54O1xuICAgICAgICAgICAgYXZlcmFnZS55ICs9IHZlcnRpY2VzW2ldLnk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gVmVjdG9yLmRpdihhdmVyYWdlLCB2ZXJ0aWNlcy5sZW5ndGgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBhcmVhIG9mIHRoZSBzZXQgb2YgdmVydGljZXMuXG4gICAgICogQG1ldGhvZCBhcmVhXG4gICAgICogQHBhcmFtIHt2ZXJ0aWNlc30gdmVydGljZXNcbiAgICAgKiBAcGFyYW0ge2Jvb2x9IHNpZ25lZFxuICAgICAqIEByZXR1cm4ge251bWJlcn0gVGhlIGFyZWFcbiAgICAgKi9cbiAgICBWZXJ0aWNlcy5hcmVhID0gZnVuY3Rpb24odmVydGljZXMsIHNpZ25lZCkge1xuICAgICAgICB2YXIgYXJlYSA9IDAsXG4gICAgICAgICAgICBqID0gdmVydGljZXMubGVuZ3RoIC0gMTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZlcnRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmVhICs9ICh2ZXJ0aWNlc1tqXS54IC0gdmVydGljZXNbaV0ueCkgKiAodmVydGljZXNbal0ueSArIHZlcnRpY2VzW2ldLnkpO1xuICAgICAgICAgICAgaiA9IGk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2lnbmVkKVxuICAgICAgICAgICAgcmV0dXJuIGFyZWEgLyAyO1xuXG4gICAgICAgIHJldHVybiBNYXRoLmFicyhhcmVhKSAvIDI7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIG1vbWVudCBvZiBpbmVydGlhIChzZWNvbmQgbW9tZW50IG9mIGFyZWEpIG9mIHRoZSBzZXQgb2YgdmVydGljZXMgZ2l2ZW4gdGhlIHRvdGFsIG1hc3MuXG4gICAgICogQG1ldGhvZCBpbmVydGlhXG4gICAgICogQHBhcmFtIHt2ZXJ0aWNlc30gdmVydGljZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbWFzc1xuICAgICAqIEByZXR1cm4ge251bWJlcn0gVGhlIHBvbHlnb24ncyBtb21lbnQgb2YgaW5lcnRpYVxuICAgICAqL1xuICAgIFZlcnRpY2VzLmluZXJ0aWEgPSBmdW5jdGlvbih2ZXJ0aWNlcywgbWFzcykge1xuICAgICAgICB2YXIgbnVtZXJhdG9yID0gMCxcbiAgICAgICAgICAgIGRlbm9taW5hdG9yID0gMCxcbiAgICAgICAgICAgIHYgPSB2ZXJ0aWNlcyxcbiAgICAgICAgICAgIGNyb3NzLFxuICAgICAgICAgICAgajtcblxuICAgICAgICAvLyBmaW5kIHRoZSBwb2x5Z29uJ3MgbW9tZW50IG9mIGluZXJ0aWEsIHVzaW5nIHNlY29uZCBtb21lbnQgb2YgYXJlYVxuICAgICAgICAvLyBmcm9tIGVxdWF0aW9ucyBhdCBodHRwOi8vd3d3LnBoeXNpY3Nmb3J1bXMuY29tL3Nob3d0aHJlYWQucGhwP3Q9MjUyOTNcbiAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCB2Lmxlbmd0aDsgbisrKSB7XG4gICAgICAgICAgICBqID0gKG4gKyAxKSAlIHYubGVuZ3RoO1xuICAgICAgICAgICAgY3Jvc3MgPSBNYXRoLmFicyhWZWN0b3IuY3Jvc3ModltqXSwgdltuXSkpO1xuICAgICAgICAgICAgbnVtZXJhdG9yICs9IGNyb3NzICogKFZlY3Rvci5kb3QodltqXSwgdltqXSkgKyBWZWN0b3IuZG90KHZbal0sIHZbbl0pICsgVmVjdG9yLmRvdCh2W25dLCB2W25dKSk7XG4gICAgICAgICAgICBkZW5vbWluYXRvciArPSBjcm9zcztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAobWFzcyAvIDYpICogKG51bWVyYXRvciAvIGRlbm9taW5hdG9yKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVHJhbnNsYXRlcyB0aGUgc2V0IG9mIHZlcnRpY2VzIGluLXBsYWNlLlxuICAgICAqIEBtZXRob2QgdHJhbnNsYXRlXG4gICAgICogQHBhcmFtIHt2ZXJ0aWNlc30gdmVydGljZXNcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gdmVjdG9yXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNjYWxhclxuICAgICAqL1xuICAgIFZlcnRpY2VzLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKHZlcnRpY2VzLCB2ZWN0b3IsIHNjYWxhcikge1xuICAgICAgICB2YXIgaTtcbiAgICAgICAgaWYgKHNjYWxhcikge1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHZlcnRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmVydGljZXNbaV0ueCArPSB2ZWN0b3IueCAqIHNjYWxhcjtcbiAgICAgICAgICAgICAgICB2ZXJ0aWNlc1tpXS55ICs9IHZlY3Rvci55ICogc2NhbGFyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHZlcnRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmVydGljZXNbaV0ueCArPSB2ZWN0b3IueDtcbiAgICAgICAgICAgICAgICB2ZXJ0aWNlc1tpXS55ICs9IHZlY3Rvci55O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZlcnRpY2VzO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSb3RhdGVzIHRoZSBzZXQgb2YgdmVydGljZXMgaW4tcGxhY2UuXG4gICAgICogQG1ldGhvZCByb3RhdGVcbiAgICAgKiBAcGFyYW0ge3ZlcnRpY2VzfSB2ZXJ0aWNlc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBhbmdsZVxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSBwb2ludFxuICAgICAqL1xuICAgIFZlcnRpY2VzLnJvdGF0ZSA9IGZ1bmN0aW9uKHZlcnRpY2VzLCBhbmdsZSwgcG9pbnQpIHtcbiAgICAgICAgaWYgKGFuZ2xlID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIHZhciBjb3MgPSBNYXRoLmNvcyhhbmdsZSksXG4gICAgICAgICAgICBzaW4gPSBNYXRoLnNpbihhbmdsZSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZXJ0aWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHZlcnRpY2UgPSB2ZXJ0aWNlc1tpXSxcbiAgICAgICAgICAgICAgICBkeCA9IHZlcnRpY2UueCAtIHBvaW50LngsXG4gICAgICAgICAgICAgICAgZHkgPSB2ZXJ0aWNlLnkgLSBwb2ludC55O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgdmVydGljZS54ID0gcG9pbnQueCArIChkeCAqIGNvcyAtIGR5ICogc2luKTtcbiAgICAgICAgICAgIHZlcnRpY2UueSA9IHBvaW50LnkgKyAoZHggKiBzaW4gKyBkeSAqIGNvcyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdmVydGljZXM7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYHRydWVgIGlmIHRoZSBgcG9pbnRgIGlzIGluc2lkZSB0aGUgc2V0IG9mIGB2ZXJ0aWNlc2AuXG4gICAgICogQG1ldGhvZCBjb250YWluc1xuICAgICAqIEBwYXJhbSB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgdmVydGljZXMgY29udGFpbnMgcG9pbnQsIG90aGVyd2lzZSBmYWxzZVxuICAgICAqL1xuICAgIFZlcnRpY2VzLmNvbnRhaW5zID0gZnVuY3Rpb24odmVydGljZXMsIHBvaW50KSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciB2ZXJ0aWNlID0gdmVydGljZXNbaV0sXG4gICAgICAgICAgICAgICAgbmV4dFZlcnRpY2UgPSB2ZXJ0aWNlc1soaSArIDEpICUgdmVydGljZXMubGVuZ3RoXTtcbiAgICAgICAgICAgIGlmICgocG9pbnQueCAtIHZlcnRpY2UueCkgKiAobmV4dFZlcnRpY2UueSAtIHZlcnRpY2UueSkgKyAocG9pbnQueSAtIHZlcnRpY2UueSkgKiAodmVydGljZS54IC0gbmV4dFZlcnRpY2UueCkgPiAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNjYWxlcyB0aGUgdmVydGljZXMgZnJvbSBhIHBvaW50IChkZWZhdWx0IGlzIGNlbnRyZSkgaW4tcGxhY2UuXG4gICAgICogQG1ldGhvZCBzY2FsZVxuICAgICAqIEBwYXJhbSB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNjYWxlWFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY2FsZVlcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gcG9pbnRcbiAgICAgKi9cbiAgICBWZXJ0aWNlcy5zY2FsZSA9IGZ1bmN0aW9uKHZlcnRpY2VzLCBzY2FsZVgsIHNjYWxlWSwgcG9pbnQpIHtcbiAgICAgICAgaWYgKHNjYWxlWCA9PT0gMSAmJiBzY2FsZVkgPT09IDEpXG4gICAgICAgICAgICByZXR1cm4gdmVydGljZXM7XG5cbiAgICAgICAgcG9pbnQgPSBwb2ludCB8fCBWZXJ0aWNlcy5jZW50cmUodmVydGljZXMpO1xuXG4gICAgICAgIHZhciB2ZXJ0ZXgsXG4gICAgICAgICAgICBkZWx0YTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZlcnRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2ZXJ0ZXggPSB2ZXJ0aWNlc1tpXTtcbiAgICAgICAgICAgIGRlbHRhID0gVmVjdG9yLnN1Yih2ZXJ0ZXgsIHBvaW50KTtcbiAgICAgICAgICAgIHZlcnRpY2VzW2ldLnggPSBwb2ludC54ICsgZGVsdGEueCAqIHNjYWxlWDtcbiAgICAgICAgICAgIHZlcnRpY2VzW2ldLnkgPSBwb2ludC55ICsgZGVsdGEueSAqIHNjYWxlWTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2ZXJ0aWNlcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2hhbWZlcnMgYSBzZXQgb2YgdmVydGljZXMgYnkgZ2l2aW5nIHRoZW0gcm91bmRlZCBjb3JuZXJzLCByZXR1cm5zIGEgbmV3IHNldCBvZiB2ZXJ0aWNlcy5cbiAgICAgKiBUaGUgcmFkaXVzIHBhcmFtZXRlciBpcyBhIHNpbmdsZSBudW1iZXIgb3IgYW4gYXJyYXkgdG8gc3BlY2lmeSB0aGUgcmFkaXVzIGZvciBlYWNoIHZlcnRleC5cbiAgICAgKiBAbWV0aG9kIGNoYW1mZXJcbiAgICAgKiBAcGFyYW0ge3ZlcnRpY2VzfSB2ZXJ0aWNlc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyW119IHJhZGl1c1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBxdWFsaXR5XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHF1YWxpdHlNaW5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gcXVhbGl0eU1heFxuICAgICAqL1xuICAgIFZlcnRpY2VzLmNoYW1mZXIgPSBmdW5jdGlvbih2ZXJ0aWNlcywgcmFkaXVzLCBxdWFsaXR5LCBxdWFsaXR5TWluLCBxdWFsaXR5TWF4KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmFkaXVzID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgcmFkaXVzID0gW3JhZGl1c107XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByYWRpdXMgPSByYWRpdXMgfHwgWzhdO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcXVhbGl0eSBkZWZhdWx0cyB0byAtMSwgd2hpY2ggaXMgYXV0b1xuICAgICAgICBxdWFsaXR5ID0gKHR5cGVvZiBxdWFsaXR5ICE9PSAndW5kZWZpbmVkJykgPyBxdWFsaXR5IDogLTE7XG4gICAgICAgIHF1YWxpdHlNaW4gPSBxdWFsaXR5TWluIHx8IDI7XG4gICAgICAgIHF1YWxpdHlNYXggPSBxdWFsaXR5TWF4IHx8IDE0O1xuXG4gICAgICAgIHZhciBuZXdWZXJ0aWNlcyA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBwcmV2VmVydGV4ID0gdmVydGljZXNbaSAtIDEgPj0gMCA/IGkgLSAxIDogdmVydGljZXMubGVuZ3RoIC0gMV0sXG4gICAgICAgICAgICAgICAgdmVydGV4ID0gdmVydGljZXNbaV0sXG4gICAgICAgICAgICAgICAgbmV4dFZlcnRleCA9IHZlcnRpY2VzWyhpICsgMSkgJSB2ZXJ0aWNlcy5sZW5ndGhdLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRSYWRpdXMgPSByYWRpdXNbaSA8IHJhZGl1cy5sZW5ndGggPyBpIDogcmFkaXVzLmxlbmd0aCAtIDFdO1xuXG4gICAgICAgICAgICBpZiAoY3VycmVudFJhZGl1cyA9PT0gMCkge1xuICAgICAgICAgICAgICAgIG5ld1ZlcnRpY2VzLnB1c2godmVydGV4KTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHByZXZOb3JtYWwgPSBWZWN0b3Iubm9ybWFsaXNlKHsgXG4gICAgICAgICAgICAgICAgeDogdmVydGV4LnkgLSBwcmV2VmVydGV4LnksIFxuICAgICAgICAgICAgICAgIHk6IHByZXZWZXJ0ZXgueCAtIHZlcnRleC54XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdmFyIG5leHROb3JtYWwgPSBWZWN0b3Iubm9ybWFsaXNlKHsgXG4gICAgICAgICAgICAgICAgeDogbmV4dFZlcnRleC55IC0gdmVydGV4LnksIFxuICAgICAgICAgICAgICAgIHk6IHZlcnRleC54IC0gbmV4dFZlcnRleC54XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdmFyIGRpYWdvbmFsUmFkaXVzID0gTWF0aC5zcXJ0KDIgKiBNYXRoLnBvdyhjdXJyZW50UmFkaXVzLCAyKSksXG4gICAgICAgICAgICAgICAgcmFkaXVzVmVjdG9yID0gVmVjdG9yLm11bHQoQ29tbW9uLmNsb25lKHByZXZOb3JtYWwpLCBjdXJyZW50UmFkaXVzKSxcbiAgICAgICAgICAgICAgICBtaWROb3JtYWwgPSBWZWN0b3Iubm9ybWFsaXNlKFZlY3Rvci5tdWx0KFZlY3Rvci5hZGQocHJldk5vcm1hbCwgbmV4dE5vcm1hbCksIDAuNSkpLFxuICAgICAgICAgICAgICAgIHNjYWxlZFZlcnRleCA9IFZlY3Rvci5zdWIodmVydGV4LCBWZWN0b3IubXVsdChtaWROb3JtYWwsIGRpYWdvbmFsUmFkaXVzKSk7XG5cbiAgICAgICAgICAgIHZhciBwcmVjaXNpb24gPSBxdWFsaXR5O1xuXG4gICAgICAgICAgICBpZiAocXVhbGl0eSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAvLyBhdXRvbWF0aWNhbGx5IGRlY2lkZSBwcmVjaXNpb25cbiAgICAgICAgICAgICAgICBwcmVjaXNpb24gPSBNYXRoLnBvdyhjdXJyZW50UmFkaXVzLCAwLjMyKSAqIDEuNzU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHByZWNpc2lvbiA9IENvbW1vbi5jbGFtcChwcmVjaXNpb24sIHF1YWxpdHlNaW4sIHF1YWxpdHlNYXgpO1xuXG4gICAgICAgICAgICAvLyB1c2UgYW4gZXZlbiB2YWx1ZSBmb3IgcHJlY2lzaW9uLCBtb3JlIGxpa2VseSB0byByZWR1Y2UgYXhlcyBieSB1c2luZyBzeW1tZXRyeVxuICAgICAgICAgICAgaWYgKHByZWNpc2lvbiAlIDIgPT09IDEpXG4gICAgICAgICAgICAgICAgcHJlY2lzaW9uICs9IDE7XG5cbiAgICAgICAgICAgIHZhciBhbHBoYSA9IE1hdGguYWNvcyhWZWN0b3IuZG90KHByZXZOb3JtYWwsIG5leHROb3JtYWwpKSxcbiAgICAgICAgICAgICAgICB0aGV0YSA9IGFscGhhIC8gcHJlY2lzaW9uO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHByZWNpc2lvbjsgaisrKSB7XG4gICAgICAgICAgICAgICAgbmV3VmVydGljZXMucHVzaChWZWN0b3IuYWRkKFZlY3Rvci5yb3RhdGUocmFkaXVzVmVjdG9yLCB0aGV0YSAqIGopLCBzY2FsZWRWZXJ0ZXgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXdWZXJ0aWNlcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU29ydHMgdGhlIGlucHV0IHZlcnRpY2VzIGludG8gY2xvY2t3aXNlIG9yZGVyIGluIHBsYWNlLlxuICAgICAqIEBtZXRob2QgY2xvY2t3aXNlU29ydFxuICAgICAqIEBwYXJhbSB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICogQHJldHVybiB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICovXG4gICAgVmVydGljZXMuY2xvY2t3aXNlU29ydCA9IGZ1bmN0aW9uKHZlcnRpY2VzKSB7XG4gICAgICAgIHZhciBjZW50cmUgPSBWZXJ0aWNlcy5tZWFuKHZlcnRpY2VzKTtcblxuICAgICAgICB2ZXJ0aWNlcy5zb3J0KGZ1bmN0aW9uKHZlcnRleEEsIHZlcnRleEIpIHtcbiAgICAgICAgICAgIHJldHVybiBWZWN0b3IuYW5nbGUoY2VudHJlLCB2ZXJ0ZXhBKSAtIFZlY3Rvci5hbmdsZShjZW50cmUsIHZlcnRleEIpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdmVydGljZXM7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgdmVydGljZXMgZm9ybSBhIGNvbnZleCBzaGFwZSAodmVydGljZXMgbXVzdCBiZSBpbiBjbG9ja3dpc2Ugb3JkZXIpLlxuICAgICAqIEBtZXRob2QgaXNDb252ZXhcbiAgICAgKiBAcGFyYW0ge3ZlcnRpY2VzfSB2ZXJ0aWNlc1xuICAgICAqIEByZXR1cm4ge2Jvb2x9IGB0cnVlYCBpZiB0aGUgYHZlcnRpY2VzYCBhcmUgY29udmV4LCBgZmFsc2VgIGlmIG5vdCAob3IgYG51bGxgIGlmIG5vdCBjb21wdXRhYmxlKS5cbiAgICAgKi9cbiAgICBWZXJ0aWNlcy5pc0NvbnZleCA9IGZ1bmN0aW9uKHZlcnRpY2VzKSB7XG4gICAgICAgIC8vIGh0dHA6Ly9wYXVsYm91cmtlLm5ldC9nZW9tZXRyeS9wb2x5Z29ubWVzaC9cbiAgICAgICAgLy8gQ29weXJpZ2h0IChjKSBQYXVsIEJvdXJrZSAodXNlIHBlcm1pdHRlZClcblxuICAgICAgICB2YXIgZmxhZyA9IDAsXG4gICAgICAgICAgICBuID0gdmVydGljZXMubGVuZ3RoLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBrLFxuICAgICAgICAgICAgejtcblxuICAgICAgICBpZiAobiA8IDMpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBqID0gKGkgKyAxKSAlIG47XG4gICAgICAgICAgICBrID0gKGkgKyAyKSAlIG47XG4gICAgICAgICAgICB6ID0gKHZlcnRpY2VzW2pdLnggLSB2ZXJ0aWNlc1tpXS54KSAqICh2ZXJ0aWNlc1trXS55IC0gdmVydGljZXNbal0ueSk7XG4gICAgICAgICAgICB6IC09ICh2ZXJ0aWNlc1tqXS55IC0gdmVydGljZXNbaV0ueSkgKiAodmVydGljZXNba10ueCAtIHZlcnRpY2VzW2pdLngpO1xuXG4gICAgICAgICAgICBpZiAoeiA8IDApIHtcbiAgICAgICAgICAgICAgICBmbGFnIHw9IDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHogPiAwKSB7XG4gICAgICAgICAgICAgICAgZmxhZyB8PSAyO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZmxhZyA9PT0gMykge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChmbGFnICE9PSAwKXtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY29udmV4IGh1bGwgb2YgdGhlIGlucHV0IHZlcnRpY2VzIGFzIGEgbmV3IGFycmF5IG9mIHBvaW50cy5cbiAgICAgKiBAbWV0aG9kIGh1bGxcbiAgICAgKiBAcGFyYW0ge3ZlcnRpY2VzfSB2ZXJ0aWNlc1xuICAgICAqIEByZXR1cm4gW3ZlcnRleF0gdmVydGljZXNcbiAgICAgKi9cbiAgICBWZXJ0aWNlcy5odWxsID0gZnVuY3Rpb24odmVydGljZXMpIHtcbiAgICAgICAgLy8gaHR0cDovL2dlb21hbGdvcml0aG1zLmNvbS9hMTAtX2h1bGwtMS5odG1sXG5cbiAgICAgICAgdmFyIHVwcGVyID0gW10sXG4gICAgICAgICAgICBsb3dlciA9IFtdLCBcbiAgICAgICAgICAgIHZlcnRleCxcbiAgICAgICAgICAgIGk7XG5cbiAgICAgICAgLy8gc29ydCB2ZXJ0aWNlcyBvbiB4LWF4aXMgKHktYXhpcyBmb3IgdGllcylcbiAgICAgICAgdmVydGljZXMgPSB2ZXJ0aWNlcy5zbGljZSgwKTtcbiAgICAgICAgdmVydGljZXMuc29ydChmdW5jdGlvbih2ZXJ0ZXhBLCB2ZXJ0ZXhCKSB7XG4gICAgICAgICAgICB2YXIgZHggPSB2ZXJ0ZXhBLnggLSB2ZXJ0ZXhCLng7XG4gICAgICAgICAgICByZXR1cm4gZHggIT09IDAgPyBkeCA6IHZlcnRleEEueSAtIHZlcnRleEIueTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gYnVpbGQgbG93ZXIgaHVsbFxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgIHZlcnRleCA9IHZlcnRpY2VzW2ldO1xuXG4gICAgICAgICAgICB3aGlsZSAobG93ZXIubGVuZ3RoID49IDIgXG4gICAgICAgICAgICAgICAgICAgJiYgVmVjdG9yLmNyb3NzMyhsb3dlcltsb3dlci5sZW5ndGggLSAyXSwgbG93ZXJbbG93ZXIubGVuZ3RoIC0gMV0sIHZlcnRleCkgPD0gMCkge1xuICAgICAgICAgICAgICAgIGxvd2VyLnBvcCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsb3dlci5wdXNoKHZlcnRleCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBidWlsZCB1cHBlciBodWxsXG4gICAgICAgIGZvciAoaSA9IHZlcnRpY2VzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaSAtPSAxKSB7XG4gICAgICAgICAgICB2ZXJ0ZXggPSB2ZXJ0aWNlc1tpXTtcblxuICAgICAgICAgICAgd2hpbGUgKHVwcGVyLmxlbmd0aCA+PSAyIFxuICAgICAgICAgICAgICAgICAgICYmIFZlY3Rvci5jcm9zczModXBwZXJbdXBwZXIubGVuZ3RoIC0gMl0sIHVwcGVyW3VwcGVyLmxlbmd0aCAtIDFdLCB2ZXJ0ZXgpIDw9IDApIHtcbiAgICAgICAgICAgICAgICB1cHBlci5wb3AoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdXBwZXIucHVzaCh2ZXJ0ZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY29uY2F0ZW5hdGlvbiBvZiB0aGUgbG93ZXIgYW5kIHVwcGVyIGh1bGxzIGdpdmVzIHRoZSBjb252ZXggaHVsbFxuICAgICAgICAvLyBvbWl0IGxhc3QgcG9pbnRzIGJlY2F1c2UgdGhleSBhcmUgcmVwZWF0ZWQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgb3RoZXIgbGlzdFxuICAgICAgICB1cHBlci5wb3AoKTtcbiAgICAgICAgbG93ZXIucG9wKCk7XG5cbiAgICAgICAgcmV0dXJuIHVwcGVyLmNvbmNhdChsb3dlcik7XG4gICAgfTtcblxufSkoKTtcblxufSx7XCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6Mjh9XSwzMDpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG52YXIgTWF0dGVyID0gbW9kdWxlLmV4cG9ydHMgPSBfZGVyZXFfKCcuLi9jb3JlL01hdHRlcicpO1xuXG5NYXR0ZXIuQm9keSA9IF9kZXJlcV8oJy4uL2JvZHkvQm9keScpO1xuTWF0dGVyLkNvbXBvc2l0ZSA9IF9kZXJlcV8oJy4uL2JvZHkvQ29tcG9zaXRlJyk7XG5NYXR0ZXIuV29ybGQgPSBfZGVyZXFfKCcuLi9ib2R5L1dvcmxkJyk7XG5cbk1hdHRlci5Db250YWN0ID0gX2RlcmVxXygnLi4vY29sbGlzaW9uL0NvbnRhY3QnKTtcbk1hdHRlci5EZXRlY3RvciA9IF9kZXJlcV8oJy4uL2NvbGxpc2lvbi9EZXRlY3RvcicpO1xuTWF0dGVyLkdyaWQgPSBfZGVyZXFfKCcuLi9jb2xsaXNpb24vR3JpZCcpO1xuTWF0dGVyLlBhaXJzID0gX2RlcmVxXygnLi4vY29sbGlzaW9uL1BhaXJzJyk7XG5NYXR0ZXIuUGFpciA9IF9kZXJlcV8oJy4uL2NvbGxpc2lvbi9QYWlyJyk7XG5NYXR0ZXIuUXVlcnkgPSBfZGVyZXFfKCcuLi9jb2xsaXNpb24vUXVlcnknKTtcbk1hdHRlci5SZXNvbHZlciA9IF9kZXJlcV8oJy4uL2NvbGxpc2lvbi9SZXNvbHZlcicpO1xuTWF0dGVyLlNBVCA9IF9kZXJlcV8oJy4uL2NvbGxpc2lvbi9TQVQnKTtcblxuTWF0dGVyLkNvbnN0cmFpbnQgPSBfZGVyZXFfKCcuLi9jb25zdHJhaW50L0NvbnN0cmFpbnQnKTtcbk1hdHRlci5Nb3VzZUNvbnN0cmFpbnQgPSBfZGVyZXFfKCcuLi9jb25zdHJhaW50L01vdXNlQ29uc3RyYWludCcpO1xuXG5NYXR0ZXIuQ29tbW9uID0gX2RlcmVxXygnLi4vY29yZS9Db21tb24nKTtcbk1hdHRlci5FbmdpbmUgPSBfZGVyZXFfKCcuLi9jb3JlL0VuZ2luZScpO1xuTWF0dGVyLkV2ZW50cyA9IF9kZXJlcV8oJy4uL2NvcmUvRXZlbnRzJyk7XG5NYXR0ZXIuTW91c2UgPSBfZGVyZXFfKCcuLi9jb3JlL01vdXNlJyk7XG5NYXR0ZXIuUnVubmVyID0gX2RlcmVxXygnLi4vY29yZS9SdW5uZXInKTtcbk1hdHRlci5TbGVlcGluZyA9IF9kZXJlcV8oJy4uL2NvcmUvU2xlZXBpbmcnKTtcbk1hdHRlci5QbHVnaW4gPSBfZGVyZXFfKCcuLi9jb3JlL1BsdWdpbicpO1xuXG5cbk1hdHRlci5Cb2RpZXMgPSBfZGVyZXFfKCcuLi9mYWN0b3J5L0JvZGllcycpO1xuTWF0dGVyLkNvbXBvc2l0ZXMgPSBfZGVyZXFfKCcuLi9mYWN0b3J5L0NvbXBvc2l0ZXMnKTtcblxuTWF0dGVyLkF4ZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9BeGVzJyk7XG5NYXR0ZXIuQm91bmRzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvQm91bmRzJyk7XG5NYXR0ZXIuU3ZnID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvU3ZnJyk7XG5NYXR0ZXIuVmVjdG9yID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvVmVjdG9yJyk7XG5NYXR0ZXIuVmVydGljZXMgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZXJ0aWNlcycpO1xuXG5NYXR0ZXIuUmVuZGVyID0gX2RlcmVxXygnLi4vcmVuZGVyL1JlbmRlcicpO1xuTWF0dGVyLlJlbmRlclBpeGkgPSBfZGVyZXFfKCcuLi9yZW5kZXIvUmVuZGVyUGl4aScpO1xuXG4vLyBhbGlhc2VzXG5cbk1hdHRlci5Xb3JsZC5hZGQgPSBNYXR0ZXIuQ29tcG9zaXRlLmFkZDtcbk1hdHRlci5Xb3JsZC5yZW1vdmUgPSBNYXR0ZXIuQ29tcG9zaXRlLnJlbW92ZTtcbk1hdHRlci5Xb3JsZC5hZGRDb21wb3NpdGUgPSBNYXR0ZXIuQ29tcG9zaXRlLmFkZENvbXBvc2l0ZTtcbk1hdHRlci5Xb3JsZC5hZGRCb2R5ID0gTWF0dGVyLkNvbXBvc2l0ZS5hZGRCb2R5O1xuTWF0dGVyLldvcmxkLmFkZENvbnN0cmFpbnQgPSBNYXR0ZXIuQ29tcG9zaXRlLmFkZENvbnN0cmFpbnQ7XG5NYXR0ZXIuV29ybGQuY2xlYXIgPSBNYXR0ZXIuQ29tcG9zaXRlLmNsZWFyO1xuTWF0dGVyLkVuZ2luZS5ydW4gPSBNYXR0ZXIuUnVubmVyLnJ1bjtcblxufSx7XCIuLi9ib2R5L0JvZHlcIjoxLFwiLi4vYm9keS9Db21wb3NpdGVcIjoyLFwiLi4vYm9keS9Xb3JsZFwiOjMsXCIuLi9jb2xsaXNpb24vQ29udGFjdFwiOjQsXCIuLi9jb2xsaXNpb24vRGV0ZWN0b3JcIjo1LFwiLi4vY29sbGlzaW9uL0dyaWRcIjo2LFwiLi4vY29sbGlzaW9uL1BhaXJcIjo3LFwiLi4vY29sbGlzaW9uL1BhaXJzXCI6OCxcIi4uL2NvbGxpc2lvbi9RdWVyeVwiOjksXCIuLi9jb2xsaXNpb24vUmVzb2x2ZXJcIjoxMCxcIi4uL2NvbGxpc2lvbi9TQVRcIjoxMSxcIi4uL2NvbnN0cmFpbnQvQ29uc3RyYWludFwiOjEyLFwiLi4vY29uc3RyYWludC9Nb3VzZUNvbnN0cmFpbnRcIjoxMyxcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL0VuZ2luZVwiOjE1LFwiLi4vY29yZS9FdmVudHNcIjoxNixcIi4uL2NvcmUvTWF0dGVyXCI6MTcsXCIuLi9jb3JlL01ldHJpY3NcIjoxOCxcIi4uL2NvcmUvTW91c2VcIjoxOSxcIi4uL2NvcmUvUGx1Z2luXCI6MjAsXCIuLi9jb3JlL1J1bm5lclwiOjIxLFwiLi4vY29yZS9TbGVlcGluZ1wiOjIyLFwiLi4vZmFjdG9yeS9Cb2RpZXNcIjoyMyxcIi4uL2ZhY3RvcnkvQ29tcG9zaXRlc1wiOjI0LFwiLi4vZ2VvbWV0cnkvQXhlc1wiOjI1LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9TdmdcIjoyNyxcIi4uL2dlb21ldHJ5L1ZlY3RvclwiOjI4LFwiLi4vZ2VvbWV0cnkvVmVydGljZXNcIjoyOSxcIi4uL3JlbmRlci9SZW5kZXJcIjozMSxcIi4uL3JlbmRlci9SZW5kZXJQaXhpXCI6MzJ9XSwzMTpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuUmVuZGVyYCBtb2R1bGUgaXMgYSBzaW1wbGUgSFRNTDUgY2FudmFzIGJhc2VkIHJlbmRlcmVyIGZvciB2aXN1YWxpc2luZyBpbnN0YW5jZXMgb2YgYE1hdHRlci5FbmdpbmVgLlxuKiBJdCBpcyBpbnRlbmRlZCBmb3IgZGV2ZWxvcG1lbnQgYW5kIGRlYnVnZ2luZyBwdXJwb3NlcywgYnV0IG1heSBhbHNvIGJlIHN1aXRhYmxlIGZvciBzaW1wbGUgZ2FtZXMuXG4qIEl0IGluY2x1ZGVzIGEgbnVtYmVyIG9mIGRyYXdpbmcgb3B0aW9ucyBpbmNsdWRpbmcgd2lyZWZyYW1lLCB2ZWN0b3Igd2l0aCBzdXBwb3J0IGZvciBzcHJpdGVzIGFuZCB2aWV3cG9ydHMuXG4qXG4qIEBjbGFzcyBSZW5kZXJcbiovXG5cbnZhciBSZW5kZXIgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZW5kZXI7XG5cbnZhciBDb21tb24gPSBfZGVyZXFfKCcuLi9jb3JlL0NvbW1vbicpO1xudmFyIENvbXBvc2l0ZSA9IF9kZXJlcV8oJy4uL2JvZHkvQ29tcG9zaXRlJyk7XG52YXIgQm91bmRzID0gX2RlcmVxXygnLi4vZ2VvbWV0cnkvQm91bmRzJyk7XG52YXIgRXZlbnRzID0gX2RlcmVxXygnLi4vY29yZS9FdmVudHMnKTtcbnZhciBHcmlkID0gX2RlcmVxXygnLi4vY29sbGlzaW9uL0dyaWQnKTtcbnZhciBWZWN0b3IgPSBfZGVyZXFfKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcbnZhciBNb3VzZSA9IF9kZXJlcV8oJy4uL2NvcmUvTW91c2UnKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgdmFyIF9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsXG4gICAgICAgIF9jYW5jZWxBbmltYXRpb25GcmFtZTtcblxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IGZ1bmN0aW9uKGNhbGxiYWNrKXsgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IGNhbGxiYWNrKENvbW1vbi5ub3coKSk7IH0sIDEwMDAgLyA2MCk7IH07XG5cbiAgICAgICAgX2NhbmNlbEFuaW1hdGlvbkZyYW1lID0gd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5tb3pDYW5jZWxBbmltYXRpb25GcmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8fCB3aW5kb3cud2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWUgfHwgd2luZG93Lm1zQ2FuY2VsQW5pbWF0aW9uRnJhbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyByZW5kZXJlci4gVGhlIG9wdGlvbnMgcGFyYW1ldGVyIGlzIGFuIG9iamVjdCB0aGF0IHNwZWNpZmllcyBhbnkgcHJvcGVydGllcyB5b3Ugd2lzaCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHMuXG4gICAgICogQWxsIHByb3BlcnRpZXMgaGF2ZSBkZWZhdWx0IHZhbHVlcywgYW5kIG1hbnkgYXJlIHByZS1jYWxjdWxhdGVkIGF1dG9tYXRpY2FsbHkgYmFzZWQgb24gb3RoZXIgcHJvcGVydGllcy5cbiAgICAgKiBTZWUgdGhlIHByb3BlcnRpZXMgc2VjdGlvbiBiZWxvdyBmb3IgZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gd2hhdCB5b3UgY2FuIHBhc3MgdmlhIHRoZSBgb3B0aW9uc2Agb2JqZWN0LlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICAgICAqIEByZXR1cm4ge3JlbmRlcn0gQSBuZXcgcmVuZGVyZXJcbiAgICAgKi9cbiAgICBSZW5kZXIuY3JlYXRlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgICAgICAgICBjb250cm9sbGVyOiBSZW5kZXIsXG4gICAgICAgICAgICBlbmdpbmU6IG51bGwsXG4gICAgICAgICAgICBlbGVtZW50OiBudWxsLFxuICAgICAgICAgICAgY2FudmFzOiBudWxsLFxuICAgICAgICAgICAgbW91c2U6IG51bGwsXG4gICAgICAgICAgICBmcmFtZVJlcXVlc3RJZDogbnVsbCxcbiAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogODAwLFxuICAgICAgICAgICAgICAgIGhlaWdodDogNjAwLFxuICAgICAgICAgICAgICAgIHBpeGVsUmF0aW86IDEsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyMxODE4MWQnLFxuICAgICAgICAgICAgICAgIHdpcmVmcmFtZUJhY2tncm91bmQ6ICcjMGYwZjEzJyxcbiAgICAgICAgICAgICAgICBoYXNCb3VuZHM6ICEhb3B0aW9ucy5ib3VuZHMsXG4gICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB3aXJlZnJhbWVzOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNob3dTbGVlcGluZzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93RGVidWc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dCcm9hZHBoYXNlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93Qm91bmRzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93VmVsb2NpdHk6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dDb2xsaXNpb25zOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93U2VwYXJhdGlvbnM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dBeGVzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93UG9zaXRpb25zOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93QW5nbGVJbmRpY2F0b3I6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dJZHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dTaGFkb3dzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93VmVydGV4TnVtYmVyczogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd0NvbnZleEh1bGxzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93SW50ZXJuYWxFZGdlczogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd01vdXNlUG9zaXRpb246IGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIHJlbmRlciA9IENvbW1vbi5leHRlbmQoZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgICAgIGlmIChyZW5kZXIuY2FudmFzKSB7XG4gICAgICAgICAgICByZW5kZXIuY2FudmFzLndpZHRoID0gcmVuZGVyLm9wdGlvbnMud2lkdGggfHwgcmVuZGVyLmNhbnZhcy53aWR0aDtcbiAgICAgICAgICAgIHJlbmRlci5jYW52YXMuaGVpZ2h0ID0gcmVuZGVyLm9wdGlvbnMuaGVpZ2h0IHx8IHJlbmRlci5jYW52YXMuaGVpZ2h0O1xuICAgICAgICB9XG5cbiAgICAgICAgcmVuZGVyLm1vdXNlID0gb3B0aW9ucy5tb3VzZTtcbiAgICAgICAgcmVuZGVyLmVuZ2luZSA9IG9wdGlvbnMuZW5naW5lO1xuICAgICAgICByZW5kZXIuY2FudmFzID0gcmVuZGVyLmNhbnZhcyB8fCBfY3JlYXRlQ2FudmFzKHJlbmRlci5vcHRpb25zLndpZHRoLCByZW5kZXIub3B0aW9ucy5oZWlnaHQpO1xuICAgICAgICByZW5kZXIuY29udGV4dCA9IHJlbmRlci5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgcmVuZGVyLnRleHR1cmVzID0ge307XG5cbiAgICAgICAgcmVuZGVyLmJvdW5kcyA9IHJlbmRlci5ib3VuZHMgfHwge1xuICAgICAgICAgICAgbWluOiB7XG4gICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWF4OiB7XG4gICAgICAgICAgICAgICAgeDogcmVuZGVyLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgICAgICB5OiByZW5kZXIuY2FudmFzLmhlaWdodFxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChyZW5kZXIub3B0aW9ucy5waXhlbFJhdGlvICE9PSAxKSB7XG4gICAgICAgICAgICBSZW5kZXIuc2V0UGl4ZWxSYXRpbyhyZW5kZXIsIHJlbmRlci5vcHRpb25zLnBpeGVsUmF0aW8pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKENvbW1vbi5pc0VsZW1lbnQocmVuZGVyLmVsZW1lbnQpKSB7XG4gICAgICAgICAgICByZW5kZXIuZWxlbWVudC5hcHBlbmRDaGlsZChyZW5kZXIuY2FudmFzKTtcbiAgICAgICAgfSBlbHNlIGlmICghcmVuZGVyLmNhbnZhcy5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBDb21tb24ubG9nKCdSZW5kZXIuY3JlYXRlOiBvcHRpb25zLmVsZW1lbnQgd2FzIHVuZGVmaW5lZCwgcmVuZGVyLmNhbnZhcyB3YXMgY3JlYXRlZCBidXQgbm90IGFwcGVuZGVkJywgJ3dhcm4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZW5kZXI7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENvbnRpbnVvdXNseSB1cGRhdGVzIHRoZSByZW5kZXIgY2FudmFzIG9uIHRoZSBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYCBldmVudC5cbiAgICAgKiBAbWV0aG9kIHJ1blxuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKi9cbiAgICBSZW5kZXIucnVuID0gZnVuY3Rpb24ocmVuZGVyKSB7XG4gICAgICAgIChmdW5jdGlvbiBsb29wKHRpbWUpe1xuICAgICAgICAgICAgcmVuZGVyLmZyYW1lUmVxdWVzdElkID0gX3JlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKTtcbiAgICAgICAgICAgIFJlbmRlci53b3JsZChyZW5kZXIpO1xuICAgICAgICB9KSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBFbmRzIGV4ZWN1dGlvbiBvZiBgUmVuZGVyLnJ1bmAgb24gdGhlIGdpdmVuIGByZW5kZXJgLCBieSBjYW5jZWxpbmcgdGhlIGFuaW1hdGlvbiBmcmFtZSByZXF1ZXN0IGV2ZW50IGxvb3AuXG4gICAgICogQG1ldGhvZCBzdG9wXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqL1xuICAgIFJlbmRlci5zdG9wID0gZnVuY3Rpb24ocmVuZGVyKSB7XG4gICAgICAgIF9jYW5jZWxBbmltYXRpb25GcmFtZShyZW5kZXIuZnJhbWVSZXF1ZXN0SWQpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBwaXhlbCByYXRpbyBvZiB0aGUgcmVuZGVyZXIgYW5kIHVwZGF0ZXMgdGhlIGNhbnZhcy5cbiAgICAgKiBUbyBhdXRvbWF0aWNhbGx5IGRldGVjdCB0aGUgY29ycmVjdCByYXRpbywgcGFzcyB0aGUgc3RyaW5nIGAnYXV0bydgIGZvciBgcGl4ZWxSYXRpb2AuXG4gICAgICogQG1ldGhvZCBzZXRQaXhlbFJhdGlvXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBwaXhlbFJhdGlvXG4gICAgICovXG4gICAgUmVuZGVyLnNldFBpeGVsUmF0aW8gPSBmdW5jdGlvbihyZW5kZXIsIHBpeGVsUmF0aW8pIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSByZW5kZXIub3B0aW9ucyxcbiAgICAgICAgICAgIGNhbnZhcyA9IHJlbmRlci5jYW52YXM7XG5cbiAgICAgICAgaWYgKHBpeGVsUmF0aW8gPT09ICdhdXRvJykge1xuICAgICAgICAgICAgcGl4ZWxSYXRpbyA9IF9nZXRQaXhlbFJhdGlvKGNhbnZhcyk7XG4gICAgICAgIH1cblxuICAgICAgICBvcHRpb25zLnBpeGVsUmF0aW8gPSBwaXhlbFJhdGlvO1xuICAgICAgICBjYW52YXMuc2V0QXR0cmlidXRlKCdkYXRhLXBpeGVsLXJhdGlvJywgcGl4ZWxSYXRpbyk7XG4gICAgICAgIGNhbnZhcy53aWR0aCA9IG9wdGlvbnMud2lkdGggKiBwaXhlbFJhdGlvO1xuICAgICAgICBjYW52YXMuaGVpZ2h0ID0gb3B0aW9ucy5oZWlnaHQgKiBwaXhlbFJhdGlvO1xuICAgICAgICBjYW52YXMuc3R5bGUud2lkdGggPSBvcHRpb25zLndpZHRoICsgJ3B4JztcbiAgICAgICAgY2FudmFzLnN0eWxlLmhlaWdodCA9IG9wdGlvbnMuaGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgcmVuZGVyLmNvbnRleHQuc2NhbGUocGl4ZWxSYXRpbywgcGl4ZWxSYXRpbyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFBvc2l0aW9ucyBhbmQgc2l6ZXMgdGhlIHZpZXdwb3J0IGFyb3VuZCB0aGUgZ2l2ZW4gb2JqZWN0IGJvdW5kcy5cbiAgICAgKiBPYmplY3RzIG11c3QgaGF2ZSBhdCBsZWFzdCBvbmUgb2YgdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICAgICAqIC0gYG9iamVjdC5ib3VuZHNgXG4gICAgICogLSBgb2JqZWN0LnBvc2l0aW9uYFxuICAgICAqIC0gYG9iamVjdC5taW5gIGFuZCBgb2JqZWN0Lm1heGBcbiAgICAgKiAtIGBvYmplY3QueGAgYW5kIGBvYmplY3QueWBcbiAgICAgKiBAbWV0aG9kIGxvb2tBdFxuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKiBAcGFyYW0ge29iamVjdFtdfSBvYmplY3RzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IFtwYWRkaW5nXVxuICAgICAqIEBwYXJhbSB7Ym9vbH0gW2NlbnRlcj10cnVlXVxuICAgICAqL1xuICAgIFJlbmRlci5sb29rQXQgPSBmdW5jdGlvbihyZW5kZXIsIG9iamVjdHMsIHBhZGRpbmcsIGNlbnRlcikge1xuICAgICAgICBjZW50ZXIgPSB0eXBlb2YgY2VudGVyICE9PSAndW5kZWZpbmVkJyA/IGNlbnRlciA6IHRydWU7XG4gICAgICAgIG9iamVjdHMgPSBDb21tb24uaXNBcnJheShvYmplY3RzKSA/IG9iamVjdHMgOiBbb2JqZWN0c107XG4gICAgICAgIHBhZGRpbmcgPSBwYWRkaW5nIHx8IHtcbiAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICB5OiAwXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gZmluZCBib3VuZHMgb2YgYWxsIG9iamVjdHNcbiAgICAgICAgdmFyIGJvdW5kcyA9IHtcbiAgICAgICAgICAgIG1pbjogeyB4OiBJbmZpbml0eSwgeTogSW5maW5pdHkgfSxcbiAgICAgICAgICAgIG1heDogeyB4OiAtSW5maW5pdHksIHk6IC1JbmZpbml0eSB9XG4gICAgICAgIH07XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3RzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICB2YXIgb2JqZWN0ID0gb2JqZWN0c1tpXSxcbiAgICAgICAgICAgICAgICBtaW4gPSBvYmplY3QuYm91bmRzID8gb2JqZWN0LmJvdW5kcy5taW4gOiAob2JqZWN0Lm1pbiB8fCBvYmplY3QucG9zaXRpb24gfHwgb2JqZWN0KSxcbiAgICAgICAgICAgICAgICBtYXggPSBvYmplY3QuYm91bmRzID8gb2JqZWN0LmJvdW5kcy5tYXggOiAob2JqZWN0Lm1heCB8fCBvYmplY3QucG9zaXRpb24gfHwgb2JqZWN0KTtcblxuICAgICAgICAgICAgaWYgKG1pbiAmJiBtYXgpIHtcbiAgICAgICAgICAgICAgICBpZiAobWluLnggPCBib3VuZHMubWluLngpXG4gICAgICAgICAgICAgICAgICAgIGJvdW5kcy5taW4ueCA9IG1pbi54O1xuXG4gICAgICAgICAgICAgICAgaWYgKG1heC54ID4gYm91bmRzLm1heC54KVxuICAgICAgICAgICAgICAgICAgICBib3VuZHMubWF4LnggPSBtYXgueDtcblxuICAgICAgICAgICAgICAgIGlmIChtaW4ueSA8IGJvdW5kcy5taW4ueSlcbiAgICAgICAgICAgICAgICAgICAgYm91bmRzLm1pbi55ID0gbWluLnk7XG5cbiAgICAgICAgICAgICAgICBpZiAobWF4LnkgPiBib3VuZHMubWF4LnkpXG4gICAgICAgICAgICAgICAgICAgIGJvdW5kcy5tYXgueSA9IG1heC55O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZmluZCByYXRpb3NcbiAgICAgICAgdmFyIHdpZHRoID0gKGJvdW5kcy5tYXgueCAtIGJvdW5kcy5taW4ueCkgKyAyICogcGFkZGluZy54LFxuICAgICAgICAgICAgaGVpZ2h0ID0gKGJvdW5kcy5tYXgueSAtIGJvdW5kcy5taW4ueSkgKyAyICogcGFkZGluZy55LFxuICAgICAgICAgICAgdmlld0hlaWdodCA9IHJlbmRlci5jYW52YXMuaGVpZ2h0LFxuICAgICAgICAgICAgdmlld1dpZHRoID0gcmVuZGVyLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIG91dGVyUmF0aW8gPSB2aWV3V2lkdGggLyB2aWV3SGVpZ2h0LFxuICAgICAgICAgICAgaW5uZXJSYXRpbyA9IHdpZHRoIC8gaGVpZ2h0LFxuICAgICAgICAgICAgc2NhbGVYID0gMSxcbiAgICAgICAgICAgIHNjYWxlWSA9IDE7XG5cbiAgICAgICAgLy8gZmluZCBzY2FsZSBmYWN0b3JcbiAgICAgICAgaWYgKGlubmVyUmF0aW8gPiBvdXRlclJhdGlvKSB7XG4gICAgICAgICAgICBzY2FsZVkgPSBpbm5lclJhdGlvIC8gb3V0ZXJSYXRpbztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNjYWxlWCA9IG91dGVyUmF0aW8gLyBpbm5lclJhdGlvO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZW5hYmxlIGJvdW5kc1xuICAgICAgICByZW5kZXIub3B0aW9ucy5oYXNCb3VuZHMgPSB0cnVlO1xuXG4gICAgICAgIC8vIHBvc2l0aW9uIGFuZCBzaXplXG4gICAgICAgIHJlbmRlci5ib3VuZHMubWluLnggPSBib3VuZHMubWluLng7XG4gICAgICAgIHJlbmRlci5ib3VuZHMubWF4LnggPSBib3VuZHMubWluLnggKyB3aWR0aCAqIHNjYWxlWDtcbiAgICAgICAgcmVuZGVyLmJvdW5kcy5taW4ueSA9IGJvdW5kcy5taW4ueTtcbiAgICAgICAgcmVuZGVyLmJvdW5kcy5tYXgueSA9IGJvdW5kcy5taW4ueSArIGhlaWdodCAqIHNjYWxlWTtcblxuICAgICAgICAvLyBjZW50ZXJcbiAgICAgICAgaWYgKGNlbnRlcikge1xuICAgICAgICAgICAgcmVuZGVyLmJvdW5kcy5taW4ueCArPSB3aWR0aCAqIDAuNSAtICh3aWR0aCAqIHNjYWxlWCkgKiAwLjU7XG4gICAgICAgICAgICByZW5kZXIuYm91bmRzLm1heC54ICs9IHdpZHRoICogMC41IC0gKHdpZHRoICogc2NhbGVYKSAqIDAuNTtcbiAgICAgICAgICAgIHJlbmRlci5ib3VuZHMubWluLnkgKz0gaGVpZ2h0ICogMC41IC0gKGhlaWdodCAqIHNjYWxlWSkgKiAwLjU7XG4gICAgICAgICAgICByZW5kZXIuYm91bmRzLm1heC55ICs9IGhlaWdodCAqIDAuNSAtIChoZWlnaHQgKiBzY2FsZVkpICogMC41O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcGFkZGluZ1xuICAgICAgICByZW5kZXIuYm91bmRzLm1pbi54IC09IHBhZGRpbmcueDtcbiAgICAgICAgcmVuZGVyLmJvdW5kcy5tYXgueCAtPSBwYWRkaW5nLng7XG4gICAgICAgIHJlbmRlci5ib3VuZHMubWluLnkgLT0gcGFkZGluZy55O1xuICAgICAgICByZW5kZXIuYm91bmRzLm1heC55IC09IHBhZGRpbmcueTtcblxuICAgICAgICAvLyB1cGRhdGUgbW91c2VcbiAgICAgICAgaWYgKHJlbmRlci5tb3VzZSkge1xuICAgICAgICAgICAgTW91c2Uuc2V0U2NhbGUocmVuZGVyLm1vdXNlLCB7XG4gICAgICAgICAgICAgICAgeDogKHJlbmRlci5ib3VuZHMubWF4LnggLSByZW5kZXIuYm91bmRzLm1pbi54KSAvIHJlbmRlci5jYW52YXMud2lkdGgsXG4gICAgICAgICAgICAgICAgeTogKHJlbmRlci5ib3VuZHMubWF4LnkgLSByZW5kZXIuYm91bmRzLm1pbi55KSAvIHJlbmRlci5jYW52YXMuaGVpZ2h0XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgTW91c2Uuc2V0T2Zmc2V0KHJlbmRlci5tb3VzZSwgcmVuZGVyLmJvdW5kcy5taW4pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgdmlld3BvcnQgdHJhbnNmb3JtcyBiYXNlZCBvbiBgcmVuZGVyLmJvdW5kc2AgdG8gYSByZW5kZXIgY29udGV4dC5cbiAgICAgKiBAbWV0aG9kIHN0YXJ0Vmlld1RyYW5zZm9ybVxuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKi9cbiAgICBSZW5kZXIuc3RhcnRWaWV3VHJhbnNmb3JtID0gZnVuY3Rpb24ocmVuZGVyKSB7XG4gICAgICAgIHZhciBib3VuZHNXaWR0aCA9IHJlbmRlci5ib3VuZHMubWF4LnggLSByZW5kZXIuYm91bmRzLm1pbi54LFxuICAgICAgICAgICAgYm91bmRzSGVpZ2h0ID0gcmVuZGVyLmJvdW5kcy5tYXgueSAtIHJlbmRlci5ib3VuZHMubWluLnksXG4gICAgICAgICAgICBib3VuZHNTY2FsZVggPSBib3VuZHNXaWR0aCAvIHJlbmRlci5vcHRpb25zLndpZHRoLFxuICAgICAgICAgICAgYm91bmRzU2NhbGVZID0gYm91bmRzSGVpZ2h0IC8gcmVuZGVyLm9wdGlvbnMuaGVpZ2h0O1xuXG4gICAgICAgIHJlbmRlci5jb250ZXh0LnNjYWxlKDEgLyBib3VuZHNTY2FsZVgsIDEgLyBib3VuZHNTY2FsZVkpO1xuICAgICAgICByZW5kZXIuY29udGV4dC50cmFuc2xhdGUoLXJlbmRlci5ib3VuZHMubWluLngsIC1yZW5kZXIuYm91bmRzLm1pbi55KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVzZXRzIGFsbCB0cmFuc2Zvcm1zIG9uIHRoZSByZW5kZXIgY29udGV4dC5cbiAgICAgKiBAbWV0aG9kIGVuZFZpZXdUcmFuc2Zvcm1cbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICovXG4gICAgUmVuZGVyLmVuZFZpZXdUcmFuc2Zvcm0gPSBmdW5jdGlvbihyZW5kZXIpIHtcbiAgICAgICAgcmVuZGVyLmNvbnRleHQuc2V0VHJhbnNmb3JtKHJlbmRlci5vcHRpb25zLnBpeGVsUmF0aW8sIDAsIDAsIHJlbmRlci5vcHRpb25zLnBpeGVsUmF0aW8sIDAsIDApO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZW5kZXJzIHRoZSBnaXZlbiBgZW5naW5lYCdzIGBNYXR0ZXIuV29ybGRgIG9iamVjdC5cbiAgICAgKiBUaGlzIGlzIHRoZSBlbnRyeSBwb2ludCBmb3IgYWxsIHJlbmRlcmluZyBhbmQgc2hvdWxkIGJlIGNhbGxlZCBldmVyeSB0aW1lIHRoZSBzY2VuZSBjaGFuZ2VzLlxuICAgICAqIEBtZXRob2Qgd29ybGRcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICovXG4gICAgUmVuZGVyLndvcmxkID0gZnVuY3Rpb24ocmVuZGVyKSB7XG4gICAgICAgIHZhciBlbmdpbmUgPSByZW5kZXIuZW5naW5lLFxuICAgICAgICAgICAgd29ybGQgPSBlbmdpbmUud29ybGQsXG4gICAgICAgICAgICBjYW52YXMgPSByZW5kZXIuY2FudmFzLFxuICAgICAgICAgICAgY29udGV4dCA9IHJlbmRlci5jb250ZXh0LFxuICAgICAgICAgICAgb3B0aW9ucyA9IHJlbmRlci5vcHRpb25zLFxuICAgICAgICAgICAgYWxsQm9kaWVzID0gQ29tcG9zaXRlLmFsbEJvZGllcyh3b3JsZCksXG4gICAgICAgICAgICBhbGxDb25zdHJhaW50cyA9IENvbXBvc2l0ZS5hbGxDb25zdHJhaW50cyh3b3JsZCksXG4gICAgICAgICAgICBiYWNrZ3JvdW5kID0gb3B0aW9ucy53aXJlZnJhbWVzID8gb3B0aW9ucy53aXJlZnJhbWVCYWNrZ3JvdW5kIDogb3B0aW9ucy5iYWNrZ3JvdW5kLFxuICAgICAgICAgICAgYm9kaWVzID0gW10sXG4gICAgICAgICAgICBjb25zdHJhaW50cyA9IFtdLFxuICAgICAgICAgICAgaTtcblxuICAgICAgICB2YXIgZXZlbnQgPSB7XG4gICAgICAgICAgICB0aW1lc3RhbXA6IGVuZ2luZS50aW1pbmcudGltZXN0YW1wXG4gICAgICAgIH07XG5cbiAgICAgICAgRXZlbnRzLnRyaWdnZXIocmVuZGVyLCAnYmVmb3JlUmVuZGVyJywgZXZlbnQpO1xuXG4gICAgICAgIC8vIGFwcGx5IGJhY2tncm91bmQgaWYgaXQgaGFzIGNoYW5nZWRcbiAgICAgICAgaWYgKHJlbmRlci5jdXJyZW50QmFja2dyb3VuZCAhPT0gYmFja2dyb3VuZClcbiAgICAgICAgICAgIF9hcHBseUJhY2tncm91bmQocmVuZGVyLCBiYWNrZ3JvdW5kKTtcblxuICAgICAgICAvLyBjbGVhciB0aGUgY2FudmFzIHdpdGggYSB0cmFuc3BhcmVudCBmaWxsLCB0byBhbGxvdyB0aGUgY2FudmFzIGJhY2tncm91bmQgdG8gc2hvd1xuICAgICAgICBjb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdzb3VyY2UtaW4nO1xuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IFwidHJhbnNwYXJlbnRcIjtcbiAgICAgICAgY29udGV4dC5maWxsUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICBjb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdzb3VyY2Utb3Zlcic7XG5cbiAgICAgICAgLy8gaGFuZGxlIGJvdW5kc1xuICAgICAgICBpZiAob3B0aW9ucy5oYXNCb3VuZHMpIHtcbiAgICAgICAgICAgIC8vIGZpbHRlciBvdXQgYm9kaWVzIHRoYXQgYXJlIG5vdCBpbiB2aWV3XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYWxsQm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJvZHkgPSBhbGxCb2RpZXNbaV07XG4gICAgICAgICAgICAgICAgaWYgKEJvdW5kcy5vdmVybGFwcyhib2R5LmJvdW5kcywgcmVuZGVyLmJvdW5kcykpXG4gICAgICAgICAgICAgICAgICAgIGJvZGllcy5wdXNoKGJvZHkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBmaWx0ZXIgb3V0IGNvbnN0cmFpbnRzIHRoYXQgYXJlIG5vdCBpbiB2aWV3XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYWxsQ29uc3RyYWludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgY29uc3RyYWludCA9IGFsbENvbnN0cmFpbnRzW2ldLFxuICAgICAgICAgICAgICAgICAgICBib2R5QSA9IGNvbnN0cmFpbnQuYm9keUEsXG4gICAgICAgICAgICAgICAgICAgIGJvZHlCID0gY29uc3RyYWludC5ib2R5QixcbiAgICAgICAgICAgICAgICAgICAgcG9pbnRBV29ybGQgPSBjb25zdHJhaW50LnBvaW50QSxcbiAgICAgICAgICAgICAgICAgICAgcG9pbnRCV29ybGQgPSBjb25zdHJhaW50LnBvaW50QjtcblxuICAgICAgICAgICAgICAgIGlmIChib2R5QSkgcG9pbnRBV29ybGQgPSBWZWN0b3IuYWRkKGJvZHlBLnBvc2l0aW9uLCBjb25zdHJhaW50LnBvaW50QSk7XG4gICAgICAgICAgICAgICAgaWYgKGJvZHlCKSBwb2ludEJXb3JsZCA9IFZlY3Rvci5hZGQoYm9keUIucG9zaXRpb24sIGNvbnN0cmFpbnQucG9pbnRCKTtcblxuICAgICAgICAgICAgICAgIGlmICghcG9pbnRBV29ybGQgfHwgIXBvaW50QldvcmxkKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgIGlmIChCb3VuZHMuY29udGFpbnMocmVuZGVyLmJvdW5kcywgcG9pbnRBV29ybGQpIHx8IEJvdW5kcy5jb250YWlucyhyZW5kZXIuYm91bmRzLCBwb2ludEJXb3JsZCkpXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRzLnB1c2goY29uc3RyYWludCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIHRyYW5zZm9ybSB0aGUgdmlld1xuICAgICAgICAgICAgUmVuZGVyLnN0YXJ0Vmlld1RyYW5zZm9ybShyZW5kZXIpO1xuXG4gICAgICAgICAgICAvLyB1cGRhdGUgbW91c2VcbiAgICAgICAgICAgIGlmIChyZW5kZXIubW91c2UpIHtcbiAgICAgICAgICAgICAgICBNb3VzZS5zZXRTY2FsZShyZW5kZXIubW91c2UsIHtcbiAgICAgICAgICAgICAgICAgICAgeDogKHJlbmRlci5ib3VuZHMubWF4LnggLSByZW5kZXIuYm91bmRzLm1pbi54KSAvIHJlbmRlci5jYW52YXMud2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIHk6IChyZW5kZXIuYm91bmRzLm1heC55IC0gcmVuZGVyLmJvdW5kcy5taW4ueSkgLyByZW5kZXIuY2FudmFzLmhlaWdodFxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgTW91c2Uuc2V0T2Zmc2V0KHJlbmRlci5tb3VzZSwgcmVuZGVyLmJvdW5kcy5taW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3RyYWludHMgPSBhbGxDb25zdHJhaW50cztcbiAgICAgICAgICAgIGJvZGllcyA9IGFsbEJvZGllcztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghb3B0aW9ucy53aXJlZnJhbWVzIHx8IChlbmdpbmUuZW5hYmxlU2xlZXBpbmcgJiYgb3B0aW9ucy5zaG93U2xlZXBpbmcpKSB7XG4gICAgICAgICAgICAvLyBmdWxseSBmZWF0dXJlZCByZW5kZXJpbmcgb2YgYm9kaWVzXG4gICAgICAgICAgICBSZW5kZXIuYm9kaWVzKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNob3dDb252ZXhIdWxscylcbiAgICAgICAgICAgICAgICBSZW5kZXIuYm9keUNvbnZleEh1bGxzKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KTtcblxuICAgICAgICAgICAgLy8gb3B0aW1pc2VkIG1ldGhvZCBmb3Igd2lyZWZyYW1lcyBvbmx5XG4gICAgICAgICAgICBSZW5kZXIuYm9keVdpcmVmcmFtZXMocmVuZGVyLCBib2RpZXMsIGNvbnRleHQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuc2hvd0JvdW5kcylcbiAgICAgICAgICAgIFJlbmRlci5ib2R5Qm91bmRzKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5zaG93QXhlcyB8fCBvcHRpb25zLnNob3dBbmdsZUluZGljYXRvcilcbiAgICAgICAgICAgIFJlbmRlci5ib2R5QXhlcyhyZW5kZXIsIGJvZGllcywgY29udGV4dCk7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuc2hvd1Bvc2l0aW9ucylcbiAgICAgICAgICAgIFJlbmRlci5ib2R5UG9zaXRpb25zKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5zaG93VmVsb2NpdHkpXG4gICAgICAgICAgICBSZW5kZXIuYm9keVZlbG9jaXR5KHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5zaG93SWRzKVxuICAgICAgICAgICAgUmVuZGVyLmJvZHlJZHMocmVuZGVyLCBib2RpZXMsIGNvbnRleHQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNob3dTZXBhcmF0aW9ucylcbiAgICAgICAgICAgIFJlbmRlci5zZXBhcmF0aW9ucyhyZW5kZXIsIGVuZ2luZS5wYWlycy5saXN0LCBjb250ZXh0KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5zaG93Q29sbGlzaW9ucylcbiAgICAgICAgICAgIFJlbmRlci5jb2xsaXNpb25zKHJlbmRlciwgZW5naW5lLnBhaXJzLmxpc3QsIGNvbnRleHQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNob3dWZXJ0ZXhOdW1iZXJzKVxuICAgICAgICAgICAgUmVuZGVyLnZlcnRleE51bWJlcnMocmVuZGVyLCBib2RpZXMsIGNvbnRleHQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNob3dNb3VzZVBvc2l0aW9uKVxuICAgICAgICAgICAgUmVuZGVyLm1vdXNlUG9zaXRpb24ocmVuZGVyLCByZW5kZXIubW91c2UsIGNvbnRleHQpO1xuXG4gICAgICAgIFJlbmRlci5jb25zdHJhaW50cyhjb25zdHJhaW50cywgY29udGV4dCk7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuc2hvd0Jyb2FkcGhhc2UgJiYgZW5naW5lLmJyb2FkcGhhc2UuY29udHJvbGxlciA9PT0gR3JpZClcbiAgICAgICAgICAgIFJlbmRlci5ncmlkKHJlbmRlciwgZW5naW5lLmJyb2FkcGhhc2UsIGNvbnRleHQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNob3dEZWJ1ZylcbiAgICAgICAgICAgIFJlbmRlci5kZWJ1ZyhyZW5kZXIsIGNvbnRleHQpO1xuXG4gICAgICAgIGlmIChvcHRpb25zLmhhc0JvdW5kcykge1xuICAgICAgICAgICAgLy8gcmV2ZXJ0IHZpZXcgdHJhbnNmb3Jtc1xuICAgICAgICAgICAgUmVuZGVyLmVuZFZpZXdUcmFuc2Zvcm0ocmVuZGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIEV2ZW50cy50cmlnZ2VyKHJlbmRlciwgJ2FmdGVyUmVuZGVyJywgZXZlbnQpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBEZXNjcmlwdGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBkZWJ1Z1xuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmluZ0NvbnRleHR9IGNvbnRleHRcbiAgICAgKi9cbiAgICBSZW5kZXIuZGVidWcgPSBmdW5jdGlvbihyZW5kZXIsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIGMgPSBjb250ZXh0LFxuICAgICAgICAgICAgZW5naW5lID0gcmVuZGVyLmVuZ2luZSxcbiAgICAgICAgICAgIHdvcmxkID0gZW5naW5lLndvcmxkLFxuICAgICAgICAgICAgbWV0cmljcyA9IGVuZ2luZS5tZXRyaWNzLFxuICAgICAgICAgICAgb3B0aW9ucyA9IHJlbmRlci5vcHRpb25zLFxuICAgICAgICAgICAgYm9kaWVzID0gQ29tcG9zaXRlLmFsbEJvZGllcyh3b3JsZCksXG4gICAgICAgICAgICBzcGFjZSA9IFwiICAgIFwiO1xuXG4gICAgICAgIGlmIChlbmdpbmUudGltaW5nLnRpbWVzdGFtcCAtIChyZW5kZXIuZGVidWdUaW1lc3RhbXAgfHwgMCkgPj0gNTAwKSB7XG4gICAgICAgICAgICB2YXIgdGV4dCA9IFwiXCI7XG5cbiAgICAgICAgICAgIGlmIChtZXRyaWNzLnRpbWluZykge1xuICAgICAgICAgICAgICAgIHRleHQgKz0gXCJmcHM6IFwiICsgTWF0aC5yb3VuZChtZXRyaWNzLnRpbWluZy5mcHMpICsgc3BhY2U7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgcmVuZGVyLmRlYnVnU3RyaW5nID0gdGV4dDtcbiAgICAgICAgICAgIHJlbmRlci5kZWJ1Z1RpbWVzdGFtcCA9IGVuZ2luZS50aW1pbmcudGltZXN0YW1wO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHJlbmRlci5kZWJ1Z1N0cmluZykge1xuICAgICAgICAgICAgYy5mb250ID0gXCIxMnB4IEFyaWFsXCI7XG5cbiAgICAgICAgICAgIGlmIChvcHRpb25zLndpcmVmcmFtZXMpIHtcbiAgICAgICAgICAgICAgICBjLmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNSknO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjLmZpbGxTdHlsZSA9ICdyZ2JhKDAsMCwwLDAuNSknO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgc3BsaXQgPSByZW5kZXIuZGVidWdTdHJpbmcuc3BsaXQoJ1xcbicpO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNwbGl0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgYy5maWxsVGV4dChzcGxpdFtpXSwgNTAsIDUwICsgaSAqIDE4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBEZXNjcmlwdGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBjb25zdHJhaW50c1xuICAgICAqIEBwYXJhbSB7Y29uc3RyYWludFtdfSBjb25zdHJhaW50c1xuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5jb25zdHJhaW50cyA9IGZ1bmN0aW9uKGNvbnN0cmFpbnRzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dDtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbnN0cmFpbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY29uc3RyYWludCA9IGNvbnN0cmFpbnRzW2ldO1xuXG4gICAgICAgICAgICBpZiAoIWNvbnN0cmFpbnQucmVuZGVyLnZpc2libGUgfHwgIWNvbnN0cmFpbnQucG9pbnRBIHx8ICFjb25zdHJhaW50LnBvaW50QilcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgdmFyIGJvZHlBID0gY29uc3RyYWludC5ib2R5QSxcbiAgICAgICAgICAgICAgICBib2R5QiA9IGNvbnN0cmFpbnQuYm9keUIsXG4gICAgICAgICAgICAgICAgc3RhcnQsXG4gICAgICAgICAgICAgICAgZW5kO1xuXG4gICAgICAgICAgICBpZiAoYm9keUEpIHtcbiAgICAgICAgICAgICAgICBzdGFydCA9IFZlY3Rvci5hZGQoYm9keUEucG9zaXRpb24sIGNvbnN0cmFpbnQucG9pbnRBKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBjb25zdHJhaW50LnBvaW50QTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNvbnN0cmFpbnQucmVuZGVyLnR5cGUgPT09ICdwaW4nKSB7XG4gICAgICAgICAgICAgICAgYy5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICBjLmFyYyhzdGFydC54LCBzdGFydC55LCAzLCAwLCAyICogTWF0aC5QSSk7XG4gICAgICAgICAgICAgICAgYy5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGJvZHlCKSB7XG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IFZlY3Rvci5hZGQoYm9keUIucG9zaXRpb24sIGNvbnN0cmFpbnQucG9pbnRCKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlbmQgPSBjb25zdHJhaW50LnBvaW50QjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjLmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIGMubW92ZVRvKHN0YXJ0LngsIHN0YXJ0LnkpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNvbnN0cmFpbnQucmVuZGVyLnR5cGUgPT09ICdzcHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWx0YSA9IFZlY3Rvci5zdWIoZW5kLCBzdGFydCksXG4gICAgICAgICAgICAgICAgICAgICAgICBub3JtYWwgPSBWZWN0b3IucGVycChWZWN0b3Iubm9ybWFsaXNlKGRlbHRhKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2lscyA9IE1hdGguY2VpbChDb21tb24uY2xhbXAoY29uc3RyYWludC5sZW5ndGggLyA1LCAxMiwgMjApKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldDtcblxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IGNvaWxzOyBqICs9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IGogJSAyID09PSAwID8gMSA6IC0xO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjLmxpbmVUbyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydC54ICsgZGVsdGEueCAqIChqIC8gY29pbHMpICsgbm9ybWFsLnggKiBvZmZzZXQgKiA0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LnkgKyBkZWx0YS55ICogKGogLyBjb2lscykgKyBub3JtYWwueSAqIG9mZnNldCAqIDRcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjLmxpbmVUbyhlbmQueCwgZW5kLnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY29uc3RyYWludC5yZW5kZXIubGluZVdpZHRoKSB7XG4gICAgICAgICAgICAgICAgYy5saW5lV2lkdGggPSBjb25zdHJhaW50LnJlbmRlci5saW5lV2lkdGg7XG4gICAgICAgICAgICAgICAgYy5zdHJva2VTdHlsZSA9IGNvbnN0cmFpbnQucmVuZGVyLnN0cm9rZVN0eWxlO1xuICAgICAgICAgICAgICAgIGMuc3Ryb2tlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjb25zdHJhaW50LnJlbmRlci5hbmNob3JzKSB7XG4gICAgICAgICAgICAgICAgYy5maWxsU3R5bGUgPSBjb25zdHJhaW50LnJlbmRlci5zdHJva2VTdHlsZTtcbiAgICAgICAgICAgICAgICBjLmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIGMuYXJjKHN0YXJ0LngsIHN0YXJ0LnksIDMsIDAsIDIgKiBNYXRoLlBJKTtcbiAgICAgICAgICAgICAgICBjLmFyYyhlbmQueCwgZW5kLnksIDMsIDAsIDIgKiBNYXRoLlBJKTtcbiAgICAgICAgICAgICAgICBjLmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgICAgIGMuZmlsbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIGJvZHlTaGFkb3dzXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmluZ0NvbnRleHR9IGNvbnRleHRcbiAgICAgKi9cbiAgICBSZW5kZXIuYm9keVNoYWRvd3MgPSBmdW5jdGlvbihyZW5kZXIsIGJvZGllcywgY29udGV4dCkge1xuICAgICAgICB2YXIgYyA9IGNvbnRleHQsXG4gICAgICAgICAgICBlbmdpbmUgPSByZW5kZXIuZW5naW5lO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFib2R5LnJlbmRlci52aXNpYmxlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBpZiAoYm9keS5jaXJjbGVSYWRpdXMpIHtcbiAgICAgICAgICAgICAgICBjLmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIGMuYXJjKGJvZHkucG9zaXRpb24ueCwgYm9keS5wb3NpdGlvbi55LCBib2R5LmNpcmNsZVJhZGl1cywgMCwgMiAqIE1hdGguUEkpO1xuICAgICAgICAgICAgICAgIGMuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGMuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgYy5tb3ZlVG8oYm9keS52ZXJ0aWNlc1swXS54LCBib2R5LnZlcnRpY2VzWzBdLnkpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAxOyBqIDwgYm9keS52ZXJ0aWNlcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBjLmxpbmVUbyhib2R5LnZlcnRpY2VzW2pdLngsIGJvZHkudmVydGljZXNbal0ueSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGMuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBkaXN0YW5jZVggPSBib2R5LnBvc2l0aW9uLnggLSByZW5kZXIub3B0aW9ucy53aWR0aCAqIDAuNSxcbiAgICAgICAgICAgICAgICBkaXN0YW5jZVkgPSBib2R5LnBvc2l0aW9uLnkgLSByZW5kZXIub3B0aW9ucy5oZWlnaHQgKiAwLjIsXG4gICAgICAgICAgICAgICAgZGlzdGFuY2UgPSBNYXRoLmFicyhkaXN0YW5jZVgpICsgTWF0aC5hYnMoZGlzdGFuY2VZKTtcblxuICAgICAgICAgICAgYy5zaGFkb3dDb2xvciA9ICdyZ2JhKDAsMCwwLDAuMTUpJztcbiAgICAgICAgICAgIGMuc2hhZG93T2Zmc2V0WCA9IDAuMDUgKiBkaXN0YW5jZVg7XG4gICAgICAgICAgICBjLnNoYWRvd09mZnNldFkgPSAwLjA1ICogZGlzdGFuY2VZO1xuICAgICAgICAgICAgYy5zaGFkb3dCbHVyID0gMSArIDEyICogTWF0aC5taW4oMSwgZGlzdGFuY2UgLyAxMDAwKTtcblxuICAgICAgICAgICAgYy5maWxsKCk7XG5cbiAgICAgICAgICAgIGMuc2hhZG93Q29sb3IgPSBudWxsO1xuICAgICAgICAgICAgYy5zaGFkb3dPZmZzZXRYID0gbnVsbDtcbiAgICAgICAgICAgIGMuc2hhZG93T2Zmc2V0WSA9IG51bGw7XG4gICAgICAgICAgICBjLnNoYWRvd0JsdXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIGJvZGllc1xuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHtSZW5kZXJpbmdDb250ZXh0fSBjb250ZXh0XG4gICAgICovXG4gICAgUmVuZGVyLmJvZGllcyA9IGZ1bmN0aW9uKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dCxcbiAgICAgICAgICAgIGVuZ2luZSA9IHJlbmRlci5lbmdpbmUsXG4gICAgICAgICAgICBvcHRpb25zID0gcmVuZGVyLm9wdGlvbnMsXG4gICAgICAgICAgICBzaG93SW50ZXJuYWxFZGdlcyA9IG9wdGlvbnMuc2hvd0ludGVybmFsRWRnZXMgfHwgIW9wdGlvbnMud2lyZWZyYW1lcyxcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICBwYXJ0LFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGs7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFib2R5LnJlbmRlci52aXNpYmxlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAvLyBoYW5kbGUgY29tcG91bmQgcGFydHNcbiAgICAgICAgICAgIGZvciAoayA9IGJvZHkucGFydHMubGVuZ3RoID4gMSA/IDEgOiAwOyBrIDwgYm9keS5wYXJ0cy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgIHBhcnQgPSBib2R5LnBhcnRzW2tdO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFwYXJ0LnJlbmRlci52aXNpYmxlKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLnNob3dTbGVlcGluZyAmJiBib2R5LmlzU2xlZXBpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgYy5nbG9iYWxBbHBoYSA9IDAuNSAqIHBhcnQucmVuZGVyLm9wYWNpdHk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJ0LnJlbmRlci5vcGFjaXR5ICE9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGMuZ2xvYmFsQWxwaGEgPSBwYXJ0LnJlbmRlci5vcGFjaXR5O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChwYXJ0LnJlbmRlci5zcHJpdGUgJiYgcGFydC5yZW5kZXIuc3ByaXRlLnRleHR1cmUgJiYgIW9wdGlvbnMud2lyZWZyYW1lcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBwYXJ0IHNwcml0ZVxuICAgICAgICAgICAgICAgICAgICB2YXIgc3ByaXRlID0gcGFydC5yZW5kZXIuc3ByaXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dHVyZSA9IF9nZXRUZXh0dXJlKHJlbmRlciwgc3ByaXRlLnRleHR1cmUpO1xuXG4gICAgICAgICAgICAgICAgICAgIGMudHJhbnNsYXRlKHBhcnQucG9zaXRpb24ueCwgcGFydC5wb3NpdGlvbi55KTtcbiAgICAgICAgICAgICAgICAgICAgYy5yb3RhdGUocGFydC5hbmdsZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgYy5kcmF3SW1hZ2UoXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0dXJlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dHVyZS53aWR0aCAqIC1zcHJpdGUueE9mZnNldCAqIHNwcml0ZS54U2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0dXJlLmhlaWdodCAqIC1zcHJpdGUueU9mZnNldCAqIHNwcml0ZS55U2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0dXJlLndpZHRoICogc3ByaXRlLnhTY2FsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHR1cmUuaGVpZ2h0ICogc3ByaXRlLnlTY2FsZVxuICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIHJldmVydCB0cmFuc2xhdGlvbiwgaG9wZWZ1bGx5IGZhc3RlciB0aGFuIHNhdmUgLyByZXN0b3JlXG4gICAgICAgICAgICAgICAgICAgIGMucm90YXRlKC1wYXJ0LmFuZ2xlKTtcbiAgICAgICAgICAgICAgICAgICAgYy50cmFuc2xhdGUoLXBhcnQucG9zaXRpb24ueCwgLXBhcnQucG9zaXRpb24ueSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gcGFydCBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0LmNpcmNsZVJhZGl1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMuYXJjKHBhcnQucG9zaXRpb24ueCwgcGFydC5wb3NpdGlvbi55LCBwYXJ0LmNpcmNsZVJhZGl1cywgMCwgMiAqIE1hdGguUEkpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMubW92ZVRvKHBhcnQudmVydGljZXNbMF0ueCwgcGFydC52ZXJ0aWNlc1swXS55KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDE7IGogPCBwYXJ0LnZlcnRpY2VzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJ0LnZlcnRpY2VzW2ogLSAxXS5pc0ludGVybmFsIHx8IHNob3dJbnRlcm5hbEVkZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGMubGluZVRvKHBhcnQudmVydGljZXNbal0ueCwgcGFydC52ZXJ0aWNlc1tqXS55KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjLm1vdmVUbyhwYXJ0LnZlcnRpY2VzW2pdLngsIHBhcnQudmVydGljZXNbal0ueSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnQudmVydGljZXNbal0uaXNJbnRlcm5hbCAmJiAhc2hvd0ludGVybmFsRWRnZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYy5tb3ZlVG8ocGFydC52ZXJ0aWNlc1soaiArIDEpICUgcGFydC52ZXJ0aWNlcy5sZW5ndGhdLngsIHBhcnQudmVydGljZXNbKGogKyAxKSAlIHBhcnQudmVydGljZXMubGVuZ3RoXS55KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGMubGluZVRvKHBhcnQudmVydGljZXNbMF0ueCwgcGFydC52ZXJ0aWNlc1swXS55KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoIW9wdGlvbnMud2lyZWZyYW1lcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5maWxsU3R5bGUgPSBwYXJ0LnJlbmRlci5maWxsU3R5bGU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0LnJlbmRlci5saW5lV2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjLmxpbmVXaWR0aCA9IHBhcnQucmVuZGVyLmxpbmVXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjLnN0cm9rZVN0eWxlID0gcGFydC5yZW5kZXIuc3Ryb2tlU3R5bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYy5zdHJva2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgYy5maWxsKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjLmxpbmVXaWR0aCA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBjLnN0cm9rZVN0eWxlID0gJyNiYmInO1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5zdHJva2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGMuZ2xvYmFsQWxwaGEgPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIE9wdGltaXNlZCBtZXRob2QgZm9yIGRyYXdpbmcgYm9keSB3aXJlZnJhbWVzIGluIG9uZSBwYXNzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIGJvZHlXaXJlZnJhbWVzXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmluZ0NvbnRleHR9IGNvbnRleHRcbiAgICAgKi9cbiAgICBSZW5kZXIuYm9keVdpcmVmcmFtZXMgPSBmdW5jdGlvbihyZW5kZXIsIGJvZGllcywgY29udGV4dCkge1xuICAgICAgICB2YXIgYyA9IGNvbnRleHQsXG4gICAgICAgICAgICBzaG93SW50ZXJuYWxFZGdlcyA9IHJlbmRlci5vcHRpb25zLnNob3dJbnRlcm5hbEVkZ2VzLFxuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIHBhcnQsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgaixcbiAgICAgICAgICAgIGs7XG5cbiAgICAgICAgYy5iZWdpblBhdGgoKTtcblxuICAgICAgICAvLyByZW5kZXIgYWxsIGJvZGllc1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBib2R5ID0gYm9kaWVzW2ldO1xuXG4gICAgICAgICAgICBpZiAoIWJvZHkucmVuZGVyLnZpc2libGUpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIC8vIGhhbmRsZSBjb21wb3VuZCBwYXJ0c1xuICAgICAgICAgICAgZm9yIChrID0gYm9keS5wYXJ0cy5sZW5ndGggPiAxID8gMSA6IDA7IGsgPCBib2R5LnBhcnRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgcGFydCA9IGJvZHkucGFydHNba107XG5cbiAgICAgICAgICAgICAgICBjLm1vdmVUbyhwYXJ0LnZlcnRpY2VzWzBdLngsIHBhcnQudmVydGljZXNbMF0ueSk7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGogPSAxOyBqIDwgcGFydC52ZXJ0aWNlcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXBhcnQudmVydGljZXNbaiAtIDFdLmlzSW50ZXJuYWwgfHwgc2hvd0ludGVybmFsRWRnZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMubGluZVRvKHBhcnQudmVydGljZXNbal0ueCwgcGFydC52ZXJ0aWNlc1tqXS55KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMubW92ZVRvKHBhcnQudmVydGljZXNbal0ueCwgcGFydC52ZXJ0aWNlc1tqXS55KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0LnZlcnRpY2VzW2pdLmlzSW50ZXJuYWwgJiYgIXNob3dJbnRlcm5hbEVkZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjLm1vdmVUbyhwYXJ0LnZlcnRpY2VzWyhqICsgMSkgJSBwYXJ0LnZlcnRpY2VzLmxlbmd0aF0ueCwgcGFydC52ZXJ0aWNlc1soaiArIDEpICUgcGFydC52ZXJ0aWNlcy5sZW5ndGhdLnkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgYy5saW5lVG8ocGFydC52ZXJ0aWNlc1swXS54LCBwYXJ0LnZlcnRpY2VzWzBdLnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYy5saW5lV2lkdGggPSAxO1xuICAgICAgICBjLnN0cm9rZVN0eWxlID0gJyNiYmInO1xuICAgICAgICBjLnN0cm9rZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBPcHRpbWlzZWQgbWV0aG9kIGZvciBkcmF3aW5nIGJvZHkgY29udmV4IGh1bGwgd2lyZWZyYW1lcyBpbiBvbmUgcGFzc1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBib2R5Q29udmV4SHVsbHNcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtib2R5W119IGJvZGllc1xuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5ib2R5Q29udmV4SHVsbHMgPSBmdW5jdGlvbihyZW5kZXIsIGJvZGllcywgY29udGV4dCkge1xuICAgICAgICB2YXIgYyA9IGNvbnRleHQsXG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgcGFydCxcbiAgICAgICAgICAgIGksXG4gICAgICAgICAgICBqLFxuICAgICAgICAgICAgaztcblxuICAgICAgICBjLmJlZ2luUGF0aCgpO1xuXG4gICAgICAgIC8vIHJlbmRlciBjb252ZXggaHVsbHNcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFib2R5LnJlbmRlci52aXNpYmxlIHx8IGJvZHkucGFydHMubGVuZ3RoID09PSAxKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBjLm1vdmVUbyhib2R5LnZlcnRpY2VzWzBdLngsIGJvZHkudmVydGljZXNbMF0ueSk7XG5cbiAgICAgICAgICAgIGZvciAoaiA9IDE7IGogPCBib2R5LnZlcnRpY2VzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgYy5saW5lVG8oYm9keS52ZXJ0aWNlc1tqXS54LCBib2R5LnZlcnRpY2VzW2pdLnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjLmxpbmVUbyhib2R5LnZlcnRpY2VzWzBdLngsIGJvZHkudmVydGljZXNbMF0ueSk7XG4gICAgICAgIH1cblxuICAgICAgICBjLmxpbmVXaWR0aCA9IDE7XG4gICAgICAgIGMuc3Ryb2tlU3R5bGUgPSAncmdiYSgyNTUsMjU1LDI1NSwwLjIpJztcbiAgICAgICAgYy5zdHJva2UoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVuZGVycyBib2R5IHZlcnRleCBudW1iZXJzLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCB2ZXJ0ZXhOdW1iZXJzXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmluZ0NvbnRleHR9IGNvbnRleHRcbiAgICAgKi9cbiAgICBSZW5kZXIudmVydGV4TnVtYmVycyA9IGZ1bmN0aW9uKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dCxcbiAgICAgICAgICAgIGksXG4gICAgICAgICAgICBqLFxuICAgICAgICAgICAgaztcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFydHMgPSBib2RpZXNbaV0ucGFydHM7XG4gICAgICAgICAgICBmb3IgKGsgPSBwYXJ0cy5sZW5ndGggPiAxID8gMSA6IDA7IGsgPCBwYXJ0cy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgIHZhciBwYXJ0ID0gcGFydHNba107XG4gICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IHBhcnQudmVydGljZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgYy5maWxsU3R5bGUgPSAncmdiYSgyNTUsMjU1LDI1NSwwLjIpJztcbiAgICAgICAgICAgICAgICAgICAgYy5maWxsVGV4dChpICsgJ18nICsgaiwgcGFydC5wb3NpdGlvbi54ICsgKHBhcnQudmVydGljZXNbal0ueCAtIHBhcnQucG9zaXRpb24ueCkgKiAwLjgsIHBhcnQucG9zaXRpb24ueSArIChwYXJ0LnZlcnRpY2VzW2pdLnkgLSBwYXJ0LnBvc2l0aW9uLnkpICogMC44KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVuZGVycyBtb3VzZSBwb3NpdGlvbi5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgbW91c2VQb3NpdGlvblxuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKiBAcGFyYW0ge21vdXNlfSBtb3VzZVxuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5tb3VzZVBvc2l0aW9uID0gZnVuY3Rpb24ocmVuZGVyLCBtb3VzZSwgY29udGV4dCkge1xuICAgICAgICB2YXIgYyA9IGNvbnRleHQ7XG4gICAgICAgIGMuZmlsbFN0eWxlID0gJ3JnYmEoMjU1LDI1NSwyNTUsMC44KSc7XG4gICAgICAgIGMuZmlsbFRleHQobW91c2UucG9zaXRpb24ueCArICcgICcgKyBtb3VzZS5wb3NpdGlvbi55LCBtb3VzZS5wb3NpdGlvbi54ICsgNSwgbW91c2UucG9zaXRpb24ueSAtIDUpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBEcmF3cyBib2R5IGJvdW5kc1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBib2R5Qm91bmRzXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmluZ0NvbnRleHR9IGNvbnRleHRcbiAgICAgKi9cbiAgICBSZW5kZXIuYm9keUJvdW5kcyA9IGZ1bmN0aW9uKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dCxcbiAgICAgICAgICAgIGVuZ2luZSA9IHJlbmRlci5lbmdpbmUsXG4gICAgICAgICAgICBvcHRpb25zID0gcmVuZGVyLm9wdGlvbnM7XG5cbiAgICAgICAgYy5iZWdpblBhdGgoKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV07XG5cbiAgICAgICAgICAgIGlmIChib2R5LnJlbmRlci52aXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnRzID0gYm9kaWVzW2ldLnBhcnRzO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSBwYXJ0cy5sZW5ndGggPiAxID8gMSA6IDA7IGogPCBwYXJ0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFydCA9IHBhcnRzW2pdO1xuICAgICAgICAgICAgICAgICAgICBjLnJlY3QocGFydC5ib3VuZHMubWluLngsIHBhcnQuYm91bmRzLm1pbi55LCBwYXJ0LmJvdW5kcy5tYXgueCAtIHBhcnQuYm91bmRzLm1pbi54LCBwYXJ0LmJvdW5kcy5tYXgueSAtIHBhcnQuYm91bmRzLm1pbi55KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0aW9ucy53aXJlZnJhbWVzKSB7XG4gICAgICAgICAgICBjLnN0cm9rZVN0eWxlID0gJ3JnYmEoMjU1LDI1NSwyNTUsMC4wOCknO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYy5zdHJva2VTdHlsZSA9ICdyZ2JhKDAsMCwwLDAuMSknO1xuICAgICAgICB9XG5cbiAgICAgICAgYy5saW5lV2lkdGggPSAxO1xuICAgICAgICBjLnN0cm9rZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBEcmF3cyBib2R5IGFuZ2xlIGluZGljYXRvcnMgYW5kIGF4ZXNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgYm9keUF4ZXNcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtib2R5W119IGJvZGllc1xuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5ib2R5QXhlcyA9IGZ1bmN0aW9uKHJlbmRlciwgYm9kaWVzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dCxcbiAgICAgICAgICAgIGVuZ2luZSA9IHJlbmRlci5lbmdpbmUsXG4gICAgICAgICAgICBvcHRpb25zID0gcmVuZGVyLm9wdGlvbnMsXG4gICAgICAgICAgICBwYXJ0LFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGosXG4gICAgICAgICAgICBrO1xuXG4gICAgICAgIGMuYmVnaW5QYXRoKCk7XG5cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV0sXG4gICAgICAgICAgICAgICAgcGFydHMgPSBib2R5LnBhcnRzO1xuXG4gICAgICAgICAgICBpZiAoIWJvZHkucmVuZGVyLnZpc2libGUpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNob3dBeGVzKSB7XG4gICAgICAgICAgICAgICAgLy8gcmVuZGVyIGFsbCBheGVzXG4gICAgICAgICAgICAgICAgZm9yIChqID0gcGFydHMubGVuZ3RoID4gMSA/IDEgOiAwOyBqIDwgcGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgcGFydCA9IHBhcnRzW2pdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGsgPSAwOyBrIDwgcGFydC5heGVzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXhpcyA9IHBhcnQuYXhlc1trXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMubW92ZVRvKHBhcnQucG9zaXRpb24ueCwgcGFydC5wb3NpdGlvbi55KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMubGluZVRvKHBhcnQucG9zaXRpb24ueCArIGF4aXMueCAqIDIwLCBwYXJ0LnBvc2l0aW9uLnkgKyBheGlzLnkgKiAyMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvciAoaiA9IHBhcnRzLmxlbmd0aCA+IDEgPyAxIDogMDsgaiA8IHBhcnRzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnQgPSBwYXJ0c1tqXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChrID0gMDsgayA8IHBhcnQuYXhlcy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVuZGVyIGEgc2luZ2xlIGF4aXMgaW5kaWNhdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBjLm1vdmVUbyhwYXJ0LnBvc2l0aW9uLngsIHBhcnQucG9zaXRpb24ueSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjLmxpbmVUbygocGFydC52ZXJ0aWNlc1swXS54ICsgcGFydC52ZXJ0aWNlc1twYXJ0LnZlcnRpY2VzLmxlbmd0aC0xXS54KSAvIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGFydC52ZXJ0aWNlc1swXS55ICsgcGFydC52ZXJ0aWNlc1twYXJ0LnZlcnRpY2VzLmxlbmd0aC0xXS55KSAvIDIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMud2lyZWZyYW1lcykge1xuICAgICAgICAgICAgYy5zdHJva2VTdHlsZSA9ICdpbmRpYW5yZWQnO1xuICAgICAgICAgICAgYy5saW5lV2lkdGggPSAxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYy5zdHJva2VTdHlsZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCknO1xuICAgICAgICAgICAgYy5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnb3ZlcmxheSc7XG4gICAgICAgICAgICBjLmxpbmVXaWR0aCA9IDI7XG4gICAgICAgIH1cblxuICAgICAgICBjLnN0cm9rZSgpO1xuICAgICAgICBjLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdzb3VyY2Utb3Zlcic7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERyYXdzIGJvZHkgcG9zaXRpb25zXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIGJvZHlQb3NpdGlvbnNcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtib2R5W119IGJvZGllc1xuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5ib2R5UG9zaXRpb25zID0gZnVuY3Rpb24ocmVuZGVyLCBib2RpZXMsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIGMgPSBjb250ZXh0LFxuICAgICAgICAgICAgZW5naW5lID0gcmVuZGVyLmVuZ2luZSxcbiAgICAgICAgICAgIG9wdGlvbnMgPSByZW5kZXIub3B0aW9ucyxcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICBwYXJ0LFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGs7XG5cbiAgICAgICAgYy5iZWdpblBhdGgoKTtcblxuICAgICAgICAvLyByZW5kZXIgY3VycmVudCBwb3NpdGlvbnNcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYm9keSA9IGJvZGllc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFib2R5LnJlbmRlci52aXNpYmxlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAvLyBoYW5kbGUgY29tcG91bmQgcGFydHNcbiAgICAgICAgICAgIGZvciAoayA9IDA7IGsgPCBib2R5LnBhcnRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgcGFydCA9IGJvZHkucGFydHNba107XG4gICAgICAgICAgICAgICAgYy5hcmMocGFydC5wb3NpdGlvbi54LCBwYXJ0LnBvc2l0aW9uLnksIDMsIDAsIDIgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgYy5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvcHRpb25zLndpcmVmcmFtZXMpIHtcbiAgICAgICAgICAgIGMuZmlsbFN0eWxlID0gJ2luZGlhbnJlZCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjLmZpbGxTdHlsZSA9ICdyZ2JhKDAsMCwwLDAuNSknO1xuICAgICAgICB9XG4gICAgICAgIGMuZmlsbCgpO1xuXG4gICAgICAgIGMuYmVnaW5QYXRoKCk7XG5cbiAgICAgICAgLy8gcmVuZGVyIHByZXZpb3VzIHBvc2l0aW9uc1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBib2R5ID0gYm9kaWVzW2ldO1xuICAgICAgICAgICAgaWYgKGJvZHkucmVuZGVyLnZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBjLmFyYyhib2R5LnBvc2l0aW9uUHJldi54LCBib2R5LnBvc2l0aW9uUHJldi55LCAyLCAwLCAyICogTWF0aC5QSSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGMuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjLmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwxNjUsMCwwLjgpJztcbiAgICAgICAgYy5maWxsKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERyYXdzIGJvZHkgdmVsb2NpdHlcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgYm9keVZlbG9jaXR5XG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge1JlbmRlcmluZ0NvbnRleHR9IGNvbnRleHRcbiAgICAgKi9cbiAgICBSZW5kZXIuYm9keVZlbG9jaXR5ID0gZnVuY3Rpb24ocmVuZGVyLCBib2RpZXMsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIGMgPSBjb250ZXh0O1xuXG4gICAgICAgIGMuYmVnaW5QYXRoKCk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gYm9kaWVzW2ldO1xuXG4gICAgICAgICAgICBpZiAoIWJvZHkucmVuZGVyLnZpc2libGUpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGMubW92ZVRvKGJvZHkucG9zaXRpb24ueCwgYm9keS5wb3NpdGlvbi55KTtcbiAgICAgICAgICAgIGMubGluZVRvKGJvZHkucG9zaXRpb24ueCArIChib2R5LnBvc2l0aW9uLnggLSBib2R5LnBvc2l0aW9uUHJldi54KSAqIDIsIGJvZHkucG9zaXRpb24ueSArIChib2R5LnBvc2l0aW9uLnkgLSBib2R5LnBvc2l0aW9uUHJldi55KSAqIDIpO1xuICAgICAgICB9XG5cbiAgICAgICAgYy5saW5lV2lkdGggPSAzO1xuICAgICAgICBjLnN0cm9rZVN0eWxlID0gJ2Nvcm5mbG93ZXJibHVlJztcbiAgICAgICAgYy5zdHJva2UoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRHJhd3MgYm9keSBpZHNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgYm9keUlkc1xuICAgICAqIEBwYXJhbSB7cmVuZGVyfSByZW5kZXJcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHtSZW5kZXJpbmdDb250ZXh0fSBjb250ZXh0XG4gICAgICovXG4gICAgUmVuZGVyLmJvZHlJZHMgPSBmdW5jdGlvbihyZW5kZXIsIGJvZGllcywgY29udGV4dCkge1xuICAgICAgICB2YXIgYyA9IGNvbnRleHQsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgajtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoIWJvZGllc1tpXS5yZW5kZXIudmlzaWJsZSlcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgdmFyIHBhcnRzID0gYm9kaWVzW2ldLnBhcnRzO1xuICAgICAgICAgICAgZm9yIChqID0gcGFydHMubGVuZ3RoID4gMSA/IDEgOiAwOyBqIDwgcGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFydCA9IHBhcnRzW2pdO1xuICAgICAgICAgICAgICAgIGMuZm9udCA9IFwiMTJweCBBcmlhbFwiO1xuICAgICAgICAgICAgICAgIGMuZmlsbFN0eWxlID0gJ3JnYmEoMjU1LDI1NSwyNTUsMC41KSc7XG4gICAgICAgICAgICAgICAgYy5maWxsVGV4dChwYXJ0LmlkLCBwYXJ0LnBvc2l0aW9uLnggKyAxMCwgcGFydC5wb3NpdGlvbi55IC0gMTApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIGNvbGxpc2lvbnNcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtwYWlyW119IHBhaXJzXG4gICAgICogQHBhcmFtIHtSZW5kZXJpbmdDb250ZXh0fSBjb250ZXh0XG4gICAgICovXG4gICAgUmVuZGVyLmNvbGxpc2lvbnMgPSBmdW5jdGlvbihyZW5kZXIsIHBhaXJzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dCxcbiAgICAgICAgICAgIG9wdGlvbnMgPSByZW5kZXIub3B0aW9ucyxcbiAgICAgICAgICAgIHBhaXIsXG4gICAgICAgICAgICBjb2xsaXNpb24sXG4gICAgICAgICAgICBjb3JyZWN0ZWQsXG4gICAgICAgICAgICBib2R5QSxcbiAgICAgICAgICAgIGJvZHlCLFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGo7XG5cbiAgICAgICAgYy5iZWdpblBhdGgoKTtcblxuICAgICAgICAvLyByZW5kZXIgY29sbGlzaW9uIHBvc2l0aW9uc1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFwYWlyLmlzQWN0aXZlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbjtcbiAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBwYWlyLmFjdGl2ZUNvbnRhY3RzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRhY3QgPSBwYWlyLmFjdGl2ZUNvbnRhY3RzW2pdLFxuICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXggPSBjb250YWN0LnZlcnRleDtcbiAgICAgICAgICAgICAgICBjLnJlY3QodmVydGV4LnggLSAxLjUsIHZlcnRleC55IC0gMS41LCAzLjUsIDMuNSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0aW9ucy53aXJlZnJhbWVzKSB7XG4gICAgICAgICAgICBjLmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNyknO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYy5maWxsU3R5bGUgPSAnb3JhbmdlJztcbiAgICAgICAgfVxuICAgICAgICBjLmZpbGwoKTtcblxuICAgICAgICBjLmJlZ2luUGF0aCgpO1xuXG4gICAgICAgIC8vIHJlbmRlciBjb2xsaXNpb24gbm9ybWFsc1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFwYWlyLmlzQWN0aXZlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbjtcblxuICAgICAgICAgICAgaWYgKHBhaXIuYWN0aXZlQ29udGFjdHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHZhciBub3JtYWxQb3NYID0gcGFpci5hY3RpdmVDb250YWN0c1swXS52ZXJ0ZXgueCxcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsUG9zWSA9IHBhaXIuYWN0aXZlQ29udGFjdHNbMF0udmVydGV4Lnk7XG5cbiAgICAgICAgICAgICAgICBpZiAocGFpci5hY3RpdmVDb250YWN0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsUG9zWCA9IChwYWlyLmFjdGl2ZUNvbnRhY3RzWzBdLnZlcnRleC54ICsgcGFpci5hY3RpdmVDb250YWN0c1sxXS52ZXJ0ZXgueCkgLyAyO1xuICAgICAgICAgICAgICAgICAgICBub3JtYWxQb3NZID0gKHBhaXIuYWN0aXZlQ29udGFjdHNbMF0udmVydGV4LnkgKyBwYWlyLmFjdGl2ZUNvbnRhY3RzWzFdLnZlcnRleC55KSAvIDI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGNvbGxpc2lvbi5ib2R5QiA9PT0gY29sbGlzaW9uLnN1cHBvcnRzWzBdLmJvZHkgfHwgY29sbGlzaW9uLmJvZHlBLmlzU3RhdGljID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGMubW92ZVRvKG5vcm1hbFBvc1ggLSBjb2xsaXNpb24ubm9ybWFsLnggKiA4LCBub3JtYWxQb3NZIC0gY29sbGlzaW9uLm5vcm1hbC55ICogOCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYy5tb3ZlVG8obm9ybWFsUG9zWCArIGNvbGxpc2lvbi5ub3JtYWwueCAqIDgsIG5vcm1hbFBvc1kgKyBjb2xsaXNpb24ubm9ybWFsLnkgKiA4KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjLmxpbmVUbyhub3JtYWxQb3NYLCBub3JtYWxQb3NZKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvcHRpb25zLndpcmVmcmFtZXMpIHtcbiAgICAgICAgICAgIGMuc3Ryb2tlU3R5bGUgPSAncmdiYSgyNTUsMTY1LDAsMC43KSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjLnN0cm9rZVN0eWxlID0gJ29yYW5nZSc7XG4gICAgICAgIH1cblxuICAgICAgICBjLmxpbmVXaWR0aCA9IDE7XG4gICAgICAgIGMuc3Ryb2tlKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbWV0aG9kIHNlcGFyYXRpb25zXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7cGFpcltdfSBwYWlyc1xuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5zZXBhcmF0aW9ucyA9IGZ1bmN0aW9uKHJlbmRlciwgcGFpcnMsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIGMgPSBjb250ZXh0LFxuICAgICAgICAgICAgb3B0aW9ucyA9IHJlbmRlci5vcHRpb25zLFxuICAgICAgICAgICAgcGFpcixcbiAgICAgICAgICAgIGNvbGxpc2lvbixcbiAgICAgICAgICAgIGNvcnJlY3RlZCxcbiAgICAgICAgICAgIGJvZHlBLFxuICAgICAgICAgICAgYm9keUIsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgajtcblxuICAgICAgICBjLmJlZ2luUGF0aCgpO1xuXG4gICAgICAgIC8vIHJlbmRlciBzZXBhcmF0aW9uc1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYWlyc1tpXTtcblxuICAgICAgICAgICAgaWYgKCFwYWlyLmlzQWN0aXZlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBjb2xsaXNpb24gPSBwYWlyLmNvbGxpc2lvbjtcbiAgICAgICAgICAgIGJvZHlBID0gY29sbGlzaW9uLmJvZHlBO1xuICAgICAgICAgICAgYm9keUIgPSBjb2xsaXNpb24uYm9keUI7XG5cbiAgICAgICAgICAgIHZhciBrID0gMTtcblxuICAgICAgICAgICAgaWYgKCFib2R5Qi5pc1N0YXRpYyAmJiAhYm9keUEuaXNTdGF0aWMpIGsgPSAwLjU7XG4gICAgICAgICAgICBpZiAoYm9keUIuaXNTdGF0aWMpIGsgPSAwO1xuXG4gICAgICAgICAgICBjLm1vdmVUbyhib2R5Qi5wb3NpdGlvbi54LCBib2R5Qi5wb3NpdGlvbi55KTtcbiAgICAgICAgICAgIGMubGluZVRvKGJvZHlCLnBvc2l0aW9uLnggLSBjb2xsaXNpb24ucGVuZXRyYXRpb24ueCAqIGssIGJvZHlCLnBvc2l0aW9uLnkgLSBjb2xsaXNpb24ucGVuZXRyYXRpb24ueSAqIGspO1xuXG4gICAgICAgICAgICBrID0gMTtcblxuICAgICAgICAgICAgaWYgKCFib2R5Qi5pc1N0YXRpYyAmJiAhYm9keUEuaXNTdGF0aWMpIGsgPSAwLjU7XG4gICAgICAgICAgICBpZiAoYm9keUEuaXNTdGF0aWMpIGsgPSAwO1xuXG4gICAgICAgICAgICBjLm1vdmVUbyhib2R5QS5wb3NpdGlvbi54LCBib2R5QS5wb3NpdGlvbi55KTtcbiAgICAgICAgICAgIGMubGluZVRvKGJvZHlBLnBvc2l0aW9uLnggKyBjb2xsaXNpb24ucGVuZXRyYXRpb24ueCAqIGssIGJvZHlBLnBvc2l0aW9uLnkgKyBjb2xsaXNpb24ucGVuZXRyYXRpb24ueSAqIGspO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMud2lyZWZyYW1lcykge1xuICAgICAgICAgICAgYy5zdHJva2VTdHlsZSA9ICdyZ2JhKDI1NSwxNjUsMCwwLjUpJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGMuc3Ryb2tlU3R5bGUgPSAnb3JhbmdlJztcbiAgICAgICAgfVxuICAgICAgICBjLnN0cm9rZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBEZXNjcmlwdGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQG1ldGhvZCBncmlkXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7Z3JpZH0gZ3JpZFxuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5ncmlkID0gZnVuY3Rpb24ocmVuZGVyLCBncmlkLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBjID0gY29udGV4dCxcbiAgICAgICAgICAgIG9wdGlvbnMgPSByZW5kZXIub3B0aW9ucztcblxuICAgICAgICBpZiAob3B0aW9ucy53aXJlZnJhbWVzKSB7XG4gICAgICAgICAgICBjLnN0cm9rZVN0eWxlID0gJ3JnYmEoMjU1LDE4MCwwLDAuMSknO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYy5zdHJva2VTdHlsZSA9ICdyZ2JhKDI1NSwxODAsMCwwLjUpJztcbiAgICAgICAgfVxuXG4gICAgICAgIGMuYmVnaW5QYXRoKCk7XG5cbiAgICAgICAgdmFyIGJ1Y2tldEtleXMgPSBDb21tb24ua2V5cyhncmlkLmJ1Y2tldHMpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnVja2V0S2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJ1Y2tldElkID0gYnVja2V0S2V5c1tpXTtcblxuICAgICAgICAgICAgaWYgKGdyaWQuYnVja2V0c1tidWNrZXRJZF0ubGVuZ3RoIDwgMilcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgdmFyIHJlZ2lvbiA9IGJ1Y2tldElkLnNwbGl0KC9DfFIvKTtcbiAgICAgICAgICAgIGMucmVjdCgwLjUgKyBwYXJzZUludChyZWdpb25bMV0sIDEwKSAqIGdyaWQuYnVja2V0V2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIDAuNSArIHBhcnNlSW50KHJlZ2lvblsyXSwgMTApICogZ3JpZC5idWNrZXRIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIGdyaWQuYnVja2V0V2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIGdyaWQuYnVja2V0SGVpZ2h0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGMubGluZVdpZHRoID0gMTtcbiAgICAgICAgYy5zdHJva2UoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRGVzY3JpcHRpb25cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBtZXRob2QgaW5zcGVjdG9yXG4gICAgICogQHBhcmFtIHtpbnNwZWN0b3J9IGluc3BlY3RvclxuICAgICAqIEBwYXJhbSB7UmVuZGVyaW5nQ29udGV4dH0gY29udGV4dFxuICAgICAqL1xuICAgIFJlbmRlci5pbnNwZWN0b3IgPSBmdW5jdGlvbihpbnNwZWN0b3IsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIGVuZ2luZSA9IGluc3BlY3Rvci5lbmdpbmUsXG4gICAgICAgICAgICBzZWxlY3RlZCA9IGluc3BlY3Rvci5zZWxlY3RlZCxcbiAgICAgICAgICAgIHJlbmRlciA9IGluc3BlY3Rvci5yZW5kZXIsXG4gICAgICAgICAgICBvcHRpb25zID0gcmVuZGVyLm9wdGlvbnMsXG4gICAgICAgICAgICBib3VuZHM7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuaGFzQm91bmRzKSB7XG4gICAgICAgICAgICB2YXIgYm91bmRzV2lkdGggPSByZW5kZXIuYm91bmRzLm1heC54IC0gcmVuZGVyLmJvdW5kcy5taW4ueCxcbiAgICAgICAgICAgICAgICBib3VuZHNIZWlnaHQgPSByZW5kZXIuYm91bmRzLm1heC55IC0gcmVuZGVyLmJvdW5kcy5taW4ueSxcbiAgICAgICAgICAgICAgICBib3VuZHNTY2FsZVggPSBib3VuZHNXaWR0aCAvIHJlbmRlci5vcHRpb25zLndpZHRoLFxuICAgICAgICAgICAgICAgIGJvdW5kc1NjYWxlWSA9IGJvdW5kc0hlaWdodCAvIHJlbmRlci5vcHRpb25zLmhlaWdodDtcblxuICAgICAgICAgICAgY29udGV4dC5zY2FsZSgxIC8gYm91bmRzU2NhbGVYLCAxIC8gYm91bmRzU2NhbGVZKTtcbiAgICAgICAgICAgIGNvbnRleHQudHJhbnNsYXRlKC1yZW5kZXIuYm91bmRzLm1pbi54LCAtcmVuZGVyLmJvdW5kcy5taW4ueSk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGVjdGVkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgaXRlbSA9IHNlbGVjdGVkW2ldLmRhdGE7XG5cbiAgICAgICAgICAgIGNvbnRleHQudHJhbnNsYXRlKDAuNSwgMC41KTtcbiAgICAgICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gMTtcbiAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSAncmdiYSgyNTUsMTY1LDAsMC45KSc7XG4gICAgICAgICAgICBjb250ZXh0LnNldExpbmVEYXNoKFsxLDJdKTtcblxuICAgICAgICAgICAgc3dpdGNoIChpdGVtLnR5cGUpIHtcblxuICAgICAgICAgICAgY2FzZSAnYm9keSc6XG5cbiAgICAgICAgICAgICAgICAvLyByZW5kZXIgYm9keSBzZWxlY3Rpb25zXG4gICAgICAgICAgICAgICAgYm91bmRzID0gaXRlbS5ib3VuZHM7XG4gICAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnJlY3QoTWF0aC5mbG9vcihib3VuZHMubWluLnggLSAzKSwgTWF0aC5mbG9vcihib3VuZHMubWluLnkgLSAzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5mbG9vcihib3VuZHMubWF4LnggLSBib3VuZHMubWluLnggKyA2KSwgTWF0aC5mbG9vcihib3VuZHMubWF4LnkgLSBib3VuZHMubWluLnkgKyA2KSk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ2NvbnN0cmFpbnQnOlxuXG4gICAgICAgICAgICAgICAgLy8gcmVuZGVyIGNvbnN0cmFpbnQgc2VsZWN0aW9uc1xuICAgICAgICAgICAgICAgIHZhciBwb2ludCA9IGl0ZW0ucG9pbnRBO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLmJvZHlBKVxuICAgICAgICAgICAgICAgICAgICBwb2ludCA9IGl0ZW0ucG9pbnRCO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgY29udGV4dC5hcmMocG9pbnQueCwgcG9pbnQueSwgMTAsIDAsIDIgKiBNYXRoLlBJKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG5cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250ZXh0LnNldExpbmVEYXNoKFtdKTtcbiAgICAgICAgICAgIGNvbnRleHQudHJhbnNsYXRlKC0wLjUsIC0wLjUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVuZGVyIHNlbGVjdGlvbiByZWdpb25cbiAgICAgICAgaWYgKGluc3BlY3Rvci5zZWxlY3RTdGFydCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGV4dC50cmFuc2xhdGUoMC41LCAwLjUpO1xuICAgICAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSAxO1xuICAgICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9ICdyZ2JhKDI1NSwxNjUsMCwwLjYpJztcbiAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gJ3JnYmEoMjU1LDE2NSwwLDAuMSknO1xuICAgICAgICAgICAgYm91bmRzID0gaW5zcGVjdG9yLnNlbGVjdEJvdW5kcztcbiAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICBjb250ZXh0LnJlY3QoTWF0aC5mbG9vcihib3VuZHMubWluLngpLCBNYXRoLmZsb29yKGJvdW5kcy5taW4ueSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5mbG9vcihib3VuZHMubWF4LnggLSBib3VuZHMubWluLngpLCBNYXRoLmZsb29yKGJvdW5kcy5tYXgueSAtIGJvdW5kcy5taW4ueSkpO1xuICAgICAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGwoKTtcbiAgICAgICAgICAgIGNvbnRleHQudHJhbnNsYXRlKC0wLjUsIC0wLjUpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuaGFzQm91bmRzKVxuICAgICAgICAgICAgY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uXG4gICAgICogQG1ldGhvZCBfY3JlYXRlQ2FudmFzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gd2lkdGhcbiAgICAgKiBAcGFyYW0ge30gaGVpZ2h0XG4gICAgICogQHJldHVybiBjYW52YXNcbiAgICAgKi9cbiAgICB2YXIgX2NyZWF0ZUNhbnZhcyA9IGZ1bmN0aW9uKHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgICAgICBjYW52YXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgY2FudmFzLm9uY29udGV4dG1lbnUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGZhbHNlOyB9O1xuICAgICAgICBjYW52YXMub25zZWxlY3RzdGFydCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gZmFsc2U7IH07XG4gICAgICAgIHJldHVybiBjYW52YXM7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHBpeGVsIHJhdGlvIG9mIHRoZSBjYW52YXMuXG4gICAgICogQG1ldGhvZCBfZ2V0UGl4ZWxSYXRpb1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY2FudmFzXG4gICAgICogQHJldHVybiB7TnVtYmVyfSBwaXhlbCByYXRpb1xuICAgICAqL1xuICAgIHZhciBfZ2V0UGl4ZWxSYXRpbyA9IGZ1bmN0aW9uKGNhbnZhcykge1xuICAgICAgICB2YXIgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpLFxuICAgICAgICAgICAgZGV2aWNlUGl4ZWxSYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDEsXG4gICAgICAgICAgICBiYWNraW5nU3RvcmVQaXhlbFJhdGlvID0gY29udGV4dC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8IGNvbnRleHQubW96QmFja2luZ1N0b3JlUGl4ZWxSYXRpb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8fCBjb250ZXh0Lm1zQmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fCBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IGNvbnRleHQuYmFja2luZ1N0b3JlUGl4ZWxSYXRpbyB8fCAxO1xuXG4gICAgICAgIHJldHVybiBkZXZpY2VQaXhlbFJhdGlvIC8gYmFja2luZ1N0b3JlUGl4ZWxSYXRpbztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcmVxdWVzdGVkIHRleHR1cmUgKGFuIEltYWdlKSB2aWEgaXRzIHBhdGhcbiAgICAgKiBAbWV0aG9kIF9nZXRUZXh0dXJlXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGltYWdlUGF0aFxuICAgICAqIEByZXR1cm4ge0ltYWdlfSB0ZXh0dXJlXG4gICAgICovXG4gICAgdmFyIF9nZXRUZXh0dXJlID0gZnVuY3Rpb24ocmVuZGVyLCBpbWFnZVBhdGgpIHtcbiAgICAgICAgdmFyIGltYWdlID0gcmVuZGVyLnRleHR1cmVzW2ltYWdlUGF0aF07XG5cbiAgICAgICAgaWYgKGltYWdlKVxuICAgICAgICAgICAgcmV0dXJuIGltYWdlO1xuXG4gICAgICAgIGltYWdlID0gcmVuZGVyLnRleHR1cmVzW2ltYWdlUGF0aF0gPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgaW1hZ2Uuc3JjID0gaW1hZ2VQYXRoO1xuXG4gICAgICAgIHJldHVybiBpbWFnZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyB0aGUgYmFja2dyb3VuZCB0byB0aGUgY2FudmFzIHVzaW5nIENTUy5cbiAgICAgKiBAbWV0aG9kIGFwcGx5QmFja2dyb3VuZFxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtyZW5kZXJ9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrZ3JvdW5kXG4gICAgICovXG4gICAgdmFyIF9hcHBseUJhY2tncm91bmQgPSBmdW5jdGlvbihyZW5kZXIsIGJhY2tncm91bmQpIHtcbiAgICAgICAgdmFyIGNzc0JhY2tncm91bmQgPSBiYWNrZ3JvdW5kO1xuXG4gICAgICAgIGlmICgvKGpwZ3xnaWZ8cG5nKSQvLnRlc3QoYmFja2dyb3VuZCkpXG4gICAgICAgICAgICBjc3NCYWNrZ3JvdW5kID0gJ3VybCgnICsgYmFja2dyb3VuZCArICcpJztcblxuICAgICAgICByZW5kZXIuY2FudmFzLnN0eWxlLmJhY2tncm91bmQgPSBjc3NCYWNrZ3JvdW5kO1xuICAgICAgICByZW5kZXIuY2FudmFzLnN0eWxlLmJhY2tncm91bmRTaXplID0gXCJjb250YWluXCI7XG4gICAgICAgIHJlbmRlci5jdXJyZW50QmFja2dyb3VuZCA9IGJhY2tncm91bmQ7XG4gICAgfTtcblxuICAgIC8qXG4gICAgKlxuICAgICogIEV2ZW50cyBEb2N1bWVudGF0aW9uXG4gICAgKlxuICAgICovXG5cbiAgICAvKipcbiAgICAqIEZpcmVkIGJlZm9yZSByZW5kZXJpbmdcbiAgICAqXG4gICAgKiBAZXZlbnQgYmVmb3JlUmVuZGVyXG4gICAgKiBAcGFyYW0ge30gZXZlbnQgQW4gZXZlbnQgb2JqZWN0XG4gICAgKiBAcGFyYW0ge251bWJlcn0gZXZlbnQudGltZXN0YW1wIFRoZSBlbmdpbmUudGltaW5nLnRpbWVzdGFtcCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5zb3VyY2UgVGhlIHNvdXJjZSBvYmplY3Qgb2YgdGhlIGV2ZW50XG4gICAgKiBAcGFyYW0ge30gZXZlbnQubmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICAqL1xuXG4gICAgLyoqXG4gICAgKiBGaXJlZCBhZnRlciByZW5kZXJpbmdcbiAgICAqXG4gICAgKiBAZXZlbnQgYWZ0ZXJSZW5kZXJcbiAgICAqIEBwYXJhbSB7fSBldmVudCBBbiBldmVudCBvYmplY3RcbiAgICAqIEBwYXJhbSB7bnVtYmVyfSBldmVudC50aW1lc3RhbXAgVGhlIGVuZ2luZS50aW1pbmcudGltZXN0YW1wIG9mIHRoZSBldmVudFxuICAgICogQHBhcmFtIHt9IGV2ZW50LnNvdXJjZSBUaGUgc291cmNlIG9iamVjdCBvZiB0aGUgZXZlbnRcbiAgICAqIEBwYXJhbSB7fSBldmVudC5uYW1lIFRoZSBuYW1lIG9mIHRoZSBldmVudFxuICAgICovXG5cbiAgICAvKlxuICAgICpcbiAgICAqICBQcm9wZXJ0aWVzIERvY3VtZW50YXRpb25cbiAgICAqXG4gICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYmFjay1yZWZlcmVuY2UgdG8gdGhlIGBNYXR0ZXIuUmVuZGVyYCBtb2R1bGUuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgY29udHJvbGxlclxuICAgICAqIEB0eXBlIHJlbmRlclxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSByZWZlcmVuY2UgdG8gdGhlIGBNYXR0ZXIuRW5naW5lYCBpbnN0YW5jZSB0byBiZSB1c2VkLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IGVuZ2luZVxuICAgICAqIEB0eXBlIGVuZ2luZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQSByZWZlcmVuY2UgdG8gdGhlIGVsZW1lbnQgd2hlcmUgdGhlIGNhbnZhcyBpcyB0byBiZSBpbnNlcnRlZCAoaWYgYHJlbmRlci5jYW52YXNgIGhhcyBub3QgYmVlbiBzcGVjaWZpZWQpXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZWxlbWVudFxuICAgICAqIEB0eXBlIEhUTUxFbGVtZW50XG4gICAgICogQGRlZmF1bHQgbnVsbFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGhlIGNhbnZhcyBlbGVtZW50IHRvIHJlbmRlciB0by4gSWYgbm90IHNwZWNpZmllZCwgb25lIHdpbGwgYmUgY3JlYXRlZCBpZiBgcmVuZGVyLmVsZW1lbnRgIGhhcyBiZWVuIHNwZWNpZmllZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBjYW52YXNcbiAgICAgKiBAdHlwZSBIVE1MQ2FudmFzRWxlbWVudFxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgb2YgdGhlIHJlbmRlcmVyLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IG9wdGlvbnNcbiAgICAgKiBAdHlwZSB7fVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGhlIHRhcmdldCB3aWR0aCBpbiBwaXhlbHMgb2YgdGhlIGByZW5kZXIuY2FudmFzYCB0byBiZSBjcmVhdGVkLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IG9wdGlvbnMud2lkdGhcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCA4MDBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSB0YXJnZXQgaGVpZ2h0IGluIHBpeGVscyBvZiB0aGUgYHJlbmRlci5jYW52YXNgIHRvIGJlIGNyZWF0ZWQuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgb3B0aW9ucy5oZWlnaHRcbiAgICAgKiBAdHlwZSBudW1iZXJcbiAgICAgKiBAZGVmYXVsdCA2MDBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgZmxhZyB0aGF0IHNwZWNpZmllcyBpZiBgcmVuZGVyLmJvdW5kc2Agc2hvdWxkIGJlIHVzZWQgd2hlbiByZW5kZXJpbmcuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgb3B0aW9ucy5oYXNCb3VuZHNcbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEEgYEJvdW5kc2Agb2JqZWN0IHRoYXQgc3BlY2lmaWVzIHRoZSBkcmF3aW5nIHZpZXcgcmVnaW9uLlxuICAgICAqIFJlbmRlcmluZyB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgdHJhbnNmb3JtZWQgYW5kIHNjYWxlZCB0byBmaXQgd2l0aGluIHRoZSBjYW52YXMgc2l6ZSAoYHJlbmRlci5vcHRpb25zLndpZHRoYCBhbmQgYHJlbmRlci5vcHRpb25zLmhlaWdodGApLlxuICAgICAqIFRoaXMgYWxsb3dzIGZvciBjcmVhdGluZyB2aWV3cyB0aGF0IGNhbiBwYW4gb3Igem9vbSBhcm91bmQgdGhlIHNjZW5lLlxuICAgICAqIFlvdSBtdXN0IGFsc28gc2V0IGByZW5kZXIub3B0aW9ucy5oYXNCb3VuZHNgIHRvIGB0cnVlYCB0byBlbmFibGUgYm91bmRlZCByZW5kZXJpbmcuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgYm91bmRzXG4gICAgICogQHR5cGUgYm91bmRzXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgMmQgcmVuZGVyaW5nIGNvbnRleHQgZnJvbSB0aGUgYHJlbmRlci5jYW52YXNgIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgY29udGV4dFxuICAgICAqIEB0eXBlIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNwcml0ZSB0ZXh0dXJlIGNhY2hlLlxuICAgICAqXG4gICAgICogQHByb3BlcnR5IHRleHR1cmVzXG4gICAgICogQHR5cGUge31cbiAgICAgKi9cblxufSkoKTtcblxufSx7XCIuLi9ib2R5L0NvbXBvc2l0ZVwiOjIsXCIuLi9jb2xsaXNpb24vR3JpZFwiOjYsXCIuLi9jb3JlL0NvbW1vblwiOjE0LFwiLi4vY29yZS9FdmVudHNcIjoxNixcIi4uL2NvcmUvTW91c2VcIjoxOSxcIi4uL2dlb21ldHJ5L0JvdW5kc1wiOjI2LFwiLi4vZ2VvbWV0cnkvVmVjdG9yXCI6Mjh9XSwzMjpbZnVuY3Rpb24oX2RlcmVxXyxtb2R1bGUsZXhwb3J0cyl7XG4vKipcbiogVGhlIGBNYXR0ZXIuUmVuZGVyUGl4aWAgbW9kdWxlIGlzIGFuIGV4YW1wbGUgcmVuZGVyZXIgdXNpbmcgcGl4aS5qcy5cbiogU2VlIGFsc28gYE1hdHRlci5SZW5kZXJgIGZvciBhIGNhbnZhcyBiYXNlZCByZW5kZXJlci5cbipcbiogQGNsYXNzIFJlbmRlclBpeGlcbiogQGRlcHJlY2F0ZWQgdGhlIE1hdHRlci5SZW5kZXJQaXhpIG1vZHVsZSB3aWxsIHNvb24gYmUgcmVtb3ZlZCBmcm9tIHRoZSBNYXR0ZXIuanMgY29yZS5cbiogSXQgd2lsbCBsaWtlbHkgYmUgbW92ZWQgdG8gaXRzIG93biByZXBvc2l0b3J5IChidXQgbWFpbnRlbmFuY2Ugd2lsbCBiZSBsaW1pdGVkKS5cbiovXG5cbnZhciBSZW5kZXJQaXhpID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gUmVuZGVyUGl4aTtcblxudmFyIEJvdW5kcyA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L0JvdW5kcycpO1xudmFyIENvbXBvc2l0ZSA9IF9kZXJlcV8oJy4uL2JvZHkvQ29tcG9zaXRlJyk7XG52YXIgQ29tbW9uID0gX2RlcmVxXygnLi4vY29yZS9Db21tb24nKTtcbnZhciBFdmVudHMgPSBfZGVyZXFfKCcuLi9jb3JlL0V2ZW50cycpO1xudmFyIFZlY3RvciA9IF9kZXJlcV8oJy4uL2dlb21ldHJ5L1ZlY3RvcicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgX3JlcXVlc3RBbmltYXRpb25GcmFtZSxcbiAgICAgICAgX2NhbmNlbEFuaW1hdGlvbkZyYW1lO1xuXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIF9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfHwgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHx8IGZ1bmN0aW9uKGNhbGxiYWNrKXsgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IGNhbGxiYWNrKENvbW1vbi5ub3coKSk7IH0sIDEwMDAgLyA2MCk7IH07XG4gICBcbiAgICAgICAgX2NhbmNlbEFuaW1hdGlvbkZyYW1lID0gd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5tb3pDYW5jZWxBbmltYXRpb25GcmFtZSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfHwgd2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5tc0NhbmNlbEFuaW1hdGlvbkZyYW1lO1xuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IFBpeGkuanMgV2ViR0wgcmVuZGVyZXJcbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAgICogQHJldHVybiB7UmVuZGVyUGl4aX0gQSBuZXcgcmVuZGVyZXJcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIFJlbmRlclBpeGkuY3JlYXRlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICBDb21tb24ud2FybignUmVuZGVyUGl4aS5jcmVhdGU6IE1hdHRlci5SZW5kZXJQaXhpIGlzIGRlcHJlY2F0ZWQgKHNlZSBkb2NzKScpO1xuXG4gICAgICAgIHZhciBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IFJlbmRlclBpeGksXG4gICAgICAgICAgICBlbmdpbmU6IG51bGwsXG4gICAgICAgICAgICBlbGVtZW50OiBudWxsLFxuICAgICAgICAgICAgZnJhbWVSZXF1ZXN0SWQ6IG51bGwsXG4gICAgICAgICAgICBjYW52YXM6IG51bGwsXG4gICAgICAgICAgICByZW5kZXJlcjogbnVsbCxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogbnVsbCxcbiAgICAgICAgICAgIHNwcml0ZUNvbnRhaW5lcjogbnVsbCxcbiAgICAgICAgICAgIHBpeGlPcHRpb25zOiBudWxsLFxuICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4MDAsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA2MDAsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyNmYWZhZmEnLFxuICAgICAgICAgICAgICAgIHdpcmVmcmFtZUJhY2tncm91bmQ6ICcjMjIyJyxcbiAgICAgICAgICAgICAgICBoYXNCb3VuZHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgd2lyZWZyYW1lczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaG93U2xlZXBpbmc6IHRydWUsXG4gICAgICAgICAgICAgICAgc2hvd0RlYnVnOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93QnJvYWRwaGFzZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd0JvdW5kczogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd1ZlbG9jaXR5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzaG93Q29sbGlzaW9uczogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd0F4ZXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dQb3NpdGlvbnM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNob3dBbmdsZUluZGljYXRvcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd0lkczogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2hvd1NoYWRvd3M6IGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIHJlbmRlciA9IENvbW1vbi5leHRlbmQoZGVmYXVsdHMsIG9wdGlvbnMpLFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQgPSAhcmVuZGVyLm9wdGlvbnMud2lyZWZyYW1lcyAmJiByZW5kZXIub3B0aW9ucy5iYWNrZ3JvdW5kID09PSAndHJhbnNwYXJlbnQnO1xuXG4gICAgICAgIC8vIGluaXQgcGl4aVxuICAgICAgICByZW5kZXIucGl4aU9wdGlvbnMgPSByZW5kZXIucGl4aU9wdGlvbnMgfHwge1xuICAgICAgICAgICAgdmlldzogcmVuZGVyLmNhbnZhcyxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudCxcbiAgICAgICAgICAgIGFudGlhbGlhczogdHJ1ZSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogb3B0aW9ucy5iYWNrZ3JvdW5kXG4gICAgICAgIH07XG5cbiAgICAgICAgcmVuZGVyLm1vdXNlID0gb3B0aW9ucy5tb3VzZTtcbiAgICAgICAgcmVuZGVyLmVuZ2luZSA9IG9wdGlvbnMuZW5naW5lO1xuICAgICAgICByZW5kZXIucmVuZGVyZXIgPSByZW5kZXIucmVuZGVyZXIgfHwgbmV3IFBJWEkuV2ViR0xSZW5kZXJlcihyZW5kZXIub3B0aW9ucy53aWR0aCwgcmVuZGVyLm9wdGlvbnMuaGVpZ2h0LCByZW5kZXIucGl4aU9wdGlvbnMpO1xuICAgICAgICByZW5kZXIuY29udGFpbmVyID0gcmVuZGVyLmNvbnRhaW5lciB8fCBuZXcgUElYSS5Db250YWluZXIoKTtcbiAgICAgICAgcmVuZGVyLnNwcml0ZUNvbnRhaW5lciA9IHJlbmRlci5zcHJpdGVDb250YWluZXIgfHwgbmV3IFBJWEkuQ29udGFpbmVyKCk7XG4gICAgICAgIHJlbmRlci5jYW52YXMgPSByZW5kZXIuY2FudmFzIHx8IHJlbmRlci5yZW5kZXJlci52aWV3O1xuICAgICAgICByZW5kZXIuYm91bmRzID0gcmVuZGVyLmJvdW5kcyB8fCB7IFxuICAgICAgICAgICAgbWluOiB7XG4gICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICB9LCBcbiAgICAgICAgICAgIG1heDogeyBcbiAgICAgICAgICAgICAgICB4OiByZW5kZXIub3B0aW9ucy53aWR0aCxcbiAgICAgICAgICAgICAgICB5OiByZW5kZXIub3B0aW9ucy5oZWlnaHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgRXZlbnRzLm9uKHJlbmRlci5lbmdpbmUsICdiZWZvcmVVcGRhdGUnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIFJlbmRlclBpeGkuY2xlYXIocmVuZGVyKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gY2FjaGVzXG4gICAgICAgIHJlbmRlci50ZXh0dXJlcyA9IHt9O1xuICAgICAgICByZW5kZXIuc3ByaXRlcyA9IHt9O1xuICAgICAgICByZW5kZXIucHJpbWl0aXZlcyA9IHt9O1xuXG4gICAgICAgIC8vIHVzZSBhIHNwcml0ZSBiYXRjaCBmb3IgcGVyZm9ybWFuY2VcbiAgICAgICAgcmVuZGVyLmNvbnRhaW5lci5hZGRDaGlsZChyZW5kZXIuc3ByaXRlQ29udGFpbmVyKTtcblxuICAgICAgICAvLyBpbnNlcnQgY2FudmFzXG4gICAgICAgIGlmIChDb21tb24uaXNFbGVtZW50KHJlbmRlci5lbGVtZW50KSkge1xuICAgICAgICAgICAgcmVuZGVyLmVsZW1lbnQuYXBwZW5kQ2hpbGQocmVuZGVyLmNhbnZhcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBDb21tb24ud2FybignTm8gXCJyZW5kZXIuZWxlbWVudFwiIHBhc3NlZCwgXCJyZW5kZXIuY2FudmFzXCIgd2FzIG5vdCBpbnNlcnRlZCBpbnRvIGRvY3VtZW50LicpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcHJldmVudCBtZW51cyBvbiBjYW52YXNcbiAgICAgICAgcmVuZGVyLmNhbnZhcy5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oKSB7IHJldHVybiBmYWxzZTsgfTtcbiAgICAgICAgcmVuZGVyLmNhbnZhcy5vbnNlbGVjdHN0YXJ0ID0gZnVuY3Rpb24oKSB7IHJldHVybiBmYWxzZTsgfTtcblxuICAgICAgICByZXR1cm4gcmVuZGVyO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDb250aW51b3VzbHkgdXBkYXRlcyB0aGUgcmVuZGVyIGNhbnZhcyBvbiB0aGUgYHJlcXVlc3RBbmltYXRpb25GcmFtZWAgZXZlbnQuXG4gICAgICogQG1ldGhvZCBydW5cbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBSZW5kZXJQaXhpLnJ1biA9IGZ1bmN0aW9uKHJlbmRlcikge1xuICAgICAgICAoZnVuY3Rpb24gbG9vcCh0aW1lKXtcbiAgICAgICAgICAgIHJlbmRlci5mcmFtZVJlcXVlc3RJZCA9IF9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XG4gICAgICAgICAgICBSZW5kZXJQaXhpLndvcmxkKHJlbmRlcik7XG4gICAgICAgIH0pKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEVuZHMgZXhlY3V0aW9uIG9mIGBSZW5kZXIucnVuYCBvbiB0aGUgZ2l2ZW4gYHJlbmRlcmAsIGJ5IGNhbmNlbGluZyB0aGUgYW5pbWF0aW9uIGZyYW1lIHJlcXVlc3QgZXZlbnQgbG9vcC5cbiAgICAgKiBAbWV0aG9kIHN0b3BcbiAgICAgKiBAcGFyYW0ge3JlbmRlcn0gcmVuZGVyXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBSZW5kZXJQaXhpLnN0b3AgPSBmdW5jdGlvbihyZW5kZXIpIHtcbiAgICAgICAgX2NhbmNlbEFuaW1hdGlvbkZyYW1lKHJlbmRlci5mcmFtZVJlcXVlc3RJZCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsZWFycyB0aGUgc2NlbmUgZ3JhcGhcbiAgICAgKiBAbWV0aG9kIGNsZWFyXG4gICAgICogQHBhcmFtIHtSZW5kZXJQaXhpfSByZW5kZXJcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIFJlbmRlclBpeGkuY2xlYXIgPSBmdW5jdGlvbihyZW5kZXIpIHtcbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IHJlbmRlci5jb250YWluZXIsXG4gICAgICAgICAgICBzcHJpdGVDb250YWluZXIgPSByZW5kZXIuc3ByaXRlQ29udGFpbmVyO1xuXG4gICAgICAgIC8vIGNsZWFyIHN0YWdlIGNvbnRhaW5lclxuICAgICAgICB3aGlsZSAoY29udGFpbmVyLmNoaWxkcmVuWzBdKSB7IFxuICAgICAgICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5jaGlsZHJlblswXSk7IFxuICAgICAgICB9XG5cbiAgICAgICAgLy8gY2xlYXIgc3ByaXRlIGJhdGNoXG4gICAgICAgIHdoaWxlIChzcHJpdGVDb250YWluZXIuY2hpbGRyZW5bMF0pIHsgXG4gICAgICAgICAgICBzcHJpdGVDb250YWluZXIucmVtb3ZlQ2hpbGQoc3ByaXRlQ29udGFpbmVyLmNoaWxkcmVuWzBdKTsgXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYmdTcHJpdGUgPSByZW5kZXIuc3ByaXRlc1snYmctMCddO1xuXG4gICAgICAgIC8vIGNsZWFyIGNhY2hlc1xuICAgICAgICByZW5kZXIudGV4dHVyZXMgPSB7fTtcbiAgICAgICAgcmVuZGVyLnNwcml0ZXMgPSB7fTtcbiAgICAgICAgcmVuZGVyLnByaW1pdGl2ZXMgPSB7fTtcblxuICAgICAgICAvLyBzZXQgYmFja2dyb3VuZCBzcHJpdGVcbiAgICAgICAgcmVuZGVyLnNwcml0ZXNbJ2JnLTAnXSA9IGJnU3ByaXRlO1xuICAgICAgICBpZiAoYmdTcHJpdGUpXG4gICAgICAgICAgICBjb250YWluZXIuYWRkQ2hpbGRBdChiZ1Nwcml0ZSwgMCk7XG5cbiAgICAgICAgLy8gYWRkIHNwcml0ZSBiYXRjaCBiYWNrIGludG8gY29udGFpbmVyXG4gICAgICAgIHJlbmRlci5jb250YWluZXIuYWRkQ2hpbGQocmVuZGVyLnNwcml0ZUNvbnRhaW5lcik7XG5cbiAgICAgICAgLy8gcmVzZXQgYmFja2dyb3VuZCBzdGF0ZVxuICAgICAgICByZW5kZXIuY3VycmVudEJhY2tncm91bmQgPSBudWxsO1xuXG4gICAgICAgIC8vIHJlc2V0IGJvdW5kcyB0cmFuc2Zvcm1zXG4gICAgICAgIGNvbnRhaW5lci5zY2FsZS5zZXQoMSwgMSk7XG4gICAgICAgIGNvbnRhaW5lci5wb3NpdGlvbi5zZXQoMCwgMCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGJhY2tncm91bmQgb2YgdGhlIGNhbnZhcyBcbiAgICAgKiBAbWV0aG9kIHNldEJhY2tncm91bmRcbiAgICAgKiBAcGFyYW0ge1JlbmRlclBpeGl9IHJlbmRlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrZ3JvdW5kXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBSZW5kZXJQaXhpLnNldEJhY2tncm91bmQgPSBmdW5jdGlvbihyZW5kZXIsIGJhY2tncm91bmQpIHtcbiAgICAgICAgaWYgKHJlbmRlci5jdXJyZW50QmFja2dyb3VuZCAhPT0gYmFja2dyb3VuZCkge1xuICAgICAgICAgICAgdmFyIGlzQ29sb3IgPSBiYWNrZ3JvdW5kLmluZGV4T2YgJiYgYmFja2dyb3VuZC5pbmRleE9mKCcjJykgIT09IC0xLFxuICAgICAgICAgICAgICAgIGJnU3ByaXRlID0gcmVuZGVyLnNwcml0ZXNbJ2JnLTAnXTtcblxuICAgICAgICAgICAgaWYgKGlzQ29sb3IpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiBzb2xpZCBiYWNrZ3JvdW5kIGNvbG9yXG4gICAgICAgICAgICAgICAgdmFyIGNvbG9yID0gQ29tbW9uLmNvbG9yVG9OdW1iZXIoYmFja2dyb3VuZCk7XG4gICAgICAgICAgICAgICAgcmVuZGVyLnJlbmRlcmVyLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xuXG4gICAgICAgICAgICAgICAgLy8gcmVtb3ZlIGJhY2tncm91bmQgc3ByaXRlIGlmIGV4aXN0aW5nXG4gICAgICAgICAgICAgICAgaWYgKGJnU3ByaXRlKVxuICAgICAgICAgICAgICAgICAgICByZW5kZXIuY29udGFpbmVyLnJlbW92ZUNoaWxkKGJnU3ByaXRlKTsgXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGluaXRpYWxpc2UgYmFja2dyb3VuZCBzcHJpdGUgaWYgbmVlZGVkXG4gICAgICAgICAgICAgICAgaWYgKCFiZ1Nwcml0ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGV4dHVyZSA9IF9nZXRUZXh0dXJlKHJlbmRlciwgYmFja2dyb3VuZCk7XG5cbiAgICAgICAgICAgICAgICAgICAgYmdTcHJpdGUgPSByZW5kZXIuc3ByaXRlc1snYmctMCddID0gbmV3IFBJWEkuU3ByaXRlKHRleHR1cmUpO1xuICAgICAgICAgICAgICAgICAgICBiZ1Nwcml0ZS5wb3NpdGlvbi54ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgYmdTcHJpdGUucG9zaXRpb24ueSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHJlbmRlci5jb250YWluZXIuYWRkQ2hpbGRBdChiZ1Nwcml0ZSwgMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZW5kZXIuY3VycmVudEJhY2tncm91bmQgPSBiYWNrZ3JvdW5kO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc2NyaXB0aW9uXG4gICAgICogQG1ldGhvZCB3b3JsZFxuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIFJlbmRlclBpeGkud29ybGQgPSBmdW5jdGlvbihyZW5kZXIpIHtcbiAgICAgICAgdmFyIGVuZ2luZSA9IHJlbmRlci5lbmdpbmUsXG4gICAgICAgICAgICB3b3JsZCA9IGVuZ2luZS53b3JsZCxcbiAgICAgICAgICAgIHJlbmRlcmVyID0gcmVuZGVyLnJlbmRlcmVyLFxuICAgICAgICAgICAgY29udGFpbmVyID0gcmVuZGVyLmNvbnRhaW5lcixcbiAgICAgICAgICAgIG9wdGlvbnMgPSByZW5kZXIub3B0aW9ucyxcbiAgICAgICAgICAgIGJvZGllcyA9IENvbXBvc2l0ZS5hbGxCb2RpZXMod29ybGQpLFxuICAgICAgICAgICAgYWxsQ29uc3RyYWludHMgPSBDb21wb3NpdGUuYWxsQ29uc3RyYWludHMod29ybGQpLFxuICAgICAgICAgICAgY29uc3RyYWludHMgPSBbXSxcbiAgICAgICAgICAgIGk7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMud2lyZWZyYW1lcykge1xuICAgICAgICAgICAgUmVuZGVyUGl4aS5zZXRCYWNrZ3JvdW5kKHJlbmRlciwgb3B0aW9ucy53aXJlZnJhbWVCYWNrZ3JvdW5kKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFJlbmRlclBpeGkuc2V0QmFja2dyb3VuZChyZW5kZXIsIG9wdGlvbnMuYmFja2dyb3VuZCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBoYW5kbGUgYm91bmRzXG4gICAgICAgIHZhciBib3VuZHNXaWR0aCA9IHJlbmRlci5ib3VuZHMubWF4LnggLSByZW5kZXIuYm91bmRzLm1pbi54LFxuICAgICAgICAgICAgYm91bmRzSGVpZ2h0ID0gcmVuZGVyLmJvdW5kcy5tYXgueSAtIHJlbmRlci5ib3VuZHMubWluLnksXG4gICAgICAgICAgICBib3VuZHNTY2FsZVggPSBib3VuZHNXaWR0aCAvIHJlbmRlci5vcHRpb25zLndpZHRoLFxuICAgICAgICAgICAgYm91bmRzU2NhbGVZID0gYm91bmRzSGVpZ2h0IC8gcmVuZGVyLm9wdGlvbnMuaGVpZ2h0O1xuXG4gICAgICAgIGlmIChvcHRpb25zLmhhc0JvdW5kcykge1xuICAgICAgICAgICAgLy8gSGlkZSBib2RpZXMgdGhhdCBhcmUgbm90IGluIHZpZXdcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgYm9keSA9IGJvZGllc1tpXTtcbiAgICAgICAgICAgICAgICBib2R5LnJlbmRlci5zcHJpdGUudmlzaWJsZSA9IEJvdW5kcy5vdmVybGFwcyhib2R5LmJvdW5kcywgcmVuZGVyLmJvdW5kcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGZpbHRlciBvdXQgY29uc3RyYWludHMgdGhhdCBhcmUgbm90IGluIHZpZXdcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBhbGxDb25zdHJhaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBjb25zdHJhaW50ID0gYWxsQ29uc3RyYWludHNbaV0sXG4gICAgICAgICAgICAgICAgICAgIGJvZHlBID0gY29uc3RyYWludC5ib2R5QSxcbiAgICAgICAgICAgICAgICAgICAgYm9keUIgPSBjb25zdHJhaW50LmJvZHlCLFxuICAgICAgICAgICAgICAgICAgICBwb2ludEFXb3JsZCA9IGNvbnN0cmFpbnQucG9pbnRBLFxuICAgICAgICAgICAgICAgICAgICBwb2ludEJXb3JsZCA9IGNvbnN0cmFpbnQucG9pbnRCO1xuXG4gICAgICAgICAgICAgICAgaWYgKGJvZHlBKSBwb2ludEFXb3JsZCA9IFZlY3Rvci5hZGQoYm9keUEucG9zaXRpb24sIGNvbnN0cmFpbnQucG9pbnRBKTtcbiAgICAgICAgICAgICAgICBpZiAoYm9keUIpIHBvaW50QldvcmxkID0gVmVjdG9yLmFkZChib2R5Qi5wb3NpdGlvbiwgY29uc3RyYWludC5wb2ludEIpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFwb2ludEFXb3JsZCB8fCAhcG9pbnRCV29ybGQpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAgICAgaWYgKEJvdW5kcy5jb250YWlucyhyZW5kZXIuYm91bmRzLCBwb2ludEFXb3JsZCkgfHwgQm91bmRzLmNvbnRhaW5zKHJlbmRlci5ib3VuZHMsIHBvaW50QldvcmxkKSlcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWludHMucHVzaChjb25zdHJhaW50KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gdHJhbnNmb3JtIHRoZSB2aWV3XG4gICAgICAgICAgICBjb250YWluZXIuc2NhbGUuc2V0KDEgLyBib3VuZHNTY2FsZVgsIDEgLyBib3VuZHNTY2FsZVkpO1xuICAgICAgICAgICAgY29udGFpbmVyLnBvc2l0aW9uLnNldCgtcmVuZGVyLmJvdW5kcy5taW4ueCAqICgxIC8gYm91bmRzU2NhbGVYKSwgLXJlbmRlci5ib3VuZHMubWluLnkgKiAoMSAvIGJvdW5kc1NjYWxlWSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3RyYWludHMgPSBhbGxDb25zdHJhaW50cztcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBSZW5kZXJQaXhpLmJvZHkocmVuZGVyLCBib2RpZXNbaV0pO1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb25zdHJhaW50cy5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIFJlbmRlclBpeGkuY29uc3RyYWludChyZW5kZXIsIGNvbnN0cmFpbnRzW2ldKTtcblxuICAgICAgICByZW5kZXJlci5yZW5kZXIoY29udGFpbmVyKTtcbiAgICB9O1xuXG5cbiAgICAvKipcbiAgICAgKiBEZXNjcmlwdGlvblxuICAgICAqIEBtZXRob2QgY29uc3RyYWludFxuICAgICAqIEBwYXJhbSB7ZW5naW5lfSBlbmdpbmVcbiAgICAgKiBAcGFyYW0ge2NvbnN0cmFpbnR9IGNvbnN0cmFpbnRcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIFJlbmRlclBpeGkuY29uc3RyYWludCA9IGZ1bmN0aW9uKHJlbmRlciwgY29uc3RyYWludCkge1xuICAgICAgICB2YXIgZW5naW5lID0gcmVuZGVyLmVuZ2luZSxcbiAgICAgICAgICAgIGJvZHlBID0gY29uc3RyYWludC5ib2R5QSxcbiAgICAgICAgICAgIGJvZHlCID0gY29uc3RyYWludC5ib2R5QixcbiAgICAgICAgICAgIHBvaW50QSA9IGNvbnN0cmFpbnQucG9pbnRBLFxuICAgICAgICAgICAgcG9pbnRCID0gY29uc3RyYWludC5wb2ludEIsXG4gICAgICAgICAgICBjb250YWluZXIgPSByZW5kZXIuY29udGFpbmVyLFxuICAgICAgICAgICAgY29uc3RyYWludFJlbmRlciA9IGNvbnN0cmFpbnQucmVuZGVyLFxuICAgICAgICAgICAgcHJpbWl0aXZlSWQgPSAnYy0nICsgY29uc3RyYWludC5pZCxcbiAgICAgICAgICAgIHByaW1pdGl2ZSA9IHJlbmRlci5wcmltaXRpdmVzW3ByaW1pdGl2ZUlkXTtcblxuICAgICAgICAvLyBpbml0aWFsaXNlIGNvbnN0cmFpbnQgcHJpbWl0aXZlIGlmIG5vdCBleGlzdGluZ1xuICAgICAgICBpZiAoIXByaW1pdGl2ZSlcbiAgICAgICAgICAgIHByaW1pdGl2ZSA9IHJlbmRlci5wcmltaXRpdmVzW3ByaW1pdGl2ZUlkXSA9IG5ldyBQSVhJLkdyYXBoaWNzKCk7XG5cbiAgICAgICAgLy8gZG9uJ3QgcmVuZGVyIGlmIGNvbnN0cmFpbnQgZG9lcyBub3QgaGF2ZSB0d28gZW5kIHBvaW50c1xuICAgICAgICBpZiAoIWNvbnN0cmFpbnRSZW5kZXIudmlzaWJsZSB8fCAhY29uc3RyYWludC5wb2ludEEgfHwgIWNvbnN0cmFpbnQucG9pbnRCKSB7XG4gICAgICAgICAgICBwcmltaXRpdmUuY2xlYXIoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFkZCB0byBzY2VuZSBncmFwaCBpZiBub3QgYWxyZWFkeSB0aGVyZVxuICAgICAgICBpZiAoQ29tbW9uLmluZGV4T2YoY29udGFpbmVyLmNoaWxkcmVuLCBwcmltaXRpdmUpID09PSAtMSlcbiAgICAgICAgICAgIGNvbnRhaW5lci5hZGRDaGlsZChwcmltaXRpdmUpO1xuXG4gICAgICAgIC8vIHJlbmRlciB0aGUgY29uc3RyYWludCBvbiBldmVyeSB1cGRhdGUsIHNpbmNlIHRoZXkgY2FuIGNoYW5nZSBkeW5hbWljYWxseVxuICAgICAgICBwcmltaXRpdmUuY2xlYXIoKTtcbiAgICAgICAgcHJpbWl0aXZlLmJlZ2luRmlsbCgwLCAwKTtcbiAgICAgICAgcHJpbWl0aXZlLmxpbmVTdHlsZShjb25zdHJhaW50UmVuZGVyLmxpbmVXaWR0aCwgQ29tbW9uLmNvbG9yVG9OdW1iZXIoY29uc3RyYWludFJlbmRlci5zdHJva2VTdHlsZSksIDEpO1xuICAgICAgICBcbiAgICAgICAgaWYgKGJvZHlBKSB7XG4gICAgICAgICAgICBwcmltaXRpdmUubW92ZVRvKGJvZHlBLnBvc2l0aW9uLnggKyBwb2ludEEueCwgYm9keUEucG9zaXRpb24ueSArIHBvaW50QS55KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByaW1pdGl2ZS5tb3ZlVG8ocG9pbnRBLngsIHBvaW50QS55KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChib2R5Qikge1xuICAgICAgICAgICAgcHJpbWl0aXZlLmxpbmVUbyhib2R5Qi5wb3NpdGlvbi54ICsgcG9pbnRCLngsIGJvZHlCLnBvc2l0aW9uLnkgKyBwb2ludEIueSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcmltaXRpdmUubGluZVRvKHBvaW50Qi54LCBwb2ludEIueSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcmltaXRpdmUuZW5kRmlsbCgpO1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogRGVzY3JpcHRpb25cbiAgICAgKiBAbWV0aG9kIGJvZHlcbiAgICAgKiBAcGFyYW0ge2VuZ2luZX0gZW5naW5lXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICBSZW5kZXJQaXhpLmJvZHkgPSBmdW5jdGlvbihyZW5kZXIsIGJvZHkpIHtcbiAgICAgICAgdmFyIGVuZ2luZSA9IHJlbmRlci5lbmdpbmUsXG4gICAgICAgICAgICBib2R5UmVuZGVyID0gYm9keS5yZW5kZXI7XG5cbiAgICAgICAgaWYgKCFib2R5UmVuZGVyLnZpc2libGUpXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgaWYgKGJvZHlSZW5kZXIuc3ByaXRlICYmIGJvZHlSZW5kZXIuc3ByaXRlLnRleHR1cmUpIHtcbiAgICAgICAgICAgIHZhciBzcHJpdGVJZCA9ICdiLScgKyBib2R5LmlkLFxuICAgICAgICAgICAgICAgIHNwcml0ZSA9IHJlbmRlci5zcHJpdGVzW3Nwcml0ZUlkXSxcbiAgICAgICAgICAgICAgICBzcHJpdGVDb250YWluZXIgPSByZW5kZXIuc3ByaXRlQ29udGFpbmVyO1xuXG4gICAgICAgICAgICAvLyBpbml0aWFsaXNlIGJvZHkgc3ByaXRlIGlmIG5vdCBleGlzdGluZ1xuICAgICAgICAgICAgaWYgKCFzcHJpdGUpXG4gICAgICAgICAgICAgICAgc3ByaXRlID0gcmVuZGVyLnNwcml0ZXNbc3ByaXRlSWRdID0gX2NyZWF0ZUJvZHlTcHJpdGUocmVuZGVyLCBib2R5KTtcblxuICAgICAgICAgICAgLy8gYWRkIHRvIHNjZW5lIGdyYXBoIGlmIG5vdCBhbHJlYWR5IHRoZXJlXG4gICAgICAgICAgICBpZiAoQ29tbW9uLmluZGV4T2Yoc3ByaXRlQ29udGFpbmVyLmNoaWxkcmVuLCBzcHJpdGUpID09PSAtMSlcbiAgICAgICAgICAgICAgICBzcHJpdGVDb250YWluZXIuYWRkQ2hpbGQoc3ByaXRlKTtcblxuICAgICAgICAgICAgLy8gdXBkYXRlIGJvZHkgc3ByaXRlXG4gICAgICAgICAgICBzcHJpdGUucG9zaXRpb24ueCA9IGJvZHkucG9zaXRpb24ueDtcbiAgICAgICAgICAgIHNwcml0ZS5wb3NpdGlvbi55ID0gYm9keS5wb3NpdGlvbi55O1xuICAgICAgICAgICAgc3ByaXRlLnJvdGF0aW9uID0gYm9keS5hbmdsZTtcbiAgICAgICAgICAgIHNwcml0ZS5zY2FsZS54ID0gYm9keVJlbmRlci5zcHJpdGUueFNjYWxlIHx8IDE7XG4gICAgICAgICAgICBzcHJpdGUuc2NhbGUueSA9IGJvZHlSZW5kZXIuc3ByaXRlLnlTY2FsZSB8fCAxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHByaW1pdGl2ZUlkID0gJ2ItJyArIGJvZHkuaWQsXG4gICAgICAgICAgICAgICAgcHJpbWl0aXZlID0gcmVuZGVyLnByaW1pdGl2ZXNbcHJpbWl0aXZlSWRdLFxuICAgICAgICAgICAgICAgIGNvbnRhaW5lciA9IHJlbmRlci5jb250YWluZXI7XG5cbiAgICAgICAgICAgIC8vIGluaXRpYWxpc2UgYm9keSBwcmltaXRpdmUgaWYgbm90IGV4aXN0aW5nXG4gICAgICAgICAgICBpZiAoIXByaW1pdGl2ZSkge1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZSA9IHJlbmRlci5wcmltaXRpdmVzW3ByaW1pdGl2ZUlkXSA9IF9jcmVhdGVCb2R5UHJpbWl0aXZlKHJlbmRlciwgYm9keSk7XG4gICAgICAgICAgICAgICAgcHJpbWl0aXZlLmluaXRpYWxBbmdsZSA9IGJvZHkuYW5nbGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGFkZCB0byBzY2VuZSBncmFwaCBpZiBub3QgYWxyZWFkeSB0aGVyZVxuICAgICAgICAgICAgaWYgKENvbW1vbi5pbmRleE9mKGNvbnRhaW5lci5jaGlsZHJlbiwgcHJpbWl0aXZlKSA9PT0gLTEpXG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmFkZENoaWxkKHByaW1pdGl2ZSk7XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSBib2R5IHByaW1pdGl2ZVxuICAgICAgICAgICAgcHJpbWl0aXZlLnBvc2l0aW9uLnggPSBib2R5LnBvc2l0aW9uLng7XG4gICAgICAgICAgICBwcmltaXRpdmUucG9zaXRpb24ueSA9IGJvZHkucG9zaXRpb24ueTtcbiAgICAgICAgICAgIHByaW1pdGl2ZS5yb3RhdGlvbiA9IGJvZHkuYW5nbGUgLSBwcmltaXRpdmUuaW5pdGlhbEFuZ2xlO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBib2R5IHNwcml0ZVxuICAgICAqIEBtZXRob2QgX2NyZWF0ZUJvZHlTcHJpdGVcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7UmVuZGVyUGl4aX0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHJldHVybiB7UElYSS5TcHJpdGV9IHNwcml0ZVxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICovXG4gICAgdmFyIF9jcmVhdGVCb2R5U3ByaXRlID0gZnVuY3Rpb24ocmVuZGVyLCBib2R5KSB7XG4gICAgICAgIHZhciBib2R5UmVuZGVyID0gYm9keS5yZW5kZXIsXG4gICAgICAgICAgICB0ZXh0dXJlUGF0aCA9IGJvZHlSZW5kZXIuc3ByaXRlLnRleHR1cmUsXG4gICAgICAgICAgICB0ZXh0dXJlID0gX2dldFRleHR1cmUocmVuZGVyLCB0ZXh0dXJlUGF0aCksXG4gICAgICAgICAgICBzcHJpdGUgPSBuZXcgUElYSS5TcHJpdGUodGV4dHVyZSk7XG5cbiAgICAgICAgc3ByaXRlLmFuY2hvci54ID0gYm9keS5yZW5kZXIuc3ByaXRlLnhPZmZzZXQ7XG4gICAgICAgIHNwcml0ZS5hbmNob3IueSA9IGJvZHkucmVuZGVyLnNwcml0ZS55T2Zmc2V0O1xuXG4gICAgICAgIHJldHVybiBzcHJpdGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBib2R5IHByaW1pdGl2ZVxuICAgICAqIEBtZXRob2QgX2NyZWF0ZUJvZHlQcmltaXRpdmVcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7UmVuZGVyUGl4aX0gcmVuZGVyXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICogQHJldHVybiB7UElYSS5HcmFwaGljc30gZ3JhcGhpY3NcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqL1xuICAgIHZhciBfY3JlYXRlQm9keVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHJlbmRlciwgYm9keSkge1xuICAgICAgICB2YXIgYm9keVJlbmRlciA9IGJvZHkucmVuZGVyLFxuICAgICAgICAgICAgb3B0aW9ucyA9IHJlbmRlci5vcHRpb25zLFxuICAgICAgICAgICAgcHJpbWl0aXZlID0gbmV3IFBJWEkuR3JhcGhpY3MoKSxcbiAgICAgICAgICAgIGZpbGxTdHlsZSA9IENvbW1vbi5jb2xvclRvTnVtYmVyKGJvZHlSZW5kZXIuZmlsbFN0eWxlKSxcbiAgICAgICAgICAgIHN0cm9rZVN0eWxlID0gQ29tbW9uLmNvbG9yVG9OdW1iZXIoYm9keVJlbmRlci5zdHJva2VTdHlsZSksXG4gICAgICAgICAgICBzdHJva2VTdHlsZUluZGljYXRvciA9IENvbW1vbi5jb2xvclRvTnVtYmVyKGJvZHlSZW5kZXIuc3Ryb2tlU3R5bGUpLFxuICAgICAgICAgICAgc3Ryb2tlU3R5bGVXaXJlZnJhbWUgPSBDb21tb24uY29sb3JUb051bWJlcignI2JiYicpLFxuICAgICAgICAgICAgc3Ryb2tlU3R5bGVXaXJlZnJhbWVJbmRpY2F0b3IgPSBDb21tb24uY29sb3JUb051bWJlcignI0NENUM1QycpLFxuICAgICAgICAgICAgcGFydDtcblxuICAgICAgICBwcmltaXRpdmUuY2xlYXIoKTtcblxuICAgICAgICAvLyBoYW5kbGUgY29tcG91bmQgcGFydHNcbiAgICAgICAgZm9yICh2YXIgayA9IGJvZHkucGFydHMubGVuZ3RoID4gMSA/IDEgOiAwOyBrIDwgYm9keS5wYXJ0cy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgcGFydCA9IGJvZHkucGFydHNba107XG5cbiAgICAgICAgICAgIGlmICghb3B0aW9ucy53aXJlZnJhbWVzKSB7XG4gICAgICAgICAgICAgICAgcHJpbWl0aXZlLmJlZ2luRmlsbChmaWxsU3R5bGUsIDEpO1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5saW5lU3R5bGUoYm9keVJlbmRlci5saW5lV2lkdGgsIHN0cm9rZVN0eWxlLCAxKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcHJpbWl0aXZlLmJlZ2luRmlsbCgwLCAwKTtcbiAgICAgICAgICAgICAgICBwcmltaXRpdmUubGluZVN0eWxlKDEsIHN0cm9rZVN0eWxlV2lyZWZyYW1lLCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcHJpbWl0aXZlLm1vdmVUbyhwYXJ0LnZlcnRpY2VzWzBdLnggLSBib2R5LnBvc2l0aW9uLngsIHBhcnQudmVydGljZXNbMF0ueSAtIGJvZHkucG9zaXRpb24ueSk7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGogPSAxOyBqIDwgcGFydC52ZXJ0aWNlcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5saW5lVG8ocGFydC52ZXJ0aWNlc1tqXS54IC0gYm9keS5wb3NpdGlvbi54LCBwYXJ0LnZlcnRpY2VzW2pdLnkgLSBib2R5LnBvc2l0aW9uLnkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwcmltaXRpdmUubGluZVRvKHBhcnQudmVydGljZXNbMF0ueCAtIGJvZHkucG9zaXRpb24ueCwgcGFydC52ZXJ0aWNlc1swXS55IC0gYm9keS5wb3NpdGlvbi55KTtcblxuICAgICAgICAgICAgcHJpbWl0aXZlLmVuZEZpbGwoKTtcblxuICAgICAgICAgICAgLy8gYW5nbGUgaW5kaWNhdG9yXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5zaG93QW5nbGVJbmRpY2F0b3IgfHwgb3B0aW9ucy5zaG93QXhlcykge1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5iZWdpbkZpbGwoMCwgMCk7XG5cbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy53aXJlZnJhbWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5saW5lU3R5bGUoMSwgc3Ryb2tlU3R5bGVXaXJlZnJhbWVJbmRpY2F0b3IsIDEpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5saW5lU3R5bGUoMSwgc3Ryb2tlU3R5bGVJbmRpY2F0b3IpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5tb3ZlVG8ocGFydC5wb3NpdGlvbi54IC0gYm9keS5wb3NpdGlvbi54LCBwYXJ0LnBvc2l0aW9uLnkgLSBib2R5LnBvc2l0aW9uLnkpO1xuICAgICAgICAgICAgICAgIHByaW1pdGl2ZS5saW5lVG8oKChwYXJ0LnZlcnRpY2VzWzBdLnggKyBwYXJ0LnZlcnRpY2VzW3BhcnQudmVydGljZXMubGVuZ3RoLTFdLngpIC8gMiAtIGJvZHkucG9zaXRpb24ueCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChwYXJ0LnZlcnRpY2VzWzBdLnkgKyBwYXJ0LnZlcnRpY2VzW3BhcnQudmVydGljZXMubGVuZ3RoLTFdLnkpIC8gMiAtIGJvZHkucG9zaXRpb24ueSkpO1xuXG4gICAgICAgICAgICAgICAgcHJpbWl0aXZlLmVuZEZpbGwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwcmltaXRpdmU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHJlcXVlc3RlZCB0ZXh0dXJlIChhIFBJWEkuVGV4dHVyZSkgdmlhIGl0cyBwYXRoXG4gICAgICogQG1ldGhvZCBfZ2V0VGV4dHVyZVxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtSZW5kZXJQaXhpfSByZW5kZXJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW1hZ2VQYXRoXG4gICAgICogQHJldHVybiB7UElYSS5UZXh0dXJlfSB0ZXh0dXJlXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKi9cbiAgICB2YXIgX2dldFRleHR1cmUgPSBmdW5jdGlvbihyZW5kZXIsIGltYWdlUGF0aCkge1xuICAgICAgICB2YXIgdGV4dHVyZSA9IHJlbmRlci50ZXh0dXJlc1tpbWFnZVBhdGhdO1xuXG4gICAgICAgIGlmICghdGV4dHVyZSlcbiAgICAgICAgICAgIHRleHR1cmUgPSByZW5kZXIudGV4dHVyZXNbaW1hZ2VQYXRoXSA9IFBJWEkuVGV4dHVyZS5mcm9tSW1hZ2UoaW1hZ2VQYXRoKTtcblxuICAgICAgICByZXR1cm4gdGV4dHVyZTtcbiAgICB9O1xuXG59KSgpO1xuXG59LHtcIi4uL2JvZHkvQ29tcG9zaXRlXCI6MixcIi4uL2NvcmUvQ29tbW9uXCI6MTQsXCIuLi9jb3JlL0V2ZW50c1wiOjE2LFwiLi4vZ2VvbWV0cnkvQm91bmRzXCI6MjYsXCIuLi9nZW9tZXRyeS9WZWN0b3JcIjoyOH1dfSx7fSxbMzBdKSgzMClcbn0pO1xuIiwiaW1wb3J0IHA1IGZyb20gXCJwNVwiO1xuXG5leHBvcnQgdHlwZSBQYWlyPFQ+ID0ge1xuICBmaXJzdDogVCxcbiAgc2Vjb25kOiBULFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFZlY3RvciB7XG4gIHg6IG51bWJlcixcbiAgeTogbnVtYmVyLFxufVxuXG5leHBvcnQgY29uc3QgbWF4ID0gKHhzOiBudW1iZXJbXSk6IG51bWJlciA9PiB4cy5yZWR1Y2UoKGFjYywgeCkgPT4gTWF0aC5tYXgoYWNjLCB4KSwgLUluZmluaXR5KTtcbmV4cG9ydCBjb25zdCBtaW4gPSAoeHM6IG51bWJlcltdKTogbnVtYmVyID0+IHhzLnJlZHVjZSgoYWNjLCB4KSA9PiBNYXRoLm1pbihhY2MsIHgpLCBJbmZpbml0eSk7XG5leHBvcnQgY29uc3Qgc3VtID0gKHhzOiBudW1iZXJbXSk6IG51bWJlciA9PiB4cy5yZWR1Y2UoKGFjYywgeCkgPT4gYWNjICsgeCwgMCk7XG5leHBvcnQgY29uc3QgbWVhbiA9ICh4czogbnVtYmVyW10pOiBudW1iZXIgPT4gc3VtKHhzKSAvIHhzLmxlbmd0aDtcblxuZXhwb3J0IGNvbnN0IG1ldGFzQnkgPSA8VD4oeHM6IFRbXSwgZjogKGE6IFQpID0+IG51bWJlciwgcmVkdWNlOiAoYTogbnVtYmVyW10pID0+IG51bWJlcik6IFRbXSA9PiB7XG4gIGxldCB5cyA9IHhzLm1hcChmKVxuICBsZXQgeW1heCA9IHJlZHVjZSh5cyk7XG4gIGxldCByZXMgPSBBcnJheTxUPigpO1xuICBmb3IgKGxldCBpIGluIHhzKSB7XG4gICAgaWYgKHlzW2ldID09IHltYXgpIHtcbiAgICAgIHJlcy5wdXNoKHhzW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG5cbmV4cG9ydCBjb25zdCBtYXhzQnkgPSA8VD4oeHM6IFRbXSwgZjogKChhOiBUKSA9PiBudW1iZXIpKTogVFtdID0+IHtcbiAgcmV0dXJuIG1ldGFzQnkoeHMsIGYsIG1heCk7XG59XG5cbmV4cG9ydCBjb25zdCBtaW5zQnkgPSA8VD4oeHM6IFRbXSwgZjogKChhOiBUKSA9PiBudW1iZXIpKTogVFtdID0+IHtcbiAgcmV0dXJuIG1ldGFzQnkoeHMsIGYsIG1pbik7XG59XG5cbmV4cG9ydCBjb25zdCB2ZWN0b3JNZWFuID0gKHZlYzogVmVjdG9yW10pOiBWZWN0b3IgPT4ge1xuICBsZXQgeCA9IG1lYW4odmVjLm1hcCh2ID0+IHYueCkpO1xuICBsZXQgeSA9IG1lYW4odmVjLm1hcCh2ID0+IHYueSkpO1xuICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG59XG5cbmV4cG9ydCBjb25zdCByaWdodG1vc3RQb2ludCA9IChwb2ludHM6IFZlY3RvcltdKTogVmVjdG9yID0+IHtcbiAgcmV0dXJuIHZlY3Rvck1lYW4obWF4c0J5KHBvaW50cywgcCA9PiBwLngpKTtcbn1cblxuZXhwb3J0IGNvbnN0IGxlZnRtb3N0UG9pbnQgPSAocG9pbnRzOiBWZWN0b3JbXSk6IFZlY3RvciA9PiB7XG4gIHJldHVybiB2ZWN0b3JNZWFuKG1pbnNCeShwb2ludHMsIHAgPT4gcC54KSk7XG59XG5cbmV4cG9ydCBjb25zdCB0b3Btb3N0UG9pbnQgPSAocG9pbnRzOiBWZWN0b3JbXSk6IFZlY3RvciA9PiB7XG4gIHJldHVybiB2ZWN0b3JNZWFuKG1pbnNCeShwb2ludHMsIHAgPT4gcC55KSk7XG59XG5cbmV4cG9ydCBjb25zdCBib3R0b21tb3N0UG9pbnQgPSAocG9pbnRzOiBWZWN0b3JbXSk6IFZlY3RvciA9PiB7XG4gIHJldHVybiB2ZWN0b3JNZWFuKG1heHNCeShwb2ludHMsIHAgPT4gcC55KSk7XG59XG5cbmV4cG9ydCBjb25zdCBkaXN0SG9yaXogPSAocG9pbnRBOiBWZWN0b3IsIHBvaW50QjogVmVjdG9yKTogbnVtYmVyID0+IHtcbiAgcmV0dXJuIE1hdGguYWJzKHBvaW50QS54IC0gcG9pbnRCLngpO1xufVxuXG5leHBvcnQgY29uc3QgZGlzdFZlcnRpID0gKHBvaW50QTogVmVjdG9yLCBwb2ludEI6IFZlY3Rvcik6IG51bWJlciA9PiB7XG4gIHJldHVybiBNYXRoLmFicyhwb2ludEEueSAtIHBvaW50Qi55KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRpc3RFdWNsaWQgPSAocG9pbnRBOiBWZWN0b3IsIHBvaW50QjogVmVjdG9yKTogbnVtYmVyID0+IHtcbiAgcmV0dXJuIE1hdGguaHlwb3QocG9pbnRBLnggLSBwb2ludEIueCwgcG9pbnRBLnkgLSBwb2ludEIueSk7XG59XG5cbmNvbnN0IGNsb2VzdFBvaW50TWV0YSA9ICh0aGlzXzogTWF0dGVyLkJvZHksIHRoYXQ6IE1hdHRlci5Cb2R5LCBlZGdlQTogKHZzOiBWZWN0b3JbXSkgPT4gVmVjdG9yLCBlZGdlQjogKHZzOiBWZWN0b3JbXSkgPT4gVmVjdG9yLCBkaXN0RnVuYzogKHYxOiBWZWN0b3IsIHYyOiBWZWN0b3IpID0+IG51bWJlcik6IFtWZWN0b3IsIFZlY3RvciwgbnVtYmVyXSA9PiB7XG4gIGxldCB0aGlzQSA9IGVkZ2VBKHRoaXNfLnZlcnRpY2VzKTtcbiAgbGV0IHRoaXNCID0gZWRnZUIodGhpc18udmVydGljZXMpO1xuICBsZXQgdGhhdEEgPSBlZGdlQSh0aGF0LnZlcnRpY2VzKTtcbiAgbGV0IHRoYXRCID0gZWRnZUIodGhhdC52ZXJ0aWNlcyk7XG4gIGxldCByZXM6IFtWZWN0b3IsIFZlY3RvciwgbnVtYmVyXSA9IFt0aGlzQSwgdGhhdEEsIEluZmluaXR5XTtcbiAgbGV0IGRpc3QgPSBJbmZpbml0eTtcbiAgZm9yIChsZXQgcDEgb2YgW3RoaXNBLCB0aGlzQl0pIHtcbiAgICBmb3IgKGxldCBwMiBvZiBbdGhhdEEsIHRoYXRCXSkge1xuICAgICAgbGV0IGQgPSBkaXN0RnVuYyhwMSwgcDIpO1xuICAgICAgaWYgKGQgPCBkaXN0KSB7XG4gICAgICAgIGRpc3QgPSBkO1xuICAgICAgICByZXMgPSBbcDEsIHAyLCBkaXN0XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuZXhwb3J0IGNvbnN0IGNsb2VzdFBvaW50UGFpclggPSAoYm9keTE6IE1hdHRlci5Cb2R5LCBib2R5MjogTWF0dGVyLkJvZHkpOiBbVmVjdG9yLCBWZWN0b3IsIG51bWJlcl0gPT4ge1xuICByZXR1cm4gY2xvZXN0UG9pbnRNZXRhKGJvZHkxLCBib2R5MiwgbGVmdG1vc3RQb2ludCwgcmlnaHRtb3N0UG9pbnQsIGRpc3RIb3Jpeik7XG59XG5cbmV4cG9ydCBjb25zdCBjbG9lc3RQb2ludFBhaXJZID0gKGJvZHkxOiBNYXR0ZXIuQm9keSwgYm9keTI6IE1hdHRlci5Cb2R5KTogW1ZlY3RvciwgVmVjdG9yLCBudW1iZXJdID0+IHtcbiAgcmV0dXJuIGNsb2VzdFBvaW50TWV0YShib2R5MSwgYm9keTIsIHRvcG1vc3RQb2ludCwgYm90dG9tbW9zdFBvaW50LCBkaXN0VmVydGkpO1xufVxuXG5leHBvcnQgY29uc3QgcmFuZ2UgPSAoc2l6ZTogbnVtYmVyKTogbnVtYmVyW10gPT4ge1xuICBzaXplID0gTWF0aC5mbG9vcihzaXplKTtcbiAgcmV0dXJuIEFycmF5LmZyb20oQXJyYXkoc2l6ZSkua2V5cygpKTtcbn07XG5cbmV4cG9ydCBjb25zdCByYW5kUmFuZ2UgPSAobG86IG51bWJlciwgaGk6IG51bWJlciwgdW5pdDogbnVtYmVyID0gMSk6IG51bWJlciA9PiB7XG4gIGxldCBhID0gTWF0aC5mbG9vcihsbyk7XG4gIGxldCBiID0gTWF0aC5mbG9vcihoaSk7XG4gIHJldHVybiBhICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGIgLSBhKSAvIHVuaXQpICogdW5pdFxufVxuXG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yNTU4Mjg4Mi9qYXZhc2NyaXB0LW1hdGgtcmFuZG9tLW5vcm1hbC1kaXN0cmlidXRpb24tZ2F1c3NpYW4tYmVsbC1jdXJ2ZVxuZXhwb3J0IGNvbnN0IHJhbmRuID0gKCk6IG51bWJlciA9PiB7XG4gIGxldCB1ID0gMDtcbiAgbGV0IHYgPSAwO1xuICB3aGlsZSAodSA9PT0gMCkgdSA9IE1hdGgucmFuZG9tKCk7IC8vQ29udmVydGluZyBbMCwxKSB0byAoMCwxKVxuICB3aGlsZSAodiA9PT0gMCkgdiA9IE1hdGgucmFuZG9tKCk7XG4gIGxldCBudW0gPSBNYXRoLnNxcnQoLTIuMCAqIE1hdGgubG9nKHUpKSAqIE1hdGguY29zKDIuMCAqIE1hdGguUEkgKiB2KTtcbiAgbnVtID0gbnVtIC8gMTAuMCArIDAuNTsgLy8gVHJhbnNsYXRlIHRvIDAgLT4gMVxuICBpZiAobnVtID4gMSB8fCBudW0gPCAwKSByZXR1cm4gcmFuZG4oKTsgLy8gcmVzYW1wbGUgYmV0d2VlbiAwIGFuZCAxXG4gIHJldHVybiBudW0gLSAwLjU7XG59XG5cbmV4cG9ydCBjb25zdCB1bml0VmVjID0gKGZyb206IFZlY3RvciwgdG86IFZlY3Rvcik6IFZlY3RvciA9PiB7XG4gIGxldCBkID0gZGlzdEV1Y2xpZChmcm9tLCB0bylcbiAgcmV0dXJuIHtcbiAgICB4OiAodG8ueCAtIGZyb20ueCkgLyBkLFxuICAgIHk6ICh0by55IC0gZnJvbS55KSAvIGQsXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZSA9ICh2OiBWZWN0b3IpOiBWZWN0b3IgPT4ge1xuICBsZXQgbm9ybSA9IE1hdGguaHlwb3Qodi54LCB2LnkpO1xuICByZXR1cm4ge1xuICAgIHg6IHYueCAvIG5vcm0sXG4gICAgeTogdi55IC8gbm9ybSxcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgbmVnYXRlID0gKHY6IFZlY3Rvcik6IFZlY3RvciA9PiB7XG4gIHJldHVybiB7IHg6IC12LngsIHk6IC12LnkgfTtcbn1cblxuZXhwb3J0IGNvbnN0IG1ha2VQYWlyID0gPFQ+KGE6IFQsIGI6IFQpOiBQYWlyPFQ+ID0+IHtcbiAgcmV0dXJuIHsgZmlyc3Q6IGEsIHNlY29uZDogYiB9O1xufVxuXG5leHBvcnQgY29uc3QgbWFrZVVub3JkZXJlZFBhaXIgPSA8VD4oYTogVCwgYjogVCk6IFBhaXI8VD4gPT4ge1xuICBpZiAoYiA8IGEpIHtcbiAgICBbYSwgYl0gPSBbYiwgYV07XG4gIH1cbiAgcmV0dXJuIG1ha2VQYWlyKGEsIGIpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0V2lkdGggPSAoYmxvY2s6IE1hdHRlci5Cb2R5KTogbnVtYmVyID0+IHtcbiAgbGV0IHhzID0gYmxvY2sudmVydGljZXMubWFwKHYgPT4gdi54KTtcbiAgcmV0dXJuIG1heCh4cykgLSBtaW4oeHMpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0SGVpZ2h0ID0gKGJsb2NrOiBNYXR0ZXIuQm9keSk6IG51bWJlciA9PiB7XG4gIGxldCB5cyA9IGJsb2NrLnZlcnRpY2VzLm1hcCh2ID0+IHYueSk7XG4gIHJldHVybiBtYXgoeXMpIC0gbWluKHlzKTtcbn1cblxuZXhwb3J0IGNvbnN0IGFyZVNhbWVIZWlnaHQgPSAoZm9vOiBNYXR0ZXIuQm9keSwgYmFyOiBNYXR0ZXIuQm9keSk6IGJvb2xlYW4gPT4ge1xuICByZXR1cm4gZ2V0SGVpZ2h0KGZvbykgPT0gZ2V0SGVpZ2h0KGJhcik7XG59XG5cbmV4cG9ydCBjb25zdCBhcmVTYW1lV2lkdGggPSAoZm9vOiBNYXR0ZXIuQm9keSwgYmFyOiBNYXR0ZXIuQm9keSk6IGJvb2xlYW4gPT4ge1xuICByZXR1cm4gZ2V0V2lkdGgoZm9vKSA9PSBnZXRXaWR0aChiYXIpO1xufVxuXG5cbi8vIGNyZWRpdDogaHR0cHM6Ly9naXRodWIuY29tL3Byb2Nlc3NpbmcvcDUuanMvaXNzdWVzLzM3NjcjaXNzdWVjb21tZW50LTUwMjg3Mzc5MlxuLy8gUm90YXRlIGltYWdlIGJ5IDkwIGRlZ3JlZXMgY2xvY2t3aXNlXG5leHBvcnQgY29uc3Qgcm90YXRlQ2xvY2t3aXNlID0gKHA6IHA1LCBzcmM6IHA1LkltYWdlKTogcDUuSW1hZ2UgPT4ge1xuXG4gIGNvbnN0IHcgPSBzcmMud2lkdGg7XG4gIGNvbnN0IGggPSBzcmMuaGVpZ2h0O1xuICBjb25zdCB0Z3QgPSBwLmNyZWF0ZUltYWdlKGgsIHcpOyAvLyBmbGlwIHcgYW5kIGhcblxuICBzcmMubG9hZFBpeGVscygpO1xuICB0Z3QubG9hZFBpeGVscygpO1xuXG4gIGxldCBpbmRleHIgPSAwO1xuICBmb3IgKGxldCB4ID0gMDsgeCA8IHc7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSBoIC0gMTsgeSA+PSAwOyB5LS0pIHtcbiAgICAgIGxldCBpbmRleCA9ICh4ICsgeSAqIHcpICogNDtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICAgIHRndC5waXhlbHNbaW5kZXhyICsgaV0gPSBzcmMucGl4ZWxzW2luZGV4ICsgaV07XG4gICAgICB9XG4gICAgICBpbmRleHIgKz0gNDtcbiAgICB9XG4gIH1cblxuICBzcmMudXBkYXRlUGl4ZWxzKCk7XG4gIHRndC51cGRhdGVQaXhlbHMoKTtcblxuICByZXR1cm4gdGd0O1xufVxuXG4vLyBleGFtcGxlczpcbi8vICAgYXJnc29ydChbMTAwLCAxLCAxMF0pID09IFsyLCAwLCAxXVxuZXhwb3J0IGNvbnN0IGFyZ3NvcnQgPSAoeHM6IG51bWJlcltdKTogbnVtYmVyW10gPT4ge1xuICBjb25zdCBpbmRpY2VzID0geHMubWFwKCh4LCBpKSA9PiBbeCwgaV0pLnNvcnQoKGEsIGIpID0+IGFbMF0gLSBiWzBdKS5tYXAoKFt4LCBpXSkgPT4gaSk7XG4gIHJldHVybiBpbmRpY2VzO1xufVxuXG5cbi8vIHVuZG9Tb3J0QnkgcmV0dXJucyBpbnZlcnNlIGFyZ3NvcnQgc3VjaCBhbiBvcmRlciB0aGF0XG4vLyBtYXBzIGFyZ3NvcnQgYXJyYXkgaW50byBbMCwgMSwgLi4uLCBhcnIubGVuZ3RoIC0gMV0uXG4vL1xuLy8gcHJvcGVydGllczpcbi8vICAgIHVuZG9Tb3J0QnkoYXJnc29ydCh4cyksIHhzKSA9PSBbMCwgLi4uLCB4cy5sZW5ndGggLSAxXVxuLy8gICAgdW5kb1NvcnRCeSh4cy5zb3J0KCksIHhzKSA9PSB4c1xuLy9cbi8vIGV4YW1wbGVzOlxuLy8gICAgdW5kb1NvcnRCeShbMCwgMSwgMl0sIFsxMDAsIDEsIDEwXSkgPT0gWzIsIDAsIDFdXG5leHBvcnQgY29uc3QgdW5kb1NvcnRCeSA9ICh4czogbnVtYmVyW10sIHJlZjogbnVtYmVyW10pOiBudW1iZXJbXSA9PiB7XG4gIGNvbnN0IGluZGljZXMgPSBhcmdzb3J0KHJlZik7XG4gIGNvbnN0IHJlcyA9IEFycmF5PG51bWJlcj4oeHMubGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGlkeCA9IGluZGljZXNbaV07XG4gICAgcmVzW2lkeF0gPSB4c1tpXTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG5cbmV4cG9ydCBjb25zdCB1bmlxdWUgPSAoeHM6IG51bWJlcltdKTogbnVtYmVyW10gPT4ge1xuICB4cy5zb3J0KChhLCBiKSA9PiBhIC0gYik7XG4gIGxldCByZXMgPSBBcnJheTxudW1iZXI+KCk7XG4gIGxldCBwcmV2ID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVI7XG4gIGZvciAobGV0IHggb2YgeHMpIHtcbiAgICBpZiAoeCAhPT0gcHJldikge1xuICAgICAgcmVzLnB1c2goeCk7XG4gICAgICBwcmV2ID0geDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuXG4vLyBbTm90ZV0gTyhOXjIpIFJld3JpdGUgaWYgbmVjZXNzYXJ5XG4vL1xuLy8gZXhhbXBsZXM6XG4vLyAgIHRhbGx5KFt1bmRlZmluZWQsIDEsIC0zLCAwLCAtMywgdW5kZWZpbmVkLCAtMywgMV0pXG4vLyAgID09IFswLCAyLCAzLCAxLCAzLCAwLCAzLCAyXVxuZXhwb3J0IGNvbnN0IHRhbGx5ID0gKHhzOiBudW1iZXJbXSk6IG51bWJlcltdID0+IHtcbiAgY29uc3QgZ2V0Q291bnQgPSAodmFsOiBudW1iZXIpID0+IHtcbiAgICBsZXQgYW5zID0gMDtcbiAgICBpZiAodmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGFucyA9IHhzLmZpbHRlcih4ID0+IHggPT09IHZhbCkubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gYW5zO1xuICB9XG5cbiAgcmV0dXJuIHhzLm1hcChnZXRDb3VudCk7XG59XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJpbXBvcnQgTWF0dGVyIGZyb20gXCJtYXR0ZXItanNcIjtcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuL3V0aWxzXCJcbmltcG9ydCB7IFdvcmxkRXh0ZW5kZWQgfSBmcm9tIFwiLi9leHR0eXBlc1wiO1xuXG5cbmV4cG9ydCBjb25zdCBhbnRpR3Jhdml0eU1hbmhhdHRhbiA9IChzcmM6IE1hdHRlci5Cb2R5LCB0Z3Q6IE1hdHRlci5Cb2R5LCBjb2VmZiA9IDEwMCk6IE1hdHRlci5WZWN0b3IgPT4ge1xuICAgIGxldCBnID0gY29lZmY7XG4gICAgbGV0IGR4ID0gdXRpbHMuZGlzdEhvcml6KHNyYy5wb3NpdGlvbiwgdGd0LnBvc2l0aW9uKTtcbiAgICBsZXQgZHkgPSB1dGlscy5kaXN0VmVydGkoc3JjLnBvc2l0aW9uLCB0Z3QucG9zaXRpb24pO1xuICAgIC8vIGNoYXJhY3RlcmlzdGljIHNpemVcbiAgICBsZXQgY2hhclNpemUgPSAwLjUgKiAoTWF0aC5zcXJ0KHNyYy5hcmVhKSArIE1hdGguc3FydCh0Z3QuYXJlYSkpO1xuICAgIGxldCBhbnRpR3Jhdml0eU1hZ1ggPSAoZHggPCAxLjUgKiBjaGFyU2l6ZSkgPyBnIC8gKDEwMDAgKyBkeCAqKiAyKSA6IDA7XG4gICAgbGV0IGFudGlHcmF2aXR5TWFnWSA9IChkeSA8IDEuNSAqIGNoYXJTaXplKSA/IGcgLyAoMTAwMCArIGR5ICoqIDIpIDogMDtcbiAgICBsZXQgZm9yY2UgPSB7XG4gICAgICAgIHg6IGFudGlHcmF2aXR5TWFnWCxcbiAgICAgICAgeTogYW50aUdyYXZpdHlNYWdZLFxuICAgIH07XG4gICAgcmV0dXJuIGZvcmNlO1xufVxuXG5cbmV4cG9ydCBjb25zdCBhbnRpR3Jhdml0eVJhbmdlZCA9IChzcmM6IE1hdHRlci5Cb2R5LCB0Z3Q6IE1hdHRlci5Cb2R5LCBjb2VmZiA9IDEwMCwgcmFuZ2VGYWN0b3IgPSAzLjApOiBNYXR0ZXIuVmVjdG9yID0+IHtcbiAgICBsZXQgZCA9IHV0aWxzLmRpc3RFdWNsaWQoc3JjLnBvc2l0aW9uLCB0Z3QucG9zaXRpb24pO1xuICAgIC8vIGNoYXJhY3RlcmlzdGljIHNpemVcbiAgICBsZXQgY2hhclNpemUgPSAwLjUgKiAoTWF0aC5zcXJ0KHNyYy5hcmVhKSArIE1hdGguc3FydCh0Z3QuYXJlYSkpO1xuICAgIGxldCBhbnRpR3Jhdml0eU1hZyA9IChkIDwgcmFuZ2VGYWN0b3IgKiBjaGFyU2l6ZSkgPyBjb2VmZiAvIGQgKiogMiA6IDA7XG4gICAgbGV0IHVuaXRTcmNUb1RndCA9IHV0aWxzLnVuaXRWZWMoc3JjLnBvc2l0aW9uLCB0Z3QucG9zaXRpb24pXG4gICAgbGV0IGZvcmNlID0ge1xuICAgICAgICB4OiBhbnRpR3Jhdml0eU1hZyAqIHVuaXRTcmNUb1RndC54LFxuICAgICAgICB5OiBhbnRpR3Jhdml0eU1hZyAqIHVuaXRTcmNUb1RndC55LFxuICAgIH07XG4gICAgcmV0dXJuIGZvcmNlO1xufVxuXG5cbmV4cG9ydCBjb25zdCBhbnRpR3Jhdml0eSA9IChzcmM6IE1hdHRlci5Cb2R5LCB0Z3Q6IE1hdHRlci5Cb2R5LCBjb2VmZiA9IDEwMCk6IE1hdHRlci5WZWN0b3IgPT4ge1xuICAgIGxldCBkID0gdXRpbHMuZGlzdEV1Y2xpZChzcmMucG9zaXRpb24sIHRndC5wb3NpdGlvbik7XG4gICAgbGV0IGFudGlHcmF2aXR5TWFnID0gY29lZmYgLyBkICoqIDI7XG4gICAgbGV0IHVuaXRTcmNUb1RndCA9IHV0aWxzLnVuaXRWZWMoc3JjLnBvc2l0aW9uLCB0Z3QucG9zaXRpb24pXG4gICAgbGV0IGZvcmNlID0ge1xuICAgICAgICB4OiBhbnRpR3Jhdml0eU1hZyAqIHVuaXRTcmNUb1RndC54LFxuICAgICAgICB5OiBhbnRpR3Jhdml0eU1hZyAqIHVuaXRTcmNUb1RndC55LFxuICAgIH07XG4gICAgcmV0dXJuIGZvcmNlO1xufVxuXG5cbmV4cG9ydCBjb25zdCBhcHBseUFudGlHcmF2aXR5VHdvQm9keSA9ICh3b3JsZDogV29ybGRFeHRlbmRlZCwgc3JjOiBNYXR0ZXIuQm9keSwgdGd0OiBNYXR0ZXIuQm9keSkgPT4ge1xuICAgIGNvbnN0IGYgPSAoczogTWF0dGVyLkJvZHksIHQ6IE1hdHRlci5Cb2R5KTogTWF0dGVyLlZlY3RvciA9PiB7XG4gICAgICAgIHJldHVybiBhbnRpR3Jhdml0eVJhbmdlZChzLCB0LCB3b3JsZC5yZXB1bHNpb25Db2VmZiwgd29ybGQucmVwdWxzaW9uUmFuZ2UpO1xuICAgIH07XG5cbiAgICAvLyB3YWxsIHNob3VsZCBub3QgYmUgaW52b2x2ZWRcbiAgICBpZiAoIXNyYy5pc1N0YXRpYyAmJiAhdGd0LmlzU3RhdGljKSB7XG4gICAgICAgIGxldCBmb3JjZUFudGlHcmF2aXR5ID0gZihzcmMsIHRndCk7XG4gICAgICAgIC8vIGFudGlncmF2aXR5IGV4ZXJ0cyBvbiB0aGUgY2VudGVyIG9mIGEgYmxvY2tcbiAgICAgICAgTWF0dGVyLkJvZHkuYXBwbHlGb3JjZSh0Z3QsIHRndC5wb3NpdGlvbiwgZm9yY2VBbnRpR3Jhdml0eSk7XG4gICAgICAgIE1hdHRlci5Cb2R5LmFwcGx5Rm9yY2Uoc3JjLCBzcmMucG9zaXRpb24sIHV0aWxzLm5lZ2F0ZShmb3JjZUFudGlHcmF2aXR5KSk7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBjb25zdCBhcHBseUFudGlHcmF2aXR5ID0gKHdvcmxkOiBXb3JsZEV4dGVuZGVkLCBibG9ja3M6IE1hdHRlci5Cb2R5W10pID0+IHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJsb2Nrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBmb3IgKGxldCBqID0gaSArIDE7IGogPCBibG9ja3MubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGFwcGx5QW50aUdyYXZpdHlUd29Cb2R5KHdvcmxkLCBibG9ja3NbaV0sIGJsb2Nrc1tqXSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBLbm9sbGJvdCB9IGZyb20gXCIuL2tub2xsYm90XCI7XG5pbXBvcnQgcDUgZnJvbSBcInA1XCI7XG5cbmxldCBteXA1ID0gbmV3IHA1KEtub2xsYm90LnJ1bik7XG4iLCJpbXBvcnQgTWF0dGVyIGZyb20gXCJtYXR0ZXItanNcIjtcbmltcG9ydCBwNSBmcm9tIFwicDVcIjtcblxuaW1wb3J0IHsgV29ybGRFeHRlbmRlZCB9IGZyb20gXCIuL2V4dHR5cGVzXCI7XG5pbXBvcnQgeyBpbWdQYXRocywgcGFyYW1zIH0gZnJvbSBcIi4vY29uZmlnXCI7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0ICogYXMgcmVwdWxzaW9uIGZyb20gXCIuL3JlcHVsc2lvblwiO1xuaW1wb3J0ICogYXMgZ3JvdXBpbmcgZnJvbSBcIi4vZ3JvdXBpbmdcIjtcbmltcG9ydCAqIGFzIHBva2UgZnJvbSBcIi4vcmFuZG9tcG9rZXNcIjtcbmltcG9ydCAqIGFzIGFsaWduIGZyb20gXCIuL2FsaWdubWVudDJcIjtcblxuXG5leHBvcnQgbmFtZXNwYWNlIEtub2xsYm90IHtcblxuICAgIGV4cG9ydCBjb25zdCBydW4gPSAocDogYW55KSA9PiB7XG5cbiAgICAgICAgLy8gY3JlYXRlIGFuIGVuZ2luZSBhbmQgcnVubmVyXG4gICAgICAgIGNvbnN0IGVuZ2luZSA9IE1hdHRlci5FbmdpbmUuY3JlYXRlKCk7XG4gICAgICAgIGNvbnN0IHdvcmxkID0gZW5naW5lLndvcmxkIGFzIFdvcmxkRXh0ZW5kZWQ7XG4gICAgICAgIGNvbnN0IHJ1bm5lciA9IE1hdHRlci5SdW5uZXIuY3JlYXRlKCk7XG5cbiAgICAgICAgLy8gZW5hYmxlIGZvcmNlIGJ5IGRlZmF1bHRcbiAgICAgICAgd29ybGQuZm9yY2VPbiA9IHRydWU7XG5cbiAgICAgICAgLy8gZGlzYWJsZSBncmF2aXR5XG4gICAgICAgIHdvcmxkLmdyYXZpdHkueSA9IDAuMDtcblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAvLyBTY3JlZW4gcGFyYW1ldGVyc1xuICAgICAgICBjb25zdCBTY3JlZW5XaWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCAtIDIwO1xuICAgICAgICBjb25zdCBTY3JlZW5IZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IC0gMjA7XG4gICAgICAgIGNvbnN0IFNjcmVlbldpZHRoSGFsZiA9IE1hdGguZmxvb3IoU2NyZWVuV2lkdGggLyAyKTtcbiAgICAgICAgY29uc3QgU2NyZWVuSGVpZ2h0SGFsZiA9IE1hdGguZmxvb3IoU2NyZWVuSGVpZ2h0IC8gMik7XG5cbiAgICAgICAgLy8gV2FsbCBwYXJhbWV0ZXJzXG4gICAgICAgIGNvbnN0IFdhbGxUaGlja25lc3MgPSAyMDA7XG4gICAgICAgIGNvbnN0IFdhbGxNYXJnaW4gPSAxMDA7XG4gICAgICAgIGNvbnN0IFdhbGxWaXNpYmxlID0gNTtcbiAgICAgICAgY29uc3QgV2FsbE9mZnNldCA9IE1hdGguZmxvb3IoV2FsbFRoaWNrbmVzcyAvIDIpIC0gV2FsbFZpc2libGU7XG5cbiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgLy8gT2JqZWN0IHBhcmFtZXRlcnNcbiAgICAgICAgY29uc3QgTnVtQm94ZXMgPSBpbWdQYXRocy5sZW5ndGg7XG5cbiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgLy8gUmFuZG9tIHBva2luZ1xuICAgICAgICB3b3JsZC5wb2tlU2NhbGUgPSBwYXJhbXMucG9rZVNjYWxlO1xuICAgICAgICB3b3JsZC5wb2tlRGVjYXkgPSBwYXJhbXMucG9rZURlY2F5O1xuXG4gICAgICAgIC8vIEFsaWdubWVudCBmb3JjZVxuICAgICAgICB3b3JsZC5hbGlnbm1lbnRGb3JjZUNvZWZmID0gcGFyYW1zLmFsaWdubWVudEZvcmNlQ29lZmY7XG4gICAgICAgIHdvcmxkLmFsaWdubWVudEZvcmNlUmFuZ2UgPSBwYXJhbXMuYWxpZ25tZW50Rm9yY2VSYW5nZTsgIC8vIHBpeGVsc1xuICAgICAgICB3b3JsZC5hbGlnbm1lbnRGb3JjZVdhbGxSYW5nZSA9IHBhcmFtcy5hbGlnbm1lbnRGb3JjZVdhbGxSYW5nZTtcbiAgICAgICAgd29ybGQuYWxpZ25tZW50Rm9yY2VPZmZzZXQgPSBwYXJhbXMuYWxpZ25tZW50Rm9yY2VPZmZzZXQ7XG5cbiAgICAgICAgLy8gQW50aUdyYXZpdHkgZm9yY2VcbiAgICAgICAgd29ybGQucmVwdWxzaW9uQ29lZmYgPSBwYXJhbXMucmVwdWxzaW9uQ29lZmY7XG4gICAgICAgIHdvcmxkLnJlcHVsc2lvblJhbmdlID0gcGFyYW1zLnJlcHVsc2lvblJhbmdlOyAgICAgIC8vIE5PVCBwaXhlbHNcblxuICAgICAgICAvLyBHcm91cGluZyBhdHRyYWN0aW9uL3JlcHVsc2lvblxuICAgICAgICB3b3JsZC5ncm91cGluZ0NvZWZmID0gcGFyYW1zLmdyb3VwaW5nQ29lZmY7XG5cbiAgICAgICAgLy8gRmxhZyBkaXNwbGF5aW5nIGFsaWdubWVudCBsaW5lc1xuICAgICAgICB3b3JsZC5kaXNwbGF5TGluZXMgPSB0cnVlO1xuXG4gICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIC8vIGNyZWF0ZSB0d28gYm94ZXNcbiAgICAgICAgY29uc3QgYm9keU9wdGlvbnMgPSB7XG4gICAgICAgICAgICBpbmVydGlhOiBJbmZpbml0eSxcbiAgICAgICAgICAgIGZyaWN0aW9uQWlyOiBwYXJhbXMuZnJpY3Rpb25BaXIsXG4gICAgICAgICAgICBmcmljdGlvbjogcGFyYW1zLmZyaWN0aW9uLFxuICAgICAgICB9O1xuXG5cbiAgICAgICAgLy8gZ2VuZXJhdGUgYm94ZXMgcmFuZG9tbHlcbiAgICAgICAgY29uc3QgZ2VuZXJhdGVSYW5kb21Cb3hlcyA9ICgpOiBNYXR0ZXIuQm9keVtdID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFsbFNxdWFyZSA9IGZhbHNlO1xuICAgICAgICAgICAgY29uc3QgTWluU2l6ZVggPSAzMDtcbiAgICAgICAgICAgIGNvbnN0IE1heFNpemVYID0gMTcwO1xuICAgICAgICAgICAgY29uc3QgTWluU2l6ZVkgPSAzMDtcbiAgICAgICAgICAgIGNvbnN0IE1heFNpemVZID0gMTcwO1xuICAgICAgICAgICAgY29uc3QgVW5pdFNpemUgPSAxNjtcblxuICAgICAgICAgICAgY29uc3QgYm94ZXMgPSBBcnJheTxNYXR0ZXIuQm9keT4oTnVtQm94ZXMpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBOdW1Cb3hlczsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVjdFdpZHRoID0gdXRpbHMucmFuZFJhbmdlKE1pblNpemVYLCBNYXhTaXplWCwgVW5pdFNpemUpO1xuICAgICAgICAgICAgICAgIGxldCByZWN0SGVpZ2h0ID0gcmVjdFdpZHRoO1xuICAgICAgICAgICAgICAgIGlmICghYWxsU3F1YXJlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlY3RIZWlnaHQgPSB1dGlscy5yYW5kUmFuZ2UoTWluU2l6ZVksIE1heFNpemVZLCBVbml0U2l6ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IG9mZnNldFggPSBXYWxsT2Zmc2V0ICsgcmVjdFdpZHRoIC8gMjtcbiAgICAgICAgICAgICAgICBjb25zdCBvZmZzZXRZID0gV2FsbE9mZnNldCArIHJlY3RIZWlnaHQgLyAyO1xuICAgICAgICAgICAgICAgIGNvbnN0IHggPSB1dGlscy5yYW5kUmFuZ2Uob2Zmc2V0WCwgU2NyZWVuV2lkdGggLSBvZmZzZXRYKTtcbiAgICAgICAgICAgICAgICBjb25zdCB5ID0gdXRpbHMucmFuZFJhbmdlKG9mZnNldFksIFNjcmVlbkhlaWdodCAtIG9mZnNldFkpO1xuICAgICAgICAgICAgICAgIGJveGVzW2ldID0gTWF0dGVyLkJvZGllcy5yZWN0YW5nbGUoeCwgeSwgcmVjdFdpZHRoLCByZWN0SGVpZ2h0LCBib2R5T3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYm94ZXM7XG4gICAgICAgIH07XG5cblxuICAgICAgICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNTU5MzQyNDEvNTI0NTI2XG4gICAgICAgIGNvbnN0IGdldEltYWdlRGltZW5zaW9ucyA9IChwYXRoOiBzdHJpbmcpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuXG4gICAgICAgICAgICAvLyB0aGUgZm9sbG93aW5nIGhhbmRsZXIgd2lsbCBmaXJlIGFmdGVyIHRoZSBzdWNjZXNzZnVsIGxvYWRpbmcgb2YgdGhlIGltYWdlXG4gICAgICAgICAgICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgbmF0dXJhbFdpZHRoOiB3aWR0aCwgbmF0dXJhbEhlaWdodDogaGVpZ2h0IH0gPSBpbWc7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh7IHdpZHRoLCBoZWlnaHQgfSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBhbmQgdGhpcyBoYW5kbGVyIHdpbGwgZmlyZSBpZiB0aGVyZSB3YXMgYW4gZXJyb3Igd2l0aCB0aGUgaW1hZ2UgKGxpa2UgaWYgaXQncyBub3QgcmVhbGx5IGFuIGltYWdlIG9yIGEgY29ycnVwdGVkIG9uZSlcbiAgICAgICAgICAgIGltZy5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdCgnVGhlcmUgd2FzIHNvbWUgcHJvYmxlbSB3aXRoIHRoZSBpbWFnZS4nKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGltZy5zcmMgPSBwYXRoO1xuICAgICAgICB9KTtcblxuXG4gICAgICAgIGNvbnN0IGdldEJveCA9IGFzeW5jIChpbWdQYXRoOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGxldCBpbWcgPSBhd2FpdCBnZXRJbWFnZURpbWVuc2lvbnMoaW1nUGF0aCkgYXMgeyB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlciB9O1xuICAgICAgICAgICAgbGV0IG9mZnNldFggPSBXYWxsT2Zmc2V0ICsgaW1nLndpZHRoIC8gMjtcbiAgICAgICAgICAgIGxldCBvZmZzZXRZID0gV2FsbE9mZnNldCArIGltZy5oZWlnaHQgLyAyO1xuICAgICAgICAgICAgbGV0IHggPSB1dGlscy5yYW5kUmFuZ2Uob2Zmc2V0WCwgU2NyZWVuV2lkdGggLSBvZmZzZXRYKTtcbiAgICAgICAgICAgIGxldCB5ID0gdXRpbHMucmFuZFJhbmdlKG9mZnNldFksIFNjcmVlbkhlaWdodCAtIG9mZnNldFkpO1xuICAgICAgICAgICAgcmV0dXJuIE1hdHRlci5Cb2RpZXMucmVjdGFuZ2xlKHgsIHksIGltZy53aWR0aCwgaW1nLmhlaWdodCwgYm9keU9wdGlvbnMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IHByb21pc2VkQm94ZXMgPSBQcm9taXNlLmFsbChpbWdQYXRocy5tYXAoZ2V0Qm94KSk7XG5cbiAgICAgICAgLy8gc3Vycm91bmRpbmcgd2FsbFxuICAgICAgICBjb25zdCB3YWxsT3B0aW9ucyA9IHtcbiAgICAgICAgICAgIGlzU3RhdGljOiB0cnVlLFxuICAgICAgICAgICAgZnJpY3Rpb246IHBhcmFtcy53YWxsRnJpY3Rpb24sXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB3YWxsVG9wID0gTWF0dGVyLkJvZGllcy5yZWN0YW5nbGUoXG4gICAgICAgICAgICBTY3JlZW5XaWR0aEhhbGYsXG4gICAgICAgICAgICAtV2FsbE9mZnNldCxcbiAgICAgICAgICAgIFNjcmVlbldpZHRoICsgV2FsbE1hcmdpbixcbiAgICAgICAgICAgIFdhbGxUaGlja25lc3MsXG4gICAgICAgICAgICB3YWxsT3B0aW9ucyxcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3Qgd2FsbEJvdHRvbSA9IE1hdHRlci5Cb2RpZXMucmVjdGFuZ2xlKFxuICAgICAgICAgICAgU2NyZWVuV2lkdGhIYWxmLFxuICAgICAgICAgICAgU2NyZWVuSGVpZ2h0ICsgV2FsbE9mZnNldCxcbiAgICAgICAgICAgIFNjcmVlbldpZHRoICsgV2FsbE1hcmdpbixcbiAgICAgICAgICAgIFdhbGxUaGlja25lc3MsXG4gICAgICAgICAgICB3YWxsT3B0aW9ucyxcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3Qgd2FsbExlZnQgPSBNYXR0ZXIuQm9kaWVzLnJlY3RhbmdsZShcbiAgICAgICAgICAgIC0gV2FsbE9mZnNldCxcbiAgICAgICAgICAgIFNjcmVlbkhlaWdodEhhbGYsXG4gICAgICAgICAgICBXYWxsVGhpY2tuZXNzLFxuICAgICAgICAgICAgU2NyZWVuSGVpZ2h0ICsgV2FsbE1hcmdpbixcbiAgICAgICAgICAgIHdhbGxPcHRpb25zLFxuICAgICAgICApO1xuICAgICAgICBjb25zdCB3YWxsUmlnaHQgPSBNYXR0ZXIuQm9kaWVzLnJlY3RhbmdsZShcbiAgICAgICAgICAgIFNjcmVlbldpZHRoICsgV2FsbE9mZnNldCxcbiAgICAgICAgICAgIFNjcmVlbkhlaWdodEhhbGYsXG4gICAgICAgICAgICBXYWxsVGhpY2tuZXNzLFxuICAgICAgICAgICAgU2NyZWVuSGVpZ2h0ICsgV2FsbE1hcmdpbixcbiAgICAgICAgICAgIHdhbGxPcHRpb25zLFxuICAgICAgICApO1xuXG4gICAgICAgIC8vIG1vdXNlIGFuZCBjb25zdHJhaW50XG4gICAgICAgIGNvbnN0IG1vdXNlID0gTWF0dGVyLk1vdXNlLmNyZWF0ZShkb2N1bWVudC5ib2R5KTtcbiAgICAgICAgY29uc3QgY29uc3RyYWludCA9IE1hdHRlci5Db25zdHJhaW50LmNyZWF0ZShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAvLyBNdXN0IGRlZmluZSBwb2ludEEgYW5kIHBvaW50QiB1bmxpa2UgSUNvbnN0cmFpbnREZWZpbml0aW9uIGludGVyZmFjZVxuICAgICAgICAgICAgICAgIHBvaW50QTogbW91c2UucG9zaXRpb24sXG4gICAgICAgICAgICAgICAgcG9pbnRCOiB7IHg6IDAsIHk6IDAgfSxcbiAgICAgICAgICAgICAgICBzdGlmZm5lc3M6IDAuMixcbiAgICAgICAgICAgICAgICByZW5kZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IG1vdXNlQ29uc3RyYWludCA9IE1hdHRlci5Nb3VzZUNvbnN0cmFpbnQuY3JlYXRlKFxuICAgICAgICAgICAgZW5naW5lLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG1vdXNlOiBtb3VzZSxcbiAgICAgICAgICAgICAgICBjb25zdHJhaW50OiBjb25zdHJhaW50LFxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuXG4gICAgICAgIC8vIGBibG9ja3NgIGlzIHRvIGNvbnRhaW4gYm94ZXMsIHdhbGxzLCBhbmQgbW91c2UgY29uc3RyYWludHNcbiAgICAgICAgdmFyIGJsb2NrczogTWF0dGVyLkJvZHlbXTtcblxuICAgICAgICBjb25zdCBzZXR1cFdvcmxkID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGJveGVzID0gYXdhaXQgcHJvbWlzZWRCb3hlcztcbiAgICAgICAgICAgIGJsb2NrcyA9IFsuLi5ib3hlcywgd2FsbFRvcCwgd2FsbEJvdHRvbSwgd2FsbExlZnQsIHdhbGxSaWdodF1cbiAgICAgICAgICAgIE1hdHRlci5Xb3JsZC5hZGQod29ybGQsIGJsb2Nrcyk7XG4gICAgICAgICAgICBNYXR0ZXIuV29ybGQuYWRkKHdvcmxkLCBtb3VzZUNvbnN0cmFpbnQpO1xuICAgICAgICAgICAgTWF0dGVyLlJ1bm5lci5ydW4ocnVubmVyLCBlbmdpbmUpO1xuICAgICAgICB9O1xuXG5cbiAgICAgICAgLy8gcDUgcHJlbG9hZCB0aGF0IHdhaXRzIHRpbGwgZG9uZVxuICAgICAgICB2YXIgcDVpbWdzOiBwNS5JbWFnZVtdO1xuICAgICAgICBwLnByZWxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBzZXR1cFdvcmxkKCk7XG4gICAgICAgICAgICBwNWltZ3MgPSBpbWdQYXRocy5tYXAocC5sb2FkSW1hZ2UpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIHA1IHNldHVwIHRoYXQgcnVucyBpbiBhc3luY1xuICAgICAgICBwLnNldHVwID0gKCkgPT4ge1xuICAgICAgICAgICAgcC5jcmVhdGVDYW52YXMoU2NyZWVuV2lkdGgsIFNjcmVlbkhlaWdodCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gcDUgZHJhd1xuICAgICAgICBwLmRyYXcgPSAoKSA9PiB7XG4gICAgICAgICAgICBwLmJhY2tncm91bmQoJyMyNDdjNDEnKTtcbiAgICAgICAgICAgIHAuZmlsbCgwKTtcbiAgICAgICAgICAgIC8vIGRyYXcgYmxvY2tzXG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIHA1aW1ncykge1xuICAgICAgICAgICAgICAgIC8vIHAucHVzaCgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrID0gYmxvY2tzW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IGltZyA9IHA1aW1nc1tpXTtcbiAgICAgICAgICAgICAgICBjb25zdCB3ID0gdXRpbHMuZ2V0V2lkdGgoYmxvY2spO1xuICAgICAgICAgICAgICAgIGNvbnN0IGggPSB1dGlscy5nZXRIZWlnaHQoYmxvY2spO1xuICAgICAgICAgICAgICAgIGNvbnN0IHggPSBNYXRoLmZsb29yKGJsb2NrLnBvc2l0aW9uLnggLSB3IC8gMik7XG4gICAgICAgICAgICAgICAgY29uc3QgeSA9IE1hdGguZmxvb3IoYmxvY2sucG9zaXRpb24ueSAtIGggLyAyKTtcbiAgICAgICAgICAgICAgICBwLmltYWdlKGltZywgeCwgeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBkcmF3IHdhbGxzXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrID0gYmxvY2tzW3A1aW1ncy5sZW5ndGggKyBpXTtcbiAgICAgICAgICAgICAgICBjb25zdCB3ID0gdXRpbHMuZ2V0V2lkdGgoYmxvY2spO1xuICAgICAgICAgICAgICAgIGNvbnN0IGggPSB1dGlscy5nZXRIZWlnaHQoYmxvY2spO1xuICAgICAgICAgICAgICAgIGNvbnN0IHggPSBNYXRoLmZsb29yKGJsb2NrLnBvc2l0aW9uLnggLSB3IC8gMik7XG4gICAgICAgICAgICAgICAgY29uc3QgeSA9IE1hdGguZmxvb3IoYmxvY2sucG9zaXRpb24ueSAtIGggLyAyKTtcbiAgICAgICAgICAgICAgICBwLm5vU3Ryb2tlKCk7XG4gICAgICAgICAgICAgICAgcC5yZWN0KHgsIHksIHcsIGgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAod29ybGQuZGlzcGxheUxpbmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm94ZXMgPSBibG9ja3Muc2xpY2UoMCwgYmxvY2tzLmxlbmd0aCAtIDQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGF0dHJhY3RvclhzID0gYWxpZ24uZ2V0QXR0cmFjdG9yWHMoYm94ZXMsIHdvcmxkLmFsaWdubWVudEZvcmNlUmFuZ2UpO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IHggb2YgYXR0cmFjdG9yWHMpIHtcbiAgICAgICAgICAgICAgICAgICAgcC5zdHJva2UocGFyYW1zLmNvbG9yTGluZXNWZXJ0aWNhbCk7XG4gICAgICAgICAgICAgICAgICAgIHAubGluZSh4LCBXYWxsVmlzaWJsZSwgeCwgU2NyZWVuSGVpZ2h0IC0gV2FsbFZpc2libGUpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnN0IGF0dHJhY3RvcllzID0gYWxpZ24uZ2V0QXR0cmFjdG9yWXMoYm94ZXMsIHdvcmxkLmFsaWdubWVudEZvcmNlUmFuZ2UpO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IHkgb2YgYXR0cmFjdG9yWXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcC5zdHJva2UocGFyYW1zLmNvbG9yTGluZXNIb3Jpem9udGFsKTtcbiAgICAgICAgICAgICAgICAgICAgcC5saW5lKFdhbGxWaXNpYmxlLCB5LCBTY3JlZW5XaWR0aCAtIFdhbGxWaXNpYmxlLCB5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gbWFpbiBsb29wXG4gICAgICAgIHZhciBjb3VudGVyID0gMDtcbiAgICAgICAgTWF0dGVyLkV2ZW50cy5vbihlbmdpbmUsICdiZWZvcmVVcGRhdGUnLCAoZXZlbnQ6IE1hdHRlci5FdmVudHMpID0+IHtcbiAgICAgICAgICAgIGNvdW50ZXIgKz0gMTtcbiAgICAgICAgICAgIGlmIChjb3VudGVyICUgMzAwID09IDApIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImNvdW50ZXI6IFwiLCBjb3VudGVyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHdvcmxkLmZvcmNlT24pIHtcbiAgICAgICAgICAgICAgICBpZiAoY291bnRlciA8IDE4MCkge1xuICAgICAgICAgICAgICAgICAgICBncm91cGluZy5hcHBseUdyb3VwaW5nKHdvcmxkLCBibG9ja3MpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY291bnRlciA8IDI0MCkge1xuICAgICAgICAgICAgICAgICAgICByZXB1bHNpb24uYXBwbHlBbnRpR3Jhdml0eSh3b3JsZCwgYmxvY2tzKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi5hcHBseUFsaWdubWVudCh3b3JsZCwgYmxvY2tzKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoY291bnRlciAlIDEwID09IDkpIHtcbiAgICAgICAgICAgICAgICAgICAgd29ybGQucG9rZVNjYWxlICo9IHdvcmxkLnBva2VEZWNheTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcG9rZS5hcHBseVJhbmRvbVBva2VzKHdvcmxkLCBibG9ja3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgICAgICAgICAgLy8gVG9nZ2xlIGZvcmNlcyBieSBwcmVzc2luZyBTcGFjZSBrZXlcbiAgICAgICAgICAgIGlmIChlLmNvZGUgPT09IFwiU3BhY2VcIikge1xuICAgICAgICAgICAgICAgIHdvcmxkLmZvcmNlT24gPSAhd29ybGQuZm9yY2VPbjtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgVG9nZ2xlZCBmb3JjZTogJHt3b3JsZC5mb3JjZU9ufWApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBUb2dnbGUgYWxpZ25tZW50IGxpbmVzIHdpdGggTCBrZXlcbiAgICAgICAgICAgIGlmIChlLmNvZGUgPT09IFwiS2V5TFwiKSB7XG4gICAgICAgICAgICAgICAgd29ybGQuZGlzcGxheUxpbmVzID0gIXdvcmxkLmRpc3BsYXlMaW5lcztcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgVG9nZ2xlZCBkaXNwbGF5TGluZXM6ICR7d29ybGQuZGlzcGxheUxpbmVzfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuXG4gICAgICAgIC8vIFJvdGF0ZSBhIGJsb2NrIGJ5IGRvdWJsZSBjbGlja2luZ1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAtLS0gRG91YmxlIGNsaWNrIGF0IHQ9JHtjb3VudGVyfSAtLS1gKTtcbiAgICAgICAgICAgIC8vIGl0ZXJhdGUgb3ZlciBibG9ja3MgZXhjZXB0IGZvciB3YWxsc1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBibG9ja3MubGVuZ3RoIC0gNDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYiA9IGJsb2Nrc1tpXTtcbiAgICAgICAgICAgICAgICBpZiAoIWIuaXNTdGF0aWMgJiYgTWF0dGVyLkJvdW5kcy5jb250YWlucyhiLmJvdW5kcywgbW91c2UucG9zaXRpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgIE1hdHRlci5Cb2R5LnJvdGF0ZShiLCBNYXRoLlBJIC8gMik7XG4gICAgICAgICAgICAgICAgICAgIHA1aW1nc1tpXSA9IHV0aWxzLnJvdGF0ZUNsb2Nrd2lzZShwLCBwNWltZ3NbaV0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgLy8gUm90YXRlIGEgYmxvY2sgYnkgdG91Y2ggcm90YXRpb25cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgKGUpID0+IHtcbiAgICAgICAgICAgIGxldCB0b3VjaCA9IGUuY2hhbmdlZFRvdWNoZXMuaXRlbSgwKTtcbiAgICAgICAgICAgIGxldCBhbmdsZUluRGVncmVlcyA9IHRvdWNoPy5yb3RhdGlvbkFuZ2xlID8/IDA7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgLS0tIFRvdWNoIHJvdGF0aW9uIGFjdGl2YXRlZCBhdCB0PSR7Y291bnRlcn0gLS0tYCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgICAgIHJvdGF0aW9uIGFuZ2xlID0gJHthbmdsZUluRGVncmVlc30gKGRlZylgKTtcbiAgICAgICAgICAgIC8vIGl0ZXJhdGUgb3ZlciBibG9ja3MgZXhjZXB0IGZvciB3YWxsc1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBibG9ja3MubGVuZ3RoIC0gNDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYiA9IGJsb2Nrc1tpXTtcbiAgICAgICAgICAgICAgICBpZiAoIWIuaXNTdGF0aWMgJiYgTWF0dGVyLkJvdW5kcy5jb250YWlucyhiLmJvdW5kcywgbW91c2UucG9zaXRpb24pICYmIGFuZ2xlSW5EZWdyZWVzID4gMikge1xuICAgICAgICAgICAgICAgICAgICBNYXR0ZXIuQm9keS5yb3RhdGUoYiwgTWF0aC5QSSAvIDIpO1xuICAgICAgICAgICAgICAgICAgICBwNWltZ3NbaV0gPSB1dGlscy5yb3RhdGVDbG9ja3dpc2UocCwgcDVpbWdzW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCJjb25zdCBpbWdSb290ID0gXCIuL2xlZ28vXCI7XG5jb25zdCBpbWdOYW1lcyA9IFtcbiAgICBcImJsdWVfMXgyLnBuZ1wiLFxuICAgIFwiYmx1ZV8xeDIucG5nXCIsXG4gICAgXCJibHVlXzF4Mi5wbmdcIixcbiAgICBcImJsdWVfMXgyLnBuZ1wiLFxuICAgIFwiYmx1ZV8xeDIucG5nXCIsXG4gICAgXCJibHVlXzF4My5wbmdcIixcbiAgICBcImJsdWVfMXgzLnBuZ1wiLFxuICAgIFwiZ3JlZW5fMXgyLnBuZ1wiLFxuICAgIFwiZ3JlZW5fMXgyLnBuZ1wiLFxuICAgIFwiZ3JlZW5fMXgyLnBuZ1wiLFxuICAgIFwiZ3JlZW5fMXgyLnBuZ1wiLFxuICAgIFwiZ3JlZW5fMngyLnBuZ1wiLFxuICAgIFwiZ3JlZW5fMngyLnBuZ1wiLFxuICAgIFwib3JhbmdlXzJ4MS5wbmdcIixcbiAgICBcIm9yYW5nZV8yeDEucG5nXCIsXG4gICAgXCJvcmFuZ2VfMngxLnBuZ1wiLFxuICAgIFwib3JhbmdlXzJ4MS5wbmdcIixcbiAgICBcIm9yYW5nZV8yeDEucG5nXCIsXG4gICAgXCJvcmFuZ2VfMngxLnBuZ1wiLFxuICAgIFwib3JhbmdlXzJ4My5wbmdcIixcbiAgICBcIm9yYW5nZV8yeDMucG5nXCIsXG4gICAgXCJyZWRfMXg0LnBuZ1wiLFxuICAgIFwicmVkXzF4NC5wbmdcIixcbiAgICBcInJlZF8xeDQucG5nXCIsXG4gICAgXCJyZWRfMngyLnBuZ1wiLFxuICAgIFwicmVkXzJ4Mi5wbmdcIixcbiAgICBcInllbGxvd18yeDEucG5nXCIsXG4gICAgXCJ5ZWxsb3dfMngxLnBuZ1wiLFxuICAgIFwieWVsbG93XzJ4MS5wbmdcIixcbiAgICBcInllbGxvd18yeDEucG5nXCIsXG4gICAgXCJ5ZWxsb3dfMngxLnBuZ1wiLFxuICAgIFwieWVsbG93XzN4Mi5wbmdcIixcbiAgICBcInllbGxvd18zeDIucG5nXCIsXG4gICAgXCJ5ZWxsb3dfM3gyLnBuZ1wiXG5dO1xuXG5leHBvcnQgY29uc3QgaW1nUGF0aHMgPSBpbWdOYW1lcy5tYXAobmFtZSA9PiBpbWdSb290ICsgbmFtZSk7XG5cbmV4cG9ydCBjb25zdCBwYXJhbXMgPSB7XG4gICAgLy8gQm9keSBwYXJhbWV0ZXJzXG4gICAgZnJpY3Rpb25BaXI6IDAuMDgsXG4gICAgZnJpY3Rpb246IDAuMDAzLFxuICAgIHdhbGxGcmljdGlvbjogMC4wMSxcblxuICAgIC8vIEdsb2JhbCByYW5kb20gcG9raW5nXG4gICAgcG9rZVNjYWxlOiAwLjA1LFxuICAgIHBva2VEZWNheTogMC45NCwgIC8vIG11bHRpcGxpZXIgYWZ0ZXIgMTAgY291bnRzXG5cbiAgICAvLyBBbGlnbm1lbnQgZm9yY2VcbiAgICBhbGlnbm1lbnRGb3JjZUNvZWZmOiAwLjAwMTAsICAgIC8vIGluIGZvcmNlL3BpeGVsXG4gICAgYWxpZ25tZW50Rm9yY2VSYW5nZTogMzAsICAgICAgICAvLyBwaXhlbHNcbiAgICBhbGlnbm1lbnRGb3JjZVdhbGxSYW5nZTogMTUsICAgIC8vIHBpeGVsc1xuICAgIGFsaWdubWVudEZvcmNlT2Zmc2V0OiAwLjAwNywgICAgLy8gaW4gZm9yY2VcblxuICAgIC8vIEFudGlHcmF2aXR5IGZvcmNlXG4gICAgcmVwdWxzaW9uQ29lZmY6IDEwMCxcbiAgICByZXB1bHNpb25SYW5nZTogMy4wLCAgICAgIC8vIE5PVCBwaXhlbHNcblxuICAgIC8vIEdyb3VwaW5nIGF0dHJhY3Rpb24vcmVwdWxzaW9uXG4gICAgZ3JvdXBpbmdDb2VmZjogNDAwLFxuXG4gICAgLy8gQWxpZ25tZW50IGxpbmUgY29sb3JzXG4gICAgY29sb3JMaW5lc1ZlcnRpY2FsOiAnI0VGNkIyMicsXG4gICAgY29sb3JMaW5lc0hvcml6b250YWw6ICcjRjI5MDg5JyxcblxufVxuIiwiaW1wb3J0IE1hdHRlciBmcm9tIFwibWF0dGVyLWpzXCI7XG5pbXBvcnQgeyBhbnRpR3Jhdml0eSwgYW50aUdyYXZpdHlSYW5nZWQgfSBmcm9tIFwiLi9yZXB1bHNpb25cIjtcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQgeyBXb3JsZEV4dGVuZGVkIH0gZnJvbSBcIi4vZXh0dHlwZXNcIjtcbmltcG9ydCBVbmlvbkZpbmQgZnJvbSBcIi4vdW5pb25maW5kXCI7XG5cblxuZXhwb3J0IGNvbnN0IGFwcGx5QW50aUdyYXZpdHlEaXNqb2ludCA9ICh3b3JsZDogV29ybGRFeHRlbmRlZCwgYmxvY2tzOiBNYXR0ZXIuQm9keVtdLCB1Zlg6IFVuaW9uRmluZCwgdWZZOiBVbmlvbkZpbmQpID0+IHtcbiAgY29uc3QgZiA9IChzOiBNYXR0ZXIuQm9keSwgdDogTWF0dGVyLkJvZHkpOiBNYXR0ZXIuVmVjdG9yID0+IHtcbiAgICByZXR1cm4gYW50aUdyYXZpdHlSYW5nZWQocywgdCwgd29ybGQucmVwdWxzaW9uQ29lZmYsIHdvcmxkLnJlcHVsc2lvblJhbmdlKTtcbiAgfTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGJsb2Nrcy5sZW5ndGg7IGkrKykge1xuICAgIGZvciAobGV0IGogPSBpICsgMTsgaiA8IGJsb2Nrcy5sZW5ndGg7IGorKykge1xuICAgICAgbGV0IHNyYyA9IGJsb2Nrc1tpXTtcbiAgICAgIGxldCB0Z3QgPSBibG9ja3Nbal07XG4gICAgICBpZiAoIXNyYy5pc1N0YXRpYyAmJiAhdGd0LmlzU3RhdGljKSB7XG4gICAgICAgIGxldCBmb3JjZSA9IGYoc3JjLCB0Z3QpO1xuICAgICAgICBpZiAodWZYLmFyZUNvbm5lY3RlZChpLCBqKSkge1xuICAgICAgICAgIGZvcmNlLnggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1ZlkuYXJlQ29ubmVjdGVkKGksIGopKSB7XG4gICAgICAgICAgZm9yY2UueSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgTWF0dGVyLkJvZHkuYXBwbHlGb3JjZSh0Z3QsIHRndC5wb3NpdGlvbiwgZm9yY2UpXG4gICAgICAgIE1hdHRlci5Cb2R5LmFwcGx5Rm9yY2Uoc3JjLCBzcmMucG9zaXRpb24sIHV0aWxzLm5lZ2F0ZShmb3JjZSkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cbmNvbnN0IGFwcGx5R3JvdXBpbmdUd29Cb2R5ID0gKHdvcmxkOiBXb3JsZEV4dGVuZGVkLCBzcmM6IE1hdHRlci5Cb2R5LCB0Z3Q6IE1hdHRlci5Cb2R5KSA9PiB7XG4gIGNvbnN0IGYgPSAoczogTWF0dGVyLkJvZHksIHQ6IE1hdHRlci5Cb2R5KTogTWF0dGVyLlZlY3RvciA9PiBhbnRpR3Jhdml0eShzLCB0LCB3b3JsZC5ncm91cGluZ0NvZWZmKTtcblxuICAvLyB3YWxsIHNob3VsZCBub3QgYmUgaW52b2x2ZWRcbiAgaWYgKCFzcmMuaXNTdGF0aWMgJiYgIXRndC5pc1N0YXRpYykge1xuICAgIGxldCBmb3JjZUFudGlHcmF2aXR5ID0gZihzcmMsIHRndCk7XG5cbiAgICAvLyBleGVydCBhdHRyYWN0aXZlIGZvcmNlIGlmIGJsb2NrcyBhcmUgb2YgdGhlIHNhbWUgZ3JvdXBcbiAgICBpZiAodXRpbHMuYXJlU2FtZVdpZHRoKHNyYywgdGd0KSB8fCB1dGlscy5hcmVTYW1lSGVpZ2h0KHNyYywgdGd0KSkge1xuICAgICAgZm9yY2VBbnRpR3Jhdml0eSA9IHV0aWxzLm5lZ2F0ZShmb3JjZUFudGlHcmF2aXR5KTtcbiAgICB9XG4gICAgLy8gYW50aWdyYXZpdHkgZXhlcnRzIG9uIHRoZSBjZW50ZXIgb2YgYSBibG9ja1xuICAgIE1hdHRlci5Cb2R5LmFwcGx5Rm9yY2UodGd0LCB0Z3QucG9zaXRpb24sIGZvcmNlQW50aUdyYXZpdHkpO1xuICAgIE1hdHRlci5Cb2R5LmFwcGx5Rm9yY2Uoc3JjLCBzcmMucG9zaXRpb24sIHV0aWxzLm5lZ2F0ZShmb3JjZUFudGlHcmF2aXR5KSk7XG4gIH1cbn1cblxuXG5leHBvcnQgY29uc3QgYXBwbHlHcm91cGluZyA9ICh3b3JsZDogV29ybGRFeHRlbmRlZCwgYmxvY2tzOiBNYXR0ZXIuQm9keVtdKSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYmxvY2tzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQgaiA9IGkgKyAxOyBqIDwgYmxvY2tzLmxlbmd0aDsgaisrKSB7XG4gICAgICBhcHBseUdyb3VwaW5nVHdvQm9keSh3b3JsZCwgYmxvY2tzW2ldLCBibG9ja3Nbal0pO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IE1hdHRlciBmcm9tIFwibWF0dGVyLWpzXCI7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgV29ybGRFeHRlbmRlZCB9IGZyb20gXCIuL2V4dHR5cGVzXCI7XG5cblxuY29uc3QgYXBwbHlSYW5kb21Qb2tlID0gKHdvcmxkOiBXb3JsZEV4dGVuZGVkLCBibG9jazogTWF0dGVyLkJvZHkpID0+IHtcbiAgaWYgKCFibG9jay5pc1N0YXRpYykge1xuICAgIE1hdHRlci5Cb2R5LmFwcGx5Rm9yY2UoYmxvY2ssIGJsb2NrLnBvc2l0aW9uLFxuICAgICAge1xuICAgICAgICB4OiB3b3JsZC5wb2tlU2NhbGUgKiB1dGlscy5yYW5kbigpLFxuICAgICAgICB5OiB3b3JsZC5wb2tlU2NhbGUgKiB1dGlscy5yYW5kbigpLFxuICAgICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGFwcGx5UmFuZG9tUG9rZXMgPSAod29ybGQ6IFdvcmxkRXh0ZW5kZWQsIGJsb2NrczogTWF0dGVyLkJvZHlbXSkgPT4ge1xuICBibG9ja3MuZm9yRWFjaChibG9jayA9PiBhcHBseVJhbmRvbVBva2Uod29ybGQsIGJsb2NrKSk7XG59XG4iLCJpbXBvcnQgTWF0dGVyIGZyb20gXCJtYXR0ZXItanNcIjtcbmltcG9ydCB7IGJpc2VjdCwgYmlzZWN0TGVmdCB9IGZyb20gXCIuL2JpbmFyeVNlYXJjaFwiO1xuaW1wb3J0IHsgbWVhbiwgdW5kb1NvcnRCeSwgbWluLCBtYXgsIHVuaXF1ZSwgdGFsbHkgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgV29ybGRFeHRlbmRlZCB9IGZyb20gXCIuL2V4dHR5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBmaXhlZFJhZGl1czFkQ2x1c3RlcmluZyA9ICh4czogbnVtYmVyW10sIHI6IG51bWJlcik6IG51bWJlcltdID0+IHtcblxuICBsZXQgeXM6IG51bWJlcltdID0geHMuc2xpY2UoKTtcbiAgeXMgPSB5cy5zb3J0KChhLCBiKSA9PiBhIC0gYik7XG4gIGNvbnN0IHpzID0gQXJyYXk8bnVtYmVyPih4cy5sZW5ndGgpO1xuXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgbGV0IGNodW5rU2l6ZSA9IDE7XG4gICAgbGV0IHJhbmdlID0gQXJyYXk8bnVtYmVyPigyKTtcblxuICAgIC8vIHJhbmdlIGlzIHNldCB0byBsZWZ0LWluY2x1c2l2ZSwgcmlnaHQtZXhjbHVzaXZlXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB5cy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHpzW2ldICE9PSB1bmRlZmluZWQpIGNvbnRpbnVlO1xuXG4gICAgICBsZXQgbGVmdCA9IGJpc2VjdCh5cywgeXNbaV0gLSByKTtcbiAgICAgIHdoaWxlICh6c1tsZWZ0XSAhPT0gdW5kZWZpbmVkKSBsZWZ0Kys7XG4gICAgICBpZiAoaSAtIGxlZnQgKyAxID4gY2h1bmtTaXplKSB7XG4gICAgICAgIGNodW5rU2l6ZSA9IGkgLSBsZWZ0ICsgMTtcbiAgICAgICAgcmFuZ2UgPSBbbGVmdCwgaSArIDFdO1xuICAgICAgfSBlbHNlIGlmIChjaHVua1NpemUgPiAxICYmIGkgLSBsZWZ0ICsgMSA9PSBjaHVua1NpemUpIHtcbiAgICAgICAgbGV0IFthLCBiXSA9IHJhbmdlO1xuICAgICAgICBpZiAoeXNbaV0gLSB5c1tsZWZ0XSA8IHlzW2IgLSAxXSAtIHlzW2FdKVxuICAgICAgICAgIHJhbmdlID0gW2xlZnQsIGkgKyAxXTtcbiAgICAgIH1cbiAgICAgIC8vIGNvbnNvbGUubG9nKGAgIDwtLS18IHJhbmdlID0gJHtyYW5nZX1gKTtcblxuICAgICAgbGV0IHJpZ2h0ID0gYmlzZWN0TGVmdCh5cywgeXNbaV0gKyByKTtcbiAgICAgIHdoaWxlICh6c1tyaWdodF0gIT09IHVuZGVmaW5lZCkgcmlnaHQtLTtcbiAgICAgIGlmIChyaWdodCAtIGkgPiBjaHVua1NpemUpIHtcbiAgICAgICAgY2h1bmtTaXplID0gcmlnaHQgLSBpO1xuICAgICAgICByYW5nZSA9IFtpLCByaWdodF07XG4gICAgICB9IGVsc2UgaWYgKGNodW5rU2l6ZSA+IDEgJiYgcmlnaHQgLSBpID09IGNodW5rU2l6ZSkge1xuICAgICAgICBsZXQgW2EsIGJdID0gcmFuZ2U7XG4gICAgICAgIGlmICh5c1tyaWdodCAtIDFdIC0geXNbaV0gPCB5c1tiIC0gMV0gLSB5c1thXSlcbiAgICAgICAgICByYW5nZSA9IFtpLCByaWdodF07XG4gICAgICB9XG5cbiAgICAgIC8vIGNvbnNvbGUubG9nKGAgIHwtLS0+IHJhbmdlID0gJHtyYW5nZX1gKTtcbiAgICB9XG5cbiAgICBpZiAoY2h1bmtTaXplID4gMSkge1xuICAgICAgbGV0IGNlbnRyb2lkID0gbWVhbih5cy5zbGljZShyYW5nZVswXSwgcmFuZ2VbMV0pKTtcbiAgICAgIGZvciAobGV0IGkgPSByYW5nZVswXTsgaSA8IHJhbmdlWzFdOyBpKyspIHtcbiAgICAgICAgenNbaV0gPSBjZW50cm9pZDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gbm90IHNlZWluZyBhbnkgdXBkYXRlXG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgfVxuXG4gIGNvbnN0IHJlcyA9IHVuZG9Tb3J0QnkoenMsIHhzKTtcbiAgcmV0dXJuIHJlcztcbn1cblxuY29uc3QgZ2V0RWRnZXNNZXRhID0gKGJveGVzOiBNYXR0ZXIuQm9keVtdLCBmOiAoKHY6IE1hdHRlci5WZWN0b3IpID0+IG51bWJlcikpOiBudW1iZXJbXSA9PiB7XG4gIGNvbnN0IHJlcyA9IEFycmF5PG51bWJlcj4oMiAqIGJveGVzLmxlbmd0aCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYm94ZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBib3ggPSBib3hlc1tpXTtcbiAgICBjb25zdCBhcnIgPSBib3gudmVydGljZXMubWFwKGYpO1xuICAgIHJlc1syICogaV0gPSBtaW4oYXJyKTtcbiAgICByZXNbMiAqIGkgKyAxXSA9IG1heChhcnIpO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbmNvbnN0IGdldEVkZ2VzWCA9IChib3hlczogTWF0dGVyLkJvZHlbXSk6IG51bWJlcltdID0+IHtcbiAgcmV0dXJuIGdldEVkZ2VzTWV0YShib3hlcywgKHApID0+IHAueCk7XG59XG5cbmNvbnN0IGdldEVkZ2VzWSA9IChib3hlczogTWF0dGVyLkJvZHlbXSk6IG51bWJlcltdID0+IHtcbiAgcmV0dXJuIGdldEVkZ2VzTWV0YShib3hlcywgKHApID0+IHAueSk7XG59XG5cblxuY29uc3QgZ2V0QXR0cmFjdG9yc01ldGEgPSAoYm94ZXM6IE1hdHRlci5Cb2R5W10sIHJhZGl1czogbnVtYmVyLCBnZXRFZGdlczogKChibG9ja3M6IE1hdHRlci5Cb2R5W10pID0+IG51bWJlcltdKSkgPT4ge1xuICBsZXQgeHM6IG51bWJlcltdO1xuICB4cyA9IGdldEVkZ2VzKGJveGVzKTtcbiAgeHMgPSBmaXhlZFJhZGl1czFkQ2x1c3RlcmluZyh4cywgcmFkaXVzKTtcbiAgeHMgPSB4cy5maWx0ZXIoeCA9PiAoeCAhPT0gdW5kZWZpbmVkKSkubWFwKE1hdGgucm91bmQpLnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcbiAgeHMgPSB1bmlxdWUoeHMpO1xuICByZXR1cm4geHM7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRBdHRyYWN0b3JYcyA9IChib3hlczogTWF0dGVyLkJvZHlbXSwgcmFkaXVzOiBudW1iZXIpOiBudW1iZXJbXSA9PiB7XG4gIHJldHVybiBnZXRBdHRyYWN0b3JzTWV0YShib3hlcywgcmFkaXVzLCBnZXRFZGdlc1gpO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0QXR0cmFjdG9yWXMgPSAoYm94ZXM6IE1hdHRlci5Cb2R5W10sIHJhZGl1czogbnVtYmVyKTogbnVtYmVyW10gPT4ge1xuICByZXR1cm4gZ2V0QXR0cmFjdG9yc01ldGEoYm94ZXMsIHJhZGl1cywgZ2V0RWRnZXNZKTtcbn1cblxuXG5jb25zdCBhcHBseUJveGVzQWxpZ25tZW50WCA9ICh3b3JsZDogV29ybGRFeHRlbmRlZCwgYm94ZXM6IE1hdHRlci5Cb2R5W10pID0+IHtcbiAgY29uc3QgZWRnZXMgPSBnZXRFZGdlc1goYm94ZXMpO1xuICBjb25zdCBhdHRyYWN0b3JzID0gZml4ZWRSYWRpdXMxZENsdXN0ZXJpbmcoZWRnZXMsIHdvcmxkLmFsaWdubWVudEZvcmNlUmFuZ2UpO1xuICBjb25zdCBhdHRyU2NvcmUgPSB0YWxseShhdHRyYWN0b3JzKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGJveGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGF0dHJTY29yZVsyICogaV0gPT0gMCAmJiBhdHRyU2NvcmVbMiAqIGkgKyAxXSA9PSAwKSBjb250aW51ZTtcbiAgICBjb25zdCBib3ggPSBib3hlc1tpXTtcbiAgICBpZiAoYm94LmlzU3RhdGljKSBjb250aW51ZTtcbiAgICBsZXQgaWR4ID0gMiAqIGk7XG4gICAgaWYgKGF0dHJTY29yZVsyICogaV0gPCBhdHRyU2NvcmVbMiAqIGkgKyAxXSkge1xuICAgICAgaWR4ID0gMiAqIGkgKyAxO1xuICAgIH1cbiAgICBjb25zdCBzcmNYID0gYXR0cmFjdG9yc1tpZHhdO1xuICAgIGNvbnN0IHRndCA9IGJveC52ZXJ0aWNlcy5maWx0ZXIodiA9PiB2LnggPT0gZWRnZXNbaWR4XSlbMF07XG4gICAgY29uc3Qgc2lnbiA9ICh0Z3QueCA+IHNyY1gpID8gLTEgOiAxO1xuICAgIGNvbnN0IGRpc3QgPSBNYXRoLmFicyh0Z3QueCAtIHNyY1gpO1xuICAgIGNvbnN0IGZvcmNlWCA9IHNpZ24gKiAod29ybGQuYWxpZ25tZW50Rm9yY2VDb2VmZiAqIGRpc3QgKyB3b3JsZC5hbGlnbm1lbnRGb3JjZU9mZnNldCk7XG4gICAgTWF0dGVyLkJvZHkuYXBwbHlGb3JjZShib3gsIHRndCwgeyB4OiBmb3JjZVgsIHk6IDAgfSk7XG4gIH1cbn1cblxuXG5jb25zdCBhcHBseUJveGVzQWxpZ25tZW50WSA9ICh3b3JsZDogV29ybGRFeHRlbmRlZCwgYm94ZXM6IE1hdHRlci5Cb2R5W10pID0+IHtcbiAgY29uc3QgZWRnZXMgPSBnZXRFZGdlc1koYm94ZXMpO1xuICBjb25zdCBhdHRyYWN0b3JzID0gZml4ZWRSYWRpdXMxZENsdXN0ZXJpbmcoZWRnZXMsIHdvcmxkLmFsaWdubWVudEZvcmNlUmFuZ2UpO1xuICBjb25zdCBhdHRyU2NvcmUgPSB0YWxseShhdHRyYWN0b3JzKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGJveGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGF0dHJTY29yZVsyICogaV0gPT0gMCAmJiBhdHRyU2NvcmVbMiAqIGkgKyAxXSA9PSAwKSBjb250aW51ZTtcbiAgICBjb25zdCBib3ggPSBib3hlc1tpXTtcbiAgICBpZiAoYm94LmlzU3RhdGljKSBjb250aW51ZTtcbiAgICBsZXQgaWR4ID0gMiAqIGk7XG4gICAgaWYgKGF0dHJTY29yZVsyICogaV0gPCBhdHRyU2NvcmVbMiAqIGkgKyAxXSkge1xuICAgICAgaWR4ID0gMiAqIGkgKyAxO1xuICAgIH1cbiAgICBjb25zdCBzcmNZID0gYXR0cmFjdG9yc1tpZHhdO1xuICAgIGNvbnN0IHRndCA9IGJveC52ZXJ0aWNlcy5maWx0ZXIodiA9PiB2LnkgPT0gZWRnZXNbaWR4XSlbMF07XG4gICAgY29uc3Qgc2lnbiA9ICh0Z3QueSA+IHNyY1kpID8gLTEgOiAxO1xuICAgIGNvbnN0IGRpc3QgPSBNYXRoLmFicyh0Z3QueSAtIHNyY1kpO1xuICAgIGNvbnN0IGZvcmNlWSA9IHNpZ24gKiAod29ybGQuYWxpZ25tZW50Rm9yY2VDb2VmZiAqIGRpc3QgKyB3b3JsZC5hbGlnbm1lbnRGb3JjZU9mZnNldCk7XG4gICAgTWF0dGVyLkJvZHkuYXBwbHlGb3JjZShib3gsIHRndCwgeyB4OiAwLCB5OiBmb3JjZVkgfSk7XG4gIH1cbn1cblxuXG5leHBvcnQgY29uc3QgYXBwbHlBbGlnbm1lbnQgPSAod29ybGQ6IFdvcmxkRXh0ZW5kZWQsIGJsb2NrczogTWF0dGVyLkJvZHlbXSkgPT4ge1xuICAvLyBjb25zdCBib3hlcyA9IGJsb2Nrcy5zbGljZSgwLCBibG9ja3MubGVuZ3RoIC0gNCk7XG4gIGFwcGx5Qm94ZXNBbGlnbm1lbnRYKHdvcmxkLCBibG9ja3MpO1xuICBhcHBseUJveGVzQWxpZ25tZW50WSh3b3JsZCwgYmxvY2tzKTtcbn1cbiIsIi8qXG5CaW5hcnkgU2VhcmNoXG4qL1xuXG5leHBvcnQgY29uc3QgbWVndXJ1ID0gKHhzOiBudW1iZXJbXSwgZjogKCh4OiBudW1iZXIpID0+IGJvb2xlYW4pKTogbnVtYmVyID0+IHtcbiAgLy8gbWVndXJ1LWxpa2VcbiAgLy8gaHR0cHM6Ly9xaWl0YS5jb20vaGFta28vaXRlbXMvNzk0YTkyYzQ1NjE2NGRjYzA0YWRcbiAgbGV0IG5nID0gLTE7XG4gIGxldCBvayA9IHhzLmxlbmd0aDtcbiAgd2hpbGUgKG9rIC0gbmcgPiAxKSB7XG4gICAgbGV0IG1pZCA9IE1hdGgudHJ1bmMoKG5nICsgb2spIC8gMik7XG4gICAgaWYgKGYobWlkKSkge1xuICAgICAgb2sgPSBtaWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5nID0gbWlkO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvaztcbn1cblxuZXhwb3J0IGNvbnN0IGJpc2VjdCA9ICh4czogbnVtYmVyW10sIHRhcmdldDogbnVtYmVyKTogbnVtYmVyID0+IHtcbiAgcmV0dXJuIG1lZ3VydSh4cywgKGkpID0+ICh4c1tpXSA+PSB0YXJnZXQpKTtcbn1cblxuXG5leHBvcnQgY29uc3QgYmlzZWN0TGVmdCA9ICh4czogbnVtYmVyW10sIHRhcmdldDogbnVtYmVyKTogbnVtYmVyID0+IHtcbiAgcmV0dXJuIG1lZ3VydSh4cywgKGkpID0+ICh4c1tpXSA+IHRhcmdldCkpO1xufVxuIiwiLyohIHA1LmpzIHYxLjEuOSBKdWx5IDIyLCAyMDIwICovXG5cbiFmdW5jdGlvbihlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGUpO2Vsc2V7KFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OlwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcykucDU9ZSgpfX0oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24gbyhpLHMsbCl7ZnVuY3Rpb24gcCh0LGUpe2lmKCFzW3RdKXtpZighaVt0XSl7dmFyIHI9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZSYmcilyZXR1cm4gcih0LCEwKTtpZih1KXJldHVybiB1KHQsITApO3ZhciBuPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrdCtcIidcIik7dGhyb3cgbi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLG59dmFyIGE9c1t0XT17ZXhwb3J0czp7fX07aVt0XVswXS5jYWxsKGEuZXhwb3J0cyxmdW5jdGlvbihlKXtyZXR1cm4gcChpW3RdWzFdW2VdfHxlKX0sYSxhLmV4cG9ydHMsbyxpLHMsbCl9cmV0dXJuIHNbdF0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxlPTA7ZTxsLmxlbmd0aDtlKyspcChsW2VdKTtyZXR1cm4gcH0oezE6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e3A1OnthbHBoYTp7bmFtZTpcImFscGhhXCIscGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246JzxwPjxhIGhyZWY9XCIjL3A1LkNvbG9yXCI+cDUuQ29sb3I8L2E+IG9iamVjdCwgY29sb3IgY29tcG9uZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgQ1NTIGNvbG9yPC9wPlxcbicsdHlwZTpcInA1LkNvbG9yfE51bWJlcltdfFN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LGJsdWU6e25hbWU6XCJibHVlXCIscGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246JzxwPjxhIGhyZWY9XCIjL3A1LkNvbG9yXCI+cDUuQ29sb3I8L2E+IG9iamVjdCwgY29sb3IgY29tcG9uZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgQ1NTIGNvbG9yPC9wPlxcbicsdHlwZTpcInA1LkNvbG9yfE51bWJlcltdfFN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LGJyaWdodG5lc3M6e25hbWU6XCJicmlnaHRuZXNzXCIscGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246JzxwPjxhIGhyZWY9XCIjL3A1LkNvbG9yXCI+cDUuQ29sb3I8L2E+IG9iamVjdCwgY29sb3IgY29tcG9uZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgQ1NTIGNvbG9yPC9wPlxcbicsdHlwZTpcInA1LkNvbG9yfE51bWJlcltdfFN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LGNvbG9yOntuYW1lOlwiY29sb3JcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29sb3JcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiZ3JheVwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIHNwZWNpZnlpbmcgdmFsdWUgYmV0d2VlbiB3aGl0ZSBhbmQgYmxhY2suPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbHBoYVwiLGRlc2NyaXB0aW9uOlwiPHA+YWxwaGEgdmFsdWUgcmVsYXRpdmUgdG8gY3VycmVudCBjb2xvciByYW5nZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGRlZmF1bHQgaXMgMC0yNTUpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCI8cD5yZWQgb3IgaHVlIHZhbHVlIHJlbGF0aXZlIHRvXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIjxwPmdyZWVuIG9yIHNhdHVyYXRpb24gdmFsdWVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiPHA+Ymx1ZSBvciBicmlnaHRuZXNzIHZhbHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYWxwaGFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5hIGNvbG9yIHN0cmluZzwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XX0se3BhcmFtczpbe25hbWU6XCJ2YWx1ZXNcIixkZXNjcmlwdGlvbjpcIjxwPmFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHJlZCxncmVlbixibHVlICZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBhbHBoYSBjb21wb25lbnRzIG9mIHRoZSBjb2xvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyW11cIn1dfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuQ29sb3JcIn1dfV19LGdyZWVuOntuYW1lOlwiZ3JlZW5cIixwYXJhbXM6W3tuYW1lOlwiY29sb3JcIixkZXNjcmlwdGlvbjonPHA+PGEgaHJlZj1cIiMvcDUuQ29sb3JcIj5wNS5Db2xvcjwvYT4gb2JqZWN0LCBjb2xvciBjb21wb25lbnRzLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBDU1MgY29sb3I8L3A+XFxuJyx0eXBlOlwicDUuQ29sb3J8TnVtYmVyW118U3RyaW5nXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29sb3JcIn0saHVlOntuYW1lOlwiaHVlXCIscGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246JzxwPjxhIGhyZWY9XCIjL3A1LkNvbG9yXCI+cDUuQ29sb3I8L2E+IG9iamVjdCwgY29sb3IgY29tcG9uZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgQ1NTIGNvbG9yPC9wPlxcbicsdHlwZTpcInA1LkNvbG9yfE51bWJlcltdfFN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LGxlcnBDb2xvcjp7bmFtZTpcImxlcnBDb2xvclwiLHBhcmFtczpbe25hbWU6XCJjMVwiLGRlc2NyaXB0aW9uOlwiPHA+aW50ZXJwb2xhdGUgZnJvbSB0aGlzIGNvbG9yPC9wPlxcblwiLHR5cGU6XCJwNS5Db2xvclwifSx7bmFtZTpcImMyXCIsZGVzY3JpcHRpb246XCI8cD5pbnRlcnBvbGF0ZSB0byB0aGlzIGNvbG9yPC9wPlxcblwiLHR5cGU6XCJwNS5Db2xvclwifSx7bmFtZTpcImFtdFwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIGJldHdlZW4gMCBhbmQgMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29sb3JcIn0sbGlnaHRuZXNzOntuYW1lOlwibGlnaHRuZXNzXCIscGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246JzxwPjxhIGhyZWY9XCIjL3A1LkNvbG9yXCI+cDUuQ29sb3I8L2E+IG9iamVjdCwgY29sb3IgY29tcG9uZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgQ1NTIGNvbG9yPC9wPlxcbicsdHlwZTpcInA1LkNvbG9yfE51bWJlcltdfFN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LHJlZDp7bmFtZTpcInJlZFwiLHBhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOic8cD48YSBocmVmPVwiIy9wNS5Db2xvclwiPnA1LkNvbG9yPC9hPiBvYmplY3QsIGNvbG9yIGNvbXBvbmVudHMsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIENTUyBjb2xvcjwvcD5cXG4nLHR5cGU6XCJwNS5Db2xvcnxOdW1iZXJbXXxTdHJpbmdcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb2xvclwifSxzYXR1cmF0aW9uOntuYW1lOlwic2F0dXJhdGlvblwiLHBhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOic8cD48YSBocmVmPVwiIy9wNS5Db2xvclwiPnA1LkNvbG9yPC9hPiBvYmplY3QsIGNvbG9yIGNvbXBvbmVudHMsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIENTUyBjb2xvcjwvcD5cXG4nLHR5cGU6XCJwNS5Db2xvcnxOdW1iZXJbXXxTdHJpbmdcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb2xvclwifSxiYWNrZ3JvdW5kOntuYW1lOlwiYmFja2dyb3VuZFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb2xvclwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOic8cD5hbnkgdmFsdWUgY3JlYXRlZCBieSB0aGUgPGEgaHJlZj1cIiMvcDUvY29sb3JcIj5jb2xvcigpPC9hPiBmdW5jdGlvbjwvcD5cXG4nLHR5cGU6XCJwNS5Db2xvclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiY29sb3JzdHJpbmdcIixkZXNjcmlwdGlvbjpcIjxwPmNvbG9yIHN0cmluZywgcG9zc2libGUgZm9ybWF0cyBpbmNsdWRlOiBpbnRlZ2VyXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmdiKCkgb3IgcmdiYSgpLCBwZXJjZW50YWdlIHJnYigpIG9yIHJnYmEoKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAzLWRpZ2l0IGhleCwgNi1kaWdpdCBoZXg8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImFcIixkZXNjcmlwdGlvbjpcIjxwPm9wYWNpdHkgb2YgdGhlIGJhY2tncm91bmQgcmVsYXRpdmUgdG8gY3VycmVudFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvciByYW5nZSAoZGVmYXVsdCBpcyAwLTI1NSk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiZ3JheVwiLGRlc2NyaXB0aW9uOlwiPHA+c3BlY2lmaWVzIGEgdmFsdWUgYmV0d2VlbiB3aGl0ZSBhbmQgYmxhY2s8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCI8cD5yZWQgb3IgaHVlIHZhbHVlIChkZXBlbmRpbmcgb24gdGhlIGN1cnJlbnQgY29sb3JcXG4gICAgICAgICAgICAgICAgICAgICAgIG1vZGUpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiPHA+Z3JlZW4gb3Igc2F0dXJhdGlvbiB2YWx1ZSAoZGVwZW5kaW5nIG9uIHRoZSBjdXJyZW50XFxuICAgICAgICAgICAgICAgICAgICAgICBjb2xvciBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjNcIixkZXNjcmlwdGlvbjpcIjxwPmJsdWUgb3IgYnJpZ2h0bmVzcyB2YWx1ZSAoZGVwZW5kaW5nIG9uIHRoZSBjdXJyZW50XFxuICAgICAgICAgICAgICAgICAgICAgICBjb2xvciBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVzXCIsZGVzY3JpcHRpb246XCI8cD5hbiBhcnJheSBjb250YWluaW5nIHRoZSByZWQsIGdyZWVuLCBibHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgYWxwaGEgY29tcG9uZW50cyBvZiB0aGUgY29sb3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlcltdXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJpbWFnZVwiLGRlc2NyaXB0aW9uOic8cD5pbWFnZSBjcmVhdGVkIHdpdGggPGEgaHJlZj1cIiMvcDUvbG9hZEltYWdlXCI+bG9hZEltYWdlKCk8L2E+IG9yIDxhIGhyZWY9XCIjL3A1L2NyZWF0ZUltYWdlXCI+Y3JlYXRlSW1hZ2UoKTwvYT4sXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHNldCBhcyBiYWNrZ3JvdW5kXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtdXN0IGJlIHNhbWUgc2l6ZSBhcyB0aGUgc2tldGNoIHdpbmRvdyk8L3A+XFxuJyx0eXBlOlwicDUuSW1hZ2VcIn0se25hbWU6XCJhXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX1dfSxjbGVhcjp7bmFtZTpcImNsZWFyXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LGNvbG9yTW9kZTp7bmFtZTpcImNvbG9yTW9kZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb2xvclwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJtb2RlXCIsZGVzY3JpcHRpb246XCI8cD5laXRoZXIgUkdCLCBIU0Igb3IgSFNMLCBjb3JyZXNwb25kaW5nIHRvXFxuICAgICAgICAgICAgICAgICAgICAgICAgIFJlZC9HcmVlbi9CbHVlIGFuZCBIdWUvU2F0dXJhdGlvbi9CcmlnaHRuZXNzXFxuICAgICAgICAgICAgICAgICAgICAgICAgIChvciBMaWdodG5lc3MpPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwifSx7bmFtZTpcIm1heFwiLGRlc2NyaXB0aW9uOlwiPHA+cmFuZ2UgZm9yIGFsbCB2YWx1ZXM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwibW9kZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkNvbnN0YW50XCJ9LHtuYW1lOlwibWF4MVwiLGRlc2NyaXB0aW9uOlwiPHA+cmFuZ2UgZm9yIHRoZSByZWQgb3IgaHVlIGRlcGVuZGluZyBvbiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgY29sb3IgbW9kZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibWF4MlwiLGRlc2NyaXB0aW9uOlwiPHA+cmFuZ2UgZm9yIHRoZSBncmVlbiBvciBzYXR1cmF0aW9uIGRlcGVuZGluZ1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb24gdGhlIGN1cnJlbnQgY29sb3IgbW9kZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibWF4M1wiLGRlc2NyaXB0aW9uOlwiPHA+cmFuZ2UgZm9yIHRoZSBibHVlIG9yIGJyaWdodG5lc3MvbGlnaHRuZXNzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXBlbmRpbmcgb24gdGhlIGN1cnJlbnQgY29sb3IgbW9kZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibWF4QVwiLGRlc2NyaXB0aW9uOlwiPHA+cmFuZ2UgZm9yIHRoZSBhbHBoYTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX1dfSxmaWxsOntuYW1lOlwiZmlsbFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb2xvclwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOlwiPHA+cmVkIG9yIGh1ZSB2YWx1ZSByZWxhdGl2ZSB0b1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGN1cnJlbnQgY29sb3IgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246XCI8cD5ncmVlbiBvciBzYXR1cmF0aW9uIHZhbHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjNcIixkZXNjcmlwdGlvbjpcIjxwPmJsdWUgb3IgYnJpZ2h0bmVzcyB2YWx1ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgY29sb3IgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImFscGhhXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+YSBjb2xvciBzdHJpbmc8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiZ3JheVwiLGRlc2NyaXB0aW9uOlwiPHA+YSBncmF5IHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbHBoYVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVzXCIsZGVzY3JpcHRpb246XCI8cD5hbiBhcnJheSBjb250YWluaW5nIHRoZSByZWQsZ3JlZW4sYmx1ZSAmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgYWxwaGEgY29tcG9uZW50cyBvZiB0aGUgY29sb3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlcltdXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGZpbGwgY29sb3I8L3A+XFxuXCIsdHlwZTpcInA1LkNvbG9yXCJ9XSxjaGFpbmFibGU6MX1dfSxub0ZpbGw6e25hbWU6XCJub0ZpbGxcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29sb3JcIn0sbm9TdHJva2U6e25hbWU6XCJub1N0cm9rZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb2xvclwifSxzdHJva2U6e25hbWU6XCJzdHJva2VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29sb3JcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIjxwPnJlZCBvciBodWUgdmFsdWUgcmVsYXRpdmUgdG9cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiPHA+Z3JlZW4gb3Igc2F0dXJhdGlvbiB2YWx1ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgY29sb3IgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYzXCIsZGVzY3JpcHRpb246XCI8cD5ibHVlIG9yIGJyaWdodG5lc3MgdmFsdWVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbHBoYVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPmEgY29sb3Igc3RyaW5nPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImdyYXlcIixkZXNjcmlwdGlvbjpcIjxwPmEgZ3JheSB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYWxwaGFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlc1wiLGRlc2NyaXB0aW9uOlwiPHA+YW4gYXJyYXkgY29udGFpbmluZyB0aGUgcmVkLGdyZWVuLGJsdWUgJlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIGFscGhhIGNvbXBvbmVudHMgb2YgdGhlIGNvbG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJbXVwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiY29sb3JcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBzdHJva2UgY29sb3I8L3A+XFxuXCIsdHlwZTpcInA1LkNvbG9yXCJ9XSxjaGFpbmFibGU6MX1dfSxlcmFzZTp7bmFtZTpcImVyYXNlXCIscGFyYW1zOlt7bmFtZTpcInN0cmVuZ3RoRmlsbFwiLGRlc2NyaXB0aW9uOlwiPHA+QSBudW1iZXIgKDAtMjU1KSBmb3IgdGhlIHN0cmVuZ3RoIG9mIGVyYXNpbmcgZm9yIGEgc2hhcGUncyBmaWxsLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoaXMgd2lsbCBkZWZhdWx0IHRvIDI1NSB3aGVuIG5vIGFyZ3VtZW50IGlzIGdpdmVuLCB3aGljaFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGZ1bGwgc3RyZW5ndGguPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJzdHJlbmd0aFN0cm9rZVwiLGRlc2NyaXB0aW9uOlwiPHA+QSBudW1iZXIgKDAtMjU1KSBmb3IgdGhlIHN0cmVuZ3RoIG9mIGVyYXNpbmcgZm9yIGEgc2hhcGUncyBzdHJva2UuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyB3aWxsIGRlZmF1bHQgdG8gMjU1IHdoZW4gbm8gYXJndW1lbnQgaXMgZ2l2ZW4sIHdoaWNoXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXMgZnVsbCBzdHJlbmd0aC48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LG5vRXJhc2U6e25hbWU6XCJub0VyYXNlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbG9yXCJ9LGFyYzp7bmFtZTpcImFyY1wiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIGFyYydzIGVsbGlwc2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgYXJjJ3MgZWxsaXBzZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiPHA+d2lkdGggb2YgdGhlIGFyYydzIGVsbGlwc2UgYnkgZGVmYXVsdDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiaFwiLGRlc2NyaXB0aW9uOlwiPHA+aGVpZ2h0IG9mIHRoZSBhcmMncyBlbGxpcHNlIGJ5IGRlZmF1bHQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInN0YXJ0XCIsZGVzY3JpcHRpb246XCI8cD5hbmdsZSB0byBzdGFydCB0aGUgYXJjLCBzcGVjaWZpZWQgaW4gcmFkaWFuczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwic3RvcFwiLGRlc2NyaXB0aW9uOlwiPHA+YW5nbGUgdG8gc3RvcCB0aGUgYXJjLCBzcGVjaWZpZWQgaW4gcmFkaWFuczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibW9kZVwiLGRlc2NyaXB0aW9uOlwiPHA+b3B0aW9uYWwgcGFyYW1ldGVyIHRvIGRldGVybWluZSB0aGUgd2F5IG9mIGRyYXdpbmdcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGUgYXJjLiBlaXRoZXIgQ0hPUkQsIFBJRSBvciBPUEVOPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFwiLGRlc2NyaXB0aW9uOlwiPHA+b3B0aW9uYWwgcGFyYW1ldGVyIGZvciBXZWJHTCBtb2RlIG9ubHkuIFRoaXMgaXMgdG9cXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGVjaWZ5IHRoZSBudW1iZXIgb2YgdmVydGljZXMgdGhhdCBtYWtlcyB1cCB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICBwZXJpbWV0ZXIgb2YgdGhlIGFyYy4gRGVmYXVsdCB2YWx1ZSBpcyAyNS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LGVsbGlwc2U6e25hbWU6XCJlbGxpcHNlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBvZiB0aGUgY2VudGVyIG9mIGVsbGlwc2UuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgb2YgdGhlIGNlbnRlciBvZiBlbGxpcHNlLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiPHA+d2lkdGggb2YgdGhlIGVsbGlwc2UuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJoXCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQgb2YgdGhlIGVsbGlwc2UuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkZXRhaWxcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiByYWRpYWwgc2VjdG9ycyB0byBkcmF3IChmb3IgV2ViR0wgbW9kZSk8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn1dfV19LGNpcmNsZTp7bmFtZTpcImNpcmNsZVwiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIGNlbnRyZSBvZiB0aGUgY2lyY2xlLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIG9mIHRoZSBjZW50cmUgb2YgdGhlIGNpcmNsZS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImRcIixkZXNjcmlwdGlvbjpcIjxwPmRpYW1ldGVyIG9mIHRoZSBjaXJjbGUuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxsaW5lOntuYW1lOlwibGluZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHgtY29vcmRpbmF0ZSBvZiB0aGUgZmlyc3QgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkxXCIsZGVzY3JpcHRpb246XCI8cD50aGUgeS1jb29yZGluYXRlIG9mIHRoZSBmaXJzdCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDJcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTJcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB6LWNvb3JkaW5hdGUgb2YgdGhlIGZpcnN0IHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkyXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejJcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB6LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX1dfSxwb2ludDp7bmFtZTpcInBvaW50XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4LWNvb3JkaW5hdGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5LWNvb3JkaW5hdGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInpcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB6LWNvb3JkaW5hdGUgKGZvciBXZWJHTCBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjb29yZGluYXRlX3ZlY3RvclwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGNvb3JkaW5hdGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJwNS5WZWN0b3JcIn1dLGNoYWluYWJsZToxfV19LHF1YWQ6e25hbWU6XCJxdWFkXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIngxXCIsZGVzY3JpcHRpb246XCI8cD50aGUgeC1jb29yZGluYXRlIG9mIHRoZSBmaXJzdCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5LWNvb3JkaW5hdGUgb2YgdGhlIGZpcnN0IHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4MlwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHgtY29vcmRpbmF0ZSBvZiB0aGUgc2Vjb25kIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5MlwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHktY29vcmRpbmF0ZSBvZiB0aGUgc2Vjb25kIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4M1wiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHgtY29vcmRpbmF0ZSBvZiB0aGUgdGhpcmQgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkzXCIsZGVzY3JpcHRpb246XCI8cD50aGUgeS1jb29yZGluYXRlIG9mIHRoZSB0aGlyZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4LWNvb3JkaW5hdGUgb2YgdGhlIGZvdXJ0aCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5LWNvb3JkaW5hdGUgb2YgdGhlIGZvdXJ0aCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB6LWNvb3JkaW5hdGUgb2YgdGhlIGZpcnN0IHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkyXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejJcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB6LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5M1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInozXCIsZGVzY3JpcHRpb246XCI8cD50aGUgei1jb29yZGluYXRlIG9mIHRoZSB0aGlyZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5NFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIno0XCIsZGVzY3JpcHRpb246XCI8cD50aGUgei1jb29yZGluYXRlIG9mIHRoZSBmb3VydGggcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9XX0scmVjdDp7bmFtZTpcInJlY3RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSByZWN0YW5nbGUuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgb2YgdGhlIHJlY3RhbmdsZS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIndcIixkZXNjcmlwdGlvbjpcIjxwPndpZHRoIG9mIHRoZSByZWN0YW5nbGUuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJoXCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQgb2YgdGhlIHJlY3RhbmdsZS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRsXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCByYWRpdXMgb2YgdG9wLWxlZnQgY29ybmVyLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidHJcIixkZXNjcmlwdGlvbjpcIjxwPm9wdGlvbmFsIHJhZGl1cyBvZiB0b3AtcmlnaHQgY29ybmVyLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiYnJcIixkZXNjcmlwdGlvbjpcIjxwPm9wdGlvbmFsIHJhZGl1cyBvZiBib3R0b20tcmlnaHQgY29ybmVyLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiYmxcIixkZXNjcmlwdGlvbjpcIjxwPm9wdGlvbmFsIHJhZGl1cyBvZiBib3R0b20tbGVmdCBjb3JuZXIuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkZXRhaWxYXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2Ygc2VnbWVudHMgaW4gdGhlIHgtZGlyZWN0aW9uIChmb3IgV2ViR0wgbW9kZSk8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkZXRhaWxZXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2Ygc2VnbWVudHMgaW4gdGhlIHktZGlyZWN0aW9uIChmb3IgV2ViR0wgbW9kZSk8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfV19LHNxdWFyZTp7bmFtZTpcInNxdWFyZVwiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIHNxdWFyZS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgc3F1YXJlLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwic1wiLGRlc2NyaXB0aW9uOlwiPHA+c2lkZSBzaXplIG9mIHRoZSBzcXVhcmUuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ0bFwiLGRlc2NyaXB0aW9uOlwiPHA+b3B0aW9uYWwgcmFkaXVzIG9mIHRvcC1sZWZ0IGNvcm5lci48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRyXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCByYWRpdXMgb2YgdG9wLXJpZ2h0IGNvcm5lci48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImJyXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCByYWRpdXMgb2YgYm90dG9tLXJpZ2h0IGNvcm5lci48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImJsXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCByYWRpdXMgb2YgYm90dG9tLWxlZnQgY29ybmVyLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sdHJpYW5nbGU6e25hbWU6XCJ0cmlhbmdsZVwiLHBhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSBmaXJzdCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTFcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgZmlyc3QgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIngyXCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTJcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgc2Vjb25kIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4M1wiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSB0aGlyZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTNcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgdGhpcmQgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LGVsbGlwc2VNb2RlOntuYW1lOlwiZWxsaXBzZU1vZGVcIixwYXJhbXM6W3tuYW1lOlwibW9kZVwiLGRlc2NyaXB0aW9uOlwiPHA+ZWl0aGVyIENFTlRFUiwgUkFESVVTLCBDT1JORVIsIG9yIENPUk5FUlM8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sbm9TbW9vdGg6e25hbWU6XCJub1Ntb290aFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxyZWN0TW9kZTp7bmFtZTpcInJlY3RNb2RlXCIscGFyYW1zOlt7bmFtZTpcIm1vZGVcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBDT1JORVIsIENPUk5FUlMsIENFTlRFUiwgb3IgUkFESVVTPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LHNtb290aDp7bmFtZTpcInNtb290aFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxzdHJva2VDYXA6e25hbWU6XCJzdHJva2VDYXBcIixwYXJhbXM6W3tuYW1lOlwiY2FwXCIsZGVzY3JpcHRpb246XCI8cD5laXRoZXIgUk9VTkQsIFNRVUFSRSBvciBQUk9KRUNUPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LHN0cm9rZUpvaW46e25hbWU6XCJzdHJva2VKb2luXCIscGFyYW1zOlt7bmFtZTpcImpvaW5cIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBNSVRFUiwgQkVWRUwsIFJPVU5EPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LHN0cm9rZVdlaWdodDp7bmFtZTpcInN0cm9rZVdlaWdodFwiLHBhcmFtczpbe25hbWU6XCJ3ZWlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB3ZWlnaHQgb2YgdGhlIHN0cm9rZSAoaW4gcGl4ZWxzKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sYmV6aWVyOntuYW1lOlwiYmV6aWVyXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIngxXCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgZm9yIHRoZSBmaXJzdCBhbmNob3IgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkxXCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgZm9yIHRoZSBmaXJzdCBhbmNob3IgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIngyXCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgZm9yIHRoZSBmaXJzdCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5MlwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIGZvciB0aGUgZmlyc3QgY29udHJvbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDNcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBmb3IgdGhlIHNlY29uZCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5M1wiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIGZvciB0aGUgc2Vjb25kIGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIng0XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgZm9yIHRoZSBzZWNvbmQgYW5jaG9yIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5NFwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIGZvciB0aGUgc2Vjb25kIGFuY2hvciBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejFcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIGZpcnN0IGFuY2hvciBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDJcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInoyXCIsZGVzY3JpcHRpb246XCI8cD56LWNvb3JkaW5hdGUgZm9yIHRoZSBmaXJzdCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4M1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkzXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejNcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIHNlY29uZCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4NFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInk0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejRcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIHNlY29uZCBhbmNob3IgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9XX0sYmV6aWVyRGV0YWlsOntuYW1lOlwiYmV6aWVyRGV0YWlsXCIscGFyYW1zOlt7bmFtZTpcImRldGFpbFwiLGRlc2NyaXB0aW9uOlwiPHA+cmVzb2x1dGlvbiBvZiB0aGUgY3VydmVzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxiZXppZXJQb2ludDp7bmFtZTpcImJlemllclBvaW50XCIscGFyYW1zOlt7bmFtZTpcImFcIixkZXNjcmlwdGlvbjpcIjxwPmNvb3JkaW5hdGUgb2YgZmlyc3QgcG9pbnQgb24gdGhlIGN1cnZlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJiXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIGZpcnN0IGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImNcIixkZXNjcmlwdGlvbjpcIjxwPmNvb3JkaW5hdGUgb2Ygc2Vjb25kIGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImRcIixkZXNjcmlwdGlvbjpcIjxwPmNvb3JkaW5hdGUgb2Ygc2Vjb25kIHBvaW50IG9uIHRoZSBjdXJ2ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidFwiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWUgYmV0d2VlbiAwIGFuZCAxPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxiZXppZXJUYW5nZW50OntuYW1lOlwiYmV6aWVyVGFuZ2VudFwiLHBhcmFtczpbe25hbWU6XCJhXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIGZpcnN0IHBvaW50IG9uIHRoZSBjdXJ2ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYlwiLGRlc2NyaXB0aW9uOlwiPHA+Y29vcmRpbmF0ZSBvZiBmaXJzdCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJjXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIHNlY29uZCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIHNlY29uZCBwb2ludCBvbiB0aGUgY3VydmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIGJldHdlZW4gMCBhbmQgMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sY3VydmU6e25hbWU6XCJjdXJ2ZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIGZvciB0aGUgYmVnaW5uaW5nIGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkxXCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgZm9yIHRoZSBiZWdpbm5pbmcgY29udHJvbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDJcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBmb3IgdGhlIGZpcnN0IHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5MlwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIGZvciB0aGUgZmlyc3QgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIngzXCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgZm9yIHRoZSBzZWNvbmQgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkzXCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgZm9yIHRoZSBzZWNvbmQgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIng0XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgZm9yIHRoZSBlbmRpbmcgY29udHJvbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTRcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBmb3IgdGhlIGVuZGluZyBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcIngxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6MVwiLGRlc2NyaXB0aW9uOlwiPHA+ei1jb29yZGluYXRlIGZvciB0aGUgYmVnaW5uaW5nIGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIngyXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTJcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6MlwiLGRlc2NyaXB0aW9uOlwiPHA+ei1jb29yZGluYXRlIGZvciB0aGUgZmlyc3QgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIngzXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6M1wiLGRlc2NyaXB0aW9uOlwiPHA+ei1jb29yZGluYXRlIGZvciB0aGUgc2Vjb25kIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4NFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInk0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejRcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIGVuZGluZyBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfV19LGN1cnZlRGV0YWlsOntuYW1lOlwiY3VydmVEZXRhaWxcIixwYXJhbXM6W3tuYW1lOlwicmVzb2x1dGlvblwiLGRlc2NyaXB0aW9uOlwiPHA+cmVzb2x1dGlvbiBvZiB0aGUgY3VydmVzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxjdXJ2ZVRpZ2h0bmVzczp7bmFtZTpcImN1cnZlVGlnaHRuZXNzXCIscGFyYW1zOlt7bmFtZTpcImFtb3VudFwiLGRlc2NyaXB0aW9uOlwiPHA+YW1vdW50IG9mIGRlZm9ybWF0aW9uIGZyb20gdGhlIG9yaWdpbmFsIHZlcnRpY2VzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxjdXJ2ZVBvaW50OntuYW1lOlwiY3VydmVQb2ludFwiLHBhcmFtczpbe25hbWU6XCJhXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIGZpcnN0IGNvbnRyb2wgcG9pbnQgb2YgdGhlIGN1cnZlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJiXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIGZpcnN0IHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJjXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiZFwiLGRlc2NyaXB0aW9uOlwiPHA+Y29vcmRpbmF0ZSBvZiBzZWNvbmQgY29udHJvbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidFwiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWUgYmV0d2VlbiAwIGFuZCAxPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxjdXJ2ZVRhbmdlbnQ6e25hbWU6XCJjdXJ2ZVRhbmdlbnRcIixwYXJhbXM6W3tuYW1lOlwiYVwiLGRlc2NyaXB0aW9uOlwiPHA+Y29vcmRpbmF0ZSBvZiBmaXJzdCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJiXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIGZpcnN0IHBvaW50IG9uIHRoZSBjdXJ2ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiY1wiLGRlc2NyaXB0aW9uOlwiPHA+Y29vcmRpbmF0ZSBvZiBzZWNvbmQgcG9pbnQgb24gdGhlIGN1cnZlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkXCIsZGVzY3JpcHRpb246XCI8cD5jb29yZGluYXRlIG9mIHNlY29uZCBjb25yb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIGJldHdlZW4gMCBhbmQgMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sYmVnaW5Db250b3VyOntuYW1lOlwiYmVnaW5Db250b3VyXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LGJlZ2luU2hhcGU6e25hbWU6XCJiZWdpblNoYXBlXCIscGFyYW1zOlt7bmFtZTpcImtpbmRcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBQT0lOVFMsIExJTkVTLCBUUklBTkdMRVMsIFRSSUFOR0xFX0ZBTlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUUklBTkdMRV9TVFJJUCwgUVVBRFMsIFFVQURfU1RSSVAgb3IgVEVTUzwvcD5cXG5cIix0eXBlOlwiQ29uc3RhbnRcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxiZXppZXJWZXJ0ZXg6e25hbWU6XCJiZXppZXJWZXJ0ZXhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwieDJcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBmb3IgdGhlIGZpcnN0IGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkyXCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgZm9yIHRoZSBmaXJzdCBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4M1wiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIGZvciB0aGUgc2Vjb25kIGNvbnRyb2wgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkzXCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgZm9yIHRoZSBzZWNvbmQgY29udHJvbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDRcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBmb3IgdGhlIGFuY2hvciBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTRcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBmb3IgdGhlIGFuY2hvciBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ4MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInkyXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejJcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIGZpcnN0IGNvbnRyb2wgcG9pbnQgKGZvciBXZWJHTCBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5M1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInozXCIsZGVzY3JpcHRpb246XCI8cD56LWNvb3JkaW5hdGUgZm9yIHRoZSBzZWNvbmQgY29udHJvbCBwb2ludCAoZm9yIFdlYkdMIG1vZGUpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4NFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInk0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiejRcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIGFuY2hvciBwb2ludCAoZm9yIFdlYkdMIG1vZGUpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfV19LGN1cnZlVmVydGV4OntuYW1lOlwiY3VydmVWZXJ0ZXhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSB2ZXJ0ZXg8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgdmVydGV4PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+ei1jb29yZGluYXRlIG9mIHRoZSB2ZXJ0ZXggKGZvciBXZWJHTCBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX1dfSxlbmRDb250b3VyOntuYW1lOlwiZW5kQ29udG91clwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxlbmRTaGFwZTp7bmFtZTpcImVuZFNoYXBlXCIscGFyYW1zOlt7bmFtZTpcIm1vZGVcIixkZXNjcmlwdGlvbjpcIjxwPnVzZSBDTE9TRSB0byBjbG9zZSB0aGUgc2hhcGU8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0scXVhZHJhdGljVmVydGV4OntuYW1lOlwicXVhZHJhdGljVmVydGV4XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcImN4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgZm9yIHRoZSBjb250cm9sIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJjeVwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIGZvciB0aGUgY29udHJvbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDNcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBmb3IgdGhlIGFuY2hvciBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTNcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBmb3IgdGhlIGFuY2hvciBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImN5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiY3pcIixkZXNjcmlwdGlvbjpcIjxwPnotY29vcmRpbmF0ZSBmb3IgdGhlIGNvbnRyb2wgcG9pbnQgKGZvciBXZWJHTCBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5M1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInozXCIsZGVzY3JpcHRpb246XCI8cD56LWNvb3JkaW5hdGUgZm9yIHRoZSBhbmNob3IgcG9pbnQgKGZvciBXZWJHTCBtb2RlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX1dfSx2ZXJ0ZXg6e25hbWU6XCJ2ZXJ0ZXhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSB2ZXJ0ZXg8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgdmVydGV4PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+ei1jb29yZGluYXRlIG9mIHRoZSB2ZXJ0ZXg8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2ZXJ0ZXgncyB0ZXh0dXJlIHUtY29vcmRpbmF0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidlwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHZlcnRleCdzIHRleHR1cmUgdi1jb29yZGluYXRlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfV19LFAyRDp7bmFtZTpcIlAyRFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sV0VCR0w6e25hbWU6XCJXRUJHTFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQVJST1c6e25hbWU6XCJBUlJPV1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQ1JPU1M6e25hbWU6XCJDUk9TU1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sSEFORDp7bmFtZTpcIkhBTkRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LE1PVkU6e25hbWU6XCJNT1ZFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxURVhUOntuYW1lOlwiVEVYVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sV0FJVDp7bmFtZTpcIldBSVRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEhBTEZfUEk6e25hbWU6XCJIQUxGX1BJXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxQSTp7bmFtZTpcIlBJXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxRVUFSVEVSX1BJOntuYW1lOlwiUVVBUlRFUl9QSVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sVEFVOntuYW1lOlwiVEFVXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxUV09fUEk6e25hbWU6XCJUV09fUElcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LERFR1JFRVM6e25hbWU6XCJERUdSRUVTXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxSQURJQU5TOntuYW1lOlwiUkFESUFOU1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQ09STkVSOntuYW1lOlwiQ09STkVSXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxDT1JORVJTOntuYW1lOlwiQ09STkVSU1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUkFESVVTOntuYW1lOlwiUkFESVVTXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxSSUdIVDp7bmFtZTpcIlJJR0hUXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxMRUZUOntuYW1lOlwiTEVGVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQ0VOVEVSOntuYW1lOlwiQ0VOVEVSXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxUT1A6e25hbWU6XCJUT1BcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEJPVFRPTTp7bmFtZTpcIkJPVFRPTVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQkFTRUxJTkU6e25hbWU6XCJCQVNFTElORVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUE9JTlRTOntuYW1lOlwiUE9JTlRTXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxMSU5FUzp7bmFtZTpcIkxJTkVTXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxMSU5FX1NUUklQOntuYW1lOlwiTElORV9TVFJJUFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sTElORV9MT09QOntuYW1lOlwiTElORV9MT09QXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxUUklBTkdMRVM6e25hbWU6XCJUUklBTkdMRVNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LFRSSUFOR0xFX0ZBTjp7bmFtZTpcIlRSSUFOR0xFX0ZBTlwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sVFJJQU5HTEVfU1RSSVA6e25hbWU6XCJUUklBTkdMRV9TVFJJUFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUVVBRFM6e25hbWU6XCJRVUFEU1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUVVBRF9TVFJJUDp7bmFtZTpcIlFVQURfU1RSSVBcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LFRFU1M6e25hbWU6XCJURVNTXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxDTE9TRTp7bmFtZTpcIkNMT1NFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxPUEVOOntuYW1lOlwiT1BFTlwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQ0hPUkQ6e25hbWU6XCJDSE9SRFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUElFOntuYW1lOlwiUElFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxQUk9KRUNUOntuYW1lOlwiUFJPSkVDVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sU1FVQVJFOntuYW1lOlwiU1FVQVJFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxST1VORDp7bmFtZTpcIlJPVU5EXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxCRVZFTDp7bmFtZTpcIkJFVkVMXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxNSVRFUjp7bmFtZTpcIk1JVEVSXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxSR0I6e25hbWU6XCJSR0JcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEhTQjp7bmFtZTpcIkhTQlwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sSFNMOntuYW1lOlwiSFNMXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxBVVRPOntuYW1lOlwiQVVUT1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQUxUOntuYW1lOlwiQUxUXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxCQUNLU1BBQ0U6e25hbWU6XCJCQUNLU1BBQ0VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LENPTlRST0w6e25hbWU6XCJDT05UUk9MXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxERUxFVEU6e25hbWU6XCJERUxFVEVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LERPV05fQVJST1c6e25hbWU6XCJET1dOX0FSUk9XXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxFTlRFUjp7bmFtZTpcIkVOVEVSXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxFU0NBUEU6e25hbWU6XCJFU0NBUEVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LExFRlRfQVJST1c6e25hbWU6XCJMRUZUX0FSUk9XXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxPUFRJT046e25hbWU6XCJPUFRJT05cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LFJFVFVSTjp7bmFtZTpcIlJFVFVSTlwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUklHSFRfQVJST1c6e25hbWU6XCJSSUdIVF9BUlJPV1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sU0hJRlQ6e25hbWU6XCJTSElGVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sVEFCOntuYW1lOlwiVEFCXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxVUF9BUlJPVzp7bmFtZTpcIlVQX0FSUk9XXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxCTEVORDp7bmFtZTpcIkJMRU5EXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxSRU1PVkU6e25hbWU6XCJSRU1PVkVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEFERDp7bmFtZTpcIkFERFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sREFSS0VTVDp7bmFtZTpcIkRBUktFU1RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LExJR0hURVNUOntuYW1lOlwiTElHSFRFU1RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LERJRkZFUkVOQ0U6e25hbWU6XCJESUZGRVJFTkNFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxTVUJUUkFDVDp7bmFtZTpcIlNVQlRSQUNUXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxFWENMVVNJT046e25hbWU6XCJFWENMVVNJT05cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LE1VTFRJUExZOntuYW1lOlwiTVVMVElQTFlcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LFNDUkVFTjp7bmFtZTpcIlNDUkVFTlwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUkVQTEFDRTp7bmFtZTpcIlJFUExBQ0VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LE9WRVJMQVk6e25hbWU6XCJPVkVSTEFZXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxIQVJEX0xJR0hUOntuYW1lOlwiSEFSRF9MSUdIVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sU09GVF9MSUdIVDp7bmFtZTpcIlNPRlRfTElHSFRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LERPREdFOntuYW1lOlwiRE9ER0VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEJVUk46e25hbWU6XCJCVVJOXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxUSFJFU0hPTEQ6e25hbWU6XCJUSFJFU0hPTERcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEdSQVk6e25hbWU6XCJHUkFZXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxPUEFRVUU6e25hbWU6XCJPUEFRVUVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LElOVkVSVDp7bmFtZTpcIklOVkVSVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUE9TVEVSSVpFOntuYW1lOlwiUE9TVEVSSVpFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxESUxBVEU6e25hbWU6XCJESUxBVEVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEVST0RFOntuYW1lOlwiRVJPREVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEJMVVI6e25hbWU6XCJCTFVSXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxOT1JNQUw6e25hbWU6XCJOT1JNQUxcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LElUQUxJQzp7bmFtZTpcIklUQUxJQ1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQk9MRDp7bmFtZTpcIkJPTERcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEJPTERJVEFMSUM6e25hbWU6XCJCT0xESVRBTElDXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxMSU5FQVI6e25hbWU6XCJMSU5FQVJcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LFFVQURSQVRJQzp7bmFtZTpcIlFVQURSQVRJQ1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sQkVaSUVSOntuYW1lOlwiQkVaSUVSXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxDVVJWRTp7bmFtZTpcIkNVUlZFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxTVFJPS0U6e25hbWU6XCJTVFJPS0VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEZJTEw6e25hbWU6XCJGSUxMXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxURVhUVVJFOntuYW1lOlwiVEVYVFVSRVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sSU1NRURJQVRFOntuYW1lOlwiSU1NRURJQVRFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxJTUFHRTp7bmFtZTpcIklNQUdFXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxORUFSRVNUOntuYW1lOlwiTkVBUkVTVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUkVQRUFUOntuYW1lOlwiUkVQRUFUXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxDTEFNUDp7bmFtZTpcIkNMQU1QXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxNSVJST1I6e25hbWU6XCJNSVJST1JcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LExBTkRTQ0FQRTp7bmFtZTpcIkxBTkRTQ0FQRVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sUE9SVFJBSVQ6e25hbWU6XCJQT1JUUkFJVFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJDb25zdGFudHNcIn0sR1JJRDp7bmFtZTpcIkdSSURcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiQ29uc3RhbnRzXCJ9LEFYRVM6e25hbWU6XCJBWEVTXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkNvbnN0YW50c1wifSxwcmludDp7bmFtZTpcInByaW50XCIscGFyYW1zOlt7bmFtZTpcImNvbnRlbnRzXCIsZGVzY3JpcHRpb246XCI8cD5hbnkgY29tYmluYXRpb24gb2YgTnVtYmVyLCBTdHJpbmcsIE9iamVjdCwgQm9vbGVhbixcXG4gICAgICAgICAgICAgICAgICAgICAgQXJyYXkgdG8gcHJpbnQ8L3A+XFxuXCIsdHlwZTpcIkFueVwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkVudmlyb25tZW50XCJ9LGZyYW1lQ291bnQ6e25hbWU6XCJmcmFtZUNvdW50XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkVudmlyb25tZW50XCJ9LGRlbHRhVGltZTp7bmFtZTpcImRlbHRhVGltZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSxmb2N1c2VkOntuYW1lOlwiZm9jdXNlZFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSxjdXJzb3I6e25hbWU6XCJjdXJzb3JcIixwYXJhbXM6W3tuYW1lOlwidHlwZVwiLGRlc2NyaXB0aW9uOlwiPHA+QnVpbHQtSW46IGVpdGhlciBBUlJPVywgQ1JPU1MsIEhBTkQsIE1PVkUsIFRFWFQgYW5kIFdBSVRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOYXRpdmUgQ1NTIHByb3BlcnRpZXM6ICdncmFiJywgJ3Byb2dyZXNzJywgJ2NlbGwnIGV0Yy5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeHRlcm5hbDogcGF0aCBmb3IgY3Vyc29yJ3MgaW1hZ2VzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKEFsbG93ZWQgRmlsZSBleHRlbnNpb25zOiAuY3VyLCAuZ2lmLCAuanBnLCAuanBlZywgLnBuZylcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBOYXRpdmUgQ1NTIGN1cnNvcnMgYW5kIHVybCB2aXNpdDpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVxcXCJodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvY3Vyc29yXFxcIj5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvY3Vyc29yPC9hPjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfENvbnN0YW50XCJ9LHtuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGhvcml6b250YWwgYWN0aXZlIHNwb3Qgb2YgdGhlIGN1cnNvciAobXVzdCBiZSBsZXNzIHRoYW4gMzIpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD50aGUgdmVydGljYWwgYWN0aXZlIHNwb3Qgb2YgdGhlIGN1cnNvciAobXVzdCBiZSBsZXNzIHRoYW4gMzIpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSxmcmFtZVJhdGU6e25hbWU6XCJmcmFtZVJhdGVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiZnBzXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2YgZnJhbWVzIHRvIGJlIGRpc3BsYXllZCBldmVyeSBzZWNvbmQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W119XX0sbm9DdXJzb3I6e25hbWU6XCJub0N1cnNvclwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSxkaXNwbGF5V2lkdGg6e25hbWU6XCJkaXNwbGF5V2lkdGhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sZGlzcGxheUhlaWdodDp7bmFtZTpcImRpc3BsYXlIZWlnaHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sd2luZG93V2lkdGg6e25hbWU6XCJ3aW5kb3dXaWR0aFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSx3aW5kb3dIZWlnaHQ6e25hbWU6XCJ3aW5kb3dIZWlnaHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sd2luZG93UmVzaXplZDp7bmFtZTpcIndpbmRvd1Jlc2l6ZWRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sd2lkdGg6e25hbWU6XCJ3aWR0aFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSxoZWlnaHQ6e25hbWU6XCJoZWlnaHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sZnVsbHNjcmVlbjp7bmFtZTpcImZ1bGxzY3JlZW5cIixwYXJhbXM6W3tuYW1lOlwidmFsXCIsZGVzY3JpcHRpb246XCI8cD53aGV0aGVyIHRoZSBza2V0Y2ggc2hvdWxkIGJlIGluIGZ1bGxzY3JlZW4gbW9kZVxcbm9yIG5vdDwvcD5cXG5cIix0eXBlOlwiQm9vbGVhblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkVudmlyb25tZW50XCJ9LHBpeGVsRGVuc2l0eTp7bmFtZTpcInBpeGVsRGVuc2l0eVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ2YWxcIixkZXNjcmlwdGlvbjpcIjxwPndoZXRoZXIgb3IgaG93IG11Y2ggdGhlIHNrZXRjaCBzaG91bGQgc2NhbGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W119XX0sZGlzcGxheURlbnNpdHk6e25hbWU6XCJkaXNwbGF5RGVuc2l0eVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFbnZpcm9ubWVudFwifSxnZXRVUkw6e25hbWU6XCJnZXRVUkxcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sZ2V0VVJMUGF0aDp7bmFtZTpcImdldFVSTFBhdGhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRW52aXJvbm1lbnRcIn0sZ2V0VVJMUGFyYW1zOntuYW1lOlwiZ2V0VVJMUGFyYW1zXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkVudmlyb25tZW50XCJ9LHByZWxvYWQ6e25hbWU6XCJwcmVsb2FkXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlN0cnVjdHVyZVwifSxzZXR1cDp7bmFtZTpcInNldHVwXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlN0cnVjdHVyZVwifSxkcmF3OntuYW1lOlwiZHJhd1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTdHJ1Y3R1cmVcIn0scmVtb3ZlOntuYW1lOlwicmVtb3ZlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlN0cnVjdHVyZVwifSxkaXNhYmxlRnJpZW5kbHlFcnJvcnM6e25hbWU6XCJkaXNhYmxlRnJpZW5kbHlFcnJvcnNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU3RydWN0dXJlXCJ9LGxldDp7bmFtZTpcImxldFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJGb3VuZGF0aW9uXCJ9LGNvbnN0OntuYW1lOlwiY29uc3RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxcIj09PVwiOntuYW1lOlwiPT09XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkZvdW5kYXRpb25cIn0sXCI+XCI6e25hbWU6XCI+XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkZvdW5kYXRpb25cIn0sXCI+PVwiOntuYW1lOlwiPj1cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxcIjxcIjp7bmFtZTpcIjxcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxcIjw9XCI6e25hbWU6XCI8PVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJGb3VuZGF0aW9uXCJ9LFwiaWYtZWxzZVwiOntuYW1lOlwiaWYtZWxzZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJGb3VuZGF0aW9uXCJ9LGZ1bmN0aW9uOntuYW1lOlwiZnVuY3Rpb25cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxyZXR1cm46e25hbWU6XCJyZXR1cm5cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxib29sZWFuOntuYW1lOlwiYm9vbGVhblwiLHBhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSB0byBwYXJzZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEJvb2xlYW58TnVtYmVyfEFycmF5XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxzdHJpbmc6e25hbWU6XCJzdHJpbmdcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxudW1iZXI6e25hbWU6XCJudW1iZXJcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxvYmplY3Q6e25hbWU6XCJvYmplY3RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRm91bmRhdGlvblwifSxjbGFzczp7bmFtZTpcImNsYXNzXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkZvdW5kYXRpb25cIn0sZm9yOntuYW1lOlwiZm9yXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkZvdW5kYXRpb25cIn0sd2hpbGU6e25hbWU6XCJ3aGlsZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJGb3VuZGF0aW9uXCJ9LGNyZWF0ZUNhbnZhczp7bmFtZTpcImNyZWF0ZUNhbnZhc1wiLHBhcmFtczpbe25hbWU6XCJ3XCIsZGVzY3JpcHRpb246XCI8cD53aWR0aCBvZiB0aGUgY2FudmFzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJoXCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQgb2YgdGhlIGNhbnZhczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmVuZGVyZXJcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBQMkQgb3IgV0VCR0w8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiUmVuZGVyaW5nXCJ9LHJlc2l6ZUNhbnZhczp7bmFtZTpcInJlc2l6ZUNhbnZhc1wiLHBhcmFtczpbe25hbWU6XCJ3XCIsZGVzY3JpcHRpb246XCI8cD53aWR0aCBvZiB0aGUgY2FudmFzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJoXCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQgb2YgdGhlIGNhbnZhczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibm9SZWRyYXdcIixkZXNjcmlwdGlvbjpcIjxwPmRvbid0IHJlZHJhdyB0aGUgY2FudmFzIGltbWVkaWF0ZWx5PC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiUmVuZGVyaW5nXCJ9LG5vQ2FudmFzOntuYW1lOlwibm9DYW52YXNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiUmVuZGVyaW5nXCJ9LGNyZWF0ZUdyYXBoaWNzOntuYW1lOlwiY3JlYXRlR3JhcGhpY3NcIixwYXJhbXM6W3tuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiPHA+d2lkdGggb2YgdGhlIG9mZnNjcmVlbiBncmFwaGljcyBidWZmZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImhcIixkZXNjcmlwdGlvbjpcIjxwPmhlaWdodCBvZiB0aGUgb2Zmc2NyZWVuIGdyYXBoaWNzIGJ1ZmZlcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmVuZGVyZXJcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBQMkQgb3IgV0VCR0xcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlZmluZWQgZGVmYXVsdHMgdG8gcDJkPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlJlbmRlcmluZ1wifSxibGVuZE1vZGU6e25hbWU6XCJibGVuZE1vZGVcIixwYXJhbXM6W3tuYW1lOlwibW9kZVwiLGRlc2NyaXB0aW9uOlwiPHA+YmxlbmQgbW9kZSB0byBzZXQgZm9yIGNhbnZhcy5cXG4gICAgICAgICAgICAgICBlaXRoZXIgQkxFTkQsIERBUktFU1QsIExJR0hURVNULCBESUZGRVJFTkNFLCBNVUxUSVBMWSxcXG4gICAgICAgICAgICAgICBFWENMVVNJT04sIFNDUkVFTiwgUkVQTEFDRSwgT1ZFUkxBWSwgSEFSRF9MSUdIVCxcXG4gICAgICAgICAgICAgICBTT0ZUX0xJR0hULCBET0RHRSwgQlVSTiwgQURELCBSRU1PVkUgb3IgU1VCVFJBQ1Q8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiUmVuZGVyaW5nXCJ9LGRyYXdpbmdDb250ZXh0OntuYW1lOlwiZHJhd2luZ0NvbnRleHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiUmVuZGVyaW5nXCJ9LG5vTG9vcDp7bmFtZTpcIm5vTG9vcFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTdHJ1Y3R1cmVcIn0sbG9vcDp7bmFtZTpcImxvb3BcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU3RydWN0dXJlXCJ9LGlzTG9vcGluZzp7bmFtZTpcImlzTG9vcGluZ1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTdHJ1Y3R1cmVcIn0scHVzaDp7bmFtZTpcInB1c2hcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiU3RydWN0dXJlXCJ9LHBvcDp7bmFtZTpcInBvcFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTdHJ1Y3R1cmVcIn0scmVkcmF3OntuYW1lOlwicmVkcmF3XCIscGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPlJlZHJhdyBmb3Igbi10aW1lcy4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgMS48L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTdHJ1Y3R1cmVcIn0scDU6e25hbWU6XCJwNVwiLHBhcmFtczpbe25hbWU6XCJza2V0Y2hcIixkZXNjcmlwdGlvbjpcIjxwPmEgZnVuY3Rpb24gY29udGFpbmluZyBhIHA1LmpzIHNrZXRjaDwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9LHtuYW1lOlwibm9kZVwiLGRlc2NyaXB0aW9uOlwiPHA+SUQgb3IgcG9pbnRlciB0byBIVE1MIERPTSBub2RlIHRvIGNvbnRhaW4gc2tldGNoIGluPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8T2JqZWN0XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU3RydWN0dXJlXCJ9LGFwcGx5TWF0cml4OntuYW1lOlwiYXBwbHlNYXRyaXhcIixwYXJhbXM6W3tuYW1lOlwiYVwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVycyB3aGljaCBkZWZpbmUgdGhlIDJ4MyBtYXRyaXggdG8gYmUgbXVsdGlwbGllZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYlwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVycyB3aGljaCBkZWZpbmUgdGhlIDJ4MyBtYXRyaXggdG8gYmUgbXVsdGlwbGllZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiY1wiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVycyB3aGljaCBkZWZpbmUgdGhlIDJ4MyBtYXRyaXggdG8gYmUgbXVsdGlwbGllZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiZFwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVycyB3aGljaCBkZWZpbmUgdGhlIDJ4MyBtYXRyaXggdG8gYmUgbXVsdGlwbGllZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiZVwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVycyB3aGljaCBkZWZpbmUgdGhlIDJ4MyBtYXRyaXggdG8gYmUgbXVsdGlwbGllZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiZlwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVycyB3aGljaCBkZWZpbmUgdGhlIDJ4MyBtYXRyaXggdG8gYmUgbXVsdGlwbGllZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiVHJhbnNmb3JtXCJ9LHJlc2V0TWF0cml4OntuYW1lOlwicmVzZXRNYXRyaXhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiVHJhbnNmb3JtXCJ9LHJvdGF0ZTp7bmFtZTpcInJvdGF0ZVwiLHBhcmFtczpbe25hbWU6XCJhbmdsZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGFuZ2xlIG9mIHJvdGF0aW9uLCBzcGVjaWZpZWQgaW4gcmFkaWFuc1xcbiAgICAgICAgICAgICAgICAgICAgICAgb3IgZGVncmVlcywgZGVwZW5kaW5nIG9uIGN1cnJlbnQgYW5nbGVNb2RlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJheGlzXCIsZGVzY3JpcHRpb246XCI8cD4oaW4gM2QpIHRoZSBheGlzIHRvIHJvdGF0ZSBhcm91bmQ8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvcnxOdW1iZXJbXVwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlRyYW5zZm9ybVwifSxyb3RhdGVYOntuYW1lOlwicm90YXRlWFwiLHBhcmFtczpbe25hbWU6XCJhbmdsZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGFuZ2xlIG9mIHJvdGF0aW9uLCBzcGVjaWZpZWQgaW4gcmFkaWFuc1xcbiAgICAgICAgICAgICAgICAgICAgICAgb3IgZGVncmVlcywgZGVwZW5kaW5nIG9uIGN1cnJlbnQgYW5nbGVNb2RlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJUcmFuc2Zvcm1cIn0scm90YXRlWTp7bmFtZTpcInJvdGF0ZVlcIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbmdsZSBvZiByb3RhdGlvbiwgc3BlY2lmaWVkIGluIHJhZGlhbnNcXG4gICAgICAgICAgICAgICAgICAgICAgIG9yIGRlZ3JlZXMsIGRlcGVuZGluZyBvbiBjdXJyZW50IGFuZ2xlTW9kZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiVHJhbnNmb3JtXCJ9LHJvdGF0ZVo6e25hbWU6XCJyb3RhdGVaXCIscGFyYW1zOlt7bmFtZTpcImFuZ2xlXCIsZGVzY3JpcHRpb246XCI8cD50aGUgYW5nbGUgb2Ygcm90YXRpb24sIHNwZWNpZmllZCBpbiByYWRpYW5zXFxuICAgICAgICAgICAgICAgICAgICAgICBvciBkZWdyZWVzLCBkZXBlbmRpbmcgb24gY3VycmVudCBhbmdsZU1vZGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlRyYW5zZm9ybVwifSxzY2FsZTp7bmFtZTpcInNjYWxlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlRyYW5zZm9ybVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJzXCIsZGVzY3JpcHRpb246XCI8cD5wZXJjZW50IHRvIHNjYWxlIHRoZSBvYmplY3QsIG9yIHBlcmNlbnRhZ2UgdG9cXG4gICAgICAgICAgICAgICAgICAgICBzY2FsZSB0aGUgb2JqZWN0IGluIHRoZSB4LWF4aXMgaWYgbXVsdGlwbGUgYXJndW1lbnRzXFxuICAgICAgICAgICAgICAgICAgICAgYXJlIGdpdmVuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJ8cDUuVmVjdG9yfE51bWJlcltdXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+cGVyY2VudCB0byBzY2FsZSB0aGUgb2JqZWN0IGluIHRoZSB5LWF4aXM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInpcIixkZXNjcmlwdGlvbjpcIjxwPnBlcmNlbnQgdG8gc2NhbGUgdGhlIG9iamVjdCBpbiB0aGUgei1heGlzICh3ZWJnbCBvbmx5KTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJzY2FsZXNcIixkZXNjcmlwdGlvbjpcIjxwPnBlci1heGlzIHBlcmNlbnRzIHRvIHNjYWxlIHRoZSBvYmplY3Q8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvcnxOdW1iZXJbXVwifV0sY2hhaW5hYmxlOjF9XX0sc2hlYXJYOntuYW1lOlwic2hlYXJYXCIscGFyYW1zOlt7bmFtZTpcImFuZ2xlXCIsZGVzY3JpcHRpb246XCI8cD5hbmdsZSBvZiBzaGVhciBzcGVjaWZpZWQgaW4gcmFkaWFucyBvciBkZWdyZWVzLFxcbiAgICAgICAgICAgICAgICAgICAgICAgZGVwZW5kaW5nIG9uIGN1cnJlbnQgYW5nbGVNb2RlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJUcmFuc2Zvcm1cIn0sc2hlYXJZOntuYW1lOlwic2hlYXJZXCIscGFyYW1zOlt7bmFtZTpcImFuZ2xlXCIsZGVzY3JpcHRpb246XCI8cD5hbmdsZSBvZiBzaGVhciBzcGVjaWZpZWQgaW4gcmFkaWFucyBvciBkZWdyZWVzLFxcbiAgICAgICAgICAgICAgICAgICAgICAgZGVwZW5kaW5nIG9uIGN1cnJlbnQgYW5nbGVNb2RlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJUcmFuc2Zvcm1cIn0sdHJhbnNsYXRlOntuYW1lOlwidHJhbnNsYXRlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlRyYW5zZm9ybVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD5sZWZ0L3JpZ2h0IHRyYW5zbGF0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD51cC9kb3duIHRyYW5zbGF0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCI8cD5mb3J3YXJkL2JhY2t3YXJkIHRyYW5zbGF0aW9uICh3ZWJnbCBvbmx5KTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2ZWN0b3JcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2ZWN0b3IgdG8gdHJhbnNsYXRlIGJ5PC9wPlxcblwiLHR5cGU6XCJwNS5WZWN0b3JcIn1dLGNoYWluYWJsZToxfV19LHN0b3JlSXRlbTp7bmFtZTpcInN0b3JlSXRlbVwiLHBhcmFtczpbe25hbWU6XCJrZXlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ3xOdW1iZXJ8T2JqZWN0fEJvb2xlYW58cDUuQ29sb3J8cDUuVmVjdG9yXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxnZXRJdGVtOntuYW1lOlwiZ2V0SXRlbVwiLHBhcmFtczpbe25hbWU6XCJrZXlcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgdGhhdCB5b3Ugd2lzaCB0byB1c2UgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxjbGVhclN0b3JhZ2U6e25hbWU6XCJjbGVhclN0b3JhZ2VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxyZW1vdmVJdGVtOntuYW1lOlwicmVtb3ZlSXRlbVwiLHBhcmFtczpbe25hbWU6XCJrZXlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCJ9LGNyZWF0ZVN0cmluZ0RpY3Q6e25hbWU6XCJjcmVhdGVTdHJpbmdEaWN0XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwia2V5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn1dfSx7cGFyYW1zOlt7bmFtZTpcIm9iamVjdFwiLGRlc2NyaXB0aW9uOlwiPHA+b2JqZWN0PC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn1dfV19LGNyZWF0ZU51bWJlckRpY3Q6e25hbWU6XCJjcmVhdGVOdW1iZXJEaWN0XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwia2V5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn1dfSx7cGFyYW1zOlt7bmFtZTpcIm9iamVjdFwiLGRlc2NyaXB0aW9uOlwiPHA+b2JqZWN0PC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn1dfV19LHNlbGVjdDp7bmFtZTpcInNlbGVjdFwiLHBhcmFtczpbe25hbWU6XCJzZWxlY3RvcnNcIixkZXNjcmlwdGlvbjpcIjxwPkNTUyBzZWxlY3RvciBzdHJpbmcgb2YgZWxlbWVudCB0byBzZWFyY2ggZm9yPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjb250YWluZXJcIixkZXNjcmlwdGlvbjonPHA+Q1NTIHNlbGVjdG9yIHN0cmluZywgPGEgaHJlZj1cIiMvcDUuRWxlbWVudFwiPnA1LkVsZW1lbnQ8L2E+LCBvclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSFRNTCBlbGVtZW50IHRvIHNlYXJjaCB3aXRoaW48L3A+XFxuJyx0eXBlOlwiU3RyaW5nfHA1LkVsZW1lbnR8SFRNTEVsZW1lbnRcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJET01cIn0sc2VsZWN0QWxsOntuYW1lOlwic2VsZWN0QWxsXCIscGFyYW1zOlt7bmFtZTpcInNlbGVjdG9yc1wiLGRlc2NyaXB0aW9uOlwiPHA+Q1NTIHNlbGVjdG9yIHN0cmluZyBvZiBlbGVtZW50cyB0byBzZWFyY2ggZm9yPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjb250YWluZXJcIixkZXNjcmlwdGlvbjonPHA+Q1NTIHNlbGVjdG9yIHN0cmluZywgPGEgaHJlZj1cIiMvcDUuRWxlbWVudFwiPnA1LkVsZW1lbnQ8L2E+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIG9yIEhUTUwgZWxlbWVudCB0byBzZWFyY2ggd2l0aGluPC9wPlxcbicsdHlwZTpcIlN0cmluZ3xwNS5FbGVtZW50fEhUTUxFbGVtZW50XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LHJlbW92ZUVsZW1lbnRzOntuYW1lOlwicmVtb3ZlRWxlbWVudHNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LGNoYW5nZWQ6e25hbWU6XCJjaGFuZ2VkXCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiB0aGUgdmFsdWUgb2ZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW4gZWxlbWVudCBjaGFuZ2VzLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiA8Y29kZT5mYWxzZTwvY29kZT4gaXMgcGFzc2VkIGluc3RlYWQsIHRoZSBwcmV2aW91c2x5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcmluZyBmdW5jdGlvbiB3aWxsIG5vIGxvbmdlciBmaXJlLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb258Qm9vbGVhblwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxpbnB1dDp7bmFtZTpcImlucHV0XCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiBhbnkgdXNlciBpbnB1dCBpc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRlY3RlZCB3aXRoaW4gdGhlIGVsZW1lbnQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIDxjb2RlPmZhbHNlPC9jb2RlPiBpcyBwYXNzZWQgaW5zdGVhZCwgdGhlIHByZXZpb3VzbHlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyaW5nIGZ1bmN0aW9uIHdpbGwgbm8gbG9uZ2VyIGZpcmUuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbnxCb29sZWFuXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LGNyZWF0ZURpdjp7bmFtZTpcImNyZWF0ZURpdlwiLHBhcmFtczpbe25hbWU6XCJodG1sXCIsZGVzY3JpcHRpb246XCI8cD5pbm5lciBIVE1MIGZvciBlbGVtZW50IGNyZWF0ZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxjcmVhdGVQOntuYW1lOlwiY3JlYXRlUFwiLHBhcmFtczpbe25hbWU6XCJodG1sXCIsZGVzY3JpcHRpb246XCI8cD5pbm5lciBIVE1MIGZvciBlbGVtZW50IGNyZWF0ZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxjcmVhdGVTcGFuOntuYW1lOlwiY3JlYXRlU3BhblwiLHBhcmFtczpbe25hbWU6XCJodG1sXCIsZGVzY3JpcHRpb246XCI8cD5pbm5lciBIVE1MIGZvciBlbGVtZW50IGNyZWF0ZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxjcmVhdGVJbWc6e25hbWU6XCJjcmVhdGVJbWdcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInNyY1wiLGRlc2NyaXB0aW9uOlwiPHA+c3JjIHBhdGggb3IgdXJsIGZvciBpbWFnZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiYWx0XCIsZGVzY3JpcHRpb246JzxwPjxhIGhyZWY9XCJodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0VsZW1lbnQvSW1nI0F0dHJpYnV0ZXNcIj5hbHRlcm5hdGUgdGV4dDwvYT4gdG8gYmUgdXNlZCBpZiBpbWFnZSBkb2VzIG5vdCBsb2FkLiBZb3UgY2FuIHVzZSBhbHNvIGFuIGVtcHR5IHN0cmluZyAoPGNvZGU+XCJcIjwvY29kZT4pIGlmIHRoYXQgYW4gaW1hZ2UgaXMgbm90IGludGVuZGVkIHRvIGJlIHZpZXdlZC48L3A+XFxuJyx0eXBlOlwiU3RyaW5nXCJ9XX0se3BhcmFtczpbe25hbWU6XCJzcmNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJhbHRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjcm9zc09yaWdpblwiLGRlc2NyaXB0aW9uOlwiPHA+PGEgaHJlZj1cXFwiaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9DT1JTX3NldHRpbmdzX2F0dHJpYnV0ZXNcXFwiPmNyb3NzT3JpZ2luIHByb3BlcnR5PC9hPiBvZiB0aGUgPGNvZGU+aW1nPC9jb2RlPiBlbGVtZW50OyB1c2UgZWl0aGVyICdhbm9ueW1vdXMnIG9yICd1c2UtY3JlZGVudGlhbHMnIHRvIHJldHJpZXZlIHRoZSBpbWFnZSB3aXRoIGNyb3NzLW9yaWdpbiBhY2Nlc3MgKGZvciBsYXRlciB1c2Ugd2l0aCA8Y29kZT5jYW52YXM8L2NvZGU+LiBpZiBhbiBlbXB0eSBzdHJpbmcoPGNvZGU+XFxcIlxcXCI8L2NvZGU+KSBpcyBwYXNzZWQsIENPUlMgaXMgbm90IHVzZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInN1Y2Nlc3NDYWxsYmFja1wiLGRlc2NyaXB0aW9uOic8cD5jYWxsYmFjayB0byBiZSBjYWxsZWQgb25jZSBpbWFnZSBkYXRhIGlzIGxvYWRlZCB3aXRoIHRoZSA8YSBocmVmPVwiIy9wNS5FbGVtZW50XCI+cDUuRWxlbWVudDwvYT4gYXMgYXJndW1lbnQ8L3A+XFxuJyx0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dfV19LGNyZWF0ZUE6e25hbWU6XCJjcmVhdGVBXCIscGFyYW1zOlt7bmFtZTpcImhyZWZcIixkZXNjcmlwdGlvbjpcIjxwPnVybCBvZiBwYWdlIHRvIGxpbmsgdG88L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImh0bWxcIixkZXNjcmlwdGlvbjpcIjxwPmlubmVyIGh0bWwgb2YgbGluayBlbGVtZW50IHRvIGRpc3BsYXk8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInRhcmdldFwiLGRlc2NyaXB0aW9uOlwiPHA+dGFyZ2V0IHdoZXJlIG5ldyBsaW5rIHNob3VsZCBvcGVuLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VsZCBiZSBfYmxhbmssIF9zZWxmLCBfcGFyZW50LCBfdG9wLjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LGNyZWF0ZVNsaWRlcjp7bmFtZTpcImNyZWF0ZVNsaWRlclwiLHBhcmFtczpbe25hbWU6XCJtaW5cIixkZXNjcmlwdGlvbjpcIjxwPm1pbmltdW0gdmFsdWUgb2YgdGhlIHNsaWRlcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibWF4XCIsZGVzY3JpcHRpb246XCI8cD5tYXhpbXVtIHZhbHVlIG9mIHRoZSBzbGlkZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5kZWZhdWx0IHZhbHVlIG9mIHRoZSBzbGlkZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInN0ZXBcIixkZXNjcmlwdGlvbjpcIjxwPnN0ZXAgc2l6ZSBmb3IgZWFjaCB0aWNrIG9mIHRoZSBzbGlkZXIgKGlmIHN0ZXAgaXMgc2V0IHRvIDAsIHRoZSBzbGlkZXIgd2lsbCBtb3ZlIGNvbnRpbnVvdXNseSBmcm9tIHRoZSBtaW5pbXVtIHRvIHRoZSBtYXhpbXVtIHZhbHVlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LGNyZWF0ZUJ1dHRvbjp7bmFtZTpcImNyZWF0ZUJ1dHRvblwiLHBhcmFtczpbe25hbWU6XCJsYWJlbFwiLGRlc2NyaXB0aW9uOlwiPHA+bGFiZWwgZGlzcGxheWVkIG9uIHRoZSBidXR0b248L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSBvZiB0aGUgYnV0dG9uPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJET01cIn0sY3JlYXRlQ2hlY2tib3g6e25hbWU6XCJjcmVhdGVDaGVja2JveFwiLHBhcmFtczpbe25hbWU6XCJsYWJlbFwiLGRlc2NyaXB0aW9uOlwiPHA+bGFiZWwgZGlzcGxheWVkIGFmdGVyIGNoZWNrYm94PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWUgb2YgdGhlIGNoZWNrYm94OyBjaGVja2VkIGlzIHRydWUsIHVuY2hlY2tlZCBpcyBmYWxzZTwvcD5cXG5cIix0eXBlOlwiQm9vbGVhblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxjcmVhdGVTZWxlY3Q6e25hbWU6XCJjcmVhdGVTZWxlY3RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm11bHRpcGxlXCIsZGVzY3JpcHRpb246XCI8cD50cnVlIGlmIGRyb3Bkb3duIHNob3VsZCBzdXBwb3J0IG11bHRpcGxlIHNlbGVjdGlvbnM8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcImV4aXN0aW5nXCIsZGVzY3JpcHRpb246XCI8cD5ET00gc2VsZWN0IGVsZW1lbnQ8L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifV19XX0sY3JlYXRlUmFkaW86e25hbWU6XCJjcmVhdGVSYWRpb1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJET01cIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiY29udGFpbmVyRWxlbWVudFwiLGRlc2NyaXB0aW9uOlwiPHA+QW4gY29udGFpbmVyIEhUTUwgRWxlbWVudCBlaXRoZXIgYSBkaXZcXG5vciBzcGFuIGluc2lkZSB3aGljaCBhbGwgZXhpc3RpbmcgcmFkaW8gaW5wdXRzIHdpbGwgYmUgY29uc2lkZXJlZCBhcyBvcHRpb25zLjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9LHtuYW1lOlwibmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+QSBuYW1lIHBhcmFtZXRlciBmb3IgZWFjaCBJbnB1dCBFbGVtZW50LjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJuYW1lXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCJ9XX0se3BhcmFtczpbXX1dfSxjcmVhdGVDb2xvclBpY2tlcjp7bmFtZTpcImNyZWF0ZUNvbG9yUGlja2VyXCIscGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5kZWZhdWx0IGNvbG9yIG9mIGVsZW1lbnQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xwNS5Db2xvclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxjcmVhdGVJbnB1dDp7bmFtZTpcImNyZWF0ZUlucHV0XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+ZGVmYXVsdCB2YWx1ZSBvZiB0aGUgaW5wdXQgYm94PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJ0eXBlXCIsZGVzY3JpcHRpb246XCI8cD50eXBlIG9mIHRleHQsIGllIHRleHQsIHBhc3N3b3JkIGV0Yy4gRGVmYXVsdHMgdG8gdGV4dC5cXG4gIE5lZWRzIGEgdmFsdWUgdG8gYmUgc3BlY2lmaWVkIGZpcnN0LjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV19XX0sY3JlYXRlRmlsZUlucHV0OntuYW1lOlwiY3JlYXRlRmlsZUlucHV0XCIscGFyYW1zOlt7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5jYWxsYmFjayBmdW5jdGlvbiBmb3Igd2hlbiBhIGZpbGUgaXMgbG9hZGVkPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwifSx7bmFtZTpcIm11bHRpcGxlXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCwgdG8gYWxsb3cgbXVsdGlwbGUgZmlsZXMgdG8gYmUgc2VsZWN0ZWQ8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJET01cIn0sY3JlYXRlVmlkZW86e25hbWU6XCJjcmVhdGVWaWRlb1wiLHBhcmFtczpbe25hbWU6XCJzcmNcIixkZXNjcmlwdGlvbjpcIjxwPnBhdGggdG8gYSB2aWRlbyBmaWxlLCBvciBhcnJheSBvZiBwYXRocyBmb3JcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VwcG9ydGluZyBkaWZmZXJlbnQgYnJvd3NlcnM8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xTdHJpbmdbXVwifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5jYWxsYmFjayBmdW5jdGlvbiB0byBiZSBjYWxsZWQgdXBvblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY2FucGxheXRocm91Z2gnIGV2ZW50IGZpcmUsIHRoYXQgaXMsIHdoZW4gdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyb3dzZXIgY2FuIHBsYXkgdGhlIG1lZGlhLCBhbmQgZXN0aW1hdGVzIHRoYXRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5vdWdoIGRhdGEgaGFzIGJlZW4gbG9hZGVkIHRvIHBsYXkgdGhlIG1lZGlhXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwIHRvIGl0cyBlbmQgd2l0aG91dCBoYXZpbmcgdG8gc3RvcCBmb3JcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVydGhlciBidWZmZXJpbmcgb2YgY29udGVudDwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJET01cIn0sY3JlYXRlQXVkaW86e25hbWU6XCJjcmVhdGVBdWRpb1wiLHBhcmFtczpbe25hbWU6XCJzcmNcIixkZXNjcmlwdGlvbjpcIjxwPnBhdGggdG8gYW4gYXVkaW8gZmlsZSwgb3IgYXJyYXkgb2YgcGF0aHNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHN1cHBvcnRpbmcgZGlmZmVyZW50IGJyb3dzZXJzPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8U3RyaW5nW11cIixvcHRpb25hbDohMH0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+Y2FsbGJhY2sgZnVuY3Rpb24gdG8gYmUgY2FsbGVkIHVwb25cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NhbnBsYXl0aHJvdWdoJyBldmVudCBmaXJlLCB0aGF0IGlzLCB3aGVuIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicm93c2VyIGNhbiBwbGF5IHRoZSBtZWRpYSwgYW5kIGVzdGltYXRlcyB0aGF0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVub3VnaCBkYXRhIGhhcyBiZWVuIGxvYWRlZCB0byBwbGF5IHRoZSBtZWRpYVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cCB0byBpdHMgZW5kIHdpdGhvdXQgaGF2aW5nIHRvIHN0b3AgZm9yXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1cnRoZXIgYnVmZmVyaW5nIG9mIGNvbnRlbnQ8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LFZJREVPOntuYW1lOlwiVklERU9cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LEFVRElPOntuYW1lOlwiQVVESU9cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LGNyZWF0ZUNhcHR1cmU6e25hbWU6XCJjcmVhdGVDYXB0dXJlXCIscGFyYW1zOlt7bmFtZTpcInR5cGVcIixkZXNjcmlwdGlvbjpcIjxwPnR5cGUgb2YgY2FwdHVyZSwgZWl0aGVyIFZJREVPIG9yXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFVRElPIGlmIG5vbmUgc3BlY2lmaWVkLCBkZWZhdWx0IGJvdGgsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIGEgQ29uc3RyYWludHMgb2JqZWN0PC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8Q29uc3RhbnR8T2JqZWN0XCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBvbmNlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmVhbSBoYXMgbG9hZGVkPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRPTVwifSxjcmVhdGVFbGVtZW50OntuYW1lOlwiY3JlYXRlRWxlbWVudFwiLHBhcmFtczpbe25hbWU6XCJ0YWdcIixkZXNjcmlwdGlvbjpcIjxwPnRhZyBmb3IgdGhlIG5ldyBlbGVtZW50PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjb250ZW50XCIsZGVzY3JpcHRpb246XCI8cD5odG1sIGNvbnRlbnQgdG8gYmUgaW5zZXJ0ZWQgaW50byB0aGUgZWxlbWVudDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRE9NXCJ9LGRldmljZU9yaWVudGF0aW9uOntuYW1lOlwiZGV2aWNlT3JpZW50YXRpb25cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGFjY2VsZXJhdGlvblg6e25hbWU6XCJhY2NlbGVyYXRpb25YXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxhY2NlbGVyYXRpb25ZOntuYW1lOlwiYWNjZWxlcmF0aW9uWVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sYWNjZWxlcmF0aW9uWjp7bmFtZTpcImFjY2VsZXJhdGlvblpcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHBBY2NlbGVyYXRpb25YOntuYW1lOlwicEFjY2VsZXJhdGlvblhcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHBBY2NlbGVyYXRpb25ZOntuYW1lOlwicEFjY2VsZXJhdGlvbllcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHBBY2NlbGVyYXRpb25aOntuYW1lOlwicEFjY2VsZXJhdGlvblpcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHJvdGF0aW9uWDp7bmFtZTpcInJvdGF0aW9uWFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0scm90YXRpb25ZOntuYW1lOlwicm90YXRpb25ZXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxyb3RhdGlvblo6e25hbWU6XCJyb3RhdGlvblpcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHBSb3RhdGlvblg6e25hbWU6XCJwUm90YXRpb25YXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxwUm90YXRpb25ZOntuYW1lOlwicFJvdGF0aW9uWVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0scFJvdGF0aW9uWjp7bmFtZTpcInBSb3RhdGlvblpcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHR1cm5BeGlzOntuYW1lOlwidHVybkF4aXNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHNldE1vdmVUaHJlc2hvbGQ6e25hbWU6XCJzZXRNb3ZlVGhyZXNob2xkXCIscGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgdGhyZXNob2xkIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sc2V0U2hha2VUaHJlc2hvbGQ6e25hbWU6XCJzZXRTaGFrZVRocmVzaG9sZFwiLHBhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIHRocmVzaG9sZCB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGRldmljZU1vdmVkOntuYW1lOlwiZGV2aWNlTW92ZWRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGRldmljZVR1cm5lZDp7bmFtZTpcImRldmljZVR1cm5lZFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sZGV2aWNlU2hha2VuOntuYW1lOlwiZGV2aWNlU2hha2VuXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxrZXlJc1ByZXNzZWQ6e25hbWU6XCJrZXlJc1ByZXNzZWRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGtleTp7bmFtZTpcImtleVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sa2V5Q29kZTp7bmFtZTpcImtleUNvZGVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGtleVByZXNzZWQ6e25hbWU6XCJrZXlQcmVzc2VkXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxrZXlSZWxlYXNlZDp7bmFtZTpcImtleVJlbGVhc2VkXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxrZXlUeXBlZDp7bmFtZTpcImtleVR5cGVkXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxrZXlJc0Rvd246e25hbWU6XCJrZXlJc0Rvd25cIixwYXJhbXM6W3tuYW1lOlwiY29kZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGtleSB0byBjaGVjayBmb3IuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sbW92ZWRYOntuYW1lOlwibW92ZWRYXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxtb3ZlZFk6e25hbWU6XCJtb3ZlZFlcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LG1vdXNlWDp7bmFtZTpcIm1vdXNlWFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sbW91c2VZOntuYW1lOlwibW91c2VZXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxwbW91c2VYOntuYW1lOlwicG1vdXNlWFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0scG1vdXNlWTp7bmFtZTpcInBtb3VzZVlcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHdpbk1vdXNlWDp7bmFtZTpcIndpbk1vdXNlWFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sd2luTW91c2VZOntuYW1lOlwid2luTW91c2VZXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxwd2luTW91c2VYOntuYW1lOlwicHdpbk1vdXNlWFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0scHdpbk1vdXNlWTp7bmFtZTpcInB3aW5Nb3VzZVlcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LG1vdXNlQnV0dG9uOntuYW1lOlwibW91c2VCdXR0b25cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LG1vdXNlSXNQcmVzc2VkOntuYW1lOlwibW91c2VJc1ByZXNzZWRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LG1vdXNlTW92ZWQ6e25hbWU6XCJtb3VzZU1vdmVkXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBNb3VzZUV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LG1vdXNlRHJhZ2dlZDp7bmFtZTpcIm1vdXNlRHJhZ2dlZFwiLHBhcmFtczpbe25hbWU6XCJldmVudFwiLGRlc2NyaXB0aW9uOlwiPHA+b3B0aW9uYWwgTW91c2VFdmVudCBjYWxsYmFjayBhcmd1bWVudC48L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSxtb3VzZVByZXNzZWQ6e25hbWU6XCJtb3VzZVByZXNzZWRcIixwYXJhbXM6W3tuYW1lOlwiZXZlbnRcIixkZXNjcmlwdGlvbjpcIjxwPm9wdGlvbmFsIE1vdXNlRXZlbnQgY2FsbGJhY2sgYXJndW1lbnQuPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sbW91c2VSZWxlYXNlZDp7bmFtZTpcIm1vdXNlUmVsZWFzZWRcIixwYXJhbXM6W3tuYW1lOlwiZXZlbnRcIixkZXNjcmlwdGlvbjpcIjxwPm9wdGlvbmFsIE1vdXNlRXZlbnQgY2FsbGJhY2sgYXJndW1lbnQuPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sbW91c2VDbGlja2VkOntuYW1lOlwibW91c2VDbGlja2VkXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBNb3VzZUV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGRvdWJsZUNsaWNrZWQ6e25hbWU6XCJkb3VibGVDbGlja2VkXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBNb3VzZUV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LG1vdXNlV2hlZWw6e25hbWU6XCJtb3VzZVdoZWVsXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBXaGVlbEV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHJlcXVlc3RQb2ludGVyTG9jazp7bmFtZTpcInJlcXVlc3RQb2ludGVyTG9ja1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sZXhpdFBvaW50ZXJMb2NrOntuYW1lOlwiZXhpdFBvaW50ZXJMb2NrXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkV2ZW50c1wifSx0b3VjaGVzOntuYW1lOlwidG91Y2hlc1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJFdmVudHNcIn0sdG91Y2hTdGFydGVkOntuYW1lOlwidG91Y2hTdGFydGVkXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBUb3VjaEV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHRvdWNoTW92ZWQ6e25hbWU6XCJ0b3VjaE1vdmVkXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBUb3VjaEV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LHRvdWNoRW5kZWQ6e25hbWU6XCJ0b3VjaEVuZGVkXCIscGFyYW1zOlt7bmFtZTpcImV2ZW50XCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBUb3VjaEV2ZW50IGNhbGxiYWNrIGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRXZlbnRzXCJ9LGNyZWF0ZUltYWdlOntuYW1lOlwiY3JlYXRlSW1hZ2VcIixwYXJhbXM6W3tuYW1lOlwid2lkdGhcIixkZXNjcmlwdGlvbjpcIjxwPndpZHRoIGluIHBpeGVsczwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImhlaWdodFwiLGRlc2NyaXB0aW9uOlwiPHA+aGVpZ2h0IGluIHBpeGVsczwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCJ9LHNhdmVDYW52YXM6e25hbWU6XCJzYXZlQ2FudmFzXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInNlbGVjdGVkQ2FudmFzXCIsZGVzY3JpcHRpb246XCI8cD5hIHZhcmlhYmxlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXByZXNlbnRpbmcgYSBzcGVjaWZpYyBodG1sNSBjYW52YXMgKG9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwicDUuRWxlbWVudHxIVE1MQ2FudmFzRWxlbWVudFwifSx7bmFtZTpcImZpbGVuYW1lXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXh0ZW5zaW9uXCIsZGVzY3JpcHRpb246XCI8cD4nanBnJyBvciAncG5nJzwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJmaWxlbmFtZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImV4dGVuc2lvblwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV19XX0sc2F2ZUZyYW1lczp7bmFtZTpcInNhdmVGcmFtZXNcIixwYXJhbXM6W3tuYW1lOlwiZmlsZW5hbWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJleHRlbnNpb25cIixkZXNjcmlwdGlvbjpcIjxwPidqcGcnIG9yICdwbmcnPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJkdXJhdGlvblwiLGRlc2NyaXB0aW9uOlwiPHA+RHVyYXRpb24gaW4gc2Vjb25kcyB0byBzYXZlIHRoZSBmcmFtZXMgZm9yLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiZnJhbWVyYXRlXCIsZGVzY3JpcHRpb246XCI8cD5GcmFtZXJhdGUgdG8gc2F2ZSB0aGUgZnJhbWVzIGluLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPkEgY2FsbGJhY2sgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGV4ZWN1dGVkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBoYW5kbGUgdGhlIGltYWdlIGRhdGEuIFRoaXMgZnVuY3Rpb25cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3VsZCBhY2NlcHQgYW4gYXJyYXkgYXMgYXJndW1lbnQuIFRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXkgd2lsbCBjb250YWluIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcmFtZXMgb2Ygb2JqZWN0cy4gRWFjaCBvYmplY3QgaGFzIHRocmVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiBpbWFnZURhdGEgLSBhblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2Uvb2N0ZXQtc3RyZWFtLCBmaWxlbmFtZSBhbmQgZXh0ZW5zaW9uLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb24oQXJyYXkpXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiSW1hZ2VcIn0sbG9hZEltYWdlOntuYW1lOlwibG9hZEltYWdlXCIscGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIjxwPlBhdGggb2YgdGhlIGltYWdlIHRvIGJlIGxvYWRlZDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwic3VjY2Vzc0NhbGxiYWNrXCIsZGVzY3JpcHRpb246JzxwPkZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBvbmNlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBpbWFnZSBpcyBsb2FkZWQuIFdpbGwgYmUgcGFzc2VkIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiIy9wNS5JbWFnZVwiPnA1LkltYWdlPC9hPi48L3A+XFxuJyx0eXBlOlwiZnVuY3Rpb24ocDUuSW1hZ2UpXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZmFpbHVyZUNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5jYWxsZWQgd2l0aCBldmVudCBlcnJvciBpZlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgaW1hZ2UgZmFpbHMgdG8gbG9hZC48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uKEV2ZW50KVwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCJ9LGltYWdlOntuYW1lOlwiaW1hZ2VcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSW1hZ2VcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiaW1nXCIsZGVzY3JpcHRpb246XCI8cD50aGUgaW1hZ2UgdG8gZGlzcGxheTwvcD5cXG5cIix0eXBlOlwicDUuSW1hZ2V8cDUuRWxlbWVudFwifSx7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4LWNvb3JkaW5hdGUgb2YgdGhlIHRvcC1sZWZ0IGNvcm5lciBvZiB0aGUgaW1hZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5LWNvb3JkaW5hdGUgb2YgdGhlIHRvcC1sZWZ0IGNvcm5lciBvZiB0aGUgaW1hZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIndpZHRoXCIsZGVzY3JpcHRpb246XCI8cD50aGUgd2lkdGggdG8gZHJhdyB0aGUgaW1hZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImhlaWdodFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGhlaWdodCB0byBkcmF3IHRoZSBpbWFnZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJpbWdcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5JbWFnZXxwNS5FbGVtZW50XCJ9LHtuYW1lOlwiZHhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4LWNvb3JkaW5hdGUgb2YgdGhlIGRlc3RpbmF0aW9uXFxuICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0YW5nbGUgaW4gd2hpY2ggdG8gZHJhdyB0aGUgc291cmNlIGltYWdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkeVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHktY29vcmRpbmF0ZSBvZiB0aGUgZGVzdGluYXRpb25cXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3RhbmdsZSBpbiB3aGljaCB0byBkcmF3IHRoZSBzb3VyY2UgaW1hZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImRXaWR0aFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHdpZHRoIG9mIHRoZSBkZXN0aW5hdGlvbiByZWN0YW5nbGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImRIZWlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBoZWlnaHQgb2YgdGhlIGRlc3RpbmF0aW9uIHJlY3RhbmdsZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwic3hcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4LWNvb3JkaW5hdGUgb2YgdGhlIHN1YnNlY3Rpb24gb2YgdGhlIHNvdXJjZVxcbmltYWdlIHRvIGRyYXcgaW50byB0aGUgZGVzdGluYXRpb24gcmVjdGFuZ2xlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJzeVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHktY29vcmRpbmF0ZSBvZiB0aGUgc3Vic2VjdGlvbiBvZiB0aGUgc291cmNlXFxuaW1hZ2UgdG8gZHJhdyBpbnRvIHRoZSBkZXN0aW5hdGlvbiByZWN0YW5nbGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInNXaWR0aFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHdpZHRoIG9mIHRoZSBzdWJzZWN0aW9uIG9mIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlIGltYWdlIHRvIGRyYXcgaW50byB0aGUgZGVzdGluYXRpb25cXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3RhbmdsZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic0hlaWdodFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGhlaWdodCBvZiB0aGUgc3Vic2VjdGlvbiBvZiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgaW1hZ2UgdG8gZHJhdyBpbnRvIHRoZSBkZXN0aW5hdGlvbiByZWN0YW5nbGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV19XX0sdGludDp7bmFtZTpcInRpbnRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSW1hZ2VcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIjxwPnJlZCBvciBodWUgdmFsdWUgcmVsYXRpdmUgdG9cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiPHA+Z3JlZW4gb3Igc2F0dXJhdGlvbiB2YWx1ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgY29sb3IgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYzXCIsZGVzY3JpcHRpb246XCI8cD5ibHVlIG9yIGJyaWdodG5lc3MgdmFsdWVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbHBoYVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPmEgY29sb3Igc3RyaW5nPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dfSx7cGFyYW1zOlt7bmFtZTpcImdyYXlcIixkZXNjcmlwdGlvbjpcIjxwPmEgZ3JheSB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYWxwaGFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlc1wiLGRlc2NyaXB0aW9uOlwiPHA+YW4gYXJyYXkgY29udGFpbmluZyB0aGUgcmVkLGdyZWVuLGJsdWUgJlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIGFscGhhIGNvbXBvbmVudHMgb2YgdGhlIGNvbG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJbXVwifV19LHtwYXJhbXM6W3tuYW1lOlwiY29sb3JcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB0aW50IGNvbG9yPC9wPlxcblwiLHR5cGU6XCJwNS5Db2xvclwifV19XX0sbm9UaW50OntuYW1lOlwibm9UaW50XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCJ9LGltYWdlTW9kZTp7bmFtZTpcImltYWdlTW9kZVwiLHBhcmFtczpbe25hbWU6XCJtb2RlXCIsZGVzY3JpcHRpb246XCI8cD5laXRoZXIgQ09STkVSLCBDT1JORVJTLCBvciBDRU5URVI8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiSW1hZ2VcIn0scGl4ZWxzOntuYW1lOlwicGl4ZWxzXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCJ9LGJsZW5kOntuYW1lOlwiYmxlbmRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSW1hZ2VcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwic3JjSW1hZ2VcIixkZXNjcmlwdGlvbjpcIjxwPnNvdXJjZSBpbWFnZTwvcD5cXG5cIix0eXBlOlwicDUuSW1hZ2VcIn0se25hbWU6XCJzeFwiLGRlc2NyaXB0aW9uOlwiPHA+WCBjb29yZGluYXRlIG9mIHRoZSBzb3VyY2UncyB1cHBlciBsZWZ0IGNvcm5lcjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInN5XCIsZGVzY3JpcHRpb246XCI8cD5ZIGNvb3JkaW5hdGUgb2YgdGhlIHNvdXJjZSdzIHVwcGVyIGxlZnQgY29ybmVyPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwic3dcIixkZXNjcmlwdGlvbjpcIjxwPnNvdXJjZSBpbWFnZSB3aWR0aDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInNoXCIsZGVzY3JpcHRpb246XCI8cD5zb3VyY2UgaW1hZ2UgaGVpZ2h0PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHhcIixkZXNjcmlwdGlvbjpcIjxwPlggY29vcmRpbmF0ZSBvZiB0aGUgZGVzdGluYXRpb24ncyB1cHBlciBsZWZ0IGNvcm5lcjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR5XCIsZGVzY3JpcHRpb246XCI8cD5ZIGNvb3JkaW5hdGUgb2YgdGhlIGRlc3RpbmF0aW9uJ3MgdXBwZXIgbGVmdCBjb3JuZXI8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkd1wiLGRlc2NyaXB0aW9uOlwiPHA+ZGVzdGluYXRpb24gaW1hZ2Ugd2lkdGg8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkaFwiLGRlc2NyaXB0aW9uOlwiPHA+ZGVzdGluYXRpb24gaW1hZ2UgaGVpZ2h0PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiYmxlbmRNb2RlXCIsZGVzY3JpcHRpb246XCI8cD50aGUgYmxlbmQgbW9kZS4gZWl0aGVyXFxuICAgIEJMRU5ELCBEQVJLRVNULCBMSUdIVEVTVCwgRElGRkVSRU5DRSxcXG4gICAgTVVMVElQTFksIEVYQ0xVU0lPTiwgU0NSRUVOLCBSRVBMQUNFLCBPVkVSTEFZLCBIQVJEX0xJR0hULFxcbiAgICBTT0ZUX0xJR0hULCBET0RHRSwgQlVSTiwgQUREIG9yIE5PUk1BTC48L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCJ9XX0se3BhcmFtczpbe25hbWU6XCJzeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzeVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzd1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzaFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkd1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkaFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJibGVuZE1vZGVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJDb25zdGFudFwifV19XX0sY29weTp7bmFtZTpcImNvcHlcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSW1hZ2VcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwic3JjSW1hZ2VcIixkZXNjcmlwdGlvbjpcIjxwPnNvdXJjZSBpbWFnZTwvcD5cXG5cIix0eXBlOlwicDUuSW1hZ2V8cDUuRWxlbWVudFwifSx7bmFtZTpcInN4XCIsZGVzY3JpcHRpb246XCI8cD5YIGNvb3JkaW5hdGUgb2YgdGhlIHNvdXJjZSdzIHVwcGVyIGxlZnQgY29ybmVyPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwic3lcIixkZXNjcmlwdGlvbjpcIjxwPlkgY29vcmRpbmF0ZSBvZiB0aGUgc291cmNlJ3MgdXBwZXIgbGVmdCBjb3JuZXI8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzd1wiLGRlc2NyaXB0aW9uOlwiPHA+c291cmNlIGltYWdlIHdpZHRoPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwic2hcIixkZXNjcmlwdGlvbjpcIjxwPnNvdXJjZSBpbWFnZSBoZWlnaHQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeFwiLGRlc2NyaXB0aW9uOlwiPHA+WCBjb29yZGluYXRlIG9mIHRoZSBkZXN0aW5hdGlvbidzIHVwcGVyIGxlZnQgY29ybmVyPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHlcIixkZXNjcmlwdGlvbjpcIjxwPlkgY29vcmRpbmF0ZSBvZiB0aGUgZGVzdGluYXRpb24ncyB1cHBlciBsZWZ0IGNvcm5lcjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR3XCIsZGVzY3JpcHRpb246XCI8cD5kZXN0aW5hdGlvbiBpbWFnZSB3aWR0aDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImRoXCIsZGVzY3JpcHRpb246XCI8cD5kZXN0aW5hdGlvbiBpbWFnZSBoZWlnaHQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn1dfSx7cGFyYW1zOlt7bmFtZTpcInN4XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInN5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInN3XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInNoXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR4XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR3XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImRoXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlclwifV19XX0sZmlsdGVyOntuYW1lOlwiZmlsdGVyXCIscGFyYW1zOlt7bmFtZTpcImZpbHRlclR5cGVcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBUSFJFU0hPTEQsIEdSQVksIE9QQVFVRSwgSU5WRVJULFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQT1NURVJJWkUsIEJMVVIsIEVST0RFLCBESUxBVEUgb3IgQkxVUi5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VlIEZpbHRlcnMuanMgZm9yIGRvY3Mgb25cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWFjaCBhdmFpbGFibGUgZmlsdGVyPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwifSx7bmFtZTpcImZpbHRlclBhcmFtXCIsZGVzY3JpcHRpb246XCI8cD5hbiBvcHRpb25hbCBwYXJhbWV0ZXIgdW5pcXVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGVhY2ggZmlsdGVyLCBzZWUgYWJvdmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCJ9LGdldDp7bmFtZTpcImdldFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJbWFnZVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIHBpeGVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgb2YgdGhlIHBpeGVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ3XCIsZGVzY3JpcHRpb246XCI8cD53aWR0aDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiaFwiLGRlc2NyaXB0aW9uOlwiPHA+aGVpZ2h0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dfSx7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9XX1dfSxsb2FkUGl4ZWxzOntuYW1lOlwibG9hZFBpeGVsc1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJbWFnZVwifSxzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSBwaXhlbDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIG9mIHRoZSBwaXhlbDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiY1wiLGRlc2NyaXB0aW9uOic8cD5pbnNlcnQgYSBncmF5c2NhbGUgdmFsdWUgfCBhIHBpeGVsIGFycmF5IHxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYSA8YSBocmVmPVwiIy9wNS5Db2xvclwiPnA1LkNvbG9yPC9hPiBvYmplY3QgfCBhIDxhIGhyZWY9XCIjL3A1LkltYWdlXCI+cDUuSW1hZ2U8L2E+IHRvIGNvcHk8L3A+XFxuJyx0eXBlOlwiTnVtYmVyfE51bWJlcltdfE9iamVjdFwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkltYWdlXCJ9LHVwZGF0ZVBpeGVsczp7bmFtZTpcInVwZGF0ZVBpeGVsc1wiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIHVwcGVyLWxlZnQgY29ybmVyIG9mIHJlZ2lvblxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvIHVwZGF0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIG9mIHRoZSB1cHBlci1sZWZ0IGNvcm5lciBvZiByZWdpb25cXG4gICAgICAgICAgICAgICAgICAgICAgICB0byB1cGRhdGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcIndcIixkZXNjcmlwdGlvbjpcIjxwPndpZHRoIG9mIHJlZ2lvbiB0byB1cGRhdGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImhcIixkZXNjcmlwdGlvbjpcIjxwPmhlaWdodCBvZiByZWdpb24gdG8gdXBkYXRlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJbWFnZVwifSxsb2FkSlNPTjp7bmFtZTpcImxvYWRKU09OXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIklPXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgdGhlIGZpbGUgb3IgdXJsIHRvIGxvYWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImpzb25wT3B0aW9uc1wiLGRlc2NyaXB0aW9uOlwiPHA+b3B0aW9ucyBvYmplY3QgZm9yIGpzb25wIHJlbGF0ZWQgc2V0dGluZ3M8L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRhdGF0eXBlXCIsZGVzY3JpcHRpb246JzxwPlwianNvblwiIG9yIFwianNvbnBcIjwvcD5cXG4nLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOic8cD5mdW5jdGlvbiB0byBiZSBleGVjdXRlZCBhZnRlclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiMvcDUvbG9hZEpTT05cIj5sb2FkSlNPTigpPC9hPiBjb21wbGV0ZXMsIGRhdGEgaXMgcGFzc2VkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiBhcyBmaXJzdCBhcmd1bWVudDwvcD5cXG4nLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGlmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVyZSBpcyBhbiBlcnJvciwgcmVzcG9uc2UgaXMgcGFzc2VkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiBhcyBmaXJzdCBhcmd1bWVudDwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJkYXRhdHlwZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH0se25hbWU6XCJlcnJvckNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uXCJ9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XX1dfSxsb2FkU3RyaW5nczp7bmFtZTpcImxvYWRTdHJpbmdzXCIscGFyYW1zOlt7bmFtZTpcImZpbGVuYW1lXCIsZGVzY3JpcHRpb246XCI8cD5uYW1lIG9mIHRoZSBmaWxlIG9yIHVybCB0byBsb2FkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOic8cD5mdW5jdGlvbiB0byBiZSBleGVjdXRlZCBhZnRlciA8YSBocmVmPVwiIy9wNS9sb2FkU3RyaW5nc1wiPmxvYWRTdHJpbmdzKCk8L2E+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGVzLCBBcnJheSBpcyBwYXNzZWQgaW4gYXMgZmlyc3RcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmd1bWVudDwvcD5cXG4nLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGlmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlcmUgaXMgYW4gZXJyb3IsIHJlc3BvbnNlIGlzIHBhc3NlZFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluIGFzIGZpcnN0IGFyZ3VtZW50PC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIklPXCJ9LGxvYWRUYWJsZTp7bmFtZTpcImxvYWRUYWJsZVwiLHBhcmFtczpbe25hbWU6XCJmaWxlbmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+bmFtZSBvZiB0aGUgZmlsZSBvciBVUkwgdG8gbG9hZDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiZXh0ZW5zaW9uXCIsZGVzY3JpcHRpb246JzxwPnBhcnNlIHRoZSB0YWJsZSBieSBjb21tYS1zZXBhcmF0ZWQgdmFsdWVzIFwiY3N2XCIsIHNlbWljb2xvbi1zZXBhcmF0ZWRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzIFwic3N2XCIsIG9yIHRhYi1zZXBhcmF0ZWQgdmFsdWVzIFwidHN2XCI8L3A+XFxuJyx0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiaGVhZGVyXCIsZGVzY3JpcHRpb246JzxwPlwiaGVhZGVyXCIgdG8gaW5kaWNhdGUgdGFibGUgaGFzIGhlYWRlciByb3c8L3A+XFxuJyx0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjonPHA+ZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgYWZ0ZXJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiMvcDUvbG9hZFRhYmxlXCI+bG9hZFRhYmxlKCk8L2E+IGNvbXBsZXRlcy4gT24gc3VjY2VzcywgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjL3A1LlRhYmxlXCI+VGFibGU8L2E+IG9iamVjdCBpcyBwYXNzZWQgaW4gYXMgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0IGFyZ3VtZW50LjwvcD5cXG4nLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGlmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZXJlIGlzIGFuIGVycm9yLCByZXNwb25zZSBpcyBwYXNzZWRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYXMgZmlyc3QgYXJndW1lbnQ8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0sbG9hZFhNTDp7bmFtZTpcImxvYWRYTUxcIixwYXJhbXM6W3tuYW1lOlwiZmlsZW5hbWVcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgdGhlIGZpbGUgb3IgVVJMIHRvIGxvYWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246JzxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGFmdGVyIDxhIGhyZWY9XCIjL3A1L2xvYWRYTUxcIj5sb2FkWE1MKCk8L2E+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGVzLCBYTUwgb2JqZWN0IGlzIHBhc3NlZCBpbiBhc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0IGFyZ3VtZW50PC9wPlxcbicsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgaWZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVyZSBpcyBhbiBlcnJvciwgcmVzcG9uc2UgaXMgcGFzc2VkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYXMgZmlyc3QgYXJndW1lbnQ8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0sbG9hZEJ5dGVzOntuYW1lOlwibG9hZEJ5dGVzXCIscGFyYW1zOlt7bmFtZTpcImZpbGVcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgdGhlIGZpbGUgb3IgVVJMIHRvIGxvYWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246JzxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGFmdGVyIDxhIGhyZWY9XCIjL3A1L2xvYWRCeXRlc1wiPmxvYWRCeXRlcygpPC9hPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGVzPC9wPlxcbicsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgaWYgdGhlcmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGFuIGVycm9yPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIklPXCJ9LGh0dHBHZXQ6e25hbWU6XCJodHRwR2V0XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIklPXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgdGhlIGZpbGUgb3IgdXJsIHRvIGxvYWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImRhdGF0eXBlXCIsZGVzY3JpcHRpb246JzxwPlwianNvblwiLCBcImpzb25wXCIsIFwiYmluYXJ5XCIsIFwiYXJyYXlCdWZmZXJcIixcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwieG1sXCIsIG9yIFwidGV4dFwiPC9wPlxcbicsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRhdGFcIixkZXNjcmlwdGlvbjpcIjxwPnBhcmFtIGRhdGEgcGFzc2VkIHNlbnQgd2l0aCByZXF1ZXN0PC9wPlxcblwiLHR5cGU6XCJPYmplY3R8Qm9vbGVhblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246JzxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGFmdGVyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiIy9wNS9odHRwR2V0XCI+aHR0cEdldCgpPC9hPiBjb21wbGV0ZXMsIGRhdGEgaXMgcGFzc2VkIGluXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcyBmaXJzdCBhcmd1bWVudDwvcD5cXG4nLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGlmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVyZSBpcyBhbiBlcnJvciwgcmVzcG9uc2UgaXMgcGFzc2VkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiBhcyBmaXJzdCBhcmd1bWVudDwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJkYXRhXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiT2JqZWN0fEJvb2xlYW5cIn0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJGdW5jdGlvblwifSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV19XX0saHR0cFBvc3Q6e25hbWU6XCJodHRwUG9zdFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCI8cD5uYW1lIG9mIHRoZSBmaWxlIG9yIHVybCB0byBsb2FkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJkYXRhdHlwZVwiLGRlc2NyaXB0aW9uOic8cD5cImpzb25cIiwgXCJqc29ucFwiLCBcInhtbFwiLCBvciBcInRleHRcIi5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIG9taXR0ZWQsIDxhIGhyZWY9XCIjL3A1L2h0dHBQb3N0XCI+aHR0cFBvc3QoKTwvYT4gd2lsbCBndWVzcy48L3A+XFxuJyx0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGF0YVwiLGRlc2NyaXB0aW9uOlwiPHA+cGFyYW0gZGF0YSBwYXNzZWQgc2VudCB3aXRoIHJlcXVlc3Q8L3A+XFxuXCIsdHlwZTpcIk9iamVjdHxCb29sZWFuXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjonPHA+ZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgYWZ0ZXJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjL3A1L2h0dHBQb3N0XCI+aHR0cFBvc3QoKTwvYT4gY29tcGxldGVzLCBkYXRhIGlzIHBhc3NlZCBpblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXMgZmlyc3QgYXJndW1lbnQ8L3A+XFxuJyx0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH0se25hbWU6XCJlcnJvckNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBiZSBleGVjdXRlZCBpZlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlcmUgaXMgYW4gZXJyb3IsIHJlc3BvbnNlIGlzIHBhc3NlZFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYXMgZmlyc3QgYXJndW1lbnQ8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiZGF0YVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk9iamVjdHxCb29sZWFuXCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwicGF0aFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiRnVuY3Rpb25cIn0se25hbWU6XCJlcnJvckNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dfV19LGh0dHBEbzp7bmFtZTpcImh0dHBEb1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCI8cD5uYW1lIG9mIHRoZSBmaWxlIG9yIHVybCB0byBsb2FkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJtZXRob2RcIixkZXNjcmlwdGlvbjonPHA+ZWl0aGVyIFwiR0VUXCIsIFwiUE9TVFwiLCBvciBcIlBVVFwiLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdHMgdG8gXCJHRVRcIjwvcD5cXG4nLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJkYXRhdHlwZVwiLGRlc2NyaXB0aW9uOic8cD5cImpzb25cIiwgXCJqc29ucFwiLCBcInhtbFwiLCBvciBcInRleHRcIjwvcD5cXG4nLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJkYXRhXCIsZGVzY3JpcHRpb246XCI8cD5wYXJhbSBkYXRhIHBhc3NlZCBzZW50IHdpdGggcmVxdWVzdDwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjonPHA+ZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgYWZ0ZXJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjL3A1L2h0dHBHZXRcIj5odHRwR2V0KCk8L2E+IGNvbXBsZXRlcywgZGF0YSBpcyBwYXNzZWQgaW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzIGZpcnN0IGFyZ3VtZW50PC9wPlxcbicsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgaWZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZXJlIGlzIGFuIGVycm9yLCByZXNwb25zZSBpcyBwYXNzZWRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluIGFzIGZpcnN0IGFyZ3VtZW50PC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwicGF0aFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcIm9wdGlvbnNcIixkZXNjcmlwdGlvbjonPHA+UmVxdWVzdCBvYmplY3Qgb3B0aW9ucyBhcyBkb2N1bWVudGVkIGluIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmZXRjaFwiIEFQSVxcbjxhIGhyZWY9XCJodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9kb2NzL1dlYi9BUEkvRmV0Y2hfQVBJXCI+cmVmZXJlbmNlPC9hPjwvcD5cXG4nLHR5cGU6XCJPYmplY3RcIn0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XX1dfSxjcmVhdGVXcml0ZXI6e25hbWU6XCJjcmVhdGVXcml0ZXJcIixwYXJhbXM6W3tuYW1lOlwibmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+bmFtZSBvZiB0aGUgZmlsZSB0byBiZSBjcmVhdGVkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJleHRlbnNpb25cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wifSxzYXZlOntuYW1lOlwic2F2ZVwiLHBhcmFtczpbe25hbWU6XCJvYmplY3RPckZpbGVuYW1lXCIsZGVzY3JpcHRpb246XCI8cD5JZiBmaWxlbmFtZSBpcyBwcm92aWRlZCwgd2lsbFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlIGNhbnZhcyBhcyBhbiBpbWFnZSB3aXRoXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVpdGhlciBwbmcgb3IganBnIGV4dGVuc2lvblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXBlbmRpbmcgb24gdGhlIGZpbGVuYW1lLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBvYmplY3QgaXMgcHJvdmlkZWQsIHdpbGxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZSBkZXBlbmRpbmcgb24gdGhlIG9iamVjdFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgZmlsZW5hbWUgKHNlZSBleGFtcGxlc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYm92ZSkuPC9wPlxcblwiLHR5cGU6XCJPYmplY3R8U3RyaW5nXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZmlsZW5hbWVcIixkZXNjcmlwdGlvbjpcIjxwPklmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBhcyB0aGUgZmlyc3RcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtZXRlciwgdGhlbiB0aGUgc2Vjb25kIHBhcmFtZXRlclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNhdGVzIHRoZSBmaWxlbmFtZSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBzaG91bGQgaW5jbHVkZSBhbiBhcHByb3ByaWF0ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZSBleHRlbnNpb24gKHNlZSBleGFtcGxlcyBhYm92ZSkuPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJvcHRpb25zXCIsZGVzY3JpcHRpb246XCI8cD5BZGRpdGlvbmFsIG9wdGlvbnMgZGVwZW5kIG9uXFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxldHlwZS4gRm9yIGV4YW1wbGUsIHdoZW4gc2F2aW5nIEpTT04sXFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpbmRpY2F0ZXMgdGhhdCB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dCB3aWxsIGJlIG9wdGltaXplZCBmb3IgZmlsZXNpemUsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICByYXRoZXIgdGhhbiByZWFkYWJpbGl0eS48L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW58U3RyaW5nXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0sc2F2ZUpTT046e25hbWU6XCJzYXZlSlNPTlwiLHBhcmFtczpbe25hbWU6XCJqc29uXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiQXJyYXl8T2JqZWN0XCJ9LHtuYW1lOlwiZmlsZW5hbWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJvcHRpbWl6ZVwiLGRlc2NyaXB0aW9uOlwiPHA+SWYgdHJ1ZSwgcmVtb3ZlcyBsaW5lIGJyZWFrc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgc3BhY2VzIGZyb20gdGhlIG91dHB1dFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlIHRvIG9wdGltaXplIGZpbGVzaXplXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChidXQgbm90IHJlYWRhYmlsaXR5KS48L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wifSxzYXZlU3RyaW5nczp7bmFtZTpcInNhdmVTdHJpbmdzXCIscGFyYW1zOlt7bmFtZTpcImxpc3RcIixkZXNjcmlwdGlvbjpcIjxwPnN0cmluZyBhcnJheSB0byBiZSB3cml0dGVuPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdbXVwifSx7bmFtZTpcImZpbGVuYW1lXCIsZGVzY3JpcHRpb246XCI8cD5maWxlbmFtZSBmb3Igb3V0cHV0PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJleHRlbnNpb25cIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBmaWxlbmFtZSdzIGV4dGVuc2lvbjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiaXNDUkxGXCIsZGVzY3JpcHRpb246XCI8cD5pZiB0cnVlLCBjaGFuZ2UgbGluZS1icmVhayB0byBDUkxGPC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0sc2F2ZVRhYmxlOntuYW1lOlwic2F2ZVRhYmxlXCIscGFyYW1zOlt7bmFtZTpcIlRhYmxlXCIsZGVzY3JpcHRpb246JzxwPnRoZSA8YSBocmVmPVwiIy9wNS5UYWJsZVwiPlRhYmxlPC9hPiBvYmplY3QgdG8gc2F2ZSB0byBhIGZpbGU8L3A+XFxuJyx0eXBlOlwicDUuVGFibGVcIn0se25hbWU6XCJmaWxlbmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGZpbGVuYW1lIHRvIHdoaWNoIHRoZSBUYWJsZSBzaG91bGQgYmUgc2F2ZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcIm9wdGlvbnNcIixkZXNjcmlwdGlvbjonPHA+Y2FuIGJlIG9uZSBvZiBcInRzdlwiLCBcImNzdlwiLCBvciBcImh0bWxcIjwvcD5cXG4nLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wifSxhYnM6e25hbWU6XCJhYnNcIixwYXJhbXM6W3tuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIHRvIGNvbXB1dGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sY2VpbDp7bmFtZTpcImNlaWxcIixwYXJhbXM6W3tuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIHRvIHJvdW5kIHVwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LGNvbnN0cmFpbjp7bmFtZTpcImNvbnN0cmFpblwiLHBhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgdG8gY29uc3RyYWluPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJsb3dcIixkZXNjcmlwdGlvbjpcIjxwPm1pbmltdW0gbGltaXQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImhpZ2hcIixkZXNjcmlwdGlvbjpcIjxwPm1heGltdW0gbGltaXQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sZGlzdDp7bmFtZTpcImRpc3RcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4MVwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSBmaXJzdCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTFcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgZmlyc3QgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIngyXCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTJcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgc2Vjb25kIHBvaW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dfSx7cGFyYW1zOlt7bmFtZTpcIngxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieTFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6MVwiLGRlc2NyaXB0aW9uOlwiPHA+ei1jb29yZGluYXRlIG9mIHRoZSBmaXJzdCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieDJcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInoyXCIsZGVzY3JpcHRpb246XCI8cD56LWNvb3JkaW5hdGUgb2YgdGhlIHNlY29uZCBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XX1dfSxleHA6e25hbWU6XCJleHBcIixwYXJhbXM6W3tuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiPHA+ZXhwb25lbnQgdG8gcmFpc2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sZmxvb3I6e25hbWU6XCJmbG9vclwiLHBhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgdG8gcm91bmQgZG93bjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxsZXJwOntuYW1lOlwibGVycFwiLHBhcmFtczpbe25hbWU6XCJzdGFydFwiLGRlc2NyaXB0aW9uOlwiPHA+Zmlyc3QgdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInN0b3BcIixkZXNjcmlwdGlvbjpcIjxwPnNlY29uZCB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYW10XCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sbG9nOntuYW1lOlwibG9nXCIscGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBncmVhdGVyIHRoYW4gMDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxtYWc6e25hbWU6XCJtYWdcIixwYXJhbXM6W3tuYW1lOlwiYVwiLGRlc2NyaXB0aW9uOlwiPHA+Zmlyc3QgdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImJcIixkZXNjcmlwdGlvbjpcIjxwPnNlY29uZCB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxtYXA6e25hbWU6XCJtYXBcIixwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBpbmNvbWluZyB2YWx1ZSB0byBiZSBjb252ZXJ0ZWQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInN0YXJ0MVwiLGRlc2NyaXB0aW9uOlwiPHA+bG93ZXIgYm91bmQgb2YgdGhlIHZhbHVlJ3MgY3VycmVudCByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwic3RvcDFcIixkZXNjcmlwdGlvbjpcIjxwPnVwcGVyIGJvdW5kIG9mIHRoZSB2YWx1ZSdzIGN1cnJlbnQgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInN0YXJ0MlwiLGRlc2NyaXB0aW9uOlwiPHA+bG93ZXIgYm91bmQgb2YgdGhlIHZhbHVlJ3MgdGFyZ2V0IHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJzdG9wMlwiLGRlc2NyaXB0aW9uOlwiPHA+dXBwZXIgYm91bmQgb2YgdGhlIHZhbHVlJ3MgdGFyZ2V0IHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ3aXRoaW5Cb3VuZHNcIixkZXNjcmlwdGlvbjpcIjxwPmNvbnN0cmFpbiB0aGUgdmFsdWUgdG8gdGhlIG5ld2x5IG1hcHBlZCByYW5nZTwvcD5cXG5cIix0eXBlOlwiQm9vbGVhblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sbWF4OntuYW1lOlwibWF4XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwibjBcIixkZXNjcmlwdGlvbjpcIjxwPk51bWJlciB0byBjb21wYXJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJuMVwiLGRlc2NyaXB0aW9uOlwiPHA+TnVtYmVyIHRvIGNvbXBhcmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV19LHtwYXJhbXM6W3tuYW1lOlwibnVtc1wiLGRlc2NyaXB0aW9uOlwiPHA+TnVtYmVycyB0byBjb21wYXJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJbXVwifV19XX0sbWluOntuYW1lOlwibWluXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwibjBcIixkZXNjcmlwdGlvbjpcIjxwPk51bWJlciB0byBjb21wYXJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJuMVwiLGRlc2NyaXB0aW9uOlwiPHA+TnVtYmVyIHRvIGNvbXBhcmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV19LHtwYXJhbXM6W3tuYW1lOlwibnVtc1wiLGRlc2NyaXB0aW9uOlwiPHA+TnVtYmVycyB0byBjb21wYXJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJbXVwifV19XX0sbm9ybTp7bmFtZTpcIm5vcm1cIixwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPmluY29taW5nIHZhbHVlIHRvIGJlIG5vcm1hbGl6ZWQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInN0YXJ0XCIsZGVzY3JpcHRpb246XCI8cD5sb3dlciBib3VuZCBvZiB0aGUgdmFsdWUncyBjdXJyZW50IHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJzdG9wXCIsZGVzY3JpcHRpb246XCI8cD51cHBlciBib3VuZCBvZiB0aGUgdmFsdWUncyBjdXJyZW50IHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LHBvdzp7bmFtZTpcInBvd1wiLHBhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD5iYXNlIG9mIHRoZSBleHBvbmVudGlhbCBleHByZXNzaW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJlXCIsZGVzY3JpcHRpb246XCI8cD5wb3dlciBieSB3aGljaCB0byByYWlzZSB0aGUgYmFzZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxyb3VuZDp7bmFtZTpcInJvdW5kXCIscGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciB0byByb3VuZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiZGVjaW1hbHNcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBkZWNpbWFsIHBsYWNlcyB0byByb3VuZCB0bywgZGVmYXVsdCBpcyAwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LHNxOntuYW1lOlwic3FcIixwYXJhbXM6W3tuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIHRvIHNxdWFyZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxzcXJ0OntuYW1lOlwic3FydFwiLHBhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD5ub24tbmVnYXRpdmUgbnVtYmVyIHRvIHNxdWFyZSByb290PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LGZyYWN0OntuYW1lOlwiZnJhY3RcIixwYXJhbXM6W3tuYW1lOlwibnVtXCIsZGVzY3JpcHRpb246XCI8cD5OdW1iZXIgd2hvc2UgZnJhY3Rpb25hbCBwYXJ0IG5lZWRzIHRvIGJlIGZvdW5kIG91dDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxjcmVhdGVWZWN0b3I6e25hbWU6XCJjcmVhdGVWZWN0b3JcIixwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eCBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eSBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+eiBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxub2lzZTp7bmFtZTpcIm5vaXNlXCIscGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBpbiBub2lzZSBzcGFjZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIGluIG5vaXNlIHNwYWNlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCI8cD56LWNvb3JkaW5hdGUgaW4gbm9pc2Ugc3BhY2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sbm9pc2VEZXRhaWw6e25hbWU6XCJub2lzZURldGFpbFwiLHBhcmFtczpbe25hbWU6XCJsb2RcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBvY3RhdmVzIHRvIGJlIHVzZWQgYnkgdGhlIG5vaXNlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJmYWxsb2ZmXCIsZGVzY3JpcHRpb246XCI8cD5mYWxsb2ZmIGZhY3RvciBmb3IgZWFjaCBvY3RhdmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sbm9pc2VTZWVkOntuYW1lOlwibm9pc2VTZWVkXCIscGFyYW1zOlt7bmFtZTpcInNlZWRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBzZWVkIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LHJhbmRvbVNlZWQ6e25hbWU6XCJyYW5kb21TZWVkXCIscGFyYW1zOlt7bmFtZTpcInNlZWRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBzZWVkIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LHJhbmRvbTp7bmFtZTpcInJhbmRvbVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm1pblwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGxvd2VyIGJvdW5kIChpbmNsdXNpdmUpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJtYXhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB1cHBlciBib3VuZCAoZXhjbHVzaXZlKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJjaG9pY2VzXCIsZGVzY3JpcHRpb246XCI8cD50aGUgYXJyYXkgdG8gY2hvb3NlIGZyb208L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9XX1dfSxyYW5kb21HYXVzc2lhbjp7bmFtZTpcInJhbmRvbUdhdXNzaWFuXCIscGFyYW1zOlt7bmFtZTpcIm1lYW5cIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBtZWFuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJzZFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHN0YW5kYXJkIGRldmlhdGlvbjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxhY29zOntuYW1lOlwiYWNvc1wiLHBhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHZhbHVlIHdob3NlIGFyYyBjb3NpbmUgaXMgdG8gYmUgcmV0dXJuZWQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sYXNpbjp7bmFtZTpcImFzaW5cIixwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2YWx1ZSB3aG9zZSBhcmMgc2luZSBpcyB0byBiZSByZXR1cm5lZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxhdGFuOntuYW1lOlwiYXRhblwiLHBhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHZhbHVlIHdob3NlIGFyYyB0YW5nZW50IGlzIHRvIGJlIHJldHVybmVkPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJNYXRoXCJ9LGF0YW4yOntuYW1lOlwiYXRhbjJcIixwYXJhbXM6W3tuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eS1jb29yZGluYXRlIG9mIHRoZSBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRoZSBwb2ludDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxjb3M6e25hbWU6XCJjb3NcIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbmdsZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxzaW46e25hbWU6XCJzaW5cIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbmdsZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSx0YW46e25hbWU6XCJ0YW5cIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbmdsZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSxkZWdyZWVzOntuYW1lOlwiZGVncmVlc1wiLHBhcmFtczpbe25hbWU6XCJyYWRpYW5zXCIsZGVzY3JpcHRpb246XCI8cD50aGUgcmFkaWFucyB2YWx1ZSB0byBjb252ZXJ0IHRvIGRlZ3JlZXM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0scmFkaWFuczp7bmFtZTpcInJhZGlhbnNcIixwYXJhbXM6W3tuYW1lOlwiZGVncmVlc1wiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGRlZ3JlZSB2YWx1ZSB0byBjb252ZXJ0IHRvIHJhZGlhbnM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIk1hdGhcIn0sYW5nbGVNb2RlOntuYW1lOlwiYW5nbGVNb2RlXCIscGFyYW1zOlt7bmFtZTpcIm1vZGVcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBSQURJQU5TIG9yIERFR1JFRVM8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTWF0aFwifSx0ZXh0QWxpZ246e25hbWU6XCJ0ZXh0QWxpZ25cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiVHlwb2dyYXBoeVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJob3JpekFsaWduXCIsZGVzY3JpcHRpb246XCI8cD5ob3Jpem9udGFsIGFsaWdubWVudCwgZWl0aGVyIExFRlQsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgQ0VOVEVSLCBvciBSSUdIVDwvcD5cXG5cIix0eXBlOlwiQ29uc3RhbnRcIn0se25hbWU6XCJ2ZXJ0QWxpZ25cIixkZXNjcmlwdGlvbjpcIjxwPnZlcnRpY2FsIGFsaWdubWVudCwgZWl0aGVyIFRPUCxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBCT1RUT00sIENFTlRFUiwgb3IgQkFTRUxJTkU8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbXX1dfSx0ZXh0TGVhZGluZzp7bmFtZTpcInRleHRMZWFkaW5nXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlR5cG9ncmFwaHlcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwibGVhZGluZ1wiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHNpemUgaW4gcGl4ZWxzIGZvciBzcGFjaW5nIGJldHdlZW4gbGluZXM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W119XX0sdGV4dFNpemU6e25hbWU6XCJ0ZXh0U2l6ZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJUeXBvZ3JhcGh5XCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInRoZVNpemVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBzaXplIG9mIHRoZSBsZXR0ZXJzIGluIHVuaXRzIG9mIHBpeGVsczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbXX1dfSx0ZXh0U3R5bGU6e25hbWU6XCJ0ZXh0U3R5bGVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiVHlwb2dyYXBoeVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ0aGVTdHlsZVwiLGRlc2NyaXB0aW9uOlwiPHA+c3R5bGluZyBmb3IgdGV4dCwgZWl0aGVyIE5PUk1BTCxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBJVEFMSUMsIEJPTEQgb3IgQk9MRElUQUxJQzwvcD5cXG5cIix0eXBlOlwiQ29uc3RhbnRcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOltdfV19LHRleHRXaWR0aDp7bmFtZTpcInRleHRXaWR0aFwiLHBhcmFtczpbe25hbWU6XCJ0aGVUZXh0XCIsZGVzY3JpcHRpb246XCI8cD50aGUgU3RyaW5nIG9mIGNoYXJhY3RlcnMgdG8gbWVhc3VyZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiVHlwb2dyYXBoeVwifSx0ZXh0QXNjZW50OntuYW1lOlwidGV4dEFzY2VudFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJUeXBvZ3JhcGh5XCJ9LHRleHREZXNjZW50OntuYW1lOlwidGV4dERlc2NlbnRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiVHlwb2dyYXBoeVwifSxsb2FkRm9udDp7bmFtZTpcImxvYWRGb250XCIscGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgdGhlIGZpbGUgb3IgdXJsIHRvIGxvYWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246JzxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGFmdGVyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiIy9wNS9sb2FkRm9udFwiPmxvYWRGb250KCk8L2E+IGNvbXBsZXRlczwvcD5cXG4nLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcIm9uRXJyb3JcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGlmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBlcnJvciBvY2N1cnM8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiVHlwb2dyYXBoeVwifSx0ZXh0OntuYW1lOlwidGV4dFwiLHBhcmFtczpbe25hbWU6XCJzdHJcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbHBoYW51bWVyaWNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN5bWJvbHMgdG8gYmUgZGlzcGxheWVkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8T2JqZWN0fEFycmF5fE51bWJlcnxCb29sZWFuXCJ9LHtuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1jb29yZGluYXRlIG9mIHRleHQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0ZXh0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ4MlwiLGRlc2NyaXB0aW9uOic8cD5ieSBkZWZhdWx0LCB0aGUgd2lkdGggb2YgdGhlIHRleHQgYm94LFxcbiAgICAgICAgICAgICAgICAgICAgc2VlIDxhIGhyZWY9XCIjL3A1L3JlY3RNb2RlXCI+cmVjdE1vZGUoKTwvYT4gZm9yIG1vcmUgaW5mbzwvcD5cXG4nLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5MlwiLGRlc2NyaXB0aW9uOic8cD5ieSBkZWZhdWx0LCB0aGUgaGVpZ2h0IG9mIHRoZSB0ZXh0IGJveCxcXG4gICAgICAgICAgICAgICAgICAgIHNlZSA8YSBocmVmPVwiIy9wNS9yZWN0TW9kZVwiPnJlY3RNb2RlKCk8L2E+IGZvciBtb3JlIGluZm88L3A+XFxuJyx0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiVHlwb2dyYXBoeVwifSx0ZXh0Rm9udDp7bmFtZTpcInRleHRGb250XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlR5cG9ncmFwaHlcIixvdmVybG9hZHM6W3twYXJhbXM6W119LHtwYXJhbXM6W3tuYW1lOlwiZm9udFwiLGRlc2NyaXB0aW9uOic8cD5hIGZvbnQgbG9hZGVkIHZpYSA8YSBocmVmPVwiIy9wNS9sb2FkRm9udFwiPmxvYWRGb250KCk8L2E+LFxcbm9yIGEgU3RyaW5nIHJlcHJlc2VudGluZyBhIDxhIGhyZWY9XCJodHRwczovL216bC5sYS8yZE93OFdEXCI+d2ViIHNhZmUgZm9udDwvYT5cXG4oYSBmb250IHRoYXQgaXMgZ2VuZXJhbGx5IGF2YWlsYWJsZSBhY3Jvc3MgYWxsIHN5c3RlbXMpPC9wPlxcbicsdHlwZTpcIk9iamVjdHxTdHJpbmdcIn0se25hbWU6XCJzaXplXCIsZGVzY3JpcHRpb246XCI8cD50aGUgZm9udCBzaXplIHRvIHVzZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX1dfSxhcHBlbmQ6e25hbWU6XCJhcHBlbmRcIixwYXJhbXM6W3tuYW1lOlwiYXJyYXlcIixkZXNjcmlwdGlvbjpcIjxwPkFycmF5IHRvIGFwcGVuZDwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn0se25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dG8gYmUgYWRkZWQgdG8gdGhlIEFycmF5PC9wPlxcblwiLHR5cGU6XCJBbnlcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCJ9LGFycmF5Q29weTp7bmFtZTpcImFycmF5Q29weVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInNyY1wiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHNvdXJjZSBBcnJheTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn0se25hbWU6XCJzcmNQb3NpdGlvblwiLGRlc2NyaXB0aW9uOlwiPHA+c3RhcnRpbmcgcG9zaXRpb24gaW4gdGhlIHNvdXJjZSBBcnJheTwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImRzdFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGRlc3RpbmF0aW9uIEFycmF5PC9wPlxcblwiLHR5cGU6XCJBcnJheVwifSx7bmFtZTpcImRzdFBvc2l0aW9uXCIsZGVzY3JpcHRpb246XCI8cD5zdGFydGluZyBwb3NpdGlvbiBpbiB0aGUgZGVzdGluYXRpb24gQXJyYXk8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJsZW5ndGhcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBBcnJheSBlbGVtZW50cyB0byBiZSBjb3BpZWQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn1dfSx7cGFyYW1zOlt7bmFtZTpcInNyY1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkFycmF5XCJ9LHtuYW1lOlwiZHN0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiQXJyYXlcIn0se25hbWU6XCJsZW5ndGhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XX1dfSxjb25jYXQ6e25hbWU6XCJjb25jYXRcIixwYXJhbXM6W3tuYW1lOlwiYVwiLGRlc2NyaXB0aW9uOlwiPHA+Zmlyc3QgQXJyYXkgdG8gY29uY2F0ZW5hdGU8L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9LHtuYW1lOlwiYlwiLGRlc2NyaXB0aW9uOlwiPHA+c2Vjb25kIEFycmF5IHRvIGNvbmNhdGVuYXRlPC9wPlxcblwiLHR5cGU6XCJBcnJheVwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIn0scmV2ZXJzZTp7bmFtZTpcInJldmVyc2VcIixwYXJhbXM6W3tuYW1lOlwibGlzdFwiLGRlc2NyaXB0aW9uOlwiPHA+QXJyYXkgdG8gcmV2ZXJzZTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCJ9LHNob3J0ZW46e25hbWU6XCJzaG9ydGVuXCIscGFyYW1zOlt7bmFtZTpcImxpc3RcIixkZXNjcmlwdGlvbjpcIjxwPkFycmF5IHRvIHNob3J0ZW48L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxzaHVmZmxlOntuYW1lOlwic2h1ZmZsZVwiLHBhcmFtczpbe25hbWU6XCJhcnJheVwiLGRlc2NyaXB0aW9uOlwiPHA+QXJyYXkgdG8gc2h1ZmZsZTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn0se25hbWU6XCJib29sXCIsZGVzY3JpcHRpb246XCI8cD5tb2RpZnkgcGFzc2VkIGFycmF5PC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxzb3J0OntuYW1lOlwic29ydFwiLHBhcmFtczpbe25hbWU6XCJsaXN0XCIsZGVzY3JpcHRpb246XCI8cD5BcnJheSB0byBzb3J0PC9wPlxcblwiLHR5cGU6XCJBcnJheVwifSx7bmFtZTpcImNvdW50XCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2YgZWxlbWVudHMgdG8gc29ydCwgc3RhcnRpbmcgZnJvbSAwPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxzcGxpY2U6e25hbWU6XCJzcGxpY2VcIixwYXJhbXM6W3tuYW1lOlwibGlzdFwiLGRlc2NyaXB0aW9uOlwiPHA+QXJyYXkgdG8gc3BsaWNlIGludG88L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIHRvIGJlIHNwbGljZWQgaW48L3A+XFxuXCIsdHlwZTpcIkFueVwifSx7bmFtZTpcInBvc2l0aW9uXCIsZGVzY3JpcHRpb246XCI8cD5pbiB0aGUgYXJyYXkgZnJvbSB3aGljaCB0byBpbnNlcnQgZGF0YTwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIn0sc3Vic2V0OntuYW1lOlwic3Vic2V0XCIscGFyYW1zOlt7bmFtZTpcImxpc3RcIixkZXNjcmlwdGlvbjpcIjxwPkFycmF5IHRvIGV4dHJhY3QgZnJvbTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn0se25hbWU6XCJzdGFydFwiLGRlc2NyaXB0aW9uOlwiPHA+cG9zaXRpb24gdG8gYmVnaW48L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJjb3VudFwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIG9mIHZhbHVlcyB0byBleHRyYWN0PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxmbG9hdDp7bmFtZTpcImZsb2F0XCIscGFyYW1zOlt7bmFtZTpcInN0clwiLGRlc2NyaXB0aW9uOlwiPHA+ZmxvYXQgc3RyaW5nIHRvIHBhcnNlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCJ9LGludDp7bmFtZTpcImludFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIHRvIHBhcnNlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8Qm9vbGVhbnxOdW1iZXJcIn0se25hbWU6XCJyYWRpeFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHJhZGl4IHRvIGNvbnZlcnQgdG8gKGRlZmF1bHQ6IDEwKTwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwibnNcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlcyB0byBwYXJzZTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dfV19LHN0cjp7bmFtZTpcInN0clwiLHBhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSB0byBwYXJzZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEJvb2xlYW58TnVtYmVyfEFycmF5XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxieXRlOntuYW1lOlwiYnl0ZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIHRvIHBhcnNlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8Qm9vbGVhbnxOdW1iZXJcIn1dfSx7cGFyYW1zOlt7bmFtZTpcIm5zXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZXMgdG8gcGFyc2U8L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9XX1dfSxjaGFyOntuYW1lOlwiY2hhclwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIHRvIHBhcnNlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8TnVtYmVyXCJ9XX0se3BhcmFtczpbe25hbWU6XCJuc1wiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWVzIHRvIHBhcnNlPC9wPlxcblwiLHR5cGU6XCJBcnJheVwifV19XX0sdW5jaGFyOntuYW1lOlwidW5jaGFyXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWUgdG8gcGFyc2U8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV19LHtwYXJhbXM6W3tuYW1lOlwibnNcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlcyB0byBwYXJzZTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dfV19LGhleDp7bmFtZTpcImhleFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIHRvIHBhcnNlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkaWdpdHNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcIm5zXCIsZGVzY3JpcHRpb246XCI8cD5hcnJheSBvZiB2YWx1ZXMgdG8gcGFyc2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlcltdXCJ9LHtuYW1lOlwiZGlnaXRzXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XX1dfSx1bmhleDp7bmFtZTpcInVuaGV4XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWUgdG8gcGFyc2U8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV19LHtwYXJhbXM6W3tuYW1lOlwibnNcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlcyB0byBwYXJzZTwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dfV19LGpvaW46e25hbWU6XCJqb2luXCIscGFyYW1zOlt7bmFtZTpcImxpc3RcIixkZXNjcmlwdGlvbjpcIjxwPmFycmF5IG9mIFN0cmluZ3MgdG8gYmUgam9pbmVkPC9wPlxcblwiLHR5cGU6XCJBcnJheVwifSx7bmFtZTpcInNlcGFyYXRvclwiLGRlc2NyaXB0aW9uOlwiPHA+U3RyaW5nIHRvIGJlIHBsYWNlZCBiZXR3ZWVuIGVhY2ggaXRlbTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwifSxtYXRjaDp7bmFtZTpcIm1hdGNoXCIscGFyYW1zOlt7bmFtZTpcInN0clwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIFN0cmluZyB0byBiZSBzZWFyY2hlZDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwicmVnZXhwXCIsZGVzY3JpcHRpb246XCI8cD50aGUgcmVnZXhwIHRvIGJlIHVzZWQgZm9yIG1hdGNoaW5nPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCJ9LG1hdGNoQWxsOntuYW1lOlwibWF0Y2hBbGxcIixwYXJhbXM6W3tuYW1lOlwic3RyXCIsZGVzY3JpcHRpb246XCI8cD50aGUgU3RyaW5nIHRvIGJlIHNlYXJjaGVkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJyZWdleHBcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSByZWdleHAgdG8gYmUgdXNlZCBmb3IgbWF0Y2hpbmc8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIn0sbmY6e25hbWU6XCJuZlwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJEYXRhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm51bVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIE51bWJlciB0byBmb3JtYXQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlcnxTdHJpbmdcIn0se25hbWU6XCJsZWZ0XCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2YgZGlnaXRzIHRvIHRoZSBsZWZ0IG9mIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWNpbWFsIHBvaW50PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyfFN0cmluZ1wiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJpZ2h0XCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2YgZGlnaXRzIHRvIHRoZSByaWdodCBvZiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjaW1hbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlcnxTdHJpbmdcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcIm51bXNcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBOdW1iZXJzIHRvIGZvcm1hdDwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn0se25hbWU6XCJsZWZ0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiSW50ZWdlcnxTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJyaWdodFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJ8U3RyaW5nXCIsb3B0aW9uYWw6ITB9XX1dfSxuZmM6e25hbWU6XCJuZmNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJudW1cIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBOdW1iZXIgdG8gZm9ybWF0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJ8U3RyaW5nXCJ9LHtuYW1lOlwicmlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBkaWdpdHMgdG8gdGhlIHJpZ2h0IG9mIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlY2ltYWwgcG9pbnQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJ8U3RyaW5nXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJudW1zXCIsZGVzY3JpcHRpb246XCI8cD50aGUgTnVtYmVycyB0byBmb3JtYXQ8L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9LHtuYW1lOlwicmlnaHRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyfFN0cmluZ1wiLG9wdGlvbmFsOiEwfV19XX0sbmZwOntuYW1lOlwibmZwXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwibnVtXCIsZGVzY3JpcHRpb246XCI8cD50aGUgTnVtYmVyIHRvIGZvcm1hdDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibGVmdFwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIG9mIGRpZ2l0cyB0byB0aGUgbGVmdCBvZiB0aGUgZGVjaW1hbFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJpZ2h0XCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2YgZGlnaXRzIHRvIHRoZSByaWdodCBvZiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjaW1hbCBwb2ludDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwibnVtc1wiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIE51bWJlcnMgdG8gZm9ybWF0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJbXVwifSx7bmFtZTpcImxlZnRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicmlnaHRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XX1dfSxuZnM6e25hbWU6XCJuZnNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJudW1cIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBOdW1iZXIgdG8gZm9ybWF0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJsZWZ0XCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2YgZGlnaXRzIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWNpbWFsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicmlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBkaWdpdHMgdG8gdGhlIHJpZ2h0IG9mIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWNpbWFsIHBvaW50PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJudW1zXCIsZGVzY3JpcHRpb246XCI8cD50aGUgTnVtYmVycyB0byBmb3JtYXQ8L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9LHtuYW1lOlwibGVmdFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyaWdodFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH1dfV19LHNwbGl0OntuYW1lOlwic3BsaXRcIixwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBTdHJpbmcgdG8gYmUgc3BsaXQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImRlbGltXCIsZGVzY3JpcHRpb246XCI8cD50aGUgU3RyaW5nIHVzZWQgdG8gc2VwYXJhdGUgdGhlIGRhdGE8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIn0sc3BsaXRUb2tlbnM6e25hbWU6XCJzcGxpdFRva2Vuc1wiLHBhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIFN0cmluZyB0byBiZSBzcGxpdDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiZGVsaW1cIixkZXNjcmlwdGlvbjpcIjxwPmxpc3Qgb2YgaW5kaXZpZHVhbCBTdHJpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGFzXFxuICAgICAgICAgICAgICAgICAgICAgICAgIHNlcGFyYXRvcnM8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkRhdGFcIn0sdHJpbTp7bmFtZTpcInRyaW1cIixjbGFzczpcInA1XCIsbW9kdWxlOlwiRGF0YVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJzdHJcIixkZXNjcmlwdGlvbjpcIjxwPmEgU3RyaW5nIHRvIGJlIHRyaW1tZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV19LHtwYXJhbXM6W3tuYW1lOlwic3Ryc1wiLGRlc2NyaXB0aW9uOlwiPHA+YW4gQXJyYXkgb2YgU3RyaW5ncyB0byBiZSB0cmltbWVkPC9wPlxcblwiLHR5cGU6XCJBcnJheVwifV19XX0sZGF5OntuYW1lOlwiZGF5XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIklPXCJ9LGhvdXI6e25hbWU6XCJob3VyXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIklPXCJ9LG1pbnV0ZTp7bmFtZTpcIm1pbnV0ZVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wifSxtaWxsaXM6e25hbWU6XCJtaWxsaXNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0sbW9udGg6e25hbWU6XCJtb250aFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJJT1wifSxzZWNvbmQ6e25hbWU6XCJzZWNvbmRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0seWVhcjp7bmFtZTpcInllYXJcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiSU9cIn0scGxhbmU6e25hbWU6XCJwbGFuZVwiLHBhcmFtczpbe25hbWU6XCJ3aWR0aFwiLGRlc2NyaXB0aW9uOlwiPHA+d2lkdGggb2YgdGhlIHBsYW5lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJoZWlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPmhlaWdodCBvZiB0aGUgcGxhbmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFhcIixkZXNjcmlwdGlvbjpcIjxwPk9wdGlvbmFsIG51bWJlciBvZiB0cmlhbmdsZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJkaXZpc2lvbnMgaW4geC1kaW1lbnNpb248L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkZXRhaWxZXCIsZGVzY3JpcHRpb246XCI8cD5PcHRpb25hbCBudW1iZXIgb2YgdHJpYW5nbGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViZGl2aXNpb25zIGluIHktZGltZW5zaW9uPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sYm94OntuYW1lOlwiYm94XCIscGFyYW1zOlt7bmFtZTpcIndpZHRoXCIsZGVzY3JpcHRpb246XCI8cD53aWR0aCBvZiB0aGUgYm94PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJIZWlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPmhlaWdodCBvZiB0aGUgYm94PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkZXB0aFwiLGRlc2NyaXB0aW9uOlwiPHA+ZGVwdGggb2YgdGhlIGJveDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGV0YWlsWFwiLGRlc2NyaXB0aW9uOlwiPHA+T3B0aW9uYWwgbnVtYmVyIG9mIHRyaWFuZ2xlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViZGl2aXNpb25zIGluIHgtZGltZW5zaW9uPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGV0YWlsWVwiLGRlc2NyaXB0aW9uOlwiPHA+T3B0aW9uYWwgbnVtYmVyIG9mIHRyaWFuZ2xlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViZGl2aXNpb25zIGluIHktZGltZW5zaW9uPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sc3BoZXJlOntuYW1lOlwic3BoZXJlXCIscGFyYW1zOlt7bmFtZTpcInJhZGl1c1wiLGRlc2NyaXB0aW9uOlwiPHA+cmFkaXVzIG9mIGNpcmNsZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGV0YWlsWFwiLGRlc2NyaXB0aW9uOlwiPHA+b3B0aW9uYWwgbnVtYmVyIG9mIHN1YmRpdmlzaW9ucyBpbiB4LWRpbWVuc2lvbjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFlcIixkZXNjcmlwdGlvbjpcIjxwPm9wdGlvbmFsIG51bWJlciBvZiBzdWJkaXZpc2lvbnMgaW4geS1kaW1lbnNpb248L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwifSxjeWxpbmRlcjp7bmFtZTpcImN5bGluZGVyXCIscGFyYW1zOlt7bmFtZTpcInJhZGl1c1wiLGRlc2NyaXB0aW9uOlwiPHA+cmFkaXVzIG9mIHRoZSBzdXJmYWNlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJoZWlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPmhlaWdodCBvZiB0aGUgY3lsaW5kZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFhcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBzdWJkaXZpc2lvbnMgaW4geC1kaW1lbnNpb247XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCBpcyAyNDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFlcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBzdWJkaXZpc2lvbnMgaW4geS1kaW1lbnNpb247XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCBpcyAxPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiYm90dG9tQ2FwXCIsZGVzY3JpcHRpb246XCI8cD53aGV0aGVyIHRvIGRyYXcgdGhlIGJvdHRvbSBvZiB0aGUgY3lsaW5kZXI8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIixvcHRpb25hbDohMH0se25hbWU6XCJ0b3BDYXBcIixkZXNjcmlwdGlvbjpcIjxwPndoZXRoZXIgdG8gZHJhdyB0aGUgdG9wIG9mIHRoZSBjeWxpbmRlcjwvcD5cXG5cIix0eXBlOlwiQm9vbGVhblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LGNvbmU6e25hbWU6XCJjb25lXCIscGFyYW1zOlt7bmFtZTpcInJhZGl1c1wiLGRlc2NyaXB0aW9uOlwiPHA+cmFkaXVzIG9mIHRoZSBib3R0b20gc3VyZmFjZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiaGVpZ2h0XCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQgb2YgdGhlIGNvbmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFhcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBzZWdtZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIG1vcmUgc2VnbWVudHMgdGhlIHNtb290aGVyIGdlb21ldHJ5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgaXMgMjQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkZXRhaWxZXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2Ygc2VnbWVudHMsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBtb3JlIHNlZ21lbnRzIHRoZSBzbW9vdGhlciBnZW9tZXRyeVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0IGlzIDE8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJjYXBcIixkZXNjcmlwdGlvbjpcIjxwPndoZXRoZXIgdG8gZHJhdyB0aGUgYmFzZSBvZiB0aGUgY29uZTwvcD5cXG5cIix0eXBlOlwiQm9vbGVhblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LGVsbGlwc29pZDp7bmFtZTpcImVsbGlwc29pZFwiLHBhcmFtczpbe25hbWU6XCJyYWRpdXN4XCIsZGVzY3JpcHRpb246XCI8cD54LXJhZGl1cyBvZiBlbGxpcHNvaWQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJhZGl1c3lcIixkZXNjcmlwdGlvbjpcIjxwPnktcmFkaXVzIG9mIGVsbGlwc29pZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicmFkaXVzelwiLGRlc2NyaXB0aW9uOlwiPHA+ei1yYWRpdXMgb2YgZWxsaXBzb2lkPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkZXRhaWxYXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2Ygc2VnbWVudHMsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgbW9yZSBzZWdtZW50cyB0aGUgc21vb3RoZXIgZ2VvbWV0cnlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgaXMgMjQuIEF2b2lkIGRldGFpbCBudW1iZXIgYWJvdmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE1MCwgaXQgbWF5IGNyYXNoIHRoZSBicm93c2VyLjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRldGFpbFlcIixkZXNjcmlwdGlvbjpcIjxwPm51bWJlciBvZiBzZWdtZW50cyxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBtb3JlIHNlZ21lbnRzIHRoZSBzbW9vdGhlciBnZW9tZXRyeVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCBpcyAxNi4gQXZvaWQgZGV0YWlsIG51bWJlciBhYm92ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTUwLCBpdCBtYXkgY3Jhc2ggdGhlIGJyb3dzZXIuPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sdG9ydXM6e25hbWU6XCJ0b3J1c1wiLHBhcmFtczpbe25hbWU6XCJyYWRpdXNcIixkZXNjcmlwdGlvbjpcIjxwPnJhZGl1cyBvZiB0aGUgd2hvbGUgcmluZzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidHViZVJhZGl1c1wiLGRlc2NyaXB0aW9uOlwiPHA+cmFkaXVzIG9mIHRoZSB0dWJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkZXRhaWxYXCIsZGVzY3JpcHRpb246XCI8cD5udW1iZXIgb2Ygc2VnbWVudHMgaW4geC1kaW1lbnNpb24sXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBtb3JlIHNlZ21lbnRzIHRoZSBzbW9vdGhlciBnZW9tZXRyeVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0IGlzIDI0PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGV0YWlsWVwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIG9mIHNlZ21lbnRzIGluIHktZGltZW5zaW9uLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgbW9yZSBzZWdtZW50cyB0aGUgc21vb3RoZXIgZ2VvbWV0cnlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCBpcyAxNjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIlNoYXBlXCJ9LG9yYml0Q29udHJvbDp7bmFtZTpcIm9yYml0Q29udHJvbFwiLHBhcmFtczpbe25hbWU6XCJzZW5zaXRpdml0eVhcIixkZXNjcmlwdGlvbjpcIjxwPnNlbnNpdGl2aXR5IHRvIG1vdXNlIG1vdmVtZW50IGFsb25nIFggYXhpczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic2Vuc2l0aXZpdHlZXCIsZGVzY3JpcHRpb246XCI8cD5zZW5zaXRpdml0eSB0byBtb3VzZSBtb3ZlbWVudCBhbG9uZyBZIGF4aXM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInNlbnNpdGl2aXR5WlwiLGRlc2NyaXB0aW9uOlwiPHA+c2Vuc2l0aXZpdHkgdG8gc2Nyb2xsIG1vdmVtZW50IGFsb25nIFogYXhpczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sZGVidWdNb2RlOntuYW1lOlwiZGVidWdNb2RlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcIm1vZGVcIixkZXNjcmlwdGlvbjpcIjxwPmVpdGhlciBHUklEIG9yIEFYRVM8L3A+XFxuXCIsdHlwZTpcIkNvbnN0YW50XCJ9XX0se3BhcmFtczpbe25hbWU6XCJtb2RlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiQ29uc3RhbnRcIn0se25hbWU6XCJncmlkU2l6ZVwiLGRlc2NyaXB0aW9uOlwiPHA+c2l6ZSBvZiBvbmUgc2lkZSBvZiB0aGUgZ3JpZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZ3JpZERpdmlzaW9uc1wiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIG9mIGRpdmlzaW9ucyBpbiB0aGUgZ3JpZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwieE9mZlwiLGRlc2NyaXB0aW9uOlwiPHA+WCBheGlzIG9mZnNldCBmcm9tIG9yaWdpbiAoMCwwLDApPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5T2ZmXCIsZGVzY3JpcHRpb246XCI8cD5ZIGF4aXMgb2Zmc2V0IGZyb20gb3JpZ2luICgwLDAsMCk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInpPZmZcIixkZXNjcmlwdGlvbjpcIjxwPlogYXhpcyBvZmZzZXQgZnJvbSBvcmlnaW4gKDAsMCwwKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJtb2RlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiQ29uc3RhbnRcIn0se25hbWU6XCJheGVzU2l6ZVwiLGRlc2NyaXB0aW9uOlwiPHA+c2l6ZSBvZiBheGVzIGljb248L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInhPZmZcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5T2ZmXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiek9mZlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwiZ3JpZFNpemVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJncmlkRGl2aXNpb25zXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZ3JpZFhPZmZcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJncmlkWU9mZlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImdyaWRaT2ZmXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiYXhlc1NpemVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJheGVzWE9mZlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImF4ZXNZT2ZmXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiYXhlc1pPZmZcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfV19LG5vRGVidWdNb2RlOntuYW1lOlwibm9EZWJ1Z01vZGVcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sYW1iaWVudExpZ2h0OntuYW1lOlwiYW1iaWVudExpZ2h0XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCI8cD5yZWQgb3IgaHVlIHZhbHVlIHJlbGF0aXZlIHRvXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIjxwPmdyZWVuIG9yIHNhdHVyYXRpb24gdmFsdWVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiPHA+Ymx1ZSBvciBicmlnaHRuZXNzIHZhbHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYWxwaGFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbHBoYSB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+YSBjb2xvciBzdHJpbmc8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiZ3JheVwiLGRlc2NyaXB0aW9uOlwiPHA+YSBncmF5IHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbHBoYVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVzXCIsZGVzY3JpcHRpb246XCI8cD5hbiBhcnJheSBjb250YWluaW5nIHRoZSByZWQsZ3JlZW4sYmx1ZSAmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgYWxwaGEgY29tcG9uZW50cyBvZiB0aGUgY29sb3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlcltdXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGFtYmllbnQgbGlnaHQgY29sb3I8L3A+XFxuXCIsdHlwZTpcInA1LkNvbG9yXCJ9XSxjaGFpbmFibGU6MX1dfSxzcGVjdWxhckNvbG9yOntuYW1lOlwic3BlY3VsYXJDb2xvclwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOlwiPHA+cmVkIG9yIGh1ZSB2YWx1ZSByZWxhdGl2ZSB0b1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGN1cnJlbnQgY29sb3IgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246XCI8cD5ncmVlbiBvciBzYXR1cmF0aW9uIHZhbHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjNcIixkZXNjcmlwdGlvbjpcIjxwPmJsdWUgb3IgYnJpZ2h0bmVzcyB2YWx1ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgY29sb3IgcmFuZ2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPmEgY29sb3Igc3RyaW5nPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImdyYXlcIixkZXNjcmlwdGlvbjpcIjxwPmEgZ3JheSB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2YWx1ZXNcIixkZXNjcmlwdGlvbjpcIjxwPmFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHJlZCxncmVlbixibHVlICZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBhbHBoYSBjb21wb25lbnRzIG9mIHRoZSBjb2xvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyW11cIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCI8cD50aGUgYW1iaWVudCBsaWdodCBjb2xvcjwvcD5cXG5cIix0eXBlOlwicDUuQ29sb3JcIn1dLGNoYWluYWJsZToxfV19LGRpcmVjdGlvbmFsTGlnaHQ6e25hbWU6XCJkaXJlY3Rpb25hbExpZ2h0XCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCI8cD5yZWQgb3IgaHVlIHZhbHVlIChkZXBlbmRpbmcgb24gdGhlIGN1cnJlbnRcXG5jb2xvciBtb2RlKSw8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246XCI8cD5ncmVlbiBvciBzYXR1cmF0aW9uIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiPHA+Ymx1ZSBvciBicmlnaHRuZXNzIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJwb3NpdGlvblwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGRpcmVjdGlvbiBvZiB0aGUgbGlnaHQ8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiY29sb3JcIixkZXNjcmlwdGlvbjonPHA+Y29sb3IgQXJyYXksIENTUyBjb2xvciBzdHJpbmcsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciA8YSBocmVmPVwiIy9wNS5Db2xvclwiPnA1LkNvbG9yPC9hPiB2YWx1ZTwvcD5cXG4nLHR5cGU6XCJOdW1iZXJbXXxTdHJpbmd8cDUuQ29sb3JcIn0se25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54IGF4aXMgZGlyZWN0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55IGF4aXMgZGlyZWN0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCI8cD56IGF4aXMgZGlyZWN0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyW118U3RyaW5nfHA1LkNvbG9yXCJ9LHtuYW1lOlwicG9zaXRpb25cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9XX0scG9pbnRMaWdodDp7bmFtZTpcInBvaW50TGlnaHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIjxwPnJlZCBvciBodWUgdmFsdWUgKGRlcGVuZGluZyBvbiB0aGUgY3VycmVudFxcbmNvbG9yIG1vZGUpLDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIjxwPmdyZWVuIG9yIHNhdHVyYXRpb24gdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYzXCIsZGVzY3JpcHRpb246XCI8cD5ibHVlIG9yIGJyaWdodG5lc3MgdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnggYXhpcyBwb3NpdGlvbjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eSBheGlzIHBvc2l0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCI8cD56IGF4aXMgcG9zaXRpb248L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYzXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicG9zaXRpb25cIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBwb3NpdGlvbiBvZiB0aGUgbGlnaHQ8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwiY29sb3JcIixkZXNjcmlwdGlvbjonPHA+Y29sb3IgQXJyYXksIENTUyBjb2xvciBzdHJpbmcsXFxub3IgPGEgaHJlZj1cIiMvcDUuQ29sb3JcIj5wNS5Db2xvcjwvYT4gdmFsdWU8L3A+XFxuJyx0eXBlOlwiTnVtYmVyW118U3RyaW5nfHA1LkNvbG9yXCJ9LHtuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlcltdfFN0cmluZ3xwNS5Db2xvclwifSx7bmFtZTpcInBvc2l0aW9uXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuVmVjdG9yXCJ9XSxjaGFpbmFibGU6MX1dfSxsaWdodHM6e25hbWU6XCJsaWdodHNcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sbGlnaHRGYWxsb2ZmOntuYW1lOlwibGlnaHRGYWxsb2ZmXCIscGFyYW1zOlt7bmFtZTpcImNvbnN0YW50XCIsZGVzY3JpcHRpb246XCI8cD5jb25zdGFudCB2YWx1ZSBmb3IgZGV0ZXJtaW5pbmcgZmFsbG9mZjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibGluZWFyXCIsZGVzY3JpcHRpb246XCI8cD5saW5lYXIgdmFsdWUgZm9yIGRldGVybWluaW5nIGZhbGxvZmY8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInF1YWRyYXRpY1wiLGRlc2NyaXB0aW9uOlwiPHA+cXVhZHJhdGljIHZhbHVlIGZvciBkZXRlcm1pbmluZyBmYWxsb2ZmPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxzcG90TGlnaHQ6e25hbWU6XCJzcG90TGlnaHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIjxwPnJlZCBvciBodWUgdmFsdWUgKGRlcGVuZGluZyBvbiB0aGUgY3VycmVudFxcbmNvbG9yIG1vZGUpLDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIjxwPmdyZWVuIG9yIHNhdHVyYXRpb24gdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYzXCIsZGVzY3JpcHRpb246XCI8cD5ibHVlIG9yIGJyaWdodG5lc3MgdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnggYXhpcyBwb3NpdGlvbjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+eSBheGlzIHBvc2l0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCI8cD56IGF4aXMgcG9zaXRpb248L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJ4XCIsZGVzY3JpcHRpb246XCI8cD54IGF4aXMgZGlyZWN0aW9uIG9mIGxpZ2h0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJyeVwiLGRlc2NyaXB0aW9uOlwiPHA+eSBheGlzIGRpcmVjdGlvbiBvZiBsaWdodDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicnpcIixkZXNjcmlwdGlvbjpcIjxwPnogYXhpcyBkaXJlY3Rpb24gb2YgbGlnaHQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImFuZ2xlXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBwYXJhbWV0ZXIgZm9yIGFuZ2xlLiBEZWZhdWx0cyB0byBQSS8zPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJjb25jXCIsZGVzY3JpcHRpb246XCI8cD5vcHRpb25hbCBwYXJhbWV0ZXIgZm9yIGNvbmNlbnRyYXRpb24uIERlZmF1bHRzIHRvIDEwMDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOic8cD5jb2xvciBBcnJheSwgQ1NTIGNvbG9yIHN0cmluZyxcXG5vciA8YSBocmVmPVwiIy9wNS5Db2xvclwiPnA1LkNvbG9yPC9hPiB2YWx1ZTwvcD5cXG4nLHR5cGU6XCJOdW1iZXJbXXxTdHJpbmd8cDUuQ29sb3JcIn0se25hbWU6XCJwb3NpdGlvblwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHBvc2l0aW9uIG9mIHRoZSBsaWdodDwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwiZGlyZWN0aW9uXCIsZGVzY3JpcHRpb246XCI8cD50aGUgZGlyZWN0aW9uIG9mIHRoZSBsaWdodDwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJjb25jXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XX0se3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJwb3NpdGlvblwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcImRpcmVjdGlvblwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcImFuZ2xlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY29uY1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwiY29sb3JcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJbXXxTdHJpbmd8cDUuQ29sb3JcIn0se25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInpcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkaXJlY3Rpb25cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJhbmdsZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImNvbmNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyW118U3RyaW5nfHA1LkNvbG9yXCJ9LHtuYW1lOlwicG9zaXRpb25cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJyeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicnpcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbmdsZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImNvbmNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImRpcmVjdGlvblwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcImFuZ2xlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY29uY1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYzXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicG9zaXRpb25cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJyeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicnpcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbmdsZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImNvbmNcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyW118U3RyaW5nfHA1LkNvbG9yXCJ9LHtuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicnhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJyeVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJ6XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJjb25jXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XX1dfSxub0xpZ2h0czp7bmFtZTpcIm5vTGlnaHRzXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LGxvYWRNb2RlbDp7bmFtZTpcImxvYWRNb2RlbFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJTaGFwZVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCI8cD5QYXRoIG9mIHRoZSBtb2RlbCB0byBiZSBsb2FkZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcIm5vcm1hbGl6ZVwiLGRlc2NyaXB0aW9uOlwiPHA+SWYgdHJ1ZSwgc2NhbGUgdGhlIG1vZGVsIHRvIGFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhbmRhcmRpemVkIHNpemUgd2hlbiBsb2FkaW5nPC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCJ9LHtuYW1lOlwic3VjY2Vzc0NhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5GdW5jdGlvbiB0byBiZSBjYWxsZWRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNlIHRoZSBtb2RlbCBpcyBsb2FkZWQuIFdpbGwgYmUgcGFzc2VkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIDNEIG1vZGVsIG9iamVjdC48L3A+XFxuXCIsdHlwZTpcImZ1bmN0aW9uKHA1Lkdlb21ldHJ5KVwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImZhaWx1cmVDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+Y2FsbGVkIHdpdGggZXZlbnQgZXJyb3IgaWZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIG1vZGVsIGZhaWxzIHRvIGxvYWQuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbihFdmVudClcIixvcHRpb25hbDohMH0se25hbWU6XCJmaWxlVHlwZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGZpbGUgZXh0ZW5zaW9uIG9mIHRoZSBtb2RlbFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoPGNvZGU+LnN0bDwvY29kZT4sIDxjb2RlPi5vYmo8L2NvZGU+KS48L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwicGF0aFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInN1Y2Nlc3NDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcImZ1bmN0aW9uKHA1Lkdlb21ldHJ5KVwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImZhaWx1cmVDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkZ1bmN0aW9uKEV2ZW50KVwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImZpbGVUeXBlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XX1dfSxtb2RlbDp7bmFtZTpcIm1vZGVsXCIscGFyYW1zOlt7bmFtZTpcIm1vZGVsXCIsZGVzY3JpcHRpb246XCI8cD5Mb2FkZWQgM2QgbW9kZWwgdG8gYmUgcmVuZGVyZWQ8L3A+XFxuXCIsdHlwZTpcInA1Lkdlb21ldHJ5XCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiU2hhcGVcIn0sbG9hZFNoYWRlcjp7bmFtZTpcImxvYWRTaGFkZXJcIixwYXJhbXM6W3tuYW1lOlwidmVydEZpbGVuYW1lXCIsZGVzY3JpcHRpb246XCI8cD5wYXRoIHRvIGZpbGUgY29udGFpbmluZyB2ZXJ0ZXggc2hhZGVyXFxuc291cmNlIGNvZGU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImZyYWdGaWxlbmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+cGF0aCB0byBmaWxlIGNvbnRhaW5pbmcgZnJhZ21lbnQgc2hhZGVyXFxuc291cmNlIGNvZGU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5jYWxsYmFjayB0byBiZSBleGVjdXRlZCBhZnRlciBsb2FkU2hhZGVyXFxuY29tcGxldGVzLiBPbiBzdWNjZXNzLCB0aGUgU2hhZGVyIG9iamVjdCBpcyBwYXNzZWQgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH0se25hbWU6XCJlcnJvckNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5jYWxsYmFjayB0byBiZSBleGVjdXRlZCB3aGVuIGFuIGVycm9yXFxub2NjdXJzIGluc2lkZSBsb2FkU2hhZGVyLiBPbiBlcnJvciwgdGhlIGVycm9yIGlzIHBhc3NlZCBhcyB0aGUgZmlyc3RcXG5hcmd1bWVudC48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sY3JlYXRlU2hhZGVyOntuYW1lOlwiY3JlYXRlU2hhZGVyXCIscGFyYW1zOlt7bmFtZTpcInZlcnRTcmNcIixkZXNjcmlwdGlvbjpcIjxwPnNvdXJjZSBjb2RlIGZvciB0aGUgdmVydGV4IHNoYWRlcjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiZnJhZ1NyY1wiLGRlc2NyaXB0aW9uOlwiPHA+c291cmNlIGNvZGUgZm9yIHRoZSBmcmFnbWVudCBzaGFkZXI8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LHNoYWRlcjp7bmFtZTpcInNoYWRlclwiLHBhcmFtczpbe25hbWU6XCJzXCIsZGVzY3JpcHRpb246JzxwPnRoZSBkZXNpcmVkIDxhIGhyZWY9XCIjL3A1LlNoYWRlclwiPnA1LlNoYWRlcjwvYT4gdG8gdXNlIGZvciByZW5kZXJpbmdcXG5zaGFwZXMuPC9wPlxcbicsdHlwZTpcInA1LlNoYWRlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LHJlc2V0U2hhZGVyOntuYW1lOlwicmVzZXRTaGFkZXJcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sbm9ybWFsTWF0ZXJpYWw6e25hbWU6XCJub3JtYWxNYXRlcmlhbFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSx0ZXh0dXJlOntuYW1lOlwidGV4dHVyZVwiLHBhcmFtczpbe25hbWU6XCJ0ZXhcIixkZXNjcmlwdGlvbjpcIjxwPjItZGltZW5zaW9uYWwgZ3JhcGhpY3NcXG4gICAgICAgICAgICAgICAgICAgdG8gcmVuZGVyIGFzIHRleHR1cmU8L3A+XFxuXCIsdHlwZTpcInA1LkltYWdlfHA1Lk1lZGlhRWxlbWVudHxwNS5HcmFwaGljc1wifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LHRleHR1cmVNb2RlOntuYW1lOlwidGV4dHVyZU1vZGVcIixwYXJhbXM6W3tuYW1lOlwibW9kZVwiLGRlc2NyaXB0aW9uOlwiPHA+ZWl0aGVyIElNQUdFIG9yIE5PUk1BTDwvcD5cXG5cIix0eXBlOlwiQ29uc3RhbnRcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSx0ZXh0dXJlV3JhcDp7bmFtZTpcInRleHR1cmVXcmFwXCIscGFyYW1zOlt7bmFtZTpcIndyYXBYXCIsZGVzY3JpcHRpb246XCI8cD5laXRoZXIgQ0xBTVAsIFJFUEVBVCwgb3IgTUlSUk9SPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwifSx7bmFtZTpcIndyYXBZXCIsZGVzY3JpcHRpb246XCI8cD5laXRoZXIgQ0xBTVAsIFJFUEVBVCwgb3IgTUlSUk9SPC9wPlxcblwiLHR5cGU6XCJDb25zdGFudFwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LGFtYmllbnRNYXRlcmlhbDp7bmFtZTpcImFtYmllbnRNYXRlcmlhbFwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOlwiPHA+Z3JheSB2YWx1ZSwgcmVkIG9yIGh1ZSB2YWx1ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgIChkZXBlbmRpbmcgb24gdGhlIGN1cnJlbnQgY29sb3IgbW9kZSksPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiPHA+Z3JlZW4gb3Igc2F0dXJhdGlvbiB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidjNcIixkZXNjcmlwdGlvbjpcIjxwPmJsdWUgb3IgYnJpZ2h0bmVzcyB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJjb2xvclwiLGRlc2NyaXB0aW9uOlwiPHA+Y29sb3IsIGNvbG9yIEFycmF5LCBvciBDU1MgY29sb3Igc3RyaW5nPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJbXXxTdHJpbmd8cDUuQ29sb3JcIn1dLGNoYWluYWJsZToxfV19LGVtaXNzaXZlTWF0ZXJpYWw6e25hbWU6XCJlbWlzc2l2ZU1hdGVyaWFsXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCI8cD5ncmF5IHZhbHVlLCByZWQgb3IgaHVlIHZhbHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgKGRlcGVuZGluZyBvbiB0aGUgY3VycmVudCBjb2xvciBtb2RlKSw8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246XCI8cD5ncmVlbiBvciBzYXR1cmF0aW9uIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiPHA+Ymx1ZSBvciBicmlnaHRuZXNzIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJhXCIsZGVzY3JpcHRpb246XCI8cD5vcGFjaXR5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCI8cD5jb2xvciwgY29sb3IgQXJyYXksIG9yIENTUyBjb2xvciBzdHJpbmc8L3A+XFxuXCIsdHlwZTpcIk51bWJlcltdfFN0cmluZ3xwNS5Db2xvclwifV0sY2hhaW5hYmxlOjF9XX0sc3BlY3VsYXJNYXRlcmlhbDp7bmFtZTpcInNwZWN1bGFyTWF0ZXJpYWxcIixjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwiZ3JheVwiLGRlc2NyaXB0aW9uOlwiPHA+bnVtYmVyIHNwZWNpZnlpbmcgdmFsdWUgYmV0d2VlbiB3aGl0ZSBhbmQgYmxhY2suPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbHBoYVwiLGRlc2NyaXB0aW9uOlwiPHA+YWxwaGEgdmFsdWUgcmVsYXRpdmUgdG8gY3VycmVudCBjb2xvciByYW5nZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGRlZmF1bHQgaXMgMC0yNTUpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCI8cD5yZWQgb3IgaHVlIHZhbHVlIHJlbGF0aXZlIHRvXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIjxwPmdyZWVuIG9yIHNhdHVyYXRpb24gdmFsdWVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGF0aXZlIHRvIHRoZSBjdXJyZW50IGNvbG9yIHJhbmdlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ2M1wiLGRlc2NyaXB0aW9uOlwiPHA+Ymx1ZSBvciBicmlnaHRuZXNzIHZhbHVlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBjb2xvciByYW5nZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiYWxwaGFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImNvbG9yXCIsZGVzY3JpcHRpb246XCI8cD5jb2xvciBBcnJheSwgb3IgQ1NTIGNvbG9yIHN0cmluZzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyW118U3RyaW5nfHA1LkNvbG9yXCJ9XSxjaGFpbmFibGU6MX1dfSxzaGluaW5lc3M6e25hbWU6XCJzaGluaW5lc3NcIixwYXJhbXM6W3tuYW1lOlwic2hpbmVcIixkZXNjcmlwdGlvbjpcIjxwPkRlZ3JlZSBvZiBTaGluaW5lc3MuXFxuICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDEuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxjYW1lcmE6e25hbWU6XCJjYW1lcmFcIixwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIHBvc2l0aW9uIHZhbHVlIG9uIHggYXhpczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIHBvc2l0aW9uIHZhbHVlIG9uIHkgYXhpczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIHBvc2l0aW9uIHZhbHVlIG9uIHogYXhpczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY2VudGVyWFwiLGRlc2NyaXB0aW9uOlwiPHA+eCBjb29yZGluYXRlIHJlcHJlc2VudGluZyBjZW50ZXIgb2YgdGhlIHNrZXRjaDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY2VudGVyWVwiLGRlc2NyaXB0aW9uOlwiPHA+eSBjb29yZGluYXRlIHJlcHJlc2VudGluZyBjZW50ZXIgb2YgdGhlIHNrZXRjaDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY2VudGVyWlwiLGRlc2NyaXB0aW9uOlwiPHA+eiBjb29yZGluYXRlIHJlcHJlc2VudGluZyBjZW50ZXIgb2YgdGhlIHNrZXRjaDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidXBYXCIsZGVzY3JpcHRpb246XCI8cD54IGNvbXBvbmVudCBvZiBkaXJlY3Rpb24gJ3VwJyBmcm9tIGNhbWVyYTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidXBZXCIsZGVzY3JpcHRpb246XCI8cD55IGNvbXBvbmVudCBvZiBkaXJlY3Rpb24gJ3VwJyBmcm9tIGNhbWVyYTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidXBaXCIsZGVzY3JpcHRpb246XCI8cD56IGNvbXBvbmVudCBvZiBkaXJlY3Rpb24gJ3VwJyBmcm9tIGNhbWVyYTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0scGVyc3BlY3RpdmU6e25hbWU6XCJwZXJzcGVjdGl2ZVwiLHBhcmFtczpbe25hbWU6XCJmb3Z5XCIsZGVzY3JpcHRpb246JzxwPmNhbWVyYSBmcnVzdHVtIHZlcnRpY2FsIGZpZWxkIG9mIHZpZXcsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tIGJvdHRvbSB0byB0b3Agb2YgdmlldywgaW4gPGEgaHJlZj1cIiMvcDUvYW5nbGVNb2RlXCI+YW5nbGVNb2RlPC9hPiB1bml0czwvcD5cXG4nLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJhc3BlY3RcIixkZXNjcmlwdGlvbjpcIjxwPmNhbWVyYSBmcnVzdHVtIGFzcGVjdCByYXRpbzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwibmVhclwiLGRlc2NyaXB0aW9uOlwiPHA+ZnJ1c3R1bSBuZWFyIHBsYW5lIGxlbmd0aDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZmFyXCIsZGVzY3JpcHRpb246XCI8cD5mcnVzdHVtIGZhciBwbGFuZSBsZW5ndGg8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LG9ydGhvOntuYW1lOlwib3J0aG9cIixwYXJhbXM6W3tuYW1lOlwibGVmdFwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIGZydXN0dW0gbGVmdCBwbGFuZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicmlnaHRcIixkZXNjcmlwdGlvbjpcIjxwPmNhbWVyYSBmcnVzdHVtIHJpZ2h0IHBsYW5lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJib3R0b21cIixkZXNjcmlwdGlvbjpcIjxwPmNhbWVyYSBmcnVzdHVtIGJvdHRvbSBwbGFuZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidG9wXCIsZGVzY3JpcHRpb246XCI8cD5jYW1lcmEgZnJ1c3R1bSB0b3AgcGxhbmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcIm5lYXJcIixkZXNjcmlwdGlvbjpcIjxwPmNhbWVyYSBmcnVzdHVtIG5lYXIgcGxhbmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImZhclwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIGZydXN0dW0gZmFyIHBsYW5lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxmcnVzdHVtOntuYW1lOlwiZnJ1c3R1bVwiLHBhcmFtczpbe25hbWU6XCJsZWZ0XCIsZGVzY3JpcHRpb246XCI8cD5jYW1lcmEgZnJ1c3R1bSBsZWZ0IHBsYW5lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyaWdodFwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIGZydXN0dW0gcmlnaHQgcGxhbmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImJvdHRvbVwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIGZydXN0dW0gYm90dG9tIHBsYW5lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ0b3BcIixkZXNjcmlwdGlvbjpcIjxwPmNhbWVyYSBmcnVzdHVtIHRvcCBwbGFuZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwibmVhclwiLGRlc2NyaXB0aW9uOlwiPHA+Y2FtZXJhIGZydXN0dW0gbmVhciBwbGFuZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZmFyXCIsZGVzY3JpcHRpb246XCI8cD5jYW1lcmEgZnJ1c3R1bSBmYXIgcGxhbmU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LGNyZWF0ZUNhbWVyYTp7bmFtZTpcImNyZWF0ZUNhbWVyYVwiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxzZXRDYW1lcmE6e25hbWU6XCJzZXRDYW1lcmFcIixwYXJhbXM6W3tuYW1lOlwiY2FtXCIsZGVzY3JpcHRpb246XCI8cD5wNS5DYW1lcmEgb2JqZWN0PC9wPlxcblwiLHR5cGU6XCJwNS5DYW1lcmFcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxzZXRBdHRyaWJ1dGVzOntuYW1lOlwic2V0QXR0cmlidXRlc1wiLGNsYXNzOlwicDVcIixtb2R1bGU6XCJSZW5kZXJpbmdcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwia2V5XCIsZGVzY3JpcHRpb246XCI8cD5OYW1lIG9mIGF0dHJpYnV0ZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPk5ldyB2YWx1ZSBvZiBuYW1lZCBhdHRyaWJ1dGU8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIn1dfSx7cGFyYW1zOlt7bmFtZTpcIm9ialwiLGRlc2NyaXB0aW9uOlwiPHA+b2JqZWN0IHdpdGgga2V5LXZhbHVlIHBhaXJzPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn1dfV19LHNhbXBsZVJhdGU6e25hbWU6XCJzYW1wbGVSYXRlXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGZyZXFUb01pZGk6e25hbWU6XCJmcmVxVG9NaWRpXCIscGFyYW1zOlt7bmFtZTpcImZyZXF1ZW5jeVwiLGRlc2NyaXB0aW9uOic8cD5BIGZyZXFldW5jeSwgZm9yIGV4YW1wbGUsIHRoZSBcIkFcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGFib3ZlIE1pZGRsZSBDIGlzIDQ0MEh6PC9wPlxcbicsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG1pZGlUb0ZyZXE6e25hbWU6XCJtaWRpVG9GcmVxXCIscGFyYW1zOlt7bmFtZTpcIm1pZGlOb3RlXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgbnVtYmVyIG9mIGEgTUlESSBub3RlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzb3VuZEZvcm1hdHM6e25hbWU6XCJzb3VuZEZvcm1hdHNcIixwYXJhbXM6W3tuYW1lOlwiZm9ybWF0c1wiLGRlc2NyaXB0aW9uOlwiPHA+aS5lLiAnbXAzJywgJ3dhdicsICdvZ2cnPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMCxtdWx0aXBsZTohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxnZXRBdWRpb0NvbnRleHQ6e25hbWU6XCJnZXRBdWRpb0NvbnRleHRcIixjbGFzczpcInA1XCIsbW9kdWxlOlwicDUuc291bmRcIn0sdXNlclN0YXJ0QXVkaW86e3BhcmFtczpbe25hbWU6XCJlbGVtZW50KHMpXCIsZGVzY3JpcHRpb246XCI8cD5UaGlzIGFyZ3VtZW50IGNhbiBiZSBhbiBFbGVtZW50LFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlbGVjdG9yIFN0cmluZywgTm9kZUxpc3QsIHA1LkVsZW1lbnQsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5IEVsZW1lbnQsIG9yIGFuIEFycmF5IG9mIGFueSBvZiB0aG9zZS48L3A+XFxuXCIsdHlwZTpcIkVsZW1lbnR8QXJyYXlcIixvcHRpb25hbDohMH0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+Q2FsbGJhY2sgdG8gaW52b2tlIHdoZW4gdGhlIEF1ZGlvQ29udGV4dFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhcyBzdGFydGVkPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV0sbmFtZTpcInVzZXJTdGFydEF1ZGlvXCIsY2xhc3M6XCJwNVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGxvYWRTb3VuZDp7bmFtZTpcImxvYWRTb3VuZFwiLHBhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCI8cD5QYXRoIHRvIHRoZSBzb3VuZCBmaWxlLCBvciBhbiBhcnJheSB3aXRoXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhzIHRvIHNvdW5kZmlsZXMgaW4gbXVsdGlwbGUgZm9ybWF0c1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpLmUuIFsnc291bmQub2dnJywgJ3NvdW5kLm1wMyddLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbHRlcm5hdGVseSwgYWNjZXB0cyBhbiBvYmplY3Q6IGVpdGhlclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tIHRoZSBIVE1MNSBGaWxlIEFQSSwgb3IgYSBwNS5GaWxlLjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEFycmF5XCJ9LHtuYW1lOlwic3VjY2Vzc0NhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5OYW1lIG9mIGEgZnVuY3Rpb24gdG8gY2FsbCBvbmNlIGZpbGUgbG9hZHM8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+TmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgaWYgdGhlcmUgaXNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBlcnJvciBsb2FkaW5nIHRoZSBmaWxlLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH0se25hbWU6XCJ3aGlsZUxvYWRpbmdcIixkZXNjcmlwdGlvbjpcIjxwPk5hbWUgb2YgYSBmdW5jdGlvbiB0byBjYWxsIHdoaWxlIGZpbGUgaXMgbG9hZGluZy5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyBmdW5jdGlvbiB3aWxsIHJlY2VpdmUgdGhlIHBlcmNlbnRhZ2UgbG9hZGVkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvIGZhciwgZnJvbSAwLjAgdG8gMS4wLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxjcmVhdGVDb252b2x2ZXI6e25hbWU6XCJjcmVhdGVDb252b2x2ZXJcIixwYXJhbXM6W3tuYW1lOlwicGF0aFwiLGRlc2NyaXB0aW9uOlwiPHA+cGF0aCB0byBhIHNvdW5kIGZpbGU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBjYWxsIGlmIGxvYWRpbmcgaXMgc3VjY2Vzc2Z1bC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgb2JqZWN0IHdpbGwgYmUgcGFzc2VkIGluIGFzIHRoZSBhcmd1bWVudFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBjYWxsYmFjayBmdW5jdGlvbi48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gY2FsbCBpZiBsb2FkaW5nIGlzIG5vdCBzdWNjZXNzZnVsLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEEgY3VzdG9tIGVycm9yIHdpbGwgYmUgcGFzc2VkIGluIGFzIHRoZSBhcmd1bWVudFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHRoZSBjYWxsYmFjayBmdW5jdGlvbi48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0QlBNOntuYW1lOlwic2V0QlBNXCIscGFyYW1zOlt7bmFtZTpcIkJQTVwiLGRlc2NyaXB0aW9uOlwiPHA+QmVhdHMgUGVyIE1pbnV0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNhdmVTb3VuZDp7bmFtZTpcInNhdmVTb3VuZFwiLHBhcmFtczpbe25hbWU6XCJzb3VuZEZpbGVcIixkZXNjcmlwdGlvbjpcIjxwPnA1LlNvdW5kRmlsZSB0aGF0IHlvdSB3aXNoIHRvIHNhdmU8L3A+XFxuXCIsdHlwZTpcInA1LlNvdW5kRmlsZVwifSx7bmFtZTpcImZpbGVOYW1lXCIsZGVzY3JpcHRpb246XCI8cD5uYW1lIG9mIHRoZSByZXN1bHRpbmcgLndhdiBmaWxlLjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1XCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuQ29sb3JcIjp7dG9TdHJpbmc6e25hbWU6XCJ0b1N0cmluZ1wiLHBhcmFtczpbe25hbWU6XCJmb3JtYXRcIixkZXNjcmlwdGlvbjpcIjxwPkhvdyB0aGUgY29sb3Igc3RyaW5nIHdpbGwgYmUgZm9ybWF0dGVkLlxcbkxlYXZpbmcgdGhpcyBlbXB0eSBmb3JtYXRzIHRoZSBzdHJpbmcgYXMgcmdiYShyLCBnLCBiLCBhKS5cXG4nI3JnYicgJyNyZ2JhJyAnI3JyZ2diYicgYW5kICcjcnJnZ2JiYWEnIGZvcm1hdCBhcyBoZXhhZGVjaW1hbCBjb2xvciBjb2Rlcy5cXG4ncmdiJyAnaHNiJyBhbmQgJ2hzbCcgcmV0dXJuIHRoZSBjb2xvciBmb3JtYXR0ZWQgaW4gdGhlIHNwZWNpZmllZCBjb2xvciBtb2RlLlxcbidyZ2JhJyAnaHNiYScgYW5kICdoc2xhJyBhcmUgdGhlIHNhbWUgYXMgYWJvdmUgYnV0IHdpdGggYWxwaGEgY2hhbm5lbHMuXFxuJ3JnYiUnICdoc2IlJyAnaHNsJScgJ3JnYmElJyAnaHNiYSUnIGFuZCAnaHNsYSUnIGZvcm1hdCBhcyBwZXJjZW50YWdlcy48L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Db2xvclwiLG1vZHVsZTpcIkNvbG9yXCJ9LHNldFJlZDp7bmFtZTpcInNldFJlZFwiLHBhcmFtczpbe25hbWU6XCJyZWRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBuZXcgcmVkIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQ29sb3JcIixtb2R1bGU6XCJDb2xvclwifSxzZXRHcmVlbjp7bmFtZTpcInNldEdyZWVuXCIscGFyYW1zOlt7bmFtZTpcImdyZWVuXCIsZGVzY3JpcHRpb246XCI8cD50aGUgbmV3IGdyZWVuIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQ29sb3JcIixtb2R1bGU6XCJDb2xvclwifSxzZXRCbHVlOntuYW1lOlwic2V0Qmx1ZVwiLHBhcmFtczpbe25hbWU6XCJibHVlXCIsZGVzY3JpcHRpb246XCI8cD50aGUgbmV3IGJsdWUgdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5Db2xvclwiLG1vZHVsZTpcIkNvbG9yXCJ9LHNldEFscGhhOntuYW1lOlwic2V0QWxwaGFcIixwYXJhbXM6W3tuYW1lOlwiYWxwaGFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBuZXcgYWxwaGEgdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5Db2xvclwiLG1vZHVsZTpcIkNvbG9yXCJ9fSxcInA1LkVsZW1lbnRcIjp7ZWx0OntuYW1lOlwiZWx0XCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LHBhcmVudDp7bmFtZTpcInBhcmVudFwiLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJwYXJlbnRcIixkZXNjcmlwdGlvbjonPHA+dGhlIElELCBET00gbm9kZSwgb3IgPGEgaHJlZj1cIiMvcDUuRWxlbWVudFwiPnA1LkVsZW1lbnQ8L2E+XFxuICAgICAgICAgICAgICAgICAgICAgICAgIG9mIGRlc2lyZWQgcGFyZW50IGVsZW1lbnQ8L3A+XFxuJyx0eXBlOlwiU3RyaW5nfHA1LkVsZW1lbnR8T2JqZWN0XCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbXX1dfSxpZDp7bmFtZTpcImlkXCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcImlkXCIsZGVzY3JpcHRpb246XCI8cD5JRCBvZiB0aGUgZWxlbWVudDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbXX1dfSxjbGFzczp7bmFtZTpcImNsYXNzXCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcImNsYXNzXCIsZGVzY3JpcHRpb246XCI8cD5jbGFzcyB0byBhZGQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W119XX0sbW91c2VQcmVzc2VkOntuYW1lOlwibW91c2VQcmVzc2VkXCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiBtb3VzZSBpc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzc2VkIG92ZXIgdGhlIGVsZW1lbnQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIDxjb2RlPmZhbHNlPC9jb2RlPiBpcyBwYXNzZWQgaW5zdGVhZCwgdGhlIHByZXZpb3VzbHlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyaW5nIGZ1bmN0aW9uIHdpbGwgbm8gbG9uZ2VyIGZpcmUuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbnxCb29sZWFuXCJ9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sZG91YmxlQ2xpY2tlZDp7bmFtZTpcImRvdWJsZUNsaWNrZWRcIixwYXJhbXM6W3tuYW1lOlwiZnhuXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBiZSBmaXJlZCB3aGVuIG1vdXNlIGlzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdWJsZSBjbGlja2VkIG92ZXIgdGhlIGVsZW1lbnQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIDxjb2RlPmZhbHNlPC9jb2RlPiBpcyBwYXNzZWQgaW5zdGVhZCwgdGhlIHByZXZpb3VzbHlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyaW5nIGZ1bmN0aW9uIHdpbGwgbm8gbG9uZ2VyIGZpcmUuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbnxCb29sZWFuXCJ9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sbW91c2VXaGVlbDp7bmFtZTpcIm1vdXNlV2hlZWxcIixwYXJhbXM6W3tuYW1lOlwiZnhuXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBiZSBmaXJlZCB3aGVuIG1vdXNlIGlzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbGVkIG92ZXIgdGhlIGVsZW1lbnQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIDxjb2RlPmZhbHNlPC9jb2RlPiBpcyBwYXNzZWQgaW5zdGVhZCwgdGhlIHByZXZpb3VzbHlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyaW5nIGZ1bmN0aW9uIHdpbGwgbm8gbG9uZ2VyIGZpcmUuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbnxCb29sZWFuXCJ9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sbW91c2VSZWxlYXNlZDp7bmFtZTpcIm1vdXNlUmVsZWFzZWRcIixwYXJhbXM6W3tuYW1lOlwiZnhuXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBiZSBmaXJlZCB3aGVuIG1vdXNlIGlzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGVhc2VkIG92ZXIgdGhlIGVsZW1lbnQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIDxjb2RlPmZhbHNlPC9jb2RlPiBpcyBwYXNzZWQgaW5zdGVhZCwgdGhlIHByZXZpb3VzbHlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyaW5nIGZ1bmN0aW9uIHdpbGwgbm8gbG9uZ2VyIGZpcmUuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbnxCb29sZWFuXCJ9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sbW91c2VDbGlja2VkOntuYW1lOlwibW91c2VDbGlja2VkXCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiBtb3VzZSBpc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlja2VkIG92ZXIgdGhlIGVsZW1lbnQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIDxjb2RlPmZhbHNlPC9jb2RlPiBpcyBwYXNzZWQgaW5zdGVhZCwgdGhlIHByZXZpb3VzbHlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyaW5nIGZ1bmN0aW9uIHdpbGwgbm8gbG9uZ2VyIGZpcmUuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvbnxCb29sZWFuXCJ9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sbW91c2VNb3ZlZDp7bmFtZTpcIm1vdXNlTW92ZWRcIixwYXJhbXM6W3tuYW1lOlwiZnhuXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBiZSBmaXJlZCB3aGVuIGEgbW91c2UgbW92ZXNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlciB0aGUgZWxlbWVudC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgPGNvZGU+ZmFsc2U8L2NvZGU+IGlzIHBhc3NlZCBpbnN0ZWFkLCB0aGUgcHJldmlvdXNseVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJpbmcgZnVuY3Rpb24gd2lsbCBubyBsb25nZXIgZmlyZS48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9ufEJvb2xlYW5cIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxtb3VzZU92ZXI6e25hbWU6XCJtb3VzZU92ZXJcIixwYXJhbXM6W3tuYW1lOlwiZnhuXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiB0byBiZSBmaXJlZCB3aGVuIGEgbW91c2UgbW92ZXNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb250byB0aGUgZWxlbWVudC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgPGNvZGU+ZmFsc2U8L2NvZGU+IGlzIHBhc3NlZCBpbnN0ZWFkLCB0aGUgcHJldmlvdXNseVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJpbmcgZnVuY3Rpb24gd2lsbCBubyBsb25nZXIgZmlyZS48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9ufEJvb2xlYW5cIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxtb3VzZU91dDp7bmFtZTpcIm1vdXNlT3V0XCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiBhIG1vdXNlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vdmVzIG9mZiBvZiBhbiBlbGVtZW50LlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiA8Y29kZT5mYWxzZTwvY29kZT4gaXMgcGFzc2VkIGluc3RlYWQsIHRoZSBwcmV2aW91c2x5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcmluZyBmdW5jdGlvbiB3aWxsIG5vIGxvbmdlciBmaXJlLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb258Qm9vbGVhblwifV0sY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LHRvdWNoU3RhcnRlZDp7bmFtZTpcInRvdWNoU3RhcnRlZFwiLHBhcmFtczpbe25hbWU6XCJmeG5cIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGZpcmVkIHdoZW4gYSB0b3VjaFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydHMgb3ZlciB0aGUgZWxlbWVudC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgPGNvZGU+ZmFsc2U8L2NvZGU+IGlzIHBhc3NlZCBpbnN0ZWFkLCB0aGUgcHJldmlvdXNseVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJpbmcgZnVuY3Rpb24gd2lsbCBubyBsb25nZXIgZmlyZS48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9ufEJvb2xlYW5cIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSx0b3VjaE1vdmVkOntuYW1lOlwidG91Y2hNb3ZlZFwiLHBhcmFtczpbe25hbWU6XCJmeG5cIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGZpcmVkIHdoZW4gYSB0b3VjaCBtb3ZlcyBvdmVyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBlbGVtZW50LlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiA8Y29kZT5mYWxzZTwvY29kZT4gaXMgcGFzc2VkIGluc3RlYWQsIHRoZSBwcmV2aW91c2x5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcmluZyBmdW5jdGlvbiB3aWxsIG5vIGxvbmdlciBmaXJlLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb258Qm9vbGVhblwifV0sY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LHRvdWNoRW5kZWQ6e25hbWU6XCJ0b3VjaEVuZGVkXCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiBhIHRvdWNoIGVuZHNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlciB0aGUgZWxlbWVudC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgPGNvZGU+ZmFsc2U8L2NvZGU+IGlzIHBhc3NlZCBpbnN0ZWFkLCB0aGUgcHJldmlvdXNseVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJpbmcgZnVuY3Rpb24gd2lsbCBubyBsb25nZXIgZmlyZS48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9ufEJvb2xlYW5cIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxkcmFnT3Zlcjp7bmFtZTpcImRyYWdPdmVyXCIscGFyYW1zOlt7bmFtZTpcImZ4blwiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gYmUgZmlyZWQgd2hlbiBhIGZpbGUgaXNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJhZ2dlZCBvdmVyIHRoZSBlbGVtZW50LlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiA8Y29kZT5mYWxzZTwvY29kZT4gaXMgcGFzc2VkIGluc3RlYWQsIHRoZSBwcmV2aW91c2x5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcmluZyBmdW5jdGlvbiB3aWxsIG5vIGxvbmdlciBmaXJlLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb258Qm9vbGVhblwifV0sY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LGRyYWdMZWF2ZTp7bmFtZTpcImRyYWdMZWF2ZVwiLHBhcmFtczpbe25hbWU6XCJmeG5cIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGJlIGZpcmVkIHdoZW4gYSBmaWxlIGlzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdnZWQgb2ZmIHRoZSBlbGVtZW50LlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiA8Y29kZT5mYWxzZTwvY29kZT4gaXMgcGFzc2VkIGluc3RlYWQsIHRoZSBwcmV2aW91c2x5XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcmluZyBmdW5jdGlvbiB3aWxsIG5vIGxvbmdlciBmaXJlLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb258Qm9vbGVhblwifV0sY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LGFkZENsYXNzOntuYW1lOlwiYWRkQ2xhc3NcIixwYXJhbXM6W3tuYW1lOlwiY2xhc3NcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgY2xhc3MgdG8gYWRkPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxyZW1vdmVDbGFzczp7bmFtZTpcInJlbW92ZUNsYXNzXCIscGFyYW1zOlt7bmFtZTpcImNsYXNzXCIsZGVzY3JpcHRpb246XCI8cD5uYW1lIG9mIGNsYXNzIHRvIHJlbW92ZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0saGFzQ2xhc3M6e25hbWU6XCJoYXNDbGFzc1wiLHBhcmFtczpbe25hbWU6XCJjXCIsZGVzY3JpcHRpb246XCI8cD5jbGFzcyBuYW1lIG9mIGNsYXNzIHRvIGNoZWNrPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSx0b2dnbGVDbGFzczp7bmFtZTpcInRvZ2dsZUNsYXNzXCIscGFyYW1zOlt7bmFtZTpcImNcIixkZXNjcmlwdGlvbjpcIjxwPmNsYXNzIG5hbWUgdG8gdG9nZ2xlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxjaGlsZDp7bmFtZTpcImNoaWxkXCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcImNoaWxkXCIsZGVzY3JpcHRpb246JzxwPnRoZSBJRCwgRE9NIG5vZGUsIG9yIDxhIGhyZWY9XCIjL3A1LkVsZW1lbnRcIj5wNS5FbGVtZW50PC9hPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvIGFkZCB0byB0aGUgY3VycmVudCBlbGVtZW50PC9wPlxcbicsdHlwZTpcIlN0cmluZ3xwNS5FbGVtZW50XCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX1dfSxjZW50ZXI6e25hbWU6XCJjZW50ZXJcIixwYXJhbXM6W3tuYW1lOlwiYWxpZ25cIixkZXNjcmlwdGlvbjpcIjxwPnBhc3NpbmcgJ3ZlcnRpY2FsJywgJ2hvcml6b250YWwnIGFsaWducyBlbGVtZW50IGFjY29yZGluZ2x5PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxodG1sOntuYW1lOlwiaHRtbFwiLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbXX0se3BhcmFtczpbe25hbWU6XCJodG1sXCIsZGVzY3JpcHRpb246XCI8cD50aGUgSFRNTCB0byBiZSBwbGFjZWQgaW5zaWRlIHRoZSBlbGVtZW50PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH0se25hbWU6XCJhcHBlbmRcIixkZXNjcmlwdGlvbjpcIjxwPndoZXRoZXIgdG8gYXBwZW5kIEhUTUwgdG8gZXhpc3Rpbmc8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfV19LHBvc2l0aW9uOntuYW1lOlwicG9zaXRpb25cIixjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIixvdmVybG9hZHM6W3twYXJhbXM6W119LHtwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+eC1wb3NpdGlvbiByZWxhdGl2ZSB0byB1cHBlciBsZWZ0IG9mIHdpbmRvdyAob3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LXBvc2l0aW9uIHJlbGF0aXZlIHRvIHVwcGVyIGxlZnQgb2Ygd2luZG93IChvcHRpb25hbCk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInBvc2l0aW9uVHlwZVwiLGRlc2NyaXB0aW9uOlwiPHA+aXQgY2FuIGJlIHN0YXRpYywgZml4ZWQsIHJlbGF0aXZlLCBzdGlja3ksIGluaXRpYWwgb3IgaW5oZXJpdCAob3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNoYWluYWJsZToxfV19LHN0eWxlOntuYW1lOlwic3R5bGVcIixjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwicHJvcGVydHlcIixkZXNjcmlwdGlvbjpcIjxwPnByb3BlcnR5IHRvIGJlIHNldDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XX0se3BhcmFtczpbe25hbWU6XCJwcm9wZXJ0eVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSB0byBhc3NpZ24gdG8gcHJvcGVydHk8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xwNS5Db2xvclwifV0sY2hhaW5hYmxlOjF9XX0sYXR0cmlidXRlOntuYW1lOlwiYXR0cmlidXRlXCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcImF0dHJcIixkZXNjcmlwdGlvbjpcIjxwPmF0dHJpYnV0ZSB0byBzZXQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSB0byBhc3NpZ24gdG8gYXR0cmlidXRlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNoYWluYWJsZToxfV19LHJlbW92ZUF0dHJpYnV0ZTp7bmFtZTpcInJlbW92ZUF0dHJpYnV0ZVwiLHBhcmFtczpbe25hbWU6XCJhdHRyXCIsZGVzY3JpcHRpb246XCI8cD5hdHRyaWJ1dGUgdG8gcmVtb3ZlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn1dLGNsYXNzOlwicDUuRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSx2YWx1ZTp7bmFtZTpcInZhbHVlXCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nfE51bWJlclwifV0sY2hhaW5hYmxlOjF9XX0sc2hvdzp7bmFtZTpcInNob3dcIixjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0saGlkZTp7bmFtZTpcImhpZGVcIixjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sc2l6ZTp7bmFtZTpcInNpemVcIixjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIixvdmVybG9hZHM6W3twYXJhbXM6W119LHtwYXJhbXM6W3tuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiPHA+d2lkdGggb2YgdGhlIGVsZW1lbnQsIGVpdGhlciBBVVRPLCBvciBhIG51bWJlcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfENvbnN0YW50XCJ9LHtuYW1lOlwiaFwiLGRlc2NyaXB0aW9uOlwiPHA+aGVpZ2h0IG9mIHRoZSBlbGVtZW50LCBlaXRoZXIgQVVUTywgb3IgYSBudW1iZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlcnxDb25zdGFudFwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9XX0scmVtb3ZlOntuYW1lOlwicmVtb3ZlXCIsY2xhc3M6XCJwNS5FbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LGRyb3A6e25hbWU6XCJkcm9wXCIscGFyYW1zOlt7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5jYWxsYmFjayB0byByZWNlaXZlIGxvYWRlZCBmaWxlLCBjYWxsZWQgZm9yIGVhY2ggZmlsZSBkcm9wcGVkLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIn0se25hbWU6XCJmeG5cIixkZXNjcmlwdGlvbjpcIjxwPmNhbGxiYWNrIHRyaWdnZXJlZCBvbmNlIHdoZW4gZmlsZXMgYXJlIGRyb3BwZWQgd2l0aCB0aGUgZHJvcCBldmVudC48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkVsZW1lbnRcIixtb2R1bGU6XCJET01cIn19LFwicDUuR3JhcGhpY3NcIjp7cmVzZXQ6e25hbWU6XCJyZXNldFwiLGNsYXNzOlwicDUuR3JhcGhpY3NcIixtb2R1bGU6XCJSZW5kZXJpbmdcIn0scmVtb3ZlOntuYW1lOlwicmVtb3ZlXCIsY2xhc3M6XCJwNS5HcmFwaGljc1wiLG1vZHVsZTpcIlJlbmRlcmluZ1wifX0sSlNPTjp7c3RyaW5naWZ5OntuYW1lOlwic3RyaW5naWZ5XCIscGFyYW1zOlt7bmFtZTpcIm9iamVjdFwiLGRlc2NyaXB0aW9uOlwiPHA+OkphdmFzY3JpcHQgb2JqZWN0IHRoYXQgeW91IHdvdWxkIGxpa2UgdG8gY29udmVydCB0byBKU09OPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwiSlNPTlwiLG1vZHVsZTpcIkZvdW5kYXRpb25cIn19LGNvbnNvbGU6e2xvZzp7bmFtZTpcImxvZ1wiLHBhcmFtczpbe25hbWU6XCJtZXNzYWdlXCIsZGVzY3JpcHRpb246XCI8cD46TWVzc2FnZSB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIHByaW50IHRvIHRoZSBjb25zb2xlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8RXhwcmVzc2lvbnxPYmplY3RcIn1dLGNsYXNzOlwiY29uc29sZVwiLG1vZHVsZTpcIkZvdW5kYXRpb25cIn19LFwicDUuVHlwZWREaWN0XCI6e3NpemU6e25hbWU6XCJzaXplXCIsY2xhc3M6XCJwNS5UeXBlZERpY3RcIixtb2R1bGU6XCJEYXRhXCJ9LGhhc0tleTp7bmFtZTpcImhhc0tleVwiLHBhcmFtczpbe25hbWU6XCJrZXlcIixkZXNjcmlwdGlvbjpcIjxwPnRoYXQgeW91IHdhbnQgdG8gbG9vayB1cDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfFN0cmluZ1wifV0sY2xhc3M6XCJwNS5UeXBlZERpY3RcIixtb2R1bGU6XCJEYXRhXCJ9LGdldDp7bmFtZTpcImdldFwiLHBhcmFtczpbe25hbWU6XCJ0aGVcIixkZXNjcmlwdGlvbjpcIjxwPmtleSB5b3Ugd2FudCB0byBhY2Nlc3M8L3A+XFxuXCIsdHlwZTpcIk51bWJlcnxTdHJpbmdcIn1dLGNsYXNzOlwicDUuVHlwZWREaWN0XCIsbW9kdWxlOlwiRGF0YVwifSxzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwia2V5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyfFN0cmluZ1wifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyfFN0cmluZ1wifV0sY2xhc3M6XCJwNS5UeXBlZERpY3RcIixtb2R1bGU6XCJEYXRhXCJ9LGNyZWF0ZTp7bmFtZTpcImNyZWF0ZVwiLGNsYXNzOlwicDUuVHlwZWREaWN0XCIsbW9kdWxlOlwiRGF0YVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJrZXlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJ8U3RyaW5nXCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJ8U3RyaW5nXCJ9XX0se3BhcmFtczpbe25hbWU6XCJvYmpcIixkZXNjcmlwdGlvbjpcIjxwPmtleS92YWx1ZSBwYWlyPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn1dfV19LGNsZWFyOntuYW1lOlwiY2xlYXJcIixjbGFzczpcInA1LlR5cGVkRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0scmVtb3ZlOntuYW1lOlwicmVtb3ZlXCIscGFyYW1zOlt7bmFtZTpcImtleVwiLGRlc2NyaXB0aW9uOlwiPHA+Zm9yIHRoZSBwYWlyIHRvIHJlbW92ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfFN0cmluZ1wifV0sY2xhc3M6XCJwNS5UeXBlZERpY3RcIixtb2R1bGU6XCJEYXRhXCJ9LHByaW50OntuYW1lOlwicHJpbnRcIixjbGFzczpcInA1LlR5cGVkRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sc2F2ZVRhYmxlOntuYW1lOlwic2F2ZVRhYmxlXCIsY2xhc3M6XCJwNS5UeXBlZERpY3RcIixtb2R1bGU6XCJEYXRhXCJ9LHNhdmVKU09OOntuYW1lOlwic2F2ZUpTT05cIixjbGFzczpcInA1LlR5cGVkRGljdFwiLG1vZHVsZTpcIkRhdGFcIn19LFwicDUuTnVtYmVyRGljdFwiOnthZGQ6e25hbWU6XCJhZGRcIixwYXJhbXM6W3tuYW1lOlwiS2V5XCIsZGVzY3JpcHRpb246XCI8cD5mb3IgdGhlIHZhbHVlIHlvdSB3aXNoIHRvIGFkZCB0bzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiTnVtYmVyXCIsZGVzY3JpcHRpb246XCI8cD50byBhZGQgdG8gdGhlIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuTnVtYmVyRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sc3ViOntuYW1lOlwic3ViXCIscGFyYW1zOlt7bmFtZTpcIktleVwiLGRlc2NyaXB0aW9uOlwiPHA+Zm9yIHRoZSB2YWx1ZSB5b3Ugd2lzaCB0byBzdWJ0cmFjdCBmcm9tPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJOdW1iZXJcIixkZXNjcmlwdGlvbjpcIjxwPnRvIHN1YnRyYWN0IGZyb20gdGhlIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuTnVtYmVyRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sbXVsdDp7bmFtZTpcIm11bHRcIixwYXJhbXM6W3tuYW1lOlwiS2V5XCIsZGVzY3JpcHRpb246XCI8cD5mb3IgdmFsdWUgeW91IHdpc2ggdG8gbXVsdGlwbHk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIkFtb3VudFwiLGRlc2NyaXB0aW9uOlwiPHA+dG8gbXVsdGlwbHkgdGhlIHZhbHVlIGJ5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuTnVtYmVyRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sZGl2OntuYW1lOlwiZGl2XCIscGFyYW1zOlt7bmFtZTpcIktleVwiLGRlc2NyaXB0aW9uOlwiPHA+Zm9yIHZhbHVlIHlvdSB3aXNoIHRvIGRpdmlkZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiQW1vdW50XCIsZGVzY3JpcHRpb246XCI8cD50byBkaXZpZGUgdGhlIHZhbHVlIGJ5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuTnVtYmVyRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sbWluVmFsdWU6e25hbWU6XCJtaW5WYWx1ZVwiLGNsYXNzOlwicDUuTnVtYmVyRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sbWF4VmFsdWU6e25hbWU6XCJtYXhWYWx1ZVwiLGNsYXNzOlwicDUuTnVtYmVyRGljdFwiLG1vZHVsZTpcIkRhdGFcIn0sbWluS2V5OntuYW1lOlwibWluS2V5XCIsY2xhc3M6XCJwNS5OdW1iZXJEaWN0XCIsbW9kdWxlOlwiRGF0YVwifSxtYXhLZXk6e25hbWU6XCJtYXhLZXlcIixjbGFzczpcInA1Lk51bWJlckRpY3RcIixtb2R1bGU6XCJEYXRhXCJ9fSxcInA1Lk1lZGlhRWxlbWVudFwiOntzcmM6e25hbWU6XCJzcmNcIixjbGFzczpcInA1Lk1lZGlhRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxwbGF5OntuYW1lOlwicGxheVwiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LHN0b3A6e25hbWU6XCJzdG9wXCIsY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0scGF1c2U6e25hbWU6XCJwYXVzZVwiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LGxvb3A6e25hbWU6XCJsb29wXCIsY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sbm9Mb29wOntuYW1lOlwibm9Mb29wXCIsY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sYXV0b3BsYXk6e25hbWU6XCJhdXRvcGxheVwiLHBhcmFtczpbe25hbWU6XCJzaG91bGRBdXRvcGxheVwiLGRlc2NyaXB0aW9uOlwiPHA+d2hldGhlciB0aGUgZWxlbWVudCBzaG91bGQgYXV0b3BsYXk8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIn1dLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LHZvbHVtZTp7bmFtZTpcInZvbHVtZVwiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcInZhbFwiLGRlc2NyaXB0aW9uOlwiPHA+dm9sdW1lIGJldHdlZW4gMC4wIGFuZCAxLjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9XX0sc3BlZWQ6e25hbWU6XCJzcGVlZFwiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOltdfSx7cGFyYW1zOlt7bmFtZTpcInNwZWVkXCIsZGVzY3JpcHRpb246XCI8cD5zcGVlZCBtdWx0aXBsaWVyIGZvciBlbGVtZW50IHBsYXliYWNrPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfV19LHRpbWU6e25hbWU6XCJ0aW1lXCIsY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIixvdmVybG9hZHM6W3twYXJhbXM6W119LHtwYXJhbXM6W3tuYW1lOlwidGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGltZSB0byBqdW1wIHRvIChpbiBzZWNvbmRzKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX1dfSxkdXJhdGlvbjp7bmFtZTpcImR1cmF0aW9uXCIsY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sb25lbmRlZDp7bmFtZTpcIm9uZW5kZWRcIixwYXJhbXM6W3tuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIHRvIGNhbGwgd2hlbiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc291bmRmaWxlIGhhcyBlbmRlZC4gVGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lZGlhIGVsZW1lbnQgd2lsbCBiZSBwYXNzZWRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYXMgdGhlIGFyZ3VtZW50IHRvIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCJ9XSxjbGFzczpcInA1Lk1lZGlhRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxjb25uZWN0OntuYW1lOlwiY29ubmVjdFwiLHBhcmFtczpbe25hbWU6XCJhdWRpb05vZGVcIixkZXNjcmlwdGlvbjpcIjxwPkF1ZGlvTm9kZSBmcm9tIHRoZSBXZWIgQXVkaW8gQVBJLFxcbm9yIGFuIG9iamVjdCBmcm9tIHRoZSBwNS5zb3VuZCBsaWJyYXJ5PC9wPlxcblwiLHR5cGU6XCJBdWRpb05vZGV8T2JqZWN0XCJ9XSxjbGFzczpcInA1Lk1lZGlhRWxlbWVudFwiLG1vZHVsZTpcIkRPTVwifSxkaXNjb25uZWN0OntuYW1lOlwiZGlzY29ubmVjdFwiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LHNob3dDb250cm9sczp7bmFtZTpcInNob3dDb250cm9sc1wiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LGhpZGVDb250cm9sczp7bmFtZTpcImhpZGVDb250cm9sc1wiLGNsYXNzOlwicDUuTWVkaWFFbGVtZW50XCIsbW9kdWxlOlwiRE9NXCJ9LGFkZEN1ZTp7bmFtZTpcImFkZEN1ZVwiLHBhcmFtczpbe25hbWU6XCJ0aW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIGluIHNlY29uZHMsIHJlbGF0aXZlIHRvIHRoaXMgbWVkaWFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCdzIHBsYXliYWNrLiBGb3IgZXhhbXBsZSwgdG8gdHJpZ2dlclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbiBldmVudCBldmVyeSB0aW1lIHBsYXliYWNrIHJlYWNoZXMgdHdvXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMsIHBhc3MgaW4gdGhlIG51bWJlciAyLiBUaGlzIHdpbGwgYmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzc2VkIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIgdG9cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPk5hbWUgb2YgYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGVkIGF0IHRoZSBnaXZlbiB0aW1lLiBUaGUgY2FsbGJhY2sgd2lsbFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNlaXZlIHRpbWUgYW5kIChvcHRpb25hbGx5KSBwYXJhbSBhcyBpdHNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvIHBhcmFtZXRlcnMuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5BbiBvYmplY3QgdG8gYmUgcGFzc2VkIGFzIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmQgcGFyYW1ldGVyIHRvIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayBmdW5jdGlvbi48L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0scmVtb3ZlQ3VlOntuYW1lOlwicmVtb3ZlQ3VlXCIscGFyYW1zOlt7bmFtZTpcImlkXCIsZGVzY3JpcHRpb246XCI8cD5JRCBvZiB0aGUgY3VlLCBhcyByZXR1cm5lZCBieSBhZGRDdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn0sY2xlYXJDdWVzOntuYW1lOlwiY2xlYXJDdWVzXCIscGFyYW1zOlt7bmFtZTpcImlkXCIsZGVzY3JpcHRpb246XCI8cD5JRCBvZiB0aGUgY3VlLCBhcyByZXR1cm5lZCBieSBhZGRDdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5NZWRpYUVsZW1lbnRcIixtb2R1bGU6XCJET01cIn19LFwicDUuRmlsZVwiOntmaWxlOntuYW1lOlwiZmlsZVwiLGNsYXNzOlwicDUuRmlsZVwiLG1vZHVsZTpcIkRPTVwifSx0eXBlOntuYW1lOlwidHlwZVwiLGNsYXNzOlwicDUuRmlsZVwiLG1vZHVsZTpcIkRPTVwifSxzdWJ0eXBlOntuYW1lOlwic3VidHlwZVwiLGNsYXNzOlwicDUuRmlsZVwiLG1vZHVsZTpcIkRPTVwifSxuYW1lOntuYW1lOlwibmFtZVwiLGNsYXNzOlwicDUuRmlsZVwiLG1vZHVsZTpcIkRPTVwifSxzaXplOntuYW1lOlwic2l6ZVwiLGNsYXNzOlwicDUuRmlsZVwiLG1vZHVsZTpcIkRPTVwifSxkYXRhOntuYW1lOlwiZGF0YVwiLGNsYXNzOlwicDUuRmlsZVwiLG1vZHVsZTpcIkRPTVwifX0sXCJwNS5JbWFnZVwiOnt3aWR0aDp7bmFtZTpcIndpZHRoXCIsY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCJ9LGhlaWdodDp7bmFtZTpcImhlaWdodFwiLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwifSxwaXhlbHM6e25hbWU6XCJwaXhlbHNcIixjbGFzczpcInA1LkltYWdlXCIsbW9kdWxlOlwiSW1hZ2VcIn0sbG9hZFBpeGVsczp7bmFtZTpcImxvYWRQaXhlbHNcIixjbGFzczpcInA1LkltYWdlXCIsbW9kdWxlOlwiSW1hZ2VcIn0sdXBkYXRlUGl4ZWxzOntuYW1lOlwidXBkYXRlUGl4ZWxzXCIsY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPngtb2Zmc2V0IG9mIHRoZSB0YXJnZXQgdXBkYXRlIGFyZWEgZm9yIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZXJseWluZyBjYW52YXM8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LW9mZnNldCBvZiB0aGUgdGFyZ2V0IHVwZGF0ZSBhcmVhIGZvciB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVuZGVybHlpbmcgY2FudmFzPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwid1wiLGRlc2NyaXB0aW9uOlwiPHA+aGVpZ2h0IG9mIHRoZSB0YXJnZXQgdXBkYXRlIGFyZWEgZm9yIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZXJseWluZyBjYW52YXM8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJoXCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQgb2YgdGhlIHRhcmdldCB1cGRhdGUgYXJlYSBmb3IgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlcmx5aW5nIGNhbnZhczwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifV19LHtwYXJhbXM6W119XX0sZ2V0OntuYW1lOlwiZ2V0XCIsY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPngtY29vcmRpbmF0ZSBvZiB0aGUgcGl4ZWw8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnktY29vcmRpbmF0ZSBvZiB0aGUgcGl4ZWw8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIndcIixkZXNjcmlwdGlvbjpcIjxwPndpZHRoPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJoXCIsZGVzY3JpcHRpb246XCI8cD5oZWlnaHQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV19LHtwYXJhbXM6W119LHtwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn1dfV19LHNldDp7bmFtZTpcInNldFwiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LWNvb3JkaW5hdGUgb2YgdGhlIHBpeGVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LWNvb3JkaW5hdGUgb2YgdGhlIHBpeGVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhXCIsZGVzY3JpcHRpb246JzxwPmdyYXlzY2FsZSB2YWx1ZSB8IHBpeGVsIGFycmF5IHxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYSA8YSBocmVmPVwiIy9wNS5Db2xvclwiPnA1LkNvbG9yPC9hPiB8IGltYWdlIHRvIGNvcHk8L3A+XFxuJyx0eXBlOlwiTnVtYmVyfE51bWJlcltdfE9iamVjdFwifV0sY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCJ9LHJlc2l6ZTp7bmFtZTpcInJlc2l6ZVwiLHBhcmFtczpbe25hbWU6XCJ3aWR0aFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHJlc2l6ZWQgaW1hZ2Ugd2lkdGg8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImhlaWdodFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHJlc2l6ZWQgaW1hZ2UgaGVpZ2h0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwifSxjb3B5OntuYW1lOlwiY29weVwiLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJzcmNJbWFnZVwiLGRlc2NyaXB0aW9uOlwiPHA+c291cmNlIGltYWdlPC9wPlxcblwiLHR5cGU6XCJwNS5JbWFnZXxwNS5FbGVtZW50XCJ9LHtuYW1lOlwic3hcIixkZXNjcmlwdGlvbjpcIjxwPlggY29vcmRpbmF0ZSBvZiB0aGUgc291cmNlJ3MgdXBwZXIgbGVmdCBjb3JuZXI8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzeVwiLGRlc2NyaXB0aW9uOlwiPHA+WSBjb29yZGluYXRlIG9mIHRoZSBzb3VyY2UncyB1cHBlciBsZWZ0IGNvcm5lcjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInN3XCIsZGVzY3JpcHRpb246XCI8cD5zb3VyY2UgaW1hZ2Ugd2lkdGg8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzaFwiLGRlc2NyaXB0aW9uOlwiPHA+c291cmNlIGltYWdlIGhlaWdodDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR4XCIsZGVzY3JpcHRpb246XCI8cD5YIGNvb3JkaW5hdGUgb2YgdGhlIGRlc3RpbmF0aW9uJ3MgdXBwZXIgbGVmdCBjb3JuZXI8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeVwiLGRlc2NyaXB0aW9uOlwiPHA+WSBjb29yZGluYXRlIG9mIHRoZSBkZXN0aW5hdGlvbidzIHVwcGVyIGxlZnQgY29ybmVyPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHdcIixkZXNjcmlwdGlvbjpcIjxwPmRlc3RpbmF0aW9uIGltYWdlIHdpZHRoPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZGhcIixkZXNjcmlwdGlvbjpcIjxwPmRlc3RpbmF0aW9uIGltYWdlIGhlaWdodDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifV19LHtwYXJhbXM6W3tuYW1lOlwic3hcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwic3lcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwic3dcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwic2hcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHdcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZGhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJJbnRlZ2VyXCJ9XX1dfSxtYXNrOntuYW1lOlwibWFza1wiLHBhcmFtczpbe25hbWU6XCJzcmNJbWFnZVwiLGRlc2NyaXB0aW9uOlwiPHA+c291cmNlIGltYWdlPC9wPlxcblwiLHR5cGU6XCJwNS5JbWFnZVwifV0sY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCJ9LGZpbHRlcjp7bmFtZTpcImZpbHRlclwiLHBhcmFtczpbe25hbWU6XCJmaWx0ZXJUeXBlXCIsZGVzY3JpcHRpb246XCI8cD5laXRoZXIgVEhSRVNIT0xELCBHUkFZLCBPUEFRVUUsIElOVkVSVCxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUE9TVEVSSVpFLCBCTFVSLCBFUk9ERSwgRElMQVRFIG9yIEJMVVIuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlZSBGaWx0ZXJzLmpzIGZvciBkb2NzIG9uXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVhY2ggYXZhaWxhYmxlIGZpbHRlcjwvcD5cXG5cIix0eXBlOlwiQ29uc3RhbnRcIn0se25hbWU6XCJmaWx0ZXJQYXJhbVwiLGRlc2NyaXB0aW9uOlwiPHA+YW4gb3B0aW9uYWwgcGFyYW1ldGVyIHVuaXF1ZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBlYWNoIGZpbHRlciwgc2VlIGFib3ZlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwifSxibGVuZDp7bmFtZTpcImJsZW5kXCIsY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInNyY0ltYWdlXCIsZGVzY3JpcHRpb246XCI8cD5zb3VyY2UgaW1hZ2U8L3A+XFxuXCIsdHlwZTpcInA1LkltYWdlXCJ9LHtuYW1lOlwic3hcIixkZXNjcmlwdGlvbjpcIjxwPlggY29vcmRpbmF0ZSBvZiB0aGUgc291cmNlJ3MgdXBwZXIgbGVmdCBjb3JuZXI8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzeVwiLGRlc2NyaXB0aW9uOlwiPHA+WSBjb29yZGluYXRlIG9mIHRoZSBzb3VyY2UncyB1cHBlciBsZWZ0IGNvcm5lcjwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcInN3XCIsZGVzY3JpcHRpb246XCI8cD5zb3VyY2UgaW1hZ2Ugd2lkdGg8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzaFwiLGRlc2NyaXB0aW9uOlwiPHA+c291cmNlIGltYWdlIGhlaWdodDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImR4XCIsZGVzY3JpcHRpb246XCI8cD5YIGNvb3JkaW5hdGUgb2YgdGhlIGRlc3RpbmF0aW9uJ3MgdXBwZXIgbGVmdCBjb3JuZXI8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeVwiLGRlc2NyaXB0aW9uOlwiPHA+WSBjb29yZGluYXRlIG9mIHRoZSBkZXN0aW5hdGlvbidzIHVwcGVyIGxlZnQgY29ybmVyPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZHdcIixkZXNjcmlwdGlvbjpcIjxwPmRlc3RpbmF0aW9uIGltYWdlIHdpZHRoPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiZGhcIixkZXNjcmlwdGlvbjpcIjxwPmRlc3RpbmF0aW9uIGltYWdlIGhlaWdodDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImJsZW5kTW9kZVwiLGRlc2NyaXB0aW9uOic8cD50aGUgYmxlbmQgbW9kZS4gZWl0aGVyXFxuICAgIEJMRU5ELCBEQVJLRVNULCBMSUdIVEVTVCwgRElGRkVSRU5DRSxcXG4gICAgTVVMVElQTFksIEVYQ0xVU0lPTiwgU0NSRUVOLCBSRVBMQUNFLCBPVkVSTEFZLCBIQVJEX0xJR0hULFxcbiAgICBTT0ZUX0xJR0hULCBET0RHRSwgQlVSTiwgQUREIG9yIE5PUk1BTC48L3A+XFxuPHA+QXZhaWxhYmxlIGJsZW5kIG1vZGVzIGFyZTogbm9ybWFsIHwgbXVsdGlwbHkgfCBzY3JlZW4gfCBvdmVybGF5IHxcXG4gICAgICAgICAgIGRhcmtlbiB8IGxpZ2h0ZW4gfCBjb2xvci1kb2RnZSB8IGNvbG9yLWJ1cm4gfCBoYXJkLWxpZ2h0IHxcXG4gICAgICAgICAgIHNvZnQtbGlnaHQgfCBkaWZmZXJlbmNlIHwgZXhjbHVzaW9uIHwgaHVlIHwgc2F0dXJhdGlvbiB8XFxuICAgICAgICAgICBjb2xvciB8IGx1bWlub3NpdHk8L3A+XFxuPHA+PGEgaHJlZj1cImh0dHA6Ly9ibG9ncy5hZG9iZS5jb20vd2VicGxhdGZvcm0vMjAxMy8wMS8yOC9ibGVuZGluZy1mZWF0dXJlcy1pbi1jYW52YXMvXCI+aHR0cDovL2Jsb2dzLmFkb2JlLmNvbS93ZWJwbGF0Zm9ybS8yMDEzLzAxLzI4L2JsZW5kaW5nLWZlYXR1cmVzLWluLWNhbnZhcy88L2E+PC9wPlxcbicsdHlwZTpcIkNvbnN0YW50XCJ9XX0se3BhcmFtczpbe25hbWU6XCJzeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzeVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzd1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJzaFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkeVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkd1wiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJkaFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJibGVuZE1vZGVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJDb25zdGFudFwifV19XX0sc2F2ZTp7bmFtZTpcInNhdmVcIixwYXJhbXM6W3tuYW1lOlwiZmlsZW5hbWVcIixkZXNjcmlwdGlvbjpcIjxwPmdpdmUgeW91ciBmaWxlIGEgbmFtZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiZXh0ZW5zaW9uXCIsZGVzY3JpcHRpb246XCI8cD4ncG5nJyBvciAnanBnJzwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LkltYWdlXCIsbW9kdWxlOlwiSW1hZ2VcIn0scmVzZXQ6e25hbWU6XCJyZXNldFwiLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwifSxnZXRDdXJyZW50RnJhbWU6e25hbWU6XCJnZXRDdXJyZW50RnJhbWVcIixjbGFzczpcInA1LkltYWdlXCIsbW9kdWxlOlwiSW1hZ2VcIn0sc2V0RnJhbWU6e25hbWU6XCJzZXRGcmFtZVwiLHBhcmFtczpbe25hbWU6XCJpbmRleFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGluZGV4IGZvciB0aGUgZnJhbWUgdGhhdCBzaG91bGQgYmUgZGlzcGxheWVkPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwifSxudW1GcmFtZXM6e25hbWU6XCJudW1GcmFtZXNcIixjbGFzczpcInA1LkltYWdlXCIsbW9kdWxlOlwiSW1hZ2VcIn0scGxheTp7bmFtZTpcInBsYXlcIixjbGFzczpcInA1LkltYWdlXCIsbW9kdWxlOlwiSW1hZ2VcIn0scGF1c2U6e25hbWU6XCJwYXVzZVwiLGNsYXNzOlwicDUuSW1hZ2VcIixtb2R1bGU6XCJJbWFnZVwifSxkZWxheTp7bmFtZTpcImRlbGF5XCIscGFyYW1zOlt7bmFtZTpcImRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbW91bnQgaW4gbWlsbGlzZWNvbmRzIHRvIGRlbGF5IGJldHdlZW4gc3dpdGNoaW5nIGZyYW1lczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiaW5kZXhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBpbmRleCBvZiB0aGUgZnJhbWUgdGhhdCBzaG91bGQgaGF2ZSB0aGUgbmV3IGRlbGF5IHZhbHVlIHtvcHRpb25hbH08L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5JbWFnZVwiLG1vZHVsZTpcIkltYWdlXCJ9fSxcInA1LlByaW50V3JpdGVyXCI6e3dyaXRlOntuYW1lOlwid3JpdGVcIixwYXJhbXM6W3tuYW1lOlwiZGF0YVwiLGRlc2NyaXB0aW9uOlwiPHA+YWxsIGRhdGEgdG8gYmUgd3JpdHRlbiBieSB0aGUgUHJpbnRXcml0ZXI8L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9XSxjbGFzczpcInA1LlByaW50V3JpdGVyXCIsbW9kdWxlOlwiSU9cIn0scHJpbnQ6e25hbWU6XCJwcmludFwiLHBhcmFtczpbe25hbWU6XCJkYXRhXCIsZGVzY3JpcHRpb246XCI8cD5hbGwgZGF0YSB0byBiZSBwcmludGVkIGJ5IHRoZSBQcmludFdyaXRlcjwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dLGNsYXNzOlwicDUuUHJpbnRXcml0ZXJcIixtb2R1bGU6XCJJT1wifSxjbGVhcjp7bmFtZTpcImNsZWFyXCIsY2xhc3M6XCJwNS5QcmludFdyaXRlclwiLG1vZHVsZTpcIklPXCJ9LGNsb3NlOntuYW1lOlwiY2xvc2VcIixjbGFzczpcInA1LlByaW50V3JpdGVyXCIsbW9kdWxlOlwiSU9cIn19LFwicDUuVGFibGVcIjp7Y29sdW1uczp7bmFtZTpcImNvbHVtbnNcIixjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0scm93czp7bmFtZTpcInJvd3NcIixjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sYWRkUm93OntuYW1lOlwiYWRkUm93XCIscGFyYW1zOlt7bmFtZTpcInJvd1wiLGRlc2NyaXB0aW9uOlwiPHA+cm93IHRvIGJlIGFkZGVkIHRvIHRoZSB0YWJsZTwvcD5cXG5cIix0eXBlOlwicDUuVGFibGVSb3dcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxyZW1vdmVSb3c6e25hbWU6XCJyZW1vdmVSb3dcIixwYXJhbXM6W3tuYW1lOlwiaWRcIixkZXNjcmlwdGlvbjpcIjxwPklEIG51bWJlciBvZiB0aGUgcm93IHRvIHJlbW92ZTwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifV0sY2xhc3M6XCJwNS5UYWJsZVwiLG1vZHVsZTpcIklPXCJ9LGdldFJvdzp7bmFtZTpcImdldFJvd1wiLHBhcmFtczpbe25hbWU6XCJyb3dJRFwiLGRlc2NyaXB0aW9uOlwiPHA+SUQgbnVtYmVyIG9mIHRoZSByb3cgdG8gZ2V0PC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9XSxjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sZ2V0Um93czp7bmFtZTpcImdldFJvd3NcIixjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sZmluZFJvdzp7bmFtZTpcImZpbmRSb3dcIixwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSB2YWx1ZSB0byBtYXRjaDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiY29sdW1uXCIsZGVzY3JpcHRpb246XCI8cD5JRCBudW1iZXIgb3IgdGl0bGUgb2YgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbiB0byBzZWFyY2g8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJ8U3RyaW5nXCJ9XSxjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sZmluZFJvd3M6e25hbWU6XCJmaW5kUm93c1wiLHBhcmFtczpbe25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIHZhbHVlIHRvIG1hdGNoPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPklEIG51bWJlciBvciB0aXRsZSBvZiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uIHRvIHNlYXJjaDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlcnxTdHJpbmdcIn1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxtYXRjaFJvdzp7bmFtZTpcIm1hdGNoUm93XCIscGFyYW1zOlt7bmFtZTpcInJlZ2V4cFwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIHJlZ3VsYXIgZXhwcmVzc2lvbiB0byBtYXRjaDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfFJlZ0V4cFwifSx7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGNvbHVtbiBJRCAobnVtYmVyKSBvclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlIChzdHJpbmcpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifV0sY2xhc3M6XCJwNS5UYWJsZVwiLG1vZHVsZTpcIklPXCJ9LG1hdGNoUm93czp7bmFtZTpcIm1hdGNoUm93c1wiLHBhcmFtczpbe25hbWU6XCJyZWdleHBcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSByZWd1bGFyIGV4cHJlc3Npb24gdG8gbWF0Y2g8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGNvbHVtbiBJRCAobnVtYmVyKSBvclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlIChzdHJpbmcpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5UYWJsZVwiLG1vZHVsZTpcIklPXCJ9LGdldENvbHVtbjp7bmFtZTpcImdldENvbHVtblwiLHBhcmFtczpbe25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPlN0cmluZyBvciBOdW1iZXIgb2YgdGhlIGNvbHVtbiB0byByZXR1cm48L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xOdW1iZXJcIn1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxjbGVhclJvd3M6e25hbWU6XCJjbGVhclJvd3NcIixjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sYWRkQ29sdW1uOntuYW1lOlwiYWRkQ29sdW1uXCIscGFyYW1zOlt7bmFtZTpcInRpdGxlXCIsZGVzY3JpcHRpb246XCI8cD50aXRsZSBvZiB0aGUgZ2l2ZW4gY29sdW1uPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxnZXRDb2x1bW5Db3VudDp7bmFtZTpcImdldENvbHVtbkNvdW50XCIsY2xhc3M6XCJwNS5UYWJsZVwiLG1vZHVsZTpcIklPXCJ9LGdldFJvd0NvdW50OntuYW1lOlwiZ2V0Um93Q291bnRcIixjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0scmVtb3ZlVG9rZW5zOntuYW1lOlwicmVtb3ZlVG9rZW5zXCIscGFyYW1zOlt7bmFtZTpcImNoYXJzXCIsZGVzY3JpcHRpb246XCI8cD5TdHJpbmcgbGlzdGluZyBjaGFyYWN0ZXJzIHRvIGJlIHJlbW92ZWQ8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+Q29sdW1uIElEIChudW1iZXIpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgbmFtZSAoc3RyaW5nKTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEludGVnZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSx0cmltOntuYW1lOlwidHJpbVwiLHBhcmFtczpbe25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPkNvbHVtbiBJRCAobnVtYmVyKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIG5hbWUgKHN0cmluZyk8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xJbnRlZ2VyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0scmVtb3ZlQ29sdW1uOntuYW1lOlwicmVtb3ZlQ29sdW1uXCIscGFyYW1zOlt7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+Y29sdW1uTmFtZSAoc3RyaW5nKSBvciBJRCAobnVtYmVyKTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEludGVnZXJcIn1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwicm93XCIsZGVzY3JpcHRpb246XCI8cD5yb3cgSUQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPmNvbHVtbiBJRCAoTnVtYmVyKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIHRpdGxlIChTdHJpbmcpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSB0byBhc3NpZ248L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xOdW1iZXJcIn1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxzZXROdW06e25hbWU6XCJzZXROdW1cIixwYXJhbXM6W3tuYW1lOlwicm93XCIsZGVzY3JpcHRpb246XCI8cD5yb3cgSUQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPmNvbHVtbiBJRCAoTnVtYmVyKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIHRpdGxlIChTdHJpbmcpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD52YWx1ZSB0byBhc3NpZ248L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5UYWJsZVwiLG1vZHVsZTpcIklPXCJ9LHNldFN0cmluZzp7bmFtZTpcInNldFN0cmluZ1wiLHBhcmFtczpbe25hbWU6XCJyb3dcIixkZXNjcmlwdGlvbjpcIjxwPnJvdyBJRDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+Y29sdW1uIElEIChOdW1iZXIpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgdGl0bGUgKFN0cmluZyk8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xJbnRlZ2VyXCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnZhbHVlIHRvIGFzc2lnbjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sZ2V0OntuYW1lOlwiZ2V0XCIscGFyYW1zOlt7bmFtZTpcInJvd1wiLGRlc2NyaXB0aW9uOlwiPHA+cm93IElEPC9wPlxcblwiLHR5cGU6XCJJbnRlZ2VyXCJ9LHtuYW1lOlwiY29sdW1uXCIsZGVzY3JpcHRpb246XCI8cD5jb2x1bW5OYW1lIChzdHJpbmcpIG9yXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElEIChudW1iZXIpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifV0sY2xhc3M6XCJwNS5UYWJsZVwiLG1vZHVsZTpcIklPXCJ9LGdldE51bTp7bmFtZTpcImdldE51bVwiLHBhcmFtczpbe25hbWU6XCJyb3dcIixkZXNjcmlwdGlvbjpcIjxwPnJvdyBJRDwvcD5cXG5cIix0eXBlOlwiSW50ZWdlclwifSx7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+Y29sdW1uTmFtZSAoc3RyaW5nKSBvclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJRCAobnVtYmVyKTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEludGVnZXJcIn1dLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifSxnZXRTdHJpbmc6e25hbWU6XCJnZXRTdHJpbmdcIixwYXJhbXM6W3tuYW1lOlwicm93XCIsZGVzY3JpcHRpb246XCI8cD5yb3cgSUQ8L3A+XFxuXCIsdHlwZTpcIkludGVnZXJcIn0se25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPmNvbHVtbk5hbWUgKHN0cmluZykgb3JcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQgKG51bWJlcik8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xJbnRlZ2VyXCJ9XSxjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sZ2V0T2JqZWN0OntuYW1lOlwiZ2V0T2JqZWN0XCIscGFyYW1zOlt7bmFtZTpcImhlYWRlckNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+TmFtZSBvZiB0aGUgY29sdW1uIHdoaWNoIHNob3VsZCBiZSB1c2VkIHRvXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSBlYWNoIHJvdyBvYmplY3QgKG9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlRhYmxlXCIsbW9kdWxlOlwiSU9cIn0sZ2V0QXJyYXk6e25hbWU6XCJnZXRBcnJheVwiLGNsYXNzOlwicDUuVGFibGVcIixtb2R1bGU6XCJJT1wifX0sXCJwNS5UYWJsZVJvd1wiOntzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwiY29sdW1uXCIsZGVzY3JpcHRpb246XCI8cD5Db2x1bW4gSUQgKE51bWJlcilcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBUaXRsZSAoU3RyaW5nKTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEludGVnZXJcIn0se25hbWU6XCJ2YWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIHZhbHVlIHRvIGJlIHN0b3JlZDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfE51bWJlclwifV0sY2xhc3M6XCJwNS5UYWJsZVJvd1wiLG1vZHVsZTpcIklPXCJ9LHNldE51bTp7bmFtZTpcInNldE51bVwiLHBhcmFtczpbe25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPkNvbHVtbiBJRCAoTnVtYmVyKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIFRpdGxlIChTdHJpbmcpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgdmFsdWUgdG8gYmUgc3RvcmVkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXMgYSBGbG9hdDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfFN0cmluZ1wifV0sY2xhc3M6XCJwNS5UYWJsZVJvd1wiLG1vZHVsZTpcIklPXCJ9LHNldFN0cmluZzp7bmFtZTpcInNldFN0cmluZ1wiLHBhcmFtczpbe25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPkNvbHVtbiBJRCAoTnVtYmVyKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIFRpdGxlIChTdHJpbmcpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgdmFsdWUgdG8gYmUgc3RvcmVkXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXMgYSBTdHJpbmc8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xOdW1iZXJ8Qm9vbGVhbnxPYmplY3RcIn1dLGNsYXNzOlwicDUuVGFibGVSb3dcIixtb2R1bGU6XCJJT1wifSxnZXQ6e25hbWU6XCJnZXRcIixwYXJhbXM6W3tuYW1lOlwiY29sdW1uXCIsZGVzY3JpcHRpb246XCI8cD5jb2x1bW5OYW1lIChzdHJpbmcpIG9yXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSUQgKG51bWJlcik8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xJbnRlZ2VyXCJ9XSxjbGFzczpcInA1LlRhYmxlUm93XCIsbW9kdWxlOlwiSU9cIn0sZ2V0TnVtOntuYW1lOlwiZ2V0TnVtXCIscGFyYW1zOlt7bmFtZTpcImNvbHVtblwiLGRlc2NyaXB0aW9uOlwiPHA+Y29sdW1uTmFtZSAoc3RyaW5nKSBvclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElEIChudW1iZXIpPC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifV0sY2xhc3M6XCJwNS5UYWJsZVJvd1wiLG1vZHVsZTpcIklPXCJ9LGdldFN0cmluZzp7bmFtZTpcImdldFN0cmluZ1wiLHBhcmFtczpbe25hbWU6XCJjb2x1bW5cIixkZXNjcmlwdGlvbjpcIjxwPmNvbHVtbk5hbWUgKHN0cmluZykgb3JcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJRCAobnVtYmVyKTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEludGVnZXJcIn1dLGNsYXNzOlwicDUuVGFibGVSb3dcIixtb2R1bGU6XCJJT1wifX0sXCJwNS5YTUxcIjp7Z2V0UGFyZW50OntuYW1lOlwiZ2V0UGFyZW50XCIsY2xhc3M6XCJwNS5YTUxcIixtb2R1bGU6XCJJT1wifSxnZXROYW1lOntuYW1lOlwiZ2V0TmFtZVwiLGNsYXNzOlwicDUuWE1MXCIsbW9kdWxlOlwiSU9cIn0sc2V0TmFtZTp7bmFtZTpcInNldE5hbWVcIixwYXJhbXM6W3tuYW1lOlwidGhlXCIsZGVzY3JpcHRpb246XCI8cD5uZXcgbmFtZSBvZiB0aGUgbm9kZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LGhhc0NoaWxkcmVuOntuYW1lOlwiaGFzQ2hpbGRyZW5cIixjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LGxpc3RDaGlsZHJlbjp7bmFtZTpcImxpc3RDaGlsZHJlblwiLGNsYXNzOlwicDUuWE1MXCIsbW9kdWxlOlwiSU9cIn0sZ2V0Q2hpbGRyZW46e25hbWU6XCJnZXRDaGlsZHJlblwiLHBhcmFtczpbe25hbWU6XCJuYW1lXCIsZGVzY3JpcHRpb246XCI8cD5lbGVtZW50IG5hbWU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5YTUxcIixtb2R1bGU6XCJJT1wifSxnZXRDaGlsZDp7bmFtZTpcImdldENoaWxkXCIscGFyYW1zOlt7bmFtZTpcIm5hbWVcIixkZXNjcmlwdGlvbjpcIjxwPmVsZW1lbnQgbmFtZSBvciBpbmRleDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nfEludGVnZXJcIn1dLGNsYXNzOlwicDUuWE1MXCIsbW9kdWxlOlwiSU9cIn0sYWRkQ2hpbGQ6e25hbWU6XCJhZGRDaGlsZFwiLHBhcmFtczpbe25hbWU6XCJub2RlXCIsZGVzY3JpcHRpb246JzxwPmEgPGEgaHJlZj1cIiMvcDUuWE1MXCI+cDUuWE1MPC9hPiBPYmplY3Qgd2hpY2ggd2lsbCBiZSB0aGUgY2hpbGQgdG8gYmUgYWRkZWQ8L3A+XFxuJyx0eXBlOlwicDUuWE1MXCJ9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LHJlbW92ZUNoaWxkOntuYW1lOlwicmVtb3ZlQ2hpbGRcIixwYXJhbXM6W3tuYW1lOlwibmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+ZWxlbWVudCBuYW1lIG9yIGluZGV4PC9wPlxcblwiLHR5cGU6XCJTdHJpbmd8SW50ZWdlclwifV0sY2xhc3M6XCJwNS5YTUxcIixtb2R1bGU6XCJJT1wifSxnZXRBdHRyaWJ1dGVDb3VudDp7bmFtZTpcImdldEF0dHJpYnV0ZUNvdW50XCIsY2xhc3M6XCJwNS5YTUxcIixtb2R1bGU6XCJJT1wifSxsaXN0QXR0cmlidXRlczp7bmFtZTpcImxpc3RBdHRyaWJ1dGVzXCIsY2xhc3M6XCJwNS5YTUxcIixtb2R1bGU6XCJJT1wifSxoYXNBdHRyaWJ1dGU6e25hbWU6XCJoYXNBdHRyaWJ1dGVcIixwYXJhbXM6W3tuYW1lOlwidGhlXCIsZGVzY3JpcHRpb246XCI8cD5hdHRyaWJ1dGUgdG8gYmUgY2hlY2tlZDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LGdldE51bTp7bmFtZTpcImdldE51bVwiLHBhcmFtczpbe25hbWU6XCJuYW1lXCIsZGVzY3JpcHRpb246XCI8cD50aGUgbm9uLW51bGwgZnVsbCBuYW1lIG9mIHRoZSBhdHRyaWJ1dGU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImRlZmF1bHRWYWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIGF0dHJpYnV0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LGdldFN0cmluZzp7bmFtZTpcImdldFN0cmluZ1wiLHBhcmFtczpbe25hbWU6XCJuYW1lXCIsZGVzY3JpcHRpb246XCI8cD50aGUgbm9uLW51bGwgZnVsbCBuYW1lIG9mIHRoZSBhdHRyaWJ1dGU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImRlZmF1bHRWYWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIGF0dHJpYnV0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LHNldEF0dHJpYnV0ZTp7bmFtZTpcInNldEF0dHJpYnV0ZVwiLHBhcmFtczpbe25hbWU6XCJuYW1lXCIsZGVzY3JpcHRpb246XCI8cD50aGUgZnVsbCBuYW1lIG9mIHRoZSBhdHRyaWJ1dGU8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD50aGUgdmFsdWUgb2YgdGhlIGF0dHJpYnV0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfFN0cmluZ3xCb29sZWFuXCJ9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LGdldENvbnRlbnQ6e25hbWU6XCJnZXRDb250ZW50XCIscGFyYW1zOlt7bmFtZTpcImRlZmF1bHRWYWx1ZVwiLGRlc2NyaXB0aW9uOlwiPHA+dmFsdWUgcmV0dXJuZWQgaWYgbm8gY29udGVudCBpcyBmb3VuZDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LHNldENvbnRlbnQ6e25hbWU6XCJzZXRDb250ZW50XCIscGFyYW1zOlt7bmFtZTpcInRleHRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBuZXcgY29udGVudDwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LlhNTFwiLG1vZHVsZTpcIklPXCJ9LHNlcmlhbGl6ZTp7bmFtZTpcInNlcmlhbGl6ZVwiLGNsYXNzOlwicDUuWE1MXCIsbW9kdWxlOlwiSU9cIn19LFwicDUuVmVjdG9yXCI6e3g6e25hbWU6XCJ4XCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9LHk6e25hbWU6XCJ5XCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9LHo6e25hbWU6XCJ6XCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9LHRvU3RyaW5nOntuYW1lOlwidG9TdHJpbmdcIixjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0sc2V0OntuYW1lOlwic2V0XCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD50aGUgeSBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHogY29tcG9uZW50IG9mIHRoZSB2ZWN0b3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2ZWN0b3IgdG8gc2V0PC9wPlxcblwiLHR5cGU6XCJwNS5WZWN0b3J8TnVtYmVyW11cIn1dLGNoYWluYWJsZToxfV19LGNvcHk6e25hbWU6XCJjb3B5XCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9LGFkZDp7bmFtZTpcImFkZFwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD50aGUgeCBjb21wb25lbnQgb2YgdGhlIHZlY3RvciB0byBiZSBhZGRlZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHkgY29tcG9uZW50IG9mIHRoZSB2ZWN0b3IgdG8gYmUgYWRkZWQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInpcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB6IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yIHRvIGJlIGFkZGVkPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD50aGUgdmVjdG9yIHRvIGFkZDwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yfE51bWJlcltdXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOic8cD5hIDxhIGhyZWY9XCIjL3A1LlZlY3RvclwiPnA1LlZlY3RvcjwvYT4gdG8gYWRkPC9wPlxcbicsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246JzxwPmEgPGEgaHJlZj1cIiMvcDUuVmVjdG9yXCI+cDUuVmVjdG9yPC9hPiB0byBhZGQ8L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwidGFyZ2V0XCIsZGVzY3JpcHRpb246XCI8cD50aGUgdmVjdG9yIHRvIHJlY2VpdmUgdGhlIHJlc3VsdCAoT3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJwNS5WZWN0b3JcIixvcHRpb25hbDohMH1dLHN0YXRpYzoxfV19LHJlbTp7bmFtZTpcInJlbVwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD50aGUgeCBjb21wb25lbnQgb2YgZGl2aXNvciB2ZWN0b3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5IGNvbXBvbmVudCBvZiBkaXZpc29yIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHogY29tcG9uZW50IG9mIGRpdmlzb3IgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5kaXZpc29yIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yIHwgTnVtYmVyW11cIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246JzxwPmRpdmlkZW5kIDxhIGhyZWY9XCIjL3A1LlZlY3RvclwiPnA1LlZlY3RvcjwvYT48L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjonPHA+ZGl2aXNvciA8YSBocmVmPVwiIy9wNS5WZWN0b3JcIj5wNS5WZWN0b3I8L2E+PC9wPlxcbicsdHlwZTpcInA1LlZlY3RvclwifV0sc3RhdGljOjF9LHtwYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifV0sc3RhdGljOjF9XX0sc3ViOntuYW1lOlwic3ViXCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yIHRvIHN1YnRyYWN0PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD50aGUgeSBjb21wb25lbnQgb2YgdGhlIHZlY3RvciB0byBzdWJ0cmFjdDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHogY29tcG9uZW50IG9mIHRoZSB2ZWN0b3IgdG8gc3VidHJhY3Q8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2ZWN0b3IgdG8gc3VidHJhY3Q8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvcnxOdW1iZXJbXVwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwidjFcIixkZXNjcmlwdGlvbjonPHA+YSA8YSBocmVmPVwiIy9wNS5WZWN0b3JcIj5wNS5WZWN0b3I8L2E+IHRvIHN1YnRyYWN0IGZyb208L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjonPHA+YSA8YSBocmVmPVwiIy9wNS5WZWN0b3JcIj5wNS5WZWN0b3I8L2E+IHRvIHN1YnRyYWN0PC9wPlxcbicsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcInRhcmdldFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHZlY3RvciB0byByZWNlaXZlIHRoZSByZXN1bHQgKE9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yXCIsb3B0aW9uYWw6ITB9XSxzdGF0aWM6MX1dfSxtdWx0OntuYW1lOlwibXVsdFwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJuXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgbnVtYmVyIHRvIG11bHRpcGx5IHdpdGggdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD5UaGUgbnVtYmVyIHRvIG11bHRpcGx5IHdpdGggdGhlIHggY29tcG9uZW50IG9mIHRoZSB2ZWN0b3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSBudW1iZXIgdG8gbXVsdGlwbHkgd2l0aCB0aGUgeSBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIG51bWJlciB0byBtdWx0aXBseSB3aXRoIHRoZSB6IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcImFyclwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGFycmF5IHRvIG11bHRpcGx5IHdpdGggdGhlIGNvbXBvbmVudHMgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyW11cIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInZcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSB2ZWN0b3IgdG8gbXVsdGlwbHkgd2l0aCB0aGUgY29tcG9uZW50cyBvZiB0aGUgb3JpZ2luYWwgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJwNS5WZWN0b3JcIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sc3RhdGljOjF9LHtwYXJhbXM6W3tuYW1lOlwidlwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ0YXJnZXRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2ZWN0b3IgdG8gcmVjZWl2ZSB0aGUgcmVzdWx0IChPcHRpb25hbCk8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvclwiLG9wdGlvbmFsOiEwfV0sc3RhdGljOjF9LHtwYXJhbXM6W3tuYW1lOlwidjBcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcInRhcmdldFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwiLG9wdGlvbmFsOiEwfV0sc3RhdGljOjF9LHtwYXJhbXM6W3tuYW1lOlwidjBcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJhcnJcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJbXVwifSx7bmFtZTpcInRhcmdldFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwiLG9wdGlvbmFsOiEwfV0sc3RhdGljOjF9XX0sZGl2OntuYW1lOlwiZGl2XCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcIm5cIixkZXNjcmlwdGlvbjpcIjxwPlRoZSBudW1iZXIgdG8gZGl2aWRlIHRoZSB2ZWN0b3IgYnk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIG51bWJlciB0byBkaXZpZGUgd2l0aCB0aGUgeCBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwieVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIG51bWJlciB0byBkaXZpZGUgd2l0aCB0aGUgeSBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIG51bWJlciB0byBkaXZpZGUgd2l0aCB0aGUgeiBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJhcnJcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSBhcnJheSB0byBkaXZpZGUgdGhlIGNvbXBvbmVudHMgb2YgdGhlIHZlY3RvciBieTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyW11cIn1dLGNoYWluYWJsZToxfSx7cGFyYW1zOlt7bmFtZTpcInZcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSB2ZWN0b3IgdG8gZGl2aWRlIHRoZSBjb21wb25lbnRzIG9mIHRoZSBvcmlnaW5hbCB2ZWN0b3IgYnk8L3A+XFxuXCIsdHlwZTpcInA1LlZlY3RvclwifV0sY2hhaW5hYmxlOjF9LHtwYXJhbXM6W3tuYW1lOlwieFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxzdGF0aWM6MX0se3BhcmFtczpbe25hbWU6XCJ2XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwiblwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRhcmdldFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHZlY3RvciB0byByZWNlaXZlIHRoZSByZXN1bHQgKE9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yXCIsb3B0aW9uYWw6ITB9XSxzdGF0aWM6MX0se3BhcmFtczpbe25hbWU6XCJ2MFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwidGFyZ2V0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuVmVjdG9yXCIsb3B0aW9uYWw6ITB9XSxzdGF0aWM6MX0se3BhcmFtczpbe25hbWU6XCJ2MFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcImFyclwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlcltdXCJ9LHtuYW1lOlwidGFyZ2V0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuVmVjdG9yXCIsb3B0aW9uYWw6ITB9XSxzdGF0aWM6MX1dfSxtYWc6e25hbWU6XCJtYWdcIixjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIixvdmVybG9hZHM6W3twYXJhbXM6W119LHtwYXJhbXM6W3tuYW1lOlwidmVjVFwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHZlY3RvciB0byByZXR1cm4gdGhlIG1hZ25pdHVkZSBvZjwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yXCJ9XSxzdGF0aWM6MX1dfSxtYWdTcTp7bmFtZTpcIm1hZ1NxXCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9LGRvdDp7bmFtZTpcImRvdFwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ6XCIsZGVzY3JpcHRpb246XCI8cD56IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dfSx7cGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246JzxwPnZhbHVlIGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yIG9yIGEgPGEgaHJlZj1cIiMvcDUuVmVjdG9yXCI+cDUuVmVjdG9yPC9hPjwvcD5cXG4nLHR5cGU6XCJwNS5WZWN0b3JcIn1dfSx7cGFyYW1zOlt7bmFtZTpcInYxXCIsZGVzY3JpcHRpb246JzxwPnRoZSBmaXJzdCA8YSBocmVmPVwiIy9wNS5WZWN0b3JcIj5wNS5WZWN0b3I8L2E+PC9wPlxcbicsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246JzxwPnRoZSBzZWNvbmQgPGEgaHJlZj1cIiMvcDUuVmVjdG9yXCI+cDUuVmVjdG9yPC9hPjwvcD5cXG4nLHR5cGU6XCJwNS5WZWN0b3JcIn1dLHN0YXRpYzoxfV19LGNyb3NzOntuYW1lOlwiY3Jvc3NcIixjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIixvdmVybG9hZHM6W3twYXJhbXM6W3tuYW1lOlwidlwiLGRlc2NyaXB0aW9uOic8cD48YSBocmVmPVwiIy9wNS5WZWN0b3JcIj5wNS5WZWN0b3I8L2E+IHRvIGJlIGNyb3NzZWQ8L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9XX0se3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOic8cD50aGUgZmlyc3QgPGEgaHJlZj1cIiMvcDUuVmVjdG9yXCI+cDUuVmVjdG9yPC9hPjwvcD5cXG4nLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOic8cD50aGUgc2Vjb25kIDxhIGhyZWY9XCIjL3A1LlZlY3RvclwiPnA1LlZlY3RvcjwvYT48L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9XSxzdGF0aWM6MX1dfSxkaXN0OntuYW1lOlwiZGlzdFwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ2XCIsZGVzY3JpcHRpb246JzxwPnRoZSB4LCB5LCBhbmQgeiBjb29yZGluYXRlcyBvZiBhIDxhIGhyZWY9XCIjL3A1LlZlY3RvclwiPnA1LlZlY3RvcjwvYT48L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9XX0se3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOic8cD50aGUgZmlyc3QgPGEgaHJlZj1cIiMvcDUuVmVjdG9yXCI+cDUuVmVjdG9yPC9hPjwvcD5cXG4nLHR5cGU6XCJwNS5WZWN0b3JcIn0se25hbWU6XCJ2MlwiLGRlc2NyaXB0aW9uOic8cD50aGUgc2Vjb25kIDxhIGhyZWY9XCIjL3A1LlZlY3RvclwiPnA1LlZlY3RvcjwvYT48L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9XSxzdGF0aWM6MX1dfSxub3JtYWxpemU6e25hbWU6XCJub3JtYWxpemVcIixjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0sbGltaXQ6e25hbWU6XCJsaW1pdFwiLHBhcmFtczpbe25hbWU6XCJtYXhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBtYXhpbXVtIG1hZ25pdHVkZSBmb3IgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0sc2V0TWFnOntuYW1lOlwic2V0TWFnXCIscGFyYW1zOlt7bmFtZTpcImxlblwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIG5ldyBsZW5ndGggZm9yIHRoaXMgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwifSxoZWFkaW5nOntuYW1lOlwiaGVhZGluZ1wiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwifSxyb3RhdGU6e25hbWU6XCJyb3RhdGVcIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbmdsZSBvZiByb3RhdGlvbjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0sYW5nbGVCZXR3ZWVuOntuYW1lOlwiYW5nbGVCZXR3ZWVuXCIscGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246JzxwPnRoZSB4LCB5LCBhbmQgeiBjb21wb25lbnRzIG9mIGEgPGEgaHJlZj1cIiMvcDUuVmVjdG9yXCI+cDUuVmVjdG9yPC9hPjwvcD5cXG4nLHR5cGU6XCJwNS5WZWN0b3JcIn1dLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwifSxsZXJwOntuYW1lOlwibGVycFwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwiLG92ZXJsb2Fkczpbe3BhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD50aGUgeCBjb21wb25lbnQ8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB5IGNvbXBvbmVudDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHogY29tcG9uZW50PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhbXRcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBhbW91bnQgb2YgaW50ZXJwb2xhdGlvbjsgc29tZSB2YWx1ZSBiZXR3ZWVuIDAuMFxcbiAgICAgICAgICAgICAgICAgICAgICAgIChvbGQgdmVjdG9yKSBhbmQgMS4wIChuZXcgdmVjdG9yKS4gMC45IGlzIHZlcnkgbmVhclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBuZXcgdmVjdG9yLiAwLjUgaXMgaGFsZndheSBpbiBiZXR3ZWVuLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2XCIsZGVzY3JpcHRpb246JzxwPnRoZSA8YSBocmVmPVwiIy9wNS5WZWN0b3JcIj5wNS5WZWN0b3I8L2E+IHRvIGxlcnAgdG88L3A+XFxuJyx0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwiYW10XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9XSxjaGFpbmFibGU6MX0se3BhcmFtczpbe25hbWU6XCJ2MVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcInA1LlZlY3RvclwifSx7bmFtZTpcInYyXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwicDUuVmVjdG9yXCJ9LHtuYW1lOlwiYW10XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidGFyZ2V0XCIsZGVzY3JpcHRpb246XCI8cD50aGUgdmVjdG9yIHRvIHJlY2VpdmUgdGhlIHJlc3VsdCAoT3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJwNS5WZWN0b3JcIixvcHRpb25hbDohMH1dLHN0YXRpYzoxfV19LHJlZmxlY3Q6e25hbWU6XCJyZWZsZWN0XCIscGFyYW1zOlt7bmFtZTpcInN1cmZhY2VOb3JtYWxcIixkZXNjcmlwdGlvbjonPHA+dGhlIDxhIGhyZWY9XCIjL3A1LlZlY3RvclwiPnA1LlZlY3RvcjwvYT4gdG8gcmVmbGVjdCBhYm91dCwgd2lsbCBiZSBub3JtYWxpemVkIGJ5IHRoaXMgbWV0aG9kPC9wPlxcbicsdHlwZTpcInA1LlZlY3RvclwifV0sY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9LGFycmF5OntuYW1lOlwiYXJyYXlcIixjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0sZXF1YWxzOntuYW1lOlwiZXF1YWxzXCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCIsb3ZlcmxvYWRzOlt7cGFyYW1zOlt7bmFtZTpcInhcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB4IGNvbXBvbmVudCBvZiB0aGUgdmVjdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD50aGUgeSBjb21wb25lbnQgb2YgdGhlIHZlY3RvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIHogY29tcG9uZW50IG9mIHRoZSB2ZWN0b3I8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV19LHtwYXJhbXM6W3tuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSB2ZWN0b3IgdG8gY29tcGFyZTwvcD5cXG5cIix0eXBlOlwicDUuVmVjdG9yfEFycmF5XCJ9XX1dfSxmcm9tQW5nbGU6e25hbWU6XCJmcm9tQW5nbGVcIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjonPHA+dGhlIGRlc2lyZWQgYW5nbGUsIGluIHJhZGlhbnMgKHVuYWZmZWN0ZWQgYnkgPGEgaHJlZj1cIiMvcDUvYW5nbGVNb2RlXCI+YW5nbGVNb2RlPC9hPik8L3A+XFxuJyx0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibGVuZ3RoXCIsZGVzY3JpcHRpb246XCI8cD50aGUgbGVuZ3RoIG9mIHRoZSBuZXcgdmVjdG9yIChkZWZhdWx0cyB0byAxKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0sZnJvbUFuZ2xlczp7bmFtZTpcImZyb21BbmdsZXNcIixwYXJhbXM6W3tuYW1lOlwidGhldGFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBwb2xhciBhbmdsZSwgaW4gcmFkaWFucyAoemVybyBpcyB1cCk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInBoaVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIGF6aW11dGhhbCBhbmdsZSwgaW4gcmFkaWFuc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh6ZXJvIGlzIG91dCBvZiB0aGUgc2NyZWVuKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwibGVuZ3RoXCIsZGVzY3JpcHRpb246XCI8cD50aGUgbGVuZ3RoIG9mIHRoZSBuZXcgdmVjdG9yIChkZWZhdWx0cyB0byAxKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlZlY3RvclwiLG1vZHVsZTpcIk1hdGhcIn0scmFuZG9tMkQ6e25hbWU6XCJyYW5kb20yRFwiLGNsYXNzOlwicDUuVmVjdG9yXCIsbW9kdWxlOlwiTWF0aFwifSxyYW5kb20zRDp7bmFtZTpcInJhbmRvbTNEXCIsY2xhc3M6XCJwNS5WZWN0b3JcIixtb2R1bGU6XCJNYXRoXCJ9fSxcInA1LkZvbnRcIjp7Zm9udDp7bmFtZTpcImZvbnRcIixjbGFzczpcInA1LkZvbnRcIixtb2R1bGU6XCJUeXBvZ3JhcGh5XCJ9LHRleHRCb3VuZHM6e25hbWU6XCJ0ZXh0Qm91bmRzXCIscGFyYW1zOlt7bmFtZTpcImxpbmVcIixkZXNjcmlwdGlvbjpcIjxwPmEgbGluZSBvZiB0ZXh0PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LXBvc2l0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LXBvc2l0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJmb250U2l6ZVwiLGRlc2NyaXB0aW9uOlwiPHA+Zm9udCBzaXplIHRvIHVzZSAob3B0aW9uYWwpIERlZmF1bHQgaXMgMTIuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJvcHRpb25zXCIsZGVzY3JpcHRpb246XCI8cD5vcGVudHlwZSBvcHRpb25zIChvcHRpb25hbClcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVudHlwZSBmb250cyBjb250YWlucyBhbGlnbm1lbnQgYW5kIGJhc2VsaW5lIG9wdGlvbnMuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdCBpcyAnTEVGVCcgYW5kICdhbHBoYWJldGljJzwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkZvbnRcIixtb2R1bGU6XCJUeXBvZ3JhcGh5XCJ9LHRleHRUb1BvaW50czp7bmFtZTpcInRleHRUb1BvaW50c1wiLHBhcmFtczpbe25hbWU6XCJ0eHRcIixkZXNjcmlwdGlvbjpcIjxwPmEgbGluZSBvZiB0ZXh0PC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54LXBvc2l0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5XCIsZGVzY3JpcHRpb246XCI8cD55LXBvc2l0aW9uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJmb250U2l6ZVwiLGRlc2NyaXB0aW9uOlwiPHA+Zm9udCBzaXplIHRvIHVzZSAob3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJvcHRpb25zXCIsZGVzY3JpcHRpb246XCI8cD5hbiAob3B0aW9uYWwpIG9iamVjdCB0aGF0IGNhbiBjb250YWluOjwvcD5cXG48cD48YnI+c2FtcGxlRmFjdG9yIC0gdGhlIHJhdGlvIG9mIHBhdGgtbGVuZ3RoIHRvIG51bWJlciBvZiBzYW1wbGVzXFxuKGRlZmF1bHQ9LjEpOyBoaWdoZXIgdmFsdWVzIHlpZWxkIG1vcmUgcG9pbnRzIGFuZCBhcmUgdGhlcmVmb3JlXFxubW9yZSBwcmVjaXNlPC9wPlxcbjxwPjxicj5zaW1wbGlmeVRocmVzaG9sZCAtIGlmIHNldCB0byBhIG5vbi16ZXJvIHZhbHVlLCBjb2xsaW5lYXIgcG9pbnRzIHdpbGwgYmVcXG5iZSByZW1vdmVkIGZyb20gdGhlIHBvbHlnb247IHRoZSB2YWx1ZSByZXByZXNlbnRzIHRoZSB0aHJlc2hvbGQgYW5nbGUgdG8gdXNlXFxud2hlbiBkZXRlcm1pbmluZyB3aGV0aGVyIHR3byBlZGdlcyBhcmUgY29sbGluZWFyPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRm9udFwiLG1vZHVsZTpcIlR5cG9ncmFwaHlcIn19LFwicDUuQ2FtZXJhXCI6e3BlcnNwZWN0aXZlOntuYW1lOlwicGVyc3BlY3RpdmVcIixjbGFzczpcInA1LkNhbWVyYVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LG9ydGhvOntuYW1lOlwib3J0aG9cIixjbGFzczpcInA1LkNhbWVyYVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LGZydXN0dW06e25hbWU6XCJmcnVzdHVtXCIsY2xhc3M6XCJwNS5DYW1lcmFcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxwYW46e25hbWU6XCJwYW5cIixwYXJhbXM6W3tuYW1lOlwiYW5nbGVcIixkZXNjcmlwdGlvbjonPHA+YW1vdW50IHRvIHJvdGF0ZSBjYW1lcmEgaW4gY3VycmVudFxcbjxhIGhyZWY9XCIjL3A1L2FuZ2xlTW9kZVwiPmFuZ2xlTW9kZTwvYT4gdW5pdHMuXFxuR3JlYXRlciB0aGFuIDAgdmFsdWVzIHJvdGF0ZSBjb3VudGVyY2xvY2t3aXNlICh0byB0aGUgbGVmdCkuPC9wPlxcbicsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5DYW1lcmFcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSx0aWx0OntuYW1lOlwidGlsdFwiLHBhcmFtczpbe25hbWU6XCJhbmdsZVwiLGRlc2NyaXB0aW9uOic8cD5hbW91bnQgdG8gcm90YXRlIGNhbWVyYSBpbiBjdXJyZW50XFxuPGEgaHJlZj1cIiMvcDUvYW5nbGVNb2RlXCI+YW5nbGVNb2RlPC9hPiB1bml0cy5cXG5HcmVhdGVyIHRoYW4gMCB2YWx1ZXMgcm90YXRlIGNvdW50ZXJjbG9ja3dpc2UgKHRvIHRoZSBsZWZ0KS48L3A+XFxuJyx0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkNhbWVyYVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LGxvb2tBdDp7bmFtZTpcImxvb2tBdFwiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54IHBvc2l0aW9uIG9mIGEgcG9pbnQgaW4gd29ybGQgc3BhY2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnkgcG9zaXRpb24gb2YgYSBwb2ludCBpbiB3b3JsZCBzcGFjZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+eiBwb3NpdGlvbiBvZiBhIHBvaW50IGluIHdvcmxkIHNwYWNlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQ2FtZXJhXCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sY2FtZXJhOntuYW1lOlwiY2FtZXJhXCIsY2xhc3M6XCJwNS5DYW1lcmFcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxtb3ZlOntuYW1lOlwibW92ZVwiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD5hbW91bnQgdG8gbW92ZSBhbG9uZyBjYW1lcmEncyBsZWZ0LXJpZ2h0IGF4aXM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPmFtb3VudCB0byBtb3ZlIGFsb25nIGNhbWVyYSdzIHVwLWRvd24gYXhpczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+YW1vdW50IHRvIG1vdmUgYWxvbmcgY2FtZXJhJ3MgZm9yd2FyZC1iYWNrd2FyZCBheGlzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQ2FtZXJhXCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sc2V0UG9zaXRpb246e25hbWU6XCJzZXRQb3NpdGlvblwiLHBhcmFtczpbe25hbWU6XCJ4XCIsZGVzY3JpcHRpb246XCI8cD54IHBvc2l0aW9uIG9mIGEgcG9pbnQgaW4gd29ybGQgc3BhY2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlcIixkZXNjcmlwdGlvbjpcIjxwPnkgcG9zaXRpb24gb2YgYSBwb2ludCBpbiB3b3JsZCBzcGFjZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielwiLGRlc2NyaXB0aW9uOlwiPHA+eiBwb3NpdGlvbiBvZiBhIHBvaW50IGluIHdvcmxkIHNwYWNlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQ2FtZXJhXCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn19LFwicDUuR2VvbWV0cnlcIjp7Y29tcHV0ZUZhY2VzOntuYW1lOlwiY29tcHV0ZUZhY2VzXCIsY2xhc3M6XCJwNS5HZW9tZXRyeVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9LGNvbXB1dGVOb3JtYWxzOntuYW1lOlwiY29tcHV0ZU5vcm1hbHNcIixjbGFzczpcInA1Lkdlb21ldHJ5XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sYXZlcmFnZU5vcm1hbHM6e25hbWU6XCJhdmVyYWdlTm9ybWFsc1wiLGNsYXNzOlwicDUuR2VvbWV0cnlcIixtb2R1bGU6XCJMaWdodHMsIENhbWVyYVwifSxhdmVyYWdlUG9sZU5vcm1hbHM6e25hbWU6XCJhdmVyYWdlUG9sZU5vcm1hbHNcIixjbGFzczpcInA1Lkdlb21ldHJ5XCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn0sbm9ybWFsaXplOntuYW1lOlwibm9ybWFsaXplXCIsY2xhc3M6XCJwNS5HZW9tZXRyeVwiLG1vZHVsZTpcIkxpZ2h0cywgQ2FtZXJhXCJ9fSxcInA1LlNoYWRlclwiOntzZXRVbmlmb3JtOntuYW1lOlwic2V0VW5pZm9ybVwiLHBhcmFtczpbe25hbWU6XCJ1bmlmb3JtTmFtZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGhlIG5hbWUgb2YgdGhlIHVuaWZvcm0gaW4gdGhlXFxuc2hhZGVyIHByb2dyYW08L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wifSx7bmFtZTpcImRhdGFcIixkZXNjcmlwdGlvbjpcIjxwPnRoZSBkYXRhIHRvIGJlIGFzc29jaWF0ZWRcXG53aXRoIHRoYXQgdW5pZm9ybTsgdHlwZSB2YXJpZXMgKGNvdWxkIGJlIGEgc2luZ2xlIG51bWVyaWNhbCB2YWx1ZSwgYXJyYXksXFxubWF0cml4LCBvciB0ZXh0dXJlIC8gc2FtcGxlciByZWZlcmVuY2UpPC9wPlxcblwiLHR5cGU6XCJPYmplY3R8TnVtYmVyfEJvb2xlYW58TnVtYmVyW11cIn1dLGNsYXNzOlwicDUuU2hhZGVyXCIsbW9kdWxlOlwiTGlnaHRzLCBDYW1lcmFcIn19LFwicDUuc291bmRcIjp7Z2V0TWFzdGVyVm9sdW1lOntuYW1lOlwiZ2V0TWFzdGVyVm9sdW1lXCIsY2xhc3M6XCJwNS5zb3VuZFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG1hc3RlclZvbHVtZTp7bmFtZTpcIm1hc3RlclZvbHVtZVwiLHBhcmFtczpbe25hbWU6XCJ2b2x1bWVcIixkZXNjcmlwdGlvbjpcIjxwPlZvbHVtZSAoYW1wbGl0dWRlKSBiZXR3ZWVuIDAuMFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIDEuMCBvciBtb2R1bGF0aW5nIHNpZ25hbC9vc2NpbGxhdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJ8T2JqZWN0XCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPkZhZGUgZm9yIHQgc2Vjb25kczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPlNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuIGF0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQgc2Vjb25kcyBpbiB0aGUgZnV0dXJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuc291bmRcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzb3VuZE91dDp7bmFtZTpcInNvdW5kT3V0XCIsY2xhc3M6XCJwNS5zb3VuZFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LkVmZmVjdFwiOnthbXA6e25hbWU6XCJhbXBcIixwYXJhbXM6W3tuYW1lOlwidm9sXCIsZGVzY3JpcHRpb246XCI8cD5hbXBsaXR1ZGUgYmV0d2VlbiAwIGFuZCAxLjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJhbXBUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5jcmVhdGUgYSBmYWRlIHRoYXQgbGFzdHMgdW50aWwgcmFtcFRpbWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD5zY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlbiBpbiB0RnJvbU5vdyBzZWNvbmRzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRWZmZWN0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sY2hhaW46e25hbWU6XCJjaGFpblwiLHBhcmFtczpbe25hbWU6XCJhcmd1bWVudHNcIixkZXNjcmlwdGlvbjpcIjxwPkNoYWluIHRvZ2V0aGVyIG11bHRpcGxlIHNvdW5kIG9iamVjdHM8L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5FZmZlY3RcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkcnl3ZXQ6e25hbWU6XCJkcnl3ZXRcIixwYXJhbXM6W3tuYW1lOlwiZmFkZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGRlc2lyZWQgZHJ5d2V0IHZhbHVlICgwIC0gMS4wKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkVmZmVjdFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGNvbm5lY3Q6e25hbWU6XCJjb25uZWN0XCIscGFyYW1zOlt7bmFtZTpcInVuaXRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwicDUuRWZmZWN0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGlzY29ubmVjdDp7bmFtZTpcImRpc2Nvbm5lY3RcIixjbGFzczpcInA1LkVmZmVjdFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LkZpbHRlclwiOntiaXF1YWRGaWx0ZXI6e25hbWU6XCJiaXF1YWRGaWx0ZXJcIixjbGFzczpcInA1LkZpbHRlclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHByb2Nlc3M6e25hbWU6XCJwcm9jZXNzXCIscGFyYW1zOlt7bmFtZTpcIlNpZ25hbFwiLGRlc2NyaXB0aW9uOlwiPHA+QW4gb2JqZWN0IHRoYXQgb3V0cHV0cyBhdWRpbzwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9LHtuYW1lOlwiZnJlcVwiLGRlc2NyaXB0aW9uOlwiPHA+RnJlcXVlbmN5IGluIEh6LCBmcm9tIDEwIHRvIDIyMDUwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyZXNcIixkZXNjcmlwdGlvbjpcIjxwPlJlc29uYW5jZS9XaWR0aCBvZiB0aGUgZmlsdGVyIGZyZXF1ZW5jeVxcbiAgICAgICAgICAgICAgICAgICAgICBmcm9tIDAuMDAxIHRvIDEwMDA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5GaWx0ZXJcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwiZnJlcVwiLGRlc2NyaXB0aW9uOlwiPHA+RnJlcXVlbmN5IGluIEh6LCBmcm9tIDEwIHRvIDIyMDUwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyZXNcIixkZXNjcmlwdGlvbjpcIjxwPlJlc29uYW5jZSAoUSkgZnJvbSAwLjAwMSB0byAxMDAwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ0aW1lRnJvbU5vd1wiLGRlc2NyaXB0aW9uOlwiPHA+c2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzIGZyb20gbm93PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRmlsdGVyXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZnJlcTp7bmFtZTpcImZyZXFcIixwYXJhbXM6W3tuYW1lOlwiZnJlcVwiLGRlc2NyaXB0aW9uOlwiPHA+RmlsdGVyIEZyZXF1ZW5jeTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkZpbHRlclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJlczp7bmFtZTpcInJlc1wiLHBhcmFtczpbe25hbWU6XCJyZXNcIixkZXNjcmlwdGlvbjpcIjxwPlJlc29uYW5jZS9XaWR0aCBvZiBmaWx0ZXIgZnJlcVxcbiAgICAgICAgICAgICAgICAgICAgIGZyb20gMC4wMDEgdG8gMTAwMDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkZpbHRlclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGdhaW46e25hbWU6XCJnYWluXCIscGFyYW1zOlt7bmFtZTpcImdhaW5cIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuRmlsdGVyXCIsbW9kdWxlOlwicDUuc291bmRcIn0sdG9nZ2xlOntuYW1lOlwidG9nZ2xlXCIsY2xhc3M6XCJwNS5GaWx0ZXJcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRUeXBlOntuYW1lOlwic2V0VHlwZVwiLHBhcmFtczpbe25hbWU6XCJ0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LkZpbHRlclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1Lk9zY2lsbGF0b3JcIjp7c3RhcnQ6e25hbWU6XCJzdGFydFwiLHBhcmFtczpbe25hbWU6XCJ0aW1lXCIsZGVzY3JpcHRpb246XCI8cD5zdGFydFRpbWUgaW4gc2Vjb25kcyBmcm9tIG5vdy48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImZyZXF1ZW5jeVwiLGRlc2NyaXB0aW9uOlwiPHA+ZnJlcXVlbmN5IGluIEh6LjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1Lk9zY2lsbGF0b3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzdG9wOntuYW1lOlwic3RvcFwiLHBhcmFtczpbe25hbWU6XCJzZWNvbmRzRnJvbU5vd1wiLGRlc2NyaXB0aW9uOlwiPHA+VGltZSwgaW4gc2Vjb25kcyBmcm9tIG5vdy48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5Pc2NpbGxhdG9yXCIsbW9kdWxlOlwicDUuc291bmRcIn0sYW1wOntuYW1lOlwiYW1wXCIscGFyYW1zOlt7bmFtZTpcInZvbFwiLGRlc2NyaXB0aW9uOlwiPHA+YmV0d2VlbiAwIGFuZCAxLjBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYSBtb2R1bGF0aW5nIHNpZ25hbC9vc2NpbGxhdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJ8T2JqZWN0XCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPmNyZWF0ZSBhIGZhZGUgdGhhdCBsYXN0cyByYW1wVGltZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1Lk9zY2lsbGF0b3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxmcmVxOntuYW1lOlwiZnJlcVwiLHBhcmFtczpbe25hbWU6XCJGcmVxdWVuY3lcIixkZXNjcmlwdGlvbjpcIjxwPkZyZXF1ZW5jeSBpbiBIelxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgbW9kdWxhdGluZyBzaWduYWwvb3NjaWxsYXRvcjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfE9iamVjdFwifSx7bmFtZTpcInJhbXBUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5SYW1wIHRpbWUgKGluIHNlY29uZHMpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ0aW1lRnJvbU5vd1wiLGRlc2NyaXB0aW9uOlwiPHA+U2NoZWR1bGUgdGhpcyBldmVudCB0byBoYXBwZW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdCB4IHNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Pc2NpbGxhdG9yXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0VHlwZTp7bmFtZTpcInNldFR5cGVcIixwYXJhbXM6W3tuYW1lOlwidHlwZVwiLGRlc2NyaXB0aW9uOlwiPHA+J3NpbmUnLCAndHJpYW5nbGUnLCAnc2F3dG9vdGgnIG9yICdzcXVhcmUnLjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1Lk9zY2lsbGF0b3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxjb25uZWN0OntuYW1lOlwiY29ubmVjdFwiLHBhcmFtczpbe25hbWU6XCJ1bml0XCIsZGVzY3JpcHRpb246XCI8cD5BIHA1LnNvdW5kIG9yIFdlYiBBdWRpbyBvYmplY3Q8L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifV0sY2xhc3M6XCJwNS5Pc2NpbGxhdG9yXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGlzY29ubmVjdDp7bmFtZTpcImRpc2Nvbm5lY3RcIixjbGFzczpcInA1Lk9zY2lsbGF0b3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwYW46e25hbWU6XCJwYW5cIixwYXJhbXM6W3tuYW1lOlwicGFubmluZ1wiLGRlc2NyaXB0aW9uOlwiPHA+TnVtYmVyIGJldHdlZW4gLTEgYW5kIDE8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRpbWVGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD5zY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5Pc2NpbGxhdG9yXCIsbW9kdWxlOlwicDUuc291bmRcIn0scGhhc2U6e25hbWU6XCJwaGFzZVwiLHBhcmFtczpbe25hbWU6XCJwaGFzZVwiLGRlc2NyaXB0aW9uOlwiPHA+ZmxvYXQgYmV0d2VlbiAwLjAgYW5kIDEuMDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1Lk9zY2lsbGF0b3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhZGQ6e25hbWU6XCJhZGRcIixwYXJhbXM6W3tuYW1lOlwibnVtYmVyXCIsZGVzY3JpcHRpb246XCI8cD5Db25zdGFudCBudW1iZXIgdG8gYWRkPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuT3NjaWxsYXRvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG11bHQ6e25hbWU6XCJtdWx0XCIscGFyYW1zOlt7bmFtZTpcIm51bWJlclwiLGRlc2NyaXB0aW9uOlwiPHA+Q29uc3RhbnQgbnVtYmVyIHRvIG11bHRpcGx5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuT3NjaWxsYXRvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNjYWxlOntuYW1lOlwic2NhbGVcIixwYXJhbXM6W3tuYW1lOlwiaW5NaW5cIixkZXNjcmlwdGlvbjpcIjxwPmlucHV0IHJhbmdlIG1pbnVtdW08L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImluTWF4XCIsZGVzY3JpcHRpb246XCI8cD5pbnB1dCByYW5nZSBtYXhpbXVtPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJvdXRNaW5cIixkZXNjcmlwdGlvbjpcIjxwPmlucHV0IHJhbmdlIG1pbnVtdW08L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIm91dE1heFwiLGRlc2NyaXB0aW9uOlwiPHA+aW5wdXQgcmFuZ2UgbWF4aW11bTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1Lk9zY2lsbGF0b3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5Nb25vU3ludGhcIjp7cGxheTp7bmFtZTpcInBsYXlcIixwYXJhbXM6W3tuYW1lOlwibm90ZVwiLGRlc2NyaXB0aW9uOic8cD50aGUgbm90ZSB5b3Ugd2FudCB0byBwbGF5LCBzcGVjaWZpZWQgYXMgYVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcmVxdWVuY3kgaW4gSGVydHogKE51bWJlcikgb3IgYXMgYSBtaWRpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlIGluIE5vdGUvT2N0YXZlIGZvcm1hdCAoXCJDNFwiLCBcIkViM1wiLi4uZXRjXCIpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlZSA8YSBocmVmID0gXCJodHRwczovL2dpdGh1Yi5jb20vVG9uZWpzL1RvbmUuanMvd2lraS9JbnN0cnVtZW50c1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUb25lPC9hPi4gRGVmYXVsdHMgdG8gNDQwIGh6LjwvcD5cXG4nLHR5cGU6XCJTdHJpbmcgfCBOdW1iZXJcIn0se25hbWU6XCJ2ZWxvY2l0eVwiLGRlc2NyaXB0aW9uOlwiPHA+dmVsb2NpdHkgb2YgdGhlIG5vdGUgdG8gcGxheSAocmFuZ2luZyBmcm9tIDAgdG8gMSk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD50aW1lIGZyb20gbm93IChpbiBzZWNvbmRzKSBhdCB3aGljaCB0byBwbGF5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJzdXN0YWluVGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGltZSB0byBzdXN0YWluIGJlZm9yZSByZWxlYXNpbmcgdGhlIGVudmVsb3BlLiBEZWZhdWx0cyB0byAwLjE1IHNlY29uZHMuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuTW9ub1N5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sdHJpZ2dlckF0dGFjazp7cGFyYW1zOlt7bmFtZTpcIm5vdGVcIixkZXNjcmlwdGlvbjonPHA+dGhlIG5vdGUgeW91IHdhbnQgdG8gcGxheSwgc3BlY2lmaWVkIGFzIGFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJlcXVlbmN5IGluIEhlcnR6IChOdW1iZXIpIG9yIGFzIGEgbWlkaVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSBpbiBOb3RlL09jdGF2ZSBmb3JtYXQgKFwiQzRcIiwgXCJFYjNcIi4uLmV0Y1wiKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWUgPGEgaHJlZiA9IFwiaHR0cHM6Ly9naXRodWIuY29tL1RvbmVqcy9Ub25lLmpzL3dpa2kvSW5zdHJ1bWVudHNcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVG9uZTwvYT4uIERlZmF1bHRzIHRvIDQ0MCBoejwvcD5cXG4nLHR5cGU6XCJTdHJpbmcgfCBOdW1iZXJcIn0se25hbWU6XCJ2ZWxvY2l0eVwiLGRlc2NyaXB0aW9uOlwiPHA+dmVsb2NpdHkgb2YgdGhlIG5vdGUgdG8gcGxheSAocmFuZ2luZyBmcm9tIDAgdG8gMSk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD50aW1lIGZyb20gbm93IChpbiBzZWNvbmRzKSBhdCB3aGljaCB0byBwbGF5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLG5hbWU6XCJ0cmlnZ2VyQXR0YWNrXCIsY2xhc3M6XCJwNS5Nb25vU3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSx0cmlnZ2VyUmVsZWFzZTp7cGFyYW1zOlt7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD50aW1lIHRvIHRyaWdnZXIgdGhlIHJlbGVhc2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sbmFtZTpcInRyaWdnZXJSZWxlYXNlXCIsY2xhc3M6XCJwNS5Nb25vU3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRBRFNSOntuYW1lOlwic2V0QURTUlwiLHBhcmFtczpbe25hbWU6XCJhdHRhY2tUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIChpbiBzZWNvbmRzIGJlZm9yZSBlbnZlbG9wZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgQXR0YWNrIExldmVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkZWNheVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMpIGJlZm9yZSBlbnZlbG9wZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgRGVjYXkvU3VzdGFpbiBMZXZlbDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic3VzUmF0aW9cIixkZXNjcmlwdGlvbjpcIjxwPlJhdGlvIGJldHdlZW4gYXR0YWNrTGV2ZWwgYW5kIHJlbGVhc2VMZXZlbCwgb24gYSBzY2FsZSBmcm9tIDAgdG8gMSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZSAxLjAgPSBhdHRhY2tMZXZlbCwgMC4wID0gcmVsZWFzZUxldmVsLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBzdXNSYXRpbyBkZXRlcm1pbmVzIHRoZSBkZWNheUxldmVsIGFuZCB0aGUgbGV2ZWwgYXQgd2hpY2ggdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VzdGFpbiBwb3J0aW9uIG9mIHRoZSBlbnZlbG9wZSB3aWxsIHN1c3RhaW4uXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yIGV4YW1wbGUsIGlmIGF0dGFja0xldmVsIGlzIDAuNCwgcmVsZWFzZUxldmVsIGlzIDAsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIHN1c0FtdCBpcyAwLjUsIHRoZSBkZWNheUxldmVsIHdvdWxkIGJlIDAuMi4gSWYgYXR0YWNrTGV2ZWwgaXNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmNyZWFzZWQgdG8gMS4wICh1c2luZyA8Y29kZT5zZXRSYW5nZTwvY29kZT4pLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gZGVjYXlMZXZlbCB3b3VsZCBpbmNyZWFzZSBwcm9wb3J0aW9uYWxseSwgdG8gYmVjb21lIDAuNS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJlbGVhc2VUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIGluIHNlY29uZHMgZnJvbSBub3cgKGRlZmF1bHRzIHRvIDApPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuTW9ub1N5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sYXR0YWNrOntuYW1lOlwiYXR0YWNrXCIsY2xhc3M6XCJwNS5Nb25vU3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkZWNheTp7bmFtZTpcImRlY2F5XCIsY2xhc3M6XCJwNS5Nb25vU3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzdXN0YWluOntuYW1lOlwic3VzdGFpblwiLGNsYXNzOlwicDUuTW9ub1N5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0scmVsZWFzZTp7bmFtZTpcInJlbGVhc2VcIixjbGFzczpcInA1Lk1vbm9TeW50aFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGFtcDp7bmFtZTpcImFtcFwiLHBhcmFtczpbe25hbWU6XCJ2b2xcIixkZXNjcmlwdGlvbjpcIjxwPmRlc2lyZWQgdm9sdW1lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJyYW1wVGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGltZSB0byByZWFjaCBuZXcgdm9sdW1lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuTW9ub1N5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sY29ubmVjdDp7bmFtZTpcImNvbm5lY3RcIixwYXJhbXM6W3tuYW1lOlwidW5pdFwiLGRlc2NyaXB0aW9uOlwiPHA+QSBwNS5zb3VuZCBvciBXZWIgQXVkaW8gb2JqZWN0PC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwicDUuTW9ub1N5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGlzY29ubmVjdDp7bmFtZTpcImRpc2Nvbm5lY3RcIixjbGFzczpcInA1Lk1vbm9TeW50aFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGRpc3Bvc2U6e25hbWU6XCJkaXNwb3NlXCIsY2xhc3M6XCJwNS5Nb25vU3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5BdWRpb1ZvaWNlXCI6e2Nvbm5lY3Q6e25hbWU6XCJjb25uZWN0XCIscGFyYW1zOlt7bmFtZTpcInVuaXRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwicDUuQXVkaW9Wb2ljZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGRpc2Nvbm5lY3Q6e25hbWU6XCJkaXNjb25uZWN0XCIsY2xhc3M6XCJwNS5BdWRpb1ZvaWNlXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuUG9seVN5bnRoXCI6e25vdGVzOntuYW1lOlwibm90ZXNcIixjbGFzczpcInA1LlBvbHlTeW50aFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHBvbHl2YWx1ZTp7bmFtZTpcInBvbHl2YWx1ZVwiLGNsYXNzOlwicDUuUG9seVN5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sQXVkaW9Wb2ljZTp7bmFtZTpcIkF1ZGlvVm9pY2VcIixjbGFzczpcInA1LlBvbHlTeW50aFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHBsYXk6e25hbWU6XCJwbGF5XCIscGFyYW1zOlt7bmFtZTpcIm5vdGVcIixkZXNjcmlwdGlvbjpcIjxwPm1pZGkgbm90ZSB0byBwbGF5IChyYW5naW5nIGZyb20gMCB0byAxMjcgLSA2MCBiZWluZyBhIG1pZGRsZSBDKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidmVsb2NpdHlcIixkZXNjcmlwdGlvbjpcIjxwPnZlbG9jaXR5IG9mIHRoZSBub3RlIHRvIHBsYXkgKHJhbmdpbmcgZnJvbSAwIHRvIDEpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJzZWNvbmRzRnJvbU5vd1wiLGRlc2NyaXB0aW9uOlwiPHA+dGltZSBmcm9tIG5vdyAoaW4gc2Vjb25kcykgYXQgd2hpY2ggdG8gcGxheTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic3VzdGFpblRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPnRpbWUgdG8gc3VzdGFpbiBiZWZvcmUgcmVsZWFzaW5nIHRoZSBlbnZlbG9wZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlBvbHlTeW50aFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG5vdGVBRFNSOntuYW1lOlwibm90ZUFEU1JcIixwYXJhbXM6W3tuYW1lOlwibm90ZVwiLGRlc2NyaXB0aW9uOlwiPHA+TWlkaSBub3RlIG9uIHdoaWNoIEFEU1Igc2hvdWxkIGJlIHNldC48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImF0dGFja1RpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMgYmVmb3JlIGVudmVsb3BlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhY2hlcyBBdHRhY2sgTGV2ZWw8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRlY2F5VGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGltZSAoaW4gc2Vjb25kcykgYmVmb3JlIGVudmVsb3BlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhY2hlcyBEZWNheS9TdXN0YWluIExldmVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJzdXNSYXRpb1wiLGRlc2NyaXB0aW9uOlwiPHA+UmF0aW8gYmV0d2VlbiBhdHRhY2tMZXZlbCBhbmQgcmVsZWFzZUxldmVsLCBvbiBhIHNjYWxlIGZyb20gMCB0byAxLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlIDEuMCA9IGF0dGFja0xldmVsLCAwLjAgPSByZWxlYXNlTGV2ZWwuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlIHN1c1JhdGlvIGRldGVybWluZXMgdGhlIGRlY2F5TGV2ZWwgYW5kIHRoZSBsZXZlbCBhdCB3aGljaCB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdXN0YWluIHBvcnRpb24gb2YgdGhlIGVudmVsb3BlIHdpbGwgc3VzdGFpbi5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb3IgZXhhbXBsZSwgaWYgYXR0YWNrTGV2ZWwgaXMgMC40LCByZWxlYXNlTGV2ZWwgaXMgMCxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgc3VzQW10IGlzIDAuNSwgdGhlIGRlY2F5TGV2ZWwgd291bGQgYmUgMC4yLiBJZiBhdHRhY2tMZXZlbCBpc1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlYXNlZCB0byAxLjAgKHVzaW5nIDxjb2RlPnNldFJhbmdlPC9jb2RlPiksXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbiBkZWNheUxldmVsIHdvdWxkIGluY3JlYXNlIHByb3BvcnRpb25hbGx5LCB0byBiZWNvbWUgMC41LjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicmVsZWFzZVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgaW4gc2Vjb25kcyBmcm9tIG5vdyAoZGVmYXVsdHMgdG8gMCk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Qb2x5U3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRBRFNSOntuYW1lOlwic2V0QURTUlwiLHBhcmFtczpbe25hbWU6XCJhdHRhY2tUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIChpbiBzZWNvbmRzIGJlZm9yZSBlbnZlbG9wZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFjaGVzIEF0dGFjayBMZXZlbDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGVjYXlUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIChpbiBzZWNvbmRzKSBiZWZvcmUgZW52ZWxvcGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhY2hlcyBEZWNheS9TdXN0YWluIExldmVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJzdXNSYXRpb1wiLGRlc2NyaXB0aW9uOlwiPHA+UmF0aW8gYmV0d2VlbiBhdHRhY2tMZXZlbCBhbmQgcmVsZWFzZUxldmVsLCBvbiBhIHNjYWxlIGZyb20gMCB0byAxLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZSAxLjAgPSBhdHRhY2tMZXZlbCwgMC4wID0gcmVsZWFzZUxldmVsLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgc3VzUmF0aW8gZGV0ZXJtaW5lcyB0aGUgZGVjYXlMZXZlbCBhbmQgdGhlIGxldmVsIGF0IHdoaWNoIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdXN0YWluIHBvcnRpb24gb2YgdGhlIGVudmVsb3BlIHdpbGwgc3VzdGFpbi5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yIGV4YW1wbGUsIGlmIGF0dGFja0xldmVsIGlzIDAuNCwgcmVsZWFzZUxldmVsIGlzIDAsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBzdXNBbXQgaXMgMC41LCB0aGUgZGVjYXlMZXZlbCB3b3VsZCBiZSAwLjIuIElmIGF0dGFja0xldmVsIGlzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluY3JlYXNlZCB0byAxLjAgKHVzaW5nIDxjb2RlPnNldFJhbmdlPC9jb2RlPiksXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gZGVjYXlMZXZlbCB3b3VsZCBpbmNyZWFzZSBwcm9wb3J0aW9uYWxseSwgdG8gYmVjb21lIDAuNS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJlbGVhc2VUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIGluIHNlY29uZHMgZnJvbSBub3cgKGRlZmF1bHRzIHRvIDApPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuUG9seVN5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbm90ZUF0dGFjazp7bmFtZTpcIm5vdGVBdHRhY2tcIixwYXJhbXM6W3tuYW1lOlwibm90ZVwiLGRlc2NyaXB0aW9uOlwiPHA+bWlkaSBub3RlIG9uIHdoaWNoIGF0dGFjayBzaG91bGQgYmUgdHJpZ2dlcmVkLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidmVsb2NpdHlcIixkZXNjcmlwdGlvbjpcIjxwPnZlbG9jaXR5IG9mIHRoZSBub3RlIHRvIHBsYXkgKHJhbmdpbmcgZnJvbSAwIHRvIDEpLzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic2Vjb25kc0Zyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnRpbWUgZnJvbSBub3cgKGluIHNlY29uZHMpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuUG9seVN5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbm90ZVJlbGVhc2U6e25hbWU6XCJub3RlUmVsZWFzZVwiLHBhcmFtczpbe25hbWU6XCJub3RlXCIsZGVzY3JpcHRpb246XCI8cD5taWRpIG5vdGUgb24gd2hpY2ggYXR0YWNrIHNob3VsZCBiZSB0cmlnZ2VyZWQuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIG5vIHZhbHVlIGlzIHByb3ZpZGVkLCBhbGwgbm90ZXMgd2lsbCBiZSByZWxlYXNlZC48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD50aW1lIHRvIHRyaWdnZXIgdGhlIHJlbGVhc2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Qb2x5U3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxjb25uZWN0OntuYW1lOlwiY29ubmVjdFwiLHBhcmFtczpbe25hbWU6XCJ1bml0XCIsZGVzY3JpcHRpb246XCI8cD5BIHA1LnNvdW5kIG9yIFdlYiBBdWRpbyBvYmplY3Q8L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifV0sY2xhc3M6XCJwNS5Qb2x5U3ludGhcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkaXNjb25uZWN0OntuYW1lOlwiZGlzY29ubmVjdFwiLGNsYXNzOlwicDUuUG9seVN5bnRoXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGlzcG9zZTp7bmFtZTpcImRpc3Bvc2VcIixjbGFzczpcInA1LlBvbHlTeW50aFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LlNvdW5kRmlsZVwiOntpc0xvYWRlZDp7bmFtZTpcImlzTG9hZGVkXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwbGF5OntuYW1lOlwicGxheVwiLHBhcmFtczpbe25hbWU6XCJzdGFydFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPihvcHRpb25hbCkgc2NoZWR1bGUgcGxheWJhY2sgdG8gc3RhcnQgKGluIHNlY29uZHMgZnJvbSBub3cpLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicmF0ZVwiLGRlc2NyaXB0aW9uOlwiPHA+KG9wdGlvbmFsKSBwbGF5YmFjayByYXRlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJhbXBcIixkZXNjcmlwdGlvbjpcIjxwPihvcHRpb25hbCkgYW1wbGl0dWRlICh2b2x1bWUpXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2YgcGxheWJhY2s8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImN1ZVN0YXJ0XCIsZGVzY3JpcHRpb246XCI8cD4ob3B0aW9uYWwpIGN1ZSBzdGFydCB0aW1lIGluIHNlY29uZHM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImR1cmF0aW9uXCIsZGVzY3JpcHRpb246XCI8cD4ob3B0aW9uYWwpIGR1cmF0aW9uIG9mIHBsYXliYWNrIGluIHNlY29uZHM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwbGF5TW9kZTp7bmFtZTpcInBsYXlNb2RlXCIscGFyYW1zOlt7bmFtZTpcInN0clwiLGRlc2NyaXB0aW9uOlwiPHA+J3Jlc3RhcnQnIG9yICdzdXN0YWluJyBvciAndW50aWxEb25lJzwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHBhdXNlOntuYW1lOlwicGF1c2VcIixwYXJhbXM6W3tuYW1lOlwic3RhcnRUaW1lXCIsZGVzY3JpcHRpb246XCI8cD4ob3B0aW9uYWwpIHNjaGVkdWxlIGV2ZW50IHRvIG9jY3VyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzIGZyb20gbm93PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbG9vcDp7bmFtZTpcImxvb3BcIixwYXJhbXM6W3tuYW1lOlwic3RhcnRUaW1lXCIsZGVzY3JpcHRpb246XCI8cD4ob3B0aW9uYWwpIHNjaGVkdWxlIGV2ZW50IHRvIG9jY3VyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJhdGVcIixkZXNjcmlwdGlvbjpcIjxwPihvcHRpb25hbCkgcGxheWJhY2sgcmF0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiYW1wXCIsZGVzY3JpcHRpb246XCI8cD4ob3B0aW9uYWwpIHBsYXliYWNrIHZvbHVtZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiY3VlTG9vcFN0YXJ0XCIsZGVzY3JpcHRpb246XCI8cD4ob3B0aW9uYWwpIHN0YXJ0VGltZSBpbiBzZWNvbmRzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJkdXJhdGlvblwiLGRlc2NyaXB0aW9uOlwiPHA+KG9wdGlvbmFsKSBsb29wIGR1cmF0aW9uIGluIHNlY29uZHM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRMb29wOntuYW1lOlwic2V0TG9vcFwiLHBhcmFtczpbe25hbWU6XCJCb29sZWFuXCIsZGVzY3JpcHRpb246XCI8cD5zZXQgbG9vcGluZyB0byB0cnVlIG9yIGZhbHNlPC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCJ9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGlzTG9vcGluZzp7bmFtZTpcImlzTG9vcGluZ1wiLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0saXNQbGF5aW5nOntuYW1lOlwiaXNQbGF5aW5nXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxpc1BhdXNlZDp7bmFtZTpcImlzUGF1c2VkXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzdG9wOntuYW1lOlwic3RvcFwiLHBhcmFtczpbe25hbWU6XCJzdGFydFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPihvcHRpb25hbCkgc2NoZWR1bGUgZXZlbnQgdG8gb2NjdXJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNldFZvbHVtZTp7bmFtZTpcInNldFZvbHVtZVwiLHBhcmFtczpbe25hbWU6XCJ2b2x1bWVcIixkZXNjcmlwdGlvbjpcIjxwPlZvbHVtZSAoYW1wbGl0dWRlKSBiZXR3ZWVuIDAuMFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIDEuMCBvciBtb2R1bGF0aW5nIHNpZ25hbC9vc2NpbGxhdG9yPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJ8T2JqZWN0XCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPkZhZGUgZm9yIHQgc2Vjb25kczwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPlNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuIGF0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQgc2Vjb25kcyBpbiB0aGUgZnV0dXJlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0scGFuOntuYW1lOlwicGFuXCIscGFyYW1zOlt7bmFtZTpcInBhblZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5TZXQgdGhlIHN0ZXJlbyBwYW5uZXI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRpbWVGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD5zY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGdldFBhbjp7bmFtZTpcImdldFBhblwiLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0scmF0ZTp7bmFtZTpcInJhdGVcIixwYXJhbXM6W3tuYW1lOlwicGxheWJhY2tSYXRlXCIsZGVzY3JpcHRpb246XCI8cD5TZXQgdGhlIHBsYXliYWNrIHJhdGUuIDEuMCBpcyBub3JtYWwsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuNSBpcyBoYWxmLXNwZWVkLCAyLjAgaXMgdHdpY2UgYXMgZmFzdC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZhbHVlcyBsZXNzIHRoYW4gemVybyBwbGF5IGJhY2t3YXJkcy48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkdXJhdGlvbjp7bmFtZTpcImR1cmF0aW9uXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxjdXJyZW50VGltZTp7bmFtZTpcImN1cnJlbnRUaW1lXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxqdW1wOntuYW1lOlwianVtcFwiLHBhcmFtczpbe25hbWU6XCJjdWVUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5jdWVUaW1lIG9mIHRoZSBzb3VuZEZpbGUgaW4gc2Vjb25kcy48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImR1cmF0aW9uXCIsZGVzY3JpcHRpb246XCI8cD5kdXJhdGlvbiBpbiBzZWNvbmRzLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGNoYW5uZWxzOntuYW1lOlwiY2hhbm5lbHNcIixjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNhbXBsZVJhdGU6e25hbWU6XCJzYW1wbGVSYXRlXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxmcmFtZXM6e25hbWU6XCJmcmFtZXNcIixjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGdldFBlYWtzOntuYW1lOlwiZ2V0UGVha3NcIixwYXJhbXM6W3tuYW1lOlwibGVuZ3RoXCIsZGVzY3JpcHRpb246XCI8cD5sZW5ndGggaXMgdGhlIHNpemUgb2YgdGhlIHJldHVybmVkIGFycmF5LlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBMYXJnZXIgbGVuZ3RoIHJlc3VsdHMgaW4gbW9yZSBwcmVjaXNpb24uXFxuICAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHRzIHRvIDUqd2lkdGggb2YgdGhlIGJyb3dzZXIgd2luZG93LjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJldmVyc2VCdWZmZXI6e25hbWU6XCJyZXZlcnNlQnVmZmVyXCIsY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxvbmVuZGVkOntuYW1lOlwib25lbmRlZFwiLHBhcmFtczpbe25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gdG8gY2FsbCB3aGVuIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VuZGZpbGUgaGFzIGVuZGVkLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIn1dLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sY29ubmVjdDp7bmFtZTpcImNvbm5lY3RcIixwYXJhbXM6W3tuYW1lOlwib2JqZWN0XCIsZGVzY3JpcHRpb246XCI8cD5BdWRpbyBvYmplY3QgdGhhdCBhY2NlcHRzIGFuIGlucHV0PC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGlzY29ubmVjdDp7bmFtZTpcImRpc2Nvbm5lY3RcIixjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNldFBhdGg6e25hbWU6XCJzZXRQYXRoXCIscGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIjxwPnBhdGggdG8gYXVkaW8gZmlsZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPkNhbGxiYWNrPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwifV0sY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRCdWZmZXI6e25hbWU6XCJzZXRCdWZmZXJcIixwYXJhbXM6W3tuYW1lOlwiYnVmXCIsZGVzY3JpcHRpb246XCI8cD5BcnJheSBvZiBGbG9hdDMyIEFycmF5KHMpLiAyIEZsb2F0MzIgQXJyYXlzXFxuICAgICAgICAgICAgICAgICAgIHdpbGwgY3JlYXRlIGEgc3RlcmVvIHNvdXJjZS4gMSB3aWxsIGNyZWF0ZVxcbiAgICAgICAgICAgICAgICAgICBhIG1vbm8gc291cmNlLjwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0scHJvY2Vzc1BlYWtzOntuYW1lOlwicHJvY2Vzc1BlYWtzXCIscGFyYW1zOlt7bmFtZTpcImNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5hIGZ1bmN0aW9uIHRvIGNhbGwgb25jZSB0aGlzIGRhdGEgaXMgcmV0dXJuZWQ8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCJ9LHtuYW1lOlwiaW5pdFRocmVzaG9sZFwiLGRlc2NyaXB0aW9uOlwiPHA+aW5pdGlhbCB0aHJlc2hvbGQgZGVmYXVsdHMgdG8gMC45PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJtaW5UaHJlc2hvbGRcIixkZXNjcmlwdGlvbjpcIjxwPm1pbmltdW0gdGhyZXNob2xkIGRlZmF1bHRzIHRvIDAuMjI8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcIm1pblBlYWtzXCIsZGVzY3JpcHRpb246XCI8cD5taW5pbXVtIG51bWJlciBvZiBwZWFrcyBkZWZhdWx0cyB0byAyMDA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhZGRDdWU6e25hbWU6XCJhZGRDdWVcIixwYXJhbXM6W3tuYW1lOlwidGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+VGltZSBpbiBzZWNvbmRzLCByZWxhdGl2ZSB0byB0aGlzIG1lZGlhXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCdzIHBsYXliYWNrLiBGb3IgZXhhbXBsZSwgdG8gdHJpZ2dlclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuIGV2ZW50IGV2ZXJ5IHRpbWUgcGxheWJhY2sgcmVhY2hlcyB0d29cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRzLCBwYXNzIGluIHRoZSBudW1iZXIgMi4gVGhpcyB3aWxsIGJlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzc2VkIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIgdG9cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+TmFtZSBvZiBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxlZCBhdCB0aGUgZ2l2ZW4gdGltZS4gVGhlIGNhbGxiYWNrIHdpbGxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICByZWNlaXZlIHRpbWUgYW5kIChvcHRpb25hbGx5KSBwYXJhbSBhcyBpdHNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB0d28gcGFyYW1ldGVycy48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCJ9LHtuYW1lOlwidmFsdWVcIixkZXNjcmlwdGlvbjpcIjxwPkFuIG9iamVjdCB0byBiZSBwYXNzZWQgYXMgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kIHBhcmFtZXRlciB0byB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayBmdW5jdGlvbi48L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Tb3VuZEZpbGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxyZW1vdmVDdWU6e25hbWU6XCJyZW1vdmVDdWVcIixwYXJhbXM6W3tuYW1lOlwiaWRcIixkZXNjcmlwdGlvbjpcIjxwPklEIG9mIHRoZSBjdWUsIGFzIHJldHVybmVkIGJ5IGFkZEN1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGNsZWFyQ3Vlczp7bmFtZTpcImNsZWFyQ3Vlc1wiLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2F2ZTp7bmFtZTpcInNhdmVcIixwYXJhbXM6W3tuYW1lOlwiZmlsZU5hbWVcIixkZXNjcmlwdGlvbjpcIjxwPm5hbWUgb2YgdGhlIHJlc3VsdGluZyAud2F2IGZpbGUuPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRGaWxlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZ2V0QmxvYjp7bmFtZTpcImdldEJsb2JcIixjbGFzczpcInA1LlNvdW5kRmlsZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LkFtcGxpdHVkZVwiOntzZXRJbnB1dDp7bmFtZTpcInNldElucHV0XCIscGFyYW1zOlt7bmFtZTpcInNuZFwiLGRlc2NyaXB0aW9uOlwiPHA+c2V0IHRoZSBzb3VuZCBzb3VyY2VcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG9wdGlvbmFsLCBkZWZhdWx0cyB0b1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXN0ZXIgb3V0cHV0KTwvcD5cXG5cIix0eXBlOlwiU291bmRPYmplY3R8dW5kZWZpbmVkXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic21vb3RoaW5nXCIsZGVzY3JpcHRpb246XCI8cD5hIHJhbmdlIGJldHdlZW4gMC4wIGFuZCAxLjBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIHNtb290aCBhbXBsaXR1ZGUgcmVhZGluZ3M8L3A+XFxuXCIsdHlwZTpcIk51bWJlcnx1bmRlZmluZWRcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQW1wbGl0dWRlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZ2V0TGV2ZWw6e25hbWU6XCJnZXRMZXZlbFwiLHBhcmFtczpbe25hbWU6XCJjaGFubmVsXCIsZGVzY3JpcHRpb246XCI8cD5PcHRpb25hbGx5IHJldHVybiBvbmx5IGNoYW5uZWwgMCAobGVmdCkgb3IgMSAocmlnaHQpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQW1wbGl0dWRlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sdG9nZ2xlTm9ybWFsaXplOntuYW1lOlwidG9nZ2xlTm9ybWFsaXplXCIscGFyYW1zOlt7bmFtZTpcImJvb2xlYW5cIixkZXNjcmlwdGlvbjpcIjxwPnNldCBub3JtYWxpemUgdG8gdHJ1ZSAoMSkgb3IgZmFsc2UgKDApPC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkFtcGxpdHVkZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNtb290aDp7bmFtZTpcInNtb290aFwiLHBhcmFtczpbe25hbWU6XCJzZXRcIixkZXNjcmlwdGlvbjpcIjxwPnNtb290aGluZyBmcm9tIDAuMCA8PSAxPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQW1wbGl0dWRlXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuRkZUXCI6e3NldElucHV0OntuYW1lOlwic2V0SW5wdXRcIixwYXJhbXM6W3tuYW1lOlwic291cmNlXCIsZGVzY3JpcHRpb246XCI8cD5wNS5zb3VuZCBvYmplY3QgKG9yIHdlYiBhdWRpbyBBUEkgc291cmNlIG5vZGUpPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRkZUXCIsbW9kdWxlOlwicDUuc291bmRcIn0sd2F2ZWZvcm06e25hbWU6XCJ3YXZlZm9ybVwiLHBhcmFtczpbe25hbWU6XCJiaW5zXCIsZGVzY3JpcHRpb246XCI8cD5NdXN0IGJlIGEgcG93ZXIgb2YgdHdvIGJldHdlZW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDE2IGFuZCAxMDI0LiBEZWZhdWx0cyB0byAxMDI0LjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicHJlY2lzaW9uXCIsZGVzY3JpcHRpb246XCI8cD5JZiBhbnkgdmFsdWUgaXMgcHJvdmlkZWQsIHdpbGwgcmV0dXJuIHJlc3VsdHNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gYSBGbG9hdDMyIEFycmF5IHdoaWNoIGlzIG1vcmUgcHJlY2lzZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGFuIGEgcmVndWxhciBhcnJheS48L3A+XFxuXCIsdHlwZTpcIlN0cmluZ1wiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5GRlRcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhbmFseXplOntuYW1lOlwiYW5hbHl6ZVwiLHBhcmFtczpbe25hbWU6XCJiaW5zXCIsZGVzY3JpcHRpb246XCI8cD5NdXN0IGJlIGEgcG93ZXIgb2YgdHdvIGJldHdlZW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAxNiBhbmQgMTAyNC4gRGVmYXVsdHMgdG8gMTAyNC48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInNjYWxlXCIsZGVzY3JpcHRpb246JzxwPklmIFwiZEIsXCIgcmV0dXJucyBkZWNpYmVsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvYXQgbWVhc3VyZW1lbnRzIGJldHdlZW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAtMTQwIGFuZCAwIChtYXgpLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIE90aGVyd2lzZSByZXR1cm5zIGludGVnZXJzIGZyb20gMC0yNTUuPC9wPlxcbicsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5GRlRcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxnZXRFbmVyZ3k6e25hbWU6XCJnZXRFbmVyZ3lcIixwYXJhbXM6W3tuYW1lOlwiZnJlcXVlbmN5MVwiLGRlc2NyaXB0aW9uOic8cD5XaWxsIHJldHVybiBhIHZhbHVlIHJlcHJlc2VudGluZ1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZXJneSBhdCB0aGlzIGZyZXF1ZW5jeS4gQWx0ZXJuYXRlbHksXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIHN0cmluZ3MgXCJiYXNzXCIsIFwibG93TWlkXCIgXCJtaWRcIixcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImhpZ2hNaWRcIiwgYW5kIFwidHJlYmxlXCIgd2lsbCByZXR1cm5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVkZWZpbmVkIGZyZXF1ZW5jeSByYW5nZXMuPC9wPlxcbicsdHlwZTpcIk51bWJlcnxTdHJpbmdcIn0se25hbWU6XCJmcmVxdWVuY3kyXCIsZGVzY3JpcHRpb246XCI8cD5JZiBhIHNlY29uZCBmcmVxdWVuY3kgaXMgZ2l2ZW4sXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lsbCByZXR1cm4gYXZlcmFnZSBhbW91bnQgb2ZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmVyZ3kgdGhhdCBleGlzdHMgYmV0d2VlbiB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d28gZnJlcXVlbmNpZXMuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRkZUXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZ2V0Q2VudHJvaWQ6e25hbWU6XCJnZXRDZW50cm9pZFwiLGNsYXNzOlwicDUuRkZUXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc21vb3RoOntuYW1lOlwic21vb3RoXCIscGFyYW1zOlt7bmFtZTpcInNtb290aGluZ1wiLGRlc2NyaXB0aW9uOlwiPHA+MC4wIDwgc21vb3RoaW5nIDwgMS4wLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVmYXVsdHMgdG8gMC44LjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkZGVFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGxpbkF2ZXJhZ2VzOntuYW1lOlwibGluQXZlcmFnZXNcIixwYXJhbXM6W3tuYW1lOlwiTlwiLGRlc2NyaXB0aW9uOlwiPHA+TnVtYmVyIG9mIHJldHVybmVkIGZyZXF1ZW5jeSBncm91cHM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5GRlRcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxsb2dBdmVyYWdlczp7bmFtZTpcImxvZ0F2ZXJhZ2VzXCIscGFyYW1zOlt7bmFtZTpcIm9jdGF2ZUJhbmRzXCIsZGVzY3JpcHRpb246XCI8cD5BcnJheSBvZiBPY3RhdmUgQmFuZHMgb2JqZWN0cyBmb3IgZ3JvdXBpbmc8L3A+XFxuXCIsdHlwZTpcIkFycmF5XCJ9XSxjbGFzczpcInA1LkZGVFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGdldE9jdGF2ZUJhbmRzOntuYW1lOlwiZ2V0T2N0YXZlQmFuZHNcIixwYXJhbXM6W3tuYW1lOlwiTlwiLGRlc2NyaXB0aW9uOlwiPHA+U3BlY2lmaWVzIHRoZSAxL04gdHlwZSBvZiBnZW5lcmF0ZWQgb2N0YXZlIGJhbmRzPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJmQ3RyMFwiLGRlc2NyaXB0aW9uOlwiPHA+TWluaW11bSBjZW50cmFsIGZyZXF1ZW5jeSBmb3IgdGhlIGxvd2VzdCBiYW5kPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuRkZUXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuU2lnbmFsXCI6e2ZhZGU6e25hbWU6XCJmYWRlXCIscGFyYW1zOlt7bmFtZTpcInZhbHVlXCIsZGVzY3JpcHRpb246XCI8cD5WYWx1ZSB0byBzZXQgdGhpcyBzaWduYWw8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD5MZW5ndGggb2YgZmFkZSwgaW4gc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlNpZ25hbFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNldElucHV0OntuYW1lOlwic2V0SW5wdXRcIixwYXJhbXM6W3tuYW1lOlwiaW5wdXRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwicDUuU2lnbmFsXCIsbW9kdWxlOlwicDUuc291bmRcIn0sYWRkOntuYW1lOlwiYWRkXCIscGFyYW1zOlt7bmFtZTpcIm51bWJlclwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5TaWduYWxcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxtdWx0OntuYW1lOlwibXVsdFwiLHBhcmFtczpbe25hbWU6XCJudW1iZXJcIixkZXNjcmlwdGlvbjpcIjxwPnRvIG11bHRpcGx5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuU2lnbmFsXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2NhbGU6e25hbWU6XCJzY2FsZVwiLHBhcmFtczpbe25hbWU6XCJudW1iZXJcIixkZXNjcmlwdGlvbjpcIjxwPnRvIG11bHRpcGx5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJpbk1pblwiLGRlc2NyaXB0aW9uOlwiPHA+aW5wdXQgcmFuZ2UgbWludW11bTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwiaW5NYXhcIixkZXNjcmlwdGlvbjpcIjxwPmlucHV0IHJhbmdlIG1heGltdW08L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIm91dE1pblwiLGRlc2NyaXB0aW9uOlwiPHA+aW5wdXQgcmFuZ2UgbWludW11bTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwib3V0TWF4XCIsZGVzY3JpcHRpb246XCI8cD5pbnB1dCByYW5nZSBtYXhpbXVtPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuU2lnbmFsXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuRW52ZWxvcGVcIjp7YXR0YWNrVGltZTp7bmFtZTpcImF0dGFja1RpbWVcIixjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sYXR0YWNrTGV2ZWw6e25hbWU6XCJhdHRhY2tMZXZlbFwiLGNsYXNzOlwicDUuRW52ZWxvcGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkZWNheVRpbWU6e25hbWU6XCJkZWNheVRpbWVcIixjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGVjYXlMZXZlbDp7bmFtZTpcImRlY2F5TGV2ZWxcIixjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0scmVsZWFzZVRpbWU6e25hbWU6XCJyZWxlYXNlVGltZVwiLGNsYXNzOlwicDUuRW52ZWxvcGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxyZWxlYXNlTGV2ZWw6e25hbWU6XCJyZWxlYXNlTGV2ZWxcIixjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0OntuYW1lOlwic2V0XCIscGFyYW1zOlt7bmFtZTpcImF0dGFja1RpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMpIGJlZm9yZSBsZXZlbFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFjaGVzIGF0dGFja0xldmVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJhdHRhY2tMZXZlbFwiLGRlc2NyaXB0aW9uOlwiPHA+VHlwaWNhbGx5IGFuIGFtcGxpdHVkZSBiZXR3ZWVuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuMCBhbmQgMS4wPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkZWNheVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImRlY2F5TGV2ZWxcIixkZXNjcmlwdGlvbjpcIjxwPkFtcGxpdHVkZSAoSW4gYSBzdGFuZGFyZCBBRFNSIGVudmVsb3BlLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWNheUxldmVsID0gc3VzdGFpbkxldmVsKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmVsZWFzZVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlJlbGVhc2UgVGltZSAoaW4gc2Vjb25kcyk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJlbGVhc2VMZXZlbFwiLGRlc2NyaXB0aW9uOlwiPHA+QW1wbGl0dWRlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuRW52ZWxvcGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRBRFNSOntuYW1lOlwic2V0QURTUlwiLHBhcmFtczpbe25hbWU6XCJhdHRhY2tUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIChpbiBzZWNvbmRzIGJlZm9yZSBlbnZlbG9wZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgQXR0YWNrIExldmVsPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJkZWNheVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMpIGJlZm9yZSBlbnZlbG9wZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWNoZXMgRGVjYXkvU3VzdGFpbiBMZXZlbDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic3VzUmF0aW9cIixkZXNjcmlwdGlvbjpcIjxwPlJhdGlvIGJldHdlZW4gYXR0YWNrTGV2ZWwgYW5kIHJlbGVhc2VMZXZlbCwgb24gYSBzY2FsZSBmcm9tIDAgdG8gMSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZSAxLjAgPSBhdHRhY2tMZXZlbCwgMC4wID0gcmVsZWFzZUxldmVsLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoZSBzdXNSYXRpbyBkZXRlcm1pbmVzIHRoZSBkZWNheUxldmVsIGFuZCB0aGUgbGV2ZWwgYXQgd2hpY2ggdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VzdGFpbiBwb3J0aW9uIG9mIHRoZSBlbnZlbG9wZSB3aWxsIHN1c3RhaW4uXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9yIGV4YW1wbGUsIGlmIGF0dGFja0xldmVsIGlzIDAuNCwgcmVsZWFzZUxldmVsIGlzIDAsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIHN1c0FtdCBpcyAwLjUsIHRoZSBkZWNheUxldmVsIHdvdWxkIGJlIDAuMi4gSWYgYXR0YWNrTGV2ZWwgaXNcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmNyZWFzZWQgdG8gMS4wICh1c2luZyA8Y29kZT5zZXRSYW5nZTwvY29kZT4pLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW4gZGVjYXlMZXZlbCB3b3VsZCBpbmNyZWFzZSBwcm9wb3J0aW9uYWxseSwgdG8gYmVjb21lIDAuNS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJlbGVhc2VUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5UaW1lIGluIHNlY29uZHMgZnJvbSBub3cgKGRlZmF1bHRzIHRvIDApPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuRW52ZWxvcGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRSYW5nZTp7bmFtZTpcInNldFJhbmdlXCIscGFyYW1zOlt7bmFtZTpcImFMZXZlbFwiLGRlc2NyaXB0aW9uOlwiPHA+YXR0YWNrIGxldmVsIChkZWZhdWx0cyB0byAxKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwickxldmVsXCIsZGVzY3JpcHRpb246XCI8cD5yZWxlYXNlIGxldmVsIChkZWZhdWx0cyB0byAwKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0SW5wdXQ6e25hbWU6XCJzZXRJbnB1dFwiLHBhcmFtczpbe25hbWU6XCJpbnB1dHNcIixkZXNjcmlwdGlvbjpcIjxwPkEgcDUuc291bmQgb2JqZWN0IG9yXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2ViIEF1ZGlvIFBhcmFtLjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCIsb3B0aW9uYWw6ITAsbXVsdGlwbGU6ITB9XSxjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0RXhwOntuYW1lOlwic2V0RXhwXCIscGFyYW1zOlt7bmFtZTpcImlzRXhwXCIsZGVzY3JpcHRpb246XCI8cD50cnVlIGlzIGV4cG9uZW50aWFsLCBmYWxzZSBpcyBsaW5lYXI8L3A+XFxuXCIsdHlwZTpcIkJvb2xlYW5cIn1dLGNsYXNzOlwicDUuRW52ZWxvcGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwbGF5OntuYW1lOlwicGxheVwiLHBhcmFtczpbe25hbWU6XCJ1bml0XCIsZGVzY3JpcHRpb246XCI8cD5BIHA1LnNvdW5kIG9iamVjdCBvclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdlYiBBdWRpbyBQYXJhbS48L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifSx7bmFtZTpcInN0YXJ0VGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+dGltZSBmcm9tIG5vdyAoaW4gc2Vjb25kcykgYXQgd2hpY2ggdG8gcGxheTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwic3VzdGFpblRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPnRpbWUgdG8gc3VzdGFpbiBiZWZvcmUgcmVsZWFzaW5nIHRoZSBlbnZlbG9wZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sdHJpZ2dlckF0dGFjazp7bmFtZTpcInRyaWdnZXJBdHRhY2tcIixwYXJhbXM6W3tuYW1lOlwidW5pdFwiLGRlc2NyaXB0aW9uOlwiPHA+cDUuc291bmQgT2JqZWN0IG9yIFdlYiBBdWRpbyBQYXJhbTwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9LHtuYW1lOlwic2Vjb25kc0Zyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnRpbWUgZnJvbSBub3cgKGluIHNlY29uZHMpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuRW52ZWxvcGVcIixtb2R1bGU6XCJwNS5zb3VuZFwifSx0cmlnZ2VyUmVsZWFzZTp7bmFtZTpcInRyaWdnZXJSZWxlYXNlXCIscGFyYW1zOlt7bmFtZTpcInVuaXRcIixkZXNjcmlwdGlvbjpcIjxwPnA1LnNvdW5kIE9iamVjdCBvciBXZWIgQXVkaW8gUGFyYW08L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifSx7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD50aW1lIHRvIHRyaWdnZXIgdGhlIHJlbGVhc2U8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5FbnZlbG9wZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJhbXA6e25hbWU6XCJyYW1wXCIscGFyYW1zOlt7bmFtZTpcInVuaXRcIixkZXNjcmlwdGlvbjpcIjxwPnA1LnNvdW5kIE9iamVjdCBvciBXZWIgQXVkaW8gUGFyYW08L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifSx7bmFtZTpcInNlY29uZHNGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD5XaGVuIHRvIHRyaWdnZXIgdGhlIHJhbXA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInZcIixkZXNjcmlwdGlvbjpcIjxwPlRhcmdldCB2YWx1ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidjJcIixkZXNjcmlwdGlvbjpcIjxwPlNlY29uZCB0YXJnZXQgdmFsdWUgKG9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sYWRkOntuYW1lOlwiYWRkXCIscGFyYW1zOlt7bmFtZTpcIm51bWJlclwiLGRlc2NyaXB0aW9uOlwiPHA+Q29uc3RhbnQgbnVtYmVyIHRvIGFkZDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbXVsdDp7bmFtZTpcIm11bHRcIixwYXJhbXM6W3tuYW1lOlwibnVtYmVyXCIsZGVzY3JpcHRpb246XCI8cD5Db25zdGFudCBudW1iZXIgdG8gbXVsdGlwbHk8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5FbnZlbG9wZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNjYWxlOntuYW1lOlwic2NhbGVcIixwYXJhbXM6W3tuYW1lOlwiaW5NaW5cIixkZXNjcmlwdGlvbjpcIjxwPmlucHV0IHJhbmdlIG1pbnVtdW08L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcImluTWF4XCIsZGVzY3JpcHRpb246XCI8cD5pbnB1dCByYW5nZSBtYXhpbXVtPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJvdXRNaW5cIixkZXNjcmlwdGlvbjpcIjxwPmlucHV0IHJhbmdlIG1pbnVtdW08L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcIm91dE1heFwiLGRlc2NyaXB0aW9uOlwiPHA+aW5wdXQgcmFuZ2UgbWF4aW11bTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkVudmVsb3BlXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuUHVsc2VcIjp7d2lkdGg6e25hbWU6XCJ3aWR0aFwiLHBhcmFtczpbe25hbWU6XCJ3aWR0aFwiLGRlc2NyaXB0aW9uOlwiPHA+V2lkdGggYmV0d2VlbiB0aGUgcHVsc2VzICgwIHRvIDEuMCxcXG4gICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRzIHRvIDApPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuUHVsc2VcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5Ob2lzZVwiOntzZXRUeXBlOntuYW1lOlwic2V0VHlwZVwiLHBhcmFtczpbe25hbWU6XCJ0eXBlXCIsZGVzY3JpcHRpb246XCI8cD4nd2hpdGUnLCAncGluaycgb3IgJ2Jyb3duJzwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1Lk5vaXNlXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuQXVkaW9JblwiOntpbnB1dDp7bmFtZTpcImlucHV0XCIsY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sb3V0cHV0OntuYW1lOlwib3V0cHV0XCIsY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3RyZWFtOntuYW1lOlwic3RyZWFtXCIsY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbWVkaWFTdHJlYW06e25hbWU6XCJtZWRpYVN0cmVhbVwiLGNsYXNzOlwicDUuQXVkaW9JblwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGN1cnJlbnRTb3VyY2U6e25hbWU6XCJjdXJyZW50U291cmNlXCIsY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZW5hYmxlZDp7bmFtZTpcImVuYWJsZWRcIixjbGFzczpcInA1LkF1ZGlvSW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhbXBsaXR1ZGU6e25hbWU6XCJhbXBsaXR1ZGVcIixjbGFzczpcInA1LkF1ZGlvSW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzdGFydDp7bmFtZTpcInN0YXJ0XCIscGFyYW1zOlt7bmFtZTpcInN1Y2Nlc3NDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+TmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgb25cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzcy48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+TmFtZSBvZiBhIGZ1bmN0aW9uIHRvIGNhbGwgaWZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlcmUgd2FzIGFuIGVycm9yLiBGb3IgZXhhbXBsZSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc29tZSBicm93c2VycyBkbyBub3Qgc3VwcG9ydFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRVc2VyTWVkaWEuPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3RvcDp7bmFtZTpcInN0b3BcIixjbGFzczpcInA1LkF1ZGlvSW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxjb25uZWN0OntuYW1lOlwiY29ubmVjdFwiLHBhcmFtczpbe25hbWU6XCJ1bml0XCIsZGVzY3JpcHRpb246XCI8cD5BbiBvYmplY3QgdGhhdCBhY2NlcHRzIGF1ZGlvIGlucHV0LFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2ggYXMgYW4gRkZUPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQXVkaW9JblwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGRpc2Nvbm5lY3Q6e25hbWU6XCJkaXNjb25uZWN0XCIsY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZ2V0TGV2ZWw6e25hbWU6XCJnZXRMZXZlbFwiLHBhcmFtczpbe25hbWU6XCJzbW9vdGhpbmdcIixkZXNjcmlwdGlvbjpcIjxwPlNtb290aGluZyBpcyAwLjAgYnkgZGVmYXVsdC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNtb290aHMgdmFsdWVzIGJhc2VkIG9uIHByZXZpb3VzIHZhbHVlcy48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5BdWRpb0luXCIsbW9kdWxlOlwicDUuc291bmRcIn0sYW1wOntuYW1lOlwiYW1wXCIscGFyYW1zOlt7bmFtZTpcInZvbFwiLGRlc2NyaXB0aW9uOlwiPHA+YmV0d2VlbiAwIGFuZCAxLjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPnJhbXAgdGltZSAob3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQXVkaW9JblwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGdldFNvdXJjZXM6e25hbWU6XCJnZXRTb3VyY2VzXCIscGFyYW1zOlt7bmFtZTpcInN1Y2Nlc3NDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+VGhpcyBjYWxsYmFjayBmdW5jdGlvbiBoYW5kbGVzIHRoZSBzb3VyY2VzIHdoZW4gdGhleVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXZlIGJlZW4gZW51bWVyYXRlZC4gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2VpdmVzIHRoZSBkZXZpY2VMaXN0IGFycmF5IGFzIGl0cyBvbmx5IGFyZ3VtZW50PC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImVycm9yQ2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPlRoaXMgb3B0aW9uYWwgY2FsbGJhY2sgcmVjZWl2ZXMgdGhlIGVycm9yXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlIGFzIGl0cyBhcmd1bWVudC48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkF1ZGlvSW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXRTb3VyY2U6e25hbWU6XCJzZXRTb3VyY2VcIixwYXJhbXM6W3tuYW1lOlwibnVtXCIsZGVzY3JpcHRpb246XCI8cD5wb3NpdGlvbiBvZiBpbnB1dCBzb3VyY2UgaW4gdGhlIGFycmF5PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuQXVkaW9JblwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LkVRXCI6e2JhbmRzOntuYW1lOlwiYmFuZHNcIixjbGFzczpcInA1LkVRXCIsbW9kdWxlOlwicDUuc291bmRcIn0scHJvY2Vzczp7bmFtZTpcInByb2Nlc3NcIixwYXJhbXM6W3tuYW1lOlwic3JjXCIsZGVzY3JpcHRpb246XCI8cD5BdWRpbyBzb3VyY2U8L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifV0sY2xhc3M6XCJwNS5FUVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LlBhbm5lcjNEXCI6e3Bhbm5lcjp7bmFtZTpcInBhbm5lclwiLGNsYXNzOlwicDUuUGFubmVyM0RcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwcm9jZXNzOntuYW1lOlwicHJvY2Vzc1wiLHBhcmFtczpbe25hbWU6XCJzcmNcIixkZXNjcmlwdGlvbjpcIjxwPklucHV0IHNvdXJjZTwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9XSxjbGFzczpcInA1LlBhbm5lcjNEXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0OntuYW1lOlwic2V0XCIscGFyYW1zOlt7bmFtZTpcInhWYWxcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ5VmFsXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwielZhbFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRpbWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuUGFubmVyM0RcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwb3NpdGlvblg6e25hbWU6XCJwb3NpdGlvblhcIixjbGFzczpcInA1LlBhbm5lcjNEXCIsbW9kdWxlOlwicDUuc291bmRcIn0scG9zaXRpb25ZOntuYW1lOlwicG9zaXRpb25ZXCIsY2xhc3M6XCJwNS5QYW5uZXIzRFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHBvc2l0aW9uWjp7bmFtZTpcInBvc2l0aW9uWlwiLGNsYXNzOlwicDUuUGFubmVyM0RcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxvcmllbnQ6e25hbWU6XCJvcmllbnRcIixwYXJhbXM6W3tuYW1lOlwieFZhbFwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInlWYWxcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ6VmFsXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwidGltZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5QYW5uZXIzRFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG9yaWVudFg6e25hbWU6XCJvcmllbnRYXCIsY2xhc3M6XCJwNS5QYW5uZXIzRFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG9yaWVudFk6e25hbWU6XCJvcmllbnRZXCIsY2xhc3M6XCJwNS5QYW5uZXIzRFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG9yaWVudFo6e25hbWU6XCJvcmllbnRaXCIsY2xhc3M6XCJwNS5QYW5uZXIzRFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNldEZhbGxvZmY6e25hbWU6XCJzZXRGYWxsb2ZmXCIscGFyYW1zOlt7bmFtZTpcIm1heERpc3RhbmNlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwicm9sbG9mZkZhY3RvclwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5QYW5uZXIzRFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG1heERpc3Q6e25hbWU6XCJtYXhEaXN0XCIscGFyYW1zOlt7bmFtZTpcIm1heERpc3RhbmNlXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LlBhbm5lcjNEXCIsbW9kdWxlOlwicDUuc291bmRcIn0scm9sbG9mOntuYW1lOlwicm9sbG9mXCIscGFyYW1zOlt7bmFtZTpcInJvbGxvZmZGYWN0b3JcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuUGFubmVyM0RcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5EZWxheVwiOntsZWZ0RGVsYXk6e25hbWU6XCJsZWZ0RGVsYXlcIixjbGFzczpcInA1LkRlbGF5XCIsbW9kdWxlOlwicDUuc291bmRcIn0scmlnaHREZWxheTp7bmFtZTpcInJpZ2h0RGVsYXlcIixjbGFzczpcInA1LkRlbGF5XCIsbW9kdWxlOlwicDUuc291bmRcIn0scHJvY2Vzczp7bmFtZTpcInByb2Nlc3NcIixwYXJhbXM6W3tuYW1lOlwiU2lnbmFsXCIsZGVzY3JpcHRpb246XCI8cD5BbiBvYmplY3QgdGhhdCBvdXRwdXRzIGF1ZGlvPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIn0se25hbWU6XCJkZWxheVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMpIG9mIHRoZSBkZWxheS9lY2hvLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU29tZSBicm93c2VycyBsaW1pdCBkZWxheVRpbWUgdG9cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgc2Vjb25kLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZmVlZGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPnNlbmRzIHRoZSBkZWxheSBiYWNrIHRocm91Z2ggaXRzZWxmXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbiBhIGxvb3AgdGhhdCBkZWNyZWFzZXMgaW4gdm9sdW1lXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYWNoIHRpbWUuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJsb3dQYXNzXCIsZGVzY3JpcHRpb246XCI8cD5DdXRvZmYgZnJlcXVlbmN5LiBPbmx5IGZyZXF1ZW5jaWVzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZWxvdyB0aGUgbG93UGFzcyB3aWxsIGJlIHBhcnQgb2YgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxheS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5EZWxheVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGRlbGF5VGltZTp7bmFtZTpcImRlbGF5VGltZVwiLHBhcmFtczpbe25hbWU6XCJkZWxheVRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMpIG9mIHRoZSBkZWxheTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkRlbGF5XCIsbW9kdWxlOlwicDUuc291bmRcIn0sZmVlZGJhY2s6e25hbWU6XCJmZWVkYmFja1wiLHBhcmFtczpbe25hbWU6XCJmZWVkYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+MC4wIHRvIDEuMCwgb3IgYW4gb2JqZWN0IHN1Y2ggYXMgYW5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9zY2lsbGF0b3IgdGhhdCBjYW4gYmUgdXNlZCB0b1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kdWxhdGUgdGhpcyBwYXJhbTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfE9iamVjdFwifV0sY2xhc3M6XCJwNS5EZWxheVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGZpbHRlcjp7bmFtZTpcImZpbHRlclwiLHBhcmFtczpbe25hbWU6XCJjdXRvZmZGcmVxXCIsZGVzY3JpcHRpb246XCI8cD5BIGxvd3Bhc3MgZmlsdGVyIHdpbGwgY3V0IG9mZiBhbnlcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJlcXVlbmNpZXMgaGlnaGVyIHRoYW4gdGhlIGZpbHRlciBmcmVxdWVuY3kuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJ8T2JqZWN0XCJ9LHtuYW1lOlwicmVzXCIsZGVzY3JpcHRpb246XCI8cD5SZXNvbmFuY2Ugb2YgdGhlIGZpbHRlciBmcmVxdWVuY3lcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3V0b2ZmLCBvciBhbiBvYmplY3QgKGkuZS4gYSBwNS5Pc2NpbGxhdG9yKVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGF0IGNhbiBiZSB1c2VkIHRvIG1vZHVsYXRlIHRoaXMgcGFyYW1ldGVyLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIaWdoIG51bWJlcnMgKGkuZS4gMTUpIHdpbGwgcHJvZHVjZSBhIHJlc29uYW5jZSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG93IG51bWJlcnMgKGkuZS4gLjIpIHdpbGwgcHJvZHVjZSBhIHNsb3BlLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyfE9iamVjdFwifV0sY2xhc3M6XCJwNS5EZWxheVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNldFR5cGU6e25hbWU6XCJzZXRUeXBlXCIscGFyYW1zOlt7bmFtZTpcInR5cGVcIixkZXNjcmlwdGlvbjpcIjxwPidwaW5nUG9uZycgKDEpIG9yICdkZWZhdWx0JyAoMCk8L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xOdW1iZXJcIn1dLGNsYXNzOlwicDUuRGVsYXlcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhbXA6e25hbWU6XCJhbXBcIixwYXJhbXM6W3tuYW1lOlwidm9sdW1lXCIsZGVzY3JpcHRpb246XCI8cD5hbXBsaXR1ZGUgYmV0d2VlbiAwIGFuZCAxLjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJhbXBUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5jcmVhdGUgYSBmYWRlIHRoYXQgbGFzdHMgcmFtcFRpbWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRpbWVGcm9tTm93XCIsZGVzY3JpcHRpb246XCI8cD5zY2hlZHVsZSB0aGlzIGV2ZW50IHRvIGhhcHBlblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5EZWxheVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGNvbm5lY3Q6e25hbWU6XCJjb25uZWN0XCIscGFyYW1zOlt7bmFtZTpcInVuaXRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwicDUuRGVsYXlcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkaXNjb25uZWN0OntuYW1lOlwiZGlzY29ubmVjdFwiLGNsYXNzOlwicDUuRGVsYXlcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5SZXZlcmJcIjp7cHJvY2Vzczp7bmFtZTpcInByb2Nlc3NcIixwYXJhbXM6W3tuYW1lOlwic3JjXCIsZGVzY3JpcHRpb246XCI8cD5wNS5zb3VuZCAvIFdlYiBBdWRpbyBvYmplY3Qgd2l0aCBhIHNvdW5kXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC48L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifSx7bmFtZTpcInNlY29uZHNcIixkZXNjcmlwdGlvbjpcIjxwPkR1cmF0aW9uIG9mIHRoZSByZXZlcmIsIGluIHNlY29uZHMuXFxuICAgICAgICAgICAgICAgICAgICAgICAgIE1pbjogMCwgTWF4OiAxMC4gRGVmYXVsdHMgdG8gMy48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcImRlY2F5UmF0ZVwiLGRlc2NyaXB0aW9uOlwiPHA+UGVyY2VudGFnZSBvZiBkZWNheSB3aXRoIGVhY2ggZWNoby5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgIE1pbjogMCwgTWF4OiAxMDAuIERlZmF1bHRzIHRvIDIuPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyZXZlcnNlXCIsZGVzY3JpcHRpb246XCI8cD5QbGF5IHRoZSByZXZlcmIgYmFja3dhcmRzIG9yIGZvcndhcmRzLjwvcD5cXG5cIix0eXBlOlwiQm9vbGVhblwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5SZXZlcmJcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwic2Vjb25kc1wiLGRlc2NyaXB0aW9uOlwiPHA+RHVyYXRpb24gb2YgdGhlIHJldmVyYiwgaW4gc2Vjb25kcy5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgTWluOiAwLCBNYXg6IDEwLiBEZWZhdWx0cyB0byAzLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwiZGVjYXlSYXRlXCIsZGVzY3JpcHRpb246XCI8cD5QZXJjZW50YWdlIG9mIGRlY2F5IHdpdGggZWFjaCBlY2hvLlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgTWluOiAwLCBNYXg6IDEwMC4gRGVmYXVsdHMgdG8gMi48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInJldmVyc2VcIixkZXNjcmlwdGlvbjpcIjxwPlBsYXkgdGhlIHJldmVyYiBiYWNrd2FyZHMgb3IgZm9yd2FyZHMuPC9wPlxcblwiLHR5cGU6XCJCb29sZWFuXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlJldmVyYlwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGFtcDp7bmFtZTpcImFtcFwiLHBhcmFtczpbe25hbWU6XCJ2b2x1bWVcIixkZXNjcmlwdGlvbjpcIjxwPmFtcGxpdHVkZSBiZXR3ZWVuIDAgYW5kIDEuMDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPmNyZWF0ZSBhIGZhZGUgdGhhdCBsYXN0cyByYW1wVGltZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlJldmVyYlwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGNvbm5lY3Q6e25hbWU6XCJjb25uZWN0XCIscGFyYW1zOlt7bmFtZTpcInVuaXRcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJPYmplY3RcIn1dLGNsYXNzOlwicDUuUmV2ZXJiXCIsbW9kdWxlOlwicDUuc291bmRcIn0sZGlzY29ubmVjdDp7bmFtZTpcImRpc2Nvbm5lY3RcIixjbGFzczpcInA1LlJldmVyYlwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LkNvbnZvbHZlclwiOntjb252b2x2ZXJOb2RlOntuYW1lOlwiY29udm9sdmVyTm9kZVwiLGNsYXNzOlwicDUuQ29udm9sdmVyXCIsbW9kdWxlOlwicDUuc291bmRcIn0scHJvY2Vzczp7bmFtZTpcInByb2Nlc3NcIixwYXJhbXM6W3tuYW1lOlwic3JjXCIsZGVzY3JpcHRpb246XCI8cD5wNS5zb3VuZCAvIFdlYiBBdWRpbyBvYmplY3Qgd2l0aCBhIHNvdW5kXFxuICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC48L3A+XFxuXCIsdHlwZTpcIk9iamVjdFwifV0sY2xhc3M6XCJwNS5Db252b2x2ZXJcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxpbXB1bHNlczp7bmFtZTpcImltcHVsc2VzXCIsY2xhc3M6XCJwNS5Db252b2x2ZXJcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhZGRJbXB1bHNlOntuYW1lOlwiYWRkSW1wdWxzZVwiLHBhcmFtczpbe25hbWU6XCJwYXRoXCIsZGVzY3JpcHRpb246XCI8cD5wYXRoIHRvIGEgc291bmQgZmlsZTwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCJ9LHtuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPmZ1bmN0aW9uIChvcHRpb25hbCk8L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCJ9LHtuYW1lOlwiZXJyb3JDYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gKG9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIn1dLGNsYXNzOlwicDUuQ29udm9sdmVyXCIsbW9kdWxlOlwicDUuc291bmRcIn0scmVzZXRJbXB1bHNlOntuYW1lOlwicmVzZXRJbXB1bHNlXCIscGFyYW1zOlt7bmFtZTpcInBhdGhcIixkZXNjcmlwdGlvbjpcIjxwPnBhdGggdG8gYSBzb3VuZCBmaWxlPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+ZnVuY3Rpb24gKG9wdGlvbmFsKTwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIn0se25hbWU6XCJlcnJvckNhbGxiYWNrXCIsZGVzY3JpcHRpb246XCI8cD5mdW5jdGlvbiAob3B0aW9uYWwpPC9wPlxcblwiLHR5cGU6XCJGdW5jdGlvblwifV0sY2xhc3M6XCJwNS5Db252b2x2ZXJcIixtb2R1bGU6XCJwNS5zb3VuZFwifSx0b2dnbGVJbXB1bHNlOntuYW1lOlwidG9nZ2xlSW1wdWxzZVwiLHBhcmFtczpbe25hbWU6XCJpZFwiLGRlc2NyaXB0aW9uOlwiPHA+SWRlbnRpZnkgdGhlIGltcHVsc2UgYnkgaXRzIG9yaWdpbmFsIGZpbGVuYW1lXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAoU3RyaW5nKSwgb3IgYnkgaXRzIHBvc2l0aW9uIGluIHRoZVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvZGU+LmltcHVsc2VzPC9jb2RlPiBBcnJheSAoTnVtYmVyKS48L3A+XFxuXCIsdHlwZTpcIlN0cmluZ3xOdW1iZXJcIn1dLGNsYXNzOlwicDUuQ29udm9sdmVyXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuUGhyYXNlXCI6e3NlcXVlbmNlOntuYW1lOlwic2VxdWVuY2VcIixjbGFzczpcInA1LlBocmFzZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LlBhcnRcIjp7c2V0QlBNOntuYW1lOlwic2V0QlBNXCIscGFyYW1zOlt7bmFtZTpcIkJQTVwiLGRlc2NyaXB0aW9uOlwiPHA+QmVhdHMgUGVyIE1pbnV0ZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPlNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5QYXJ0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sZ2V0QlBNOntuYW1lOlwiZ2V0QlBNXCIsY2xhc3M6XCJwNS5QYXJ0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3RhcnQ6e25hbWU6XCJzdGFydFwiLHBhcmFtczpbe25hbWU6XCJ0aW1lXCIsZGVzY3JpcHRpb246XCI8cD5zZWNvbmRzIGZyb20gbm93PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuUGFydFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGxvb3A6e25hbWU6XCJsb29wXCIscGFyYW1zOlt7bmFtZTpcInRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPnNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5QYXJ0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sbm9Mb29wOntuYW1lOlwibm9Mb29wXCIsY2xhc3M6XCJwNS5QYXJ0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3RvcDp7bmFtZTpcInN0b3BcIixwYXJhbXM6W3tuYW1lOlwidGltZVwiLGRlc2NyaXB0aW9uOlwiPHA+c2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlBhcnRcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwYXVzZTp7bmFtZTpcInBhdXNlXCIscGFyYW1zOlt7bmFtZTpcInRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPnNlY29uZHMgZnJvbSBub3c8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifV0sY2xhc3M6XCJwNS5QYXJ0XCIsbW9kdWxlOlwicDUuc291bmRcIn0sYWRkUGhyYXNlOntuYW1lOlwiYWRkUGhyYXNlXCIscGFyYW1zOlt7bmFtZTpcInBocmFzZVwiLGRlc2NyaXB0aW9uOlwiPHA+cmVmZXJlbmNlIHRvIGEgcDUuUGhyYXNlPC9wPlxcblwiLHR5cGU6XCJwNS5QaHJhc2VcIn1dLGNsYXNzOlwicDUuUGFydFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJlbW92ZVBocmFzZTp7bmFtZTpcInJlbW92ZVBocmFzZVwiLHBhcmFtczpbe25hbWU6XCJwaHJhc2VOYW1lXCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiU3RyaW5nXCJ9XSxjbGFzczpcInA1LlBhcnRcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxnZXRQaHJhc2U6e25hbWU6XCJnZXRQaHJhc2VcIixwYXJhbXM6W3tuYW1lOlwicGhyYXNlTmFtZVwiLGRlc2NyaXB0aW9uOlwiXCIsdHlwZTpcIlN0cmluZ1wifV0sY2xhc3M6XCJwNS5QYXJ0XCIsbW9kdWxlOlwicDUuc291bmRcIn0scmVwbGFjZVNlcXVlbmNlOntuYW1lOlwicmVwbGFjZVNlcXVlbmNlXCIscGFyYW1zOlt7bmFtZTpcInBocmFzZU5hbWVcIixkZXNjcmlwdGlvbjpcIlwiLHR5cGU6XCJTdHJpbmdcIn0se25hbWU6XCJzZXF1ZW5jZVwiLGRlc2NyaXB0aW9uOlwiPHA+QXJyYXkgb2YgdmFsdWVzIHRvIHBhc3MgaW50byB0aGUgY2FsbGJhY2tcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0IGVhY2ggc3RlcCBvZiB0aGUgcGhyYXNlLjwvcD5cXG5cIix0eXBlOlwiQXJyYXlcIn1dLGNsYXNzOlwicDUuUGFydFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LG9uU3RlcDp7bmFtZTpcIm9uU3RlcFwiLHBhcmFtczpbe25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIG5hbWUgb2YgdGhlIGNhbGxiYWNrXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlvdSB3YW50IHRvIGZpcmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb24gZXZlcnkgYmVhdC90YXR1bS48L3A+XFxuXCIsdHlwZTpcIkZ1bmN0aW9uXCJ9XSxjbGFzczpcInA1LlBhcnRcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5TY29yZVwiOntzdGFydDp7bmFtZTpcInN0YXJ0XCIsY2xhc3M6XCJwNS5TY29yZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHN0b3A6e25hbWU6XCJzdG9wXCIsY2xhc3M6XCJwNS5TY29yZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHBhdXNlOntuYW1lOlwicGF1c2VcIixjbGFzczpcInA1LlNjb3JlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbG9vcDp7bmFtZTpcImxvb3BcIixjbGFzczpcInA1LlNjb3JlXCIsbW9kdWxlOlwicDUuc291bmRcIn0sbm9Mb29wOntuYW1lOlwibm9Mb29wXCIsY2xhc3M6XCJwNS5TY29yZVwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHNldEJQTTp7bmFtZTpcInNldEJQTVwiLHBhcmFtczpbe25hbWU6XCJCUE1cIixkZXNjcmlwdGlvbjpcIjxwPkJlYXRzIFBlciBNaW51dGU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInJhbXBUaW1lXCIsZGVzY3JpcHRpb246XCI8cD5TZWNvbmRzIGZyb20gbm93PC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn1dLGNsYXNzOlwicDUuU2NvcmVcIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5Tb3VuZExvb3BcIjp7bXVzaWNhbFRpbWVNb2RlOntuYW1lOlwibXVzaWNhbFRpbWVNb2RlXCIsY2xhc3M6XCJwNS5Tb3VuZExvb3BcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxtYXhJdGVyYXRpb25zOntuYW1lOlwibWF4SXRlcmF0aW9uc1wiLGNsYXNzOlwicDUuU291bmRMb29wXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3RhcnQ6e25hbWU6XCJzdGFydFwiLHBhcmFtczpbe25hbWU6XCJ0aW1lRnJvbU5vd1wiLGRlc2NyaXB0aW9uOlwiPHA+c2NoZWR1bGUgYSBzdGFydGluZyB0aW1lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRMb29wXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3RvcDp7bmFtZTpcInN0b3BcIixwYXJhbXM6W3tuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIGEgc3RvcHBpbmcgdGltZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LlNvdW5kTG9vcFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHBhdXNlOntuYW1lOlwicGF1c2VcIixwYXJhbXM6W3tuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIGEgcGF1c2luZyB0aW1lPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRMb29wXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc3luY2VkU3RhcnQ6e25hbWU6XCJzeW5jZWRTdGFydFwiLHBhcmFtczpbe25hbWU6XCJvdGhlckxvb3BcIixkZXNjcmlwdGlvbjpcIjxwPmEgcDUuU291bmRMb29wIHRvIHN5bmMgd2l0aDwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPlN0YXJ0IHRoZSBsb29wcyBpbiBzeW5jIGFmdGVyIHRpbWVGcm9tTm93IHNlY29uZHM8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Tb3VuZExvb3BcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxicG06e25hbWU6XCJicG1cIixjbGFzczpcInA1LlNvdW5kTG9vcFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHRpbWVTaWduYXR1cmU6e25hbWU6XCJ0aW1lU2lnbmF0dXJlXCIsY2xhc3M6XCJwNS5Tb3VuZExvb3BcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxpbnRlcnZhbDp7bmFtZTpcImludGVydmFsXCIsY2xhc3M6XCJwNS5Tb3VuZExvb3BcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxpdGVyYXRpb25zOntuYW1lOlwiaXRlcmF0aW9uc1wiLGNsYXNzOlwicDUuU291bmRMb29wXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuQ29tcHJlc3NvclwiOntjb21wcmVzc29yOntuYW1lOlwiY29tcHJlc3NvclwiLGNsYXNzOlwicDUuQ29tcHJlc3NvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHByb2Nlc3M6e25hbWU6XCJwcm9jZXNzXCIscGFyYW1zOlt7bmFtZTpcInNyY1wiLGRlc2NyaXB0aW9uOlwiPHA+U291bmQgc291cmNlIHRvIGJlIGNvbm5lY3RlZDwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9LHtuYW1lOlwiYXR0YWNrXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgYW1vdW50IG9mIHRpbWUgKGluIHNlY29uZHMpIHRvIHJlZHVjZSB0aGUgZ2FpbiBieSAxMGRCLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAuMDAzLCByYW5nZSAwIC0gMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwia25lZVwiLGRlc2NyaXB0aW9uOic8cD5BIGRlY2liZWwgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSByYW5nZSBhYm92ZSB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQgd2hlcmUgdGhlIGN1cnZlIHNtb290aGx5IHRyYW5zaXRpb25zIHRvIHRoZSBcInJhdGlvXCIgcG9ydGlvbi5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gMzAsIHJhbmdlIDAgLSA0MDwvcD5cXG4nLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyYXRpb1wiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGFtb3VudCBvZiBkQiBjaGFuZ2UgaW4gaW5wdXQgZm9yIGEgMSBkQiBjaGFuZ2UgaW4gb3V0cHV0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDEyLCByYW5nZSAxIC0gMjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRocmVzaG9sZFwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGRlY2liZWwgdmFsdWUgYWJvdmUgd2hpY2ggdGhlIGNvbXByZXNzaW9uIHdpbGwgc3RhcnQgdGFraW5nIGVmZmVjdFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAtMjQsIHJhbmdlIC0xMDAgLSAwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJyZWxlYXNlXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgYW1vdW50IG9mIHRpbWUgKGluIHNlY29uZHMpIHRvIGluY3JlYXNlIHRoZSBnYWluIGJ5IDEwZEJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gLjI1LCByYW5nZSAwIC0gMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkNvbXByZXNzb3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxzZXQ6e25hbWU6XCJzZXRcIixwYXJhbXM6W3tuYW1lOlwiYXR0YWNrXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgYW1vdW50IG9mIHRpbWUgKGluIHNlY29uZHMpIHRvIHJlZHVjZSB0aGUgZ2FpbiBieSAxMGRCLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAuMDAzLCByYW5nZSAwIC0gMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwia25lZVwiLGRlc2NyaXB0aW9uOic8cD5BIGRlY2liZWwgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSByYW5nZSBhYm92ZSB0aGVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQgd2hlcmUgdGhlIGN1cnZlIHNtb290aGx5IHRyYW5zaXRpb25zIHRvIHRoZSBcInJhdGlvXCIgcG9ydGlvbi5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gMzAsIHJhbmdlIDAgLSA0MDwvcD5cXG4nLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJyYXRpb1wiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGFtb3VudCBvZiBkQiBjaGFuZ2UgaW4gaW5wdXQgZm9yIGEgMSBkQiBjaGFuZ2UgaW4gb3V0cHV0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDEyLCByYW5nZSAxIC0gMjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwifSx7bmFtZTpcInRocmVzaG9sZFwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGRlY2liZWwgdmFsdWUgYWJvdmUgd2hpY2ggdGhlIGNvbXByZXNzaW9uIHdpbGwgc3RhcnQgdGFraW5nIGVmZmVjdFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAtMjQsIHJhbmdlIC0xMDAgLSAwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJyZWxlYXNlXCIsZGVzY3JpcHRpb246XCI8cD5UaGUgYW1vdW50IG9mIHRpbWUgKGluIHNlY29uZHMpIHRvIGluY3JlYXNlIHRoZSBnYWluIGJ5IDEwZEJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0ID0gLjI1LCByYW5nZSAwIC0gMTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9XSxjbGFzczpcInA1LkNvbXByZXNzb3JcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxhdHRhY2s6e25hbWU6XCJhdHRhY2tcIixwYXJhbXM6W3tuYW1lOlwiYXR0YWNrXCIsZGVzY3JpcHRpb246XCI8cD5BdHRhY2sgaXMgdGhlIGFtb3VudCBvZiB0aW1lIChpbiBzZWNvbmRzKSB0byByZWR1Y2UgdGhlIGdhaW4gYnkgMTBkQixcXG4gICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IC4wMDMsIHJhbmdlIDAgLSAxPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJ0aW1lXCIsZGVzY3JpcHRpb246XCI8cD5Bc3NpZ24gdGltZSB2YWx1ZSB0byBzY2hlZHVsZSB0aGUgY2hhbmdlIGluIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQ29tcHJlc3NvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGtuZWU6e25hbWU6XCJrbmVlXCIscGFyYW1zOlt7bmFtZTpcImtuZWVcIixkZXNjcmlwdGlvbjonPHA+QSBkZWNpYmVsIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgcmFuZ2UgYWJvdmUgdGhlXFxuICAgICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQgd2hlcmUgdGhlIGN1cnZlIHNtb290aGx5IHRyYW5zaXRpb25zIHRvIHRoZSBcInJhdGlvXCIgcG9ydGlvbi5cXG4gICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAzMCwgcmFuZ2UgMCAtIDQwPC9wPlxcbicsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPkFzc2lnbiB0aW1lIHZhbHVlIHRvIHNjaGVkdWxlIHRoZSBjaGFuZ2UgaW4gdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Db21wcmVzc29yXCIsbW9kdWxlOlwicDUuc291bmRcIn0scmF0aW86e25hbWU6XCJyYXRpb1wiLHBhcmFtczpbe25hbWU6XCJyYXRpb1wiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGFtb3VudCBvZiBkQiBjaGFuZ2UgaW4gaW5wdXQgZm9yIGEgMSBkQiBjaGFuZ2UgaW4gb3V0cHV0XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdCA9IDEyLCByYW5nZSAxIC0gMjA8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfSx7bmFtZTpcInRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPkFzc2lnbiB0aW1lIHZhbHVlIHRvIHNjaGVkdWxlIHRoZSBjaGFuZ2UgaW4gdmFsdWU8L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwfV0sY2xhc3M6XCJwNS5Db21wcmVzc29yXCIsbW9kdWxlOlwicDUuc291bmRcIn0sdGhyZXNob2xkOntuYW1lOlwidGhyZXNob2xkXCIscGFyYW1zOlt7bmFtZTpcInRocmVzaG9sZFwiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIGRlY2liZWwgdmFsdWUgYWJvdmUgd2hpY2ggdGhlIGNvbXByZXNzaW9uIHdpbGwgc3RhcnQgdGFraW5nIGVmZmVjdFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAtMjQsIHJhbmdlIC0xMDAgLSAwPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ0aW1lXCIsZGVzY3JpcHRpb246XCI8cD5Bc3NpZ24gdGltZSB2YWx1ZSB0byBzY2hlZHVsZSB0aGUgY2hhbmdlIGluIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQ29tcHJlc3NvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJlbGVhc2U6e25hbWU6XCJyZWxlYXNlXCIscGFyYW1zOlt7bmFtZTpcInJlbGVhc2VcIixkZXNjcmlwdGlvbjpcIjxwPlRoZSBhbW91bnQgb2YgdGltZSAoaW4gc2Vjb25kcykgdG8gaW5jcmVhc2UgdGhlIGdhaW4gYnkgMTBkQlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQgPSAuMjUsIHJhbmdlIDAgLSAxPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIn0se25hbWU6XCJ0aW1lXCIsZGVzY3JpcHRpb246XCI8cD5Bc3NpZ24gdGltZSB2YWx1ZSB0byBzY2hlZHVsZSB0aGUgY2hhbmdlIGluIHZhbHVlPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuQ29tcHJlc3NvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJlZHVjdGlvbjp7bmFtZTpcInJlZHVjdGlvblwiLGNsYXNzOlwicDUuQ29tcHJlc3NvclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LlNvdW5kUmVjb3JkZXJcIjp7c2V0SW5wdXQ6e25hbWU6XCJzZXRJbnB1dFwiLHBhcmFtczpbe25hbWU6XCJ1bml0XCIsZGVzY3JpcHRpb246XCI8cD5wNS5zb3VuZCBvYmplY3Qgb3IgYSB3ZWIgYXVkaW8gdW5pdFxcbiAgICAgICAgICAgICAgICAgICAgICAgdGhhdCBvdXRwdXRzIHNvdW5kPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRSZWNvcmRlclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHJlY29yZDp7bmFtZTpcInJlY29yZFwiLHBhcmFtczpbe25hbWU6XCJzb3VuZEZpbGVcIixkZXNjcmlwdGlvbjpcIjxwPnA1LlNvdW5kRmlsZTwvcD5cXG5cIix0eXBlOlwicDUuU291bmRGaWxlXCJ9LHtuYW1lOlwiZHVyYXRpb25cIixkZXNjcmlwdGlvbjpcIjxwPlRpbWUgKGluIHNlY29uZHMpPC9wPlxcblwiLHR5cGU6XCJOdW1iZXJcIixvcHRpb25hbDohMH0se25hbWU6XCJjYWxsYmFja1wiLGRlc2NyaXB0aW9uOlwiPHA+VGhlIG5hbWUgb2YgYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmVcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsZWQgb25jZSB0aGUgcmVjb3JkaW5nIGNvbXBsZXRlczwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuU291bmRSZWNvcmRlclwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHN0b3A6e25hbWU6XCJzdG9wXCIsY2xhc3M6XCJwNS5Tb3VuZFJlY29yZGVyXCIsbW9kdWxlOlwicDUuc291bmRcIn19LFwicDUuUGVha0RldGVjdFwiOntpc0RldGVjdGVkOntuYW1lOlwiaXNEZXRlY3RlZFwiLGNsYXNzOlwicDUuUGVha0RldGVjdFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LHVwZGF0ZTp7bmFtZTpcInVwZGF0ZVwiLHBhcmFtczpbe25hbWU6XCJmZnRPYmplY3RcIixkZXNjcmlwdGlvbjpcIjxwPkEgcDUuRkZUIG9iamVjdDwvcD5cXG5cIix0eXBlOlwicDUuRkZUXCJ9XSxjbGFzczpcInA1LlBlYWtEZXRlY3RcIixtb2R1bGU6XCJwNS5zb3VuZFwifSxvblBlYWs6e25hbWU6XCJvblBlYWtcIixwYXJhbXM6W3tuYW1lOlwiY2FsbGJhY2tcIixkZXNjcmlwdGlvbjpcIjxwPk5hbWUgb2YgYSBmdW5jdGlvbiB0aGF0IHdpbGxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgY2FsbGVkIHdoZW4gYSBwZWFrIGlzXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldGVjdGVkLjwvcD5cXG5cIix0eXBlOlwiRnVuY3Rpb25cIn0se25hbWU6XCJ2YWxcIixkZXNjcmlwdGlvbjpcIjxwPk9wdGlvbmFsIHZhbHVlIHRvIHBhc3NcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50byB0aGUgZnVuY3Rpb24gd2hlblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhIHBlYWsgaXMgZGV0ZWN0ZWQuPC9wPlxcblwiLHR5cGU6XCJPYmplY3RcIixvcHRpb25hbDohMH1dLGNsYXNzOlwicDUuUGVha0RldGVjdFwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fSxcInA1LkdhaW5cIjp7c2V0SW5wdXQ6e25hbWU6XCJzZXRJbnB1dFwiLHBhcmFtczpbe25hbWU6XCJzcmNcIixkZXNjcmlwdGlvbjpcIjxwPnA1LnNvdW5kIC8gV2ViIEF1ZGlvIG9iamVjdCB3aXRoIGEgc291bmRcXG4gICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0LjwvcD5cXG5cIix0eXBlOlwiT2JqZWN0XCJ9XSxjbGFzczpcInA1LkdhaW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxjb25uZWN0OntuYW1lOlwiY29ubmVjdFwiLHBhcmFtczpbe25hbWU6XCJ1bml0XCIsZGVzY3JpcHRpb246XCJcIix0eXBlOlwiT2JqZWN0XCJ9XSxjbGFzczpcInA1LkdhaW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxkaXNjb25uZWN0OntuYW1lOlwiZGlzY29ubmVjdFwiLGNsYXNzOlwicDUuR2FpblwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9LGFtcDp7bmFtZTpcImFtcFwiLHBhcmFtczpbe25hbWU6XCJ2b2x1bWVcIixkZXNjcmlwdGlvbjpcIjxwPmFtcGxpdHVkZSBiZXR3ZWVuIDAgYW5kIDEuMDwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCJ9LHtuYW1lOlwicmFtcFRpbWVcIixkZXNjcmlwdGlvbjpcIjxwPmNyZWF0ZSBhIGZhZGUgdGhhdCBsYXN0cyByYW1wVGltZTwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9LHtuYW1lOlwidGltZUZyb21Ob3dcIixkZXNjcmlwdGlvbjpcIjxwPnNjaGVkdWxlIHRoaXMgZXZlbnQgdG8gaGFwcGVuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kcyBmcm9tIG5vdzwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITB9XSxjbGFzczpcInA1LkdhaW5cIixtb2R1bGU6XCJwNS5zb3VuZFwifX0sXCJwNS5EaXN0b3J0aW9uXCI6e1dhdmVTaGFwZXJOb2RlOntuYW1lOlwiV2F2ZVNoYXBlck5vZGVcIixjbGFzczpcInA1LkRpc3RvcnRpb25cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxwcm9jZXNzOntuYW1lOlwicHJvY2Vzc1wiLHBhcmFtczpbe25hbWU6XCJhbW91bnRcIixkZXNjcmlwdGlvbjpcIjxwPlVuYm91bmRlZCBkaXN0b3J0aW9uIGFtb3VudC5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWFsIHZhbHVlcyByYW5nZSBmcm9tIDAtMS48L3A+XFxuXCIsdHlwZTpcIk51bWJlclwiLG9wdGlvbmFsOiEwLG9wdGRlZmF1bHQ6XCIwLjI1XCJ9LHtuYW1lOlwib3ZlcnNhbXBsZVwiLGRlc2NyaXB0aW9uOlwiPHA+J25vbmUnLCAnMngnLCBvciAnNHgnLjwvcD5cXG5cIix0eXBlOlwiU3RyaW5nXCIsb3B0aW9uYWw6ITAsb3B0ZGVmYXVsdDpcIidub25lJ1wifV0sY2xhc3M6XCJwNS5EaXN0b3J0aW9uXCIsbW9kdWxlOlwicDUuc291bmRcIn0sc2V0OntuYW1lOlwic2V0XCIscGFyYW1zOlt7bmFtZTpcImFtb3VudFwiLGRlc2NyaXB0aW9uOlwiPHA+VW5ib3VuZGVkIGRpc3RvcnRpb24gYW1vdW50LlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3JtYWwgdmFsdWVzIHJhbmdlIGZyb20gMC0xLjwvcD5cXG5cIix0eXBlOlwiTnVtYmVyXCIsb3B0aW9uYWw6ITAsb3B0ZGVmYXVsdDpcIjAuMjVcIn0se25hbWU6XCJvdmVyc2FtcGxlXCIsZGVzY3JpcHRpb246XCI8cD4nbm9uZScsICcyeCcsIG9yICc0eCcuPC9wPlxcblwiLHR5cGU6XCJTdHJpbmdcIixvcHRpb25hbDohMCxvcHRkZWZhdWx0OlwiJ25vbmUnXCJ9XSxjbGFzczpcInA1LkRpc3RvcnRpb25cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxnZXRBbW91bnQ6e25hbWU6XCJnZXRBbW91bnRcIixjbGFzczpcInA1LkRpc3RvcnRpb25cIixtb2R1bGU6XCJwNS5zb3VuZFwifSxnZXRPdmVyc2FtcGxlOntuYW1lOlwiZ2V0T3ZlcnNhbXBsZVwiLGNsYXNzOlwicDUuRGlzdG9ydGlvblwiLG1vZHVsZTpcInA1LnNvdW5kXCJ9fX19LHt9XSwyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ci5ieXRlTGVuZ3RoPWZ1bmN0aW9uKGUpe3ZhciB0PWMoZSkscj10WzBdLG49dFsxXTtyZXR1cm4gMyoocituKS80LW59LHIudG9CeXRlQXJyYXk9ZnVuY3Rpb24oZSl7dmFyIHQscixuPWMoZSksYT1uWzBdLG89blsxXSxpPW5ldyB1KGZ1bmN0aW9uKGUsdCl7cmV0dXJuIDMqKGUrdCkvNC10fShhLG8pKSxzPTAsbD0wPG8/YS00OmE7Zm9yKHI9MDtyPGw7cis9NCl0PXBbZS5jaGFyQ29kZUF0KHIpXTw8MTh8cFtlLmNoYXJDb2RlQXQocisxKV08PDEyfHBbZS5jaGFyQ29kZUF0KHIrMildPDw2fHBbZS5jaGFyQ29kZUF0KHIrMyldLGlbcysrXT10Pj4xNiYyNTUsaVtzKytdPXQ+PjgmMjU1LGlbcysrXT0yNTUmdDsyPT09byYmKHQ9cFtlLmNoYXJDb2RlQXQocildPDwyfHBbZS5jaGFyQ29kZUF0KHIrMSldPj40LGlbcysrXT0yNTUmdCk7MT09PW8mJih0PXBbZS5jaGFyQ29kZUF0KHIpXTw8MTB8cFtlLmNoYXJDb2RlQXQocisxKV08PDR8cFtlLmNoYXJDb2RlQXQocisyKV0+PjIsaVtzKytdPXQ+PjgmMjU1LGlbcysrXT0yNTUmdCk7cmV0dXJuIGl9LHIuZnJvbUJ5dGVBcnJheT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1lLmxlbmd0aCxuPXIlMyxhPVtdLG89MCxpPXItbjtvPGk7bys9MTYzODMpYS5wdXNoKGwoZSxvLGk8bysxNjM4Mz9pOm8rMTYzODMpKTsxPT1uPyh0PWVbci0xXSxhLnB1c2goc1t0Pj4yXStzW3Q8PDQmNjNdK1wiPT1cIikpOjI9PW4mJih0PShlW3ItMl08PDgpK2Vbci0xXSxhLnB1c2goc1t0Pj4xMF0rc1t0Pj40JjYzXStzW3Q8PDImNjNdK1wiPVwiKSk7cmV0dXJuIGEuam9pbihcIlwiKX07Zm9yKHZhciBzPVtdLHA9W10sdT1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheT9VaW50OEFycmF5OkFycmF5LG49XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIsYT0wLG89bi5sZW5ndGg7YTxvOysrYSlzW2FdPW5bYV0scFtuLmNoYXJDb2RlQXQoYSldPWE7ZnVuY3Rpb24gYyhlKXt2YXIgdD1lLmxlbmd0aDtpZigwPHQlNCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpO3ZhciByPWUuaW5kZXhPZihcIj1cIik7cmV0dXJuLTE9PT1yJiYocj10KSxbcixyPT09dD8wOjQtciU0XX1mdW5jdGlvbiBsKGUsdCxyKXtmb3IodmFyIG4sYSxvPVtdLGk9dDtpPHI7aSs9MyluPShlW2ldPDwxNiYxNjcxMTY4MCkrKGVbaSsxXTw8OCY2NTI4MCkrKDI1NSZlW2krMl0pLG8ucHVzaChzWyhhPW4pPj4xOCY2M10rc1thPj4xMiY2M10rc1thPj42JjYzXStzWzYzJmFdKTtyZXR1cm4gby5qb2luKFwiXCIpfXBbXCItXCIuY2hhckNvZGVBdCgwKV09NjIscFtcIl9cIi5jaGFyQ29kZUF0KDApXT02M30se31dLDM6W2Z1bmN0aW9uKGUsdCxyKXt9LHt9XSw0OltmdW5jdGlvbihlLHQscil7YXJndW1lbnRzWzRdWzNdWzBdLmFwcGx5KHIsYXJndW1lbnRzKX0se2R1cDozfV0sNTpbZnVuY3Rpb24oRixlLFUpeyhmdW5jdGlvbihjKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1GKFwiYmFzZTY0LWpzXCIpLG89RihcImllZWU3NTRcIiksZT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbC5mb3I/U3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpOm51bGw7VS5CdWZmZXI9YyxVLlNsb3dCdWZmZXI9ZnVuY3Rpb24oZSl7K2UhPWUmJihlPTApO3JldHVybiBjLmFsbG9jKCtlKX0sVS5JTlNQRUNUX01BWF9CWVRFUz01MDt2YXIgcj0yMTQ3NDgzNjQ3O2Z1bmN0aW9uIGkoZSl7aWYocjxlKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpO3ZhciB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxjLnByb3RvdHlwZSksdH1mdW5jdGlvbiBjKGUsdCxyKXtpZihcIm51bWJlclwiIT10eXBlb2YgZSlyZXR1cm4gYShlLHQscik7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIHN0cmluZy4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtyZXR1cm4gbChlKX1mdW5jdGlvbiBhKGUsdCxyKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZnVuY3Rpb24oZSx0KXtcInN0cmluZ1wiPT10eXBlb2YgdCYmXCJcIiE9PXR8fCh0PVwidXRmOFwiKTtpZighYy5pc0VuY29kaW5nKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIit0KTt2YXIgcj0wfGQoZSx0KSxuPWkociksYT1uLndyaXRlKGUsdCk7YSE9PXImJihuPW4uc2xpY2UoMCxhKSk7cmV0dXJuIG59KGUsdCk7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXJldHVybiBwKGUpO2lmKG51bGw9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiBlKTtpZihEKGUsQXJyYXlCdWZmZXIpfHxlJiZEKGUuYnVmZmVyLEFycmF5QnVmZmVyKSlyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe2lmKHQ8MHx8ZS5ieXRlTGVuZ3RoPHQpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wib2Zmc2V0XCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJyk7aWYoZS5ieXRlTGVuZ3RoPHQrKHJ8fDApKXRocm93IG5ldyBSYW5nZUVycm9yKCdcImxlbmd0aFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpO3ZhciBuO249dm9pZCAwPT09dCYmdm9pZCAwPT09cj9uZXcgVWludDhBcnJheShlKTp2b2lkIDA9PT1yP25ldyBVaW50OEFycmF5KGUsdCk6bmV3IFVpbnQ4QXJyYXkoZSx0LHIpO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YobixjLnByb3RvdHlwZSksbn0oZSx0LHIpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJyk7dmFyIG49ZS52YWx1ZU9mJiZlLnZhbHVlT2YoKTtpZihudWxsIT1uJiZuIT09ZSlyZXR1cm4gYy5mcm9tKG4sdCxyKTt2YXIgYT1mdW5jdGlvbihlKXtpZihjLmlzQnVmZmVyKGUpKXt2YXIgdD0wfHUoZS5sZW5ndGgpLHI9aSh0KTtyZXR1cm4gMD09PXIubGVuZ3RofHxlLmNvcHkociwwLDAsdCkscn1pZih2b2lkIDAhPT1lLmxlbmd0aClyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgZS5sZW5ndGh8fEEoZS5sZW5ndGgpP2koMCk6cChlKTtpZihcIkJ1ZmZlclwiPT09ZS50eXBlJiZBcnJheS5pc0FycmF5KGUuZGF0YSkpcmV0dXJuIHAoZS5kYXRhKX0oZSk7aWYoYSlyZXR1cm4gYTtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1TeW1ib2wudG9QcmltaXRpdmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGVbU3ltYm9sLnRvUHJpbWl0aXZlXSlyZXR1cm4gYy5mcm9tKGVbU3ltYm9sLnRvUHJpbWl0aXZlXShcInN0cmluZ1wiKSx0LHIpO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSl9ZnVuY3Rpb24gcyhlKXtpZihcIm51bWJlclwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJyk7aWYoZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIHMoZSksaShlPDA/MDowfHUoZSkpfWZ1bmN0aW9uIHAoZSl7Zm9yKHZhciB0PWUubGVuZ3RoPDA/MDowfHUoZS5sZW5ndGgpLHI9aSh0KSxuPTA7bjx0O24rPTEpcltuXT0yNTUmZVtuXTtyZXR1cm4gcn1mdW5jdGlvbiB1KGUpe2lmKHI8PWUpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtIHNpemU6IDB4XCIrci50b1N0cmluZygxNikrXCIgYnl0ZXNcIik7cmV0dXJuIDB8ZX1mdW5jdGlvbiBkKGUsdCl7aWYoYy5pc0J1ZmZlcihlKSlyZXR1cm4gZS5sZW5ndGg7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpfHxEKGUsQXJyYXlCdWZmZXIpKXJldHVybiBlLmJ5dGVMZW5ndGg7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgb3IgQXJyYXlCdWZmZXIuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgZSk7dmFyIHI9ZS5sZW5ndGgsbj0yPGFyZ3VtZW50cy5sZW5ndGgmJiEwPT09YXJndW1lbnRzWzJdO2lmKCFuJiYwPT09cilyZXR1cm4gMDtmb3IodmFyIGE9ITE7Oylzd2l0Y2godCl7Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gcjtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm4gSShlKS5sZW5ndGg7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIDIqcjtjYXNlXCJoZXhcIjpyZXR1cm4gcj4+PjE7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIFAoZSkubGVuZ3RoO2RlZmF1bHQ6aWYoYSlyZXR1cm4gbj8tMTpJKGUpLmxlbmd0aDt0PShcIlwiK3QpLnRvTG93ZXJDYXNlKCksYT0hMH19ZnVuY3Rpb24gaChlLHQscil7dmFyIG49ZVt0XTtlW3RdPWVbcl0sZVtyXT1ufWZ1bmN0aW9uIG0oZSx0LHIsbixhKXtpZigwPT09ZS5sZW5ndGgpcmV0dXJuLTE7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHI/KG49cixyPTApOjIxNDc0ODM2NDc8cj9yPTIxNDc0ODM2NDc6cjwtMjE0NzQ4MzY0OCYmKHI9LTIxNDc0ODM2NDgpLEEocj0rcikmJihyPWE/MDplLmxlbmd0aC0xKSxyPDAmJihyPWUubGVuZ3RoK3IpLHI+PWUubGVuZ3RoKXtpZihhKXJldHVybi0xO3I9ZS5sZW5ndGgtMX1lbHNlIGlmKHI8MCl7aWYoIWEpcmV0dXJuLTE7cj0wfWlmKFwic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1jLmZyb20odCxuKSksYy5pc0J1ZmZlcih0KSlyZXR1cm4gMD09PXQubGVuZ3RoPy0xOmYoZSx0LHIsbixhKTtpZihcIm51bWJlclwiPT10eXBlb2YgdClyZXR1cm4gdCY9MjU1LFwiZnVuY3Rpb25cIj09dHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/YT9VaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZSx0LHIpOlVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoZSx0LHIpOmYoZSxbdF0scixuLGEpO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJ2YWwgbXVzdCBiZSBzdHJpbmcsIG51bWJlciBvciBCdWZmZXJcIil9ZnVuY3Rpb24gZihlLHQscixuLGEpe3ZhciBvLGk9MSxzPWUubGVuZ3RoLGw9dC5sZW5ndGg7aWYodm9pZCAwIT09biYmKFwidWNzMlwiPT09KG49U3RyaW5nKG4pLnRvTG93ZXJDYXNlKCkpfHxcInVjcy0yXCI9PT1ufHxcInV0ZjE2bGVcIj09PW58fFwidXRmLTE2bGVcIj09PW4pKXtpZihlLmxlbmd0aDwyfHx0Lmxlbmd0aDwyKXJldHVybi0xO3MvPWk9MixsLz0yLHIvPTJ9ZnVuY3Rpb24gcChlLHQpe3JldHVybiAxPT09aT9lW3RdOmUucmVhZFVJbnQxNkJFKHQqaSl9aWYoYSl7dmFyIHU9LTE7Zm9yKG89cjtvPHM7bysrKWlmKHAoZSxvKT09PXAodCwtMT09PXU/MDpvLXUpKXtpZigtMT09PXUmJih1PW8pLG8tdSsxPT09bClyZXR1cm4gdSppfWVsc2UtMSE9PXUmJihvLT1vLXUpLHU9LTF9ZWxzZSBmb3IoczxyK2wmJihyPXMtbCksbz1yOzA8PW87by0tKXtmb3IodmFyIGM9ITAsZD0wO2Q8bDtkKyspaWYocChlLG8rZCkhPT1wKHQsZCkpe2M9ITE7YnJlYWt9aWYoYylyZXR1cm4gb31yZXR1cm4tMX1mdW5jdGlvbiB5KGUsdCxyLG4pe3I9TnVtYmVyKHIpfHwwO3ZhciBhPWUubGVuZ3RoLXI7bj9hPChuPU51bWJlcihuKSkmJihuPWEpOm49YTt2YXIgbz10Lmxlbmd0aDtvLzI8biYmKG49by8yKTtmb3IodmFyIGk9MDtpPG47KytpKXt2YXIgcz1wYXJzZUludCh0LnN1YnN0cigyKmksMiksMTYpO2lmKEEocykpcmV0dXJuIGk7ZVtyK2ldPXN9cmV0dXJuIGl9ZnVuY3Rpb24gZyhlLHQscixuKXtyZXR1cm4gUihmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0wO3I8ZS5sZW5ndGg7KytyKXQucHVzaCgyNTUmZS5jaGFyQ29kZUF0KHIpKTtyZXR1cm4gdH0odCksZSxyLG4pfWZ1bmN0aW9uIHYoZSx0LHIsbil7cmV0dXJuIFIoZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsbixhLG89W10saT0wO2k8ZS5sZW5ndGgmJiEoKHQtPTIpPDApOysraSlyPWUuY2hhckNvZGVBdChpKSxuPXI+PjgsYT1yJTI1NixvLnB1c2goYSksby5wdXNoKG4pO3JldHVybiBvfSh0LGUubGVuZ3RoLXIpLGUscixuKX1mdW5jdGlvbiBiKGUsdCxyKXtyZXR1cm4gMD09PXQmJnI9PT1lLmxlbmd0aD9uLmZyb21CeXRlQXJyYXkoZSk6bi5mcm9tQnl0ZUFycmF5KGUuc2xpY2UodCxyKSl9ZnVuY3Rpb24gXyhlLHQscil7cj1NYXRoLm1pbihlLmxlbmd0aCxyKTtmb3IodmFyIG49W10sYT10O2E8cjspe3ZhciBvLGkscyxsLHA9ZVthXSx1PW51bGwsYz0yMzk8cD80OjIyMzxwPzM6MTkxPHA/MjoxO2lmKGErYzw9cilzd2l0Y2goYyl7Y2FzZSAxOnA8MTI4JiYodT1wKTticmVhaztjYXNlIDI6MTI4PT0oMTkyJihvPWVbYSsxXSkpJiYxMjc8KGw9KDMxJnApPDw2fDYzJm8pJiYodT1sKTticmVhaztjYXNlIDM6bz1lW2ErMV0saT1lW2ErMl0sMTI4PT0oMTkyJm8pJiYxMjg9PSgxOTImaSkmJjIwNDc8KGw9KDE1JnApPDwxMnwoNjMmbyk8PDZ8NjMmaSkmJihsPDU1Mjk2fHw1NzM0MzxsKSYmKHU9bCk7YnJlYWs7Y2FzZSA0Om89ZVthKzFdLGk9ZVthKzJdLHM9ZVthKzNdLDEyOD09KDE5MiZvKSYmMTI4PT0oMTkyJmkpJiYxMjg9PSgxOTImcykmJjY1NTM1PChsPSgxNSZwKTw8MTh8KDYzJm8pPDwxMnwoNjMmaSk8PDZ8NjMmcykmJmw8MTExNDExMiYmKHU9bCl9bnVsbD09PXU/KHU9NjU1MzMsYz0xKTo2NTUzNTx1JiYodS09NjU1MzYsbi5wdXNoKHU+Pj4xMCYxMDIzfDU1Mjk2KSx1PTU2MzIwfDEwMjMmdSksbi5wdXNoKHUpLGErPWN9cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PWUubGVuZ3RoO2lmKHQ8PXgpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGUpO3ZhciByPVwiXCIsbj0wO2Zvcig7bjx0OylyKz1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxlLnNsaWNlKG4sbis9eCkpO3JldHVybiByfShuKX1VLmtNYXhMZW5ndGg9ciwoYy5UWVBFRF9BUlJBWV9TVVBQT1JUPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPW5ldyBVaW50OEFycmF5KDEpLHQ9e2ZvbzpmdW5jdGlvbigpe3JldHVybiA0Mn19O3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YodCxVaW50OEFycmF5LnByb3RvdHlwZSksT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCksNDI9PT1lLmZvbygpfWNhdGNoKGUpe3JldHVybiExfX0oKSl8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBjb25zb2xlfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBjb25zb2xlLmVycm9yfHxjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGxhY2tzIHR5cGVkIGFycmF5IChVaW50OEFycmF5KSBzdXBwb3J0IHdoaWNoIGlzIHJlcXVpcmVkIGJ5IGBidWZmZXJgIHY1LnguIFVzZSBgYnVmZmVyYCB2NC54IGlmIHlvdSByZXF1aXJlIG9sZCBicm93c2VyIHN1cHBvcnQuXCIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjLnByb3RvdHlwZSxcInBhcmVudFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe2lmKGMuaXNCdWZmZXIodGhpcykpcmV0dXJuIHRoaXMuYnVmZmVyfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjLnByb3RvdHlwZSxcIm9mZnNldFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe2lmKGMuaXNCdWZmZXIodGhpcykpcmV0dXJuIHRoaXMuYnl0ZU9mZnNldH19KSxcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1TeW1ib2wuc3BlY2llcyYmY1tTeW1ib2wuc3BlY2llc109PT1jJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoYyxTeW1ib2wuc3BlY2llcyx7dmFsdWU6bnVsbCxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMX0pLGMucG9vbFNpemU9ODE5MixjLmZyb209ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBhKGUsdCxyKX0sT2JqZWN0LnNldFByb3RvdHlwZU9mKGMucHJvdG90eXBlLFVpbnQ4QXJyYXkucHJvdG90eXBlKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoYyxVaW50OEFycmF5KSxjLmFsbG9jPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gYT10LG89cixzKG49ZSksbjw9MD9pKG4pOnZvaWQgMCE9PWE/XCJzdHJpbmdcIj09dHlwZW9mIG8/aShuKS5maWxsKGEsbyk6aShuKS5maWxsKGEpOmkobik7dmFyIG4sYSxvfSxjLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKGUpe3JldHVybiBsKGUpfSxjLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbihlKXtyZXR1cm4gbChlKX0sYy5pc0J1ZmZlcj1mdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9ZSYmITA9PT1lLl9pc0J1ZmZlciYmZSE9PWMucHJvdG90eXBlfSxjLmNvbXBhcmU9ZnVuY3Rpb24oZSx0KXtpZihEKGUsVWludDhBcnJheSkmJihlPWMuZnJvbShlLGUub2Zmc2V0LGUuYnl0ZUxlbmd0aCkpLEQodCxVaW50OEFycmF5KSYmKHQ9Yy5mcm9tKHQsdC5vZmZzZXQsdC5ieXRlTGVuZ3RoKSksIWMuaXNCdWZmZXIoZSl8fCFjLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImJ1ZjFcIiwgXCJidWYyXCIgYXJndW1lbnRzIG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXknKTtpZihlPT09dClyZXR1cm4gMDtmb3IodmFyIHI9ZS5sZW5ndGgsbj10Lmxlbmd0aCxhPTAsbz1NYXRoLm1pbihyLG4pO2E8bzsrK2EpaWYoZVthXSE9PXRbYV0pe3I9ZVthXSxuPXRbYV07YnJlYWt9cmV0dXJuIHI8bj8tMTpuPHI/MTowfSxjLmlzRW5jb2Rpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKFN0cmluZyhlKS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxjLmNvbmNhdD1mdW5jdGlvbihlLHQpe2lmKCFBcnJheS5pc0FycmF5KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO2lmKDA9PT1lLmxlbmd0aClyZXR1cm4gYy5hbGxvYygwKTt2YXIgcjtpZih2b2lkIDA9PT10KWZvcihyPXQ9MDtyPGUubGVuZ3RoOysrcil0Kz1lW3JdLmxlbmd0aDt2YXIgbj1jLmFsbG9jVW5zYWZlKHQpLGE9MDtmb3Iocj0wO3I8ZS5sZW5ndGg7KytyKXt2YXIgbz1lW3JdO2lmKEQobyxVaW50OEFycmF5KSYmKG89Yy5mcm9tKG8pKSwhYy5pc0J1ZmZlcihvKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKTtvLmNvcHkobixhKSxhKz1vLmxlbmd0aH1yZXR1cm4gbn0sYy5ieXRlTGVuZ3RoPWQsYy5wcm90b3R5cGUuX2lzQnVmZmVyPSEwLGMucHJvdG90eXBlLnN3YXAxNj1mdW5jdGlvbigpe3ZhciBlPXRoaXMubGVuZ3RoO2lmKGUlMiE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzXCIpO2Zvcih2YXIgdD0wO3Q8ZTt0Kz0yKWgodGhpcyx0LHQrMSk7cmV0dXJuIHRoaXN9LGMucHJvdG90eXBlLnN3YXAzMj1mdW5jdGlvbigpe3ZhciBlPXRoaXMubGVuZ3RoO2lmKGUlNCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzXCIpO2Zvcih2YXIgdD0wO3Q8ZTt0Kz00KWgodGhpcyx0LHQrMyksaCh0aGlzLHQrMSx0KzIpO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS5zd2FwNjQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmxlbmd0aDtpZihlJTghPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNjQtYml0c1wiKTtmb3IodmFyIHQ9MDt0PGU7dCs9OCloKHRoaXMsdCx0KzcpLGgodGhpcyx0KzEsdCs2KSxoKHRoaXMsdCsyLHQrNSksaCh0aGlzLHQrMyx0KzQpO3JldHVybiB0aGlzfSxjLnByb3RvdHlwZS50b0xvY2FsZVN0cmluZz1jLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBlPXRoaXMubGVuZ3RoO3JldHVybiAwPT09ZT9cIlwiOjA9PT1hcmd1bWVudHMubGVuZ3RoP18odGhpcywwLGUpOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj0hMTtpZigodm9pZCAwPT09dHx8dDwwKSYmKHQ9MCksdD50aGlzLmxlbmd0aClyZXR1cm5cIlwiO2lmKCh2b2lkIDA9PT1yfHxyPnRoaXMubGVuZ3RoKSYmKHI9dGhpcy5sZW5ndGgpLHI8PTApcmV0dXJuXCJcIjtpZigocj4+Pj0wKTw9KHQ+Pj49MCkpcmV0dXJuXCJcIjtmb3IoZT1lfHxcInV0ZjhcIjs7KXN3aXRjaChlKXtjYXNlXCJoZXhcIjpyZXR1cm4gTSh0aGlzLHQscik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIF8odGhpcyx0LHIpO2Nhc2VcImFzY2lpXCI6cmV0dXJuIFModGhpcyx0LHIpO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiB3KHRoaXMsdCxyKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gYih0aGlzLHQscik7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIEUodGhpcyx0LHIpO2RlZmF1bHQ6aWYobil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrZSk7ZT0oZStcIlwiKS50b0xvd2VyQ2FzZSgpLG49ITB9fS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtpZighYy5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKTtyZXR1cm4gdGhpcz09PWV8fDA9PT1jLmNvbXBhcmUodGhpcyxlKX0sYy5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe3ZhciBlPVwiXCIsdD1VLklOU1BFQ1RfTUFYX0JZVEVTO3JldHVybiBlPXRoaXMudG9TdHJpbmcoXCJoZXhcIiwwLHQpLnJlcGxhY2UoLyguezJ9KS9nLFwiJDEgXCIpLnRyaW0oKSx0aGlzLmxlbmd0aD50JiYoZSs9XCIgLi4uIFwiKSxcIjxCdWZmZXIgXCIrZStcIj5cIn0sZSYmKGMucHJvdG90eXBlW2VdPWMucHJvdG90eXBlLmluc3BlY3QpLGMucHJvdG90eXBlLmNvbXBhcmU9ZnVuY3Rpb24oZSx0LHIsbixhKXtpZihEKGUsVWludDhBcnJheSkmJihlPWMuZnJvbShlLGUub2Zmc2V0LGUuYnl0ZUxlbmd0aCkpLCFjLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInRhcmdldFwiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXkuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgZSk7aWYodm9pZCAwPT09dCYmKHQ9MCksdm9pZCAwPT09ciYmKHI9ZT9lLmxlbmd0aDowKSx2b2lkIDA9PT1uJiYobj0wKSx2b2lkIDA9PT1hJiYoYT10aGlzLmxlbmd0aCksdDwwfHxyPmUubGVuZ3RofHxuPDB8fGE+dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvdXQgb2YgcmFuZ2UgaW5kZXhcIik7aWYoYTw9biYmcjw9dClyZXR1cm4gMDtpZihhPD1uKXJldHVybi0xO2lmKHI8PXQpcmV0dXJuIDE7aWYodGhpcz09PWUpcmV0dXJuIDA7Zm9yKHZhciBvPShhPj4+PTApLShuPj4+PTApLGk9KHI+Pj49MCktKHQ+Pj49MCkscz1NYXRoLm1pbihvLGkpLGw9dGhpcy5zbGljZShuLGEpLHA9ZS5zbGljZSh0LHIpLHU9MDt1PHM7Kyt1KWlmKGxbdV0hPT1wW3VdKXtvPWxbdV0saT1wW3VdO2JyZWFrfXJldHVybiBvPGk/LTE6aTxvPzE6MH0sYy5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybi0xIT09dGhpcy5pbmRleE9mKGUsdCxyKX0sYy5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlLHQscil7cmV0dXJuIG0odGhpcyxlLHQsciwhMCl9LGMucHJvdG90eXBlLmxhc3RJbmRleE9mPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbSh0aGlzLGUsdCxyLCExKX0sYy5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oZSx0LHIsbil7aWYodm9pZCAwPT09dCluPVwidXRmOFwiLHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2UgaWYodm9pZCAwPT09ciYmXCJzdHJpbmdcIj09dHlwZW9mIHQpbj10LHI9dGhpcy5sZW5ndGgsdD0wO2Vsc2V7aWYoIWlzRmluaXRlKHQpKXRocm93IG5ldyBFcnJvcihcIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkXCIpO3Q+Pj49MCxpc0Zpbml0ZShyKT8ocj4+Pj0wLHZvaWQgMD09PW4mJihuPVwidXRmOFwiKSk6KG49cixyPXZvaWQgMCl9dmFyIGE9dGhpcy5sZW5ndGgtdDtpZigodm9pZCAwPT09cnx8YTxyKSYmKHI9YSksMDxlLmxlbmd0aCYmKHI8MHx8dDwwKXx8dD50aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkF0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzXCIpO249bnx8XCJ1dGY4XCI7Zm9yKHZhciBvLGkscyxsLHAsdSxjPSExOzspc3dpdGNoKG4pe2Nhc2VcImhleFwiOnJldHVybiB5KHRoaXMsZSx0LHIpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiBwPXQsdT1yLFIoSShlLChsPXRoaXMpLmxlbmd0aC1wKSxsLHAsdSk7Y2FzZVwiYXNjaWlcIjpyZXR1cm4gZyh0aGlzLGUsdCxyKTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gZyh0aGlzLGUsdCxyKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gbz10aGlzLGk9dCxzPXIsUihQKGUpLG8saSxzKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdih0aGlzLGUsdCxyKTtkZWZhdWx0OmlmKGMpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK24pO249KFwiXCIrbikudG9Mb3dlckNhc2UoKSxjPSEwfX0sYy5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6XCJCdWZmZXJcIixkYXRhOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2Fycnx8dGhpcywwKX19O3ZhciB4PTQwOTY7ZnVuY3Rpb24gUyhlLHQscil7dmFyIG49XCJcIjtyPU1hdGgubWluKGUubGVuZ3RoLHIpO2Zvcih2YXIgYT10O2E8cjsrK2Epbis9U3RyaW5nLmZyb21DaGFyQ29kZSgxMjcmZVthXSk7cmV0dXJuIG59ZnVuY3Rpb24gdyhlLHQscil7dmFyIG49XCJcIjtyPU1hdGgubWluKGUubGVuZ3RoLHIpO2Zvcih2YXIgYT10O2E8cjsrK2Epbis9U3RyaW5nLmZyb21DaGFyQ29kZShlW2FdKTtyZXR1cm4gbn1mdW5jdGlvbiBNKGUsdCxyKXt2YXIgbj1lLmxlbmd0aDsoIXR8fHQ8MCkmJih0PTApLCghcnx8cjwwfHxuPHIpJiYocj1uKTtmb3IodmFyIGE9XCJcIixvPXQ7bzxyOysrbylhKz1rW2Vbb11dO3JldHVybiBhfWZ1bmN0aW9uIEUoZSx0LHIpe2Zvcih2YXIgbj1lLnNsaWNlKHQsciksYT1cIlwiLG89MDtvPG4ubGVuZ3RoO28rPTIpYSs9U3RyaW5nLmZyb21DaGFyQ29kZShuW29dKzI1NipuW28rMV0pO3JldHVybiBhfWZ1bmN0aW9uIFQoZSx0LHIpe2lmKGUlMSE9MHx8ZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwib2Zmc2V0IGlzIG5vdCB1aW50XCIpO2lmKHI8ZSt0KXRocm93IG5ldyBSYW5nZUVycm9yKFwiVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKX1mdW5jdGlvbiBDKGUsdCxyLG4sYSxvKXtpZighYy5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImJ1ZmZlclwiIGFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXIgaW5zdGFuY2UnKTtpZihhPHR8fHQ8byl0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKTtpZihyK24+ZS5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIil9ZnVuY3Rpb24gTihlLHQscixuKXtpZihyK24+ZS5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIik7aWYocjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfWZ1bmN0aW9uIE8oZSx0LHIsbixhKXtyZXR1cm4gdD0rdCxyPj4+PTAsYXx8TihlLDAsciw0KSxvLndyaXRlKGUsdCxyLG4sMjMsNCkscis0fWZ1bmN0aW9uIEwoZSx0LHIsbixhKXtyZXR1cm4gdD0rdCxyPj4+PTAsYXx8TihlLDAsciw4KSxvLndyaXRlKGUsdCxyLG4sNTIsOCkscis4fWMucHJvdG90eXBlLnNsaWNlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5sZW5ndGg7KGU9fn5lKTwwPyhlKz1yKTwwJiYoZT0wKTpyPGUmJihlPXIpLCh0PXZvaWQgMD09PXQ/cjp+fnQpPDA/KHQrPXIpPDAmJih0PTApOnI8dCYmKHQ9ciksdDxlJiYodD1lKTt2YXIgbj10aGlzLnN1YmFycmF5KGUsdCk7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihuLGMucHJvdG90eXBlKSxufSxjLnByb3RvdHlwZS5yZWFkVUludExFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fFQoZSx0LHRoaXMubGVuZ3RoKTtmb3IodmFyIG49dGhpc1tlXSxhPTEsbz0wOysrbzx0JiYoYSo9MjU2KTspbis9dGhpc1tlK29dKmE7cmV0dXJuIG59LGMucHJvdG90eXBlLnJlYWRVSW50QkU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8VChlLHQsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW2UrLS10XSxhPTE7MDx0JiYoYSo9MjU2KTspbis9dGhpc1tlKy0tdF0qYTtyZXR1cm4gbn0sYy5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxUKGUsMSx0aGlzLmxlbmd0aCksdGhpc1tlXX0sYy5wcm90b3R5cGUucmVhZFVJbnQxNkxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxUKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXXx0aGlzW2UrMV08PDh9LGMucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8VChlLDIsdGhpcy5sZW5ndGgpLHRoaXNbZV08PDh8dGhpc1tlKzFdfSxjLnByb3RvdHlwZS5yZWFkVUludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFQoZSw0LHRoaXMubGVuZ3RoKSwodGhpc1tlXXx0aGlzW2UrMV08PDh8dGhpc1tlKzJdPDwxNikrMTY3NzcyMTYqdGhpc1tlKzNdfSxjLnByb3RvdHlwZS5yZWFkVUludDMyQkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFQoZSw0LHRoaXMubGVuZ3RoKSwxNjc3NzIxNip0aGlzW2VdKyh0aGlzW2UrMV08PDE2fHRoaXNbZSsyXTw8OHx0aGlzW2UrM10pfSxjLnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24oZSx0LHIpe2U+Pj49MCx0Pj4+PTAscnx8VChlLHQsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW2VdLGE9MSxvPTA7KytvPHQmJihhKj0yNTYpOyluKz10aGlzW2Urb10qYTtyZXR1cm4oYSo9MTI4KTw9biYmKG4tPU1hdGgucG93KDIsOCp0KSksbn0sYy5wcm90b3R5cGUucmVhZEludEJFPWZ1bmN0aW9uKGUsdCxyKXtlPj4+PTAsdD4+Pj0wLHJ8fFQoZSx0LHRoaXMubGVuZ3RoKTtmb3IodmFyIG49dCxhPTEsbz10aGlzW2UrLS1uXTswPG4mJihhKj0yNTYpOylvKz10aGlzW2UrLS1uXSphO3JldHVybihhKj0xMjgpPD1vJiYoby09TWF0aC5wb3coMiw4KnQpKSxvfSxjLnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8VChlLDEsdGhpcy5sZW5ndGgpLDEyOCZ0aGlzW2VdPy0xKigyNTUtdGhpc1tlXSsxKTp0aGlzW2VdfSxjLnByb3RvdHlwZS5yZWFkSW50MTZMRT1mdW5jdGlvbihlLHQpe2U+Pj49MCx0fHxUKGUsMix0aGlzLmxlbmd0aCk7dmFyIHI9dGhpc1tlXXx0aGlzW2UrMV08PDg7cmV0dXJuIDMyNzY4JnI/NDI5NDkwMTc2MHxyOnJ9LGMucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uKGUsdCl7ZT4+Pj0wLHR8fFQoZSwyLHRoaXMubGVuZ3RoKTt2YXIgcj10aGlzW2UrMV18dGhpc1tlXTw8ODtyZXR1cm4gMzI3Njgmcj80Mjk0OTAxNzYwfHI6cn0sYy5wcm90b3R5cGUucmVhZEludDMyTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT4+Pj0wLHR8fFQoZSw0LHRoaXMubGVuZ3RoKSx0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2fHRoaXNbZSszXTw8MjR9LGMucHJvdG90eXBlLnJlYWRJbnQzMkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxUKGUsNCx0aGlzLmxlbmd0aCksdGhpc1tlXTw8MjR8dGhpc1tlKzFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdfSxjLnByb3RvdHlwZS5yZWFkRmxvYXRMRT1mdW5jdGlvbihlLHQpe3JldHVybiBlPj4+PTAsdHx8VChlLDQsdGhpcy5sZW5ndGgpLG8ucmVhZCh0aGlzLGUsITAsMjMsNCl9LGMucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxUKGUsNCx0aGlzLmxlbmd0aCksby5yZWFkKHRoaXMsZSwhMSwyMyw0KX0sYy5wcm90b3R5cGUucmVhZERvdWJsZUxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxUKGUsOCx0aGlzLmxlbmd0aCksby5yZWFkKHRoaXMsZSwhMCw1Miw4KX0sYy5wcm90b3R5cGUucmVhZERvdWJsZUJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU+Pj49MCx0fHxUKGUsOCx0aGlzLmxlbmd0aCksby5yZWFkKHRoaXMsZSwhMSw1Miw4KX0sYy5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24oZSx0LHIsbil7ZT0rZSx0Pj4+PTAscj4+Pj0wLG58fEModGhpcyxlLHQscixNYXRoLnBvdygyLDgqciktMSwwKTt2YXIgYT0xLG89MDtmb3IodGhpc1t0XT0yNTUmZTsrK288ciYmKGEqPTI1Nik7KXRoaXNbdCtvXT1lL2EmMjU1O3JldHVybiB0K3J9LGMucHJvdG90eXBlLndyaXRlVUludEJFPWZ1bmN0aW9uKGUsdCxyLG4pe2U9K2UsdD4+Pj0wLHI+Pj49MCxufHxDKHRoaXMsZSx0LHIsTWF0aC5wb3coMiw4KnIpLTEsMCk7dmFyIGE9ci0xLG89MTtmb3IodGhpc1t0K2FdPTI1NSZlOzA8PS0tYSYmKG8qPTI1Nik7KXRoaXNbdCthXT1lL28mMjU1O3JldHVybiB0K3J9LGMucHJvdG90eXBlLndyaXRlVUludDg9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxDKHRoaXMsZSx0LDEsMjU1LDApLHRoaXNbdF09MjU1JmUsdCsxfSxjLnByb3RvdHlwZS53cml0ZVVJbnQxNkxFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Qyh0aGlzLGUsdCwyLDY1NTM1LDApLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sYy5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fEModGhpcyxlLHQsMiw2NTUzNSwwKSx0aGlzW3RdPWU+Pj44LHRoaXNbdCsxXT0yNTUmZSx0KzJ9LGMucHJvdG90eXBlLndyaXRlVUludDMyTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxDKHRoaXMsZSx0LDQsNDI5NDk2NzI5NSwwKSx0aGlzW3QrM109ZT4+PjI0LHRoaXNbdCsyXT1lPj4+MTYsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdF09MjU1JmUsdCs0fSxjLnByb3RvdHlwZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Qyh0aGlzLGUsdCw0LDQyOTQ5NjcyOTUsMCksdGhpc1t0XT1lPj4+MjQsdGhpc1t0KzFdPWU+Pj4xNix0aGlzW3QrMl09ZT4+PjgsdGhpc1t0KzNdPTI1NSZlLHQrNH0sYy5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbihlLHQscixuKXtpZihlPStlLHQ+Pj49MCwhbil7dmFyIGE9TWF0aC5wb3coMiw4KnItMSk7Qyh0aGlzLGUsdCxyLGEtMSwtYSl9dmFyIG89MCxpPTEscz0wO2Zvcih0aGlzW3RdPTI1NSZlOysrbzxyJiYoaSo9MjU2KTspZTwwJiYwPT09cyYmMCE9PXRoaXNbdCtvLTFdJiYocz0xKSx0aGlzW3Qrb109KGUvaT4+MCktcyYyNTU7cmV0dXJuIHQrcn0sYy5wcm90b3R5cGUud3JpdGVJbnRCRT1mdW5jdGlvbihlLHQscixuKXtpZihlPStlLHQ+Pj49MCwhbil7dmFyIGE9TWF0aC5wb3coMiw4KnItMSk7Qyh0aGlzLGUsdCxyLGEtMSwtYSl9dmFyIG89ci0xLGk9MSxzPTA7Zm9yKHRoaXNbdCtvXT0yNTUmZTswPD0tLW8mJihpKj0yNTYpOyllPDAmJjA9PT1zJiYwIT09dGhpc1t0K28rMV0mJihzPTEpLHRoaXNbdCtvXT0oZS9pPj4wKS1zJjI1NTtyZXR1cm4gdCtyfSxjLnByb3RvdHlwZS53cml0ZUludDg9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxDKHRoaXMsZSx0LDEsMTI3LC0xMjgpLGU8MCYmKGU9MjU1K2UrMSksdGhpc1t0XT0yNTUmZSx0KzF9LGMucHJvdG90eXBlLndyaXRlSW50MTZMRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9K2UsdD4+Pj0wLHJ8fEModGhpcyxlLHQsMiwzMjc2NywtMzI3NjgpLHRoaXNbdF09MjU1JmUsdGhpc1t0KzFdPWU+Pj44LHQrMn0sYy5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Qyh0aGlzLGUsdCwyLDMyNzY3LC0zMjc2OCksdGhpc1t0XT1lPj4+OCx0aGlzW3QrMV09MjU1JmUsdCsyfSxjLnByb3RvdHlwZS53cml0ZUludDMyTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPStlLHQ+Pj49MCxyfHxDKHRoaXMsZSx0LDQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCksdGhpc1t0XT0yNTUmZSx0aGlzW3QrMV09ZT4+PjgsdGhpc1t0KzJdPWU+Pj4xNix0aGlzW3QrM109ZT4+PjI0LHQrNH0sYy5wcm90b3R5cGUud3JpdGVJbnQzMkJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT0rZSx0Pj4+PTAscnx8Qyh0aGlzLGUsdCw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLGU8MCYmKGU9NDI5NDk2NzI5NStlKzEpLHRoaXNbdF09ZT4+PjI0LHRoaXNbdCsxXT1lPj4+MTYsdGhpc1t0KzJdPWU+Pj44LHRoaXNbdCszXT0yNTUmZSx0KzR9LGMucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIE8odGhpcyxlLHQsITAscil9LGMucHJvdG90eXBlLndyaXRlRmxvYXRCRT1mdW5jdGlvbihlLHQscil7cmV0dXJuIE8odGhpcyxlLHQsITEscil9LGMucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBMKHRoaXMsZSx0LCEwLHIpfSxjLnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gTCh0aGlzLGUsdCwhMSxyKX0sYy5wcm90b3R5cGUuY29weT1mdW5jdGlvbihlLHQscixuKXtpZighYy5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgc2hvdWxkIGJlIGEgQnVmZmVyXCIpO2lmKHI9cnx8MCxufHwwPT09bnx8KG49dGhpcy5sZW5ndGgpLHQ+PWUubGVuZ3RoJiYodD1lLmxlbmd0aCksdD10fHwwLDA8biYmbjxyJiYobj1yKSxuPT09cilyZXR1cm4gMDtpZigwPT09ZS5sZW5ndGh8fDA9PT10aGlzLmxlbmd0aClyZXR1cm4gMDtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzXCIpO2lmKHI8MHx8cj49dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIik7aWYobjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwic291cmNlRW5kIG91dCBvZiBib3VuZHNcIik7bj50aGlzLmxlbmd0aCYmKG49dGhpcy5sZW5ndGgpLGUubGVuZ3RoLXQ8bi1yJiYobj1lLmxlbmd0aC10K3IpO3ZhciBhPW4tcjtpZih0aGlzPT09ZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbil0aGlzLmNvcHlXaXRoaW4odCxyLG4pO2Vsc2UgaWYodGhpcz09PWUmJnI8dCYmdDxuKWZvcih2YXIgbz1hLTE7MDw9bzstLW8pZVtvK3RdPXRoaXNbbytyXTtlbHNlIFVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKGUsdGhpcy5zdWJhcnJheShyLG4pLHQpO3JldHVybiBhfSxjLnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdD8obj10LHQ9MCxyPXRoaXMubGVuZ3RoKTpcInN0cmluZ1wiPT10eXBlb2YgciYmKG49cixyPXRoaXMubGVuZ3RoKSx2b2lkIDAhPT1uJiZcInN0cmluZ1wiIT10eXBlb2Ygbil0aHJvdyBuZXcgVHlwZUVycm9yKFwiZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZ1wiKTtpZihcInN0cmluZ1wiPT10eXBlb2YgbiYmIWMuaXNFbmNvZGluZyhuKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrbik7aWYoMT09PWUubGVuZ3RoKXt2YXIgYT1lLmNoYXJDb2RlQXQoMCk7KFwidXRmOFwiPT09biYmYTwxMjh8fFwibGF0aW4xXCI9PT1uKSYmKGU9YSl9fWVsc2VcIm51bWJlclwiPT10eXBlb2YgZT9lJj0yNTU6XCJib29sZWFuXCI9PXR5cGVvZiBlJiYoZT1OdW1iZXIoZSkpO2lmKHQ8MHx8dGhpcy5sZW5ndGg8dHx8dGhpcy5sZW5ndGg8cil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihyPD10KXJldHVybiB0aGlzO3ZhciBvO2lmKHQ+Pj49MCxyPXZvaWQgMD09PXI/dGhpcy5sZW5ndGg6cj4+PjAsXCJudW1iZXJcIj09dHlwZW9mKGU9ZXx8MCkpZm9yKG89dDtvPHI7KytvKXRoaXNbb109ZTtlbHNle3ZhciBpPWMuaXNCdWZmZXIoZSk/ZTpjLmZyb20oZSxuKSxzPWkubGVuZ3RoO2lmKDA9PT1zKXRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSB2YWx1ZSBcIicrZSsnXCIgaXMgaW52YWxpZCBmb3IgYXJndW1lbnQgXCJ2YWx1ZVwiJyk7Zm9yKG89MDtvPHItdDsrK28pdGhpc1tvK3RdPWlbbyVzXX1yZXR1cm4gdGhpc307dmFyIHQ9L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiBJKGUsdCl7dmFyIHI7dD10fHwxLzA7Zm9yKHZhciBuPWUubGVuZ3RoLGE9bnVsbCxvPVtdLGk9MDtpPG47KytpKXtpZig1NTI5NTwocj1lLmNoYXJDb2RlQXQoaSkpJiZyPDU3MzQ0KXtpZighYSl7aWYoNTYzMTk8cil7LTE8KHQtPTMpJiZvLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWlmKGkrMT09PW4pey0xPCh0LT0zKSYmby5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1hPXI7Y29udGludWV9aWYocjw1NjMyMCl7LTE8KHQtPTMpJiZvLnB1c2goMjM5LDE5MSwxODkpLGE9cjtjb250aW51ZX1yPTY1NTM2KyhhLTU1Mjk2PDwxMHxyLTU2MzIwKX1lbHNlIGEmJi0xPCh0LT0zKSYmby5wdXNoKDIzOSwxOTEsMTg5KTtpZihhPW51bGwscjwxMjgpe2lmKC0tdDwwKWJyZWFrO28ucHVzaChyKX1lbHNlIGlmKHI8MjA0OCl7aWYoKHQtPTIpPDApYnJlYWs7by5wdXNoKHI+PjZ8MTkyLDYzJnJ8MTI4KX1lbHNlIGlmKHI8NjU1MzYpe2lmKCh0LT0zKTwwKWJyZWFrO28ucHVzaChyPj4xMnwyMjQscj4+NiY2M3wxMjgsNjMmcnwxMjgpfWVsc2V7aWYoIShyPDExMTQxMTIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZSBwb2ludFwiKTtpZigodC09NCk8MClicmVhaztvLnB1c2gocj4+MTh8MjQwLHI+PjEyJjYzfDEyOCxyPj42JjYzfDEyOCw2MyZyfDEyOCl9fXJldHVybiBvfWZ1bmN0aW9uIFAoZSl7cmV0dXJuIG4udG9CeXRlQXJyYXkoZnVuY3Rpb24oZSl7aWYoKGU9KGU9ZS5zcGxpdChcIj1cIilbMF0pLnRyaW0oKS5yZXBsYWNlKHQsXCJcIikpLmxlbmd0aDwyKXJldHVyblwiXCI7Zm9yKDtlLmxlbmd0aCU0IT0wOyllKz1cIj1cIjtyZXR1cm4gZX0oZSkpfWZ1bmN0aW9uIFIoZSx0LHIsbil7Zm9yKHZhciBhPTA7YTxuJiYhKGErcj49dC5sZW5ndGh8fGE+PWUubGVuZ3RoKTsrK2EpdFthK3JdPWVbYV07cmV0dXJuIGF9ZnVuY3Rpb24gRChlLHQpe3JldHVybiBlIGluc3RhbmNlb2YgdHx8bnVsbCE9ZSYmbnVsbCE9ZS5jb25zdHJ1Y3RvciYmbnVsbCE9ZS5jb25zdHJ1Y3Rvci5uYW1lJiZlLmNvbnN0cnVjdG9yLm5hbWU9PT10Lm5hbWV9ZnVuY3Rpb24gQShlKXtyZXR1cm4gZSE9ZX12YXIgaz1mdW5jdGlvbigpe2Zvcih2YXIgZT1cIjAxMjM0NTY3ODlhYmNkZWZcIix0PW5ldyBBcnJheSgyNTYpLHI9MDtyPDE2Oysrcilmb3IodmFyIG49MTYqcixhPTA7YTwxNjsrK2EpdFtuK2FdPWVbcl0rZVthXTtyZXR1cm4gdH0oKX0pLmNhbGwodGhpcyxGKFwiYnVmZmVyXCIpLkJ1ZmZlcil9LHtcImJhc2U2NC1qc1wiOjIsYnVmZmVyOjUsaWVlZTc1NDoxMH1dLDY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9ZShcIi4vXCIpLnBvbHlmaWxsKCl9LHtcIi4vXCI6N31dLDc6W2Z1bmN0aW9uKHoscixuKXsoZnVuY3Rpb24oaixWKXt2YXIgZSx0O2U9dGhpcyx0PWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbChlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfXZhciByPUFycmF5LmlzQXJyYXk/QXJyYXkuaXNBcnJheTpmdW5jdGlvbihlKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9LG49MCx0PXZvaWQgMCxhPXZvaWQgMCxpPWZ1bmN0aW9uKGUsdCl7ZFtuXT1lLGRbbisxXT10LDI9PT0obis9MikmJihhP2EoaCk6digpKX07dmFyIGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dm9pZCAwLG89ZXx8e30scz1vLk11dGF0aW9uT2JzZXJ2ZXJ8fG8uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixwPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBzZWxmJiZ2b2lkIDAhPT1qJiZcIltvYmplY3QgcHJvY2Vzc11cIj09PXt9LnRvU3RyaW5nLmNhbGwoaiksdT1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXkmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBpbXBvcnRTY3JpcHRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgTWVzc2FnZUNoYW5uZWw7ZnVuY3Rpb24gYygpe3ZhciBlPXNldFRpbWVvdXQ7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUoaCwxKX19dmFyIGQ9bmV3IEFycmF5KDFlMyk7ZnVuY3Rpb24gaCgpe2Zvcih2YXIgZT0wO2U8bjtlKz0yKXsoMCxkW2VdKShkW2UrMV0pLGRbZV09dm9pZCAwLGRbZSsxXT12b2lkIDB9bj0wfXZhciBtLGYseSxnLHY9dm9pZCAwO2Z1bmN0aW9uIGIoZSx0KXt2YXIgcj10aGlzLG49bmV3IHRoaXMuY29uc3RydWN0b3IoUyk7dm9pZCAwPT09blt4XSYmayhuKTt2YXIgYT1yLl9zdGF0ZTtpZihhKXt2YXIgbz1hcmd1bWVudHNbYS0xXTtpKGZ1bmN0aW9uKCl7cmV0dXJuIEQoYSxuLG8sci5fcmVzdWx0KX0pfWVsc2UgUChyLG4sZSx0KTtyZXR1cm4gbn1mdW5jdGlvbiBfKGUpe2lmKGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlLmNvbnN0cnVjdG9yPT09dGhpcylyZXR1cm4gZTt2YXIgdD1uZXcgdGhpcyhTKTtyZXR1cm4gTih0LGUpLHR9dj1wP2Z1bmN0aW9uKCl7cmV0dXJuIGoubmV4dFRpY2soaCl9OnM/KGY9MCx5PW5ldyBzKGgpLGc9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIikseS5vYnNlcnZlKGcse2NoYXJhY3RlckRhdGE6ITB9KSxmdW5jdGlvbigpe2cuZGF0YT1mPSsrZiUyfSk6dT8oKG09bmV3IE1lc3NhZ2VDaGFubmVsKS5wb3J0MS5vbm1lc3NhZ2U9aCxmdW5jdGlvbigpe3JldHVybiBtLnBvcnQyLnBvc3RNZXNzYWdlKDApfSk6dm9pZCAwPT09ZSYmXCJmdW5jdGlvblwiPT10eXBlb2Ygej9mdW5jdGlvbigpe3RyeXt2YXIgZT1GdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkucmVxdWlyZShcInZlcnR4XCIpO3JldHVybiB2b2lkIDAhPT0odD1lLnJ1bk9uTG9vcHx8ZS5ydW5PbkNvbnRleHQpP2Z1bmN0aW9uKCl7dChoKX06YygpfWNhdGNoKGUpe3JldHVybiBjKCl9fSgpOmMoKTt2YXIgeD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMik7ZnVuY3Rpb24gUygpe312YXIgdz12b2lkIDAsTT0xLEU9MjtmdW5jdGlvbiBUKGUsbixhKXtpKGZ1bmN0aW9uKHQpe3ZhciByPSExLGU9ZnVuY3Rpb24oZSx0LHIsbil7dHJ5e2UuY2FsbCh0LHIsbil9Y2F0Y2goZSl7cmV0dXJuIGV9fShhLG4sZnVuY3Rpb24oZSl7cnx8KHI9ITAsbiE9PWU/Tih0LGUpOkwodCxlKSl9LGZ1bmN0aW9uKGUpe3J8fChyPSEwLEkodCxlKSl9LHQuX2xhYmVsKTshciYmZSYmKHI9ITAsSSh0LGUpKX0sZSl9ZnVuY3Rpb24gQyhlLHQscil7dmFyIG4sYTt0LmNvbnN0cnVjdG9yPT09ZS5jb25zdHJ1Y3RvciYmcj09PWImJnQuY29uc3RydWN0b3IucmVzb2x2ZT09PV8/KG49ZSwoYT10KS5fc3RhdGU9PT1NP0wobixhLl9yZXN1bHQpOmEuX3N0YXRlPT09RT9JKG4sYS5fcmVzdWx0KTpQKGEsdm9pZCAwLGZ1bmN0aW9uKGUpe3JldHVybiBOKG4sZSl9LGZ1bmN0aW9uKGUpe3JldHVybiBJKG4sZSl9KSk6dm9pZCAwPT09cj9MKGUsdCk6bChyKT9UKGUsdCxyKTpMKGUsdCl9ZnVuY3Rpb24gTih0LGUpe2lmKHQ9PT1lKUkodCxuZXcgVHlwZUVycm9yKFwiWW91IGNhbm5vdCByZXNvbHZlIGEgcHJvbWlzZSB3aXRoIGl0c2VsZlwiKSk7ZWxzZSBpZihhPXR5cGVvZihuPWUpLG51bGw9PT1ufHxcIm9iamVjdFwiIT1hJiZcImZ1bmN0aW9uXCIhPWEpTCh0LGUpO2Vsc2V7dmFyIHI9dm9pZCAwO3RyeXtyPWUudGhlbn1jYXRjaChlKXtyZXR1cm4gdm9pZCBJKHQsZSl9Qyh0LGUscil9dmFyIG4sYX1mdW5jdGlvbiBPKGUpe2UuX29uZXJyb3ImJmUuX29uZXJyb3IoZS5fcmVzdWx0KSxSKGUpfWZ1bmN0aW9uIEwoZSx0KXtlLl9zdGF0ZT09PXcmJihlLl9yZXN1bHQ9dCxlLl9zdGF0ZT1NLDAhPT1lLl9zdWJzY3JpYmVycy5sZW5ndGgmJmkoUixlKSl9ZnVuY3Rpb24gSShlLHQpe2UuX3N0YXRlPT09dyYmKGUuX3N0YXRlPUUsZS5fcmVzdWx0PXQsaShPLGUpKX1mdW5jdGlvbiBQKGUsdCxyLG4pe3ZhciBhPWUuX3N1YnNjcmliZXJzLG89YS5sZW5ndGg7ZS5fb25lcnJvcj1udWxsLGFbb109dCxhW28rTV09cixhW28rRV09biwwPT09byYmZS5fc3RhdGUmJmkoUixlKX1mdW5jdGlvbiBSKGUpe3ZhciB0PWUuX3N1YnNjcmliZXJzLHI9ZS5fc3RhdGU7aWYoMCE9PXQubGVuZ3RoKXtmb3IodmFyIG49dm9pZCAwLGE9dm9pZCAwLG89ZS5fcmVzdWx0LGk9MDtpPHQubGVuZ3RoO2krPTMpbj10W2ldLGE9dFtpK3JdLG4/RChyLG4sYSxvKTphKG8pO2UuX3N1YnNjcmliZXJzLmxlbmd0aD0wfX1mdW5jdGlvbiBEKGUsdCxyLG4pe3ZhciBhPWwociksbz12b2lkIDAsaT12b2lkIDAscz0hMDtpZihhKXt0cnl7bz1yKG4pfWNhdGNoKGUpe3M9ITEsaT1lfWlmKHQ9PT1vKXJldHVybiB2b2lkIEkodCxuZXcgVHlwZUVycm9yKFwiQSBwcm9taXNlcyBjYWxsYmFjayBjYW5ub3QgcmV0dXJuIHRoYXQgc2FtZSBwcm9taXNlLlwiKSl9ZWxzZSBvPW47dC5fc3RhdGUhPT13fHwoYSYmcz9OKHQsbyk6ITE9PT1zP0kodCxpKTplPT09TT9MKHQsbyk6ZT09PUUmJkkodCxvKSl9dmFyIEE9MDtmdW5jdGlvbiBrKGUpe2VbeF09QSsrLGUuX3N0YXRlPXZvaWQgMCxlLl9yZXN1bHQ9dm9pZCAwLGUuX3N1YnNjcmliZXJzPVtdfXZhciBGPShVLnByb3RvdHlwZS5fZW51bWVyYXRlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3RoaXMuX3N0YXRlPT09dyYmdDxlLmxlbmd0aDt0KyspdGhpcy5fZWFjaEVudHJ5KGVbdF0sdCl9LFUucHJvdG90eXBlLl9lYWNoRW50cnk9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLl9pbnN0YW5jZUNvbnN0cnVjdG9yLG49ci5yZXNvbHZlO2lmKG49PT1fKXt2YXIgYT12b2lkIDAsbz12b2lkIDAsaT0hMTt0cnl7YT10LnRoZW59Y2F0Y2goZSl7aT0hMCxvPWV9aWYoYT09PWImJnQuX3N0YXRlIT09dyl0aGlzLl9zZXR0bGVkQXQodC5fc3RhdGUsZSx0Ll9yZXN1bHQpO2Vsc2UgaWYoXCJmdW5jdGlvblwiIT10eXBlb2YgYSl0aGlzLl9yZW1haW5pbmctLSx0aGlzLl9yZXN1bHRbZV09dDtlbHNlIGlmKHI9PT1CKXt2YXIgcz1uZXcgcihTKTtpP0kocyxvKTpDKHMsdCxhKSx0aGlzLl93aWxsU2V0dGxlQXQocyxlKX1lbHNlIHRoaXMuX3dpbGxTZXR0bGVBdChuZXcgcihmdW5jdGlvbihlKXtyZXR1cm4gZSh0KX0pLGUpfWVsc2UgdGhpcy5fd2lsbFNldHRsZUF0KG4odCksZSl9LFUucHJvdG90eXBlLl9zZXR0bGVkQXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMucHJvbWlzZTtuLl9zdGF0ZT09PXcmJih0aGlzLl9yZW1haW5pbmctLSxlPT09RT9JKG4scik6dGhpcy5fcmVzdWx0W3RdPXIpLDA9PT10aGlzLl9yZW1haW5pbmcmJkwobix0aGlzLl9yZXN1bHQpfSxVLnByb3RvdHlwZS5fd2lsbFNldHRsZUF0PWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztQKGUsdm9pZCAwLGZ1bmN0aW9uKGUpe3JldHVybiByLl9zZXR0bGVkQXQoTSx0LGUpfSxmdW5jdGlvbihlKXtyZXR1cm4gci5fc2V0dGxlZEF0KEUsdCxlKX0pfSxVKTtmdW5jdGlvbiBVKGUsdCl7dGhpcy5faW5zdGFuY2VDb25zdHJ1Y3Rvcj1lLHRoaXMucHJvbWlzZT1uZXcgZShTKSx0aGlzLnByb21pc2VbeF18fGsodGhpcy5wcm9taXNlKSxyKHQpPyh0aGlzLmxlbmd0aD10Lmxlbmd0aCx0aGlzLl9yZW1haW5pbmc9dC5sZW5ndGgsdGhpcy5fcmVzdWx0PW5ldyBBcnJheSh0aGlzLmxlbmd0aCksMD09PXRoaXMubGVuZ3RoP0wodGhpcy5wcm9taXNlLHRoaXMuX3Jlc3VsdCk6KHRoaXMubGVuZ3RoPXRoaXMubGVuZ3RofHwwLHRoaXMuX2VudW1lcmF0ZSh0KSwwPT09dGhpcy5fcmVtYWluaW5nJiZMKHRoaXMucHJvbWlzZSx0aGlzLl9yZXN1bHQpKSk6SSh0aGlzLnByb21pc2UsbmV3IEVycm9yKFwiQXJyYXkgTWV0aG9kcyBtdXN0IGJlIHByb3ZpZGVkIGFuIEFycmF5XCIpKX12YXIgQj0oRy5wcm90b3R5cGUuY2F0Y2g9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbihudWxsLGUpfSxHLnByb3RvdHlwZS5maW5hbGx5PWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuY29uc3RydWN0b3I7cmV0dXJuIGwodCk/dGhpcy50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiByLnJlc29sdmUodCgpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGV9KX0sZnVuY3Rpb24oZSl7cmV0dXJuIHIucmVzb2x2ZSh0KCkpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBlfSl9KTp0aGlzLnRoZW4odCx0KX0sRyk7ZnVuY3Rpb24gRyhlKXt0aGlzW3hdPUErKyx0aGlzLl9yZXN1bHQ9dGhpcy5fc3RhdGU9dm9pZCAwLHRoaXMuX3N1YnNjcmliZXJzPVtdLFMhPT1lJiYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiWW91IG11c3QgcGFzcyBhIHJlc29sdmVyIGZ1bmN0aW9uIGFzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB0aGUgcHJvbWlzZSBjb25zdHJ1Y3RvclwiKX0oKSx0aGlzIGluc3RhbmNlb2YgRz9mdW5jdGlvbih0LGUpe3RyeXtlKGZ1bmN0aW9uKGUpe04odCxlKX0sZnVuY3Rpb24oZSl7SSh0LGUpfSl9Y2F0Y2goZSl7SSh0LGUpfX0odGhpcyxlKTpmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdQcm9taXNlJzogUGxlYXNlIHVzZSB0aGUgJ25ldycgb3BlcmF0b3IsIHRoaXMgb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi5cIil9KCkpfXJldHVybiBCLnByb3RvdHlwZS50aGVuPWIsQi5hbGw9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBGKHRoaXMsZSkucHJvbWlzZX0sQi5yYWNlPWZ1bmN0aW9uKGEpe3ZhciBvPXRoaXM7cmV0dXJuIHIoYSk/bmV3IG8oZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9YS5sZW5ndGgsbj0wO248cjtuKyspby5yZXNvbHZlKGFbbl0pLnRoZW4oZSx0KX0pOm5ldyBvKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQobmV3IFR5cGVFcnJvcihcIllvdSBtdXN0IHBhc3MgYW4gYXJyYXkgdG8gcmFjZS5cIikpfSl9LEIucmVzb2x2ZT1fLEIucmVqZWN0PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyB0aGlzKFMpO3JldHVybiBJKHQsZSksdH0sQi5fc2V0U2NoZWR1bGVyPWZ1bmN0aW9uKGUpe2E9ZX0sQi5fc2V0QXNhcD1mdW5jdGlvbihlKXtpPWV9LEIuX2FzYXA9aSxCLnBvbHlmaWxsPWZ1bmN0aW9uKCl7dmFyIGU9dm9pZCAwO2lmKHZvaWQgMCE9PVYpZT1WO2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYpZT1zZWxmO2Vsc2UgdHJ5e2U9RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfWNhdGNoKGUpe3Rocm93IG5ldyBFcnJvcihcInBvbHlmaWxsIGZhaWxlZCBiZWNhdXNlIGdsb2JhbCBvYmplY3QgaXMgdW5hdmFpbGFibGUgaW4gdGhpcyBlbnZpcm9ubWVudFwiKX12YXIgdD1lLlByb21pc2U7aWYodCl7dmFyIHI9bnVsbDt0cnl7cj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodC5yZXNvbHZlKCkpfWNhdGNoKGUpe31pZihcIltvYmplY3QgUHJvbWlzZV1cIj09PXImJiF0LmNhc3QpcmV0dXJufWUuUHJvbWlzZT1CfSxCLlByb21pc2U9Qn0sXCJvYmplY3RcIj09dHlwZW9mIG4mJnZvaWQgMCE9PXI/ci5leHBvcnRzPXQoKTplLkVTNlByb21pc2U9dCgpfSkuY2FsbCh0aGlzLHooXCJfcHJvY2Vzc1wiKSxcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9KX0se19wcm9jZXNzOjE1fV0sODpbZnVuY3Rpb24oZSxuLGEpeyFmdW5jdGlvbihlLHQpe2lmKDAsdm9pZCAwIT09YSYmdm9pZCAwIT09bil0KGEsbik7ZWxzZXt2YXIgcj17ZXhwb3J0czp7fX07dChyLmV4cG9ydHMsciksZS5mZXRjaEpzb25wPXIuZXhwb3J0c319KHRoaXMsZnVuY3Rpb24oZSx0KXtcInVzZSBzdHJpY3RcIjt2YXIgcj01ZTMsbj1cImNhbGxiYWNrXCI7ZnVuY3Rpb24gYyh0KXt0cnl7ZGVsZXRlIHdpbmRvd1t0XX1jYXRjaChlKXt3aW5kb3dbdF09dm9pZCAwfX1mdW5jdGlvbiBkKGUpe3ZhciB0PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUpO3QmJmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5yZW1vdmVDaGlsZCh0KX10LmV4cG9ydHM9ZnVuY3Rpb24obyl7dmFyIGk9YXJndW1lbnRzLmxlbmd0aDw9MXx8dm9pZCAwPT09YXJndW1lbnRzWzFdP3t9OmFyZ3VtZW50c1sxXSxzPW8sbD1pLnRpbWVvdXR8fHIscD1pLmpzb25wQ2FsbGJhY2t8fG4sdT12b2lkIDA7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsZSl7dmFyIHI9aS5qc29ucENhbGxiYWNrRnVuY3Rpb258fFwianNvbnBfXCIrRGF0ZS5ub3coKStcIl9cIitNYXRoLmNlaWwoMWU1Kk1hdGgucmFuZG9tKCkpLG49cCtcIl9cIityO3dpbmRvd1tyXT1mdW5jdGlvbihlKXt0KHtvazohMCxqc29uOmZ1bmN0aW9uKCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZShlKX19KSx1JiZjbGVhclRpbWVvdXQodSksZChuKSxjKHIpfSxzKz0tMT09PXMuaW5kZXhPZihcIj9cIik/XCI/XCI6XCImXCI7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTthLnNldEF0dHJpYnV0ZShcInNyY1wiLFwiXCIrcytwK1wiPVwiK3IpLGkuY2hhcnNldCYmYS5zZXRBdHRyaWJ1dGUoXCJjaGFyc2V0XCIsaS5jaGFyc2V0KSxhLmlkPW4sZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLmFwcGVuZENoaWxkKGEpLHU9c2V0VGltZW91dChmdW5jdGlvbigpe2UobmV3IEVycm9yKFwiSlNPTlAgcmVxdWVzdCB0byBcIitvK1wiIHRpbWVkIG91dFwiKSksYyhyKSxkKG4pLHdpbmRvd1tyXT1mdW5jdGlvbigpe2Mocil9fSxsKSxhLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKG5ldyBFcnJvcihcIkpTT05QIHJlcXVlc3QgdG8gXCIrbytcIiBmYWlsZWRcIikpLGMociksZChuKSx1JiZjbGVhclRpbWVvdXQodSl9fSl9fSl9LHt9XSw5OltmdW5jdGlvbihlLHQscil7dmFyIG49bnx8ZnVuY3Rpb24ocyl7XCJ1c2Ugc3RyaWN0XCI7aWYoISh2b2lkIDA9PT1zfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiYvTVNJRSBbMS05XVxcLi8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkpe3ZhciBlPXMuZG9jdW1lbnQsbD1mdW5jdGlvbigpe3JldHVybiBzLlVSTHx8cy53ZWJraXRVUkx8fHN9LHA9ZS5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsXCJhXCIpLHU9XCJkb3dubG9hZFwiaW4gcCxjPS9jb25zdHJ1Y3Rvci9pLnRlc3Qocy5IVE1MRWxlbWVudCl8fHMuc2FmYXJpLGQ9L0NyaU9TXFwvW1xcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLGg9ZnVuY3Rpb24oZSl7KHMuc2V0SW1tZWRpYXRlfHxzLnNldFRpbWVvdXQpKGZ1bmN0aW9uKCl7dGhyb3cgZX0sMCl9LG09ZnVuY3Rpb24oZSl7c2V0VGltZW91dChmdW5jdGlvbigpe1wic3RyaW5nXCI9PXR5cGVvZiBlP2woKS5yZXZva2VPYmplY3RVUkwoZSk6ZS5yZW1vdmUoKX0sNGU0KX0sZj1mdW5jdGlvbihlKXtyZXR1cm4vXlxccyooPzp0ZXh0XFwvXFxTKnxhcHBsaWNhdGlvblxcL3htbHxcXFMqXFwvXFxTKlxcK3htbClcXHMqOy4qY2hhcnNldFxccyo9XFxzKnV0Zi04L2kudGVzdChlLnR5cGUpP25ldyBCbG9iKFtTdHJpbmcuZnJvbUNoYXJDb2RlKDY1Mjc5KSxlXSx7dHlwZTplLnR5cGV9KTplfSxuPWZ1bmN0aW9uKGUscix0KXt0fHwoZT1mKGUpKTtmdW5jdGlvbiBuKCl7IWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49KHQ9W10uY29uY2F0KHQpKS5sZW5ndGg7bi0tOyl7dmFyIGE9ZVtcIm9uXCIrdFtuXV07aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYSl0cnl7YS5jYWxsKGUscnx8ZSl9Y2F0Y2goZSl7aChlKX19fShvLFwid3JpdGVzdGFydCBwcm9ncmVzcyB3cml0ZSB3cml0ZWVuZFwiLnNwbGl0KFwiIFwiKSl9dmFyIGEsbz10aGlzLGk9XCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIj09PWUudHlwZTtpZihvLnJlYWR5U3RhdGU9by5JTklULHUpcmV0dXJuIGE9bCgpLmNyZWF0ZU9iamVjdFVSTChlKSx2b2lkIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgZSx0O3AuaHJlZj1hLHAuZG93bmxvYWQ9cixlPXAsdD1uZXcgTW91c2VFdmVudChcImNsaWNrXCIpLGUuZGlzcGF0Y2hFdmVudCh0KSxuKCksbShhKSxvLnJlYWR5U3RhdGU9by5ET05FfSk7IWZ1bmN0aW9uKCl7aWYoKGR8fGkmJmMpJiZzLkZpbGVSZWFkZXIpe3ZhciB0PW5ldyBGaWxlUmVhZGVyO3JldHVybiB0Lm9ubG9hZGVuZD1mdW5jdGlvbigpe3ZhciBlPWQ/dC5yZXN1bHQ6dC5yZXN1bHQucmVwbGFjZSgvXmRhdGE6W147XSo7LyxcImRhdGE6YXR0YWNobWVudC9maWxlO1wiKTtzLm9wZW4oZSxcIl9ibGFua1wiKXx8KHMubG9jYXRpb24uaHJlZj1lKSxlPXZvaWQgMCxvLnJlYWR5U3RhdGU9by5ET05FLG4oKX0sdC5yZWFkQXNEYXRhVVJMKGUpLG8ucmVhZHlTdGF0ZT1vLklOSVR9KGE9YXx8bCgpLmNyZWF0ZU9iamVjdFVSTChlKSxpKT9zLmxvY2F0aW9uLmhyZWY9YTpzLm9wZW4oYSxcIl9ibGFua1wiKXx8KHMubG9jYXRpb24uaHJlZj1hKTtvLnJlYWR5U3RhdGU9by5ET05FLG4oKSxtKGEpfSgpfSx0PW4ucHJvdG90eXBlO3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3ImJm5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdD10fHxlLm5hbWV8fFwiZG93bmxvYWRcIixyfHwoZT1mKGUpKSxuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihlLHQpfToodC5hYm9ydD1mdW5jdGlvbigpe30sdC5yZWFkeVN0YXRlPXQuSU5JVD0wLHQuV1JJVElORz0xLHQuRE9ORT0yLHQuZXJyb3I9dC5vbndyaXRlc3RhcnQ9dC5vbnByb2dyZXNzPXQub253cml0ZT10Lm9uYWJvcnQ9dC5vbmVycm9yPXQub253cml0ZWVuZD1udWxsLGZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbmV3IG4oZSx0fHxlLm5hbWV8fFwiZG93bmxvYWRcIixyKX0pfX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGZ8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvd3x8dGhpcy5jb250ZW50KTt2b2lkIDAhPT10JiZ0LmV4cG9ydHMmJih0LmV4cG9ydHMuc2F2ZUFzPW4pfSx7fV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXtyLnJlYWQ9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbyxpLHM9OCphLW4tMSxsPSgxPDxzKS0xLHA9bD4+MSx1PS03LGM9cj9hLTE6MCxkPXI/LTE6MSxoPWVbdCtjXTtmb3IoYys9ZCxvPWgmKDE8PC11KS0xLGg+Pj0tdSx1Kz1zOzA8dTtvPTI1NipvK2VbdCtjXSxjKz1kLHUtPTgpO2ZvcihpPW8mKDE8PC11KS0xLG8+Pj0tdSx1Kz1uOzA8dTtpPTI1NippK2VbdCtjXSxjKz1kLHUtPTgpO2lmKDA9PT1vKW89MS1wO2Vsc2V7aWYobz09PWwpcmV0dXJuIGk/TmFOOjEvMCooaD8tMToxKTtpKz1NYXRoLnBvdygyLG4pLG8tPXB9cmV0dXJuKGg/LTE6MSkqaSpNYXRoLnBvdygyLG8tbil9LHIud3JpdGU9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe3ZhciBpLHMsbCxwPTgqby1hLTEsdT0oMTw8cCktMSxjPXU+PjEsZD0yMz09PWE/TWF0aC5wb3coMiwtMjQpLU1hdGgucG93KDIsLTc3KTowLGg9bj8wOm8tMSxtPW4/MTotMSxmPXQ8MHx8MD09PXQmJjEvdDwwPzE6MDtmb3IodD1NYXRoLmFicyh0KSxpc05hTih0KXx8dD09PTEvMD8ocz1pc05hTih0KT8xOjAsaT11KTooaT1NYXRoLmZsb29yKE1hdGgubG9nKHQpL01hdGguTE4yKSx0KihsPU1hdGgucG93KDIsLWkpKTwxJiYoaS0tLGwqPTIpLDI8PSh0Kz0xPD1pK2M/ZC9sOmQqTWF0aC5wb3coMiwxLWMpKSpsJiYoaSsrLGwvPTIpLHU8PWkrYz8ocz0wLGk9dSk6MTw9aStjPyhzPSh0KmwtMSkqTWF0aC5wb3coMixhKSxpKz1jKToocz10Kk1hdGgucG93KDIsYy0xKSpNYXRoLnBvdygyLGEpLGk9MCkpOzg8PWE7ZVtyK2hdPTI1NSZzLGgrPW0scy89MjU2LGEtPTgpO2ZvcihpPWk8PGF8cyxwKz1hOzA8cDtlW3IraF09MjU1JmksaCs9bSxpLz0yNTYscC09OCk7ZVtyK2gtbV18PTEyOCpmfX0se31dLDExOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG47ZnVuY3Rpb24geShlLHQpe3JldHVybiBlLmI9PT10LmImJmUuYT09PXQuYX1mdW5jdGlvbiBnKGUsdCl7cmV0dXJuIGUuYjx0LmJ8fGUuYj09PXQuYiYmZS5hPD10LmF9ZnVuY3Rpb24gdihlLHQscil7dmFyIG49dC5iLWUuYixhPXIuYi10LmI7cmV0dXJuIDA8bithP248YT90LmEtZS5hK24vKG4rYSkqKGUuYS1yLmEpOnQuYS1yLmErYS8obithKSooci5hLWUuYSk6MH1mdW5jdGlvbiBiKGUsdCxyKXt2YXIgbj10LmItZS5iLGE9ci5iLXQuYjtyZXR1cm4gMDxuK2E/KHQuYS1yLmEpKm4rKHQuYS1lLmEpKmE6MH1mdW5jdGlvbiBfKGUsdCl7cmV0dXJuIGUuYTx0LmF8fGUuYT09PXQuYSYmZS5iPD10LmJ9ZnVuY3Rpb24geChlLHQscil7dmFyIG49dC5hLWUuYSxhPXIuYS10LmE7cmV0dXJuIDA8bithP248YT90LmItZS5iK24vKG4rYSkqKGUuYi1yLmIpOnQuYi1yLmIrYS8obithKSooci5iLWUuYik6MH1mdW5jdGlvbiBTKGUsdCxyKXt2YXIgbj10LmEtZS5hLGE9ci5hLXQuYTtyZXR1cm4gMDxuK2E/KHQuYi1yLmIpKm4rKHQuYi1lLmIpKmE6MH1mdW5jdGlvbiB3KGUsdCxyLG4pe3JldHVybihlPWU8MD8wOmUpPD0ocj1yPDA/MDpyKT8wPT09cj8odCtuKS8yOnQrZS8oZStyKSoobi10KTpuK3IvKGUrcikqKHQtbil9ZnVuY3Rpb24gaShlKXt2YXIgdD1vKGUuYik7cmV0dXJuIGEodCxlLmMpLGEodC5iLGUuYykscyh0LGUuYSksdH1mdW5jdGlvbiBNKGUsdCl7dmFyIHI9ITEsbj0hMTtlIT09dCYmKHQuYSE9PWUuYSYmKG49ITAsZih0LmEsZS5hKSksdC5kIT09ZS5kJiYocj0hMCxsKHQuZCxlLmQpKSxoKHQsZSksbnx8KGEodCxlLmEpLGUuYS5jPWUpLHJ8fChzKHQsZS5kKSxlLmQuYT1lKSl9ZnVuY3Rpb24gYyhlKXt2YXIgdD1lLmIscj0hMTtlLmQhPT1lLmIuZCYmKHI9ITAsbChlLmQsZS5iLmQpKSxlLmM9PT1lP2YoZS5hLG51bGwpOihlLmIuZC5hPUooZSksZS5hLmM9ZS5jLGgoZSxKKGUpKSxyfHxzKGUsZS5kKSksdC5jPT09dD8oZih0LmEsbnVsbCksbCh0LmQsbnVsbCkpOihlLmQuYT1KKHQpLHQuYS5jPXQuYyxoKHQsSih0KSkpLG0oZSl9ZnVuY3Rpb24gRShlKXt2YXIgdD1vKGUpLHI9dC5iO3JldHVybiBoKHQsZS5lKSx0LmE9ZS5iLmEsYShyLHQuYSksdC5kPXIuZD1lLmQsdD10LmIsaChlLmIsSihlLmIpKSxoKGUuYix0KSxlLmIuYT10LmEsdC5iLmEuYz10LmIsdC5iLmQ9ZS5iLmQsdC5mPWUuZix0LmIuZj1lLmIuZix0fWZ1bmN0aW9uIGQoZSx0KXt2YXIgcj0hMSxuPW8oZSksYT1uLmI7cmV0dXJuIHQuZCE9PWUuZCYmKHI9ITAsbCh0LmQsZS5kKSksaChuLGUuZSksaChhLHQpLG4uYT1lLmIuYSxhLmE9dC5hLG4uZD1hLmQ9ZS5kLGUuZC5hPWEscnx8cyhuLGUuZCksbn1mdW5jdGlvbiBvKGUpe3ZhciB0PW5ldyBLLHI9bmV3IEssbj1lLmIuaDtyZXR1cm4oKChyLmg9bikuYi5oPXQpLmg9ZSkuYi5oPXIsdC5iPXIsKCh0LmM9dCkuZT1yKS5iPXQsKHIuYz1yKS5lPXR9ZnVuY3Rpb24gaChlLHQpe3ZhciByPWUuYyxuPXQuYztyLmIuZT10LChuLmIuZT1lKS5jPW4sdC5jPXJ9ZnVuY3Rpb24gYShlLHQpe3ZhciByPXQuZixuPW5ldyBlZSh0LHIpO2ZvcihyLmU9bixyPSh0LmY9bikuYz1lO3IuYT1uLChyPXIuYykhPT1lOyk7fWZ1bmN0aW9uIHMoZSx0KXt2YXIgcj10LmQsbj1uZXcgUSh0LHIpO2ZvcihyLmI9biwodC5kPW4pLmE9ZSxuLmM9dC5jLHI9ZTtyLmQ9biwocj1yLmUpIT09ZTspO31mdW5jdGlvbiBtKGUpe3ZhciB0PWUuaDtlPWUuYi5oLCh0LmIuaD1lKS5iLmg9dH1mdW5jdGlvbiBmKGUsdCl7Zm9yKHZhciByPWUuYyxuPXI7bi5hPXQsKG49bi5jKSE9PXI7KTtyPWUuZiwoKG49ZS5lKS5mPXIpLmU9bn1mdW5jdGlvbiBsKGUsdCl7Zm9yKHZhciByPWUuYSxuPXI7bi5kPXQsKG49bi5lKSE9PXI7KTtyPWUuZCwoKG49ZS5iKS5kPXIpLmI9bn1mdW5jdGlvbiBUKGUpe3ZhciB0PTA7cmV0dXJuIE1hdGguYWJzKGVbMV0pPk1hdGguYWJzKGVbMF0pJiYodD0xKSxNYXRoLmFicyhlWzJdKT5NYXRoLmFicyhlW3RdKSYmKHQ9MiksdH12YXIgQz00ZTE1MDtmdW5jdGlvbiBOKGUsdCl7ZS5mKz10LmYsZS5iLmYrPXQuYi5mfWZ1bmN0aW9uIHAoZSx0LHIpe3JldHVybiBlPWUuYSx0PXQuYSxyPXIuYSx0LmIuYT09PWU/ci5iLmE9PT1lP2codC5hLHIuYSk/YihyLmIuYSx0LmEsci5hKTw9MDowPD1iKHQuYi5hLHIuYSx0LmEpOmIoci5iLmEsZSxyLmEpPD0wOnIuYi5hPT09ZT8wPD1iKHQuYi5hLGUsdC5hKToodD12KHQuYi5hLGUsdC5hKSwoZT12KHIuYi5hLGUsci5hKSk8PXQpfWZ1bmN0aW9uIE8oZSl7ZS5hLmk9bnVsbDt2YXIgdD1lLmU7dC5hLmM9dC5jLHQuYy5hPXQuYSxlLmU9bnVsbH1mdW5jdGlvbiB1KGUsdCl7YyhlLmEpLGUuYz0hMSwoZS5hPXQpLmk9ZX1mdW5jdGlvbiBMKGUpe2Zvcih2YXIgdD1lLmEuYTsoZT1kZShlKSkuYS5hPT09dDspO3JldHVybiBlLmMmJih1KGUsdD1kKGNlKGUpLmEuYixlLmEuZSkpLGU9ZGUoZSkpLGV9ZnVuY3Rpb24gSShlLHQscil7dmFyIG49bmV3IHVlO3JldHVybiBuLmE9cixuLmU9VyhlLmYsdC5lLG4pLHIuaT1ufWZ1bmN0aW9uIFAoZSx0KXtzd2l0Y2goZS5zKXtjYXNlIDEwMDEzMDpyZXR1cm4gMCE9KDEmdCk7Y2FzZSAxMDAxMzE6cmV0dXJuIDAhPT10O2Nhc2UgMTAwMTMyOnJldHVybiAwPHQ7Y2FzZSAxMDAxMzM6cmV0dXJuIHQ8MDtjYXNlIDEwMDEzNDpyZXR1cm4gMjw9dHx8dDw9LTJ9cmV0dXJuITF9ZnVuY3Rpb24gUihlKXt2YXIgdD1lLmEscj10LmQ7ci5jPWUuZCxyLmE9dCxPKGUpfWZ1bmN0aW9uIEQoZSx0LHIpe2Zvcih0PShlPXQpLmE7ZSE9PXI7KXtlLmM9ITE7dmFyIG49Y2UoZSksYT1uLmE7aWYoYS5hIT09dC5hKXtpZighbi5jKXtSKGUpO2JyZWFrfXUobixhPWQodC5jLmIsYS5iKSl9dC5jIT09YSYmKE0oSihhKSxhKSxNKHQsYSkpLFIoZSksdD1uLmEsZT1ufXJldHVybiB0fWZ1bmN0aW9uIEEoZSx0LHIsbixhLG8pe2Zvcih2YXIgaT0hMDtJKGUsdCxyLmIpLChyPXIuYykhPT1uOyk7Zm9yKG51bGw9PT1hJiYoYT1jZSh0KS5hLmIuYyk7KHI9KG49Y2UodCkpLmEuYikuYT09PWEuYTspci5jIT09YSYmKE0oSihyKSxyKSxNKEooYSkscikpLG4uZj10LmYtci5mLG4uZD1QKGUsbi5mKSx0LmI9ITAsIWkmJkIoZSx0KSYmKE4ocixhKSxPKHQpLGMoYSkpLGk9ITEsdD1uLGE9cjt0LmI9ITAsbyYmaihlLHQpfWZ1bmN0aW9uIGsoZSx0LHIsbixhKXt2YXIgbz1bdC5nWzBdLHQuZ1sxXSx0LmdbMl1dO3QuZD1udWxsLHQuZD1lLm8mJmUubyhvLHIsbixlLmMpfHxudWxsLG51bGw9PT10LmQmJihhP2Uubnx8KFooZSwxMDAxNTYpLGUubj0hMCk6dC5kPXJbMF0pfWZ1bmN0aW9uIEYoZSx0LHIpe3ZhciBuPVtudWxsLG51bGwsbnVsbCxudWxsXTtuWzBdPXQuYS5kLG5bMV09ci5hLmQsayhlLHQuYSxuLFsuNSwuNSwwLDBdLCExKSxNKHQscil9ZnVuY3Rpb24gVShlLHQscixuLGEpe3ZhciBvPU1hdGguYWJzKHQuYi1lLmIpK01hdGguYWJzKHQuYS1lLmEpLGk9TWF0aC5hYnMoci5iLWUuYikrTWF0aC5hYnMoci5hLWUuYSkscz1hKzE7blthXT0uNSppLyhvK2kpLG5bc109LjUqby8obytpKSxlLmdbMF0rPW5bYV0qdC5nWzBdK25bc10qci5nWzBdLGUuZ1sxXSs9blthXSp0LmdbMV0rbltzXSpyLmdbMV0sZS5nWzJdKz1uW2FdKnQuZ1syXStuW3NdKnIuZ1syXX1mdW5jdGlvbiBCKGUsdCl7dmFyIHI9Y2UodCksbj10LmEsYT1yLmE7aWYoZyhuLmEsYS5hKSl7aWYoMDxiKGEuYi5hLG4uYSxhLmEpKXJldHVybiExO2lmKHkobi5hLGEuYSkpe2lmKG4uYSE9PWEuYSl7cj1lLmU7dmFyIG89bi5hLmg7aWYoMDw9byl7dmFyIGk9KHI9ci5iKS5kLHM9ci5lLGw9ci5jLHA9bFtvXTtpW3BdPWlbci5hXSwobFtpW3BdXT1wKTw9LS1yLmEmJihwPD0xP2xlKHIscCk6ZyhzW2lbcD4+MV1dLHNbaVtwXV0pP2xlKHIscCk6cGUocixwKSksc1tvXT1udWxsLGxbb109ci5iLHIuYj1vfWVsc2UgZm9yKHIuY1stKG8rMSldPW51bGw7MDxyLmEmJm51bGw9PT1yLmNbci5kW3IuYS0xXV07KS0tci5hO0YoZSxKKGEpLG4pfX1lbHNlIEUoYS5iKSxNKG4sSihhKSksdC5iPXIuYj0hMH1lbHNle2lmKGIobi5iLmEsYS5hLG4uYSk8MClyZXR1cm4hMTtkZSh0KS5iPXQuYj0hMCxFKG4uYiksTShKKGEpLG4pfXJldHVybiEwfWZ1bmN0aW9uIEcoZSx0KXt2YXIgcj1jZSh0KSxuPXQuYSxhPXIuYSxvPW4uYSxpPWEuYSxzPW4uYi5hLGw9YS5iLmEscD1uZXcgZWU7aWYoYihzLGUuYSxvKSxiKGwsZS5hLGkpLG89PT1pfHxNYXRoLm1pbihvLmEscy5hKT5NYXRoLm1heChpLmEsbC5hKSlyZXR1cm4hMTtpZihnKG8saSkpe2lmKDA8YihsLG8saSkpcmV0dXJuITF9ZWxzZSBpZihiKHMsaSxvKTwwKXJldHVybiExO3ZhciB1LGMsZD1zLGg9byxtPWwsZj1pO2lmKGcoZCxoKXx8KHU9ZCxkPWgsaD11KSxnKG0sZil8fCh1PW0sbT1mLGY9dSksZyhkLG0pfHwodT1kLGQ9bSxtPXUsdT1oLGg9ZixmPXUpLGcobSxoKT9nKGgsZik/KCh1PXYoZCxtLGgpKSsoYz12KG0saCxmKSk8MCYmKHU9LXUsYz0tYykscC5iPXcodSxtLmIsYyxoLmIpKTooKHU9YihkLG0saCkpKyhjPS1iKGQsZixoKSk8MCYmKHU9LXUsYz0tYykscC5iPXcodSxtLmIsYyxmLmIpKTpwLmI9KG0uYitoLmIpLzIsXyhkLGgpfHwodT1kLGQ9aCxoPXUpLF8obSxmKXx8KHU9bSxtPWYsZj11KSxfKGQsbSl8fCh1PWQsZD1tLG09dSx1PWgsaD1mLGY9dSksXyhtLGgpP18oaCxmKT8oKHU9eChkLG0saCkpKyhjPXgobSxoLGYpKTwwJiYodT0tdSxjPS1jKSxwLmE9dyh1LG0uYSxjLGguYSkpOigodT1TKGQsbSxoKSkrKGM9LVMoZCxmLGgpKTwwJiYodT0tdSxjPS1jKSxwLmE9dyh1LG0uYSxjLGYuYSkpOnAuYT0obS5hK2guYSkvMixnKHAsZS5hKSYmKHAuYj1lLmEuYixwLmE9ZS5hLmEpLGQ9ZyhvLGkpP286aSxnKGQscCkmJihwLmI9ZC5iLHAuYT1kLmEpLHkocCxvKXx8eShwLGkpKXJldHVybiBCKGUsdCksITE7aWYoIXkocyxlLmEpJiYwPD1iKHMsZS5hLHApfHwheShsLGUuYSkmJmIobCxlLmEscCk8PTApe2lmKGw9PT1lLmEpcmV0dXJuIEUobi5iKSxNKGEuYixuKSxuPWNlKHQ9TCh0KSkuYSxEKGUsY2UodCksciksQShlLHQsSihuKSxuLG4sITApLCEwO2lmKHMhPT1lLmEpcmV0dXJuIDA8PWIocyxlLmEscCkmJihkZSh0KS5iPXQuYj0hMCxFKG4uYiksbi5hLmI9ZS5hLmIsbi5hLmE9ZS5hLmEpLGIobCxlLmEscCk8PTAmJih0LmI9ci5iPSEwLEUoYS5iKSxhLmEuYj1lLmEuYixhLmEuYT1lLmEuYSksITE7Zm9yKEUoYS5iKSxNKG4uZSxKKGEpKSxpPShvPXI9dCkuYS5iLmE7KG89ZGUobykpLmEuYi5hPT09aTspO3JldHVybiBvPWNlKHQ9bykuYS5iLmMsci5hPUooYSksQShlLHQsKGE9RChlLHIsbnVsbCkpLmMsbi5iLmMsbywhMCksITB9cmV0dXJuIEUobi5iKSxFKGEuYiksTShKKGEpLG4pLG4uYS5iPXAuYixuLmEuYT1wLmEsbi5hLmg9cmUoZS5lLG4uYSksbj1uLmEsYT1bMCwwLDAsMF0scD1bby5kLHMuZCxpLmQsbC5kXSxuLmdbMF09bi5nWzFdPW4uZ1syXT0wLFUobixvLHMsYSwwKSxVKG4saSxsLGEsMiksayhlLG4scCxhLCEwKSxkZSh0KS5iPXQuYj1yLmI9ITAsITF9ZnVuY3Rpb24gaihlLHQpe2Zvcih2YXIgcj1jZSh0KTs7KXtmb3IoO3IuYjspcj1jZSh0PXIpO2lmKCF0LmImJihudWxsPT09KHQ9ZGUocj10KSl8fCF0LmIpKWJyZWFrO3QuYj0hMTt2YXIgbixhPXQuYSxvPXIuYTtpZihuPWEuYi5hIT09by5iLmEpZTp7dmFyIGk9Y2Uobj10KSxzPW4uYSxsPWkuYSxwPXZvaWQgMDtpZihnKHMuYi5hLGwuYi5hKSl7aWYoYihzLmIuYSxsLmIuYSxzLmEpPDApe249ITE7YnJlYWsgZX1kZShuKS5iPW4uYj0hMCxwPUUocyksTShsLmIscCkscC5kLmM9bi5kfWVsc2V7aWYoMDxiKGwuYi5hLHMuYi5hLGwuYSkpe249ITE7YnJlYWsgZX1uLmI9aS5iPSEwLHA9RShsKSxNKHMuZSxsLmIpLHAuYi5kLmM9bi5kfW49ITB9aWYobiYmKHIuYz8oTyhyKSxjKG8pLG89KHI9Y2UodCkpLmEpOnQuYyYmKE8odCksYyhhKSxhPSh0PWRlKHIpKS5hKSksYS5hIT09by5hKWlmKGEuYi5hPT09by5iLmF8fHQuY3x8ci5jfHxhLmIuYSE9PWUuYSYmby5iLmEhPT1lLmEpQihlLHQpO2Vsc2UgaWYoRyhlLHQpKWJyZWFrO2EuYT09PW8uYSYmYS5iLmE9PT1vLmIuYSYmKE4obyxhKSxPKHQpLGMoYSksdD1kZShyKSl9fWZ1bmN0aW9uIFYoZSx0KXtmb3IodmFyIHI9KGUuYT10KS5jO251bGw9PT1yLmk7KWlmKChyPXIuYyk9PT10LmMpe3I9ZTt2YXIgbj10OyhpPW5ldyB1ZSkuYT1uLmMuYjtmb3IodmFyIGE9KGw9ci5mKS5hO251bGwhPT0oYT1hLmEpLmImJiFsLmMobC5iLGksYS5iKTspO3ZhciBvPWNlKGw9YS5iKSxpPWwuYTthPW8uYTtpZigwPT09YihpLmIuYSxuLGkuYSkpeSgoaT1sLmEpLmEsbil8fHkoaS5iLmEsbil8fChFKGkuYiksbC5jJiYoYyhpLmMpLGwuYz0hMSksTShuLmMsaSksVihyLG4pKTtlbHNle3ZhciBzPWcoYS5iLmEsaS5iLmEpP2w6bztvPXZvaWQgMDtsLmR8fHMuYz8obz1zPT09bD9kKG4uYy5iLGkuZSk6ZChhLmIuYy5iLG4uYykuYixzLmM/dShzLG8pOigobD1JKGk9cixsLG8pKS5mPWRlKGwpLmYrbC5hLmYsbC5kPVAoaSxsLmYpKSxWKHIsbikpOkEocixsLG4uYyxuLmMsbnVsbCwhMCl9cmV0dXJufWlmKGw9KGk9Y2Uocj1MKHIuaSkpKS5hLChpPUQoZSxpLG51bGwpKS5jPT09bCl7aT0obD1pKS5jLGE9Y2Uociksbz1yLmEscz1hLmE7dmFyIGwscD0hMTtvLmIuYSE9PXMuYi5hJiZHKGUscikseShvLmEsZS5hKSYmKE0oSihpKSxvKSxpPWNlKHI9TChyKSkuYSxEKGUsY2UociksYSkscD0hMCkseShzLmEsZS5hKSYmKE0obCxKKHMpKSxsPUQoZSxhLG51bGwpLHA9ITApLHA/QShlLHIsbC5jLGksaSwhMCk6KG49ZyhzLmEsby5hKT9KKHMpOm8sQShlLHIsbj1kKGwuYy5iLG4pLG4uYyxuLmMsITEpLG4uYi5pLmM9ITAsaihlLHIpKX1lbHNlIEEoZSxyLGkuYyxsLGwsITApfWZ1bmN0aW9uIHooZSx0KXt2YXIgcj1uZXcgdWUsbj1pKGUuYik7bi5hLmI9QyxuLmEuYT10LG4uYi5hLmI9LUMsbi5iLmEuYT10LGUuYT1uLmIuYSxyLmE9bixyLmY9MCxyLmQ9ITEsci5jPSExLHIuaD0hMCxyLmI9ITEsbj1XKG49ZS5mLG4uYSxyKSxyLmU9bn1mdW5jdGlvbiBIKGUpe3RoaXMuYT1uZXcgWCx0aGlzLmI9ZSx0aGlzLmM9cH1mdW5jdGlvbiBXKGUsdCxyKXtmb3IoO251bGwhPT0odD10LmMpLmImJiFlLmMoZS5iLHQuYixyKTspO3JldHVybiBlPW5ldyBYKHIsdC5hLHQpLHQuYS5jPWUsdC5hPWV9ZnVuY3Rpb24gWChlLHQscil7dGhpcy5iPWV8fG51bGwsdGhpcy5hPXR8fHRoaXMsdGhpcy5jPXJ8fHRoaXN9ZnVuY3Rpb24gcSgpe3RoaXMuZD0wLHRoaXMucD10aGlzLmI9dGhpcy5xPW51bGwsdGhpcy5qPVswLDAsMF0sdGhpcy5zPTEwMDEzMCx0aGlzLm49ITEsdGhpcy5vPXRoaXMuYT10aGlzLmU9dGhpcy5mPW51bGwsdGhpcy5tPSExLHRoaXMuYz10aGlzLnI9dGhpcy5pPXRoaXMuaz10aGlzLmw9dGhpcy5oPW51bGx9ZnVuY3Rpb24gWShlLHQpe2lmKGUuZCE9PXQpZm9yKDtlLmQhPT10OylpZihlLmQ8dClzd2l0Y2goZS5kKXtjYXNlIDA6WihlLDEwMDE1MSksZS51KG51bGwpO2JyZWFrO2Nhc2UgMTpaKGUsMTAwMTUyKSxlLnQoKX1lbHNlIHN3aXRjaChlLmQpe2Nhc2UgMjpaKGUsMTAwMTU0KSxlLnYoKTticmVhaztjYXNlIDE6WihlLDEwMDE1MyksZS53KCl9fWZ1bmN0aW9uIFooZSx0KXtlLnAmJmUucCh0LGUuYyl9ZnVuY3Rpb24gUShlLHQpe3RoaXMuYj1lfHx0aGlzLHRoaXMuZD10fHx0aGlzLHRoaXMuYT1udWxsLHRoaXMuYz0hMX1mdW5jdGlvbiBLKCl7KHRoaXMuaD10aGlzKS5pPXRoaXMuZD10aGlzLmE9dGhpcy5lPXRoaXMuYz10aGlzLmI9bnVsbCx0aGlzLmY9MH1mdW5jdGlvbiBKKGUpe3JldHVybiBlLmIuZX1mdW5jdGlvbiAkKCl7dGhpcy5jPW5ldyBlZSx0aGlzLmE9bmV3IFEsdGhpcy5iPW5ldyBLLHRoaXMuZD1uZXcgSyx0aGlzLmIuYj10aGlzLmQsdGhpcy5kLmI9dGhpcy5ifWZ1bmN0aW9uIGVlKGUsdCl7dGhpcy5lPWV8fHRoaXMsdGhpcy5mPXR8fHRoaXMsdGhpcy5kPXRoaXMuYz1udWxsLHRoaXMuZz1bMCwwLDBdLHRoaXMuaD10aGlzLmE9dGhpcy5iPTB9ZnVuY3Rpb24gdGUoKXt0aGlzLmM9W10sdGhpcy5kPW51bGwsdGhpcy5hPTAsdGhpcy5lPSExLHRoaXMuYj1uZXcgYWV9ZnVuY3Rpb24gcmUoZSx0KXtpZihlLmUpe3ZhciByLG49ZS5iLGE9KytuLmE7cmV0dXJuIDIqYT5uLmYmJihuLmYqPTIsbi5jPW9lKG4uYyxuLmYrMSkpLDA9PT1uLmI/cj1hOihyPW4uYixuLmI9bi5jW24uYl0pLG4uZVtyXT10LG4uY1tyXT1hLG4uZFthXT1yLG4uaCYmcGUobixhKSxyfXJldHVybiBuPWUuYSsrLGUuY1tuXT10LC0obisxKX1mdW5jdGlvbiBuZShlKXtpZigwPT09ZS5hKXJldHVybiBzZShlLmIpO3ZhciB0PWUuY1tlLmRbZS5hLTFdXTtpZigwIT09ZS5iLmEmJmcoaWUoZS5iKSx0KSlyZXR1cm4gc2UoZS5iKTtmb3IoOy0tZS5hLDA8ZS5hJiZudWxsPT09ZS5jW2UuZFtlLmEtMV1dOyk7cmV0dXJuIHR9ZnVuY3Rpb24gYWUoKXt0aGlzLmQ9b2UoWzBdLDMzKSx0aGlzLmU9W251bGwsbnVsbF0sdGhpcy5jPVswLDBdLHRoaXMuYT0wLHRoaXMuZj0zMix0aGlzLmI9MCx0aGlzLmg9ITEsdGhpcy5kWzFdPTF9ZnVuY3Rpb24gb2UoZSx0KXtmb3IodmFyIHI9QXJyYXkodCksbj0wO248ZS5sZW5ndGg7bisrKXJbbl09ZVtuXTtmb3IoO248dDtuKyspcltuXT0wO3JldHVybiByfWZ1bmN0aW9uIGllKGUpe3JldHVybiBlLmVbZS5kWzFdXX1mdW5jdGlvbiBzZShlKXt2YXIgdD1lLmQscj1lLmUsbj1lLmMsYT10WzFdLG89clthXTtyZXR1cm4gMDxlLmEmJih0WzFdPXRbZS5hXSxuW3RbMV1dPTEsclthXT1udWxsLG5bYV09ZS5iLGUuYj1hLDA8LS1lLmEmJmxlKGUsMSkpLG99ZnVuY3Rpb24gbGUoZSx0KXtmb3IodmFyIHI9ZS5kLG49ZS5lLGE9ZS5jLG89dCxpPXJbb107Oyl7dmFyIHM9bzw8MTtzPGUuYSYmZyhuW3JbcysxXV0sbltyW3NdXSkmJihzKz0xKTt2YXIgbD1yW3NdO2lmKHM+ZS5hfHxnKG5baV0sbltsXSkpe2FbcltvXT1pXT1vO2JyZWFrfWFbcltvXT1sXT1vLG89c319ZnVuY3Rpb24gcGUoZSx0KXtmb3IodmFyIHI9ZS5kLG49ZS5lLGE9ZS5jLG89dCxpPXJbb107Oyl7dmFyIHM9bz4+MSxsPXJbc107aWYoMD09c3x8ZyhuW2xdLG5baV0pKXthW3Jbb109aV09bzticmVha31hW3Jbb109bF09byxvPXN9fWZ1bmN0aW9uIHVlKCl7dGhpcy5lPXRoaXMuYT1udWxsLHRoaXMuZj0wLHRoaXMuYz10aGlzLmI9dGhpcy5oPXRoaXMuZD0hMX1mdW5jdGlvbiBjZShlKXtyZXR1cm4gZS5lLmMuYn1mdW5jdGlvbiBkZShlKXtyZXR1cm4gZS5lLmEuYn0obj1xLnByb3RvdHlwZSkueD1mdW5jdGlvbigpe1kodGhpcywwKX0sbi5CPWZ1bmN0aW9uKGUsdCl7c3dpdGNoKGUpe2Nhc2UgMTAwMTQyOnJldHVybjtjYXNlIDEwMDE0MDpzd2l0Y2godCl7Y2FzZSAxMDAxMzA6Y2FzZSAxMDAxMzE6Y2FzZSAxMDAxMzI6Y2FzZSAxMDAxMzM6Y2FzZSAxMDAxMzQ6cmV0dXJuIHZvaWQodGhpcy5zPXQpfWJyZWFrO2Nhc2UgMTAwMTQxOnJldHVybiB2b2lkKHRoaXMubT0hIXQpO2RlZmF1bHQ6cmV0dXJuIHZvaWQgWih0aGlzLDEwMDkwMCl9Wih0aGlzLDEwMDkwMSl9LG4ueT1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSAxMDAxNDI6cmV0dXJuIDA7Y2FzZSAxMDAxNDA6cmV0dXJuIHRoaXMucztjYXNlIDEwMDE0MTpyZXR1cm4gdGhpcy5tO2RlZmF1bHQ6Wih0aGlzLDEwMDkwMCl9cmV0dXJuITF9LG4uQT1mdW5jdGlvbihlLHQscil7dGhpcy5qWzBdPWUsdGhpcy5qWzFdPXQsdGhpcy5qWzJdPXJ9LG4uej1mdW5jdGlvbihlLHQpe3ZhciByPXR8fG51bGw7c3dpdGNoKGUpe2Nhc2UgMTAwMTAwOmNhc2UgMTAwMTA2OnRoaXMuaD1yO2JyZWFrO2Nhc2UgMTAwMTA0OmNhc2UgMTAwMTEwOnRoaXMubD1yO2JyZWFrO2Nhc2UgMTAwMTAxOmNhc2UgMTAwMTA3OnRoaXMuaz1yO2JyZWFrO2Nhc2UgMTAwMTAyOmNhc2UgMTAwMTA4OnRoaXMuaT1yO2JyZWFrO2Nhc2UgMTAwMTAzOmNhc2UgMTAwMTA5OnRoaXMucD1yO2JyZWFrO2Nhc2UgMTAwMTA1OmNhc2UgMTAwMTExOnRoaXMubz1yO2JyZWFrO2Nhc2UgMTAwMTEyOnRoaXMucj1yO2JyZWFrO2RlZmF1bHQ6Wih0aGlzLDEwMDkwMCl9fSxuLkM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0hMSxuPVswLDAsMF07WSh0aGlzLDIpO2Zvcih2YXIgYT0wO2E8MzsrK2Epe3ZhciBvPWVbYV07bzwtMWUxNTAmJihvPS0xZTE1MCxyPSEwKSwxZTE1MDxvJiYobz0xZTE1MCxyPSEwKSxuW2FdPW99ciYmWih0aGlzLDEwMDE1NSksbnVsbD09PShyPXRoaXMucSk/TShyPWkodGhpcy5iKSxyLmIpOihFKHIpLHI9ci5lKSxyLmEuZD10LHIuYS5nWzBdPW5bMF0sci5hLmdbMV09blsxXSxyLmEuZ1syXT1uWzJdLHIuZj0xLHIuYi5mPS0xLHRoaXMucT1yfSxuLnU9ZnVuY3Rpb24oZSl7WSh0aGlzLDApLHRoaXMuZD0xLHRoaXMuYj1uZXcgJCx0aGlzLmM9ZX0sbi50PWZ1bmN0aW9uKCl7WSh0aGlzLDEpLHRoaXMuZD0yLHRoaXMucT1udWxsfSxuLnY9ZnVuY3Rpb24oKXtZKHRoaXMsMiksdGhpcy5kPTF9LG4udz1mdW5jdGlvbigpe1kodGhpcywxKSx0aGlzLmQ9MDt2YXIgZSx0LHI9ITEsbj1bbD10aGlzLmpbMF0sYT10aGlzLmpbMV0saT10aGlzLmpbMl1dO2lmKDA9PT1sJiYwPT09YSYmMD09PWkpe2Zvcih2YXIgYT1bLTJlMTUwLC0yZTE1MCwtMmUxNTBdLG89WzJlMTUwLDJlMTUwLDJlMTUwXSxpPVtdLHM9W10sbD0ocj10aGlzLmIuYykuZTtsIT09cjtsPWwuZSlmb3IodmFyIHA9MDtwPDM7KytwKXt2YXIgdT1sLmdbcF07dTxvW3BdJiYob1twXT11LHNbcF09bCksdT5hW3BdJiYoYVtwXT11LGlbcF09bCl9aWYobD0wLGFbMV0tb1sxXT5hWzBdLW9bMF0mJihsPTEpLGFbMl0tb1syXT5hW2xdLW9bbF0mJihsPTIpLG9bbF0+PWFbbF0pblswXT0wLG5bMV09MCxuWzJdPTE7ZWxzZXtmb3IoYT0wLG89c1tsXSxpPWlbbF0scz1bMCwwLDBdLG89W28uZ1swXS1pLmdbMF0sby5nWzFdLWkuZ1sxXSxvLmdbMl0taS5nWzJdXSxwPVswLDAsMF0sbD1yLmU7bCE9PXI7bD1sLmUpcFswXT1sLmdbMF0taS5nWzBdLHBbMV09bC5nWzFdLWkuZ1sxXSxwWzJdPWwuZ1syXS1pLmdbMl0sc1swXT1vWzFdKnBbMl0tb1syXSpwWzFdLHNbMV09b1syXSpwWzBdLW9bMF0qcFsyXSxzWzJdPW9bMF0qcFsxXS1vWzFdKnBbMF0sYTwodT1zWzBdKnNbMF0rc1sxXSpzWzFdK3NbMl0qc1syXSkmJihhPXUsblswXT1zWzBdLG5bMV09c1sxXSxuWzJdPXNbMl0pO2E8PTAmJihuWzBdPW5bMV09blsyXT0wLG5bVChvKV09MSl9cj0hMH1mb3Iocz1UKG4pLGw9dGhpcy5iLmMsYT0ocysxKSUzLGk9KHMrMiklMyxzPTA8bltzXT8xOi0xLG49bC5lO24hPT1sO249bi5lKW4uYj1uLmdbYV0sbi5hPXMqbi5nW2ldO2lmKHIpe2ZvcihuPTAsbD0ocj10aGlzLmIuYSkuYjtsIT09cjtsPWwuYilpZighKChhPWwuYSkuZjw9MCkpZm9yKDtuKz0oYS5hLmItYS5iLmEuYikqKGEuYS5hK2EuYi5hLmEpLChhPWEuZSkhPT1sLmE7KTtpZihuPDApZm9yKHI9KG49dGhpcy5iLmMpLmU7ciE9PW47cj1yLmUpci5hPS1yLmF9Zm9yKHRoaXMubj0hMSxsPShuPXRoaXMuYi5iKS5oO2whPT1uO2w9cilyPWwuaCxhPWwuZSx5KGwuYSxsLmIuYSkmJmwuZS5lIT09bCYmKEYodGhpcyxhLGwpLGMobCksYT0obD1hKS5lKSxhLmU9PT1sJiYoYSE9PWwmJihhIT09ciYmYSE9PXIuYnx8KHI9ci5oKSxjKGEpKSxsIT09ciYmbCE9PXIuYnx8KHI9ci5oKSxjKGwpKTtmb3IodGhpcy5lPW49bmV3IHRlLGw9KHI9dGhpcy5iLmMpLmU7bCE9PXI7bD1sLmUpbC5oPXJlKG4sbCk7Zm9yKCFmdW5jdGlvbihlKXtlLmQ9W107Zm9yKHZhciB0PTA7dDxlLmE7dCsrKWUuZFt0XT10O2UuZC5zb3J0KGZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBnKHJbZV0sclt0XSk/MTotMX19KGUuYykpLGUuZT0hMCxmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5hOzE8PXQ7LS10KWxlKGUsdCk7ZS5oPSEwfShlLmIpfShuKSx0aGlzLmY9bmV3IEgodGhpcykseih0aGlzLC1DKSx6KHRoaXMsQyk7bnVsbCE9PShuPW5lKHRoaXMuZSkpOyl7Zm9yKDs7KXtlOmlmKGw9dGhpcy5lLDA9PT1sLmEpcj1pZShsLmIpO2Vsc2UgaWYocj1sLmNbbC5kW2wuYS0xXV0sMCE9PWwuYi5hJiYobD1pZShsLmIpLGcobCxyKSkpe3I9bDticmVhayBlfWlmKG51bGw9PT1yfHwheShyLG4pKWJyZWFrO3I9bmUodGhpcy5lKSxGKHRoaXMsbi5jLHIuYyl9Vih0aGlzLG4pfWZvcih0aGlzLmE9dGhpcy5mLmEuYS5iLmEuYSxuPTA7bnVsbCE9PShyPXRoaXMuZi5hLmEuYik7KXIuaHx8KytuLE8ocik7Zm9yKHRoaXMuZj1udWxsLChuPXRoaXMuZSkuYj1udWxsLG4uZD1udWxsLHRoaXMuZT1uLmM9bnVsbCxsPShuPXRoaXMuYikuYS5iO2whPT1uLmE7bD1yKXI9bC5iLChsPWwuYSkuZS5lPT09bCYmKE4obC5jLGwpLGMobCkpO2lmKCF0aGlzLm4pe2lmKG49dGhpcy5iLHRoaXMubSlmb3IobD1uLmIuaDtsIT09bi5iO2w9cilyPWwuaCxsLmIuZC5jIT09bC5kLmM/bC5mPWwuZC5jPzE6LTE6YyhsKTtlbHNlIGZvcihsPW4uYS5iO2whPT1uLmE7bD1yKWlmKHI9bC5iLGwuYyl7Zm9yKGw9bC5hO2cobC5iLmEsbC5hKTtsPWwuYy5iKTtmb3IoO2cobC5hLGwuYi5hKTtsPWwuZSk7Zm9yKGE9bC5jLmIsaT12b2lkIDA7bC5lIT09YTspaWYoZyhsLmIuYSxhLmEpKXtmb3IoO2EuZSE9PWwmJihnKCh0PWEuZSkuYi5hLHQuYSl8fGIoYS5hLGEuYi5hLGEuZS5iLmEpPD0wKTspYT0oaT1kKGEuZSxhKSkuYjthPWEuYy5ifWVsc2V7Zm9yKDthLmUhPT1sJiYoZygoZT1sLmMuYikuYSxlLmIuYSl8fDA8PWIobC5iLmEsbC5hLGwuYy5iLmEpKTspbD0oaT1kKGwsbC5jLmIpKS5iO2w9bC5lfWZvcig7YS5lLmUhPT1sOylhPShpPWQoYS5lLGEpKS5ifWlmKHRoaXMuaHx8dGhpcy5pfHx0aGlzLmt8fHRoaXMubClpZih0aGlzLm0pe2ZvcihyPShuPXRoaXMuYikuYS5iO3IhPT1uLmE7cj1yLmIpaWYoci5jKXtmb3IodGhpcy5oJiZ0aGlzLmgoMix0aGlzLmMpLGw9ci5hO3RoaXMuayYmdGhpcy5rKGwuYS5kLHRoaXMuYyksKGw9bC5lKSE9PXIuYTspO3RoaXMuaSYmdGhpcy5pKHRoaXMuYyl9fWVsc2V7Zm9yKG49dGhpcy5iLHI9ISF0aGlzLmwsbD0hMSxhPS0xLGk9bi5hLmQ7aSE9PW4uYTtpPWkuZClpZihpLmMpZm9yKGx8fCh0aGlzLmgmJnRoaXMuaCg0LHRoaXMuYyksbD0hMCkscz1pLmE7ciYmKGEhPT0obz1zLmIuZC5jPzA6MSkmJihhPW8sdGhpcy5sJiZ0aGlzLmwoISFhLHRoaXMuYykpKSx0aGlzLmsmJnRoaXMuayhzLmEuZCx0aGlzLmMpLChzPXMuZSkhPT1pLmE7KTtsJiZ0aGlzLmkmJnRoaXMuaSh0aGlzLmMpfWlmKHRoaXMucil7Zm9yKGw9KG49dGhpcy5iKS5hLmI7bCE9PW4uYTtsPXIpaWYocj1sLmIsIWwuYyl7Zm9yKGk9KGE9bC5hKS5lLHM9dm9pZCAwO2k9KHM9aSkuZSwocy5kPW51bGwpPT09cy5iLmQmJihzLmM9PT1zP2Yocy5hLG51bGwpOihzLmEuYz1zLmMsaChzLEoocykpKSwobz1zLmIpLmM9PT1vP2Yoby5hLG51bGwpOihvLmEuYz1vLmMsaChvLEoobykpKSxtKHMpKSxzIT09YTspO2E9bC5kLCgobD1sLmIpLmQ9YSkuYj1sfXJldHVybiB0aGlzLnIodGhpcy5iKSx2b2lkKHRoaXMuYz10aGlzLmI9bnVsbCl9fXRoaXMuYj10aGlzLmM9bnVsbH0sdGhpcy5saWJ0ZXNzPXtHbHVUZXNzZWxhdG9yOnEsd2luZGluZ1J1bGU6e0dMVV9URVNTX1dJTkRJTkdfT0REOjEwMDEzMCxHTFVfVEVTU19XSU5ESU5HX05PTlpFUk86MTAwMTMxLEdMVV9URVNTX1dJTkRJTkdfUE9TSVRJVkU6MTAwMTMyLEdMVV9URVNTX1dJTkRJTkdfTkVHQVRJVkU6MTAwMTMzLEdMVV9URVNTX1dJTkRJTkdfQUJTX0dFUV9UV086MTAwMTM0fSxwcmltaXRpdmVUeXBlOntHTF9MSU5FX0xPT1A6MixHTF9UUklBTkdMRVM6NCxHTF9UUklBTkdMRV9TVFJJUDo1LEdMX1RSSUFOR0xFX0ZBTjo2fSxlcnJvclR5cGU6e0dMVV9URVNTX01JU1NJTkdfQkVHSU5fUE9MWUdPTjoxMDAxNTEsR0xVX1RFU1NfTUlTU0lOR19FTkRfUE9MWUdPTjoxMDAxNTMsR0xVX1RFU1NfTUlTU0lOR19CRUdJTl9DT05UT1VSOjEwMDE1MixHTFVfVEVTU19NSVNTSU5HX0VORF9DT05UT1VSOjEwMDE1NCxHTFVfVEVTU19DT09SRF9UT09fTEFSR0U6MTAwMTU1LEdMVV9URVNTX05FRURfQ09NQklORV9DQUxMQkFDSzoxMDAxNTZ9LGdsdUVudW06e0dMVV9URVNTX01FU0g6MTAwMTEyLEdMVV9URVNTX1RPTEVSQU5DRToxMDAxNDIsR0xVX1RFU1NfV0lORElOR19SVUxFOjEwMDE0MCxHTFVfVEVTU19CT1VOREFSWV9PTkxZOjEwMDE0MSxHTFVfSU5WQUxJRF9FTlVNOjEwMDkwMCxHTFVfSU5WQUxJRF9WQUxVRToxMDA5MDEsR0xVX1RFU1NfQkVHSU46MTAwMTAwLEdMVV9URVNTX1ZFUlRFWDoxMDAxMDEsR0xVX1RFU1NfRU5EOjEwMDEwMixHTFVfVEVTU19FUlJPUjoxMDAxMDMsR0xVX1RFU1NfRURHRV9GTEFHOjEwMDEwNCxHTFVfVEVTU19DT01CSU5FOjEwMDEwNSxHTFVfVEVTU19CRUdJTl9EQVRBOjEwMDEwNixHTFVfVEVTU19WRVJURVhfREFUQToxMDAxMDcsR0xVX1RFU1NfRU5EX0RBVEE6MTAwMTA4LEdMVV9URVNTX0VSUk9SX0RBVEE6MTAwMTA5LEdMVV9URVNTX0VER0VfRkxBR19EQVRBOjEwMDExMCxHTFVfVEVTU19DT01CSU5FX0RBVEE6MTAwMTExfX0scS5wcm90b3R5cGUuZ2x1RGVsZXRlVGVzcz1xLnByb3RvdHlwZS54LHEucHJvdG90eXBlLmdsdVRlc3NQcm9wZXJ0eT1xLnByb3RvdHlwZS5CLHEucHJvdG90eXBlLmdsdUdldFRlc3NQcm9wZXJ0eT1xLnByb3RvdHlwZS55LHEucHJvdG90eXBlLmdsdVRlc3NOb3JtYWw9cS5wcm90b3R5cGUuQSxxLnByb3RvdHlwZS5nbHVUZXNzQ2FsbGJhY2s9cS5wcm90b3R5cGUueixxLnByb3RvdHlwZS5nbHVUZXNzVmVydGV4PXEucHJvdG90eXBlLkMscS5wcm90b3R5cGUuZ2x1VGVzc0JlZ2luUG9seWdvbj1xLnByb3RvdHlwZS51LHEucHJvdG90eXBlLmdsdVRlc3NCZWdpbkNvbnRvdXI9cS5wcm90b3R5cGUudCxxLnByb3RvdHlwZS5nbHVUZXNzRW5kQ29udG91cj1xLnByb3RvdHlwZS52LHEucHJvdG90eXBlLmdsdVRlc3NFbmRQb2x5Z29uPXEucHJvdG90eXBlLncsdm9pZCAwIT09dCYmKHQuZXhwb3J0cz10aGlzLmxpYnRlc3MpfSx7fV0sMTI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBOKGUsdCxyLG4pe2Zvcih2YXIgYT1lW3QrK10sbz0xPDxhLGk9MStvLHM9MStpLGw9YSsxLHA9KDE8PGwpLTEsdT0wLGM9MCxkPTAsaD1lW3QrK10sbT1uZXcgSW50MzJBcnJheSg0MDk2KSxmPW51bGw7Oyl7Zm9yKDt1PDE2JiYwIT09aDspY3w9ZVt0KytdPDx1LHUrPTgsMT09PWg/aD1lW3QrK106LS1oO2lmKHU8bClicmVhazt2YXIgeT1jJnA7aWYoYz4+PWwsdS09bCx5IT1vKXtpZih5PT1pKWJyZWFrO2Zvcih2YXIgZz15PHM/eTpmLHY9MCxiPWc7bzxiOyliPW1bYl0+PjgsKyt2O3ZhciBfPWI7aWYobjxkK3YrKGchPT15PzE6MCkpcmV0dXJuIHZvaWQgY29uc29sZS5sb2coXCJXYXJuaW5nLCBnaWYgc3RyZWFtIGxvbmdlciB0aGFuIGV4cGVjdGVkLlwiKTtyW2QrK109Xzt2YXIgeD1kKz12O2ZvcihnIT09eSYmKHJbZCsrXT1fKSxiPWc7di0tOyliPW1bYl0sclstLXhdPTI1NSZiLGI+Pj04O251bGwhPT1mJiZzPDQwOTYmJihtW3MrK109Zjw8OHxfLHArMTw9cyYmbDwxMiYmKCsrbCxwPXA8PDF8MSkpLGY9eX1lbHNlIHM9MStpLHA9KDE8PChsPWErMSkpLTEsZj1udWxsfXJldHVybiBkIT09biYmY29uc29sZS5sb2coXCJXYXJuaW5nLCBnaWYgc3RyZWFtIHNob3J0ZXIgdGhhbiBleHBlY3RlZC5cIikscn10cnl7ci5HaWZXcml0ZXI9ZnVuY3Rpb24oZyxlLHQscil7dmFyIHY9MCxuPXZvaWQgMD09PShyPXZvaWQgMD09PXI/e306cikubG9vcD9udWxsOnIubG9vcCxiPXZvaWQgMD09PXIucGFsZXR0ZT9udWxsOnIucGFsZXR0ZTtpZihlPD0wfHx0PD0wfHw2NTUzNTxlfHw2NTUzNTx0KXRocm93IG5ldyBFcnJvcihcIldpZHRoL0hlaWdodCBpbnZhbGlkLlwiKTtmdW5jdGlvbiBfKGUpe3ZhciB0PWUubGVuZ3RoO2lmKHQ8Mnx8MjU2PHR8fHQmdC0xKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZS9jb2xvciBsZW5ndGgsIG11c3QgYmUgcG93ZXIgb2YgMiBhbmQgMiAuLiAyNTYuXCIpO3JldHVybiB0fWdbdisrXT03MSxnW3YrK109NzMsZ1t2KytdPTcwLGdbdisrXT01NixnW3YrK109NTcsZ1t2KytdPTk3O3ZhciBhPTAsbz0wO2lmKG51bGwhPT1iKXtmb3IodmFyIGk9XyhiKTtpPj49MTspKythO2lmKGk9MTw8YSwtLWEsdm9pZCAwIT09ci5iYWNrZ3JvdW5kKXtpZihpPD0obz1yLmJhY2tncm91bmQpKXRocm93IG5ldyBFcnJvcihcIkJhY2tncm91bmQgaW5kZXggb3V0IG9mIHJhbmdlLlwiKTtpZigwPT09byl0aHJvdyBuZXcgRXJyb3IoXCJCYWNrZ3JvdW5kIGluZGV4IGV4cGxpY2l0bHkgcGFzc2VkIGFzIDAuXCIpfX1pZihnW3YrK109MjU1JmUsZ1t2KytdPWU+PjgmMjU1LGdbdisrXT0yNTUmdCxnW3YrK109dD4+OCYyNTUsZ1t2KytdPShudWxsIT09Yj8xMjg6MCl8YSxnW3YrK109byxnW3YrK109MCxudWxsIT09Yilmb3IodmFyIHM9MCxsPWIubGVuZ3RoO3M8bDsrK3Mpe3ZhciBwPWJbc107Z1t2KytdPXA+PjE2JjI1NSxnW3YrK109cD4+OCYyNTUsZ1t2KytdPTI1NSZwfWlmKG51bGwhPT1uKXtpZihuPDB8fDY1NTM1PG4pdGhyb3cgbmV3IEVycm9yKFwiTG9vcCBjb3VudCBpbnZhbGlkLlwiKTtnW3YrK109MzMsZ1t2KytdPTI1NSxnW3YrK109MTEsZ1t2KytdPTc4LGdbdisrXT02OSxnW3YrK109ODQsZ1t2KytdPTgzLGdbdisrXT02NyxnW3YrK109NjUsZ1t2KytdPTgwLGdbdisrXT02OSxnW3YrK109NTAsZ1t2KytdPTQ2LGdbdisrXT00OCxnW3YrK109MyxnW3YrK109MSxnW3YrK109MjU1Jm4sZ1t2KytdPW4+PjgmMjU1LGdbdisrXT0wfXZhciB4PSExO3RoaXMuYWRkRnJhbWU9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe2lmKCEwPT09eCYmKC0tdix4PSExKSxvPXZvaWQgMD09PW8/e306byxlPDB8fHQ8MHx8NjU1MzU8ZXx8NjU1MzU8dCl0aHJvdyBuZXcgRXJyb3IoXCJ4L3kgaW52YWxpZC5cIik7aWYocjw9MHx8bjw9MHx8NjU1MzU8cnx8NjU1MzU8bil0aHJvdyBuZXcgRXJyb3IoXCJXaWR0aC9IZWlnaHQgaW52YWxpZC5cIik7aWYoYS5sZW5ndGg8cipuKXRocm93IG5ldyBFcnJvcihcIk5vdCBlbm91Z2ggcGl4ZWxzIGZvciB0aGUgZnJhbWUgc2l6ZS5cIik7dmFyIGk9ITAscz1vLnBhbGV0dGU7aWYobnVsbD09cyYmKGk9ITEscz1iKSxudWxsPT1zKXRocm93IG5ldyBFcnJvcihcIk11c3Qgc3VwcGx5IGVpdGhlciBhIGxvY2FsIG9yIGdsb2JhbCBwYWxldHRlLlwiKTtmb3IodmFyIGw9XyhzKSxwPTA7bD4+PTE7KSsrcDtsPTE8PHA7dmFyIHU9dm9pZCAwPT09by5kZWxheT8wOm8uZGVsYXksYz12b2lkIDA9PT1vLmRpc3Bvc2FsPzA6by5kaXNwb3NhbDtpZihjPDB8fDM8Yyl0aHJvdyBuZXcgRXJyb3IoXCJEaXNwb3NhbCBvdXQgb2YgcmFuZ2UuXCIpO3ZhciBkPSExLGg9MDtpZih2b2lkIDAhPT1vLnRyYW5zcGFyZW50JiZudWxsIT09by50cmFuc3BhcmVudCYmKGQ9ITAsKGg9by50cmFuc3BhcmVudCk8MHx8bDw9aCkpdGhyb3cgbmV3IEVycm9yKFwiVHJhbnNwYXJlbnQgY29sb3IgaW5kZXguXCIpO2lmKDA9PT1jJiYhZCYmMD09PXV8fChnW3YrK109MzMsZ1t2KytdPTI0OSxnW3YrK109NCxnW3YrK109Yzw8MnwoITA9PT1kPzE6MCksZ1t2KytdPTI1NSZ1LGdbdisrXT11Pj44JjI1NSxnW3YrK109aCxnW3YrK109MCksZ1t2KytdPTQ0LGdbdisrXT0yNTUmZSxnW3YrK109ZT4+OCYyNTUsZ1t2KytdPTI1NSZ0LGdbdisrXT10Pj44JjI1NSxnW3YrK109MjU1JnIsZ1t2KytdPXI+PjgmMjU1LGdbdisrXT0yNTUmbixnW3YrK109bj4+OCYyNTUsZ1t2KytdPSEwPT09aT8xMjh8cC0xOjAsITA9PT1pKWZvcih2YXIgbT0wLGY9cy5sZW5ndGg7bTxmOysrbSl7dmFyIHk9c1ttXTtnW3YrK109eT4+MTYmMjU1LGdbdisrXT15Pj44JjI1NSxnW3YrK109MjU1Jnl9cmV0dXJuIHY9ZnVuY3Rpb24odCxyLGUsbil7dFtyKytdPWU7dmFyIGE9cisrLG89MTw8ZSxpPW8tMSxzPTErbyxsPTErcyxwPWUrMSx1PTAsYz0wO2Z1bmN0aW9uIGQoZSl7Zm9yKDtlPD11Oyl0W3IrK109MjU1JmMsYz4+PTgsdS09OCxyPT09YSsyNTYmJih0W2FdPTI1NSxhPXIrKyl9ZnVuY3Rpb24gaChlKXtjfD1lPDx1LHUrPXAsZCg4KX12YXIgbT1uWzBdJmksZj17fTtoKG8pO2Zvcih2YXIgeT0xLGc9bi5sZW5ndGg7eTxnOysreSl7dmFyIHY9blt5XSZpLGI9bTw8OHx2LF89ZltiXTtpZih2b2lkIDA9PT1fKXtmb3IoY3w9bTw8dSx1Kz1wOzg8PXU7KXRbcisrXT0yNTUmYyxjPj49OCx1LT04LHI9PT1hKzI1NiYmKHRbYV09MjU1LGE9cisrKTs0MDk2PT09bD8oaChvKSxsPTErcyxwPWUrMSxmPXt9KTooMTw8cDw9bCYmKytwLGZbYl09bCsrKSxtPXZ9ZWxzZSBtPV99aChtKSxoKHMpLGQoMSksYSsxPT09cj90W2FdPTA6KHRbYV09ci1hLTEsdFtyKytdPTApO3JldHVybiByfShnLHYscDwyPzI6cCxhKX0sdGhpcy5lbmQ9ZnVuY3Rpb24oKXtyZXR1cm4hMT09PXgmJihnW3YrK109NTkseD0hMCksdn0sdGhpcy5nZXRPdXRwdXRCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gZ30sdGhpcy5zZXRPdXRwdXRCdWZmZXI9ZnVuY3Rpb24oZSl7Zz1lfSx0aGlzLmdldE91dHB1dEJ1ZmZlclBvc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHZ9LHRoaXMuc2V0T3V0cHV0QnVmZmVyUG9zaXRpb249ZnVuY3Rpb24oZSl7dj1lfX0sci5HaWZSZWFkZXI9ZnVuY3Rpb24oeCl7dmFyIGU9MDtpZig3MSE9PXhbZSsrXXx8NzMhPT14W2UrK118fDcwIT09eFtlKytdfHw1NiE9PXhbZSsrXXx8NTYhPSh4W2UrK10rMSYyNTMpfHw5NyE9PXhbZSsrXSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIEdJRiA4N2EvODlhIGhlYWRlci5cIik7dmFyIFM9eFtlKytdfHhbZSsrXTw8OCx0PXhbZSsrXXx4W2UrK108PDgscj14W2UrK10sbj1yPj43LGE9MTw8MSsoNyZyKTt4W2UrK10seFtlKytdO3ZhciBvPW51bGwsaT1udWxsO24mJihvPWUsZSs9MyooaT1hKSk7dmFyIHM9ITAsbD1bXSxwPTAsdT1udWxsLGM9MCxkPW51bGw7Zm9yKHRoaXMud2lkdGg9Uyx0aGlzLmhlaWdodD10O3MmJmU8eC5sZW5ndGg7KXN3aXRjaCh4W2UrK10pe2Nhc2UgMzM6c3dpdGNoKHhbZSsrXSl7Y2FzZSAyNTU6aWYoMTEhPT14W2VdfHw3OD09eFtlKzFdJiY2OT09eFtlKzJdJiY4ND09eFtlKzNdJiY4Mz09eFtlKzRdJiY2Nz09eFtlKzVdJiY2NT09eFtlKzZdJiY4MD09eFtlKzddJiY2OT09eFtlKzhdJiY1MD09eFtlKzldJiY0Nj09eFtlKzEwXSYmNDg9PXhbZSsxMV0mJjM9PXhbZSsxMl0mJjE9PXhbZSsxM10mJjA9PXhbZSsxNl0pZSs9MTQsZD14W2UrK118eFtlKytdPDw4LGUrKztlbHNlIGZvcihlKz0xMjs7KXtpZighKDA8PShDPXhbZSsrXSkpKXRocm93IEVycm9yKFwiSW52YWxpZCBibG9jayBzaXplXCIpO2lmKDA9PT1DKWJyZWFrO2UrPUN9YnJlYWs7Y2FzZSAyNDk6aWYoNCE9PXhbZSsrXXx8MCE9PXhbZSs0XSl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGdyYXBoaWNzIGV4dGVuc2lvbiBibG9jay5cIik7dmFyIGg9eFtlKytdO3A9eFtlKytdfHhbZSsrXTw8OCx1PXhbZSsrXSwwPT0oMSZoKSYmKHU9bnVsbCksYz1oPj4yJjcsZSsrO2JyZWFrO2Nhc2UgMjU0OmZvcig7Oyl7aWYoISgwPD0oQz14W2UrK10pKSl0aHJvdyBFcnJvcihcIkludmFsaWQgYmxvY2sgc2l6ZVwiKTtpZigwPT09QylicmVhaztlKz1DfWJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBncmFwaGljIGNvbnRyb2wgbGFiZWw6IDB4XCIreFtlLTFdLnRvU3RyaW5nKDE2KSl9YnJlYWs7Y2FzZSA0NDp2YXIgbT14W2UrK118eFtlKytdPDw4LGY9eFtlKytdfHhbZSsrXTw8OCx5PXhbZSsrXXx4W2UrK108PDgsZz14W2UrK118eFtlKytdPDw4LHY9eFtlKytdLGI9dj4+NiYxLF89MTw8MSsoNyZ2KSx3PW8sTT1pLEU9ITE7aWYodj4+Nyl7RT0hMDt3PWUsZSs9MyooTT1fKX12YXIgVD1lO2ZvcihlKys7Oyl7dmFyIEM7aWYoISgwPD0oQz14W2UrK10pKSl0aHJvdyBFcnJvcihcIkludmFsaWQgYmxvY2sgc2l6ZVwiKTtpZigwPT09QylicmVhaztlKz1DfWwucHVzaCh7eDptLHk6Zix3aWR0aDp5LGhlaWdodDpnLGhhc19sb2NhbF9wYWxldHRlOkUscGFsZXR0ZV9vZmZzZXQ6dyxwYWxldHRlX3NpemU6TSxkYXRhX29mZnNldDpULGRhdGFfbGVuZ3RoOmUtVCx0cmFuc3BhcmVudF9pbmRleDp1LGludGVybGFjZWQ6ISFiLGRlbGF5OnAsZGlzcG9zYWw6Y30pO2JyZWFrO2Nhc2UgNTk6cz0hMTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVua25vd24gZ2lmIGJsb2NrOiAweFwiK3hbZS0xXS50b1N0cmluZygxNikpfXRoaXMubnVtRnJhbWVzPWZ1bmN0aW9uKCl7cmV0dXJuIGwubGVuZ3RofSx0aGlzLmxvb3BDb3VudD1mdW5jdGlvbigpe3JldHVybiBkfSx0aGlzLmZyYW1lSW5mbz1mdW5jdGlvbihlKXtpZihlPDB8fGU+PWwubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkZyYW1lIGluZGV4IG91dCBvZiByYW5nZS5cIik7cmV0dXJuIGxbZV19LHRoaXMuZGVjb2RlQW5kQmxpdEZyYW1lQkdSQT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMuZnJhbWVJbmZvKGUpLG49ci53aWR0aCpyLmhlaWdodCxhPW5ldyBVaW50OEFycmF5KG4pO04oeCxyLmRhdGFfb2Zmc2V0LGEsbik7dmFyIG89ci5wYWxldHRlX29mZnNldCxpPXIudHJhbnNwYXJlbnRfaW5kZXg7bnVsbD09PWkmJihpPTI1Nik7dmFyIHM9ci53aWR0aCxsPVMtcyxwPXMsdT00KihyLnkqUytyLngpLGM9NCooKHIueStyLmhlaWdodCkqUytyLngpLGQ9dSxoPTQqbDshMD09PXIuaW50ZXJsYWNlZCYmKGgrPTQqUyo3KTtmb3IodmFyIG09OCxmPTAseT1hLmxlbmd0aDtmPHk7KytmKXt2YXIgZz1hW2ZdO2lmKDA9PT1wJiYocD1zLGM8PShkKz1oKSYmKGg9NCpsKzQqUyoobS0xKSxkPXUrKHMrbCkqKG08PDEpLG0+Pj0xKSksZz09PWkpZCs9NDtlbHNle3ZhciB2PXhbbyszKmddLGI9eFtvKzMqZysxXSxfPXhbbyszKmcrMl07dFtkKytdPV8sdFtkKytdPWIsdFtkKytdPXYsdFtkKytdPTI1NX0tLXB9fSx0aGlzLmRlY29kZUFuZEJsaXRGcmFtZVJHQkE9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmZyYW1lSW5mbyhlKSxuPXIud2lkdGgqci5oZWlnaHQsYT1uZXcgVWludDhBcnJheShuKTtOKHgsci5kYXRhX29mZnNldCxhLG4pO3ZhciBvPXIucGFsZXR0ZV9vZmZzZXQsaT1yLnRyYW5zcGFyZW50X2luZGV4O251bGw9PT1pJiYoaT0yNTYpO3ZhciBzPXIud2lkdGgsbD1TLXMscD1zLHU9NCooci55KlMrci54KSxjPTQqKChyLnkrci5oZWlnaHQpKlMrci54KSxkPXUsaD00Kmw7ITA9PT1yLmludGVybGFjZWQmJihoKz00KlMqNyk7Zm9yKHZhciBtPTgsZj0wLHk9YS5sZW5ndGg7Zjx5OysrZil7dmFyIGc9YVtmXTtpZigwPT09cCYmKHA9cyxjPD0oZCs9aCkmJihoPTQqbCs0KlMqKG0tMSksZD11KyhzK2wpKihtPDwxKSxtPj49MSkpLGc9PT1pKWQrPTQ7ZWxzZXt2YXIgdj14W28rMypnXSxiPXhbbyszKmcrMV0sXz14W28rMypnKzJdO3RbZCsrXT12LHRbZCsrXT1iLHRbZCsrXT1fLHRbZCsrXT0yNTV9LS1wfX19fWNhdGNoKGUpe319LHt9XSwxMzpbZnVuY3Rpb24oanIsdCxyKXsoZnVuY3Rpb24oR3Ipe3ZhciBlO2U9dGhpcyxmdW5jdGlvbihFKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBlKGUpe2lmKG51bGw9PXRoaXMpdGhyb3cgVHlwZUVycm9yKCk7dmFyIHQ9U3RyaW5nKHRoaXMpLHI9dC5sZW5ndGgsbj1lP051bWJlcihlKTowO2lmKG4hPW4mJihuPTApLCEobjwwfHxyPD1uKSl7dmFyIGEsbz10LmNoYXJDb2RlQXQobik7cmV0dXJuIDU1Mjk2PD1vJiZvPD01NjMxOSYmbisxPHImJjU2MzIwPD0oYT10LmNoYXJDb2RlQXQobisxKSkmJmE8PTU3MzQzPzEwMjQqKG8tNTUyOTYpK2EtNTYzMjArNjU1MzY6b319dmFyIHQ7U3RyaW5nLnByb3RvdHlwZS5jb2RlUG9pbnRBdHx8KCh0PWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPXt9LHQ9T2JqZWN0LmRlZmluZVByb3BlcnR5LHI9dChlLGUsZSkmJnR9Y2F0Y2goZSl7fXJldHVybiByfSgpKT90KFN0cmluZy5wcm90b3R5cGUsXCJjb2RlUG9pbnRBdFwiLHt2YWx1ZTplLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOlN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXQ9ZSk7dmFyIGw9MCxvPS0zO2Z1bmN0aW9uIHIoKXt0aGlzLnRhYmxlPW5ldyBVaW50MTZBcnJheSgxNiksdGhpcy50cmFucz1uZXcgVWludDE2QXJyYXkoMjg4KX1mdW5jdGlvbiBpKGUsdCl7dGhpcy5zb3VyY2U9ZSx0aGlzLnNvdXJjZUluZGV4PTAsdGhpcy50YWc9MCx0aGlzLmJpdGNvdW50PTAsdGhpcy5kZXN0PXQsdGhpcy5kZXN0TGVuPTAsdGhpcy5sdHJlZT1uZXcgcix0aGlzLmR0cmVlPW5ldyByfXZhciBzPW5ldyByLHA9bmV3IHIsdT1uZXcgVWludDhBcnJheSgzMCksYz1uZXcgVWludDE2QXJyYXkoMzApLGQ9bmV3IFVpbnQ4QXJyYXkoMzApLGg9bmV3IFVpbnQxNkFycmF5KDMwKSxtPW5ldyBVaW50OEFycmF5KFsxNiwxNywxOCwwLDgsNyw5LDYsMTAsNSwxMSw0LDEyLDMsMTMsMiwxNCwxLDE1XSksZj1uZXcgcix5PW5ldyBVaW50OEFycmF5KDMyMCk7ZnVuY3Rpb24gbihlLHQscixuKXt2YXIgYSxvO2ZvcihhPTA7YTxyOysrYSllW2FdPTA7Zm9yKGE9MDthPDMwLXI7KythKWVbYStyXT1hL3J8MDtmb3Iobz1uLGE9MDthPDMwOysrYSl0W2FdPW8sbys9MTw8ZVthXX12YXIgZz1uZXcgVWludDE2QXJyYXkoMTYpO2Z1bmN0aW9uIHYoZSx0LHIsbil7dmFyIGEsbztmb3IoYT0wO2E8MTY7KythKWUudGFibGVbYV09MDtmb3IoYT0wO2E8bjsrK2EpZS50YWJsZVt0W3IrYV1dKys7Zm9yKGE9bz1lLnRhYmxlWzBdPTA7YTwxNjsrK2EpZ1thXT1vLG8rPWUudGFibGVbYV07Zm9yKGE9MDthPG47KythKXRbcithXSYmKGUudHJhbnNbZ1t0W3IrYV1dKytdPWEpfWZ1bmN0aW9uIGIoZSl7ZS5iaXRjb3VudC0tfHwoZS50YWc9ZS5zb3VyY2VbZS5zb3VyY2VJbmRleCsrXSxlLmJpdGNvdW50PTcpO3ZhciB0PTEmZS50YWc7cmV0dXJuIGUudGFnPj4+PTEsdH1mdW5jdGlvbiBfKGUsdCxyKXtpZighdClyZXR1cm4gcjtmb3IoO2UuYml0Y291bnQ8MjQ7KWUudGFnfD1lLnNvdXJjZVtlLnNvdXJjZUluZGV4KytdPDxlLmJpdGNvdW50LGUuYml0Y291bnQrPTg7dmFyIG49ZS50YWcmNjU1MzU+Pj4xNi10O3JldHVybiBlLnRhZz4+Pj10LGUuYml0Y291bnQtPXQsbityfWZ1bmN0aW9uIHgoZSx0KXtmb3IoO2UuYml0Y291bnQ8MjQ7KWUudGFnfD1lLnNvdXJjZVtlLnNvdXJjZUluZGV4KytdPDxlLmJpdGNvdW50LGUuYml0Y291bnQrPTg7Zm9yKHZhciByPTAsbj0wLGE9MCxvPWUudGFnO249MipuKygxJm8pLG8+Pj49MSwrK2Escis9dC50YWJsZVthXSwwPD0obi09dC50YWJsZVthXSk7KTtyZXR1cm4gZS50YWc9byxlLmJpdGNvdW50LT1hLHQudHJhbnNbcituXX1mdW5jdGlvbiBTKGUsdCxyKXt2YXIgbixhLG8saSxzLGw7Zm9yKG49XyhlLDUsMjU3KSxhPV8oZSw1LDEpLG89XyhlLDQsNCksaT0wO2k8MTk7KytpKXlbaV09MDtmb3IoaT0wO2k8bzsrK2kpe3ZhciBwPV8oZSwzLDApO3lbbVtpXV09cH1mb3IodihmLHksMCwxOSkscz0wO3M8bithOyl7dmFyIHU9eChlLGYpO3N3aXRjaCh1KXtjYXNlIDE2OnZhciBjPXlbcy0xXTtmb3IobD1fKGUsMiwzKTtsOy0tbCl5W3MrK109YzticmVhaztjYXNlIDE3OmZvcihsPV8oZSwzLDMpO2w7LS1sKXlbcysrXT0wO2JyZWFrO2Nhc2UgMTg6Zm9yKGw9XyhlLDcsMTEpO2w7LS1sKXlbcysrXT0wO2JyZWFrO2RlZmF1bHQ6eVtzKytdPXV9fXYodCx5LDAsbiksdihyLHksbixhKX1mdW5jdGlvbiB3KGUsdCxyKXtmb3IoOzspe3ZhciBuLGEsbyxpLHM9eChlLHQpO2lmKDI1Nj09PXMpcmV0dXJuIGw7aWYoczwyNTYpZS5kZXN0W2UuZGVzdExlbisrXT1zO2Vsc2UgZm9yKG49XyhlLHVbcy09MjU3XSxjW3NdKSxhPXgoZSxyKSxpPW89ZS5kZXN0TGVuLV8oZSxkW2FdLGhbYV0pO2k8bytuOysraSllLmRlc3RbZS5kZXN0TGVuKytdPWUuZGVzdFtpXX19ZnVuY3Rpb24gTShlKXtmb3IodmFyIHQscjs4PGUuYml0Y291bnQ7KWUuc291cmNlSW5kZXgtLSxlLmJpdGNvdW50LT04O2lmKCh0PTI1NioodD1lLnNvdXJjZVtlLnNvdXJjZUluZGV4KzFdKStlLnNvdXJjZVtlLnNvdXJjZUluZGV4XSkhPT0oNjU1MzUmfigyNTYqZS5zb3VyY2VbZS5zb3VyY2VJbmRleCszXStlLnNvdXJjZVtlLnNvdXJjZUluZGV4KzJdKSkpcmV0dXJuIG87Zm9yKGUuc291cmNlSW5kZXgrPTQscj10O3I7LS1yKWUuZGVzdFtlLmRlc3RMZW4rK109ZS5zb3VyY2VbZS5zb3VyY2VJbmRleCsrXTtyZXR1cm4gZS5iaXRjb3VudD0wLGx9IWZ1bmN0aW9uKGUsdCl7dmFyIHI7Zm9yKHI9MDtyPDc7KytyKWUudGFibGVbcl09MDtmb3IoZS50YWJsZVs3XT0yNCxlLnRhYmxlWzhdPTE1MixlLnRhYmxlWzldPTExMixyPTA7cjwyNDsrK3IpZS50cmFuc1tyXT0yNTYrcjtmb3Iocj0wO3I8MTQ0OysrcillLnRyYW5zWzI0K3JdPXI7Zm9yKHI9MDtyPDg7KytyKWUudHJhbnNbMTY4K3JdPTI4MCtyO2ZvcihyPTA7cjwxMTI7KytyKWUudHJhbnNbMTc2K3JdPTE0NCtyO2ZvcihyPTA7cjw1Oysrcil0LnRhYmxlW3JdPTA7Zm9yKHQudGFibGVbNV09MzIscj0wO3I8MzI7KytyKXQudHJhbnNbcl09cn0ocyxwKSxuKHUsYyw0LDMpLG4oZCxoLDIsMSksdVsyOF09MCxjWzI4XT0yNTg7dmFyIGE9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLGE9bmV3IGkoZSx0KTtkb3tzd2l0Y2gocj1iKGEpLF8oYSwyLDApKXtjYXNlIDA6bj1NKGEpO2JyZWFrO2Nhc2UgMTpuPXcoYSxzLHApO2JyZWFrO2Nhc2UgMjpTKGEsYS5sdHJlZSxhLmR0cmVlKSxuPXcoYSxhLmx0cmVlLGEuZHRyZWUpO2JyZWFrO2RlZmF1bHQ6bj1vfWlmKG4hPT1sKXRocm93IG5ldyBFcnJvcihcIkRhdGEgZXJyb3JcIil9d2hpbGUoIXIpO3JldHVybiBhLmRlc3RMZW48YS5kZXN0Lmxlbmd0aD9cImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmRlc3Quc2xpY2U/YS5kZXN0LnNsaWNlKDAsYS5kZXN0TGVuKTphLmRlc3Quc3ViYXJyYXkoMCxhLmRlc3RMZW4pOmEuZGVzdH07ZnVuY3Rpb24gVChlLHQscixuLGEpe3JldHVybiBNYXRoLnBvdygxLWEsMykqZSszKk1hdGgucG93KDEtYSwyKSphKnQrMyooMS1hKSpNYXRoLnBvdyhhLDIpKnIrTWF0aC5wb3coYSwzKSpufWZ1bmN0aW9uIEMoKXt0aGlzLngxPU51bWJlci5OYU4sdGhpcy55MT1OdW1iZXIuTmFOLHRoaXMueDI9TnVtYmVyLk5hTix0aGlzLnkyPU51bWJlci5OYU59ZnVuY3Rpb24gQSgpe3RoaXMuY29tbWFuZHM9W10sdGhpcy5maWxsPVwiYmxhY2tcIix0aGlzLnN0cm9rZT1udWxsLHRoaXMuc3Ryb2tlV2lkdGg9MX1mdW5jdGlvbiBOKGUpe3Rocm93IG5ldyBFcnJvcihlKX1mdW5jdGlvbiBPKGUsdCl7ZXx8Tih0KX1DLnByb3RvdHlwZS5pc0VtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIGlzTmFOKHRoaXMueDEpfHxpc05hTih0aGlzLnkxKXx8aXNOYU4odGhpcy54Mil8fGlzTmFOKHRoaXMueTIpfSxDLnByb3RvdHlwZS5hZGRQb2ludD1mdW5jdGlvbihlLHQpe1wibnVtYmVyXCI9PXR5cGVvZiBlJiYoKGlzTmFOKHRoaXMueDEpfHxpc05hTih0aGlzLngyKSkmJih0aGlzLngxPWUsdGhpcy54Mj1lKSxlPHRoaXMueDEmJih0aGlzLngxPWUpLGU+dGhpcy54MiYmKHRoaXMueDI9ZSkpLFwibnVtYmVyXCI9PXR5cGVvZiB0JiYoKGlzTmFOKHRoaXMueTEpfHxpc05hTih0aGlzLnkyKSkmJih0aGlzLnkxPXQsdGhpcy55Mj10KSx0PHRoaXMueTEmJih0aGlzLnkxPXQpLHQ+dGhpcy55MiYmKHRoaXMueTI9dCkpfSxDLnByb3RvdHlwZS5hZGRYPWZ1bmN0aW9uKGUpe3RoaXMuYWRkUG9pbnQoZSxudWxsKX0sQy5wcm90b3R5cGUuYWRkWT1mdW5jdGlvbihlKXt0aGlzLmFkZFBvaW50KG51bGwsZSl9LEMucHJvdG90eXBlLmFkZEJlemllcj1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMpe3ZhciBsPXRoaXMscD1bZSx0XSx1PVtyLG5dLGM9W2Esb10sZD1baSxzXTt0aGlzLmFkZFBvaW50KGUsdCksdGhpcy5hZGRQb2ludChpLHMpO2Zvcih2YXIgaD0wO2g8PTE7aCsrKXt2YXIgbT02KnBbaF0tMTIqdVtoXSs2KmNbaF0sZj0tMypwW2hdKzkqdVtoXS05KmNbaF0rMypkW2hdLHk9Myp1W2hdLTMqcFtoXTtpZigwIT1mKXt2YXIgZz1NYXRoLnBvdyhtLDIpLTQqeSpmO2lmKCEoZzwwKSl7dmFyIHY9KC1tK01hdGguc3FydChnKSkvKDIqZik7MDx2JiZ2PDEmJigwPT09aCYmbC5hZGRYKFQocFtoXSx1W2hdLGNbaF0sZFtoXSx2KSksMT09PWgmJmwuYWRkWShUKHBbaF0sdVtoXSxjW2hdLGRbaF0sdikpKTt2YXIgYj0oLW0tTWF0aC5zcXJ0KGcpKS8oMipmKTswPGImJmI8MSYmKDA9PT1oJiZsLmFkZFgoVChwW2hdLHVbaF0sY1toXSxkW2hdLGIpKSwxPT09aCYmbC5hZGRZKFQocFtoXSx1W2hdLGNbaF0sZFtoXSxiKSkpfX1lbHNle2lmKDA9PW0pY29udGludWU7dmFyIF89LXkvbTswPF8mJl88MSYmKDA9PT1oJiZsLmFkZFgoVChwW2hdLHVbaF0sY1toXSxkW2hdLF8pKSwxPT09aCYmbC5hZGRZKFQocFtoXSx1W2hdLGNbaF0sZFtoXSxfKSkpfX19LEMucHJvdG90eXBlLmFkZFF1YWQ9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe3ZhciBpPWUrMi8zKihyLWUpLHM9dCsyLzMqKG4tdCksbD1pKzEvMyooYS1lKSxwPXMrMS8zKihvLXQpO3RoaXMuYWRkQmV6aWVyKGUsdCxpLHMsbCxwLGEsbyl9LEEucHJvdG90eXBlLm1vdmVUbz1mdW5jdGlvbihlLHQpe3RoaXMuY29tbWFuZHMucHVzaCh7dHlwZTpcIk1cIix4OmUseTp0fSl9LEEucHJvdG90eXBlLmxpbmVUbz1mdW5jdGlvbihlLHQpe3RoaXMuY29tbWFuZHMucHVzaCh7dHlwZTpcIkxcIix4OmUseTp0fSl9LEEucHJvdG90eXBlLmN1cnZlVG89QS5wcm90b3R5cGUuYmV6aWVyQ3VydmVUbz1mdW5jdGlvbihlLHQscixuLGEsbyl7dGhpcy5jb21tYW5kcy5wdXNoKHt0eXBlOlwiQ1wiLHgxOmUseTE6dCx4MjpyLHkyOm4seDphLHk6b30pfSxBLnByb3RvdHlwZS5xdWFkVG89QS5wcm90b3R5cGUucXVhZHJhdGljQ3VydmVUbz1mdW5jdGlvbihlLHQscixuKXt0aGlzLmNvbW1hbmRzLnB1c2goe3R5cGU6XCJRXCIseDE6ZSx5MTp0LHg6cix5Om59KX0sQS5wcm90b3R5cGUuY2xvc2U9QS5wcm90b3R5cGUuY2xvc2VQYXRoPWZ1bmN0aW9uKCl7dGhpcy5jb21tYW5kcy5wdXNoKHt0eXBlOlwiWlwifSl9LEEucHJvdG90eXBlLmV4dGVuZD1mdW5jdGlvbihlKXtpZihlLmNvbW1hbmRzKWU9ZS5jb21tYW5kcztlbHNlIGlmKGUgaW5zdGFuY2VvZiBDKXt2YXIgdD1lO3JldHVybiB0aGlzLm1vdmVUbyh0LngxLHQueTEpLHRoaXMubGluZVRvKHQueDIsdC55MSksdGhpcy5saW5lVG8odC54Mix0LnkyKSx0aGlzLmxpbmVUbyh0LngxLHQueTIpLHZvaWQgdGhpcy5jbG9zZSgpfUFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuY29tbWFuZHMsZSl9LEEucHJvdG90eXBlLmdldEJvdW5kaW5nQm94PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPW5ldyBDLHQ9MCxyPTAsbj0wLGE9MCxvPTA7bzx0aGlzLmNvbW1hbmRzLmxlbmd0aDtvKyspe3ZhciBpPXRoaXMuY29tbWFuZHNbb107c3dpdGNoKGkudHlwZSl7Y2FzZVwiTVwiOmUuYWRkUG9pbnQoaS54LGkueSksdD1uPWkueCxyPWE9aS55O2JyZWFrO2Nhc2VcIkxcIjplLmFkZFBvaW50KGkueCxpLnkpLG49aS54LGE9aS55O2JyZWFrO2Nhc2VcIlFcIjplLmFkZFF1YWQobixhLGkueDEsaS55MSxpLngsaS55KSxuPWkueCxhPWkueTticmVhaztjYXNlXCJDXCI6ZS5hZGRCZXppZXIobixhLGkueDEsaS55MSxpLngyLGkueTIsaS54LGkueSksbj1pLngsYT1pLnk7YnJlYWs7Y2FzZVwiWlwiOm49dCxhPXI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbmV4cGVjdGVkIHBhdGggY29tbWFuZCBcIitpLnR5cGUpfX1yZXR1cm4gZS5pc0VtcHR5KCkmJmUuYWRkUG9pbnQoMCwwKSxlfSxBLnByb3RvdHlwZS5kcmF3PWZ1bmN0aW9uKGUpe2UuYmVnaW5QYXRoKCk7Zm9yKHZhciB0PTA7dDx0aGlzLmNvbW1hbmRzLmxlbmd0aDt0Kz0xKXt2YXIgcj10aGlzLmNvbW1hbmRzW3RdO1wiTVwiPT09ci50eXBlP2UubW92ZVRvKHIueCxyLnkpOlwiTFwiPT09ci50eXBlP2UubGluZVRvKHIueCxyLnkpOlwiQ1wiPT09ci50eXBlP2UuYmV6aWVyQ3VydmVUbyhyLngxLHIueTEsci54MixyLnkyLHIueCxyLnkpOlwiUVwiPT09ci50eXBlP2UucXVhZHJhdGljQ3VydmVUbyhyLngxLHIueTEsci54LHIueSk6XCJaXCI9PT1yLnR5cGUmJmUuY2xvc2VQYXRoKCl9dGhpcy5maWxsJiYoZS5maWxsU3R5bGU9dGhpcy5maWxsLGUuZmlsbCgpKSx0aGlzLnN0cm9rZSYmKGUuc3Ryb2tlU3R5bGU9dGhpcy5zdHJva2UsZS5saW5lV2lkdGg9dGhpcy5zdHJva2VXaWR0aCxlLnN0cm9rZSgpKX0sQS5wcm90b3R5cGUudG9QYXRoRGF0YT1mdW5jdGlvbihvKXtmdW5jdGlvbiBlKCl7Zm9yKHZhciBlLHQ9YXJndW1lbnRzLHI9XCJcIixuPTA7bjxhcmd1bWVudHMubGVuZ3RoO24rPTEpe3ZhciBhPXRbbl07MDw9YSYmMDxuJiYocis9XCIgXCIpLHIrPShlPWEsTWF0aC5yb3VuZChlKT09PWU/XCJcIitNYXRoLnJvdW5kKGUpOmUudG9GaXhlZChvKSl9cmV0dXJuIHJ9bz12b2lkIDAhPT1vP286Mjtmb3IodmFyIHQ9XCJcIixyPTA7cjx0aGlzLmNvbW1hbmRzLmxlbmd0aDtyKz0xKXt2YXIgbj10aGlzLmNvbW1hbmRzW3JdO1wiTVwiPT09bi50eXBlP3QrPVwiTVwiK2Uobi54LG4ueSk6XCJMXCI9PT1uLnR5cGU/dCs9XCJMXCIrZShuLngsbi55KTpcIkNcIj09PW4udHlwZT90Kz1cIkNcIitlKG4ueDEsbi55MSxuLngyLG4ueTIsbi54LG4ueSk6XCJRXCI9PT1uLnR5cGU/dCs9XCJRXCIrZShuLngxLG4ueTEsbi54LG4ueSk6XCJaXCI9PT1uLnR5cGUmJih0Kz1cIlpcIil9cmV0dXJuIHR9LEEucHJvdG90eXBlLnRvU1ZHPWZ1bmN0aW9uKGUpe3ZhciB0PSc8cGF0aCBkPVwiJztyZXR1cm4gdCs9dGhpcy50b1BhdGhEYXRhKGUpLHQrPSdcIicsdGhpcy5maWxsJiZcImJsYWNrXCIhPT10aGlzLmZpbGwmJihudWxsPT09dGhpcy5maWxsP3QrPScgZmlsbD1cIm5vbmVcIic6dCs9JyBmaWxsPVwiJyt0aGlzLmZpbGwrJ1wiJyksdGhpcy5zdHJva2UmJih0Kz0nIHN0cm9rZT1cIicrdGhpcy5zdHJva2UrJ1wiIHN0cm9rZS13aWR0aD1cIicrdGhpcy5zdHJva2VXaWR0aCsnXCInKSx0Kz1cIi8+XCJ9LEEucHJvdG90eXBlLnRvRE9NRWxlbWVudD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnRvUGF0aERhdGEoZSkscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwicGF0aFwiKTtyZXR1cm4gci5zZXRBdHRyaWJ1dGUoXCJkXCIsdCkscn07dmFyIEw9e2ZhaWw6Tixhcmd1bWVudDpPLGFzc2VydDpPfSxJPTIxNDc0ODM2NDgsUD17fSxSPXt9LEQ9e307ZnVuY3Rpb24gayhlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZX19Ui5CWVRFPWZ1bmN0aW9uKGUpe3JldHVybiBMLmFyZ3VtZW50KDA8PWUmJmU8PTI1NSxcIkJ5dGUgdmFsdWUgc2hvdWxkIGJlIGJldHdlZW4gMCBhbmQgMjU1LlwiKSxbZV19LEQuQllURT1rKDEpLFIuQ0hBUj1mdW5jdGlvbihlKXtyZXR1cm5bZS5jaGFyQ29kZUF0KDApXX0sRC5DSEFSPWsoMSksUi5DSEFSQVJSQVk9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MDtyPGUubGVuZ3RoO3IrPTEpdFtyXT1lLmNoYXJDb2RlQXQocik7cmV0dXJuIHR9LEQuQ0hBUkFSUkFZPWZ1bmN0aW9uKGUpe3JldHVybiBlLmxlbmd0aH0sUi5VU0hPUlQ9ZnVuY3Rpb24oZSl7cmV0dXJuW2U+PjgmMjU1LDI1NSZlXX0sRC5VU0hPUlQ9aygyKSxSLlNIT1JUPWZ1bmN0aW9uKGUpe3JldHVybiAzMjc2ODw9ZSYmKGU9LSg2NTUzNi1lKSksW2U+PjgmMjU1LDI1NSZlXX0sRC5TSE9SVD1rKDIpLFIuVUlOVDI0PWZ1bmN0aW9uKGUpe3JldHVybltlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmVdfSxELlVJTlQyND1rKDMpLFIuVUxPTkc9ZnVuY3Rpb24oZSl7cmV0dXJuW2U+PjI0JjI1NSxlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmVdfSxELlVMT05HPWsoNCksUi5MT05HPWZ1bmN0aW9uKGUpe3JldHVybiBJPD1lJiYoZT0tKDIqSS1lKSksW2U+PjI0JjI1NSxlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmVdfSxELkxPTkc9ayg0KSxSLkZJWEVEPVIuVUxPTkcsRC5GSVhFRD1ELlVMT05HLFIuRldPUkQ9Ui5TSE9SVCxELkZXT1JEPUQuU0hPUlQsUi5VRldPUkQ9Ui5VU0hPUlQsRC5VRldPUkQ9RC5VU0hPUlQsUi5MT05HREFURVRJTUU9ZnVuY3Rpb24oZSl7cmV0dXJuWzAsMCwwLDAsZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV19LEQuTE9OR0RBVEVUSU1FPWsoOCksUi5UQUc9ZnVuY3Rpb24oZSl7cmV0dXJuIEwuYXJndW1lbnQoND09PWUubGVuZ3RoLFwiVGFnIHNob3VsZCBiZSBleGFjdGx5IDQgQVNDSUkgY2hhcmFjdGVycy5cIiksW2UuY2hhckNvZGVBdCgwKSxlLmNoYXJDb2RlQXQoMSksZS5jaGFyQ29kZUF0KDIpLGUuY2hhckNvZGVBdCgzKV19LEQuVEFHPWsoNCksUi5DYXJkOD1SLkJZVEUsRC5DYXJkOD1ELkJZVEUsUi5DYXJkMTY9Ui5VU0hPUlQsRC5DYXJkMTY9RC5VU0hPUlQsUi5PZmZTaXplPVIuQllURSxELk9mZlNpemU9RC5CWVRFLFIuU0lEPVIuVVNIT1JULEQuU0lEPUQuVVNIT1JULFIuTlVNQkVSPWZ1bmN0aW9uKGUpe3JldHVybi0xMDc8PWUmJmU8PTEwNz9bZSsxMzldOjEwODw9ZSYmZTw9MTEzMT9bMjQ3KygoZS09MTA4KT4+OCksMjU1JmVdOi0xMTMxPD1lJiZlPD0tMTA4P1syNTErKChlPS1lLTEwOCk+PjgpLDI1NSZlXTotMzI3Njg8PWUmJmU8PTMyNzY3P1IuTlVNQkVSMTYoZSk6Ui5OVU1CRVIzMihlKX0sRC5OVU1CRVI9ZnVuY3Rpb24oZSl7cmV0dXJuIFIuTlVNQkVSKGUpLmxlbmd0aH0sUi5OVU1CRVIxNj1mdW5jdGlvbihlKXtyZXR1cm5bMjgsZT4+OCYyNTUsMjU1JmVdfSxELk5VTUJFUjE2PWsoMyksUi5OVU1CRVIzMj1mdW5jdGlvbihlKXtyZXR1cm5bMjksZT4+MjQmMjU1LGU+PjE2JjI1NSxlPj44JjI1NSwyNTUmZV19LEQuTlVNQkVSMzI9ayg1KSxSLlJFQUw9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS50b1N0cmluZygpLHI9L1xcLihcXGQqPykoPzo5ezUsMjB9fDB7NSwyMH0pXFxkezAsMn0oPzplKC4rKXwkKS8uZXhlYyh0KTtpZihyKXt2YXIgbj1wYXJzZUZsb2F0KFwiMWVcIisoKHJbMl0/K3JbMl06MCkrclsxXS5sZW5ndGgpKTt0PShNYXRoLnJvdW5kKGUqbikvbikudG9TdHJpbmcoKX1mb3IodmFyIGE9XCJcIixvPTAsaT10Lmxlbmd0aDtvPGk7bys9MSl7dmFyIHM9dFtvXTthKz1cImVcIj09PXM/XCItXCI9PT10Wysrb10/XCJjXCI6XCJiXCI6XCIuXCI9PT1zP1wiYVwiOlwiLVwiPT09cz9cImVcIjpzfWZvcih2YXIgbD1bMzBdLHA9MCx1PShhKz0xJmEubGVuZ3RoP1wiZlwiOlwiZmZcIikubGVuZ3RoO3A8dTtwKz0yKWwucHVzaChwYXJzZUludChhLnN1YnN0cihwLDIpLDE2KSk7cmV0dXJuIGx9LEQuUkVBTD1mdW5jdGlvbihlKXtyZXR1cm4gUi5SRUFMKGUpLmxlbmd0aH0sUi5OQU1FPVIuQ0hBUkFSUkFZLEQuTkFNRT1ELkNIQVJBUlJBWSxSLlNUUklORz1SLkNIQVJBUlJBWSxELlNUUklORz1ELkNIQVJBUlJBWSxQLlVURjg9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1bXSxhPXIsbz0wO288YTtvKyssdCs9MSluW29dPWUuZ2V0VWludDgodCk7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxuKX0sUC5VVEYxNj1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPVtdLGE9ci8yLG89MDtvPGE7bysrLHQrPTIpbltvXT1lLmdldFVpbnQxNih0KTtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG4pfSxSLlVURjE2PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTA7cjxlLmxlbmd0aDtyKz0xKXt2YXIgbj1lLmNoYXJDb2RlQXQocik7dFt0Lmxlbmd0aF09bj4+OCYyNTUsdFt0Lmxlbmd0aF09MjU1Jm59cmV0dXJuIHR9LEQuVVRGMTY9ZnVuY3Rpb24oZSl7cmV0dXJuIDIqZS5sZW5ndGh9O3ZhciBGPXtcIngtbWFjLWNyb2F0aWFuXCI6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7FoOKEosK0wqjiiaDFvcOY4oiewrHiiaTiiaXiiIbCteKIguKIkeKIj8Wh4oirwqrCus6pxb7DuMK/wqHCrOKImsaS4omIxIbCq8SM4oCmwqDDgMODw5XFksWTxJDigJTigJzigJ3igJjigJnDt+KXiu+jv8Kp4oGE4oKs4oC54oC6w4bCu+KAk8K34oCa4oCe4oCww4LEh8OBxI3DiMONw47Dj8OMw5PDlMSRw5LDmsObw5nEscuGy5zCr8+Aw4vLmsK4w4rDpsuHXCIsXCJ4LW1hYy1jeXJpbGxpY1wiOlwi0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr+KAoMKw0pDCo8Kn4oCiwrbQhsKuwqnihKLQgtGS4omg0IPRk+KInsKx4omk4oml0ZbCtdKR0IjQhNGU0IfRl9CJ0ZnQitGa0ZjQhcKs4oiaxpLiiYjiiIbCq8K74oCmwqDQi9Gb0IzRnNGV4oCT4oCU4oCc4oCd4oCY4oCZw7figJ7QjtGe0I/Rn+KEltCB0ZHRj9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGOXCIsXCJ4LW1hYy1nYWVsaWNcIjpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zigKDCsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMOGw5jhuILCseKJpOKJpeG4g8SKxIvhuIrhuIvhuJ7huJ/EoMSh4bmAw6bDuOG5geG5luG5l8m8xpLFv+G5oMKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnhuaHhupvDv8W44bmq4oKs4oC54oC6xbbFt+G5q8K34buy4buz4oGKw4LDisOBw4vDiMONw47Dj8OMw5PDlOKZo8OSw5rDm8OZxLHDncO9xbTFteG6hOG6heG6gOG6geG6guG6g1wiLFwieC1tYWMtZ3JlZWtcIjpcIsOEwrnCssOJwrPDlsOczoXDoMOiw6TOhMKow6fDqcOow6rDq8Kj4oSiw67Dr+KAosK94oCww7TDtsKm4oKsw7nDu8O84oCgzpPOlM6YzpvOns6gw5/CrsKpzqPOqsKn4omgwrDCt86RwrHiiaTiiaXCpc6SzpXOls6XzpnOms6czqbOq86ozqnOrM6dwqzOn86h4omIzqTCq8K74oCmwqDOpc6nzobOiMWT4oCT4oCV4oCc4oCd4oCY4oCZw7fOic6KzozOjs6tzq7Or8+Mzo/Pjc6xzrLPiM60zrXPhs6zzrfOuc6+zrrOu868zr3Ov8+Az47Pgc+Dz4TOuM+Jz4LPh8+FzrbPis+LzpDOsMKtXCIsXCJ4LW1hYy1pY2VsYW5kaWNcIjpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zDncKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgw4bDmOKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCus6pw6bDuMK/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhOKCrMOQw7DDnsO+w73Ct+KAmuKAnuKAsMOCw4rDgcOLw4jDjcOOw4/DjMOTw5Tvo7/DksOaw5vDmcSxy4bLnMKvy5jLmcuawrjLncuby4dcIixcIngtbWFjLWludWl0XCI6XCLhkIPhkIThkIXhkIbhkIrhkIvhkLHhkLLhkLPhkLThkLjhkLnhkYnhkY7hkY/hkZDhkZHhkZXhkZbhkabhka3hka7hka/hkbDhkbLhkbPhkoPhkovhkozhko3hko7hkpDhkpHCsOGSoeGSpeGSpuKAosK24ZKnwq7CqeKEouGSqOGSquGSq+GSu+GTguGTg+GThOGTheGTh+GTiOGTkOGTr+GTsOGTseGTsuGTtOGTteGUheGTleGTluGTl+GTmOGTmuGTm+GTquGUqOGUqeGUquGUq+GUreKApsKg4ZSu4ZS+4ZWV4ZWW4ZWX4oCT4oCU4oCc4oCd4oCY4oCZ4ZWY4ZWZ4ZWa4ZWd4ZWG4ZWH4ZWI4ZWJ4ZWL4ZWM4ZWQ4ZW/4ZaA4ZaB4ZaC4ZaD4ZaE4ZaF4ZaP4ZaQ4ZaR4ZaS4ZaT4ZaU4ZaV4Zmx4Zmy4Zmz4Zm04Zm14Zm24ZaW4Zag4Zah4Zai4Zaj4Zak4Zal4Zam4ZW8xYHFglwiLFwieC1tYWMtY2VcIjpcIsOExIDEgcOJxITDlsOcw6HEhcSMw6TEjcSGxIfDqcW5xbrEjsOtxI/EksSTxJbDs8SXw7TDtsO1w7rEmsSbw7zigKDCsMSYwqPCp+KAosK2w5/CrsKp4oSixJnCqOKJoMSjxK7Er8Sq4omk4omlxKvEtuKIguKIkcWCxLvEvMS9xL7EucS6xYXFhsWDwqziiJrFhMWH4oiGwqvCu+KApsKgxYjFkMOVxZHFjOKAk+KAlOKAnOKAneKAmOKAmcO34peKxY3FlMWVxZjigLnigLrFmcWWxZfFoOKAmuKAnsWhxZrFm8OBxaTFpcONxb3FvsWqw5PDlMWrxa7DmsWvxbDFscWyxbPDncO9xLfFu8WBxbzEosuHXCIsbWFjaW50b3NoOlwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgw4bDmOKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCus6pw6bDuMK/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhOKCrOKAueKAuu+sge+sguKAocK34oCa4oCe4oCww4LDisOBw4vDiMONw47Dj8OMw5PDlO+jv8OSw5rDm8OZxLHLhsucwq/LmMuZy5rCuMudy5vLh1wiLFwieC1tYWMtcm9tYW5pYW5cIjpcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zigKDCsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMSCyJjiiJ7CseKJpOKJpcKlwrXiiILiiJHiiI/PgOKIq8KqwrrOqcSDyJnCv8KhwqziiJrGkuKJiOKIhsKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnDt+KXisO/xbjigYTigqzigLnigLrImsib4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU76O/w5LDmsObw5nEscuGy5zCr8uYy5nLmsK4y53Lm8uHXCIsXCJ4LW1hYy10dXJraXNoXCI6XCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7CqeKEosK0wqjiiaDDhsOY4oiewrHiiaTiiaXCpcK14oiC4oiR4oiPz4DiiKvCqsK6zqnDpsO4wr/CocKs4oiaxpLiiYjiiIbCq8K74oCmwqDDgMODw5XFksWT4oCT4oCU4oCc4oCd4oCY4oCZw7fil4rDv8W4xJ7En8SwxLHFnsWf4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU76O/w5LDmsObw5nvoqDLhsucwq/LmMuZy5rCuMudy5vLh1wifTtQLk1BQ1NUUklORz1mdW5jdGlvbihlLHQscixuKXt2YXIgYT1GW25dO2lmKHZvaWQgMCE9PWEpe2Zvcih2YXIgbz1cIlwiLGk9MDtpPHI7aSsrKXt2YXIgcz1lLmdldFVpbnQ4KHQraSk7bys9czw9MTI3P1N0cmluZy5mcm9tQ2hhckNvZGUocyk6YVsxMjcmc119cmV0dXJuIG99fTt2YXIgVSxCPVwiZnVuY3Rpb25cIj09dHlwZW9mIFdlYWtNYXAmJm5ldyBXZWFrTWFwO2Z1bmN0aW9uIEcoZSl7cmV0dXJuLTEyODw9ZSYmZTw9MTI3fWZ1bmN0aW9uIGooZSx0LHIpe2Zvcih2YXIgbj0wLGE9ZS5sZW5ndGg7dDxhJiZuPDY0JiYwPT09ZVt0XTspKyt0LCsrbjtyZXR1cm4gci5wdXNoKDEyOHxuLTEpLHR9ZnVuY3Rpb24gVihlLHQscil7Zm9yKHZhciBuPTAsYT1lLmxlbmd0aCxvPXQ7bzxhJiZuPDY0Oyl7dmFyIGk9ZVtvXTtpZighRyhpKSlicmVhaztpZigwPT09aSYmbysxPGEmJjA9PT1lW28rMV0pYnJlYWs7KytvLCsrbn1yLnB1c2gobi0xKTtmb3IodmFyIHM9dDtzPG87KytzKXIucHVzaChlW3NdKzI1NiYyNTUpO3JldHVybiBvfWZ1bmN0aW9uIHooZSx0LHIpe2Zvcih2YXIgbj0wLGE9ZS5sZW5ndGgsbz10O288YSYmbjw2NDspe3ZhciBpPWVbb107aWYoMD09PWkpYnJlYWs7aWYoRyhpKSYmbysxPGEmJkcoZVtvKzFdKSlicmVhazsrK28sKytufXIucHVzaCg2NHxuLTEpO2Zvcih2YXIgcz10O3M8bzsrK3Mpe3ZhciBsPWVbc107ci5wdXNoKGwrNjU1MzY+PjgmMjU1LGwrMjU2JjI1NSl9cmV0dXJuIG99Ui5NQUNTVFJJTkc9ZnVuY3Rpb24oZSx0KXt2YXIgcj1mdW5jdGlvbihlKXtpZighVSlmb3IodmFyIHQgaW4gVT17fSxGKVVbdF09bmV3IFN0cmluZyh0KTt2YXIgcj1VW2VdO2lmKHZvaWQgMCE9PXIpe2lmKEIpe3ZhciBuPUIuZ2V0KHIpO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG59dmFyIGE9RltlXTtpZih2b2lkIDAhPT1hKXtmb3IodmFyIG89e30saT0wO2k8YS5sZW5ndGg7aSsrKW9bYS5jaGFyQ29kZUF0KGkpXT1pKzEyODtyZXR1cm4gQiYmQi5zZXQocixvKSxvfX19KHQpO2lmKHZvaWQgMCE9PXIpe2Zvcih2YXIgbj1bXSxhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBvPWUuY2hhckNvZGVBdChhKTtpZigxMjg8PW8mJnZvaWQgMD09PShvPXJbb10pKXJldHVybjtuW2FdPW99cmV0dXJuIG59fSxELk1BQ1NUUklORz1mdW5jdGlvbihlLHQpe3ZhciByPVIuTUFDU1RSSU5HKGUsdCk7cmV0dXJuIHZvaWQgMCE9PXI/ci5sZW5ndGg6MH0sUi5WQVJERUxUQVM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAscj1bXTt0PGUubGVuZ3RoOyl7dmFyIG49ZVt0XTt0PTA9PT1uP2ooZSx0LHIpOi0xMjg8PW4mJm48PTEyNz9WKGUsdCxyKTp6KGUsdCxyKX1yZXR1cm4gcn0sUi5JTkRFWD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MSxyPVt0XSxuPVtdLGE9MDthPGUubGVuZ3RoO2ErPTEpe3ZhciBvPVIuT0JKRUNUKGVbYV0pO0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KG4sbyksdCs9by5sZW5ndGgsci5wdXNoKHQpfWlmKDA9PT1uLmxlbmd0aClyZXR1cm5bMCwwXTtmb3IodmFyIGk9W10scz0xK01hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5sb2coMikpLzh8MCxsPVt2b2lkIDAsUi5CWVRFLFIuVVNIT1JULFIuVUlOVDI0LFIuVUxPTkddW3NdLHA9MDtwPHIubGVuZ3RoO3ArPTEpe3ZhciB1PWwocltwXSk7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoaSx1KX1yZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdChSLkNhcmQxNihlLmxlbmd0aCksUi5PZmZTaXplKHMpLGksbil9LEQuSU5ERVg9ZnVuY3Rpb24oZSl7cmV0dXJuIFIuSU5ERVgoZSkubGVuZ3RofSxSLkRJQ1Q9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9T2JqZWN0LmtleXMoZSksbj1yLmxlbmd0aCxhPTA7YTxuO2ErPTEpe3ZhciBvPXBhcnNlSW50KHJbYV0sMCksaT1lW29dO3Q9KHQ9dC5jb25jYXQoUi5PUEVSQU5EKGkudmFsdWUsaS50eXBlKSkpLmNvbmNhdChSLk9QRVJBVE9SKG8pKX1yZXR1cm4gdH0sRC5ESUNUPWZ1bmN0aW9uKGUpe3JldHVybiBSLkRJQ1QoZSkubGVuZ3RofSxSLk9QRVJBVE9SPWZ1bmN0aW9uKGUpe3JldHVybiBlPDEyMDA/W2VdOlsxMixlLTEyMDBdfSxSLk9QRVJBTkQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtpZihBcnJheS5pc0FycmF5KHQpKWZvcih2YXIgbj0wO248dC5sZW5ndGg7bis9MSlMLmFyZ3VtZW50KGUubGVuZ3RoPT09dC5sZW5ndGgsXCJOb3QgZW5vdWdoIGFyZ3VtZW50cyBnaXZlbiBmb3IgdHlwZVwiK3QpLHI9ci5jb25jYXQoUi5PUEVSQU5EKGVbbl0sdFtuXSkpO2Vsc2UgaWYoXCJTSURcIj09PXQpcj1yLmNvbmNhdChSLk5VTUJFUihlKSk7ZWxzZSBpZihcIm9mZnNldFwiPT09dClyPXIuY29uY2F0KFIuTlVNQkVSMzIoZSkpO2Vsc2UgaWYoXCJudW1iZXJcIj09PXQpcj1yLmNvbmNhdChSLk5VTUJFUihlKSk7ZWxzZXtpZihcInJlYWxcIiE9PXQpdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBvcGVyYW5kIHR5cGUgXCIrdCk7cj1yLmNvbmNhdChSLlJFQUwoZSkpfXJldHVybiByfSxSLk9QPVIuQllURSxELk9QPUQuQllURTt2YXIgSD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBXZWFrTWFwJiZuZXcgV2Vha01hcDtmdW5jdGlvbiBXKGUsdCxyKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rPTEpe3ZhciBhPXRbbl07dGhpc1thLm5hbWVdPWEudmFsdWV9aWYodGhpcy50YWJsZU5hbWU9ZSx0aGlzLmZpZWxkcz10LHIpZm9yKHZhciBvPU9iamVjdC5rZXlzKHIpLGk9MDtpPG8ubGVuZ3RoO2krPTEpe3ZhciBzPW9baV0sbD1yW3NdO3ZvaWQgMCE9PXRoaXNbc10mJih0aGlzW3NdPWwpfX1mdW5jdGlvbiBYKGUsdCxyKXt2b2lkIDA9PT1yJiYocj10Lmxlbmd0aCk7dmFyIG49bmV3IEFycmF5KHQubGVuZ3RoKzEpO25bMF09e25hbWU6ZStcIkNvdW50XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnJ9O2Zvcih2YXIgYT0wO2E8dC5sZW5ndGg7YSsrKW5bYSsxXT17bmFtZTplK2EsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnRbYV19O3JldHVybiBufWZ1bmN0aW9uIHEoZSx0LHIpe3ZhciBuPXQubGVuZ3RoLGE9bmV3IEFycmF5KG4rMSk7YVswXT17bmFtZTplK1wiQ291bnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6bn07Zm9yKHZhciBvPTA7bzxuO28rKylhW28rMV09e25hbWU6ZStvLHR5cGU6XCJUQUJMRVwiLHZhbHVlOnIodFtvXSxvKX07cmV0dXJuIGF9ZnVuY3Rpb24gWShlLHQscil7dmFyIG49dC5sZW5ndGgsYT1bXTthWzBdPXtuYW1lOmUrXCJDb3VudFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpufTtmb3IodmFyIG89MDtvPG47bysrKWE9YS5jb25jYXQocih0W29dLG8pKTtyZXR1cm4gYX1mdW5jdGlvbiBaKGUpezE9PT1lLmZvcm1hdD9XLmNhbGwodGhpcyxcImNvdmVyYWdlVGFibGVcIixbe25hbWU6XCJjb3ZlcmFnZUZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxfV0uY29uY2F0KFgoXCJnbHlwaFwiLGUuZ2x5cGhzKSkpOkwuYXNzZXJ0KCExLFwiQ2FuJ3QgY3JlYXRlIGNvdmVyYWdlIHRhYmxlIGZvcm1hdCAyIHlldC5cIil9ZnVuY3Rpb24gUShlKXtXLmNhbGwodGhpcyxcInNjcmlwdExpc3RUYWJsZVwiLFkoXCJzY3JpcHRSZWNvcmRcIixlLGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5zY3JpcHQsbj1yLmRlZmF1bHRMYW5nU3lzO3JldHVybiBMLmFzc2VydCghIW4sXCJVbmFibGUgdG8gd3JpdGUgR1NVQjogc2NyaXB0IFwiK2UudGFnK1wiIGhhcyBubyBkZWZhdWx0IGxhbmd1YWdlIHN5c3RlbS5cIiksW3tuYW1lOlwic2NyaXB0VGFnXCIrdCx0eXBlOlwiVEFHXCIsdmFsdWU6ZS50YWd9LHtuYW1lOlwic2NyaXB0XCIrdCx0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgVyhcInNjcmlwdFRhYmxlXCIsW3tuYW1lOlwiZGVmYXVsdExhbmdTeXNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgVyhcImRlZmF1bHRMYW5nU3lzXCIsW3tuYW1lOlwibG9va3VwT3JkZXJcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJyZXFGZWF0dXJlSW5kZXhcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6bi5yZXFGZWF0dXJlSW5kZXh9XS5jb25jYXQoWChcImZlYXR1cmVJbmRleFwiLG4uZmVhdHVyZUluZGV4ZXMpKSl9XS5jb25jYXQoWShcImxhbmdTeXNcIixyLmxhbmdTeXNSZWNvcmRzLGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5sYW5nU3lzO3JldHVyblt7bmFtZTpcImxhbmdTeXNUYWdcIit0LHR5cGU6XCJUQUdcIix2YWx1ZTplLnRhZ30se25hbWU6XCJsYW5nU3lzXCIrdCx0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgVyhcImxhbmdTeXNcIixbe25hbWU6XCJsb29rdXBPcmRlclwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInJlcUZlYXR1cmVJbmRleFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpyLnJlcUZlYXR1cmVJbmRleH1dLmNvbmNhdChYKFwiZmVhdHVyZUluZGV4XCIsci5mZWF0dXJlSW5kZXhlcykpKX1dfSkpKX1dfSkpfWZ1bmN0aW9uIEsoZSl7Vy5jYWxsKHRoaXMsXCJmZWF0dXJlTGlzdFRhYmxlXCIsWShcImZlYXR1cmVSZWNvcmRcIixlLGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5mZWF0dXJlO3JldHVyblt7bmFtZTpcImZlYXR1cmVUYWdcIit0LHR5cGU6XCJUQUdcIix2YWx1ZTplLnRhZ30se25hbWU6XCJmZWF0dXJlXCIrdCx0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgVyhcImZlYXR1cmVUYWJsZVwiLFt7bmFtZTpcImZlYXR1cmVQYXJhbXNcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ci5mZWF0dXJlUGFyYW1zfV0uY29uY2F0KFgoXCJsb29rdXBMaXN0SW5kZXhcIixyLmxvb2t1cExpc3RJbmRleGVzKSkpfV19KSl9ZnVuY3Rpb24gSihlLHIpe1cuY2FsbCh0aGlzLFwibG9va3VwTGlzdFRhYmxlXCIscShcImxvb2t1cFwiLGUsZnVuY3Rpb24oZSl7dmFyIHQ9cltlLmxvb2t1cFR5cGVdO3JldHVybiBMLmFzc2VydCghIXQsXCJVbmFibGUgdG8gd3JpdGUgR1NVQiBsb29rdXAgdHlwZSBcIitlLmxvb2t1cFR5cGUrXCIgdGFibGVzLlwiKSxuZXcgVyhcImxvb2t1cFRhYmxlXCIsW3tuYW1lOlwibG9va3VwVHlwZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplLmxvb2t1cFR5cGV9LHtuYW1lOlwibG9va3VwRmxhZ1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplLmxvb2t1cEZsYWd9XS5jb25jYXQocShcInN1YnRhYmxlXCIsZS5zdWJ0YWJsZXMsdCkpKX0pKX1SLkNIQVJTVFJJTkc9ZnVuY3Rpb24oZSl7aWYoSCl7dmFyIHQ9SC5nZXQoZSk7aWYodm9pZCAwIT09dClyZXR1cm4gdH1mb3IodmFyIHI9W10sbj1lLmxlbmd0aCxhPTA7YTxuO2ErPTEpe3ZhciBvPWVbYV07cj1yLmNvbmNhdChSW28udHlwZV0oby52YWx1ZSkpfXJldHVybiBIJiZILnNldChlLHIpLHJ9LEQuQ0hBUlNUUklORz1mdW5jdGlvbihlKXtyZXR1cm4gUi5DSEFSU1RSSU5HKGUpLmxlbmd0aH0sUi5PQkpFQ1Q9ZnVuY3Rpb24oZSl7dmFyIHQ9UltlLnR5cGVdO3JldHVybiBMLmFyZ3VtZW50KHZvaWQgMCE9PXQsXCJObyBlbmNvZGluZyBmdW5jdGlvbiBmb3IgdHlwZSBcIitlLnR5cGUpLHQoZS52YWx1ZSl9LEQuT0JKRUNUPWZ1bmN0aW9uKGUpe3ZhciB0PURbZS50eXBlXTtyZXR1cm4gTC5hcmd1bWVudCh2b2lkIDAhPT10LFwiTm8gc2l6ZU9mIGZ1bmN0aW9uIGZvciB0eXBlIFwiK2UudHlwZSksdChlLnZhbHVlKX0sUi5UQUJMRT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj1lLmZpZWxkcy5sZW5ndGgsbj1bXSxhPVtdLG89MDtvPHI7bys9MSl7dmFyIGk9ZS5maWVsZHNbb10scz1SW2kudHlwZV07TC5hcmd1bWVudCh2b2lkIDAhPT1zLFwiTm8gZW5jb2RpbmcgZnVuY3Rpb24gZm9yIGZpZWxkIHR5cGUgXCIraS50eXBlK1wiIChcIitpLm5hbWUrXCIpXCIpO3ZhciBsPWVbaS5uYW1lXTt2b2lkIDA9PT1sJiYobD1pLnZhbHVlKTt2YXIgcD1zKGwpO1wiVEFCTEVcIj09PWkudHlwZT8oYS5wdXNoKHQubGVuZ3RoKSx0PXQuY29uY2F0KFswLDBdKSxuLnB1c2gocCkpOnQ9dC5jb25jYXQocCl9Zm9yKHZhciB1PTA7dTxuLmxlbmd0aDt1Kz0xKXt2YXIgYz1hW3VdLGQ9dC5sZW5ndGg7TC5hcmd1bWVudChkPDY1NTM2LFwiVGFibGUgXCIrZS50YWJsZU5hbWUrXCIgdG9vIGJpZy5cIiksdFtjXT1kPj44LHRbYysxXT0yNTUmZCx0PXQuY29uY2F0KG5bdV0pfXJldHVybiB0fSxELlRBQkxFPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLHI9ZS5maWVsZHMubGVuZ3RoLG49MDtuPHI7bis9MSl7dmFyIGE9ZS5maWVsZHNbbl0sbz1EW2EudHlwZV07TC5hcmd1bWVudCh2b2lkIDAhPT1vLFwiTm8gc2l6ZU9mIGZ1bmN0aW9uIGZvciBmaWVsZCB0eXBlIFwiK2EudHlwZStcIiAoXCIrYS5uYW1lK1wiKVwiKTt2YXIgaT1lW2EubmFtZV07dm9pZCAwPT09aSYmKGk9YS52YWx1ZSksdCs9byhpKSxcIlRBQkxFXCI9PT1hLnR5cGUmJih0Kz0yKX1yZXR1cm4gdH0sUi5SRUNPUkQ9Ui5UQUJMRSxELlJFQ09SRD1ELlRBQkxFLFIuTElURVJBTD1mdW5jdGlvbihlKXtyZXR1cm4gZX0sRC5MSVRFUkFMPWZ1bmN0aW9uKGUpe3JldHVybiBlLmxlbmd0aH0sVy5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIFIuVEFCTEUodGhpcyl9LFcucHJvdG90eXBlLnNpemVPZj1mdW5jdGlvbigpe3JldHVybiBELlRBQkxFKHRoaXMpfTt2YXIgJD17VGFibGU6VyxSZWNvcmQ6VyxDb3ZlcmFnZTooWi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShXLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVosU2NyaXB0TGlzdDooUS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShXLnByb3RvdHlwZSkpLmNvbnN0cnVjdG9yPVEsRmVhdHVyZUxpc3Q6KEsucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVy5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1LLExvb2t1cExpc3Q6KEoucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVy5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1KLHVzaG9ydExpc3Q6WCx0YWJsZUxpc3Q6cSxyZWNvcmRMaXN0Oll9O2Z1bmN0aW9uIGVlKGUsdCl7cmV0dXJuIGUuZ2V0VWludDgodCl9ZnVuY3Rpb24gdGUoZSx0KXtyZXR1cm4gZS5nZXRVaW50MTYodCwhMSl9ZnVuY3Rpb24gcmUoZSx0KXtyZXR1cm4gZS5nZXRVaW50MzIodCwhMSl9ZnVuY3Rpb24gbmUoZSx0KXtyZXR1cm4gZS5nZXRJbnQxNih0LCExKStlLmdldFVpbnQxNih0KzIsITEpLzY1NTM1fXZhciBhZT17Ynl0ZToxLHVTaG9ydDoyLHNob3J0OjIsdUxvbmc6NCxmaXhlZDo0LGxvbmdEYXRlVGltZTo4LHRhZzo0fTtmdW5jdGlvbiBvZShlLHQpe3RoaXMuZGF0YT1lLHRoaXMub2Zmc2V0PXQsdGhpcy5yZWxhdGl2ZU9mZnNldD0wfW9lLnByb3RvdHlwZS5wYXJzZUJ5dGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmRhdGEuZ2V0VWludDgodGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCk7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPTEsZX0sb2UucHJvdG90eXBlLnBhcnNlQ2hhcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZGF0YS5nZXRJbnQ4KHRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQpO3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz0xLGV9LG9lLnByb3RvdHlwZS5wYXJzZUNhcmQ4PW9lLnByb3RvdHlwZS5wYXJzZUJ5dGUsb2UucHJvdG90eXBlLnBhcnNlQ2FyZDE2PW9lLnByb3RvdHlwZS5wYXJzZVVTaG9ydD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZGF0YS5nZXRVaW50MTYodGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCk7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPTIsZX0sb2UucHJvdG90eXBlLnBhcnNlU0lEPW9lLnByb3RvdHlwZS5wYXJzZVVTaG9ydCxvZS5wcm90b3R5cGUucGFyc2VPZmZzZXQxNj1vZS5wcm90b3R5cGUucGFyc2VVU2hvcnQsb2UucHJvdG90eXBlLnBhcnNlU2hvcnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmRhdGEuZ2V0SW50MTYodGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCk7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPTIsZX0sb2UucHJvdG90eXBlLnBhcnNlRjJEb3QxND1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZGF0YS5nZXRJbnQxNih0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KS8xNjM4NDtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9MixlfSxvZS5wcm90b3R5cGUucGFyc2VPZmZzZXQzMj1vZS5wcm90b3R5cGUucGFyc2VVTG9uZz1mdW5jdGlvbigpe3ZhciBlPXJlKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9NCxlfSxvZS5wcm90b3R5cGUucGFyc2VGaXhlZD1mdW5jdGlvbigpe3ZhciBlPW5lKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9NCxlfSxvZS5wcm90b3R5cGUucGFyc2VTdHJpbmc9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5kYXRhLHI9dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCxuPVwiXCI7dGhpcy5yZWxhdGl2ZU9mZnNldCs9ZTtmb3IodmFyIGE9MDthPGU7YSsrKW4rPVN0cmluZy5mcm9tQ2hhckNvZGUodC5nZXRVaW50OChyK2EpKTtyZXR1cm4gbn0sb2UucHJvdG90eXBlLnBhcnNlVGFnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VTdHJpbmcoNCl9LG9lLnByb3RvdHlwZS5wYXJzZUxvbmdEYXRlVGltZT1mdW5jdGlvbigpe3ZhciBlPXJlKHRoaXMuZGF0YSx0aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0KzQpO3JldHVybiBlLT0yMDgyODQ0ODAwLHRoaXMucmVsYXRpdmVPZmZzZXQrPTgsZX0sb2UucHJvdG90eXBlLnBhcnNlVmVyc2lvbj1mdW5jdGlvbihlKXt2YXIgdD10ZSh0aGlzLmRhdGEsdGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCkscj10ZSh0aGlzLmRhdGEsdGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCsyKTtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9NCx2b2lkIDA9PT1lJiYoZT00MDk2KSx0K3IvZS8xMH0sb2UucHJvdG90eXBlLnNraXA9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD0xKSx0aGlzLnJlbGF0aXZlT2Zmc2V0Kz1hZVtlXSp0fSxvZS5wcm90b3R5cGUucGFyc2VVTG9uZ0xpc3Q9ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9dGhpcy5wYXJzZVVMb25nKCkpO2Zvcih2YXIgdD1uZXcgQXJyYXkoZSkscj10aGlzLmRhdGEsbj10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LGE9MDthPGU7YSsrKXRbYV09ci5nZXRVaW50MzIobiksbis9NDtyZXR1cm4gdGhpcy5yZWxhdGl2ZU9mZnNldCs9NCplLHR9LG9lLnByb3RvdHlwZS5wYXJzZU9mZnNldDE2TGlzdD1vZS5wcm90b3R5cGUucGFyc2VVU2hvcnRMaXN0PWZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPXRoaXMucGFyc2VVU2hvcnQoKSk7Zm9yKHZhciB0PW5ldyBBcnJheShlKSxyPXRoaXMuZGF0YSxuPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsYT0wO2E8ZTthKyspdFthXT1yLmdldFVpbnQxNihuKSxuKz0yO3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz0yKmUsdH0sb2UucHJvdG90eXBlLnBhcnNlU2hvcnRMaXN0PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgQXJyYXkoZSkscj10aGlzLmRhdGEsbj10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LGE9MDthPGU7YSsrKXRbYV09ci5nZXRJbnQxNihuKSxuKz0yO3JldHVybiB0aGlzLnJlbGF0aXZlT2Zmc2V0Kz0yKmUsdH0sb2UucHJvdG90eXBlLnBhcnNlQnl0ZUxpc3Q9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PW5ldyBBcnJheShlKSxyPXRoaXMuZGF0YSxuPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsYT0wO2E8ZTthKyspdFthXT1yLmdldFVpbnQ4KG4rKyk7cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQrPWUsdH0sb2UucHJvdG90eXBlLnBhcnNlTGlzdD1mdW5jdGlvbihlLHQpe3R8fCh0PWUsZT10aGlzLnBhcnNlVVNob3J0KCkpO2Zvcih2YXIgcj1uZXcgQXJyYXkoZSksbj0wO248ZTtuKyspcltuXT10LmNhbGwodGhpcyk7cmV0dXJuIHJ9LG9lLnByb3RvdHlwZS5wYXJzZUxpc3QzMj1mdW5jdGlvbihlLHQpe3R8fCh0PWUsZT10aGlzLnBhcnNlVUxvbmcoKSk7Zm9yKHZhciByPW5ldyBBcnJheShlKSxuPTA7bjxlO24rKylyW25dPXQuY2FsbCh0aGlzKTtyZXR1cm4gcn0sb2UucHJvdG90eXBlLnBhcnNlUmVjb3JkTGlzdD1mdW5jdGlvbihlLHQpe3R8fCh0PWUsZT10aGlzLnBhcnNlVVNob3J0KCkpO2Zvcih2YXIgcj1uZXcgQXJyYXkoZSksbj1PYmplY3Qua2V5cyh0KSxhPTA7YTxlO2ErKyl7Zm9yKHZhciBvPXt9LGk9MDtpPG4ubGVuZ3RoO2krKyl7dmFyIHM9bltpXSxsPXRbc107b1tzXT1sLmNhbGwodGhpcyl9clthXT1vfXJldHVybiByfSxvZS5wcm90b3R5cGUucGFyc2VSZWNvcmRMaXN0MzI9ZnVuY3Rpb24oZSx0KXt0fHwodD1lLGU9dGhpcy5wYXJzZVVMb25nKCkpO2Zvcih2YXIgcj1uZXcgQXJyYXkoZSksbj1PYmplY3Qua2V5cyh0KSxhPTA7YTxlO2ErKyl7Zm9yKHZhciBvPXt9LGk9MDtpPG4ubGVuZ3RoO2krKyl7dmFyIHM9bltpXSxsPXRbc107b1tzXT1sLmNhbGwodGhpcyl9clthXT1vfXJldHVybiByfSxvZS5wcm90b3R5cGUucGFyc2VTdHJ1Y3Q9ZnVuY3Rpb24oZSl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZSlyZXR1cm4gZS5jYWxsKHRoaXMpO2Zvcih2YXIgdD1PYmplY3Qua2V5cyhlKSxyPXt9LG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGE9dFtuXSxvPWVbYV07clthXT1vLmNhbGwodGhpcyl9cmV0dXJuIHJ9LG9lLnByb3RvdHlwZS5wYXJzZVZhbHVlUmVjb3JkPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUmJihlPXRoaXMucGFyc2VVU2hvcnQoKSksMCE9PWUpe3ZhciB0PXt9O3JldHVybiAxJmUmJih0LnhQbGFjZW1lbnQ9dGhpcy5wYXJzZVNob3J0KCkpLDImZSYmKHQueVBsYWNlbWVudD10aGlzLnBhcnNlU2hvcnQoKSksNCZlJiYodC54QWR2YW5jZT10aGlzLnBhcnNlU2hvcnQoKSksOCZlJiYodC55QWR2YW5jZT10aGlzLnBhcnNlU2hvcnQoKSksMTYmZSYmKHQueFBsYURldmljZT12b2lkIDAsdGhpcy5wYXJzZVNob3J0KCkpLDMyJmUmJih0LnlQbGFEZXZpY2U9dm9pZCAwLHRoaXMucGFyc2VTaG9ydCgpKSw2NCZlJiYodC54QWR2RGV2aWNlPXZvaWQgMCx0aGlzLnBhcnNlU2hvcnQoKSksMTI4JmUmJih0LnlBZHZEZXZpY2U9dm9pZCAwLHRoaXMucGFyc2VTaG9ydCgpKSx0fX0sb2UucHJvdG90eXBlLnBhcnNlVmFsdWVSZWNvcmRMaXN0PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMucGFyc2VVU2hvcnQoKSx0PXRoaXMucGFyc2VVU2hvcnQoKSxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPXRoaXMucGFyc2VWYWx1ZVJlY29yZChlKTtyZXR1cm4gcn0sb2UucHJvdG90eXBlLnBhcnNlUG9pbnRlcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnBhcnNlT2Zmc2V0MTYoKTtpZigwPHQpcmV0dXJuIG5ldyBvZSh0aGlzLmRhdGEsdGhpcy5vZmZzZXQrdCkucGFyc2VTdHJ1Y3QoZSl9LG9lLnByb3RvdHlwZS5wYXJzZVBvaW50ZXIzMj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnBhcnNlT2Zmc2V0MzIoKTtpZigwPHQpcmV0dXJuIG5ldyBvZSh0aGlzLmRhdGEsdGhpcy5vZmZzZXQrdCkucGFyc2VTdHJ1Y3QoZSl9LG9lLnByb3RvdHlwZS5wYXJzZUxpc3RPZkxpc3RzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLHI9dGhpcy5wYXJzZU9mZnNldDE2TGlzdCgpLG49ci5sZW5ndGgsYT10aGlzLnJlbGF0aXZlT2Zmc2V0LG89bmV3IEFycmF5KG4pLGk9MDtpPG47aSsrKXt2YXIgcz1yW2ldO2lmKDAhPT1zKWlmKHQucmVsYXRpdmVPZmZzZXQ9cyxlKXtmb3IodmFyIGw9dC5wYXJzZU9mZnNldDE2TGlzdCgpLHA9bmV3IEFycmF5KGwubGVuZ3RoKSx1PTA7dTxsLmxlbmd0aDt1KyspdC5yZWxhdGl2ZU9mZnNldD1zK2xbdV0scFt1XT1lLmNhbGwodCk7b1tpXT1wfWVsc2Ugb1tpXT10LnBhcnNlVVNob3J0TGlzdCgpO2Vsc2Ugb1tpXT12b2lkIDB9cmV0dXJuIHRoaXMucmVsYXRpdmVPZmZzZXQ9YSxvfSxvZS5wcm90b3R5cGUucGFyc2VDb3ZlcmFnZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsdD10aGlzLnBhcnNlVVNob3J0KCkscj10aGlzLnBhcnNlVVNob3J0KCk7aWYoMT09PXQpcmV0dXJue2Zvcm1hdDoxLGdseXBoczp0aGlzLnBhcnNlVVNob3J0TGlzdChyKX07aWYoMiE9PXQpdGhyb3cgbmV3IEVycm9yKFwiMHhcIitlLnRvU3RyaW5nKDE2KStcIjogQ292ZXJhZ2UgZm9ybWF0IG11c3QgYmUgMSBvciAyLlwiKTtmb3IodmFyIG49bmV3IEFycmF5KHIpLGE9MDthPHI7YSsrKW5bYV09e3N0YXJ0OnRoaXMucGFyc2VVU2hvcnQoKSxlbmQ6dGhpcy5wYXJzZVVTaG9ydCgpLGluZGV4OnRoaXMucGFyc2VVU2hvcnQoKX07cmV0dXJue2Zvcm1hdDoyLHJhbmdlczpufX0sb2UucHJvdG90eXBlLnBhcnNlQ2xhc3NEZWY9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LHQ9dGhpcy5wYXJzZVVTaG9ydCgpO2lmKDE9PT10KXJldHVybntmb3JtYXQ6MSxzdGFydEdseXBoOnRoaXMucGFyc2VVU2hvcnQoKSxjbGFzc2VzOnRoaXMucGFyc2VVU2hvcnRMaXN0KCl9O2lmKDI9PT10KXJldHVybntmb3JtYXQ6MixyYW5nZXM6dGhpcy5wYXJzZVJlY29yZExpc3Qoe3N0YXJ0Om9lLnVTaG9ydCxlbmQ6b2UudVNob3J0LGNsYXNzSWQ6b2UudVNob3J0fSl9O3Rocm93IG5ldyBFcnJvcihcIjB4XCIrZS50b1N0cmluZygxNikrXCI6IENsYXNzRGVmIGZvcm1hdCBtdXN0IGJlIDEgb3IgMi5cIil9LG9lLmxpc3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZUxpc3QoZSx0KX19LG9lLmxpc3QzMj1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcnNlTGlzdDMyKGUsdCl9fSxvZS5yZWNvcmRMaXN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VSZWNvcmRMaXN0KGUsdCl9fSxvZS5yZWNvcmRMaXN0MzI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZVJlY29yZExpc3QzMihlLHQpfX0sb2UucG9pbnRlcj1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJzZVBvaW50ZXIoZSl9fSxvZS5wb2ludGVyMzI9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VQb2ludGVyMzIoZSl9fSxvZS50YWc9b2UucHJvdG90eXBlLnBhcnNlVGFnLG9lLmJ5dGU9b2UucHJvdG90eXBlLnBhcnNlQnl0ZSxvZS51U2hvcnQ9b2Uub2Zmc2V0MTY9b2UucHJvdG90eXBlLnBhcnNlVVNob3J0LG9lLnVTaG9ydExpc3Q9b2UucHJvdG90eXBlLnBhcnNlVVNob3J0TGlzdCxvZS51TG9uZz1vZS5vZmZzZXQzMj1vZS5wcm90b3R5cGUucGFyc2VVTG9uZyxvZS51TG9uZ0xpc3Q9b2UucHJvdG90eXBlLnBhcnNlVUxvbmdMaXN0LG9lLnN0cnVjdD1vZS5wcm90b3R5cGUucGFyc2VTdHJ1Y3Qsb2UuY292ZXJhZ2U9b2UucHJvdG90eXBlLnBhcnNlQ292ZXJhZ2Usb2UuY2xhc3NEZWY9b2UucHJvdG90eXBlLnBhcnNlQ2xhc3NEZWY7dmFyIGllPXtyZXNlcnZlZDpvZS51U2hvcnQscmVxRmVhdHVyZUluZGV4Om9lLnVTaG9ydCxmZWF0dXJlSW5kZXhlczpvZS51U2hvcnRMaXN0fTtvZS5wcm90b3R5cGUucGFyc2VTY3JpcHRMaXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyc2VQb2ludGVyKG9lLnJlY29yZExpc3Qoe3RhZzpvZS50YWcsc2NyaXB0Om9lLnBvaW50ZXIoe2RlZmF1bHRMYW5nU3lzOm9lLnBvaW50ZXIoaWUpLGxhbmdTeXNSZWNvcmRzOm9lLnJlY29yZExpc3Qoe3RhZzpvZS50YWcsbGFuZ1N5czpvZS5wb2ludGVyKGllKX0pfSl9KSl8fFtdfSxvZS5wcm90b3R5cGUucGFyc2VGZWF0dXJlTGlzdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcnNlUG9pbnRlcihvZS5yZWNvcmRMaXN0KHt0YWc6b2UudGFnLGZlYXR1cmU6b2UucG9pbnRlcih7ZmVhdHVyZVBhcmFtczpvZS5vZmZzZXQxNixsb29rdXBMaXN0SW5kZXhlczpvZS51U2hvcnRMaXN0fSl9KSl8fFtdfSxvZS5wcm90b3R5cGUucGFyc2VMb29rdXBMaXN0PWZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLnBhcnNlUG9pbnRlcihvZS5saXN0KG9lLnBvaW50ZXIoZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlVVNob3J0KCk7TC5hcmd1bWVudCgxPD1lJiZlPD05LFwiR1BPUy9HU1VCIGxvb2t1cCB0eXBlIFwiK2UrXCIgdW5rbm93bi5cIik7dmFyIHQ9dGhpcy5wYXJzZVVTaG9ydCgpLHI9MTYmdDtyZXR1cm57bG9va3VwVHlwZTplLGxvb2t1cEZsYWc6dCxzdWJ0YWJsZXM6dGhpcy5wYXJzZUxpc3Qob2UucG9pbnRlcihuW2VdKSksbWFya0ZpbHRlcmluZ1NldDpyP3RoaXMucGFyc2VVU2hvcnQoKTp2b2lkIDB9fSkpKXx8W119LG9lLnByb3RvdHlwZS5wYXJzZUZlYXR1cmVWYXJpYXRpb25zTGlzdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcnNlUG9pbnRlcjMyKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpLHQ9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiBMLmFyZ3VtZW50KDE9PT1lJiZ0PDEsXCJHUE9TL0dTVUIgZmVhdHVyZSB2YXJpYXRpb25zIHRhYmxlIHVua25vd24uXCIpLHRoaXMucGFyc2VSZWNvcmRMaXN0MzIoe2NvbmRpdGlvblNldE9mZnNldDpvZS5vZmZzZXQzMixmZWF0dXJlVGFibGVTdWJzdGl0dXRpb25PZmZzZXQ6b2Uub2Zmc2V0MzJ9KX0pfHxbXX07dmFyIHNlPXtnZXRCeXRlOmVlLGdldENhcmQ4OmVlLGdldFVTaG9ydDp0ZSxnZXRDYXJkMTY6dGUsZ2V0U2hvcnQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5nZXRJbnQxNih0LCExKX0sZ2V0VUxvbmc6cmUsZ2V0Rml4ZWQ6bmUsZ2V0VGFnOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPVwiXCIsbj10O248dCs0O24rPTEpcis9U3RyaW5nLmZyb21DaGFyQ29kZShlLmdldEludDgobikpO3JldHVybiByfSxnZXRPZmZzZXQ6ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj0wLGE9MDthPHI7YSs9MSluPDw9OCxuKz1lLmdldFVpbnQ4KHQrYSk7cmV0dXJuIG59LGdldEJ5dGVzOmZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49W10sYT10O2E8cjthKz0xKW4ucHVzaChlLmdldFVpbnQ4KGEpKTtyZXR1cm4gbn0sYnl0ZXNUb1N0cmluZzpmdW5jdGlvbihlKXtmb3IodmFyIHQ9XCJcIixyPTA7cjxlLmxlbmd0aDtyKz0xKXQrPVN0cmluZy5mcm9tQ2hhckNvZGUoZVtyXSk7cmV0dXJuIHR9LFBhcnNlcjpvZX07dmFyIGxlPXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPXt9O3IudmVyc2lvbj1zZS5nZXRVU2hvcnQoZSx0KSxMLmFyZ3VtZW50KDA9PT1yLnZlcnNpb24sXCJjbWFwIHRhYmxlIHZlcnNpb24gc2hvdWxkIGJlIDAuXCIpLHIubnVtVGFibGVzPXNlLmdldFVTaG9ydChlLHQrMik7Zm9yKHZhciBuPS0xLGE9ci5udW1UYWJsZXMtMTswPD1hOy0tYSl7dmFyIG89c2UuZ2V0VVNob3J0KGUsdCs0KzgqYSksaT1zZS5nZXRVU2hvcnQoZSx0KzQrOCphKzIpO2lmKDM9PT1vJiYoMD09PWl8fDE9PT1pfHwxMD09PWkpfHwwPT09byYmKDA9PT1pfHwxPT09aXx8Mj09PWl8fDM9PT1pfHw0PT09aSkpe249c2UuZ2V0VUxvbmcoZSx0KzQrOCphKzQpO2JyZWFrfX1pZigtMT09PW4pdGhyb3cgbmV3IEVycm9yKFwiTm8gdmFsaWQgY21hcCBzdWItdGFibGVzIGZvdW5kLlwiKTt2YXIgcz1uZXcgc2UuUGFyc2VyKGUsdCtuKTtpZihyLmZvcm1hdD1zLnBhcnNlVVNob3J0KCksMTI9PT1yLmZvcm1hdCkhZnVuY3Rpb24oZSx0KXt2YXIgcjt0LnBhcnNlVVNob3J0KCksZS5sZW5ndGg9dC5wYXJzZVVMb25nKCksZS5sYW5ndWFnZT10LnBhcnNlVUxvbmcoKSxlLmdyb3VwQ291bnQ9cj10LnBhcnNlVUxvbmcoKSxlLmdseXBoSW5kZXhNYXA9e307Zm9yKHZhciBuPTA7bjxyO24rPTEpZm9yKHZhciBhPXQucGFyc2VVTG9uZygpLG89dC5wYXJzZVVMb25nKCksaT10LnBhcnNlVUxvbmcoKSxzPWE7czw9bztzKz0xKWUuZ2x5cGhJbmRleE1hcFtzXT1pLGkrK30ocixzKTtlbHNle2lmKDQhPT1yLmZvcm1hdCl0aHJvdyBuZXcgRXJyb3IoXCJPbmx5IGZvcm1hdCA0IGFuZCAxMiBjbWFwIHRhYmxlcyBhcmUgc3VwcG9ydGVkIChmb3VuZCBmb3JtYXQgXCIrci5mb3JtYXQrXCIpLlwiKTshZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbztlLmxlbmd0aD10LnBhcnNlVVNob3J0KCksZS5sYW5ndWFnZT10LnBhcnNlVVNob3J0KCksZS5zZWdDb3VudD1vPXQucGFyc2VVU2hvcnQoKT4+MSx0LnNraXAoXCJ1U2hvcnRcIiwzKSxlLmdseXBoSW5kZXhNYXA9e307Zm9yKHZhciBpPW5ldyBzZS5QYXJzZXIocixuK2ErMTQpLHM9bmV3IHNlLlBhcnNlcihyLG4rYSsxNisyKm8pLGw9bmV3IHNlLlBhcnNlcihyLG4rYSsxNis0Km8pLHA9bmV3IHNlLlBhcnNlcihyLG4rYSsxNis2Km8pLHU9bithKzE2KzgqbyxjPTA7YzxvLTE7Yys9MSlmb3IodmFyIGQ9dm9pZCAwLGg9aS5wYXJzZVVTaG9ydCgpLG09cy5wYXJzZVVTaG9ydCgpLGY9bC5wYXJzZVNob3J0KCkseT1wLnBhcnNlVVNob3J0KCksZz1tO2c8PWg7Zys9MSkwIT09eT8odT1wLm9mZnNldCtwLnJlbGF0aXZlT2Zmc2V0LTIsdSs9eSx1Kz0yKihnLW0pLDAhPT0oZD1zZS5nZXRVU2hvcnQocix1KSkmJihkPWQrZiY2NTUzNSkpOmQ9ZytmJjY1NTM1LGUuZ2x5cGhJbmRleE1hcFtnXT1kfShyLHMsZSx0LG4pfXJldHVybiByfSxtYWtlOmZ1bmN0aW9uKGUpe3ZhciB0LHI9ITA7Zm9yKHQ9ZS5sZW5ndGgtMTswPHQ7LS10KXtpZig2NTUzNTxlLmdldCh0KS51bmljb2RlKXtjb25zb2xlLmxvZyhcIkFkZGluZyBDTUFQIGZvcm1hdCAxMiAobmVlZGVkISlcIikscj0hMTticmVha319dmFyIG49W3tuYW1lOlwidmVyc2lvblwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcIm51bVRhYmxlc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpyPzE6Mn0se25hbWU6XCJwbGF0Zm9ybUlEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjN9LHtuYW1lOlwiZW5jb2RpbmdJRFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxfSx7bmFtZTpcIm9mZnNldFwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOnI/MTI6MjB9XTtyfHwobj1uLmNvbmNhdChbe25hbWU6XCJjbWFwMTJQbGF0Zm9ybUlEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjN9LHtuYW1lOlwiY21hcDEyRW5jb2RpbmdJRFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxMH0se25hbWU6XCJjbWFwMTJPZmZzZXRcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfV0pKSxuPW4uY29uY2F0KFt7bmFtZTpcImZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTo0fSx7bmFtZTpcImNtYXA0TGVuZ3RoXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwibGFuZ3VhZ2VcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJzZWdDb3VudFgyXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwic2VhcmNoUmFuZ2VcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJlbnRyeVNlbGVjdG9yXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwicmFuZ2VTaGlmdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfV0pO3ZhciBhLG8saSxzPW5ldyAkLlRhYmxlKFwiY21hcFwiLG4pO2ZvcihzLnNlZ21lbnRzPVtdLHQ9MDt0PGUubGVuZ3RoO3QrPTEpe2Zvcih2YXIgbD1lLmdldCh0KSxwPTA7cDxsLnVuaWNvZGVzLmxlbmd0aDtwKz0xKWE9cyxvPWwudW5pY29kZXNbcF0saT10LGEuc2VnbWVudHMucHVzaCh7ZW5kOm8sc3RhcnQ6byxkZWx0YTotKG8taSksb2Zmc2V0OjAsZ2x5cGhJbmRleDppfSk7cy5zZWdtZW50cz1zLnNlZ21lbnRzLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5zdGFydC10LnN0YXJ0fSl9cy5zZWdtZW50cy5wdXNoKHtlbmQ6NjU1MzUsc3RhcnQ6NjU1MzUsZGVsdGE6MSxvZmZzZXQ6MH0pO3ZhciB1PXMuc2VnbWVudHMubGVuZ3RoLGM9MCxkPVtdLGg9W10sbT1bXSxmPVtdLHk9W10sZz1bXTtmb3IodD0wO3Q8dTt0Kz0xKXt2YXIgdj1zLnNlZ21lbnRzW3RdO3YuZW5kPD02NTUzNSYmdi5zdGFydDw9NjU1MzU/KGQ9ZC5jb25jYXQoe25hbWU6XCJlbmRfXCIrdCx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6di5lbmR9KSxoPWguY29uY2F0KHtuYW1lOlwic3RhcnRfXCIrdCx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6di5zdGFydH0pLG09bS5jb25jYXQoe25hbWU6XCJpZERlbHRhX1wiK3QsdHlwZTpcIlNIT1JUXCIsdmFsdWU6di5kZWx0YX0pLGY9Zi5jb25jYXQoe25hbWU6XCJpZFJhbmdlT2Zmc2V0X1wiK3QsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnYub2Zmc2V0fSksdm9pZCAwIT09di5nbHlwaElkJiYoeT15LmNvbmNhdCh7bmFtZTpcImdseXBoX1wiK3QsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnYuZ2x5cGhJZH0pKSk6Yys9MSxyfHx2b2lkIDA9PT12LmdseXBoSW5kZXh8fChnPShnPShnPWcuY29uY2F0KHtuYW1lOlwiY21hcDEyU3RhcnRfXCIrdCx0eXBlOlwiVUxPTkdcIix2YWx1ZTp2LnN0YXJ0fSkpLmNvbmNhdCh7bmFtZTpcImNtYXAxMkVuZF9cIit0LHR5cGU6XCJVTE9OR1wiLHZhbHVlOnYuZW5kfSkpLmNvbmNhdCh7bmFtZTpcImNtYXAxMkdseXBoX1wiK3QsdHlwZTpcIlVMT05HXCIsdmFsdWU6di5nbHlwaEluZGV4fSkpfWlmKHMuc2VnQ291bnRYMj0yKih1LWMpLHMuc2VhcmNoUmFuZ2U9MipNYXRoLnBvdygyLE1hdGguZmxvb3IoTWF0aC5sb2codS1jKS9NYXRoLmxvZygyKSkpLHMuZW50cnlTZWxlY3Rvcj1NYXRoLmxvZyhzLnNlYXJjaFJhbmdlLzIpL01hdGgubG9nKDIpLHMucmFuZ2VTaGlmdD1zLnNlZ0NvdW50WDItcy5zZWFyY2hSYW5nZSxzLmZpZWxkcz1zLmZpZWxkcy5jb25jYXQoZCkscy5maWVsZHMucHVzaCh7bmFtZTpcInJlc2VydmVkUGFkXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9KSxzLmZpZWxkcz1zLmZpZWxkcy5jb25jYXQoaCkscy5maWVsZHM9cy5maWVsZHMuY29uY2F0KG0pLHMuZmllbGRzPXMuZmllbGRzLmNvbmNhdChmKSxzLmZpZWxkcz1zLmZpZWxkcy5jb25jYXQoeSkscy5jbWFwNExlbmd0aD0xNCsyKmQubGVuZ3RoKzIrMipoLmxlbmd0aCsyKm0ubGVuZ3RoKzIqZi5sZW5ndGgrMip5Lmxlbmd0aCwhcil7dmFyIGI9MTYrNCpnLmxlbmd0aDtzLmNtYXAxMk9mZnNldD0yMCtzLmNtYXA0TGVuZ3RoLHMuZmllbGRzPXMuZmllbGRzLmNvbmNhdChbe25hbWU6XCJjbWFwMTJGb3JtYXRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MTJ9LHtuYW1lOlwiY21hcDEyUmVzZXJ2ZWRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJjbWFwMTJMZW5ndGhcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTpifSx7bmFtZTpcImNtYXAxMkxhbmd1YWdlXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJjbWFwMTJuR3JvdXBzXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6Zy5sZW5ndGgvM31dKSxzLmZpZWxkcz1zLmZpZWxkcy5jb25jYXQoZyl9cmV0dXJuIHN9fSxwZT1bXCIubm90ZGVmXCIsXCJzcGFjZVwiLFwiZXhjbGFtXCIsXCJxdW90ZWRibFwiLFwibnVtYmVyc2lnblwiLFwiZG9sbGFyXCIsXCJwZXJjZW50XCIsXCJhbXBlcnNhbmRcIixcInF1b3RlcmlnaHRcIixcInBhcmVubGVmdFwiLFwicGFyZW5yaWdodFwiLFwiYXN0ZXJpc2tcIixcInBsdXNcIixcImNvbW1hXCIsXCJoeXBoZW5cIixcInBlcmlvZFwiLFwic2xhc2hcIixcInplcm9cIixcIm9uZVwiLFwidHdvXCIsXCJ0aHJlZVwiLFwiZm91clwiLFwiZml2ZVwiLFwic2l4XCIsXCJzZXZlblwiLFwiZWlnaHRcIixcIm5pbmVcIixcImNvbG9uXCIsXCJzZW1pY29sb25cIixcImxlc3NcIixcImVxdWFsXCIsXCJncmVhdGVyXCIsXCJxdWVzdGlvblwiLFwiYXRcIixcIkFcIixcIkJcIixcIkNcIixcIkRcIixcIkVcIixcIkZcIixcIkdcIixcIkhcIixcIklcIixcIkpcIixcIktcIixcIkxcIixcIk1cIixcIk5cIixcIk9cIixcIlBcIixcIlFcIixcIlJcIixcIlNcIixcIlRcIixcIlVcIixcIlZcIixcIldcIixcIlhcIixcIllcIixcIlpcIixcImJyYWNrZXRsZWZ0XCIsXCJiYWNrc2xhc2hcIixcImJyYWNrZXRyaWdodFwiLFwiYXNjaWljaXJjdW1cIixcInVuZGVyc2NvcmVcIixcInF1b3RlbGVmdFwiLFwiYVwiLFwiYlwiLFwiY1wiLFwiZFwiLFwiZVwiLFwiZlwiLFwiZ1wiLFwiaFwiLFwiaVwiLFwialwiLFwia1wiLFwibFwiLFwibVwiLFwiblwiLFwib1wiLFwicFwiLFwicVwiLFwiclwiLFwic1wiLFwidFwiLFwidVwiLFwidlwiLFwid1wiLFwieFwiLFwieVwiLFwielwiLFwiYnJhY2VsZWZ0XCIsXCJiYXJcIixcImJyYWNlcmlnaHRcIixcImFzY2lpdGlsZGVcIixcImV4Y2xhbWRvd25cIixcImNlbnRcIixcInN0ZXJsaW5nXCIsXCJmcmFjdGlvblwiLFwieWVuXCIsXCJmbG9yaW5cIixcInNlY3Rpb25cIixcImN1cnJlbmN5XCIsXCJxdW90ZXNpbmdsZVwiLFwicXVvdGVkYmxsZWZ0XCIsXCJndWlsbGVtb3RsZWZ0XCIsXCJndWlsc2luZ2xsZWZ0XCIsXCJndWlsc2luZ2xyaWdodFwiLFwiZmlcIixcImZsXCIsXCJlbmRhc2hcIixcImRhZ2dlclwiLFwiZGFnZ2VyZGJsXCIsXCJwZXJpb2RjZW50ZXJlZFwiLFwicGFyYWdyYXBoXCIsXCJidWxsZXRcIixcInF1b3Rlc2luZ2xiYXNlXCIsXCJxdW90ZWRibGJhc2VcIixcInF1b3RlZGJscmlnaHRcIixcImd1aWxsZW1vdHJpZ2h0XCIsXCJlbGxpcHNpc1wiLFwicGVydGhvdXNhbmRcIixcInF1ZXN0aW9uZG93blwiLFwiZ3JhdmVcIixcImFjdXRlXCIsXCJjaXJjdW1mbGV4XCIsXCJ0aWxkZVwiLFwibWFjcm9uXCIsXCJicmV2ZVwiLFwiZG90YWNjZW50XCIsXCJkaWVyZXNpc1wiLFwicmluZ1wiLFwiY2VkaWxsYVwiLFwiaHVuZ2FydW1sYXV0XCIsXCJvZ29uZWtcIixcImNhcm9uXCIsXCJlbWRhc2hcIixcIkFFXCIsXCJvcmRmZW1pbmluZVwiLFwiTHNsYXNoXCIsXCJPc2xhc2hcIixcIk9FXCIsXCJvcmRtYXNjdWxpbmVcIixcImFlXCIsXCJkb3RsZXNzaVwiLFwibHNsYXNoXCIsXCJvc2xhc2hcIixcIm9lXCIsXCJnZXJtYW5kYmxzXCIsXCJvbmVzdXBlcmlvclwiLFwibG9naWNhbG5vdFwiLFwibXVcIixcInRyYWRlbWFya1wiLFwiRXRoXCIsXCJvbmVoYWxmXCIsXCJwbHVzbWludXNcIixcIlRob3JuXCIsXCJvbmVxdWFydGVyXCIsXCJkaXZpZGVcIixcImJyb2tlbmJhclwiLFwiZGVncmVlXCIsXCJ0aG9yblwiLFwidGhyZWVxdWFydGVyc1wiLFwidHdvc3VwZXJpb3JcIixcInJlZ2lzdGVyZWRcIixcIm1pbnVzXCIsXCJldGhcIixcIm11bHRpcGx5XCIsXCJ0aHJlZXN1cGVyaW9yXCIsXCJjb3B5cmlnaHRcIixcIkFhY3V0ZVwiLFwiQWNpcmN1bWZsZXhcIixcIkFkaWVyZXNpc1wiLFwiQWdyYXZlXCIsXCJBcmluZ1wiLFwiQXRpbGRlXCIsXCJDY2VkaWxsYVwiLFwiRWFjdXRlXCIsXCJFY2lyY3VtZmxleFwiLFwiRWRpZXJlc2lzXCIsXCJFZ3JhdmVcIixcIklhY3V0ZVwiLFwiSWNpcmN1bWZsZXhcIixcIklkaWVyZXNpc1wiLFwiSWdyYXZlXCIsXCJOdGlsZGVcIixcIk9hY3V0ZVwiLFwiT2NpcmN1bWZsZXhcIixcIk9kaWVyZXNpc1wiLFwiT2dyYXZlXCIsXCJPdGlsZGVcIixcIlNjYXJvblwiLFwiVWFjdXRlXCIsXCJVY2lyY3VtZmxleFwiLFwiVWRpZXJlc2lzXCIsXCJVZ3JhdmVcIixcIllhY3V0ZVwiLFwiWWRpZXJlc2lzXCIsXCJaY2Fyb25cIixcImFhY3V0ZVwiLFwiYWNpcmN1bWZsZXhcIixcImFkaWVyZXNpc1wiLFwiYWdyYXZlXCIsXCJhcmluZ1wiLFwiYXRpbGRlXCIsXCJjY2VkaWxsYVwiLFwiZWFjdXRlXCIsXCJlY2lyY3VtZmxleFwiLFwiZWRpZXJlc2lzXCIsXCJlZ3JhdmVcIixcImlhY3V0ZVwiLFwiaWNpcmN1bWZsZXhcIixcImlkaWVyZXNpc1wiLFwiaWdyYXZlXCIsXCJudGlsZGVcIixcIm9hY3V0ZVwiLFwib2NpcmN1bWZsZXhcIixcIm9kaWVyZXNpc1wiLFwib2dyYXZlXCIsXCJvdGlsZGVcIixcInNjYXJvblwiLFwidWFjdXRlXCIsXCJ1Y2lyY3VtZmxleFwiLFwidWRpZXJlc2lzXCIsXCJ1Z3JhdmVcIixcInlhY3V0ZVwiLFwieWRpZXJlc2lzXCIsXCJ6Y2Fyb25cIixcImV4Y2xhbXNtYWxsXCIsXCJIdW5nYXJ1bWxhdXRzbWFsbFwiLFwiZG9sbGFyb2xkc3R5bGVcIixcImRvbGxhcnN1cGVyaW9yXCIsXCJhbXBlcnNhbmRzbWFsbFwiLFwiQWN1dGVzbWFsbFwiLFwicGFyZW5sZWZ0c3VwZXJpb3JcIixcInBhcmVucmlnaHRzdXBlcmlvclwiLFwiMjY2IGZmXCIsXCJvbmVkb3RlbmxlYWRlclwiLFwiemVyb29sZHN0eWxlXCIsXCJvbmVvbGRzdHlsZVwiLFwidHdvb2xkc3R5bGVcIixcInRocmVlb2xkc3R5bGVcIixcImZvdXJvbGRzdHlsZVwiLFwiZml2ZW9sZHN0eWxlXCIsXCJzaXhvbGRzdHlsZVwiLFwic2V2ZW5vbGRzdHlsZVwiLFwiZWlnaHRvbGRzdHlsZVwiLFwibmluZW9sZHN0eWxlXCIsXCJjb21tYXN1cGVyaW9yXCIsXCJ0aHJlZXF1YXJ0ZXJzZW1kYXNoXCIsXCJwZXJpb2RzdXBlcmlvclwiLFwicXVlc3Rpb25zbWFsbFwiLFwiYXN1cGVyaW9yXCIsXCJic3VwZXJpb3JcIixcImNlbnRzdXBlcmlvclwiLFwiZHN1cGVyaW9yXCIsXCJlc3VwZXJpb3JcIixcImlzdXBlcmlvclwiLFwibHN1cGVyaW9yXCIsXCJtc3VwZXJpb3JcIixcIm5zdXBlcmlvclwiLFwib3N1cGVyaW9yXCIsXCJyc3VwZXJpb3JcIixcInNzdXBlcmlvclwiLFwidHN1cGVyaW9yXCIsXCJmZlwiLFwiZmZpXCIsXCJmZmxcIixcInBhcmVubGVmdGluZmVyaW9yXCIsXCJwYXJlbnJpZ2h0aW5mZXJpb3JcIixcIkNpcmN1bWZsZXhzbWFsbFwiLFwiaHlwaGVuc3VwZXJpb3JcIixcIkdyYXZlc21hbGxcIixcIkFzbWFsbFwiLFwiQnNtYWxsXCIsXCJDc21hbGxcIixcIkRzbWFsbFwiLFwiRXNtYWxsXCIsXCJGc21hbGxcIixcIkdzbWFsbFwiLFwiSHNtYWxsXCIsXCJJc21hbGxcIixcIkpzbWFsbFwiLFwiS3NtYWxsXCIsXCJMc21hbGxcIixcIk1zbWFsbFwiLFwiTnNtYWxsXCIsXCJPc21hbGxcIixcIlBzbWFsbFwiLFwiUXNtYWxsXCIsXCJSc21hbGxcIixcIlNzbWFsbFwiLFwiVHNtYWxsXCIsXCJVc21hbGxcIixcIlZzbWFsbFwiLFwiV3NtYWxsXCIsXCJYc21hbGxcIixcIllzbWFsbFwiLFwiWnNtYWxsXCIsXCJjb2xvbm1vbmV0YXJ5XCIsXCJvbmVmaXR0ZWRcIixcInJ1cGlhaFwiLFwiVGlsZGVzbWFsbFwiLFwiZXhjbGFtZG93bnNtYWxsXCIsXCJjZW50b2xkc3R5bGVcIixcIkxzbGFzaHNtYWxsXCIsXCJTY2Fyb25zbWFsbFwiLFwiWmNhcm9uc21hbGxcIixcIkRpZXJlc2lzc21hbGxcIixcIkJyZXZlc21hbGxcIixcIkNhcm9uc21hbGxcIixcIkRvdGFjY2VudHNtYWxsXCIsXCJNYWNyb25zbWFsbFwiLFwiZmlndXJlZGFzaFwiLFwiaHlwaGVuaW5mZXJpb3JcIixcIk9nb25la3NtYWxsXCIsXCJSaW5nc21hbGxcIixcIkNlZGlsbGFzbWFsbFwiLFwicXVlc3Rpb25kb3duc21hbGxcIixcIm9uZWVpZ2h0aFwiLFwidGhyZWVlaWdodGhzXCIsXCJmaXZlZWlnaHRoc1wiLFwic2V2ZW5laWdodGhzXCIsXCJvbmV0aGlyZFwiLFwidHdvdGhpcmRzXCIsXCJ6ZXJvc3VwZXJpb3JcIixcImZvdXJzdXBlcmlvclwiLFwiZml2ZXN1cGVyaW9yXCIsXCJzaXhzdXBlcmlvclwiLFwic2V2ZW5zdXBlcmlvclwiLFwiZWlnaHRzdXBlcmlvclwiLFwibmluZXN1cGVyaW9yXCIsXCJ6ZXJvaW5mZXJpb3JcIixcIm9uZWluZmVyaW9yXCIsXCJ0d29pbmZlcmlvclwiLFwidGhyZWVpbmZlcmlvclwiLFwiZm91cmluZmVyaW9yXCIsXCJmaXZlaW5mZXJpb3JcIixcInNpeGluZmVyaW9yXCIsXCJzZXZlbmluZmVyaW9yXCIsXCJlaWdodGluZmVyaW9yXCIsXCJuaW5laW5mZXJpb3JcIixcImNlbnRpbmZlcmlvclwiLFwiZG9sbGFyaW5mZXJpb3JcIixcInBlcmlvZGluZmVyaW9yXCIsXCJjb21tYWluZmVyaW9yXCIsXCJBZ3JhdmVzbWFsbFwiLFwiQWFjdXRlc21hbGxcIixcIkFjaXJjdW1mbGV4c21hbGxcIixcIkF0aWxkZXNtYWxsXCIsXCJBZGllcmVzaXNzbWFsbFwiLFwiQXJpbmdzbWFsbFwiLFwiQUVzbWFsbFwiLFwiQ2NlZGlsbGFzbWFsbFwiLFwiRWdyYXZlc21hbGxcIixcIkVhY3V0ZXNtYWxsXCIsXCJFY2lyY3VtZmxleHNtYWxsXCIsXCJFZGllcmVzaXNzbWFsbFwiLFwiSWdyYXZlc21hbGxcIixcIklhY3V0ZXNtYWxsXCIsXCJJY2lyY3VtZmxleHNtYWxsXCIsXCJJZGllcmVzaXNzbWFsbFwiLFwiRXRoc21hbGxcIixcIk50aWxkZXNtYWxsXCIsXCJPZ3JhdmVzbWFsbFwiLFwiT2FjdXRlc21hbGxcIixcIk9jaXJjdW1mbGV4c21hbGxcIixcIk90aWxkZXNtYWxsXCIsXCJPZGllcmVzaXNzbWFsbFwiLFwiT0VzbWFsbFwiLFwiT3NsYXNoc21hbGxcIixcIlVncmF2ZXNtYWxsXCIsXCJVYWN1dGVzbWFsbFwiLFwiVWNpcmN1bWZsZXhzbWFsbFwiLFwiVWRpZXJlc2lzc21hbGxcIixcIllhY3V0ZXNtYWxsXCIsXCJUaG9ybnNtYWxsXCIsXCJZZGllcmVzaXNzbWFsbFwiLFwiMDAxLjAwMFwiLFwiMDAxLjAwMVwiLFwiMDAxLjAwMlwiLFwiMDAxLjAwM1wiLFwiQmxhY2tcIixcIkJvbGRcIixcIkJvb2tcIixcIkxpZ2h0XCIsXCJNZWRpdW1cIixcIlJlZ3VsYXJcIixcIlJvbWFuXCIsXCJTZW1pYm9sZFwiXSx1ZT1bXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwic3BhY2VcIixcImV4Y2xhbVwiLFwicXVvdGVkYmxcIixcIm51bWJlcnNpZ25cIixcImRvbGxhclwiLFwicGVyY2VudFwiLFwiYW1wZXJzYW5kXCIsXCJxdW90ZXJpZ2h0XCIsXCJwYXJlbmxlZnRcIixcInBhcmVucmlnaHRcIixcImFzdGVyaXNrXCIsXCJwbHVzXCIsXCJjb21tYVwiLFwiaHlwaGVuXCIsXCJwZXJpb2RcIixcInNsYXNoXCIsXCJ6ZXJvXCIsXCJvbmVcIixcInR3b1wiLFwidGhyZWVcIixcImZvdXJcIixcImZpdmVcIixcInNpeFwiLFwic2V2ZW5cIixcImVpZ2h0XCIsXCJuaW5lXCIsXCJjb2xvblwiLFwic2VtaWNvbG9uXCIsXCJsZXNzXCIsXCJlcXVhbFwiLFwiZ3JlYXRlclwiLFwicXVlc3Rpb25cIixcImF0XCIsXCJBXCIsXCJCXCIsXCJDXCIsXCJEXCIsXCJFXCIsXCJGXCIsXCJHXCIsXCJIXCIsXCJJXCIsXCJKXCIsXCJLXCIsXCJMXCIsXCJNXCIsXCJOXCIsXCJPXCIsXCJQXCIsXCJRXCIsXCJSXCIsXCJTXCIsXCJUXCIsXCJVXCIsXCJWXCIsXCJXXCIsXCJYXCIsXCJZXCIsXCJaXCIsXCJicmFja2V0bGVmdFwiLFwiYmFja3NsYXNoXCIsXCJicmFja2V0cmlnaHRcIixcImFzY2lpY2lyY3VtXCIsXCJ1bmRlcnNjb3JlXCIsXCJxdW90ZWxlZnRcIixcImFcIixcImJcIixcImNcIixcImRcIixcImVcIixcImZcIixcImdcIixcImhcIixcImlcIixcImpcIixcImtcIixcImxcIixcIm1cIixcIm5cIixcIm9cIixcInBcIixcInFcIixcInJcIixcInNcIixcInRcIixcInVcIixcInZcIixcIndcIixcInhcIixcInlcIixcInpcIixcImJyYWNlbGVmdFwiLFwiYmFyXCIsXCJicmFjZXJpZ2h0XCIsXCJhc2NpaXRpbGRlXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcImV4Y2xhbWRvd25cIixcImNlbnRcIixcInN0ZXJsaW5nXCIsXCJmcmFjdGlvblwiLFwieWVuXCIsXCJmbG9yaW5cIixcInNlY3Rpb25cIixcImN1cnJlbmN5XCIsXCJxdW90ZXNpbmdsZVwiLFwicXVvdGVkYmxsZWZ0XCIsXCJndWlsbGVtb3RsZWZ0XCIsXCJndWlsc2luZ2xsZWZ0XCIsXCJndWlsc2luZ2xyaWdodFwiLFwiZmlcIixcImZsXCIsXCJcIixcImVuZGFzaFwiLFwiZGFnZ2VyXCIsXCJkYWdnZXJkYmxcIixcInBlcmlvZGNlbnRlcmVkXCIsXCJcIixcInBhcmFncmFwaFwiLFwiYnVsbGV0XCIsXCJxdW90ZXNpbmdsYmFzZVwiLFwicXVvdGVkYmxiYXNlXCIsXCJxdW90ZWRibHJpZ2h0XCIsXCJndWlsbGVtb3RyaWdodFwiLFwiZWxsaXBzaXNcIixcInBlcnRob3VzYW5kXCIsXCJcIixcInF1ZXN0aW9uZG93blwiLFwiXCIsXCJncmF2ZVwiLFwiYWN1dGVcIixcImNpcmN1bWZsZXhcIixcInRpbGRlXCIsXCJtYWNyb25cIixcImJyZXZlXCIsXCJkb3RhY2NlbnRcIixcImRpZXJlc2lzXCIsXCJcIixcInJpbmdcIixcImNlZGlsbGFcIixcIlwiLFwiaHVuZ2FydW1sYXV0XCIsXCJvZ29uZWtcIixcImNhcm9uXCIsXCJlbWRhc2hcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiQUVcIixcIlwiLFwib3JkZmVtaW5pbmVcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiTHNsYXNoXCIsXCJPc2xhc2hcIixcIk9FXCIsXCJvcmRtYXNjdWxpbmVcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJhZVwiLFwiXCIsXCJcIixcIlwiLFwiZG90bGVzc2lcIixcIlwiLFwiXCIsXCJsc2xhc2hcIixcIm9zbGFzaFwiLFwib2VcIixcImdlcm1hbmRibHNcIl0sY2U9W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcInNwYWNlXCIsXCJleGNsYW1zbWFsbFwiLFwiSHVuZ2FydW1sYXV0c21hbGxcIixcIlwiLFwiZG9sbGFyb2xkc3R5bGVcIixcImRvbGxhcnN1cGVyaW9yXCIsXCJhbXBlcnNhbmRzbWFsbFwiLFwiQWN1dGVzbWFsbFwiLFwicGFyZW5sZWZ0c3VwZXJpb3JcIixcInBhcmVucmlnaHRzdXBlcmlvclwiLFwidHdvZG90ZW5sZWFkZXJcIixcIm9uZWRvdGVubGVhZGVyXCIsXCJjb21tYVwiLFwiaHlwaGVuXCIsXCJwZXJpb2RcIixcImZyYWN0aW9uXCIsXCJ6ZXJvb2xkc3R5bGVcIixcIm9uZW9sZHN0eWxlXCIsXCJ0d29vbGRzdHlsZVwiLFwidGhyZWVvbGRzdHlsZVwiLFwiZm91cm9sZHN0eWxlXCIsXCJmaXZlb2xkc3R5bGVcIixcInNpeG9sZHN0eWxlXCIsXCJzZXZlbm9sZHN0eWxlXCIsXCJlaWdodG9sZHN0eWxlXCIsXCJuaW5lb2xkc3R5bGVcIixcImNvbG9uXCIsXCJzZW1pY29sb25cIixcImNvbW1hc3VwZXJpb3JcIixcInRocmVlcXVhcnRlcnNlbWRhc2hcIixcInBlcmlvZHN1cGVyaW9yXCIsXCJxdWVzdGlvbnNtYWxsXCIsXCJcIixcImFzdXBlcmlvclwiLFwiYnN1cGVyaW9yXCIsXCJjZW50c3VwZXJpb3JcIixcImRzdXBlcmlvclwiLFwiZXN1cGVyaW9yXCIsXCJcIixcIlwiLFwiaXN1cGVyaW9yXCIsXCJcIixcIlwiLFwibHN1cGVyaW9yXCIsXCJtc3VwZXJpb3JcIixcIm5zdXBlcmlvclwiLFwib3N1cGVyaW9yXCIsXCJcIixcIlwiLFwicnN1cGVyaW9yXCIsXCJzc3VwZXJpb3JcIixcInRzdXBlcmlvclwiLFwiXCIsXCJmZlwiLFwiZmlcIixcImZsXCIsXCJmZmlcIixcImZmbFwiLFwicGFyZW5sZWZ0aW5mZXJpb3JcIixcIlwiLFwicGFyZW5yaWdodGluZmVyaW9yXCIsXCJDaXJjdW1mbGV4c21hbGxcIixcImh5cGhlbnN1cGVyaW9yXCIsXCJHcmF2ZXNtYWxsXCIsXCJBc21hbGxcIixcIkJzbWFsbFwiLFwiQ3NtYWxsXCIsXCJEc21hbGxcIixcIkVzbWFsbFwiLFwiRnNtYWxsXCIsXCJHc21hbGxcIixcIkhzbWFsbFwiLFwiSXNtYWxsXCIsXCJKc21hbGxcIixcIktzbWFsbFwiLFwiTHNtYWxsXCIsXCJNc21hbGxcIixcIk5zbWFsbFwiLFwiT3NtYWxsXCIsXCJQc21hbGxcIixcIlFzbWFsbFwiLFwiUnNtYWxsXCIsXCJTc21hbGxcIixcIlRzbWFsbFwiLFwiVXNtYWxsXCIsXCJWc21hbGxcIixcIldzbWFsbFwiLFwiWHNtYWxsXCIsXCJZc21hbGxcIixcIlpzbWFsbFwiLFwiY29sb25tb25ldGFyeVwiLFwib25lZml0dGVkXCIsXCJydXBpYWhcIixcIlRpbGRlc21hbGxcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiZXhjbGFtZG93bnNtYWxsXCIsXCJjZW50b2xkc3R5bGVcIixcIkxzbGFzaHNtYWxsXCIsXCJcIixcIlwiLFwiU2Nhcm9uc21hbGxcIixcIlpjYXJvbnNtYWxsXCIsXCJEaWVyZXNpc3NtYWxsXCIsXCJCcmV2ZXNtYWxsXCIsXCJDYXJvbnNtYWxsXCIsXCJcIixcIkRvdGFjY2VudHNtYWxsXCIsXCJcIixcIlwiLFwiTWFjcm9uc21hbGxcIixcIlwiLFwiXCIsXCJmaWd1cmVkYXNoXCIsXCJoeXBoZW5pbmZlcmlvclwiLFwiXCIsXCJcIixcIk9nb25la3NtYWxsXCIsXCJSaW5nc21hbGxcIixcIkNlZGlsbGFzbWFsbFwiLFwiXCIsXCJcIixcIlwiLFwib25lcXVhcnRlclwiLFwib25laGFsZlwiLFwidGhyZWVxdWFydGVyc1wiLFwicXVlc3Rpb25kb3duc21hbGxcIixcIm9uZWVpZ2h0aFwiLFwidGhyZWVlaWdodGhzXCIsXCJmaXZlZWlnaHRoc1wiLFwic2V2ZW5laWdodGhzXCIsXCJvbmV0aGlyZFwiLFwidHdvdGhpcmRzXCIsXCJcIixcIlwiLFwiemVyb3N1cGVyaW9yXCIsXCJvbmVzdXBlcmlvclwiLFwidHdvc3VwZXJpb3JcIixcInRocmVlc3VwZXJpb3JcIixcImZvdXJzdXBlcmlvclwiLFwiZml2ZXN1cGVyaW9yXCIsXCJzaXhzdXBlcmlvclwiLFwic2V2ZW5zdXBlcmlvclwiLFwiZWlnaHRzdXBlcmlvclwiLFwibmluZXN1cGVyaW9yXCIsXCJ6ZXJvaW5mZXJpb3JcIixcIm9uZWluZmVyaW9yXCIsXCJ0d29pbmZlcmlvclwiLFwidGhyZWVpbmZlcmlvclwiLFwiZm91cmluZmVyaW9yXCIsXCJmaXZlaW5mZXJpb3JcIixcInNpeGluZmVyaW9yXCIsXCJzZXZlbmluZmVyaW9yXCIsXCJlaWdodGluZmVyaW9yXCIsXCJuaW5laW5mZXJpb3JcIixcImNlbnRpbmZlcmlvclwiLFwiZG9sbGFyaW5mZXJpb3JcIixcInBlcmlvZGluZmVyaW9yXCIsXCJjb21tYWluZmVyaW9yXCIsXCJBZ3JhdmVzbWFsbFwiLFwiQWFjdXRlc21hbGxcIixcIkFjaXJjdW1mbGV4c21hbGxcIixcIkF0aWxkZXNtYWxsXCIsXCJBZGllcmVzaXNzbWFsbFwiLFwiQXJpbmdzbWFsbFwiLFwiQUVzbWFsbFwiLFwiQ2NlZGlsbGFzbWFsbFwiLFwiRWdyYXZlc21hbGxcIixcIkVhY3V0ZXNtYWxsXCIsXCJFY2lyY3VtZmxleHNtYWxsXCIsXCJFZGllcmVzaXNzbWFsbFwiLFwiSWdyYXZlc21hbGxcIixcIklhY3V0ZXNtYWxsXCIsXCJJY2lyY3VtZmxleHNtYWxsXCIsXCJJZGllcmVzaXNzbWFsbFwiLFwiRXRoc21hbGxcIixcIk50aWxkZXNtYWxsXCIsXCJPZ3JhdmVzbWFsbFwiLFwiT2FjdXRlc21hbGxcIixcIk9jaXJjdW1mbGV4c21hbGxcIixcIk90aWxkZXNtYWxsXCIsXCJPZGllcmVzaXNzbWFsbFwiLFwiT0VzbWFsbFwiLFwiT3NsYXNoc21hbGxcIixcIlVncmF2ZXNtYWxsXCIsXCJVYWN1dGVzbWFsbFwiLFwiVWNpcmN1bWZsZXhzbWFsbFwiLFwiVWRpZXJlc2lzc21hbGxcIixcIllhY3V0ZXNtYWxsXCIsXCJUaG9ybnNtYWxsXCIsXCJZZGllcmVzaXNzbWFsbFwiXSxkZT1bXCIubm90ZGVmXCIsXCIubnVsbFwiLFwibm9ubWFya2luZ3JldHVyblwiLFwic3BhY2VcIixcImV4Y2xhbVwiLFwicXVvdGVkYmxcIixcIm51bWJlcnNpZ25cIixcImRvbGxhclwiLFwicGVyY2VudFwiLFwiYW1wZXJzYW5kXCIsXCJxdW90ZXNpbmdsZVwiLFwicGFyZW5sZWZ0XCIsXCJwYXJlbnJpZ2h0XCIsXCJhc3Rlcmlza1wiLFwicGx1c1wiLFwiY29tbWFcIixcImh5cGhlblwiLFwicGVyaW9kXCIsXCJzbGFzaFwiLFwiemVyb1wiLFwib25lXCIsXCJ0d29cIixcInRocmVlXCIsXCJmb3VyXCIsXCJmaXZlXCIsXCJzaXhcIixcInNldmVuXCIsXCJlaWdodFwiLFwibmluZVwiLFwiY29sb25cIixcInNlbWljb2xvblwiLFwibGVzc1wiLFwiZXF1YWxcIixcImdyZWF0ZXJcIixcInF1ZXN0aW9uXCIsXCJhdFwiLFwiQVwiLFwiQlwiLFwiQ1wiLFwiRFwiLFwiRVwiLFwiRlwiLFwiR1wiLFwiSFwiLFwiSVwiLFwiSlwiLFwiS1wiLFwiTFwiLFwiTVwiLFwiTlwiLFwiT1wiLFwiUFwiLFwiUVwiLFwiUlwiLFwiU1wiLFwiVFwiLFwiVVwiLFwiVlwiLFwiV1wiLFwiWFwiLFwiWVwiLFwiWlwiLFwiYnJhY2tldGxlZnRcIixcImJhY2tzbGFzaFwiLFwiYnJhY2tldHJpZ2h0XCIsXCJhc2NpaWNpcmN1bVwiLFwidW5kZXJzY29yZVwiLFwiZ3JhdmVcIixcImFcIixcImJcIixcImNcIixcImRcIixcImVcIixcImZcIixcImdcIixcImhcIixcImlcIixcImpcIixcImtcIixcImxcIixcIm1cIixcIm5cIixcIm9cIixcInBcIixcInFcIixcInJcIixcInNcIixcInRcIixcInVcIixcInZcIixcIndcIixcInhcIixcInlcIixcInpcIixcImJyYWNlbGVmdFwiLFwiYmFyXCIsXCJicmFjZXJpZ2h0XCIsXCJhc2NpaXRpbGRlXCIsXCJBZGllcmVzaXNcIixcIkFyaW5nXCIsXCJDY2VkaWxsYVwiLFwiRWFjdXRlXCIsXCJOdGlsZGVcIixcIk9kaWVyZXNpc1wiLFwiVWRpZXJlc2lzXCIsXCJhYWN1dGVcIixcImFncmF2ZVwiLFwiYWNpcmN1bWZsZXhcIixcImFkaWVyZXNpc1wiLFwiYXRpbGRlXCIsXCJhcmluZ1wiLFwiY2NlZGlsbGFcIixcImVhY3V0ZVwiLFwiZWdyYXZlXCIsXCJlY2lyY3VtZmxleFwiLFwiZWRpZXJlc2lzXCIsXCJpYWN1dGVcIixcImlncmF2ZVwiLFwiaWNpcmN1bWZsZXhcIixcImlkaWVyZXNpc1wiLFwibnRpbGRlXCIsXCJvYWN1dGVcIixcIm9ncmF2ZVwiLFwib2NpcmN1bWZsZXhcIixcIm9kaWVyZXNpc1wiLFwib3RpbGRlXCIsXCJ1YWN1dGVcIixcInVncmF2ZVwiLFwidWNpcmN1bWZsZXhcIixcInVkaWVyZXNpc1wiLFwiZGFnZ2VyXCIsXCJkZWdyZWVcIixcImNlbnRcIixcInN0ZXJsaW5nXCIsXCJzZWN0aW9uXCIsXCJidWxsZXRcIixcInBhcmFncmFwaFwiLFwiZ2VybWFuZGJsc1wiLFwicmVnaXN0ZXJlZFwiLFwiY29weXJpZ2h0XCIsXCJ0cmFkZW1hcmtcIixcImFjdXRlXCIsXCJkaWVyZXNpc1wiLFwibm90ZXF1YWxcIixcIkFFXCIsXCJPc2xhc2hcIixcImluZmluaXR5XCIsXCJwbHVzbWludXNcIixcImxlc3NlcXVhbFwiLFwiZ3JlYXRlcmVxdWFsXCIsXCJ5ZW5cIixcIm11XCIsXCJwYXJ0aWFsZGlmZlwiLFwic3VtbWF0aW9uXCIsXCJwcm9kdWN0XCIsXCJwaVwiLFwiaW50ZWdyYWxcIixcIm9yZGZlbWluaW5lXCIsXCJvcmRtYXNjdWxpbmVcIixcIk9tZWdhXCIsXCJhZVwiLFwib3NsYXNoXCIsXCJxdWVzdGlvbmRvd25cIixcImV4Y2xhbWRvd25cIixcImxvZ2ljYWxub3RcIixcInJhZGljYWxcIixcImZsb3JpblwiLFwiYXBwcm94ZXF1YWxcIixcIkRlbHRhXCIsXCJndWlsbGVtb3RsZWZ0XCIsXCJndWlsbGVtb3RyaWdodFwiLFwiZWxsaXBzaXNcIixcIm5vbmJyZWFraW5nc3BhY2VcIixcIkFncmF2ZVwiLFwiQXRpbGRlXCIsXCJPdGlsZGVcIixcIk9FXCIsXCJvZVwiLFwiZW5kYXNoXCIsXCJlbWRhc2hcIixcInF1b3RlZGJsbGVmdFwiLFwicXVvdGVkYmxyaWdodFwiLFwicXVvdGVsZWZ0XCIsXCJxdW90ZXJpZ2h0XCIsXCJkaXZpZGVcIixcImxvemVuZ2VcIixcInlkaWVyZXNpc1wiLFwiWWRpZXJlc2lzXCIsXCJmcmFjdGlvblwiLFwiY3VycmVuY3lcIixcImd1aWxzaW5nbGxlZnRcIixcImd1aWxzaW5nbHJpZ2h0XCIsXCJmaVwiLFwiZmxcIixcImRhZ2dlcmRibFwiLFwicGVyaW9kY2VudGVyZWRcIixcInF1b3Rlc2luZ2xiYXNlXCIsXCJxdW90ZWRibGJhc2VcIixcInBlcnRob3VzYW5kXCIsXCJBY2lyY3VtZmxleFwiLFwiRWNpcmN1bWZsZXhcIixcIkFhY3V0ZVwiLFwiRWRpZXJlc2lzXCIsXCJFZ3JhdmVcIixcIklhY3V0ZVwiLFwiSWNpcmN1bWZsZXhcIixcIklkaWVyZXNpc1wiLFwiSWdyYXZlXCIsXCJPYWN1dGVcIixcIk9jaXJjdW1mbGV4XCIsXCJhcHBsZVwiLFwiT2dyYXZlXCIsXCJVYWN1dGVcIixcIlVjaXJjdW1mbGV4XCIsXCJVZ3JhdmVcIixcImRvdGxlc3NpXCIsXCJjaXJjdW1mbGV4XCIsXCJ0aWxkZVwiLFwibWFjcm9uXCIsXCJicmV2ZVwiLFwiZG90YWNjZW50XCIsXCJyaW5nXCIsXCJjZWRpbGxhXCIsXCJodW5nYXJ1bWxhdXRcIixcIm9nb25la1wiLFwiY2Fyb25cIixcIkxzbGFzaFwiLFwibHNsYXNoXCIsXCJTY2Fyb25cIixcInNjYXJvblwiLFwiWmNhcm9uXCIsXCJ6Y2Fyb25cIixcImJyb2tlbmJhclwiLFwiRXRoXCIsXCJldGhcIixcIllhY3V0ZVwiLFwieWFjdXRlXCIsXCJUaG9yblwiLFwidGhvcm5cIixcIm1pbnVzXCIsXCJtdWx0aXBseVwiLFwib25lc3VwZXJpb3JcIixcInR3b3N1cGVyaW9yXCIsXCJ0aHJlZXN1cGVyaW9yXCIsXCJvbmVoYWxmXCIsXCJvbmVxdWFydGVyXCIsXCJ0aHJlZXF1YXJ0ZXJzXCIsXCJmcmFuY1wiLFwiR2JyZXZlXCIsXCJnYnJldmVcIixcIklkb3RhY2NlbnRcIixcIlNjZWRpbGxhXCIsXCJzY2VkaWxsYVwiLFwiQ2FjdXRlXCIsXCJjYWN1dGVcIixcIkNjYXJvblwiLFwiY2Nhcm9uXCIsXCJkY3JvYXRcIl07ZnVuY3Rpb24gaGUoZSl7dGhpcy5mb250PWV9ZnVuY3Rpb24gbWUoZSl7dGhpcy5jbWFwPWV9ZnVuY3Rpb24gZmUoZSx0KXt0aGlzLmVuY29kaW5nPWUsdGhpcy5jaGFyc2V0PXR9ZnVuY3Rpb24geWUoZSl7c3dpdGNoKGUudmVyc2lvbil7Y2FzZSAxOnRoaXMubmFtZXM9ZGUuc2xpY2UoKTticmVhaztjYXNlIDI6dGhpcy5uYW1lcz1uZXcgQXJyYXkoZS5udW1iZXJPZkdseXBocyk7Zm9yKHZhciB0PTA7dDxlLm51bWJlck9mR2x5cGhzO3QrKyllLmdseXBoTmFtZUluZGV4W3RdPGRlLmxlbmd0aD90aGlzLm5hbWVzW3RdPWRlW2UuZ2x5cGhOYW1lSW5kZXhbdF1dOnRoaXMubmFtZXNbdF09ZS5uYW1lc1tlLmdseXBoTmFtZUluZGV4W3RdLWRlLmxlbmd0aF07YnJlYWs7Y2FzZSAyLjU6dGhpcy5uYW1lcz1uZXcgQXJyYXkoZS5udW1iZXJPZkdseXBocyk7Zm9yKHZhciByPTA7cjxlLm51bWJlck9mR2x5cGhzO3IrKyl0aGlzLm5hbWVzW3JdPWRlW3IrZS5nbHlwaE5hbWVJbmRleFtyXV07YnJlYWs7Y2FzZSAzOmRlZmF1bHQ6dGhpcy5uYW1lcz1bXX19aGUucHJvdG90eXBlLmNoYXJUb0dseXBoSW5kZXg9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jb2RlUG9pbnRBdCgwKSxyPXRoaXMuZm9udC5nbHlwaHM7aWYocilmb3IodmFyIG49MDtuPHIubGVuZ3RoO24rPTEpZm9yKHZhciBhPXIuZ2V0KG4pLG89MDtvPGEudW5pY29kZXMubGVuZ3RoO28rPTEpaWYoYS51bmljb2Rlc1tvXT09PXQpcmV0dXJuIG47cmV0dXJuIG51bGx9LG1lLnByb3RvdHlwZS5jaGFyVG9HbHlwaEluZGV4PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmNtYXAuZ2x5cGhJbmRleE1hcFtlLmNvZGVQb2ludEF0KDApXXx8MH0sZmUucHJvdG90eXBlLmNoYXJUb0dseXBoSW5kZXg9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jb2RlUG9pbnRBdCgwKSxyPXRoaXMuZW5jb2RpbmdbdF07cmV0dXJuIHRoaXMuY2hhcnNldC5pbmRleE9mKHIpfSx5ZS5wcm90b3R5cGUubmFtZVRvR2x5cGhJbmRleD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5uYW1lcy5pbmRleE9mKGUpfSx5ZS5wcm90b3R5cGUuZ2x5cGhJbmRleFRvTmFtZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5uYW1lc1tlXX07dmFyIGdlPXtsaW5lOmZ1bmN0aW9uKGUsdCxyLG4sYSl7ZS5iZWdpblBhdGgoKSxlLm1vdmVUbyh0LHIpLGUubGluZVRvKG4sYSksZS5zdHJva2UoKX19O2Z1bmN0aW9uIHZlKGUpe3RoaXMuYmluZENvbnN0cnVjdG9yVmFsdWVzKGUpfWZ1bmN0aW9uIGJlKHQsZSxyKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdC5wYXRoLHRbcl19LHNldDpmdW5jdGlvbihlKXt0W3JdPWV9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSl9ZnVuY3Rpb24gX2UoZSx0KXtpZih0aGlzLmZvbnQ9ZSx0aGlzLmdseXBocz17fSxBcnJheS5pc0FycmF5KHQpKWZvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXRoaXMuZ2x5cGhzW3JdPXRbcl07dGhpcy5sZW5ndGg9dCYmdC5sZW5ndGh8fDB9dmUucHJvdG90eXBlLmJpbmRDb25zdHJ1Y3RvclZhbHVlcz1mdW5jdGlvbihlKXt2YXIgdCxyO3RoaXMuaW5kZXg9ZS5pbmRleHx8MCx0aGlzLm5hbWU9ZS5uYW1lfHxudWxsLHRoaXMudW5pY29kZT1lLnVuaWNvZGV8fHZvaWQgMCx0aGlzLnVuaWNvZGVzPWUudW5pY29kZXN8fHZvaWQgMCE9PWUudW5pY29kZT9bZS51bmljb2RlXTpbXSxlLnhNaW4mJih0aGlzLnhNaW49ZS54TWluKSxlLnlNaW4mJih0aGlzLnlNaW49ZS55TWluKSxlLnhNYXgmJih0aGlzLnhNYXg9ZS54TWF4KSxlLnlNYXgmJih0aGlzLnlNYXg9ZS55TWF4KSxlLmFkdmFuY2VXaWR0aCYmKHRoaXMuYWR2YW5jZVdpZHRoPWUuYWR2YW5jZVdpZHRoKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInBhdGhcIiwodD1lLnBhdGgscj10fHxuZXcgQSx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHImJihyPXIoKSkscn0sc2V0OmZ1bmN0aW9uKGUpe3I9ZX19KSl9LHZlLnByb3RvdHlwZS5hZGRVbmljb2RlPWZ1bmN0aW9uKGUpezA9PT10aGlzLnVuaWNvZGVzLmxlbmd0aCYmKHRoaXMudW5pY29kZT1lKSx0aGlzLnVuaWNvZGVzLnB1c2goZSl9LHZlLnByb3RvdHlwZS5nZXRCb3VuZGluZ0JveD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhdGguZ2V0Qm91bmRpbmdCb3goKX0sdmUucHJvdG90eXBlLmdldFBhdGg9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbyxpO2U9dm9pZCAwIT09ZT9lOjAsdD12b2lkIDAhPT10P3Q6MCxyPXZvaWQgMCE9PXI/cjo3Mjt2YXIgcz0obj1ufHx7fSkueFNjYWxlLGw9bi55U2NhbGU7aWYobi5oaW50aW5nJiZhJiZhLmhpbnRpbmcmJihpPXRoaXMucGF0aCYmYS5oaW50aW5nLmV4ZWModGhpcyxyKSksaSlvPWEuaGludGluZy5nZXRDb21tYW5kcyhpKSxlPU1hdGgucm91bmQoZSksdD1NYXRoLnJvdW5kKHQpLHM9bD0xO2Vsc2V7bz10aGlzLnBhdGguY29tbWFuZHM7dmFyIHA9MS90aGlzLnBhdGgudW5pdHNQZXJFbSpyO3ZvaWQgMD09PXMmJihzPXApLHZvaWQgMD09PWwmJihsPXApfWZvcih2YXIgdT1uZXcgQSxjPTA7YzxvLmxlbmd0aDtjKz0xKXt2YXIgZD1vW2NdO1wiTVwiPT09ZC50eXBlP3UubW92ZVRvKGUrZC54KnMsdCstZC55KmwpOlwiTFwiPT09ZC50eXBlP3UubGluZVRvKGUrZC54KnMsdCstZC55KmwpOlwiUVwiPT09ZC50eXBlP3UucXVhZHJhdGljQ3VydmVUbyhlK2QueDEqcyx0Ky1kLnkxKmwsZStkLngqcyx0Ky1kLnkqbCk6XCJDXCI9PT1kLnR5cGU/dS5jdXJ2ZVRvKGUrZC54MSpzLHQrLWQueTEqbCxlK2QueDIqcyx0Ky1kLnkyKmwsZStkLngqcyx0Ky1kLnkqbCk6XCJaXCI9PT1kLnR5cGUmJnUuY2xvc2VQYXRoKCl9cmV0dXJuIHV9LHZlLnByb3RvdHlwZS5nZXRDb250b3Vycz1mdW5jdGlvbigpe2lmKHZvaWQgMD09PXRoaXMucG9pbnRzKXJldHVybltdO2Zvcih2YXIgZT1bXSx0PVtdLHI9MDtyPHRoaXMucG9pbnRzLmxlbmd0aDtyKz0xKXt2YXIgbj10aGlzLnBvaW50c1tyXTt0LnB1c2gobiksbi5sYXN0UG9pbnRPZkNvbnRvdXImJihlLnB1c2godCksdD1bXSl9cmV0dXJuIEwuYXJndW1lbnQoMD09PXQubGVuZ3RoLFwiVGhlcmUgYXJlIHN0aWxsIHBvaW50cyBsZWZ0IGluIHRoZSBjdXJyZW50IGNvbnRvdXIuXCIpLGV9LHZlLnByb3RvdHlwZS5nZXRNZXRyaWNzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMucGF0aC5jb21tYW5kcyx0PVtdLHI9W10sbj0wO248ZS5sZW5ndGg7bis9MSl7dmFyIGE9ZVtuXTtcIlpcIiE9PWEudHlwZSYmKHQucHVzaChhLngpLHIucHVzaChhLnkpKSxcIlFcIiE9PWEudHlwZSYmXCJDXCIhPT1hLnR5cGV8fCh0LnB1c2goYS54MSksci5wdXNoKGEueTEpKSxcIkNcIj09PWEudHlwZSYmKHQucHVzaChhLngyKSxyLnB1c2goYS55MikpfXZhciBvPXt4TWluOk1hdGgubWluLmFwcGx5KG51bGwsdCkseU1pbjpNYXRoLm1pbi5hcHBseShudWxsLHIpLHhNYXg6TWF0aC5tYXguYXBwbHkobnVsbCx0KSx5TWF4Ok1hdGgubWF4LmFwcGx5KG51bGwsciksbGVmdFNpZGVCZWFyaW5nOnRoaXMubGVmdFNpZGVCZWFyaW5nfTtyZXR1cm4gaXNGaW5pdGUoby54TWluKXx8KG8ueE1pbj0wKSxpc0Zpbml0ZShvLnhNYXgpfHwoby54TWF4PXRoaXMuYWR2YW5jZVdpZHRoKSxpc0Zpbml0ZShvLnlNaW4pfHwoby55TWluPTApLGlzRmluaXRlKG8ueU1heCl8fChvLnlNYXg9MCksby5yaWdodFNpZGVCZWFyaW5nPXRoaXMuYWR2YW5jZVdpZHRoLW8ubGVmdFNpZGVCZWFyaW5nLShvLnhNYXgtby54TWluKSxvfSx2ZS5wcm90b3R5cGUuZHJhdz1mdW5jdGlvbihlLHQscixuLGEpe3RoaXMuZ2V0UGF0aCh0LHIsbixhKS5kcmF3KGUpfSx2ZS5wcm90b3R5cGUuZHJhd1BvaW50cz1mdW5jdGlvbihpLGUsdCxyKXtmdW5jdGlvbiBuKGUsdCxyLG4pe3ZhciBhPTIqTWF0aC5QSTtpLmJlZ2luUGF0aCgpO2Zvcih2YXIgbz0wO288ZS5sZW5ndGg7bys9MSlpLm1vdmVUbyh0K2Vbb10ueCpuLHIrZVtvXS55Km4pLGkuYXJjKHQrZVtvXS54Km4scitlW29dLnkqbiwyLDAsYSwhMSk7aS5jbG9zZVBhdGgoKSxpLmZpbGwoKX1lPXZvaWQgMCE9PWU/ZTowLHQ9dm9pZCAwIT09dD90OjAscj12b2lkIDAhPT1yP3I6MjQ7Zm9yKHZhciBhPTEvdGhpcy5wYXRoLnVuaXRzUGVyRW0qcixvPVtdLHM9W10sbD10aGlzLnBhdGgscD0wO3A8bC5jb21tYW5kcy5sZW5ndGg7cCs9MSl7dmFyIHU9bC5jb21tYW5kc1twXTt2b2lkIDAhPT11LngmJm8ucHVzaCh7eDp1LngseTotdS55fSksdm9pZCAwIT09dS54MSYmcy5wdXNoKHt4OnUueDEseTotdS55MX0pLHZvaWQgMCE9PXUueDImJnMucHVzaCh7eDp1LngyLHk6LXUueTJ9KX1pLmZpbGxTdHlsZT1cImJsdWVcIixuKG8sZSx0LGEpLGkuZmlsbFN0eWxlPVwicmVkXCIsbihzLGUsdCxhKX0sdmUucHJvdG90eXBlLmRyYXdNZXRyaWNzPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhO3Q9dm9pZCAwIT09dD90OjAscj12b2lkIDAhPT1yP3I6MCxuPXZvaWQgMCE9PW4/bjoyNCxhPTEvdGhpcy5wYXRoLnVuaXRzUGVyRW0qbixlLmxpbmVXaWR0aD0xLGUuc3Ryb2tlU3R5bGU9XCJibGFja1wiLGdlLmxpbmUoZSx0LC0xZTQsdCwxZTQpLGdlLmxpbmUoZSwtMWU0LHIsMWU0LHIpO3ZhciBvPXRoaXMueE1pbnx8MCxpPXRoaXMueU1pbnx8MCxzPXRoaXMueE1heHx8MCxsPXRoaXMueU1heHx8MCxwPXRoaXMuYWR2YW5jZVdpZHRofHwwO2Uuc3Ryb2tlU3R5bGU9XCJibHVlXCIsZ2UubGluZShlLHQrbyphLC0xZTQsdCtvKmEsMWU0KSxnZS5saW5lKGUsdCtzKmEsLTFlNCx0K3MqYSwxZTQpLGdlLmxpbmUoZSwtMWU0LHIrLWkqYSwxZTQscistaSphKSxnZS5saW5lKGUsLTFlNCxyKy1sKmEsMWU0LHIrLWwqYSksZS5zdHJva2VTdHlsZT1cImdyZWVuXCIsZ2UubGluZShlLHQrcCphLC0xZTQsdCtwKmEsMWU0KX0sX2UucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLmdseXBoc1tlXSYmKHRoaXMuZ2x5cGhzW2VdPXRoaXMuZ2x5cGhzW2VdKCkpLHRoaXMuZ2x5cGhzW2VdfSxfZS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihlLHQpe3RoaXMuZ2x5cGhzW2VdPXQsdGhpcy5sZW5ndGgrK307dmFyIHhlPXtHbHlwaFNldDpfZSxnbHlwaExvYWRlcjpmdW5jdGlvbihlLHQpe3JldHVybiBuZXcgdmUoe2luZGV4OnQsZm9udDplfSl9LHR0ZkdseXBoTG9hZGVyOmZ1bmN0aW9uKHIsZSxuLGEsbyxpKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD1uZXcgdmUoe2luZGV4OmUsZm9udDpyfSk7cmV0dXJuIHQucGF0aD1mdW5jdGlvbigpe24odCxhLG8pO3ZhciBlPWkoci5nbHlwaHMsdCk7cmV0dXJuIGUudW5pdHNQZXJFbT1yLnVuaXRzUGVyRW0sZX0sYmUodCxcInhNaW5cIixcIl94TWluXCIpLGJlKHQsXCJ4TWF4XCIsXCJfeE1heFwiKSxiZSh0LFwieU1pblwiLFwiX3lNaW5cIiksYmUodCxcInlNYXhcIixcIl95TWF4XCIpLHR9fSxjZmZHbHlwaExvYWRlcjpmdW5jdGlvbihyLGUsbixhKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD1uZXcgdmUoe2luZGV4OmUsZm9udDpyfSk7cmV0dXJuIHQucGF0aD1mdW5jdGlvbigpe3ZhciBlPW4ocix0LGEpO3JldHVybiBlLnVuaXRzUGVyRW09ci51bml0c1BlckVtLGV9LHR9fX07ZnVuY3Rpb24gU2UoZSx0KXtpZihlPT09dClyZXR1cm4hMDtpZihBcnJheS5pc0FycmF5KGUpJiZBcnJheS5pc0FycmF5KHQpKXtpZihlLmxlbmd0aCE9PXQubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cis9MSlpZighU2UoZVtyXSx0W3JdKSlyZXR1cm4hMTtyZXR1cm4hMH1yZXR1cm4hMX1mdW5jdGlvbiB3ZShlKXtyZXR1cm4gZS5sZW5ndGg8MTI0MD8xMDc6ZS5sZW5ndGg8MzM5MDA/MTEzMTozMjc2OH1mdW5jdGlvbiBNZShlLHQscil7dmFyIG4sYSxvPVtdLGk9W10scz1zZS5nZXRDYXJkMTYoZSx0KTtpZigwIT09cyl7dmFyIGw9c2UuZ2V0Qnl0ZShlLHQrMik7bj10KyhzKzEpKmwrMjtmb3IodmFyIHA9dCszLHU9MDt1PHMrMTt1Kz0xKW8ucHVzaChzZS5nZXRPZmZzZXQoZSxwLGwpKSxwKz1sO2E9bitvW3NdfWVsc2UgYT10KzI7Zm9yKHZhciBjPTA7YzxvLmxlbmd0aC0xO2MrPTEpe3ZhciBkPXNlLmdldEJ5dGVzKGUsbitvW2NdLG4rb1tjKzFdKTtyJiYoZD1yKGQpKSxpLnB1c2goZCl9cmV0dXJue29iamVjdHM6aSxzdGFydE9mZnNldDp0LGVuZE9mZnNldDphfX1mdW5jdGlvbiBFZShlLHQpe2lmKDI4PT09dClyZXR1cm4gZS5wYXJzZUJ5dGUoKTw8OHxlLnBhcnNlQnl0ZSgpO2lmKDI5PT09dClyZXR1cm4gZS5wYXJzZUJ5dGUoKTw8MjR8ZS5wYXJzZUJ5dGUoKTw8MTZ8ZS5wYXJzZUJ5dGUoKTw8OHxlLnBhcnNlQnl0ZSgpO2lmKDMwPT09dClyZXR1cm4gZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVwiXCIscj1bXCIwXCIsXCIxXCIsXCIyXCIsXCIzXCIsXCI0XCIsXCI1XCIsXCI2XCIsXCI3XCIsXCI4XCIsXCI5XCIsXCIuXCIsXCJFXCIsXCJFLVwiLG51bGwsXCItXCJdOzspe3ZhciBuPWUucGFyc2VCeXRlKCksYT1uPj40LG89MTUmbjtpZigxNT09YSlicmVhaztpZih0Kz1yW2FdLDE1PT1vKWJyZWFrO3QrPXJbb119cmV0dXJuIHBhcnNlRmxvYXQodCl9KGUpO2lmKDMyPD10JiZ0PD0yNDYpcmV0dXJuIHQtMTM5O2lmKDI0Nzw9dCYmdDw9MjUwKXJldHVybiAyNTYqKHQtMjQ3KStlLnBhcnNlQnl0ZSgpKzEwODtpZigyNTE8PXQmJnQ8PTI1NClyZXR1cm4gMjU2Ki0odC0yNTEpLWUucGFyc2VCeXRlKCktMTA4O3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgYjAgXCIrdCl9ZnVuY3Rpb24gVGUoZSx0LHIpe3Q9dm9pZCAwIT09dD90OjA7dmFyIG49bmV3IHNlLlBhcnNlcihlLHQpLGE9W10sbz1bXTtmb3Iocj12b2lkIDAhPT1yP3I6ZS5sZW5ndGg7bi5yZWxhdGl2ZU9mZnNldDxyOyl7dmFyIGk9bi5wYXJzZUJ5dGUoKTtpPD0yMT8oMTI9PT1pJiYoaT0xMjAwK24ucGFyc2VCeXRlKCkpLGEucHVzaChbaSxvXSksbz1bXSk6by5wdXNoKEVlKG4saSkpfXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQ9e30scj0wO3I8ZS5sZW5ndGg7cis9MSl7dmFyIG49ZVtyXVswXSxhPWVbcl1bMV0sbz12b2lkIDA7aWYobz0xPT09YS5sZW5ndGg/YVswXTphLHQuaGFzT3duUHJvcGVydHkobikmJiFpc05hTih0W25dKSl0aHJvdyBuZXcgRXJyb3IoXCJPYmplY3QgXCIrdCtcIiBhbHJlYWR5IGhhcyBrZXkgXCIrbik7dFtuXT1vfXJldHVybiB0fShhKX1mdW5jdGlvbiBDZShlLHQpe3JldHVybiB0PXQ8PTM5MD9wZVt0XTplW3QtMzkxXX1mdW5jdGlvbiBOZShlLHQscil7Zm9yKHZhciBuLGE9e30sbz0wO288dC5sZW5ndGg7bys9MSl7dmFyIGk9dFtvXTtpZihBcnJheS5pc0FycmF5KGkudHlwZSkpe3ZhciBzPVtdO3MubGVuZ3RoPWkudHlwZS5sZW5ndGg7Zm9yKHZhciBsPTA7bDxpLnR5cGUubGVuZ3RoO2wrKyl2b2lkIDA9PT0obj12b2lkIDAhPT1lW2kub3BdP2VbaS5vcF1bbF06dm9pZCAwKSYmKG49dm9pZCAwIT09aS52YWx1ZSYmdm9pZCAwIT09aS52YWx1ZVtsXT9pLnZhbHVlW2xdOm51bGwpLFwiU0lEXCI9PT1pLnR5cGVbbF0mJihuPUNlKHIsbikpLHNbbF09bjthW2kubmFtZV09c31lbHNlIHZvaWQgMD09PShuPWVbaS5vcF0pJiYobj12b2lkIDAhPT1pLnZhbHVlP2kudmFsdWU6bnVsbCksXCJTSURcIj09PWkudHlwZSYmKG49Q2UocixuKSksYVtpLm5hbWVdPW59cmV0dXJuIGF9dmFyIE9lPVt7bmFtZTpcInZlcnNpb25cIixvcDowLHR5cGU6XCJTSURcIn0se25hbWU6XCJub3RpY2VcIixvcDoxLHR5cGU6XCJTSURcIn0se25hbWU6XCJjb3B5cmlnaHRcIixvcDoxMjAwLHR5cGU6XCJTSURcIn0se25hbWU6XCJmdWxsTmFtZVwiLG9wOjIsdHlwZTpcIlNJRFwifSx7bmFtZTpcImZhbWlseU5hbWVcIixvcDozLHR5cGU6XCJTSURcIn0se25hbWU6XCJ3ZWlnaHRcIixvcDo0LHR5cGU6XCJTSURcIn0se25hbWU6XCJpc0ZpeGVkUGl0Y2hcIixvcDoxMjAxLHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcIml0YWxpY0FuZ2xlXCIsb3A6MTIwMix0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH0se25hbWU6XCJ1bmRlcmxpbmVQb3NpdGlvblwiLG9wOjEyMDMsdHlwZTpcIm51bWJlclwiLHZhbHVlOi0xMDB9LHtuYW1lOlwidW5kZXJsaW5lVGhpY2tuZXNzXCIsb3A6MTIwNCx0eXBlOlwibnVtYmVyXCIsdmFsdWU6NTB9LHtuYW1lOlwicGFpbnRUeXBlXCIsb3A6MTIwNSx0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH0se25hbWU6XCJjaGFyc3RyaW5nVHlwZVwiLG9wOjEyMDYsdHlwZTpcIm51bWJlclwiLHZhbHVlOjJ9LHtuYW1lOlwiZm9udE1hdHJpeFwiLG9wOjEyMDcsdHlwZTpbXCJyZWFsXCIsXCJyZWFsXCIsXCJyZWFsXCIsXCJyZWFsXCIsXCJyZWFsXCIsXCJyZWFsXCJdLHZhbHVlOlsuMDAxLDAsMCwuMDAxLDAsMF19LHtuYW1lOlwidW5pcXVlSWRcIixvcDoxMyx0eXBlOlwibnVtYmVyXCJ9LHtuYW1lOlwiZm9udEJCb3hcIixvcDo1LHR5cGU6W1wibnVtYmVyXCIsXCJudW1iZXJcIixcIm51bWJlclwiLFwibnVtYmVyXCJdLHZhbHVlOlswLDAsMCwwXX0se25hbWU6XCJzdHJva2VXaWR0aFwiLG9wOjEyMDgsdHlwZTpcIm51bWJlclwiLHZhbHVlOjB9LHtuYW1lOlwieHVpZFwiLG9wOjE0LHR5cGU6W10sdmFsdWU6bnVsbH0se25hbWU6XCJjaGFyc2V0XCIsb3A6MTUsdHlwZTpcIm9mZnNldFwiLHZhbHVlOjB9LHtuYW1lOlwiZW5jb2RpbmdcIixvcDoxNix0eXBlOlwib2Zmc2V0XCIsdmFsdWU6MH0se25hbWU6XCJjaGFyU3RyaW5nc1wiLG9wOjE3LHR5cGU6XCJvZmZzZXRcIix2YWx1ZTowfSx7bmFtZTpcInByaXZhdGVcIixvcDoxOCx0eXBlOltcIm51bWJlclwiLFwib2Zmc2V0XCJdLHZhbHVlOlswLDBdfSx7bmFtZTpcInJvc1wiLG9wOjEyMzAsdHlwZTpbXCJTSURcIixcIlNJRFwiLFwibnVtYmVyXCJdfSx7bmFtZTpcImNpZEZvbnRWZXJzaW9uXCIsb3A6MTIzMSx0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH0se25hbWU6XCJjaWRGb250UmV2aXNpb25cIixvcDoxMjMyLHR5cGU6XCJudW1iZXJcIix2YWx1ZTowfSx7bmFtZTpcImNpZEZvbnRUeXBlXCIsb3A6MTIzMyx0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH0se25hbWU6XCJjaWRDb3VudFwiLG9wOjEyMzQsdHlwZTpcIm51bWJlclwiLHZhbHVlOjg3MjB9LHtuYW1lOlwidWlkQmFzZVwiLG9wOjEyMzUsdHlwZTpcIm51bWJlclwifSx7bmFtZTpcImZkQXJyYXlcIixvcDoxMjM2LHR5cGU6XCJvZmZzZXRcIn0se25hbWU6XCJmZFNlbGVjdFwiLG9wOjEyMzcsdHlwZTpcIm9mZnNldFwifSx7bmFtZTpcImZvbnROYW1lXCIsb3A6MTIzOCx0eXBlOlwiU0lEXCJ9XSxMZT1be25hbWU6XCJzdWJyc1wiLG9wOjE5LHR5cGU6XCJvZmZzZXRcIix2YWx1ZTowfSx7bmFtZTpcImRlZmF1bHRXaWR0aFhcIixvcDoyMCx0eXBlOlwibnVtYmVyXCIsdmFsdWU6MH0se25hbWU6XCJub21pbmFsV2lkdGhYXCIsb3A6MjEsdHlwZTpcIm51bWJlclwiLHZhbHVlOjB9XTtmdW5jdGlvbiBJZShlLHQscixuKXtyZXR1cm4gTmUoVGUoZSx0LHIpLExlLG4pfWZ1bmN0aW9uIFBlKGUsdCxyLG4pe2Zvcih2YXIgYSxvLGk9W10scz0wO3M8ci5sZW5ndGg7cys9MSl7dmFyIGw9bmV3IERhdGFWaWV3KG5ldyBVaW50OEFycmF5KHJbc10pLmJ1ZmZlcikscD0obz1uLE5lKFRlKGE9bCwwLGEuYnl0ZUxlbmd0aCksT2UsbykpO3AuX3N1YnJzPVtdLHAuX3N1YnJzQmlhcz0wO3ZhciB1PXAucHJpdmF0ZVswXSxjPXAucHJpdmF0ZVsxXTtpZigwIT09dSYmMCE9PWMpe3ZhciBkPUllKGUsYyt0LHUsbik7aWYocC5fZGVmYXVsdFdpZHRoWD1kLmRlZmF1bHRXaWR0aFgscC5fbm9taW5hbFdpZHRoWD1kLm5vbWluYWxXaWR0aFgsMCE9PWQuc3VicnMpe3ZhciBoPU1lKGUsYytkLnN1YnJzK3QpO3AuX3N1YnJzPWgub2JqZWN0cyxwLl9zdWJyc0JpYXM9d2UocC5fc3VicnMpfXAuX3ByaXZhdGVEaWN0PWR9aS5wdXNoKHApfXJldHVybiBpfWZ1bmN0aW9uIFJlKHksZyxlKXt2YXIgdixiLF8seCxTLHcsdCxNLEU9bmV3IEEsVD1bXSxDPTAsTj0hMSxPPSExLEw9MCxJPTA7aWYoeS5pc0NJREZvbnQpe3ZhciByPXkudGFibGVzLmNmZi50b3BEaWN0Ll9mZFNlbGVjdFtnLmluZGV4XSxuPXkudGFibGVzLmNmZi50b3BEaWN0Ll9mZEFycmF5W3JdO1M9bi5fc3VicnMsdz1uLl9zdWJyc0JpYXMsdD1uLl9kZWZhdWx0V2lkdGhYLE09bi5fbm9taW5hbFdpZHRoWH1lbHNlIFM9eS50YWJsZXMuY2ZmLnRvcERpY3QuX3N1YnJzLHc9eS50YWJsZXMuY2ZmLnRvcERpY3QuX3N1YnJzQmlhcyx0PXkudGFibGVzLmNmZi50b3BEaWN0Ll9kZWZhdWx0V2lkdGhYLE09eS50YWJsZXMuY2ZmLnRvcERpY3QuX25vbWluYWxXaWR0aFg7dmFyIFA9dDtmdW5jdGlvbiBSKGUsdCl7TyYmRS5jbG9zZVBhdGgoKSxFLm1vdmVUbyhlLHQpLE89ITB9ZnVuY3Rpb24gRCgpe1QubGVuZ3RoJTI9PTB8fE58fChQPVQuc2hpZnQoKStNKSxDKz1ULmxlbmd0aD4+MSxULmxlbmd0aD0wLE49ITB9cmV0dXJuIGZ1bmN0aW9uIGUodCl7Zm9yKHZhciByLG4sYSxvLGkscyxsLHAsdSxjLGQsaCxtPTA7bTx0Lmxlbmd0aDspe3ZhciBmPXRbbV07c3dpdGNoKG0rPTEsZil7Y2FzZSAxOmNhc2UgMzpEKCk7YnJlYWs7Y2FzZSA0OjE8VC5sZW5ndGgmJiFOJiYoUD1ULnNoaWZ0KCkrTSxOPSEwKSxJKz1ULnBvcCgpLFIoTCxJKTticmVhaztjYXNlIDU6Zm9yKDswPFQubGVuZ3RoOylMKz1ULnNoaWZ0KCksSSs9VC5zaGlmdCgpLEUubGluZVRvKEwsSSk7YnJlYWs7Y2FzZSA2OmZvcig7MDxULmxlbmd0aCYmKEwrPVQuc2hpZnQoKSxFLmxpbmVUbyhMLEkpLDAhPT1ULmxlbmd0aCk7KUkrPVQuc2hpZnQoKSxFLmxpbmVUbyhMLEkpO2JyZWFrO2Nhc2UgNzpmb3IoOzA8VC5sZW5ndGgmJihJKz1ULnNoaWZ0KCksRS5saW5lVG8oTCxJKSwwIT09VC5sZW5ndGgpOylMKz1ULnNoaWZ0KCksRS5saW5lVG8oTCxJKTticmVhaztjYXNlIDg6Zm9yKDswPFQubGVuZ3RoOyl2PUwrVC5zaGlmdCgpLGI9SStULnNoaWZ0KCksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLEw9XytULnNoaWZ0KCksST14K1Quc2hpZnQoKSxFLmN1cnZlVG8odixiLF8seCxMLEkpO2JyZWFrO2Nhc2UgMTA6aT1ULnBvcCgpK3csKHM9U1tpXSkmJmUocyk7YnJlYWs7Y2FzZSAxMTpyZXR1cm47Y2FzZSAxMjpzd2l0Y2goZj10W21dLG0rPTEsZil7Y2FzZSAzNTp2PUwrVC5zaGlmdCgpLGI9SStULnNoaWZ0KCksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLGw9XytULnNoaWZ0KCkscD14K1Quc2hpZnQoKSx1PWwrVC5zaGlmdCgpLGM9cCtULnNoaWZ0KCksZD11K1Quc2hpZnQoKSxoPWMrVC5zaGlmdCgpLEw9ZCtULnNoaWZ0KCksST1oK1Quc2hpZnQoKSxULnNoaWZ0KCksRS5jdXJ2ZVRvKHYsYixfLHgsbCxwKSxFLmN1cnZlVG8odSxjLGQsaCxMLEkpO2JyZWFrO2Nhc2UgMzQ6dj1MK1Quc2hpZnQoKSxiPUksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLGw9XytULnNoaWZ0KCkscD14LHU9bCtULnNoaWZ0KCksYz14LGQ9dStULnNoaWZ0KCksaD1JLEw9ZCtULnNoaWZ0KCksRS5jdXJ2ZVRvKHYsYixfLHgsbCxwKSxFLmN1cnZlVG8odSxjLGQsaCxMLEkpO2JyZWFrO2Nhc2UgMzY6dj1MK1Quc2hpZnQoKSxiPUkrVC5zaGlmdCgpLF89ditULnNoaWZ0KCkseD1iK1Quc2hpZnQoKSxsPV8rVC5zaGlmdCgpLHA9eCx1PWwrVC5zaGlmdCgpLGM9eCxkPXUrVC5zaGlmdCgpLGg9YytULnNoaWZ0KCksTD1kK1Quc2hpZnQoKSxFLmN1cnZlVG8odixiLF8seCxsLHApLEUuY3VydmVUbyh1LGMsZCxoLEwsSSk7YnJlYWs7Y2FzZSAzNzp2PUwrVC5zaGlmdCgpLGI9SStULnNoaWZ0KCksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLGw9XytULnNoaWZ0KCkscD14K1Quc2hpZnQoKSx1PWwrVC5zaGlmdCgpLGM9cCtULnNoaWZ0KCksZD11K1Quc2hpZnQoKSxoPWMrVC5zaGlmdCgpLE1hdGguYWJzKGQtTCk+TWF0aC5hYnMoaC1JKT9MPWQrVC5zaGlmdCgpOkk9aCtULnNoaWZ0KCksRS5jdXJ2ZVRvKHYsYixfLHgsbCxwKSxFLmN1cnZlVG8odSxjLGQsaCxMLEkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coXCJHbHlwaCBcIitnLmluZGV4K1wiOiB1bmtub3duIG9wZXJhdG9yIDEyMDBcIitmKSxULmxlbmd0aD0wfWJyZWFrO2Nhc2UgMTQ6MDxULmxlbmd0aCYmIU4mJihQPVQuc2hpZnQoKStNLE49ITApLE8mJihFLmNsb3NlUGF0aCgpLE89ITEpO2JyZWFrO2Nhc2UgMTg6RCgpO2JyZWFrO2Nhc2UgMTk6Y2FzZSAyMDpEKCksbSs9Qys3Pj4zO2JyZWFrO2Nhc2UgMjE6MjxULmxlbmd0aCYmIU4mJihQPVQuc2hpZnQoKStNLE49ITApLEkrPVQucG9wKCksUihMKz1ULnBvcCgpLEkpO2JyZWFrO2Nhc2UgMjI6MTxULmxlbmd0aCYmIU4mJihQPVQuc2hpZnQoKStNLE49ITApLFIoTCs9VC5wb3AoKSxJKTticmVhaztjYXNlIDIzOkQoKTticmVhaztjYXNlIDI0OmZvcig7MjxULmxlbmd0aDspdj1MK1Quc2hpZnQoKSxiPUkrVC5zaGlmdCgpLF89ditULnNoaWZ0KCkseD1iK1Quc2hpZnQoKSxMPV8rVC5zaGlmdCgpLEk9eCtULnNoaWZ0KCksRS5jdXJ2ZVRvKHYsYixfLHgsTCxJKTtMKz1ULnNoaWZ0KCksSSs9VC5zaGlmdCgpLEUubGluZVRvKEwsSSk7YnJlYWs7Y2FzZSAyNTpmb3IoOzY8VC5sZW5ndGg7KUwrPVQuc2hpZnQoKSxJKz1ULnNoaWZ0KCksRS5saW5lVG8oTCxJKTt2PUwrVC5zaGlmdCgpLGI9SStULnNoaWZ0KCksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLEw9XytULnNoaWZ0KCksST14K1Quc2hpZnQoKSxFLmN1cnZlVG8odixiLF8seCxMLEkpO2JyZWFrO2Nhc2UgMjY6Zm9yKFQubGVuZ3RoJTImJihMKz1ULnNoaWZ0KCkpOzA8VC5sZW5ndGg7KXY9TCxiPUkrVC5zaGlmdCgpLF89ditULnNoaWZ0KCkseD1iK1Quc2hpZnQoKSxMPV8sST14K1Quc2hpZnQoKSxFLmN1cnZlVG8odixiLF8seCxMLEkpO2JyZWFrO2Nhc2UgMjc6Zm9yKFQubGVuZ3RoJTImJihJKz1ULnNoaWZ0KCkpOzA8VC5sZW5ndGg7KXY9TCtULnNoaWZ0KCksYj1JLF89ditULnNoaWZ0KCkseD1iK1Quc2hpZnQoKSxMPV8rVC5zaGlmdCgpLEk9eCxFLmN1cnZlVG8odixiLF8seCxMLEkpO2JyZWFrO2Nhc2UgMjg6cj10W21dLG49dFttKzFdLFQucHVzaCgocjw8MjR8bjw8MTYpPj4xNiksbSs9MjticmVhaztjYXNlIDI5Omk9VC5wb3AoKSt5LmdzdWJyc0JpYXMsKHM9eS5nc3VicnNbaV0pJiZlKHMpO2JyZWFrO2Nhc2UgMzA6Zm9yKDswPFQubGVuZ3RoJiYodj1MLGI9SStULnNoaWZ0KCksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLEw9XytULnNoaWZ0KCksST14KygxPT09VC5sZW5ndGg/VC5zaGlmdCgpOjApLEUuY3VydmVUbyh2LGIsXyx4LEwsSSksMCE9PVQubGVuZ3RoKTspdj1MK1Quc2hpZnQoKSxiPUksXz12K1Quc2hpZnQoKSx4PWIrVC5zaGlmdCgpLEk9eCtULnNoaWZ0KCksTD1fKygxPT09VC5sZW5ndGg/VC5zaGlmdCgpOjApLEUuY3VydmVUbyh2LGIsXyx4LEwsSSk7YnJlYWs7Y2FzZSAzMTpmb3IoOzA8VC5sZW5ndGgmJih2PUwrVC5zaGlmdCgpLGI9SSxfPXYrVC5zaGlmdCgpLHg9YitULnNoaWZ0KCksST14K1Quc2hpZnQoKSxMPV8rKDE9PT1ULmxlbmd0aD9ULnNoaWZ0KCk6MCksRS5jdXJ2ZVRvKHYsYixfLHgsTCxJKSwwIT09VC5sZW5ndGgpOyl2PUwsYj1JK1Quc2hpZnQoKSxfPXYrVC5zaGlmdCgpLHg9YitULnNoaWZ0KCksTD1fK1Quc2hpZnQoKSxJPXgrKDE9PT1ULmxlbmd0aD9ULnNoaWZ0KCk6MCksRS5jdXJ2ZVRvKHYsYixfLHgsTCxJKTticmVhaztkZWZhdWx0OmY8MzI/Y29uc29sZS5sb2coXCJHbHlwaCBcIitnLmluZGV4K1wiOiB1bmtub3duIG9wZXJhdG9yIFwiK2YpOmY8MjQ3P1QucHVzaChmLTEzOSk6ZjwyNTE/KHI9dFttXSxtKz0xLFQucHVzaCgyNTYqKGYtMjQ3KStyKzEwOCkpOmY8MjU1PyhyPXRbbV0sbSs9MSxULnB1c2goMjU2Ki0oZi0yNTEpLXItMTA4KSk6KHI9dFttXSxuPXRbbSsxXSxhPXRbbSsyXSxvPXRbbSszXSxtKz00LFQucHVzaCgocjw8MjR8bjw8MTZ8YTw8OHxvKS82NTUzNikpfX19KGUpLGcuYWR2YW5jZVdpZHRoPVAsRX1mdW5jdGlvbiBEZShlLHQpe3ZhciByLG49cGUuaW5kZXhPZihlKTtyZXR1cm4gMDw9biYmKHI9biksMDw9KG49dC5pbmRleE9mKGUpKT9yPW4rcGUubGVuZ3RoOihyPXBlLmxlbmd0aCt0Lmxlbmd0aCx0LnB1c2goZSkpLHJ9ZnVuY3Rpb24gQWUoZSx0LHIpe2Zvcih2YXIgbj17fSxhPTA7YTxlLmxlbmd0aDthKz0xKXt2YXIgbz1lW2FdLGk9dFtvLm5hbWVdO3ZvaWQgMD09PWl8fFNlKGksby52YWx1ZSl8fChcIlNJRFwiPT09by50eXBlJiYoaT1EZShpLHIpKSxuW28ub3BdPXtuYW1lOm8ubmFtZSx0eXBlOm8udHlwZSx2YWx1ZTppfSl9cmV0dXJuIG59ZnVuY3Rpb24ga2UoZSx0KXt2YXIgcj1uZXcgJC5SZWNvcmQoXCJUb3AgRElDVFwiLFt7bmFtZTpcImRpY3RcIix0eXBlOlwiRElDVFwiLHZhbHVlOnt9fV0pO3JldHVybiByLmRpY3Q9QWUoT2UsZSx0KSxyfWZ1bmN0aW9uIEZlKGUpe3ZhciB0PW5ldyAkLlJlY29yZChcIlRvcCBESUNUIElOREVYXCIsW3tuYW1lOlwidG9wRGljdHNcIix0eXBlOlwiSU5ERVhcIix2YWx1ZTpbXX1dKTtyZXR1cm4gdC50b3BEaWN0cz1be25hbWU6XCJ0b3BEaWN0XzBcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTplfV0sdH1mdW5jdGlvbiBVZShlKXt2YXIgdD1bXSxyPWUucGF0aDt0LnB1c2goe25hbWU6XCJ3aWR0aFwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTplLmFkdmFuY2VXaWR0aH0pO2Zvcih2YXIgbj0wLGE9MCxvPTA7bzxyLmNvbW1hbmRzLmxlbmd0aDtvKz0xKXt2YXIgaT12b2lkIDAscz12b2lkIDAsbD1yLmNvbW1hbmRzW29dO2lmKFwiUVwiPT09bC50eXBlKXtsPXt0eXBlOlwiQ1wiLHg6bC54LHk6bC55LHgxOjEvMypuKzIvMypsLngxLHkxOjEvMyphKzIvMypsLnkxLHgyOjEvMypsLngrMi8zKmwueDEseTI6MS8zKmwueSsyLzMqbC55MX19aWYoXCJNXCI9PT1sLnR5cGUpaT1NYXRoLnJvdW5kKGwueC1uKSxzPU1hdGgucm91bmQobC55LWEpLHQucHVzaCh7bmFtZTpcImR4XCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOml9KSx0LnB1c2goe25hbWU6XCJkeVwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTpzfSksdC5wdXNoKHtuYW1lOlwicm1vdmV0b1wiLHR5cGU6XCJPUFwiLHZhbHVlOjIxfSksbj1NYXRoLnJvdW5kKGwueCksYT1NYXRoLnJvdW5kKGwueSk7ZWxzZSBpZihcIkxcIj09PWwudHlwZSlpPU1hdGgucm91bmQobC54LW4pLHM9TWF0aC5yb3VuZChsLnktYSksdC5wdXNoKHtuYW1lOlwiZHhcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6aX0pLHQucHVzaCh7bmFtZTpcImR5XCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOnN9KSx0LnB1c2goe25hbWU6XCJybGluZXRvXCIsdHlwZTpcIk9QXCIsdmFsdWU6NX0pLG49TWF0aC5yb3VuZChsLngpLGE9TWF0aC5yb3VuZChsLnkpO2Vsc2UgaWYoXCJDXCI9PT1sLnR5cGUpe3ZhciBwPU1hdGgucm91bmQobC54MS1uKSx1PU1hdGgucm91bmQobC55MS1hKSxjPU1hdGgucm91bmQobC54Mi1sLngxKSxkPU1hdGgucm91bmQobC55Mi1sLnkxKTtpPU1hdGgucm91bmQobC54LWwueDIpLHM9TWF0aC5yb3VuZChsLnktbC55MiksdC5wdXNoKHtuYW1lOlwiZHgxXCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOnB9KSx0LnB1c2goe25hbWU6XCJkeTFcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6dX0pLHQucHVzaCh7bmFtZTpcImR4MlwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTpjfSksdC5wdXNoKHtuYW1lOlwiZHkyXCIsdHlwZTpcIk5VTUJFUlwiLHZhbHVlOmR9KSx0LnB1c2goe25hbWU6XCJkeFwiLHR5cGU6XCJOVU1CRVJcIix2YWx1ZTppfSksdC5wdXNoKHtuYW1lOlwiZHlcIix0eXBlOlwiTlVNQkVSXCIsdmFsdWU6c30pLHQucHVzaCh7bmFtZTpcInJyY3VydmV0b1wiLHR5cGU6XCJPUFwiLHZhbHVlOjh9KSxuPU1hdGgucm91bmQobC54KSxhPU1hdGgucm91bmQobC55KX19cmV0dXJuIHQucHVzaCh7bmFtZTpcImVuZGNoYXJcIix0eXBlOlwiT1BcIix2YWx1ZToxNH0pLHR9dmFyIEJlPXtwYXJzZTpmdW5jdGlvbihlLHQscil7ci50YWJsZXMuY2ZmPXt9O3ZhciBuLGEsbyxpPU1lKGUsKG49ZSxhPXQsKG89e30pLmZvcm1hdE1ham9yPXNlLmdldENhcmQ4KG4sYSksby5mb3JtYXRNaW5vcj1zZS5nZXRDYXJkOChuLGErMSksby5zaXplPXNlLmdldENhcmQ4KG4sYSsyKSxvLm9mZnNldFNpemU9c2UuZ2V0Q2FyZDgobixhKzMpLG8uc3RhcnRPZmZzZXQ9YSxvLmVuZE9mZnNldD1hKzQsbykuZW5kT2Zmc2V0LHNlLmJ5dGVzVG9TdHJpbmcpLHM9TWUoZSxpLmVuZE9mZnNldCksbD1NZShlLHMuZW5kT2Zmc2V0LHNlLmJ5dGVzVG9TdHJpbmcpLHA9TWUoZSxsLmVuZE9mZnNldCk7ci5nc3VicnM9cC5vYmplY3RzLHIuZ3N1YnJzQmlhcz13ZShyLmdzdWJycyk7dmFyIHU9UGUoZSx0LHMub2JqZWN0cyxsLm9iamVjdHMpO2lmKDEhPT11Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDRkYgdGFibGUgaGFzIHRvbyBtYW55IGZvbnRzIGluICdGb250U2V0JyAtIGNvdW50IG9mIGZvbnRzIE5hbWVJbmRleC5sZW5ndGggPSBcIit1Lmxlbmd0aCk7dmFyIGM9dVswXTtpZigoci50YWJsZXMuY2ZmLnRvcERpY3Q9YykuX3ByaXZhdGVEaWN0JiYoci5kZWZhdWx0V2lkdGhYPWMuX3ByaXZhdGVEaWN0LmRlZmF1bHRXaWR0aFgsci5ub21pbmFsV2lkdGhYPWMuX3ByaXZhdGVEaWN0Lm5vbWluYWxXaWR0aFgpLHZvaWQgMCE9PWMucm9zWzBdJiZ2b2lkIDAhPT1jLnJvc1sxXSYmKHIuaXNDSURGb250PSEwKSxyLmlzQ0lERm9udCl7dmFyIGQ9Yy5mZEFycmF5LGg9Yy5mZFNlbGVjdDtpZigwPT09ZHx8MD09PWgpdGhyb3cgbmV3IEVycm9yKFwiRm9udCBpcyBtYXJrZWQgYXMgYSBDSUQgZm9udCwgYnV0IEZEQXJyYXkgYW5kL29yIEZEU2VsZWN0IGluZm9ybWF0aW9uIGlzIG1pc3NpbmdcIik7dmFyIG09UGUoZSx0LE1lKGUsZCs9dCkub2JqZWN0cyxsLm9iamVjdHMpO2MuX2ZkQXJyYXk9bSxoKz10LGMuX2ZkU2VsZWN0PWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhLG89W10saT1uZXcgc2UuUGFyc2VyKGUsdCkscz1pLnBhcnNlQ2FyZDgoKTtpZigwPT09cylmb3IodmFyIGw9MDtsPHI7bCsrKXtpZihuPD0oYT1pLnBhcnNlQ2FyZDgoKSkpdGhyb3cgbmV3IEVycm9yKFwiQ0ZGIHRhYmxlIENJRCBGb250IEZEU2VsZWN0IGhhcyBiYWQgRkQgaW5kZXggdmFsdWUgXCIrYStcIiAoRkQgY291bnQgXCIrbitcIilcIik7by5wdXNoKGEpfWVsc2V7aWYoMyE9PXMpdGhyb3cgbmV3IEVycm9yKFwiQ0ZGIFRhYmxlIENJRCBGb250IEZEU2VsZWN0IHRhYmxlIGhhcyB1bnN1cHBvcnRlZCBmb3JtYXQgXCIrcyk7dmFyIHAsdT1pLnBhcnNlQ2FyZDE2KCksYz1pLnBhcnNlQ2FyZDE2KCk7aWYoMCE9PWMpdGhyb3cgbmV3IEVycm9yKFwiQ0ZGIFRhYmxlIENJRCBGb250IEZEU2VsZWN0IGZvcm1hdCAzIHJhbmdlIGhhcyBiYWQgaW5pdGlhbCBHSUQgXCIrYyk7Zm9yKHZhciBkPTA7ZDx1O2QrKyl7aWYoYT1pLnBhcnNlQ2FyZDgoKSxwPWkucGFyc2VDYXJkMTYoKSxuPD1hKXRocm93IG5ldyBFcnJvcihcIkNGRiB0YWJsZSBDSUQgRm9udCBGRFNlbGVjdCBoYXMgYmFkIEZEIGluZGV4IHZhbHVlIFwiK2ErXCIgKEZEIGNvdW50IFwiK24rXCIpXCIpO2lmKHI8cCl0aHJvdyBuZXcgRXJyb3IoXCJDRkYgVGFibGUgQ0lEIEZvbnQgRkRTZWxlY3QgZm9ybWF0IDMgcmFuZ2UgaGFzIGJhZCBHSUQgXCIrcCk7Zm9yKDtjPHA7YysrKW8ucHVzaChhKTtjPXB9aWYocCE9PXIpdGhyb3cgbmV3IEVycm9yKFwiQ0ZGIFRhYmxlIENJRCBGb250IEZEU2VsZWN0IGZvcm1hdCAzIHJhbmdlIGhhcyBiYWQgZmluYWwgR0lEIFwiK3ApfXJldHVybiBvfShlLGgsci5udW1HbHlwaHMsbS5sZW5ndGgpfXZhciBmPXQrYy5wcml2YXRlWzFdLHk9SWUoZSxmLGMucHJpdmF0ZVswXSxsLm9iamVjdHMpO2lmKHIuZGVmYXVsdFdpZHRoWD15LmRlZmF1bHRXaWR0aFgsci5ub21pbmFsV2lkdGhYPXkubm9taW5hbFdpZHRoWCwwIT09eS5zdWJycyl7dmFyIGc9TWUoZSxmK3kuc3VicnMpO3Iuc3VicnM9Zy5vYmplY3RzLHIuc3VicnNCaWFzPXdlKHIuc3VicnMpfWVsc2Ugci5zdWJycz1bXSxyLnN1YnJzQmlhcz0wO3ZhciB2PU1lKGUsdCtjLmNoYXJTdHJpbmdzKTtyLm5HbHlwaHM9di5vYmplY3RzLmxlbmd0aDt2YXIgYj1mdW5jdGlvbihlLHQscixuKXt2YXIgYSxvLGk9bmV3IHNlLlBhcnNlcihlLHQpOy0tcjt2YXIgcz1bXCIubm90ZGVmXCJdLGw9aS5wYXJzZUNhcmQ4KCk7aWYoMD09PWwpZm9yKHZhciBwPTA7cDxyO3ArPTEpYT1pLnBhcnNlU0lEKCkscy5wdXNoKENlKG4sYSkpO2Vsc2UgaWYoMT09PWwpZm9yKDtzLmxlbmd0aDw9cjspe2E9aS5wYXJzZVNJRCgpLG89aS5wYXJzZUNhcmQ4KCk7Zm9yKHZhciB1PTA7dTw9bzt1Kz0xKXMucHVzaChDZShuLGEpKSxhKz0xfWVsc2V7aWYoMiE9PWwpdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBjaGFyc2V0IGZvcm1hdCBcIitsKTtmb3IoO3MubGVuZ3RoPD1yOyl7YT1pLnBhcnNlU0lEKCksbz1pLnBhcnNlQ2FyZDE2KCk7Zm9yKHZhciBjPTA7Yzw9bztjKz0xKXMucHVzaChDZShuLGEpKSxhKz0xfX1yZXR1cm4gc30oZSx0K2MuY2hhcnNldCxyLm5HbHlwaHMsbC5vYmplY3RzKTswPT09Yy5lbmNvZGluZz9yLmNmZkVuY29kaW5nPW5ldyBmZSh1ZSxiKToxPT09Yy5lbmNvZGluZz9yLmNmZkVuY29kaW5nPW5ldyBmZShjZSxiKTpyLmNmZkVuY29kaW5nPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbixhPXt9LG89bmV3IHNlLlBhcnNlcihlLHQpLGk9by5wYXJzZUNhcmQ4KCk7aWYoMD09PWkpZm9yKHZhciBzPW8ucGFyc2VDYXJkOCgpLGw9MDtsPHM7bCs9MSlhW249by5wYXJzZUNhcmQ4KCldPWw7ZWxzZXtpZigxIT09aSl0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGVuY29kaW5nIGZvcm1hdCBcIitpKTt2YXIgcD1vLnBhcnNlQ2FyZDgoKTtuPTE7Zm9yKHZhciB1PTA7dTxwO3UrPTEpZm9yKHZhciBjPW8ucGFyc2VDYXJkOCgpLGQ9by5wYXJzZUNhcmQ4KCksaD1jO2g8PWMrZDtoKz0xKWFbaF09bixuKz0xfXJldHVybiBuZXcgZmUoYSxyKX0oZSx0K2MuZW5jb2RpbmcsYiksci5lbmNvZGluZz1yLmVuY29kaW5nfHxyLmNmZkVuY29kaW5nLHIuZ2x5cGhzPW5ldyB4ZS5HbHlwaFNldChyKTtmb3IodmFyIF89MDtfPHIubkdseXBocztfKz0xKXt2YXIgeD12Lm9iamVjdHNbX107ci5nbHlwaHMucHVzaChfLHhlLmNmZkdseXBoTG9hZGVyKHIsXyxSZSx4KSl9fSxtYWtlOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLG49bmV3ICQuVGFibGUoXCJDRkYgXCIsW3tuYW1lOlwiaGVhZGVyXCIsdHlwZTpcIlJFQ09SRFwifSx7bmFtZTpcIm5hbWVJbmRleFwiLHR5cGU6XCJSRUNPUkRcIn0se25hbWU6XCJ0b3BEaWN0SW5kZXhcIix0eXBlOlwiUkVDT1JEXCJ9LHtuYW1lOlwic3RyaW5nSW5kZXhcIix0eXBlOlwiUkVDT1JEXCJ9LHtuYW1lOlwiZ2xvYmFsU3VickluZGV4XCIsdHlwZTpcIlJFQ09SRFwifSx7bmFtZTpcImNoYXJzZXRzXCIsdHlwZTpcIlJFQ09SRFwifSx7bmFtZTpcImNoYXJTdHJpbmdzSW5kZXhcIix0eXBlOlwiUkVDT1JEXCJ9LHtuYW1lOlwicHJpdmF0ZURpY3RcIix0eXBlOlwiUkVDT1JEXCJ9XSksYT0xL3QudW5pdHNQZXJFbSxvPXt2ZXJzaW9uOnQudmVyc2lvbixmdWxsTmFtZTp0LmZ1bGxOYW1lLGZhbWlseU5hbWU6dC5mYW1pbHlOYW1lLHdlaWdodDp0LndlaWdodE5hbWUsZm9udEJCb3g6dC5mb250QkJveHx8WzAsMCwwLDBdLGZvbnRNYXRyaXg6W2EsMCwwLGEsMCwwXSxjaGFyc2V0Ojk5OSxlbmNvZGluZzowLGNoYXJTdHJpbmdzOjk5OSxwcml2YXRlOlswLDk5OV19LGk9W10scz0xO3M8ZS5sZW5ndGg7cys9MSlyPWUuZ2V0KHMpLGkucHVzaChyLm5hbWUpO3ZhciBsPVtdO24uaGVhZGVyPW5ldyAkLlJlY29yZChcIkhlYWRlclwiLFt7bmFtZTpcIm1ham9yXCIsdHlwZTpcIkNhcmQ4XCIsdmFsdWU6MX0se25hbWU6XCJtaW5vclwiLHR5cGU6XCJDYXJkOFwiLHZhbHVlOjB9LHtuYW1lOlwiaGRyU2l6ZVwiLHR5cGU6XCJDYXJkOFwiLHZhbHVlOjR9LHtuYW1lOlwibWFqb3JcIix0eXBlOlwiQ2FyZDhcIix2YWx1ZToxfV0pLG4ubmFtZUluZGV4PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyAkLlJlY29yZChcIk5hbWUgSU5ERVhcIixbe25hbWU6XCJuYW1lc1wiLHR5cGU6XCJJTkRFWFwiLHZhbHVlOltdfV0pO3QubmFtZXM9W107Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKz0xKXQubmFtZXMucHVzaCh7bmFtZTpcIm5hbWVfXCIrcix0eXBlOlwiTkFNRVwiLHZhbHVlOmVbcl19KTtyZXR1cm4gdH0oW3QucG9zdFNjcmlwdE5hbWVdKTt2YXIgcCx1LGMsZD1rZShvLGwpO24udG9wRGljdEluZGV4PUZlKGQpLG4uZ2xvYmFsU3VickluZGV4PW5ldyAkLlJlY29yZChcIkdsb2JhbCBTdWJyIElOREVYXCIsW3tuYW1lOlwic3VicnNcIix0eXBlOlwiSU5ERVhcIix2YWx1ZTpbXX1dKSxuLmNoYXJzZXRzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPW5ldyAkLlJlY29yZChcIkNoYXJzZXRzXCIsW3tuYW1lOlwiZm9ybWF0XCIsdHlwZTpcIkNhcmQ4XCIsdmFsdWU6MH1dKSxuPTA7bjxlLmxlbmd0aDtuKz0xKXt2YXIgYT1EZShlW25dLHQpO3IuZmllbGRzLnB1c2goe25hbWU6XCJnbHlwaF9cIituLHR5cGU6XCJTSURcIix2YWx1ZTphfSl9cmV0dXJuIHJ9KGksbCksbi5jaGFyU3RyaW5nc0luZGV4PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgJC5SZWNvcmQoXCJDaGFyU3RyaW5ncyBJTkRFWFwiLFt7bmFtZTpcImNoYXJTdHJpbmdzXCIsdHlwZTpcIklOREVYXCIsdmFsdWU6W119XSkscj0wO3I8ZS5sZW5ndGg7cis9MSl7dmFyIG49ZS5nZXQociksYT1VZShuKTt0LmNoYXJTdHJpbmdzLnB1c2goe25hbWU6bi5uYW1lLHR5cGU6XCJDSEFSU1RSSU5HXCIsdmFsdWU6YX0pfXJldHVybiB0fShlKSxuLnByaXZhdGVEaWN0PShwPXt9LHU9bCwoYz1uZXcgJC5SZWNvcmQoXCJQcml2YXRlIERJQ1RcIixbe25hbWU6XCJkaWN0XCIsdHlwZTpcIkRJQ1RcIix2YWx1ZTp7fX1dKSkuZGljdD1BZShMZSxwLHUpLGMpLG4uc3RyaW5nSW5kZXg9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3ICQuUmVjb3JkKFwiU3RyaW5nIElOREVYXCIsW3tuYW1lOlwic3RyaW5nc1wiLHR5cGU6XCJJTkRFWFwiLHZhbHVlOltdfV0pO3Quc3RyaW5ncz1bXTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrPTEpdC5zdHJpbmdzLnB1c2goe25hbWU6XCJzdHJpbmdfXCIrcix0eXBlOlwiU1RSSU5HXCIsdmFsdWU6ZVtyXX0pO3JldHVybiB0fShsKTt2YXIgaD1uLmhlYWRlci5zaXplT2YoKStuLm5hbWVJbmRleC5zaXplT2YoKStuLnRvcERpY3RJbmRleC5zaXplT2YoKStuLnN0cmluZ0luZGV4LnNpemVPZigpK24uZ2xvYmFsU3VickluZGV4LnNpemVPZigpO3JldHVybiBvLmNoYXJzZXQ9aCxvLmVuY29kaW5nPTAsby5jaGFyU3RyaW5ncz1vLmNoYXJzZXQrbi5jaGFyc2V0cy5zaXplT2YoKSxvLnByaXZhdGVbMV09by5jaGFyU3RyaW5ncytuLmNoYXJTdHJpbmdzSW5kZXguc2l6ZU9mKCksZD1rZShvLGwpLG4udG9wRGljdEluZGV4PUZlKGQpLG59fTt2YXIgR2U9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e30sbj1uZXcgc2UuUGFyc2VyKGUsdCk7cmV0dXJuIHIudmVyc2lvbj1uLnBhcnNlVmVyc2lvbigpLHIuZm9udFJldmlzaW9uPU1hdGgucm91bmQoMWUzKm4ucGFyc2VGaXhlZCgpKS8xZTMsci5jaGVja1N1bUFkanVzdG1lbnQ9bi5wYXJzZVVMb25nKCksci5tYWdpY051bWJlcj1uLnBhcnNlVUxvbmcoKSxMLmFyZ3VtZW50KDE1OTQ4MzQxNjU9PT1yLm1hZ2ljTnVtYmVyLFwiRm9udCBoZWFkZXIgaGFzIHdyb25nIG1hZ2ljIG51bWJlci5cIiksci5mbGFncz1uLnBhcnNlVVNob3J0KCksci51bml0c1BlckVtPW4ucGFyc2VVU2hvcnQoKSxyLmNyZWF0ZWQ9bi5wYXJzZUxvbmdEYXRlVGltZSgpLHIubW9kaWZpZWQ9bi5wYXJzZUxvbmdEYXRlVGltZSgpLHIueE1pbj1uLnBhcnNlU2hvcnQoKSxyLnlNaW49bi5wYXJzZVNob3J0KCksci54TWF4PW4ucGFyc2VTaG9ydCgpLHIueU1heD1uLnBhcnNlU2hvcnQoKSxyLm1hY1N0eWxlPW4ucGFyc2VVU2hvcnQoKSxyLmxvd2VzdFJlY1BQRU09bi5wYXJzZVVTaG9ydCgpLHIuZm9udERpcmVjdGlvbkhpbnQ9bi5wYXJzZVNob3J0KCksci5pbmRleFRvTG9jRm9ybWF0PW4ucGFyc2VTaG9ydCgpLHIuZ2x5cGhEYXRhRm9ybWF0PW4ucGFyc2VTaG9ydCgpLHJ9LG1ha2U6ZnVuY3Rpb24oZSl7dmFyIHQ9TWF0aC5yb3VuZCgobmV3IERhdGUpLmdldFRpbWUoKS8xZTMpKzIwODI4NDQ4MDAscj10O3JldHVybiBlLmNyZWF0ZWRUaW1lc3RhbXAmJihyPWUuY3JlYXRlZFRpbWVzdGFtcCsyMDgyODQ0ODAwKSxuZXcgJC5UYWJsZShcImhlYWRcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIkZJWEVEXCIsdmFsdWU6NjU1MzZ9LHtuYW1lOlwiZm9udFJldmlzaW9uXCIsdHlwZTpcIkZJWEVEXCIsdmFsdWU6NjU1MzZ9LHtuYW1lOlwiY2hlY2tTdW1BZGp1c3RtZW50XCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJtYWdpY051bWJlclwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjE1OTQ4MzQxNjV9LHtuYW1lOlwiZmxhZ3NcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1bml0c1BlckVtXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjFlM30se25hbWU6XCJjcmVhdGVkXCIsdHlwZTpcIkxPTkdEQVRFVElNRVwiLHZhbHVlOnJ9LHtuYW1lOlwibW9kaWZpZWRcIix0eXBlOlwiTE9OR0RBVEVUSU1FXCIsdmFsdWU6dH0se25hbWU6XCJ4TWluXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ5TWluXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ4TWF4XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ5TWF4XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJtYWNTdHlsZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcImxvd2VzdFJlY1BQRU1cIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJmb250RGlyZWN0aW9uSGludFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjJ9LHtuYW1lOlwiaW5kZXhUb0xvY0Zvcm1hdFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwiZ2x5cGhEYXRhRm9ybWF0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH1dLGUpfX07dmFyIGplPXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPXt9LG49bmV3IHNlLlBhcnNlcihlLHQpO3JldHVybiByLnZlcnNpb249bi5wYXJzZVZlcnNpb24oKSxyLmFzY2VuZGVyPW4ucGFyc2VTaG9ydCgpLHIuZGVzY2VuZGVyPW4ucGFyc2VTaG9ydCgpLHIubGluZUdhcD1uLnBhcnNlU2hvcnQoKSxyLmFkdmFuY2VXaWR0aE1heD1uLnBhcnNlVVNob3J0KCksci5taW5MZWZ0U2lkZUJlYXJpbmc9bi5wYXJzZVNob3J0KCksci5taW5SaWdodFNpZGVCZWFyaW5nPW4ucGFyc2VTaG9ydCgpLHIueE1heEV4dGVudD1uLnBhcnNlU2hvcnQoKSxyLmNhcmV0U2xvcGVSaXNlPW4ucGFyc2VTaG9ydCgpLHIuY2FyZXRTbG9wZVJ1bj1uLnBhcnNlU2hvcnQoKSxyLmNhcmV0T2Zmc2V0PW4ucGFyc2VTaG9ydCgpLG4ucmVsYXRpdmVPZmZzZXQrPTgsci5tZXRyaWNEYXRhRm9ybWF0PW4ucGFyc2VTaG9ydCgpLHIubnVtYmVyT2ZITWV0cmljcz1uLnBhcnNlVVNob3J0KCkscn0sbWFrZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3ICQuVGFibGUoXCJoaGVhXCIsW3tuYW1lOlwidmVyc2lvblwiLHR5cGU6XCJGSVhFRFwiLHZhbHVlOjY1NTM2fSx7bmFtZTpcImFzY2VuZGVyXCIsdHlwZTpcIkZXT1JEXCIsdmFsdWU6MH0se25hbWU6XCJkZXNjZW5kZXJcIix0eXBlOlwiRldPUkRcIix2YWx1ZTowfSx7bmFtZTpcImxpbmVHYXBcIix0eXBlOlwiRldPUkRcIix2YWx1ZTowfSx7bmFtZTpcImFkdmFuY2VXaWR0aE1heFwiLHR5cGU6XCJVRldPUkRcIix2YWx1ZTowfSx7bmFtZTpcIm1pbkxlZnRTaWRlQmVhcmluZ1wiLHR5cGU6XCJGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwibWluUmlnaHRTaWRlQmVhcmluZ1wiLHR5cGU6XCJGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwieE1heEV4dGVudFwiLHR5cGU6XCJGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwiY2FyZXRTbG9wZVJpc2VcIix0eXBlOlwiU0hPUlRcIix2YWx1ZToxfSx7bmFtZTpcImNhcmV0U2xvcGVSdW5cIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcImNhcmV0T2Zmc2V0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJyZXNlcnZlZDFcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInJlc2VydmVkMlwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwicmVzZXJ2ZWQzXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJyZXNlcnZlZDRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcIm1ldHJpY0RhdGFGb3JtYXRcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcIm51bWJlck9mSE1ldHJpY3NcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH1dLGUpfX07dmFyIFZlPXtwYXJzZTpmdW5jdGlvbihlLHQscixuLGEpe2Zvcih2YXIgbyxpLHM9bmV3IHNlLlBhcnNlcihlLHQpLGw9MDtsPG47bCs9MSl7bDxyJiYobz1zLnBhcnNlVVNob3J0KCksaT1zLnBhcnNlU2hvcnQoKSk7dmFyIHA9YS5nZXQobCk7cC5hZHZhbmNlV2lkdGg9byxwLmxlZnRTaWRlQmVhcmluZz1pfX0sbWFrZTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3ICQuVGFibGUoXCJobXR4XCIsW10pLHI9MDtyPGUubGVuZ3RoO3IrPTEpe3ZhciBuPWUuZ2V0KHIpLGE9bi5hZHZhbmNlV2lkdGh8fDAsbz1uLmxlZnRTaWRlQmVhcmluZ3x8MDt0LmZpZWxkcy5wdXNoKHtuYW1lOlwiYWR2YW5jZVdpZHRoX1wiK3IsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOmF9KSx0LmZpZWxkcy5wdXNoKHtuYW1lOlwibGVmdFNpZGVCZWFyaW5nX1wiK3IsdHlwZTpcIlNIT1JUXCIsdmFsdWU6b30pfXJldHVybiB0fX07dmFyIHplPXttYWtlOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1uZXcgJC5UYWJsZShcImx0YWdcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MX0se25hbWU6XCJmbGFnc1wiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwibnVtVGFnc1wiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOmUubGVuZ3RofV0pLHI9XCJcIixuPTEyKzQqZS5sZW5ndGgsYT0wO2E8ZS5sZW5ndGg7KythKXt2YXIgbz1yLmluZGV4T2YoZVthXSk7bzwwJiYobz1yLmxlbmd0aCxyKz1lW2FdKSx0LmZpZWxkcy5wdXNoKHtuYW1lOlwib2Zmc2V0IFwiK2EsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOm4rb30pLHQuZmllbGRzLnB1c2goe25hbWU6XCJsZW5ndGggXCIrYSx0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ZVthXS5sZW5ndGh9KX1yZXR1cm4gdC5maWVsZHMucHVzaCh7bmFtZTpcInN0cmluZ1Bvb2xcIix0eXBlOlwiQ0hBUkFSUkFZXCIsdmFsdWU6cn0pLHR9LHBhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9bmV3IHNlLlBhcnNlcihlLHQpLG49ci5wYXJzZVVMb25nKCk7TC5hcmd1bWVudCgxPT09bixcIlVuc3VwcG9ydGVkIGx0YWcgdGFibGUgdmVyc2lvbi5cIiksci5za2lwKFwidUxvbmdcIiwxKTtmb3IodmFyIGE9ci5wYXJzZVVMb25nKCksbz1bXSxpPTA7aTxhO2krKyl7Zm9yKHZhciBzPVwiXCIsbD10K3IucGFyc2VVU2hvcnQoKSxwPXIucGFyc2VVU2hvcnQoKSx1PWw7dTxsK3A7Kyt1KXMrPVN0cmluZy5mcm9tQ2hhckNvZGUoZS5nZXRJbnQ4KHUpKTtvLnB1c2gocyl9cmV0dXJuIG99fTt2YXIgSGU9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e30sbj1uZXcgc2UuUGFyc2VyKGUsdCk7cmV0dXJuIHIudmVyc2lvbj1uLnBhcnNlVmVyc2lvbigpLHIubnVtR2x5cGhzPW4ucGFyc2VVU2hvcnQoKSwxPT09ci52ZXJzaW9uJiYoci5tYXhQb2ludHM9bi5wYXJzZVVTaG9ydCgpLHIubWF4Q29udG91cnM9bi5wYXJzZVVTaG9ydCgpLHIubWF4Q29tcG9zaXRlUG9pbnRzPW4ucGFyc2VVU2hvcnQoKSxyLm1heENvbXBvc2l0ZUNvbnRvdXJzPW4ucGFyc2VVU2hvcnQoKSxyLm1heFpvbmVzPW4ucGFyc2VVU2hvcnQoKSxyLm1heFR3aWxpZ2h0UG9pbnRzPW4ucGFyc2VVU2hvcnQoKSxyLm1heFN0b3JhZ2U9bi5wYXJzZVVTaG9ydCgpLHIubWF4RnVuY3Rpb25EZWZzPW4ucGFyc2VVU2hvcnQoKSxyLm1heEluc3RydWN0aW9uRGVmcz1uLnBhcnNlVVNob3J0KCksci5tYXhTdGFja0VsZW1lbnRzPW4ucGFyc2VVU2hvcnQoKSxyLm1heFNpemVPZkluc3RydWN0aW9ucz1uLnBhcnNlVVNob3J0KCksci5tYXhDb21wb25lbnRFbGVtZW50cz1uLnBhcnNlVVNob3J0KCksci5tYXhDb21wb25lbnREZXB0aD1uLnBhcnNlVVNob3J0KCkpLHJ9LG1ha2U6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyAkLlRhYmxlKFwibWF4cFwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiRklYRURcIix2YWx1ZToyMDQ4MH0se25hbWU6XCJudW1HbHlwaHNcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ZX1dKX19LFdlPVtcImNvcHlyaWdodFwiLFwiZm9udEZhbWlseVwiLFwiZm9udFN1YmZhbWlseVwiLFwidW5pcXVlSURcIixcImZ1bGxOYW1lXCIsXCJ2ZXJzaW9uXCIsXCJwb3N0U2NyaXB0TmFtZVwiLFwidHJhZGVtYXJrXCIsXCJtYW51ZmFjdHVyZXJcIixcImRlc2lnbmVyXCIsXCJkZXNjcmlwdGlvblwiLFwibWFudWZhY3R1cmVyVVJMXCIsXCJkZXNpZ25lclVSTFwiLFwibGljZW5zZVwiLFwibGljZW5zZVVSTFwiLFwicmVzZXJ2ZWRcIixcInByZWZlcnJlZEZhbWlseVwiLFwicHJlZmVycmVkU3ViZmFtaWx5XCIsXCJjb21wYXRpYmxlRnVsbE5hbWVcIixcInNhbXBsZVRleHRcIixcInBvc3RTY3JpcHRGaW5kRm9udE5hbWVcIixcInd3c0ZhbWlseVwiLFwid3dzU3ViZmFtaWx5XCJdLFhlPXswOlwiZW5cIiwxOlwiZnJcIiwyOlwiZGVcIiwzOlwiaXRcIiw0OlwibmxcIiw1Olwic3ZcIiw2OlwiZXNcIiw3OlwiZGFcIiw4OlwicHRcIiw5Olwibm9cIiwxMDpcImhlXCIsMTE6XCJqYVwiLDEyOlwiYXJcIiwxMzpcImZpXCIsMTQ6XCJlbFwiLDE1OlwiaXNcIiwxNjpcIm10XCIsMTc6XCJ0clwiLDE4OlwiaHJcIiwxOTpcInpoLUhhbnRcIiwyMDpcInVyXCIsMjE6XCJoaVwiLDIyOlwidGhcIiwyMzpcImtvXCIsMjQ6XCJsdFwiLDI1OlwicGxcIiwyNjpcImh1XCIsMjc6XCJlc1wiLDI4OlwibHZcIiwyOTpcInNlXCIsMzA6XCJmb1wiLDMxOlwiZmFcIiwzMjpcInJ1XCIsMzM6XCJ6aFwiLDM0OlwibmwtQkVcIiwzNTpcImdhXCIsMzY6XCJzcVwiLDM3Olwicm9cIiwzODpcImN6XCIsMzk6XCJza1wiLDQwOlwic2lcIiw0MTpcInlpXCIsNDI6XCJzclwiLDQzOlwibWtcIiw0NDpcImJnXCIsNDU6XCJ1a1wiLDQ2OlwiYmVcIiw0NzpcInV6XCIsNDg6XCJra1wiLDQ5OlwiYXotQ3lybFwiLDUwOlwiYXotQXJhYlwiLDUxOlwiaHlcIiw1MjpcImthXCIsNTM6XCJtb1wiLDU0Olwia3lcIiw1NTpcInRnXCIsNTY6XCJ0a1wiLDU3OlwibW4tQ05cIiw1ODpcIm1uXCIsNTk6XCJwc1wiLDYwOlwia3NcIiw2MTpcImt1XCIsNjI6XCJzZFwiLDYzOlwiYm9cIiw2NDpcIm5lXCIsNjU6XCJzYVwiLDY2OlwibXJcIiw2NzpcImJuXCIsNjg6XCJhc1wiLDY5OlwiZ3VcIiw3MDpcInBhXCIsNzE6XCJvclwiLDcyOlwibWxcIiw3MzpcImtuXCIsNzQ6XCJ0YVwiLDc1OlwidGVcIiw3NjpcInNpXCIsNzc6XCJteVwiLDc4Olwia21cIiw3OTpcImxvXCIsODA6XCJ2aVwiLDgxOlwiaWRcIiw4MjpcInRsXCIsODM6XCJtc1wiLDg0OlwibXMtQXJhYlwiLDg1OlwiYW1cIiw4NjpcInRpXCIsODc6XCJvbVwiLDg4Olwic29cIiw4OTpcInN3XCIsOTA6XCJyd1wiLDkxOlwicm5cIiw5MjpcIm55XCIsOTM6XCJtZ1wiLDk0OlwiZW9cIiwxMjg6XCJjeVwiLDEyOTpcImV1XCIsMTMwOlwiY2FcIiwxMzE6XCJsYVwiLDEzMjpcInF1XCIsMTMzOlwiZ25cIiwxMzQ6XCJheVwiLDEzNTpcInR0XCIsMTM2OlwidWdcIiwxMzc6XCJkelwiLDEzODpcImp2XCIsMTM5Olwic3VcIiwxNDA6XCJnbFwiLDE0MTpcImFmXCIsMTQyOlwiYnJcIiwxNDM6XCJpdVwiLDE0NDpcImdkXCIsMTQ1OlwiZ3ZcIiwxNDY6XCJnYVwiLDE0NzpcInRvXCIsMTQ4OlwiZWwtcG9seXRvblwiLDE0OTpcImtsXCIsMTUwOlwiYXpcIiwxNTE6XCJublwifSxxZT17MDowLDE6MCwyOjAsMzowLDQ6MCw1OjAsNjowLDc6MCw4OjAsOTowLDEwOjUsMTE6MSwxMjo0LDEzOjAsMTQ6NiwxNTowLDE2OjAsMTc6MCwxODowLDE5OjIsMjA6NCwyMTo5LDIyOjIxLDIzOjMsMjQ6MjksMjU6MjksMjY6MjksMjc6MjksMjg6MjksMjk6MCwzMDowLDMxOjQsMzI6NywzMzoyNSwzNDowLDM1OjAsMzY6MCwzNzowLDM4OjI5LDM5OjI5LDQwOjAsNDE6NSw0Mjo3LDQzOjcsNDQ6Nyw0NTo3LDQ2OjcsNDc6Nyw0ODo3LDQ5OjcsNTA6NCw1MToyNCw1MjoyMyw1Mzo3LDU0OjcsNTU6Nyw1Njo3LDU3OjI3LDU4OjcsNTk6NCw2MDo0LDYxOjQsNjI6NCw2MzoyNiw2NDo5LDY1OjksNjY6OSw2NzoxMyw2ODoxMyw2OToxMSw3MDoxMCw3MToxMiw3MjoxNyw3MzoxNiw3NDoxNCw3NToxNSw3NjoxOCw3NzoxOSw3ODoyMCw3OToyMiw4MDozMCw4MTowLDgyOjAsODM6MCw4NDo0LDg1OjI4LDg2OjI4LDg3OjI4LDg4OjAsODk6MCw5MDowLDkxOjAsOTI6MCw5MzowLDk0OjAsMTI4OjAsMTI5OjAsMTMwOjAsMTMxOjAsMTMyOjAsMTMzOjAsMTM0OjAsMTM1OjcsMTM2OjQsMTM3OjI2LDEzODowLDEzOTowLDE0MDowLDE0MTowLDE0MjowLDE0MzoyOCwxNDQ6MCwxNDU6MCwxNDY6MCwxNDc6MCwxNDg6NiwxNDk6MCwxNTA6MCwxNTE6MH0sWWU9ezEwNzg6XCJhZlwiLDEwNTI6XCJzcVwiLDExNTY6XCJnc3dcIiwxMTE4OlwiYW1cIiw1MTIxOlwiYXItRFpcIiwxNTM2MTpcImFyLUJIXCIsMzA3MzpcImFyXCIsMjA0OTpcImFyLUlRXCIsMTEyNjU6XCJhci1KT1wiLDEzMzEzOlwiYXItS1dcIiwxMjI4OTpcImFyLUxCXCIsNDA5NzpcImFyLUxZXCIsNjE0NTpcImFyeVwiLDgxOTM6XCJhci1PTVwiLDE2Mzg1OlwiYXItUUFcIiwxMDI1OlwiYXItU0FcIiwxMDI0MTpcImFyLVNZXCIsNzE2OTpcImFlYlwiLDE0MzM3OlwiYXItQUVcIiw5MjE3OlwiYXItWUVcIiwxMDY3OlwiaHlcIiwxMTAxOlwiYXNcIiwyMDkyOlwiYXotQ3lybFwiLDEwNjg6XCJhelwiLDExMzM6XCJiYVwiLDEwNjk6XCJldVwiLDEwNTk6XCJiZVwiLDIxMTc6XCJiblwiLDEwOTM6XCJibi1JTlwiLDgyMTg6XCJicy1DeXJsXCIsNTE0NjpcImJzXCIsMTE1MDpcImJyXCIsMTAyNjpcImJnXCIsMTAyNzpcImNhXCIsMzA3NjpcInpoLUhLXCIsNTEyNDpcInpoLU1PXCIsMjA1MjpcInpoXCIsNDEwMDpcInpoLVNHXCIsMTAyODpcInpoLVRXXCIsMTE1NTpcImNvXCIsMTA1MDpcImhyXCIsNDEyMjpcImhyLUJBXCIsMTAyOTpcImNzXCIsMTAzMDpcImRhXCIsMTE2NDpcInByc1wiLDExMjU6XCJkdlwiLDIwNjc6XCJubC1CRVwiLDEwNDM6XCJubFwiLDMwODE6XCJlbi1BVVwiLDEwMjQ5OlwiZW4tQlpcIiw0MTA1OlwiZW4tQ0FcIiw5MjI1OlwiZW4tMDI5XCIsMTYzOTM6XCJlbi1JTlwiLDYxNTM6XCJlbi1JRVwiLDgyMDE6XCJlbi1KTVwiLDE3NDE3OlwiZW4tTVlcIiw1MTI5OlwiZW4tTlpcIiwxMzMyMTpcImVuLVBIXCIsMTg0NDE6XCJlbi1TR1wiLDcxNzc6XCJlbi1aQVwiLDExMjczOlwiZW4tVFRcIiwyMDU3OlwiZW4tR0JcIiwxMDMzOlwiZW5cIiwxMjI5NzpcImVuLVpXXCIsMTA2MTpcImV0XCIsMTA4MDpcImZvXCIsMTEyNDpcImZpbFwiLDEwMzU6XCJmaVwiLDIwNjA6XCJmci1CRVwiLDMwODQ6XCJmci1DQVwiLDEwMzY6XCJmclwiLDUxMzI6XCJmci1MVVwiLDYxNTY6XCJmci1NQ1wiLDQxMDg6XCJmci1DSFwiLDExMjI6XCJmeVwiLDExMTA6XCJnbFwiLDEwNzk6XCJrYVwiLDMwNzk6XCJkZS1BVFwiLDEwMzE6XCJkZVwiLDUxMjc6XCJkZS1MSVwiLDQxMDM6XCJkZS1MVVwiLDIwNTU6XCJkZS1DSFwiLDEwMzI6XCJlbFwiLDExMzU6XCJrbFwiLDEwOTU6XCJndVwiLDExMjg6XCJoYVwiLDEwMzc6XCJoZVwiLDEwODE6XCJoaVwiLDEwMzg6XCJodVwiLDEwMzk6XCJpc1wiLDExMzY6XCJpZ1wiLDEwNTc6XCJpZFwiLDExMTc6XCJpdVwiLDIxNDE6XCJpdS1MYXRuXCIsMjEwODpcImdhXCIsMTA3NjpcInhoXCIsMTA3NzpcInp1XCIsMTA0MDpcIml0XCIsMjA2NDpcIml0LUNIXCIsMTA0MTpcImphXCIsMTA5OTpcImtuXCIsMTA4NzpcImtrXCIsMTEwNzpcImttXCIsMTE1ODpcInF1Y1wiLDExNTk6XCJyd1wiLDEwODk6XCJzd1wiLDExMTE6XCJrb2tcIiwxMDQyOlwia29cIiwxMDg4Olwia3lcIiwxMTA4OlwibG9cIiwxMDYyOlwibHZcIiwxMDYzOlwibHRcIiwyMDk0OlwiZHNiXCIsMTEzNDpcImxiXCIsMTA3MTpcIm1rXCIsMjExMDpcIm1zLUJOXCIsMTA4NjpcIm1zXCIsMTEwMDpcIm1sXCIsMTA4MjpcIm10XCIsMTE1MzpcIm1pXCIsMTE0NjpcImFyblwiLDExMDI6XCJtclwiLDExNDg6XCJtb2hcIiwxMTA0OlwibW5cIiwyMTI4OlwibW4tQ05cIiwxMTIxOlwibmVcIiwxMDQ0OlwibmJcIiwyMDY4Olwibm5cIiwxMTU0Olwib2NcIiwxMDk2Olwib3JcIiwxMTIzOlwicHNcIiwxMDQ1OlwicGxcIiwxMDQ2OlwicHRcIiwyMDcwOlwicHQtUFRcIiwxMDk0OlwicGFcIiwxMTMxOlwicXUtQk9cIiwyMTU1OlwicXUtRUNcIiwzMTc5OlwicXVcIiwxMDQ4Olwicm9cIiwxMDQ3Olwicm1cIiwxMDQ5OlwicnVcIiw5Mjc1Olwic21uXCIsNDE1NTpcInNtai1OT1wiLDUxNzk6XCJzbWpcIiwzMTMxOlwic2UtRklcIiwxMDgzOlwic2VcIiwyMTA3Olwic2UtU0VcIiw4MjUxOlwic21zXCIsNjIwMzpcInNtYS1OT1wiLDcyMjc6XCJzbXNcIiwxMTAzOlwic2FcIiw3MTk0Olwic3ItQ3lybC1CQVwiLDMwOTg6XCJzclwiLDYxNzA6XCJzci1MYXRuLUJBXCIsMjA3NDpcInNyLUxhdG5cIiwxMTMyOlwibnNvXCIsMTA3NDpcInRuXCIsMTExNTpcInNpXCIsMTA1MTpcInNrXCIsMTA2MDpcInNsXCIsMTEyNzQ6XCJlcy1BUlwiLDE2Mzk0OlwiZXMtQk9cIiwxMzMyMjpcImVzLUNMXCIsOTIyNjpcImVzLUNPXCIsNTEzMDpcImVzLUNSXCIsNzE3ODpcImVzLURPXCIsMTIyOTg6XCJlcy1FQ1wiLDE3NDE4OlwiZXMtU1ZcIiw0MTA2OlwiZXMtR1RcIiwxODQ0MjpcImVzLUhOXCIsMjA1ODpcImVzLU1YXCIsMTk0NjY6XCJlcy1OSVwiLDYxNTQ6XCJlcy1QQVwiLDE1MzcwOlwiZXMtUFlcIiwxMDI1MDpcImVzLVBFXCIsMjA0OTA6XCJlcy1QUlwiLDMwODI6XCJlc1wiLDEwMzQ6XCJlc1wiLDIxNTE0OlwiZXMtVVNcIiwxNDM0NjpcImVzLVVZXCIsODIwMjpcImVzLVZFXCIsMjA3NzpcInN2LUZJXCIsMTA1MzpcInN2XCIsMTExNDpcInN5clwiLDEwNjQ6XCJ0Z1wiLDIxNDM6XCJ0em1cIiwxMDk3OlwidGFcIiwxMDkyOlwidHRcIiwxMDk4OlwidGVcIiwxMDU0OlwidGhcIiwxMTA1OlwiYm9cIiwxMDU1OlwidHJcIiwxMDkwOlwidGtcIiwxMTUyOlwidWdcIiwxMDU4OlwidWtcIiwxMDcwOlwiaHNiXCIsMTA1NjpcInVyXCIsMjExNTpcInV6LUN5cmxcIiwxMDkxOlwidXpcIiwxMDY2OlwidmlcIiwxMTA2OlwiY3lcIiwxMTYwOlwid29cIiwxMTU3Olwic2FoXCIsMTE0NDpcImlpXCIsMTEzMDpcInlvXCJ9O2Z1bmN0aW9uIFplKGUsdCxyKXtzd2l0Y2goZSl7Y2FzZSAwOmlmKDY1NTM1PT09dClyZXR1cm5cInVuZFwiO2lmKHIpcmV0dXJuIHJbdF07YnJlYWs7Y2FzZSAxOnJldHVybiBYZVt0XTtjYXNlIDM6cmV0dXJuIFllW3RdfX12YXIgUWU9XCJ1dGYtMTZcIixLZT17MDpcIm1hY2ludG9zaFwiLDE6XCJ4LW1hYy1qYXBhbmVzZVwiLDI6XCJ4LW1hYy1jaGluZXNldHJhZFwiLDM6XCJ4LW1hYy1rb3JlYW5cIiw2OlwieC1tYWMtZ3JlZWtcIiw3OlwieC1tYWMtY3lyaWxsaWNcIiw5OlwieC1tYWMtZGV2YW5hZ2FpXCIsMTA6XCJ4LW1hYy1ndXJtdWtoaVwiLDExOlwieC1tYWMtZ3VqYXJhdGlcIiwxMjpcIngtbWFjLW9yaXlhXCIsMTM6XCJ4LW1hYy1iZW5nYWxpXCIsMTQ6XCJ4LW1hYy10YW1pbFwiLDE1OlwieC1tYWMtdGVsdWd1XCIsMTY6XCJ4LW1hYy1rYW5uYWRhXCIsMTc6XCJ4LW1hYy1tYWxheWFsYW1cIiwxODpcIngtbWFjLXNpbmhhbGVzZVwiLDE5OlwieC1tYWMtYnVybWVzZVwiLDIwOlwieC1tYWMta2htZXJcIiwyMTpcIngtbWFjLXRoYWlcIiwyMjpcIngtbWFjLWxhb1wiLDIzOlwieC1tYWMtZ2VvcmdpYW5cIiwyNDpcIngtbWFjLWFybWVuaWFuXCIsMjU6XCJ4LW1hYy1jaGluZXNlc2ltcFwiLDI2OlwieC1tYWMtdGliZXRhblwiLDI3OlwieC1tYWMtbW9uZ29saWFuXCIsMjg6XCJ4LW1hYy1ldGhpb3BpY1wiLDI5OlwieC1tYWMtY2VcIiwzMDpcIngtbWFjLXZpZXRuYW1lc2VcIiwzMTpcIngtbWFjLWV4dGFyYWJpY1wifSxKZT17MTU6XCJ4LW1hYy1pY2VsYW5kaWNcIiwxNzpcIngtbWFjLXR1cmtpc2hcIiwxODpcIngtbWFjLWNyb2F0aWFuXCIsMjQ6XCJ4LW1hYy1jZVwiLDI1OlwieC1tYWMtY2VcIiwyNjpcIngtbWFjLWNlXCIsMjc6XCJ4LW1hYy1jZVwiLDI4OlwieC1tYWMtY2VcIiwzMDpcIngtbWFjLWljZWxhbmRpY1wiLDM3OlwieC1tYWMtcm9tYW5pYW5cIiwzODpcIngtbWFjLWNlXCIsMzk6XCJ4LW1hYy1jZVwiLDQwOlwieC1tYWMtY2VcIiwxNDM6XCJ4LW1hYy1pbnVpdFwiLDE0NjpcIngtbWFjLWdhZWxpY1wifTtmdW5jdGlvbiAkZShlLHQscil7c3dpdGNoKGUpe2Nhc2UgMDpyZXR1cm4gUWU7Y2FzZSAxOnJldHVybiBKZVtyXXx8S2VbdF07Y2FzZSAzOmlmKDE9PT10fHwxMD09PXQpcmV0dXJuIFFlfX1mdW5jdGlvbiBldChlKXt2YXIgdD17fTtmb3IodmFyIHIgaW4gZSl0W2Vbcl1dPXBhcnNlSW50KHIpO3JldHVybiB0fWZ1bmN0aW9uIHR0KGUsdCxyLG4sYSxvKXtyZXR1cm4gbmV3ICQuUmVjb3JkKFwiTmFtZVJlY29yZFwiLFt7bmFtZTpcInBsYXRmb3JtSURcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ZX0se25hbWU6XCJlbmNvZGluZ0lEXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOnR9LHtuYW1lOlwibGFuZ3VhZ2VJRFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpyfSx7bmFtZTpcIm5hbWVJRFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpufSx7bmFtZTpcImxlbmd0aFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTphfSx7bmFtZTpcIm9mZnNldFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpvfV0pfWZ1bmN0aW9uIHJ0KGUsdCl7dmFyIHI9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLmxlbmd0aCxuPXQubGVuZ3RoLXIrMTtlOmZvcih2YXIgYT0wO2E8bjthKyspZm9yKDthPG47YSsrKXtmb3IodmFyIG89MDtvPHI7bysrKWlmKHRbYStvXSE9PWVbb10pY29udGludWUgZTtyZXR1cm4gYX1yZXR1cm4tMX0oZSx0KTtpZihyPDApe3I9dC5sZW5ndGg7Zm9yKHZhciBuPTAsYT1lLmxlbmd0aDtuPGE7KytuKXQucHVzaChlW25dKX1yZXR1cm4gcn12YXIgbnQ9e3BhcnNlOmZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49e30sYT1uZXcgc2UuUGFyc2VyKGUsdCksbz1hLnBhcnNlVVNob3J0KCksaT1hLnBhcnNlVVNob3J0KCkscz1hLm9mZnNldCthLnBhcnNlVVNob3J0KCksbD0wO2w8aTtsKyspe3ZhciBwPWEucGFyc2VVU2hvcnQoKSx1PWEucGFyc2VVU2hvcnQoKSxjPWEucGFyc2VVU2hvcnQoKSxkPWEucGFyc2VVU2hvcnQoKSxoPVdlW2RdfHxkLG09YS5wYXJzZVVTaG9ydCgpLGY9YS5wYXJzZVVTaG9ydCgpLHk9WmUocCxjLHIpLGc9JGUocCx1LGMpO2lmKHZvaWQgMCE9PWcmJnZvaWQgMCE9PXkpe3ZhciB2PXZvaWQgMDtpZih2PWc9PT1RZT9QLlVURjE2KGUscytmLG0pOlAuTUFDU1RSSU5HKGUscytmLG0sZykpe3ZhciBiPW5baF07dm9pZCAwPT09YiYmKGI9bltoXT17fSksYlt5XT12fX19cmV0dXJuIDE9PT1vJiZhLnBhcnNlVVNob3J0KCksbn0sbWFrZTpmdW5jdGlvbihlLHQpe3ZhciByLG49W10sYT17fSxvPWV0KFdlKTtmb3IodmFyIGkgaW4gZSl7dmFyIHM9b1tpXTtpZih2b2lkIDA9PT1zJiYocz1pKSxyPXBhcnNlSW50KHMpLGlzTmFOKHIpKXRocm93IG5ldyBFcnJvcignTmFtZSB0YWJsZSBlbnRyeSBcIicraSsnXCIgZG9lcyBub3QgZXhpc3QsIHNlZSBuYW1lVGFibGVOYW1lcyBmb3IgY29tcGxldGUgbGlzdC4nKTthW3JdPWVbaV0sbi5wdXNoKHIpfWZvcih2YXIgbD1ldChYZSkscD1ldChZZSksdT1bXSxjPVtdLGQ9MDtkPG4ubGVuZ3RoO2QrKyl7dmFyIGg9YVtyPW5bZF1dO2Zvcih2YXIgbSBpbiBoKXt2YXIgZj1oW21dLHk9MSxnPWxbbV0sdj1xZVtnXSxiPSRlKHksdixnKSxfPVIuTUFDU1RSSU5HKGYsYik7dm9pZCAwPT09XyYmKHk9MCwoZz10LmluZGV4T2YobSkpPDAmJihnPXQubGVuZ3RoLHQucHVzaChtKSksdj00LF89Ui5VVEYxNihmKSk7dmFyIHg9cnQoXyxjKTt1LnB1c2godHQoeSx2LGcscixfLmxlbmd0aCx4KSk7dmFyIFM9cFttXTtpZih2b2lkIDAhPT1TKXt2YXIgdz1SLlVURjE2KGYpLE09cnQodyxjKTt1LnB1c2godHQoMywxLFMscix3Lmxlbmd0aCxNKSl9fX11LnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5wbGF0Zm9ybUlELXQucGxhdGZvcm1JRHx8ZS5lbmNvZGluZ0lELXQuZW5jb2RpbmdJRHx8ZS5sYW5ndWFnZUlELXQubGFuZ3VhZ2VJRHx8ZS5uYW1lSUQtdC5uYW1lSUR9KTtmb3IodmFyIEU9bmV3ICQuVGFibGUoXCJuYW1lXCIsW3tuYW1lOlwiZm9ybWF0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwiY291bnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6dS5sZW5ndGh9LHtuYW1lOlwic3RyaW5nT2Zmc2V0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjYrMTIqdS5sZW5ndGh9XSksVD0wO1Q8dS5sZW5ndGg7VCsrKUUuZmllbGRzLnB1c2goe25hbWU6XCJyZWNvcmRfXCIrVCx0eXBlOlwiUkVDT1JEXCIsdmFsdWU6dVtUXX0pO3JldHVybiBFLmZpZWxkcy5wdXNoKHtuYW1lOlwic3RyaW5nc1wiLHR5cGU6XCJMSVRFUkFMXCIsdmFsdWU6Y30pLEV9fSxhdD1be2JlZ2luOjAsZW5kOjEyN30se2JlZ2luOjEyOCxlbmQ6MjU1fSx7YmVnaW46MjU2LGVuZDozODN9LHtiZWdpbjozODQsZW5kOjU5MX0se2JlZ2luOjU5MixlbmQ6Njg3fSx7YmVnaW46Njg4LGVuZDo3Njd9LHtiZWdpbjo3NjgsZW5kOjg3OX0se2JlZ2luOjg4MCxlbmQ6MTAyM30se2JlZ2luOjExMzkyLGVuZDoxMTUxOX0se2JlZ2luOjEwMjQsZW5kOjEyNzl9LHtiZWdpbjoxMzI4LGVuZDoxNDIzfSx7YmVnaW46MTQyNCxlbmQ6MTUzNX0se2JlZ2luOjQyMjQwLGVuZDo0MjU1OX0se2JlZ2luOjE1MzYsZW5kOjE3OTF9LHtiZWdpbjoxOTg0LGVuZDoyMDQ3fSx7YmVnaW46MjMwNCxlbmQ6MjQzMX0se2JlZ2luOjI0MzIsZW5kOjI1NTl9LHtiZWdpbjoyNTYwLGVuZDoyNjg3fSx7YmVnaW46MjY4OCxlbmQ6MjgxNX0se2JlZ2luOjI4MTYsZW5kOjI5NDN9LHtiZWdpbjoyOTQ0LGVuZDozMDcxfSx7YmVnaW46MzA3MixlbmQ6MzE5OX0se2JlZ2luOjMyMDAsZW5kOjMzMjd9LHtiZWdpbjozMzI4LGVuZDozNDU1fSx7YmVnaW46MzU4NCxlbmQ6MzcxMX0se2JlZ2luOjM3MTIsZW5kOjM4Mzl9LHtiZWdpbjo0MjU2LGVuZDo0MzUxfSx7YmVnaW46NjkxMixlbmQ6NzAzOX0se2JlZ2luOjQzNTIsZW5kOjQ2MDd9LHtiZWdpbjo3NjgwLGVuZDo3OTM1fSx7YmVnaW46NzkzNixlbmQ6ODE5MX0se2JlZ2luOjgxOTIsZW5kOjgzMDN9LHtiZWdpbjo4MzA0LGVuZDo4MzUxfSx7YmVnaW46ODM1MixlbmQ6ODM5OX0se2JlZ2luOjg0MDAsZW5kOjg0NDd9LHtiZWdpbjo4NDQ4LGVuZDo4NTI3fSx7YmVnaW46ODUyOCxlbmQ6ODU5MX0se2JlZ2luOjg1OTIsZW5kOjg3MDN9LHtiZWdpbjo4NzA0LGVuZDo4OTU5fSx7YmVnaW46ODk2MCxlbmQ6OTIxNX0se2JlZ2luOjkyMTYsZW5kOjkyNzl9LHtiZWdpbjo5MjgwLGVuZDo5MzExfSx7YmVnaW46OTMxMixlbmQ6OTQ3MX0se2JlZ2luOjk0NzIsZW5kOjk1OTl9LHtiZWdpbjo5NjAwLGVuZDo5NjMxfSx7YmVnaW46OTYzMixlbmQ6OTcyN30se2JlZ2luOjk3MjgsZW5kOjk5ODN9LHtiZWdpbjo5OTg0LGVuZDoxMDE3NX0se2JlZ2luOjEyMjg4LGVuZDoxMjM1MX0se2JlZ2luOjEyMzUyLGVuZDoxMjQ0N30se2JlZ2luOjEyNDQ4LGVuZDoxMjU0M30se2JlZ2luOjEyNTQ0LGVuZDoxMjU5MX0se2JlZ2luOjEyNTkyLGVuZDoxMjY4N30se2JlZ2luOjQzMDcyLGVuZDo0MzEzNX0se2JlZ2luOjEyODAwLGVuZDoxMzA1NX0se2JlZ2luOjEzMDU2LGVuZDoxMzMxMX0se2JlZ2luOjQ0MDMyLGVuZDo1NTIxNX0se2JlZ2luOjU1Mjk2LGVuZDo1NzM0M30se2JlZ2luOjY3ODQwLGVuZDo2Nzg3MX0se2JlZ2luOjE5OTY4LGVuZDo0MDk1OX0se2JlZ2luOjU3MzQ0LGVuZDo2Mzc0M30se2JlZ2luOjEyNzM2LGVuZDoxMjc4M30se2JlZ2luOjY0MjU2LGVuZDo2NDMzNX0se2JlZ2luOjY0MzM2LGVuZDo2NTAyM30se2JlZ2luOjY1MDU2LGVuZDo2NTA3MX0se2JlZ2luOjY1MDQwLGVuZDo2NTA1NX0se2JlZ2luOjY1MTA0LGVuZDo2NTEzNX0se2JlZ2luOjY1MTM2LGVuZDo2NTI3OX0se2JlZ2luOjY1MjgwLGVuZDo2NTUxOX0se2JlZ2luOjY1NTIwLGVuZDo2NTUzNX0se2JlZ2luOjM4NDAsZW5kOjQwOTV9LHtiZWdpbjoxNzkyLGVuZDoxODcxfSx7YmVnaW46MTkyMCxlbmQ6MTk4M30se2JlZ2luOjM0NTYsZW5kOjM1ODN9LHtiZWdpbjo0MDk2LGVuZDo0MjU1fSx7YmVnaW46NDYwOCxlbmQ6NDk5MX0se2JlZ2luOjUwMjQsZW5kOjUxMTl9LHtiZWdpbjo1MTIwLGVuZDo1NzU5fSx7YmVnaW46NTc2MCxlbmQ6NTc5MX0se2JlZ2luOjU3OTIsZW5kOjU4ODd9LHtiZWdpbjo2MDE2LGVuZDo2MTQzfSx7YmVnaW46NjE0NCxlbmQ6NjMxOX0se2JlZ2luOjEwMjQwLGVuZDoxMDQ5NX0se2JlZ2luOjQwOTYwLGVuZDo0MjEyN30se2JlZ2luOjU4ODgsZW5kOjU5MTl9LHtiZWdpbjo2NjMwNCxlbmQ6NjYzNTF9LHtiZWdpbjo2NjM1MixlbmQ6NjYzODN9LHtiZWdpbjo2NjU2MCxlbmQ6NjY2Mzl9LHtiZWdpbjoxMTg3ODQsZW5kOjExOTAzOX0se2JlZ2luOjExOTgwOCxlbmQ6MTIwODMxfSx7YmVnaW46MTA0NDQ4MCxlbmQ6MTA0ODU3M30se2JlZ2luOjY1MDI0LGVuZDo2NTAzOX0se2JlZ2luOjkxNzUwNCxlbmQ6OTE3NjMxfSx7YmVnaW46NjQwMCxlbmQ6NjQ3OX0se2JlZ2luOjY0ODAsZW5kOjY1Mjd9LHtiZWdpbjo2NTI4LGVuZDo2NjIzfSx7YmVnaW46NjY1NixlbmQ6NjY4N30se2JlZ2luOjExMjY0LGVuZDoxMTM1OX0se2JlZ2luOjExNTY4LGVuZDoxMTY0N30se2JlZ2luOjE5OTA0LGVuZDoxOTk2N30se2JlZ2luOjQzMDA4LGVuZDo0MzA1NX0se2JlZ2luOjY1NTM2LGVuZDo2NTY2M30se2JlZ2luOjY1ODU2LGVuZDo2NTkzNX0se2JlZ2luOjY2NDMyLGVuZDo2NjQ2M30se2JlZ2luOjY2NDY0LGVuZDo2NjUyN30se2JlZ2luOjY2NjQwLGVuZDo2NjY4N30se2JlZ2luOjY2Njg4LGVuZDo2NjczNX0se2JlZ2luOjY3NTg0LGVuZDo2NzY0N30se2JlZ2luOjY4MDk2LGVuZDo2ODE5MX0se2JlZ2luOjExOTU1MixlbmQ6MTE5NjQ3fSx7YmVnaW46NzM3MjgsZW5kOjc0NzUxfSx7YmVnaW46MTE5NjQ4LGVuZDoxMTk2Nzl9LHtiZWdpbjo3MDQwLGVuZDo3MTAzfSx7YmVnaW46NzE2OCxlbmQ6NzI0N30se2JlZ2luOjcyNDgsZW5kOjcyOTV9LHtiZWdpbjo0MzEzNixlbmQ6NDMyMzF9LHtiZWdpbjo0MzI2NCxlbmQ6NDMzMTF9LHtiZWdpbjo0MzMxMixlbmQ6NDMzNTl9LHtiZWdpbjo0MzUyMCxlbmQ6NDM2MTV9LHtiZWdpbjo2NTkzNixlbmQ6NjU5OTl9LHtiZWdpbjo2NmUzLGVuZDo2NjA0N30se2JlZ2luOjY2MjA4LGVuZDo2NjI3MX0se2JlZ2luOjEyNzAyNCxlbmQ6MTI3MTM1fV07dmFyIG90PXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPXt9LG49bmV3IHNlLlBhcnNlcihlLHQpO3IudmVyc2lvbj1uLnBhcnNlVVNob3J0KCksci54QXZnQ2hhcldpZHRoPW4ucGFyc2VTaG9ydCgpLHIudXNXZWlnaHRDbGFzcz1uLnBhcnNlVVNob3J0KCksci51c1dpZHRoQ2xhc3M9bi5wYXJzZVVTaG9ydCgpLHIuZnNUeXBlPW4ucGFyc2VVU2hvcnQoKSxyLnlTdWJzY3JpcHRYU2l6ZT1uLnBhcnNlU2hvcnQoKSxyLnlTdWJzY3JpcHRZU2l6ZT1uLnBhcnNlU2hvcnQoKSxyLnlTdWJzY3JpcHRYT2Zmc2V0PW4ucGFyc2VTaG9ydCgpLHIueVN1YnNjcmlwdFlPZmZzZXQ9bi5wYXJzZVNob3J0KCksci55U3VwZXJzY3JpcHRYU2l6ZT1uLnBhcnNlU2hvcnQoKSxyLnlTdXBlcnNjcmlwdFlTaXplPW4ucGFyc2VTaG9ydCgpLHIueVN1cGVyc2NyaXB0WE9mZnNldD1uLnBhcnNlU2hvcnQoKSxyLnlTdXBlcnNjcmlwdFlPZmZzZXQ9bi5wYXJzZVNob3J0KCksci55U3RyaWtlb3V0U2l6ZT1uLnBhcnNlU2hvcnQoKSxyLnlTdHJpa2VvdXRQb3NpdGlvbj1uLnBhcnNlU2hvcnQoKSxyLnNGYW1pbHlDbGFzcz1uLnBhcnNlU2hvcnQoKSxyLnBhbm9zZT1bXTtmb3IodmFyIGE9MDthPDEwO2ErKylyLnBhbm9zZVthXT1uLnBhcnNlQnl0ZSgpO3JldHVybiByLnVsVW5pY29kZVJhbmdlMT1uLnBhcnNlVUxvbmcoKSxyLnVsVW5pY29kZVJhbmdlMj1uLnBhcnNlVUxvbmcoKSxyLnVsVW5pY29kZVJhbmdlMz1uLnBhcnNlVUxvbmcoKSxyLnVsVW5pY29kZVJhbmdlND1uLnBhcnNlVUxvbmcoKSxyLmFjaFZlbmRJRD1TdHJpbmcuZnJvbUNoYXJDb2RlKG4ucGFyc2VCeXRlKCksbi5wYXJzZUJ5dGUoKSxuLnBhcnNlQnl0ZSgpLG4ucGFyc2VCeXRlKCkpLHIuZnNTZWxlY3Rpb249bi5wYXJzZVVTaG9ydCgpLHIudXNGaXJzdENoYXJJbmRleD1uLnBhcnNlVVNob3J0KCksci51c0xhc3RDaGFySW5kZXg9bi5wYXJzZVVTaG9ydCgpLHIuc1R5cG9Bc2NlbmRlcj1uLnBhcnNlU2hvcnQoKSxyLnNUeXBvRGVzY2VuZGVyPW4ucGFyc2VTaG9ydCgpLHIuc1R5cG9MaW5lR2FwPW4ucGFyc2VTaG9ydCgpLHIudXNXaW5Bc2NlbnQ9bi5wYXJzZVVTaG9ydCgpLHIudXNXaW5EZXNjZW50PW4ucGFyc2VVU2hvcnQoKSwxPD1yLnZlcnNpb24mJihyLnVsQ29kZVBhZ2VSYW5nZTE9bi5wYXJzZVVMb25nKCksci51bENvZGVQYWdlUmFuZ2UyPW4ucGFyc2VVTG9uZygpKSwyPD1yLnZlcnNpb24mJihyLnN4SGVpZ2h0PW4ucGFyc2VTaG9ydCgpLHIuc0NhcEhlaWdodD1uLnBhcnNlU2hvcnQoKSxyLnVzRGVmYXVsdENoYXI9bi5wYXJzZVVTaG9ydCgpLHIudXNCcmVha0NoYXI9bi5wYXJzZVVTaG9ydCgpLHIudXNNYXhDb250ZW50PW4ucGFyc2VVU2hvcnQoKSkscn0sbWFrZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3ICQuVGFibGUoXCJPUy8yXCIsW3tuYW1lOlwidmVyc2lvblwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTozfSx7bmFtZTpcInhBdmdDaGFyV2lkdGhcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVzV2VpZ2h0Q2xhc3NcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c1dpZHRoQ2xhc3NcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJmc1R5cGVcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ5U3Vic2NyaXB0WFNpemVcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTo2NTB9LHtuYW1lOlwieVN1YnNjcmlwdFlTaXplXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6Njk5fSx7bmFtZTpcInlTdWJzY3JpcHRYT2Zmc2V0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ5U3Vic2NyaXB0WU9mZnNldFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjE0MH0se25hbWU6XCJ5U3VwZXJzY3JpcHRYU2l6ZVwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjY1MH0se25hbWU6XCJ5U3VwZXJzY3JpcHRZU2l6ZVwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjY5OX0se25hbWU6XCJ5U3VwZXJzY3JpcHRYT2Zmc2V0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ5U3VwZXJzY3JpcHRZT2Zmc2V0XCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6NDc5fSx7bmFtZTpcInlTdHJpa2VvdXRTaXplXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6NDl9LHtuYW1lOlwieVN0cmlrZW91dFBvc2l0aW9uXCIsdHlwZTpcIlNIT1JUXCIsdmFsdWU6MjU4fSx7bmFtZTpcInNGYW1pbHlDbGFzc1wiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwiYkZhbWlseVR5cGVcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwiYlNlcmlmU3R5bGVcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwiYldlaWdodFwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiUHJvcG9ydGlvblwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiQ29udHJhc3RcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwiYlN0cm9rZVZhcmlhdGlvblwiLHR5cGU6XCJCWVRFXCIsdmFsdWU6MH0se25hbWU6XCJiQXJtU3R5bGVcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwiYkxldHRlcmZvcm1cIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwiYk1pZGxpbmVcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwiYlhIZWlnaHRcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9LHtuYW1lOlwidWxVbmljb2RlUmFuZ2UxXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJ1bFVuaWNvZGVSYW5nZTJcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcInVsVW5pY29kZVJhbmdlM1wiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwidWxVbmljb2RlUmFuZ2U0XCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJhY2hWZW5kSURcIix0eXBlOlwiQ0hBUkFSUkFZXCIsdmFsdWU6XCJYWFhYXCJ9LHtuYW1lOlwiZnNTZWxlY3Rpb25cIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c0ZpcnN0Q2hhckluZGV4XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwidXNMYXN0Q2hhckluZGV4XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwic1R5cG9Bc2NlbmRlclwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwic1R5cG9EZXNjZW5kZXJcIix0eXBlOlwiU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInNUeXBvTGluZUdhcFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwidXNXaW5Bc2NlbnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1c1dpbkRlc2NlbnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH0se25hbWU6XCJ1bENvZGVQYWdlUmFuZ2UxXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJ1bENvZGVQYWdlUmFuZ2UyXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJzeEhlaWdodFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwic0NhcEhlaWdodFwiLHR5cGU6XCJTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwidXNEZWZhdWx0Q2hhclwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInVzQnJlYWtDaGFyXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwidXNNYXhDb250ZXh0XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9XSxlKX0sdW5pY29kZVJhbmdlczphdCxnZXRVbmljb2RlUmFuZ2U6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTA7dDxhdC5sZW5ndGg7dCs9MSl7dmFyIHI9YXRbdF07aWYoZT49ci5iZWdpbiYmZTxyLmVuZClyZXR1cm4gdH1yZXR1cm4tMX19O3ZhciBpdD17cGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj17fSxuPW5ldyBzZS5QYXJzZXIoZSx0KTtzd2l0Y2goci52ZXJzaW9uPW4ucGFyc2VWZXJzaW9uKCksci5pdGFsaWNBbmdsZT1uLnBhcnNlRml4ZWQoKSxyLnVuZGVybGluZVBvc2l0aW9uPW4ucGFyc2VTaG9ydCgpLHIudW5kZXJsaW5lVGhpY2tuZXNzPW4ucGFyc2VTaG9ydCgpLHIuaXNGaXhlZFBpdGNoPW4ucGFyc2VVTG9uZygpLHIubWluTWVtVHlwZTQyPW4ucGFyc2VVTG9uZygpLHIubWF4TWVtVHlwZTQyPW4ucGFyc2VVTG9uZygpLHIubWluTWVtVHlwZTE9bi5wYXJzZVVMb25nKCksci5tYXhNZW1UeXBlMT1uLnBhcnNlVUxvbmcoKSxyLnZlcnNpb24pe2Nhc2UgMTpyLm5hbWVzPWRlLnNsaWNlKCk7YnJlYWs7Y2FzZSAyOnIubnVtYmVyT2ZHbHlwaHM9bi5wYXJzZVVTaG9ydCgpLHIuZ2x5cGhOYW1lSW5kZXg9bmV3IEFycmF5KHIubnVtYmVyT2ZHbHlwaHMpO2Zvcih2YXIgYT0wO2E8ci5udW1iZXJPZkdseXBoczthKyspci5nbHlwaE5hbWVJbmRleFthXT1uLnBhcnNlVVNob3J0KCk7ci5uYW1lcz1bXTtmb3IodmFyIG89MDtvPHIubnVtYmVyT2ZHbHlwaHM7bysrKWlmKHIuZ2x5cGhOYW1lSW5kZXhbb10+PWRlLmxlbmd0aCl7dmFyIGk9bi5wYXJzZUNoYXIoKTtyLm5hbWVzLnB1c2gobi5wYXJzZVN0cmluZyhpKSl9YnJlYWs7Y2FzZSAyLjU6ci5udW1iZXJPZkdseXBocz1uLnBhcnNlVVNob3J0KCksci5vZmZzZXQ9bmV3IEFycmF5KHIubnVtYmVyT2ZHbHlwaHMpO2Zvcih2YXIgcz0wO3M8ci5udW1iZXJPZkdseXBocztzKyspci5vZmZzZXRbc109bi5wYXJzZUNoYXIoKX1yZXR1cm4gcn0sbWFrZTpmdW5jdGlvbigpe3JldHVybiBuZXcgJC5UYWJsZShcInBvc3RcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIkZJWEVEXCIsdmFsdWU6MTk2NjA4fSx7bmFtZTpcIml0YWxpY0FuZ2xlXCIsdHlwZTpcIkZJWEVEXCIsdmFsdWU6MH0se25hbWU6XCJ1bmRlcmxpbmVQb3NpdGlvblwiLHR5cGU6XCJGV09SRFwiLHZhbHVlOjB9LHtuYW1lOlwidW5kZXJsaW5lVGhpY2tuZXNzXCIsdHlwZTpcIkZXT1JEXCIsdmFsdWU6MH0se25hbWU6XCJpc0ZpeGVkUGl0Y2hcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfSx7bmFtZTpcIm1pbk1lbVR5cGU0MlwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwibWF4TWVtVHlwZTQyXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MH0se25hbWU6XCJtaW5NZW1UeXBlMVwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwibWF4TWVtVHlwZTFcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTowfV0pfX0sc3Q9bmV3IEFycmF5KDkpO3N0WzFdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCx0PXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm4gMT09PXQ/e3N1YnN0Rm9ybWF0OjEsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLGRlbHRhR2x5cGhJZDp0aGlzLnBhcnNlVVNob3J0KCl9OjI9PT10P3tzdWJzdEZvcm1hdDoyLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxzdWJzdGl0dXRlOnRoaXMucGFyc2VPZmZzZXQxNkxpc3QoKX06dm9pZCBMLmFzc2VydCghMSxcIjB4XCIrZS50b1N0cmluZygxNikrXCI6IGxvb2t1cCB0eXBlIDEgZm9ybWF0IG11c3QgYmUgMSBvciAyLlwiKX0sc3RbMl09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlVVNob3J0KCk7cmV0dXJuIEwuYXJndW1lbnQoMT09PWUsXCJHU1VCIE11bHRpcGxlIFN1YnN0aXR1dGlvbiBTdWJ0YWJsZSBpZGVudGlmaWVyLWZvcm1hdCBtdXN0IGJlIDFcIikse3N1YnN0Rm9ybWF0OmUsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLHNlcXVlbmNlczp0aGlzLnBhcnNlTGlzdE9mTGlzdHMoKX19LHN0WzNdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiBMLmFyZ3VtZW50KDE9PT1lLFwiR1NVQiBBbHRlcm5hdGUgU3Vic3RpdHV0aW9uIFN1YnRhYmxlIGlkZW50aWZpZXItZm9ybWF0IG11c3QgYmUgMVwiKSx7c3Vic3RGb3JtYXQ6ZSxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksYWx0ZXJuYXRlU2V0czp0aGlzLnBhcnNlTGlzdE9mTGlzdHMoKX19LHN0WzRdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiBMLmFyZ3VtZW50KDE9PT1lLFwiR1NVQiBsaWdhdHVyZSB0YWJsZSBpZGVudGlmaWVyLWZvcm1hdCBtdXN0IGJlIDFcIikse3N1YnN0Rm9ybWF0OmUsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLGxpZ2F0dXJlU2V0czp0aGlzLnBhcnNlTGlzdE9mTGlzdHMoZnVuY3Rpb24oKXtyZXR1cm57bGlnR2x5cGg6dGhpcy5wYXJzZVVTaG9ydCgpLGNvbXBvbmVudHM6dGhpcy5wYXJzZVVTaG9ydExpc3QodGhpcy5wYXJzZVVTaG9ydCgpLTEpfX0pfX07dmFyIGx0PXtzZXF1ZW5jZUluZGV4Om9lLnVTaG9ydCxsb29rdXBMaXN0SW5kZXg6b2UudVNob3J0fTtzdFs1XT1mdW5jdGlvbigpe3ZhciBlPXRoaXMub2Zmc2V0K3RoaXMucmVsYXRpdmVPZmZzZXQsdD10aGlzLnBhcnNlVVNob3J0KCk7aWYoMT09PXQpcmV0dXJue3N1YnN0Rm9ybWF0OnQsY292ZXJhZ2U6dGhpcy5wYXJzZVBvaW50ZXIob2UuY292ZXJhZ2UpLHJ1bGVTZXRzOnRoaXMucGFyc2VMaXN0T2ZMaXN0cyhmdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VVU2hvcnQoKSx0PXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm57aW5wdXQ6dGhpcy5wYXJzZVVTaG9ydExpc3QoZS0xKSxsb29rdXBSZWNvcmRzOnRoaXMucGFyc2VSZWNvcmRMaXN0KHQsbHQpfX0pfTtpZigyPT09dClyZXR1cm57c3Vic3RGb3JtYXQ6dCxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksY2xhc3NEZWY6dGhpcy5wYXJzZVBvaW50ZXIob2UuY2xhc3NEZWYpLGNsYXNzU2V0czp0aGlzLnBhcnNlTGlzdE9mTGlzdHMoZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcnNlVVNob3J0KCksdD10aGlzLnBhcnNlVVNob3J0KCk7cmV0dXJue2NsYXNzZXM6dGhpcy5wYXJzZVVTaG9ydExpc3QoZS0xKSxsb29rdXBSZWNvcmRzOnRoaXMucGFyc2VSZWNvcmRMaXN0KHQsbHQpfX0pfTtpZigzPT09dCl7dmFyIHI9dGhpcy5wYXJzZVVTaG9ydCgpLG49dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybntzdWJzdEZvcm1hdDp0LGNvdmVyYWdlczp0aGlzLnBhcnNlTGlzdChyLG9lLnBvaW50ZXIob2UuY292ZXJhZ2UpKSxsb29rdXBSZWNvcmRzOnRoaXMucGFyc2VSZWNvcmRMaXN0KG4sbHQpfX1MLmFzc2VydCghMSxcIjB4XCIrZS50b1N0cmluZygxNikrXCI6IGxvb2t1cCB0eXBlIDUgZm9ybWF0IG11c3QgYmUgMSwgMiBvciAzLlwiKX0sc3RbNl09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldCt0aGlzLnJlbGF0aXZlT2Zmc2V0LHQ9dGhpcy5wYXJzZVVTaG9ydCgpO3JldHVybiAxPT09dD97c3Vic3RGb3JtYXQ6MSxjb3ZlcmFnZTp0aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksY2hhaW5SdWxlU2V0czp0aGlzLnBhcnNlTGlzdE9mTGlzdHMoZnVuY3Rpb24oKXtyZXR1cm57YmFja3RyYWNrOnRoaXMucGFyc2VVU2hvcnRMaXN0KCksaW5wdXQ6dGhpcy5wYXJzZVVTaG9ydExpc3QodGhpcy5wYXJzZVNob3J0KCktMSksbG9va2FoZWFkOnRoaXMucGFyc2VVU2hvcnRMaXN0KCksbG9va3VwUmVjb3Jkczp0aGlzLnBhcnNlUmVjb3JkTGlzdChsdCl9fSl9OjI9PT10P3tzdWJzdEZvcm1hdDoyLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxiYWNrdHJhY2tDbGFzc0RlZjp0aGlzLnBhcnNlUG9pbnRlcihvZS5jbGFzc0RlZiksaW5wdXRDbGFzc0RlZjp0aGlzLnBhcnNlUG9pbnRlcihvZS5jbGFzc0RlZiksbG9va2FoZWFkQ2xhc3NEZWY6dGhpcy5wYXJzZVBvaW50ZXIob2UuY2xhc3NEZWYpLGNoYWluQ2xhc3NTZXQ6dGhpcy5wYXJzZUxpc3RPZkxpc3RzKGZ1bmN0aW9uKCl7cmV0dXJue2JhY2t0cmFjazp0aGlzLnBhcnNlVVNob3J0TGlzdCgpLGlucHV0OnRoaXMucGFyc2VVU2hvcnRMaXN0KHRoaXMucGFyc2VTaG9ydCgpLTEpLGxvb2thaGVhZDp0aGlzLnBhcnNlVVNob3J0TGlzdCgpLGxvb2t1cFJlY29yZHM6dGhpcy5wYXJzZVJlY29yZExpc3QobHQpfX0pfTozPT09dD97c3Vic3RGb3JtYXQ6MyxiYWNrdHJhY2tDb3ZlcmFnZTp0aGlzLnBhcnNlTGlzdChvZS5wb2ludGVyKG9lLmNvdmVyYWdlKSksaW5wdXRDb3ZlcmFnZTp0aGlzLnBhcnNlTGlzdChvZS5wb2ludGVyKG9lLmNvdmVyYWdlKSksbG9va2FoZWFkQ292ZXJhZ2U6dGhpcy5wYXJzZUxpc3Qob2UucG9pbnRlcihvZS5jb3ZlcmFnZSkpLGxvb2t1cFJlY29yZHM6dGhpcy5wYXJzZVJlY29yZExpc3QobHQpfTp2b2lkIEwuYXNzZXJ0KCExLFwiMHhcIitlLnRvU3RyaW5nKDE2KStcIjogbG9va3VwIHR5cGUgNiBmb3JtYXQgbXVzdCBiZSAxLCAyIG9yIDMuXCIpfSxzdFs3XT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VVU2hvcnQoKTtMLmFyZ3VtZW50KDE9PT1lLFwiR1NVQiBFeHRlbnNpb24gU3Vic3RpdHV0aW9uIHN1YnRhYmxlIGlkZW50aWZpZXItZm9ybWF0IG11c3QgYmUgMVwiKTt2YXIgdD10aGlzLnBhcnNlVVNob3J0KCkscj1uZXcgb2UodGhpcy5kYXRhLHRoaXMub2Zmc2V0K3RoaXMucGFyc2VVTG9uZygpKTtyZXR1cm57c3Vic3RGb3JtYXQ6MSxsb29rdXBUeXBlOnQsZXh0ZW5zaW9uOnN0W3RdLmNhbGwocil9fSxzdFs4XT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm4gTC5hcmd1bWVudCgxPT09ZSxcIkdTVUIgUmV2ZXJzZSBDaGFpbmluZyBDb250ZXh0dWFsIFNpbmdsZSBTdWJzdGl0dXRpb24gU3VidGFibGUgaWRlbnRpZmllci1mb3JtYXQgbXVzdCBiZSAxXCIpLHtzdWJzdEZvcm1hdDplLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSxiYWNrdHJhY2tDb3ZlcmFnZTp0aGlzLnBhcnNlTGlzdChvZS5wb2ludGVyKG9lLmNvdmVyYWdlKSksbG9va2FoZWFkQ292ZXJhZ2U6dGhpcy5wYXJzZUxpc3Qob2UucG9pbnRlcihvZS5jb3ZlcmFnZSkpLHN1YnN0aXR1dGVzOnRoaXMucGFyc2VVU2hvcnRMaXN0KCl9fTt2YXIgcHQ9bmV3IEFycmF5KDkpO3B0WzFdPWZ1bmN0aW9uKGUpe3JldHVybiAxPT09ZS5zdWJzdEZvcm1hdD9uZXcgJC5UYWJsZShcInN1YnN0aXR1dGlvblRhYmxlXCIsW3tuYW1lOlwic3Vic3RGb3JtYXRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MX0se25hbWU6XCJjb3ZlcmFnZVwiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOm5ldyAkLkNvdmVyYWdlKGUuY292ZXJhZ2UpfSx7bmFtZTpcImRlbHRhR2x5cGhJRFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTplLmRlbHRhR2x5cGhJZH1dKTpuZXcgJC5UYWJsZShcInN1YnN0aXR1dGlvblRhYmxlXCIsW3tuYW1lOlwic3Vic3RGb3JtYXRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6Mn0se25hbWU6XCJjb3ZlcmFnZVwiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOm5ldyAkLkNvdmVyYWdlKGUuY292ZXJhZ2UpfV0uY29uY2F0KCQudXNob3J0TGlzdChcInN1YnN0aXR1dGVcIixlLnN1YnN0aXR1dGUpKSl9LHB0WzNdPWZ1bmN0aW9uKGUpe3JldHVybiBMLmFzc2VydCgxPT09ZS5zdWJzdEZvcm1hdCxcIkxvb2t1cCB0eXBlIDMgc3Vic3RGb3JtYXQgbXVzdCBiZSAxLlwiKSxuZXcgJC5UYWJsZShcInN1YnN0aXR1dGlvblRhYmxlXCIsW3tuYW1lOlwic3Vic3RGb3JtYXRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MX0se25hbWU6XCJjb3ZlcmFnZVwiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOm5ldyAkLkNvdmVyYWdlKGUuY292ZXJhZ2UpfV0uY29uY2F0KCQudGFibGVMaXN0KFwiYWx0U2V0XCIsZS5hbHRlcm5hdGVTZXRzLGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgJC5UYWJsZShcImFsdGVybmF0ZVNldFRhYmxlXCIsJC51c2hvcnRMaXN0KFwiYWx0ZXJuYXRlXCIsZSkpfSkpKX0scHRbNF09ZnVuY3Rpb24oZSl7cmV0dXJuIEwuYXNzZXJ0KDE9PT1lLnN1YnN0Rm9ybWF0LFwiTG9va3VwIHR5cGUgNCBzdWJzdEZvcm1hdCBtdXN0IGJlIDEuXCIpLG5ldyAkLlRhYmxlKFwic3Vic3RpdHV0aW9uVGFibGVcIixbe25hbWU6XCJzdWJzdEZvcm1hdFwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToxfSx7bmFtZTpcImNvdmVyYWdlXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3ICQuQ292ZXJhZ2UoZS5jb3ZlcmFnZSl9XS5jb25jYXQoJC50YWJsZUxpc3QoXCJsaWdTZXRcIixlLmxpZ2F0dXJlU2V0cyxmdW5jdGlvbihlKXtyZXR1cm4gbmV3ICQuVGFibGUoXCJsaWdhdHVyZVNldFRhYmxlXCIsJC50YWJsZUxpc3QoXCJsaWdhdHVyZVwiLGUsZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyAkLlRhYmxlKFwibGlnYXR1cmVUYWJsZVwiLFt7bmFtZTpcImxpZ0dseXBoXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOmUubGlnR2x5cGh9XS5jb25jYXQoJC51c2hvcnRMaXN0KFwiY29tcG9uZW50XCIsZS5jb21wb25lbnRzLGUuY29tcG9uZW50cy5sZW5ndGgrMSkpKX0pKX0pKSl9O3ZhciB1dD17cGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgb2UoZSx0PXR8fDApLG49ci5wYXJzZVZlcnNpb24oMSk7cmV0dXJuIEwuYXJndW1lbnQoMT09PW58fDEuMT09PW4sXCJVbnN1cHBvcnRlZCBHU1VCIHRhYmxlIHZlcnNpb24uXCIpLDE9PT1uP3t2ZXJzaW9uOm4sc2NyaXB0czpyLnBhcnNlU2NyaXB0TGlzdCgpLGZlYXR1cmVzOnIucGFyc2VGZWF0dXJlTGlzdCgpLGxvb2t1cHM6ci5wYXJzZUxvb2t1cExpc3Qoc3QpfTp7dmVyc2lvbjpuLHNjcmlwdHM6ci5wYXJzZVNjcmlwdExpc3QoKSxmZWF0dXJlczpyLnBhcnNlRmVhdHVyZUxpc3QoKSxsb29rdXBzOnIucGFyc2VMb29rdXBMaXN0KHN0KSx2YXJpYXRpb25zOnIucGFyc2VGZWF0dXJlVmFyaWF0aW9uc0xpc3QoKX19LG1ha2U6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyAkLlRhYmxlKFwiR1NVQlwiLFt7bmFtZTpcInZlcnNpb25cIix0eXBlOlwiVUxPTkdcIix2YWx1ZTo2NTUzNn0se25hbWU6XCJzY3JpcHRzXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3ICQuU2NyaXB0TGlzdChlLnNjcmlwdHMpfSx7bmFtZTpcImZlYXR1cmVzXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3ICQuRmVhdHVyZUxpc3QoZS5mZWF0dXJlcyl9LHtuYW1lOlwibG9va3Vwc1wiLHR5cGU6XCJUQUJMRVwiLHZhbHVlOm5ldyAkLkxvb2t1cExpc3QoZS5sb29rdXBzLHB0KX1dKX19O3ZhciBjdD17cGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgc2UuUGFyc2VyKGUsdCksbj1yLnBhcnNlVUxvbmcoKTtMLmFyZ3VtZW50KDE9PT1uLFwiVW5zdXBwb3J0ZWQgTUVUQSB0YWJsZSB2ZXJzaW9uLlwiKSxyLnBhcnNlVUxvbmcoKSxyLnBhcnNlVUxvbmcoKTtmb3IodmFyIGE9ci5wYXJzZVVMb25nKCksbz17fSxpPTA7aTxhO2krKyl7dmFyIHM9ci5wYXJzZVRhZygpLGw9ci5wYXJzZVVMb25nKCkscD1yLnBhcnNlVUxvbmcoKSx1PVAuVVRGOChlLHQrbCxwKTtvW3NdPXV9cmV0dXJuIG99LG1ha2U6ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0LmtleXMoZSkubGVuZ3RoLHI9XCJcIixuPTE2KzEyKnQsYT1uZXcgJC5UYWJsZShcIm1ldGFcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6MX0se25hbWU6XCJmbGFnc1wiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjB9LHtuYW1lOlwib2Zmc2V0XCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6bn0se25hbWU6XCJudW1UYWdzXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6dH1dKTtmb3IodmFyIG8gaW4gZSl7dmFyIGk9ci5sZW5ndGg7cis9ZVtvXSxhLmZpZWxkcy5wdXNoKHtuYW1lOlwidGFnIFwiK28sdHlwZTpcIlRBR1wiLHZhbHVlOm99KSxhLmZpZWxkcy5wdXNoKHtuYW1lOlwib2Zmc2V0IFwiK28sdHlwZTpcIlVMT05HXCIsdmFsdWU6bitpfSksYS5maWVsZHMucHVzaCh7bmFtZTpcImxlbmd0aCBcIitvLHR5cGU6XCJVTE9OR1wiLHZhbHVlOmVbb10ubGVuZ3RofSl9cmV0dXJuIGEuZmllbGRzLnB1c2goe25hbWU6XCJzdHJpbmdQb29sXCIsdHlwZTpcIkNIQVJBUlJBWVwiLHZhbHVlOnJ9KSxhfX07ZnVuY3Rpb24gZHQoZSl7cmV0dXJuIE1hdGgubG9nKGUpL01hdGgubG9nKDIpfDB9ZnVuY3Rpb24gaHQoZSl7Zm9yKDtlLmxlbmd0aCU0IT0wOyllLnB1c2goMCk7Zm9yKHZhciB0PTAscj0wO3I8ZS5sZW5ndGg7cis9NCl0Kz0oZVtyXTw8MjQpKyhlW3IrMV08PDE2KSsoZVtyKzJdPDw4KStlW3IrM107cmV0dXJuIHQlPU1hdGgucG93KDIsMzIpfWZ1bmN0aW9uIG10KGUsdCxyLG4pe3JldHVybiBuZXcgJC5SZWNvcmQoXCJUYWJsZSBSZWNvcmRcIixbe25hbWU6XCJ0YWdcIix0eXBlOlwiVEFHXCIsdmFsdWU6dm9pZCAwIT09ZT9lOlwiXCJ9LHtuYW1lOlwiY2hlY2tTdW1cIix0eXBlOlwiVUxPTkdcIix2YWx1ZTp2b2lkIDAhPT10P3Q6MH0se25hbWU6XCJvZmZzZXRcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTp2b2lkIDAhPT1yP3I6MH0se25hbWU6XCJsZW5ndGhcIix0eXBlOlwiVUxPTkdcIix2YWx1ZTp2b2lkIDAhPT1uP246MH1dKX1mdW5jdGlvbiBmdChlKXt2YXIgdD1uZXcgJC5UYWJsZShcInNmbnRcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlRBR1wiLHZhbHVlOlwiT1RUT1wifSx7bmFtZTpcIm51bVRhYmxlc1wiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInNlYXJjaFJhbmdlXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwiZW50cnlTZWxlY3RvclwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcInJhbmdlU2hpZnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6MH1dKTt0LnRhYmxlcz1lLHQubnVtVGFibGVzPWUubGVuZ3RoO3ZhciByPU1hdGgucG93KDIsZHQodC5udW1UYWJsZXMpKTt0LnNlYXJjaFJhbmdlPTE2KnIsdC5lbnRyeVNlbGVjdG9yPWR0KHIpLHQucmFuZ2VTaGlmdD0xNip0Lm51bVRhYmxlcy10LnNlYXJjaFJhbmdlO2Zvcih2YXIgbj1bXSxhPVtdLG89dC5zaXplT2YoKSttdCgpLnNpemVPZigpKnQubnVtVGFibGVzO28lNCE9MDspbys9MSxhLnB1c2goe25hbWU6XCJwYWRkaW5nXCIsdHlwZTpcIkJZVEVcIix2YWx1ZTowfSk7Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKz0xKXt2YXIgcz1lW2ldO0wuYXJndW1lbnQoND09PXMudGFibGVOYW1lLmxlbmd0aCxcIlRhYmxlIG5hbWVcIitzLnRhYmxlTmFtZStcIiBpcyBpbnZhbGlkLlwiKTt2YXIgbD1zLnNpemVPZigpLHA9bXQocy50YWJsZU5hbWUsaHQocy5lbmNvZGUoKSksbyxsKTtmb3Iobi5wdXNoKHtuYW1lOnAudGFnK1wiIFRhYmxlIFJlY29yZFwiLHR5cGU6XCJSRUNPUkRcIix2YWx1ZTpwfSksYS5wdXNoKHtuYW1lOnMudGFibGVOYW1lK1wiIHRhYmxlXCIsdHlwZTpcIlJFQ09SRFwiLHZhbHVlOnN9KSxvKz1sLEwuYXJndW1lbnQoIWlzTmFOKG8pLFwiU29tZXRoaW5nIHdlbnQgd3JvbmcgY2FsY3VsYXRpbmcgdGhlIG9mZnNldC5cIik7byU0IT0wOylvKz0xLGEucHVzaCh7bmFtZTpcInBhZGRpbmdcIix0eXBlOlwiQllURVwiLHZhbHVlOjB9KX1yZXR1cm4gbi5zb3J0KGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUudmFsdWUudGFnPnQudmFsdWUudGFnPzE6LTF9KSx0LmZpZWxkcz10LmZpZWxkcy5jb25jYXQobiksdC5maWVsZHM9dC5maWVsZHMuY29uY2F0KGEpLHR9ZnVuY3Rpb24geXQoZSx0LHIpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bis9MSl7dmFyIGE9ZS5jaGFyVG9HbHlwaEluZGV4KHRbbl0pO2lmKDA8YSlyZXR1cm4gZS5nbHlwaHMuZ2V0KGEpLmdldE1ldHJpY3MoKX1yZXR1cm4gcn12YXIgZ3Q9e21ha2U6ZnQsZm9udFRvVGFibGU6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9W10sbj1bXSxhPVtdLG89W10saT1bXSxzPVtdLGw9W10scD0wLHU9MCxjPTAsZD0wLGg9MCxtPTA7bTxlLmdseXBocy5sZW5ndGg7bSs9MSl7dmFyIGY9ZS5nbHlwaHMuZ2V0KG0pLHk9MHxmLnVuaWNvZGU7aWYoaXNOYU4oZi5hZHZhbmNlV2lkdGgpKXRocm93IG5ldyBFcnJvcihcIkdseXBoIFwiK2YubmFtZStcIiAoXCIrbStcIik6IGFkdmFuY2VXaWR0aCBpcyBub3QgYSBudW1iZXIuXCIpOyh5PHR8fHZvaWQgMD09PXQpJiYwPHkmJih0PXkpLHA8eSYmKHA9eSk7dmFyIGc9b3QuZ2V0VW5pY29kZVJhbmdlKHkpO2lmKGc8MzIpdXw9MTw8ZztlbHNlIGlmKGc8NjQpY3w9MTw8Zy0zMjtlbHNlIGlmKGc8OTYpZHw9MTw8Zy02NDtlbHNle2lmKCEoZzwxMjMpKXRocm93IG5ldyBFcnJvcihcIlVuaWNvZGUgcmFuZ2VzIGJpdHMgPiAxMjMgYXJlIHJlc2VydmVkIGZvciBpbnRlcm5hbCB1c2FnZVwiKTtofD0xPDxnLTk2fWlmKFwiLm5vdGRlZlwiIT09Zi5uYW1lKXt2YXIgdj1mLmdldE1ldHJpY3MoKTtyLnB1c2godi54TWluKSxuLnB1c2godi55TWluKSxhLnB1c2godi54TWF4KSxvLnB1c2godi55TWF4KSxzLnB1c2godi5sZWZ0U2lkZUJlYXJpbmcpLGwucHVzaCh2LnJpZ2h0U2lkZUJlYXJpbmcpLGkucHVzaChmLmFkdmFuY2VXaWR0aCl9fXZhciBiPXt4TWluOk1hdGgubWluLmFwcGx5KG51bGwscikseU1pbjpNYXRoLm1pbi5hcHBseShudWxsLG4pLHhNYXg6TWF0aC5tYXguYXBwbHkobnVsbCxhKSx5TWF4Ok1hdGgubWF4LmFwcGx5KG51bGwsbyksYWR2YW5jZVdpZHRoTWF4Ok1hdGgubWF4LmFwcGx5KG51bGwsaSksYWR2YW5jZVdpZHRoQXZnOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLHI9MDtyPGUubGVuZ3RoO3IrPTEpdCs9ZVtyXTtyZXR1cm4gdC9lLmxlbmd0aH0oaSksbWluTGVmdFNpZGVCZWFyaW5nOk1hdGgubWluLmFwcGx5KG51bGwscyksbWF4TGVmdFNpZGVCZWFyaW5nOk1hdGgubWF4LmFwcGx5KG51bGwscyksbWluUmlnaHRTaWRlQmVhcmluZzpNYXRoLm1pbi5hcHBseShudWxsLGwpfTtiLmFzY2VuZGVyPWUuYXNjZW5kZXIsYi5kZXNjZW5kZXI9ZS5kZXNjZW5kZXI7dmFyIF89R2UubWFrZSh7ZmxhZ3M6Myx1bml0c1BlckVtOmUudW5pdHNQZXJFbSx4TWluOmIueE1pbix5TWluOmIueU1pbix4TWF4OmIueE1heCx5TWF4OmIueU1heCxsb3dlc3RSZWNQUEVNOjMsY3JlYXRlZFRpbWVzdGFtcDplLmNyZWF0ZWRUaW1lc3RhbXB9KSx4PWplLm1ha2Uoe2FzY2VuZGVyOmIuYXNjZW5kZXIsZGVzY2VuZGVyOmIuZGVzY2VuZGVyLGFkdmFuY2VXaWR0aE1heDpiLmFkdmFuY2VXaWR0aE1heCxtaW5MZWZ0U2lkZUJlYXJpbmc6Yi5taW5MZWZ0U2lkZUJlYXJpbmcsbWluUmlnaHRTaWRlQmVhcmluZzpiLm1pblJpZ2h0U2lkZUJlYXJpbmcseE1heEV4dGVudDpiLm1heExlZnRTaWRlQmVhcmluZysoYi54TWF4LWIueE1pbiksbnVtYmVyT2ZITWV0cmljczplLmdseXBocy5sZW5ndGh9KSxTPUhlLm1ha2UoZS5nbHlwaHMubGVuZ3RoKSx3PW90Lm1ha2Uoe3hBdmdDaGFyV2lkdGg6TWF0aC5yb3VuZChiLmFkdmFuY2VXaWR0aEF2ZyksdXNXZWlnaHRDbGFzczplLnRhYmxlcy5vczIudXNXZWlnaHRDbGFzcyx1c1dpZHRoQ2xhc3M6ZS50YWJsZXMub3MyLnVzV2lkdGhDbGFzcyx1c0ZpcnN0Q2hhckluZGV4OnQsdXNMYXN0Q2hhckluZGV4OnAsdWxVbmljb2RlUmFuZ2UxOnUsdWxVbmljb2RlUmFuZ2UyOmMsdWxVbmljb2RlUmFuZ2UzOmQsdWxVbmljb2RlUmFuZ2U0OmgsZnNTZWxlY3Rpb246ZS50YWJsZXMub3MyLmZzU2VsZWN0aW9uLHNUeXBvQXNjZW5kZXI6Yi5hc2NlbmRlcixzVHlwb0Rlc2NlbmRlcjpiLmRlc2NlbmRlcixzVHlwb0xpbmVHYXA6MCx1c1dpbkFzY2VudDpiLnlNYXgsdXNXaW5EZXNjZW50Ok1hdGguYWJzKGIueU1pbiksdWxDb2RlUGFnZVJhbmdlMToxLHN4SGVpZ2h0Onl0KGUsXCJ4eXZ3XCIse3lNYXg6TWF0aC5yb3VuZChiLmFzY2VuZGVyLzIpfSkueU1heCxzQ2FwSGVpZ2h0Onl0KGUsXCJISUtMRUZKTU5UWkJEUFJBR09RU1VWV1hZXCIsYikueU1heCx1c0RlZmF1bHRDaGFyOmUuaGFzQ2hhcihcIiBcIik/MzI6MCx1c0JyZWFrQ2hhcjplLmhhc0NoYXIoXCIgXCIpPzMyOjB9KSxNPVZlLm1ha2UoZS5nbHlwaHMpLEU9bGUubWFrZShlLmdseXBocyksVD1lLmdldEVuZ2xpc2hOYW1lKFwiZm9udEZhbWlseVwiKSxDPWUuZ2V0RW5nbGlzaE5hbWUoXCJmb250U3ViZmFtaWx5XCIpLE49VCtcIiBcIitDLE89ZS5nZXRFbmdsaXNoTmFtZShcInBvc3RTY3JpcHROYW1lXCIpO089T3x8VC5yZXBsYWNlKC9cXHMvZyxcIlwiKStcIi1cIitDO3ZhciBMPXt9O2Zvcih2YXIgSSBpbiBlLm5hbWVzKUxbSV09ZS5uYW1lc1tJXTtMLnVuaXF1ZUlEfHwoTC51bmlxdWVJRD17ZW46ZS5nZXRFbmdsaXNoTmFtZShcIm1hbnVmYWN0dXJlclwiKStcIjpcIitOfSksTC5wb3N0U2NyaXB0TmFtZXx8KEwucG9zdFNjcmlwdE5hbWU9e2VuOk99KSxMLnByZWZlcnJlZEZhbWlseXx8KEwucHJlZmVycmVkRmFtaWx5PWUubmFtZXMuZm9udEZhbWlseSksTC5wcmVmZXJyZWRTdWJmYW1pbHl8fChMLnByZWZlcnJlZFN1YmZhbWlseT1lLm5hbWVzLmZvbnRTdWJmYW1pbHkpO3ZhciBQPVtdLFI9bnQubWFrZShMLFApLEQ9MDxQLmxlbmd0aD96ZS5tYWtlKFApOnZvaWQgMCxBPWl0Lm1ha2UoKSxrPUJlLm1ha2UoZS5nbHlwaHMse3ZlcnNpb246ZS5nZXRFbmdsaXNoTmFtZShcInZlcnNpb25cIiksZnVsbE5hbWU6TixmYW1pbHlOYW1lOlQsd2VpZ2h0TmFtZTpDLHBvc3RTY3JpcHROYW1lOk8sdW5pdHNQZXJFbTplLnVuaXRzUGVyRW0sZm9udEJCb3g6WzAsYi55TWluLGIuYXNjZW5kZXIsYi5hZHZhbmNlV2lkdGhNYXhdfSksRj1lLm1ldGFzJiYwPE9iamVjdC5rZXlzKGUubWV0YXMpLmxlbmd0aD9jdC5tYWtlKGUubWV0YXMpOnZvaWQgMCxVPVtfLHgsUyx3LFIsRSxBLGssTV07RCYmVS5wdXNoKEQpLGUudGFibGVzLmdzdWImJlUucHVzaCh1dC5tYWtlKGUudGFibGVzLmdzdWIpKSxGJiZVLnB1c2goRik7Zm9yKHZhciBCPWZ0KFUpLEc9aHQoQi5lbmNvZGUoKSksaj1CLmZpZWxkcyxWPSExLHo9MDt6PGoubGVuZ3RoO3orPTEpaWYoXCJoZWFkIHRhYmxlXCI9PT1qW3pdLm5hbWUpe2pbel0udmFsdWUuY2hlY2tTdW1BZGp1c3RtZW50PTI5ODExNDY1NTQtRyxWPSEwO2JyZWFrfWlmKCFWKXRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIGhlYWQgdGFibGUgd2l0aCBjaGVja1N1bSB0byBhZGp1c3QuXCIpO3JldHVybiBCfSxjb21wdXRlQ2hlY2tTdW06aHR9O2Z1bmN0aW9uIHZ0KGUsdCl7Zm9yKHZhciByPTAsbj1lLmxlbmd0aC0xO3I8PW47KXt2YXIgYT1yK24+Pj4xLG89ZVthXS50YWc7aWYobz09PXQpcmV0dXJuIGE7bzx0P3I9MSthOm49YS0xfXJldHVybi1yLTF9ZnVuY3Rpb24gYnQoZSx0KXtmb3IodmFyIHI9MCxuPWUubGVuZ3RoLTE7cjw9bjspe3ZhciBhPXIrbj4+PjEsbz1lW2FdO2lmKG89PT10KXJldHVybiBhO288dD9yPTErYTpuPWEtMX1yZXR1cm4tci0xfWZ1bmN0aW9uIF90KGUsdCl7Zm9yKHZhciByLG49MCxhPWUubGVuZ3RoLTE7bjw9YTspe3ZhciBvPW4rYT4+PjEsaT0ocj1lW29dKS5zdGFydDtpZihpPT09dClyZXR1cm4gcjtpPHQ/bj0xK286YT1vLTF9aWYoMDxuKXJldHVybiB0PihyPWVbbi0xXSkuZW5kPzA6cn1mdW5jdGlvbiB4dChlLHQpe3RoaXMuZm9udD1lLHRoaXMudGFibGVOYW1lPXR9ZnVuY3Rpb24gU3QoZSl7eHQuY2FsbCh0aGlzLGUsXCJncG9zXCIpfWZ1bmN0aW9uIHd0KGUpe3h0LmNhbGwodGhpcyxlLFwiZ3N1YlwiKX1mdW5jdGlvbiBNdChlLHQpe3ZhciByPWUubGVuZ3RoO2lmKHIhPT10Lmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIG49MDtuPHI7bisrKWlmKGVbbl0hPT10W25dKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEV0KGUsdCxyKXtmb3IodmFyIG49ZS5zdWJ0YWJsZXMsYT0wO2E8bi5sZW5ndGg7YSsrKXt2YXIgbz1uW2FdO2lmKG8uc3Vic3RGb3JtYXQ9PT10KXJldHVybiBvfWlmKHIpcmV0dXJuIG4ucHVzaChyKSxyfWZ1bmN0aW9uIFR0KGUpe2Zvcih2YXIgdD1uZXcgQXJyYXlCdWZmZXIoZS5sZW5ndGgpLHI9bmV3IFVpbnQ4QXJyYXkodCksbj0wO248ZS5sZW5ndGg7KytuKXJbbl09ZVtuXTtyZXR1cm4gdH1mdW5jdGlvbiBDdChlLHQpe2lmKCFlKXRocm93IHR9ZnVuY3Rpb24gTnQoZSx0LHIsbixhKXt2YXIgbztyZXR1cm4gbz0wPCh0Jm4pPyhvPWUucGFyc2VCeXRlKCksMD09KHQmYSkmJihvPS1vKSxyK28pOjA8KHQmYSk/cjpyK2UucGFyc2VTaG9ydCgpfWZ1bmN0aW9uIE90KGUsdCxyKXt2YXIgbixhLG89bmV3IHNlLlBhcnNlcih0LHIpO2lmKGUubnVtYmVyT2ZDb250b3Vycz1vLnBhcnNlU2hvcnQoKSxlLl94TWluPW8ucGFyc2VTaG9ydCgpLGUuX3lNaW49by5wYXJzZVNob3J0KCksZS5feE1heD1vLnBhcnNlU2hvcnQoKSxlLl95TWF4PW8ucGFyc2VTaG9ydCgpLDA8ZS5udW1iZXJPZkNvbnRvdXJzKXtmb3IodmFyIGk9ZS5lbmRQb2ludEluZGljZXM9W10scz0wO3M8ZS5udW1iZXJPZkNvbnRvdXJzO3MrPTEpaS5wdXNoKG8ucGFyc2VVU2hvcnQoKSk7ZS5pbnN0cnVjdGlvbkxlbmd0aD1vLnBhcnNlVVNob3J0KCksZS5pbnN0cnVjdGlvbnM9W107Zm9yKHZhciBsPTA7bDxlLmluc3RydWN0aW9uTGVuZ3RoO2wrPTEpZS5pbnN0cnVjdGlvbnMucHVzaChvLnBhcnNlQnl0ZSgpKTt2YXIgcD1pW2kubGVuZ3RoLTFdKzE7bj1bXTtmb3IodmFyIHU9MDt1PHA7dSs9MSlpZihhPW8ucGFyc2VCeXRlKCksbi5wdXNoKGEpLDA8KDgmYSkpZm9yKHZhciBjPW8ucGFyc2VCeXRlKCksZD0wO2Q8YztkKz0xKW4ucHVzaChhKSx1Kz0xO2lmKEwuYXJndW1lbnQobi5sZW5ndGg9PT1wLFwiQmFkIGZsYWdzLlwiKSwwPGkubGVuZ3RoKXt2YXIgaCxtPVtdO2lmKDA8cCl7Zm9yKHZhciBmPTA7ZjxwO2YrPTEpYT1uW2ZdLChoPXt9KS5vbkN1cnZlPSEhKDEmYSksaC5sYXN0UG9pbnRPZkNvbnRvdXI9MDw9aS5pbmRleE9mKGYpLG0ucHVzaChoKTtmb3IodmFyIHk9MCxnPTA7ZzxwO2crPTEpYT1uW2ddLChoPW1bZ10pLng9TnQobyxhLHksMiwxNikseT1oLng7Zm9yKHZhciB2PTAsYj0wO2I8cDtiKz0xKWE9bltiXSwoaD1tW2JdKS55PU50KG8sYSx2LDQsMzIpLHY9aC55fWUucG9pbnRzPW19ZWxzZSBlLnBvaW50cz1bXX1lbHNlIGlmKDA9PT1lLm51bWJlck9mQ29udG91cnMpZS5wb2ludHM9W107ZWxzZXtlLmlzQ29tcG9zaXRlPSEwLGUucG9pbnRzPVtdLGUuY29tcG9uZW50cz1bXTtmb3IodmFyIF89ITA7Xzspe249by5wYXJzZVVTaG9ydCgpO3ZhciB4PXtnbHlwaEluZGV4Om8ucGFyc2VVU2hvcnQoKSx4U2NhbGU6MSxzY2FsZTAxOjAsc2NhbGUxMDowLHlTY2FsZToxLGR4OjAsZHk6MH07MDwoMSZuKT8wPCgyJm4pPyh4LmR4PW8ucGFyc2VTaG9ydCgpLHguZHk9by5wYXJzZVNob3J0KCkpOngubWF0Y2hlZFBvaW50cz1bby5wYXJzZVVTaG9ydCgpLG8ucGFyc2VVU2hvcnQoKV06MDwoMiZuKT8oeC5keD1vLnBhcnNlQ2hhcigpLHguZHk9by5wYXJzZUNoYXIoKSk6eC5tYXRjaGVkUG9pbnRzPVtvLnBhcnNlQnl0ZSgpLG8ucGFyc2VCeXRlKCldLDA8KDgmbik/eC54U2NhbGU9eC55U2NhbGU9by5wYXJzZUYyRG90MTQoKTowPCg2NCZuKT8oeC54U2NhbGU9by5wYXJzZUYyRG90MTQoKSx4LnlTY2FsZT1vLnBhcnNlRjJEb3QxNCgpKTowPCgxMjgmbikmJih4LnhTY2FsZT1vLnBhcnNlRjJEb3QxNCgpLHguc2NhbGUwMT1vLnBhcnNlRjJEb3QxNCgpLHguc2NhbGUxMD1vLnBhcnNlRjJEb3QxNCgpLHgueVNjYWxlPW8ucGFyc2VGMkRvdDE0KCkpLGUuY29tcG9uZW50cy5wdXNoKHgpLF89ISEoMzImbil9aWYoMjU2Jm4pe2UuaW5zdHJ1Y3Rpb25MZW5ndGg9by5wYXJzZVVTaG9ydCgpLGUuaW5zdHJ1Y3Rpb25zPVtdO2Zvcih2YXIgUz0wO1M8ZS5pbnN0cnVjdGlvbkxlbmd0aDtTKz0xKWUuaW5zdHJ1Y3Rpb25zLnB1c2goby5wYXJzZUJ5dGUoKSl9fX1mdW5jdGlvbiBMdChlLHQpe2Zvcih2YXIgcj1bXSxuPTA7bjxlLmxlbmd0aDtuKz0xKXt2YXIgYT1lW25dLG89e3g6dC54U2NhbGUqYS54K3Quc2NhbGUwMSphLnkrdC5keCx5OnQuc2NhbGUxMCphLngrdC55U2NhbGUqYS55K3QuZHksb25DdXJ2ZTphLm9uQ3VydmUsbGFzdFBvaW50T2ZDb250b3VyOmEubGFzdFBvaW50T2ZDb250b3VyfTtyLnB1c2gobyl9cmV0dXJuIHJ9ZnVuY3Rpb24gSXQoZSl7dmFyIHQ9bmV3IEE7aWYoIWUpcmV0dXJuIHQ7Zm9yKHZhciByPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPVtdLG49MDtuPGUubGVuZ3RoO24rPTEpe3ZhciBhPWVbbl07ci5wdXNoKGEpLGEubGFzdFBvaW50T2ZDb250b3VyJiYodC5wdXNoKHIpLHI9W10pfXJldHVybiBMLmFyZ3VtZW50KDA9PT1yLmxlbmd0aCxcIlRoZXJlIGFyZSBzdGlsbCBwb2ludHMgbGVmdCBpbiB0aGUgY3VycmVudCBjb250b3VyLlwiKSx0fShlKSxuPTA7bjxyLmxlbmd0aDsrK24pe3ZhciBhPXJbbl0sbz1udWxsLGk9YVthLmxlbmd0aC0xXSxzPWFbMF07aWYoaS5vbkN1cnZlKXQubW92ZVRvKGkueCxpLnkpO2Vsc2UgaWYocy5vbkN1cnZlKXQubW92ZVRvKHMueCxzLnkpO2Vsc2V7dmFyIGw9e3g6LjUqKGkueCtzLngpLHk6LjUqKGkueStzLnkpfTt0Lm1vdmVUbyhsLngsbC55KX1mb3IodmFyIHA9MDtwPGEubGVuZ3RoOysrcClpZihvPWksaT1zLHM9YVsocCsxKSVhLmxlbmd0aF0saS5vbkN1cnZlKXQubGluZVRvKGkueCxpLnkpO2Vsc2V7dmFyIHU9cztvLm9uQ3VydmV8fHt4Oi41KihpLngrby54KSx5Oi41KihpLnkrby55KX0scy5vbkN1cnZlfHwodT17eDouNSooaS54K3MueCkseTouNSooaS55K3MueSl9KSx0LnF1YWRyYXRpY0N1cnZlVG8oaS54LGkueSx1LngsdS55KX10LmNsb3NlUGF0aCgpfXJldHVybiB0fWZ1bmN0aW9uIFB0KGUsdCl7aWYodC5pc0NvbXBvc2l0ZSlmb3IodmFyIHI9MDtyPHQuY29tcG9uZW50cy5sZW5ndGg7cis9MSl7dmFyIG49dC5jb21wb25lbnRzW3JdLGE9ZS5nZXQobi5nbHlwaEluZGV4KTtpZihhLmdldFBhdGgoKSxhLnBvaW50cyl7dmFyIG89dm9pZCAwO2lmKHZvaWQgMD09PW4ubWF0Y2hlZFBvaW50cylvPUx0KGEucG9pbnRzLG4pO2Vsc2V7aWYobi5tYXRjaGVkUG9pbnRzWzBdPnQucG9pbnRzLmxlbmd0aC0xfHxuLm1hdGNoZWRQb2ludHNbMV0+YS5wb2ludHMubGVuZ3RoLTEpdGhyb3cgRXJyb3IoXCJNYXRjaGVkIHBvaW50cyBvdXQgb2YgcmFuZ2UgaW4gXCIrdC5uYW1lKTt2YXIgaT10LnBvaW50c1tuLm1hdGNoZWRQb2ludHNbMF1dLHM9YS5wb2ludHNbbi5tYXRjaGVkUG9pbnRzWzFdXSxsPXt4U2NhbGU6bi54U2NhbGUsc2NhbGUwMTpuLnNjYWxlMDEsc2NhbGUxMDpuLnNjYWxlMTAseVNjYWxlOm4ueVNjYWxlLGR4OjAsZHk6MH07cz1MdChbc10sbClbMF0sbC5keD1pLngtcy54LGwuZHk9aS55LXMueSxvPUx0KGEucG9pbnRzLGwpfXQucG9pbnRzPXQucG9pbnRzLmNvbmNhdChvKX19cmV0dXJuIEl0KHQucG9pbnRzKX0oU3QucHJvdG90eXBlPXh0LnByb3RvdHlwZT17c2VhcmNoVGFnOnZ0LGJpblNlYXJjaDpidCxnZXRUYWJsZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmZvbnQudGFibGVzW3RoaXMudGFibGVOYW1lXTtyZXR1cm4hdCYmZSYmKHQ9dGhpcy5mb250LnRhYmxlc1t0aGlzLnRhYmxlTmFtZV09dGhpcy5jcmVhdGVEZWZhdWx0VGFibGUoKSksdH0sZ2V0U2NyaXB0TmFtZXM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldFRhYmxlKCk7cmV0dXJuIGU/ZS5zY3JpcHRzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS50YWd9KTpbXX0sZ2V0RGVmYXVsdFNjcmlwdE5hbWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldFRhYmxlKCk7aWYoZSl7Zm9yKHZhciB0PSExLHI9MDtyPGUuc2NyaXB0cy5sZW5ndGg7cisrKXt2YXIgbj1lLnNjcmlwdHNbcl0udGFnO2lmKFwiREZMVFwiPT09bilyZXR1cm4gbjtcImxhdG5cIj09PW4mJih0PSEwKX1yZXR1cm4gdD9cImxhdG5cIjp2b2lkIDB9fSxnZXRTY3JpcHRUYWJsZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMuZ2V0VGFibGUodCk7aWYocil7ZT1lfHxcIkRGTFRcIjt2YXIgbj1yLnNjcmlwdHMsYT12dChyLnNjcmlwdHMsZSk7aWYoMDw9YSlyZXR1cm4gblthXS5zY3JpcHQ7aWYodCl7dmFyIG89e3RhZzplLHNjcmlwdDp7ZGVmYXVsdExhbmdTeXM6e3Jlc2VydmVkOjAscmVxRmVhdHVyZUluZGV4OjY1NTM1LGZlYXR1cmVJbmRleGVzOltdfSxsYW5nU3lzUmVjb3JkczpbXX19O3JldHVybiBuLnNwbGljZSgtMS1hLDAsbyksby5zY3JpcHR9fX0sZ2V0TGFuZ1N5c1RhYmxlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLmdldFNjcmlwdFRhYmxlKGUscik7aWYobil7aWYoIXR8fFwiZGZsdFwiPT09dHx8XCJERkxUXCI9PT10KXJldHVybiBuLmRlZmF1bHRMYW5nU3lzO3ZhciBhPXZ0KG4ubGFuZ1N5c1JlY29yZHMsdCk7aWYoMDw9YSlyZXR1cm4gbi5sYW5nU3lzUmVjb3Jkc1thXS5sYW5nU3lzO2lmKHIpe3ZhciBvPXt0YWc6dCxsYW5nU3lzOntyZXNlcnZlZDowLHJlcUZlYXR1cmVJbmRleDo2NTUzNSxmZWF0dXJlSW5kZXhlczpbXX19O3JldHVybiBuLmxhbmdTeXNSZWNvcmRzLnNwbGljZSgtMS1hLDAsbyksby5sYW5nU3lzfX19LGdldEZlYXR1cmVUYWJsZTpmdW5jdGlvbihlLHQscixuKXt2YXIgYT10aGlzLmdldExhbmdTeXNUYWJsZShlLHQsbik7aWYoYSl7Zm9yKHZhciBvLGk9YS5mZWF0dXJlSW5kZXhlcyxzPXRoaXMuZm9udC50YWJsZXNbdGhpcy50YWJsZU5hbWVdLmZlYXR1cmVzLGw9MDtsPGkubGVuZ3RoO2wrKylpZigobz1zW2lbbF1dKS50YWc9PT1yKXJldHVybiBvLmZlYXR1cmU7aWYobil7dmFyIHA9cy5sZW5ndGg7cmV0dXJuIEwuYXNzZXJ0KDA9PT1wfHxyPj1zW3AtMV0udGFnLFwiRmVhdHVyZXMgbXVzdCBiZSBhZGRlZCBpbiBhbHBoYWJldGljYWwgb3JkZXIuXCIpLG89e3RhZzpyLGZlYXR1cmU6e3BhcmFtczowLGxvb2t1cExpc3RJbmRleGVzOltdfX0scy5wdXNoKG8pLGkucHVzaChwKSxvLmZlYXR1cmV9fX0sZ2V0TG9va3VwVGFibGVzOmZ1bmN0aW9uKGUsdCxyLG4sYSl7dmFyIG89dGhpcy5nZXRGZWF0dXJlVGFibGUoZSx0LHIsYSksaT1bXTtpZihvKXtmb3IodmFyIHMsbD1vLmxvb2t1cExpc3RJbmRleGVzLHA9dGhpcy5mb250LnRhYmxlc1t0aGlzLnRhYmxlTmFtZV0ubG9va3Vwcyx1PTA7dTxsLmxlbmd0aDt1KyspKHM9cFtsW3VdXSkubG9va3VwVHlwZT09PW4mJmkucHVzaChzKTtpZigwPT09aS5sZW5ndGgmJmEpe3M9e2xvb2t1cFR5cGU6bixsb29rdXBGbGFnOjAsc3VidGFibGVzOltdLG1hcmtGaWx0ZXJpbmdTZXQ6dm9pZCAwfTt2YXIgYz1wLmxlbmd0aDtyZXR1cm4gcC5wdXNoKHMpLGwucHVzaChjKSxbc119fXJldHVybiBpfSxnZXRHbHlwaENsYXNzOmZ1bmN0aW9uKGUsdCl7c3dpdGNoKGUuZm9ybWF0KXtjYXNlIDE6cmV0dXJuIGUuc3RhcnRHbHlwaDw9dCYmdDxlLnN0YXJ0R2x5cGgrZS5jbGFzc2VzLmxlbmd0aD9lLmNsYXNzZXNbdC1lLnN0YXJ0R2x5cGhdOjA7Y2FzZSAyOnZhciByPV90KGUucmFuZ2VzLHQpO3JldHVybiByP3IuY2xhc3NJZDowfX0sZ2V0Q292ZXJhZ2VJbmRleDpmdW5jdGlvbihlLHQpe3N3aXRjaChlLmZvcm1hdCl7Y2FzZSAxOnZhciByPWJ0KGUuZ2x5cGhzLHQpO3JldHVybiAwPD1yP3I6LTE7Y2FzZSAyOnZhciBuPV90KGUucmFuZ2VzLHQpO3JldHVybiBuP24uaW5kZXgrdC1uLnN0YXJ0Oi0xfX0sZXhwYW5kQ292ZXJhZ2U6ZnVuY3Rpb24oZSl7aWYoMT09PWUuZm9ybWF0KXJldHVybiBlLmdseXBocztmb3IodmFyIHQ9W10scj1lLnJhbmdlcyxuPTA7bjxyLmxlbmd0aDtuKyspZm9yKHZhciBhPXJbbl0sbz1hLnN0YXJ0LGk9YS5lbmQscz1vO3M8PWk7cysrKXQucHVzaChzKTtyZXR1cm4gdH19KS5pbml0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5nZXREZWZhdWx0U2NyaXB0TmFtZSgpO3RoaXMuZGVmYXVsdEtlcm5pbmdUYWJsZXM9dGhpcy5nZXRLZXJuaW5nVGFibGVzKGUpfSxTdC5wcm90b3R5cGUuZ2V0S2VybmluZ1ZhbHVlPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKylmb3IodmFyIGE9ZVtuXS5zdWJ0YWJsZXMsbz0wO288YS5sZW5ndGg7bysrKXt2YXIgaT1hW29dLHM9dGhpcy5nZXRDb3ZlcmFnZUluZGV4KGkuY292ZXJhZ2UsdCk7aWYoIShzPDApKXN3aXRjaChpLnBvc0Zvcm1hdCl7Y2FzZSAxOmZvcih2YXIgbD1pLnBhaXJTZXRzW3NdLHA9MDtwPGwubGVuZ3RoO3ArKyl7dmFyIHU9bFtwXTtpZih1LnNlY29uZEdseXBoPT09cilyZXR1cm4gdS52YWx1ZTEmJnUudmFsdWUxLnhBZHZhbmNlfHwwfWJyZWFrO2Nhc2UgMjp2YXIgYz10aGlzLmdldEdseXBoQ2xhc3MoaS5jbGFzc0RlZjEsdCksZD10aGlzLmdldEdseXBoQ2xhc3MoaS5jbGFzc0RlZjIsciksaD1pLmNsYXNzUmVjb3Jkc1tjXVtkXTtyZXR1cm4gaC52YWx1ZTEmJmgudmFsdWUxLnhBZHZhbmNlfHwwfX1yZXR1cm4gMH0sU3QucHJvdG90eXBlLmdldEtlcm5pbmdUYWJsZXM9ZnVuY3Rpb24oZSx0KXtpZih0aGlzLmZvbnQudGFibGVzLmdwb3MpcmV0dXJuIHRoaXMuZ2V0TG9va3VwVGFibGVzKGUsdCxcImtlcm5cIiwyKX0sKHd0LnByb3RvdHlwZT14dC5wcm90b3R5cGUpLmNyZWF0ZURlZmF1bHRUYWJsZT1mdW5jdGlvbigpe3JldHVybnt2ZXJzaW9uOjEsc2NyaXB0czpbe3RhZzpcIkRGTFRcIixzY3JpcHQ6e2RlZmF1bHRMYW5nU3lzOntyZXNlcnZlZDowLHJlcUZlYXR1cmVJbmRleDo2NTUzNSxmZWF0dXJlSW5kZXhlczpbXX0sbGFuZ1N5c1JlY29yZHM6W119fV0sZmVhdHVyZXM6W10sbG9va3VwczpbXX19LHd0LnByb3RvdHlwZS5nZXRTaW5nbGU9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1bXSxhPXRoaXMuZ2V0TG9va3VwVGFibGVzKHQscixlLDEpLG89MDtvPGEubGVuZ3RoO28rKylmb3IodmFyIGk9YVtvXS5zdWJ0YWJsZXMscz0wO3M8aS5sZW5ndGg7cysrKXt2YXIgbD1pW3NdLHA9dGhpcy5leHBhbmRDb3ZlcmFnZShsLmNvdmVyYWdlKSx1PXZvaWQgMDtpZigxPT09bC5zdWJzdEZvcm1hdCl7dmFyIGM9bC5kZWx0YUdseXBoSWQ7Zm9yKHU9MDt1PHAubGVuZ3RoO3UrKyl7dmFyIGQ9cFt1XTtuLnB1c2goe3N1YjpkLGJ5OmQrY30pfX1lbHNle3ZhciBoPWwuc3Vic3RpdHV0ZTtmb3IodT0wO3U8cC5sZW5ndGg7dSsrKW4ucHVzaCh7c3ViOnBbdV0sYnk6aFt1XX0pfX1yZXR1cm4gbn0sd3QucHJvdG90eXBlLmdldEFsdGVybmF0ZXM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1bXSxhPXRoaXMuZ2V0TG9va3VwVGFibGVzKHQscixlLDMpLG89MDtvPGEubGVuZ3RoO28rKylmb3IodmFyIGk9YVtvXS5zdWJ0YWJsZXMscz0wO3M8aS5sZW5ndGg7cysrKWZvcih2YXIgbD1pW3NdLHA9dGhpcy5leHBhbmRDb3ZlcmFnZShsLmNvdmVyYWdlKSx1PWwuYWx0ZXJuYXRlU2V0cyxjPTA7YzxwLmxlbmd0aDtjKyspbi5wdXNoKHtzdWI6cFtjXSxieTp1W2NdfSk7cmV0dXJuIG59LHd0LnByb3RvdHlwZS5nZXRMaWdhdHVyZXM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbj1bXSxhPXRoaXMuZ2V0TG9va3VwVGFibGVzKHQscixlLDQpLG89MDtvPGEubGVuZ3RoO28rKylmb3IodmFyIGk9YVtvXS5zdWJ0YWJsZXMscz0wO3M8aS5sZW5ndGg7cysrKWZvcih2YXIgbD1pW3NdLHA9dGhpcy5leHBhbmRDb3ZlcmFnZShsLmNvdmVyYWdlKSx1PWwubGlnYXR1cmVTZXRzLGM9MDtjPHAubGVuZ3RoO2MrKylmb3IodmFyIGQ9cFtjXSxoPXVbY10sbT0wO208aC5sZW5ndGg7bSsrKXt2YXIgZj1oW21dO24ucHVzaCh7c3ViOltkXS5jb25jYXQoZi5jb21wb25lbnRzKSxieTpmLmxpZ0dseXBofSl9cmV0dXJuIG59LHd0LnByb3RvdHlwZS5hZGRTaW5nbGU9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9RXQodGhpcy5nZXRMb29rdXBUYWJsZXMocixuLGUsMSwhMClbMF0sMix7c3Vic3RGb3JtYXQ6Mixjb3ZlcmFnZTp7Zm9ybWF0OjEsZ2x5cGhzOltdfSxzdWJzdGl0dXRlOltdfSk7TC5hc3NlcnQoMT09PWEuY292ZXJhZ2UuZm9ybWF0LFwiTGlnYXR1cmU6IHVuYWJsZSB0byBtb2RpZnkgY292ZXJhZ2UgdGFibGUgZm9ybWF0IFwiK2EuY292ZXJhZ2UuZm9ybWF0KTt2YXIgbz10LnN1YixpPXRoaXMuYmluU2VhcmNoKGEuY292ZXJhZ2UuZ2x5cGhzLG8pO2k8MCYmKGk9LTEtaSxhLmNvdmVyYWdlLmdseXBocy5zcGxpY2UoaSwwLG8pLGEuc3Vic3RpdHV0ZS5zcGxpY2UoaSwwLDApKSxhLnN1YnN0aXR1dGVbaV09dC5ieX0sd3QucHJvdG90eXBlLmFkZEFsdGVybmF0ZT1mdW5jdGlvbihlLHQscixuKXt2YXIgYT1FdCh0aGlzLmdldExvb2t1cFRhYmxlcyhyLG4sZSwzLCEwKVswXSwxLHtzdWJzdEZvcm1hdDoxLGNvdmVyYWdlOntmb3JtYXQ6MSxnbHlwaHM6W119LGFsdGVybmF0ZVNldHM6W119KTtMLmFzc2VydCgxPT09YS5jb3ZlcmFnZS5mb3JtYXQsXCJMaWdhdHVyZTogdW5hYmxlIHRvIG1vZGlmeSBjb3ZlcmFnZSB0YWJsZSBmb3JtYXQgXCIrYS5jb3ZlcmFnZS5mb3JtYXQpO3ZhciBvPXQuc3ViLGk9dGhpcy5iaW5TZWFyY2goYS5jb3ZlcmFnZS5nbHlwaHMsbyk7aTwwJiYoaT0tMS1pLGEuY292ZXJhZ2UuZ2x5cGhzLnNwbGljZShpLDAsbyksYS5hbHRlcm5hdGVTZXRzLnNwbGljZShpLDAsMCkpLGEuYWx0ZXJuYXRlU2V0c1tpXT10LmJ5fSx3dC5wcm90b3R5cGUuYWRkTGlnYXR1cmU9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9dGhpcy5nZXRMb29rdXBUYWJsZXMocixuLGUsNCwhMClbMF0sbz1hLnN1YnRhYmxlc1swXTtvfHwobz17c3Vic3RGb3JtYXQ6MSxjb3ZlcmFnZTp7Zm9ybWF0OjEsZ2x5cGhzOltdfSxsaWdhdHVyZVNldHM6W119LGEuc3VidGFibGVzWzBdPW8pLEwuYXNzZXJ0KDE9PT1vLmNvdmVyYWdlLmZvcm1hdCxcIkxpZ2F0dXJlOiB1bmFibGUgdG8gbW9kaWZ5IGNvdmVyYWdlIHRhYmxlIGZvcm1hdCBcIitvLmNvdmVyYWdlLmZvcm1hdCk7dmFyIGk9dC5zdWJbMF0scz10LnN1Yi5zbGljZSgxKSxsPXtsaWdHbHlwaDp0LmJ5LGNvbXBvbmVudHM6c30scD10aGlzLmJpblNlYXJjaChvLmNvdmVyYWdlLmdseXBocyxpKTtpZigwPD1wKXtmb3IodmFyIHU9by5saWdhdHVyZVNldHNbcF0sYz0wO2M8dS5sZW5ndGg7YysrKWlmKE10KHVbY10uY29tcG9uZW50cyxzKSlyZXR1cm47dS5wdXNoKGwpfWVsc2UgcD0tMS1wLG8uY292ZXJhZ2UuZ2x5cGhzLnNwbGljZShwLDAsaSksby5saWdhdHVyZVNldHMuc3BsaWNlKHAsMCxbbF0pfSx3dC5wcm90b3R5cGUuZ2V0RmVhdHVyZT1mdW5jdGlvbihlLHQscil7aWYoL3NzXFxkXFxkLy50ZXN0KGUpKXJldHVybiB0aGlzLmdldFNpbmdsZShlLHQscik7c3dpdGNoKGUpe2Nhc2VcImFhbHRcIjpjYXNlXCJzYWx0XCI6cmV0dXJuIHRoaXMuZ2V0U2luZ2xlKGUsdCxyKS5jb25jYXQodGhpcy5nZXRBbHRlcm5hdGVzKGUsdCxyKSk7Y2FzZVwiZGxpZ1wiOmNhc2VcImxpZ2FcIjpjYXNlXCJybGlnXCI6cmV0dXJuIHRoaXMuZ2V0TGlnYXR1cmVzKGUsdCxyKX19LHd0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSx0LHIsbil7aWYoL3NzXFxkXFxkLy50ZXN0KGUpKXJldHVybiB0aGlzLmFkZFNpbmdsZShlLHQscixuKTtzd2l0Y2goZSl7Y2FzZVwiYWFsdFwiOmNhc2VcInNhbHRcIjpyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdC5ieT90aGlzLmFkZFNpbmdsZShlLHQscixuKTp0aGlzLmFkZEFsdGVybmF0ZShlLHQscixuKTtjYXNlXCJkbGlnXCI6Y2FzZVwibGlnYVwiOmNhc2VcInJsaWdcIjpyZXR1cm4gdGhpcy5hZGRMaWdhdHVyZShlLHQscixuKX19O3ZhciBSdCxEdCxBdCxrdCxGdD17Z2V0UGF0aDpJdCxwYXJzZTpmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIGE9bmV3IHhlLkdseXBoU2V0KG4pLG89MDtvPHIubGVuZ3RoLTE7bys9MSl7dmFyIGk9cltvXTtpIT09cltvKzFdP2EucHVzaChvLHhlLnR0ZkdseXBoTG9hZGVyKG4sbyxPdCxlLHQraSxQdCkpOmEucHVzaChvLHhlLmdseXBoTG9hZGVyKG4sbykpfXJldHVybiBhfX07ZnVuY3Rpb24gVXQoZSl7dGhpcy5mb250PWUsdGhpcy5nZXRDb21tYW5kcz1mdW5jdGlvbihlKXtyZXR1cm4gRnQuZ2V0UGF0aChlKS5jb21tYW5kc30sdGhpcy5fZnBnbVN0YXRlPXRoaXMuX3ByZXBTdGF0ZT12b2lkIDAsdGhpcy5fZXJyb3JTdGF0ZT0wfWZ1bmN0aW9uIEJ0KGUpe3JldHVybiBlfWZ1bmN0aW9uIEd0KGUpe3JldHVybiBNYXRoLnNpZ24oZSkqTWF0aC5yb3VuZChNYXRoLmFicyhlKSl9ZnVuY3Rpb24ganQoZSl7cmV0dXJuIE1hdGguc2lnbihlKSpNYXRoLnJvdW5kKE1hdGguYWJzKDIqZSkpLzJ9ZnVuY3Rpb24gVnQoZSl7cmV0dXJuIE1hdGguc2lnbihlKSooTWF0aC5yb3VuZChNYXRoLmFicyhlKSsuNSktLjUpfWZ1bmN0aW9uIHp0KGUpe3JldHVybiBNYXRoLnNpZ24oZSkqTWF0aC5jZWlsKE1hdGguYWJzKGUpKX1mdW5jdGlvbiBIdChlKXtyZXR1cm4gTWF0aC5zaWduKGUpKk1hdGguZmxvb3IoTWF0aC5hYnMoZSkpfWZ1bmN0aW9uIFd0KGUpe3ZhciB0PXRoaXMuc3JQZXJpb2Qscj10aGlzLnNyUGhhc2Usbj0xO3JldHVybiBlPDAmJihlPS1lLG49LTEpLGUrPXRoaXMuc3JUaHJlc2hvbGQtcixlPU1hdGgudHJ1bmMoZS90KSp0LChlKz1yKTwwP3IqbjplKm59dmFyIFh0PXt4OjEseTowLGF4aXM6XCJ4XCIsZGlzdGFuY2U6ZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuKHI/ZS54bzplLngpLShuP3QueG86dC54KX0saW50ZXJwb2xhdGU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGEsbyxpLHMsbCxwLHU7aWYoIW58fG49PT10aGlzKXJldHVybiBhPWUueG8tdC54byxvPWUueG8tci54byxsPXQueC10LnhvLHA9ci54LXIueG8sMD09PSh1PShpPU1hdGguYWJzKGEpKSsocz1NYXRoLmFicyhvKSkpP3ZvaWQoZS54PWUueG8rKGwrcCkvMik6dm9pZChlLng9ZS54bysobCpzK3AqaSkvdSk7YT1uLmRpc3RhbmNlKGUsdCwhMCwhMCksbz1uLmRpc3RhbmNlKGUsciwhMCwhMCksbD1uLmRpc3RhbmNlKHQsdCwhMSwhMCkscD1uLmRpc3RhbmNlKHIsciwhMSwhMCksMCE9PSh1PShpPU1hdGguYWJzKGEpKSsocz1NYXRoLmFicyhvKSkpP1h0LnNldFJlbGF0aXZlKGUsZSwobCpzK3AqaSkvdSxuLCEwKTpYdC5zZXRSZWxhdGl2ZShlLGUsKGwrcCkvMixuLCEwKX0sbm9ybWFsU2xvcGU6TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLHNldFJlbGF0aXZlOmZ1bmN0aW9uKGUsdCxyLG4sYSl7aWYobiYmbiE9PXRoaXMpe3ZhciBvPWE/dC54bzp0LngsaT1hP3QueW86dC55LHM9bytyKm4ueCxsPWkrcipuLnk7ZS54PXMrKGUueS1sKS9uLm5vcm1hbFNsb3BlfWVsc2UgZS54PShhP3QueG86dC54KStyfSxzbG9wZTowLHRvdWNoOmZ1bmN0aW9uKGUpe2UueFRvdWNoZWQ9ITB9LHRvdWNoZWQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUueFRvdWNoZWR9LHVudG91Y2g6ZnVuY3Rpb24oZSl7ZS54VG91Y2hlZD0hMX19LHF0PXt4OjAseToxLGF4aXM6XCJ5XCIsZGlzdGFuY2U6ZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuKHI/ZS55bzplLnkpLShuP3QueW86dC55KX0saW50ZXJwb2xhdGU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGEsbyxpLHMsbCxwLHU7aWYoIW58fG49PT10aGlzKXJldHVybiBhPWUueW8tdC55byxvPWUueW8tci55byxsPXQueS10LnlvLHA9ci55LXIueW8sMD09PSh1PShpPU1hdGguYWJzKGEpKSsocz1NYXRoLmFicyhvKSkpP3ZvaWQoZS55PWUueW8rKGwrcCkvMik6dm9pZChlLnk9ZS55bysobCpzK3AqaSkvdSk7YT1uLmRpc3RhbmNlKGUsdCwhMCwhMCksbz1uLmRpc3RhbmNlKGUsciwhMCwhMCksbD1uLmRpc3RhbmNlKHQsdCwhMSwhMCkscD1uLmRpc3RhbmNlKHIsciwhMSwhMCksMCE9PSh1PShpPU1hdGguYWJzKGEpKSsocz1NYXRoLmFicyhvKSkpP3F0LnNldFJlbGF0aXZlKGUsZSwobCpzK3AqaSkvdSxuLCEwKTpxdC5zZXRSZWxhdGl2ZShlLGUsKGwrcCkvMixuLCEwKX0sbm9ybWFsU2xvcGU6MCxzZXRSZWxhdGl2ZTpmdW5jdGlvbihlLHQscixuLGEpe2lmKG4mJm4hPT10aGlzKXt2YXIgbz1hP3QueG86dC54LGk9YT90LnlvOnQueSxzPW8rcipuLngsbD1pK3Iqbi55O2UueT1sK24ubm9ybWFsU2xvcGUqKGUueC1zKX1lbHNlIGUueT0oYT90LnlvOnQueSkrcn0sc2xvcGU6TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLHRvdWNoOmZ1bmN0aW9uKGUpe2UueVRvdWNoZWQ9ITB9LHRvdWNoZWQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUueVRvdWNoZWR9LHVudG91Y2g6ZnVuY3Rpb24oZSl7ZS55VG91Y2hlZD0hMX19O2Z1bmN0aW9uIFl0KGUsdCl7dGhpcy54PWUsdGhpcy55PXQsdGhpcy5heGlzPXZvaWQgMCx0aGlzLnNsb3BlPXQvZSx0aGlzLm5vcm1hbFNsb3BlPS1lL3QsT2JqZWN0LmZyZWV6ZSh0aGlzKX1mdW5jdGlvbiBadChlLHQpe3ZhciByPU1hdGguc3FydChlKmUrdCp0KTtyZXR1cm4gdC89ciwxPT09KGUvPXIpJiYwPT09dD9YdDowPT09ZSYmMT09PXQ/cXQ6bmV3IFl0KGUsdCl9ZnVuY3Rpb24gUXQoZSx0LHIsbil7dGhpcy54PXRoaXMueG89TWF0aC5yb3VuZCg2NCplKS82NCx0aGlzLnk9dGhpcy55bz1NYXRoLnJvdW5kKDY0KnQpLzY0LHRoaXMubGFzdFBvaW50T2ZDb250b3VyPXIsdGhpcy5vbkN1cnZlPW4sdGhpcy5wcmV2UG9pbnRPbkNvbnRvdXI9dm9pZCAwLHRoaXMubmV4dFBvaW50T25Db250b3VyPXZvaWQgMCx0aGlzLnhUb3VjaGVkPSExLHRoaXMueVRvdWNoZWQ9ITEsT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHRoaXMpfU9iamVjdC5mcmVlemUoWHQpLE9iamVjdC5mcmVlemUocXQpLFl0LnByb3RvdHlwZS5kaXN0YW5jZT1mdW5jdGlvbihlLHQscixuKXtyZXR1cm4gdGhpcy54Klh0LmRpc3RhbmNlKGUsdCxyLG4pK3RoaXMueSpxdC5kaXN0YW5jZShlLHQscixuKX0sWXQucHJvdG90eXBlLmludGVycG9sYXRlPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhLG8saSxzLGwscCx1O2k9bi5kaXN0YW5jZShlLHQsITAsITApLHM9bi5kaXN0YW5jZShlLHIsITAsITApLGE9bi5kaXN0YW5jZSh0LHQsITEsITApLG89bi5kaXN0YW5jZShyLHIsITEsITApLDAhPT0odT0obD1NYXRoLmFicyhpKSkrKHA9TWF0aC5hYnMocykpKT90aGlzLnNldFJlbGF0aXZlKGUsZSwoYSpwK28qbCkvdSxuLCEwKTp0aGlzLnNldFJlbGF0aXZlKGUsZSwoYStvKS8yLG4sITApfSxZdC5wcm90b3R5cGUuc2V0UmVsYXRpdmU9ZnVuY3Rpb24oZSx0LHIsbixhKXtuPW58fHRoaXM7dmFyIG89YT90LnhvOnQueCxpPWE/dC55bzp0Lnkscz1vK3Iqbi54LGw9aStyKm4ueSxwPW4ubm9ybWFsU2xvcGUsdT10aGlzLnNsb3BlLGM9ZS54LGQ9ZS55O2UueD0odSpjLXAqcytsLWQpLyh1LXApLGUueT11KihlLngtYykrZH0sWXQucHJvdG90eXBlLnRvdWNoPWZ1bmN0aW9uKGUpe2UueFRvdWNoZWQ9ITAsZS55VG91Y2hlZD0hMH0sUXQucHJvdG90eXBlLm5leHRUb3VjaGVkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLm5leHRQb2ludE9uQ29udG91cjshZS50b3VjaGVkKHQpJiZ0IT09dGhpczspdD10Lm5leHRQb2ludE9uQ29udG91cjtyZXR1cm4gdH0sUXQucHJvdG90eXBlLnByZXZUb3VjaGVkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLnByZXZQb2ludE9uQ29udG91cjshZS50b3VjaGVkKHQpJiZ0IT09dGhpczspdD10LnByZXZQb2ludE9uQ29udG91cjtyZXR1cm4gdH07dmFyIEt0PU9iamVjdC5mcmVlemUobmV3IFF0KDAsMCkpLEp0PXtjdkN1dEluOjE3LzE2LGRlbHRhQmFzZTo5LGRlbHRhU2hpZnQ6LjEyNSxsb29wOjEsbWluRGlzOjEsYXV0b0ZsaXA6ITB9O2Z1bmN0aW9uICR0KGUsdCl7c3dpdGNoKHRoaXMuZW52PWUsdGhpcy5zdGFjaz1bXSx0aGlzLnByb2c9dCxlKXtjYXNlXCJnbHlmXCI6dGhpcy56cDA9dGhpcy56cDE9dGhpcy56cDI9MSx0aGlzLnJwMD10aGlzLnJwMT10aGlzLnJwMj0wO2Nhc2VcInByZXBcIjp0aGlzLmZ2PXRoaXMucHY9dGhpcy5kcHY9WHQsdGhpcy5yb3VuZD1HdH19ZnVuY3Rpb24gZXIoZSl7Zm9yKHZhciB0PWUudFpvbmU9bmV3IEFycmF5KGUuZ1pvbmUubGVuZ3RoKSxyPTA7cjx0Lmxlbmd0aDtyKyspdFtyXT1uZXcgUXQoMCwwKX1mdW5jdGlvbiB0cihlLHQpe3ZhciByLG49ZS5wcm9nLGE9ZS5pcCxvPTE7ZG97aWYoODg9PT0ocj1uWysrYV0pKW8rKztlbHNlIGlmKDg5PT09cilvLS07ZWxzZSBpZig2ND09PXIpYSs9blthKzFdKzE7ZWxzZSBpZig2NT09PXIpYSs9MipuW2ErMV0rMTtlbHNlIGlmKDE3Njw9ciYmcjw9MTgzKWErPXItMTc2KzE7ZWxzZSBpZigxODQ8PXImJnI8PTE5MSlhKz0yKihyLTE4NCsxKTtlbHNlIGlmKHQmJjE9PT1vJiYyNz09PXIpYnJlYWt9d2hpbGUoMDxvKTtlLmlwPWF9ZnVuY3Rpb24gcnIoZSx0KXtFLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJTVlRDQVtcIitlLmF4aXMrXCJdXCIpLHQuZnY9dC5wdj10LmRwdj1lfWZ1bmN0aW9uIG5yKGUsdCl7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiU1BWVENBW1wiK2UuYXhpcytcIl1cIiksdC5wdj10LmRwdj1lfWZ1bmN0aW9uIGFyKGUsdCl7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiU0ZWVENBW1wiK2UuYXhpcytcIl1cIiksdC5mdj1lfWZ1bmN0aW9uIG9yKGUsdCl7dmFyIHIsbixhPXQuc3RhY2ssbz1hLnBvcCgpLGk9YS5wb3AoKSxzPXQuejJbb10sbD10LnoxW2ldO0UuREVCVUcmJmNvbnNvbGUubG9nKFwiU1BWVExbXCIrZStcIl1cIixvLGkpLG49ZT8ocj1zLnktbC55LGwueC1zLngpOihyPWwueC1zLngsbC55LXMueSksdC5wdj10LmRwdj1adChyLG4pfWZ1bmN0aW9uIGlyKGUsdCl7dmFyIHIsbixhPXQuc3RhY2ssbz1hLnBvcCgpLGk9YS5wb3AoKSxzPXQuejJbb10sbD10LnoxW2ldO0UuREVCVUcmJmNvbnNvbGUubG9nKFwiU0ZWVExbXCIrZStcIl1cIixvLGkpLG49ZT8ocj1zLnktbC55LGwueC1zLngpOihyPWwueC1zLngsbC55LXMueSksdC5mdj1adChyLG4pfWZ1bmN0aW9uIHNyKGUpe0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlBPUFtdXCIpLGUuc3RhY2sucG9wKCl9ZnVuY3Rpb24gbHIoZSx0KXt2YXIgcj10LnN0YWNrLnBvcCgpLG49dC56MFtyXSxhPXQuZnYsbz10LnB2O0UuREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIk1EQVBbXCIrZStcIl1cIixyKTt2YXIgaT1vLmRpc3RhbmNlKG4sS3QpO2UmJihpPXQucm91bmQoaSkpLGEuc2V0UmVsYXRpdmUobixLdCxpLG8pLGEudG91Y2gobiksdC5ycDA9dC5ycDE9cn1mdW5jdGlvbiBwcihlLHQpe3ZhciByLG4sYSxvPXQuejIsaT1vLmxlbmd0aC0yO0UuREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIklVUFtcIitlLmF4aXMrXCJdXCIpO2Zvcih2YXIgcz0wO3M8aTtzKyspcj1vW3NdLGUudG91Y2hlZChyKXx8KG49ci5wcmV2VG91Y2hlZChlKSkhPT1yJiYobj09PShhPXIubmV4dFRvdWNoZWQoZSkpJiZlLnNldFJlbGF0aXZlKHIscixlLmRpc3RhbmNlKG4sbiwhMSwhMCksZSwhMCksZS5pbnRlcnBvbGF0ZShyLG4sYSxlKSl9ZnVuY3Rpb24gdXIoZSx0KXtmb3IodmFyIHI9dC5zdGFjayxuPWU/dC5ycDE6dC5ycDIsYT0oZT90LnowOnQuejEpW25dLG89dC5mdixpPXQucHYscz10Lmxvb3AsbD10LnoyO3MtLTspe3ZhciBwPXIucG9wKCksdT1sW3BdLGM9aS5kaXN0YW5jZShhLGEsITEsITApO28uc2V0UmVsYXRpdmUodSx1LGMsaSksby50b3VjaCh1KSxFLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsKDE8dC5sb29wP1wibG9vcCBcIisodC5sb29wLXMpK1wiOiBcIjpcIlwiKStcIlNIUFtcIisoZT9cInJwMVwiOlwicnAyXCIpK1wiXVwiLHApfXQubG9vcD0xfWZ1bmN0aW9uIGNyKGUsdCl7dmFyIHI9dC5zdGFjayxuPWU/dC5ycDE6dC5ycDIsYT0oZT90LnowOnQuejEpW25dLG89dC5mdixpPXQucHYscz1yLnBvcCgpLGw9dC56Mlt0LmNvbnRvdXJzW3NdXSxwPWw7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiU0hDW1wiK2UrXCJdXCIscyk7Zm9yKHZhciB1PWkuZGlzdGFuY2UoYSxhLCExLCEwKTtwIT09YSYmby5zZXRSZWxhdGl2ZShwLHAsdSxpKSwocD1wLm5leHRQb2ludE9uQ29udG91cikhPT1sOyk7fWZ1bmN0aW9uIGRyKGUsdCl7dmFyIHIsbixhPXQuc3RhY2ssbz1lP3QucnAxOnQucnAyLGk9KGU/dC56MDp0LnoxKVtvXSxzPXQuZnYsbD10LnB2LHA9YS5wb3AoKTtzd2l0Y2goRS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiU0haW1wiK2UrXCJdXCIscCkscCl7Y2FzZSAwOnI9dC50Wm9uZTticmVhaztjYXNlIDE6cj10Lmdab25lO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB6b25lXCIpfWZvcih2YXIgdT1sLmRpc3RhbmNlKGksaSwhMSwhMCksYz1yLmxlbmd0aC0yLGQ9MDtkPGM7ZCsrKW49cltkXSxzLnNldFJlbGF0aXZlKG4sbix1LGwpfWZ1bmN0aW9uIGhyKGUsdCl7dmFyIHI9dC5zdGFjayxuPXIucG9wKCkvNjQsYT1yLnBvcCgpLG89dC56MVthXSxpPXQuejBbdC5ycDBdLHM9dC5mdixsPXQucHY7cy5zZXRSZWxhdGl2ZShvLGksbixsKSxzLnRvdWNoKG8pLEUuREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIk1TSVJQW1wiK2UrXCJdXCIsbixhKSx0LnJwMT10LnJwMCx0LnJwMj1hLGUmJih0LnJwMD1hKX1mdW5jdGlvbiBtcihlLHQpe3ZhciByPXQuc3RhY2ssbj1yLnBvcCgpLGE9ci5wb3AoKSxvPXQuejBbYV0saT10LmZ2LHM9dC5wdixsPXQuY3Z0W25dO0UuREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIk1JQVBbXCIrZStcIl1cIixuLFwiKFwiLGwsXCIpXCIsYSk7dmFyIHA9cy5kaXN0YW5jZShvLEt0KTtlJiYoTWF0aC5hYnMocC1sKTx0LmN2Q3V0SW4mJihwPWwpLHA9dC5yb3VuZChwKSksaS5zZXRSZWxhdGl2ZShvLEt0LHAscyksMD09PXQuenAwJiYoby54bz1vLngsby55bz1vLnkpLGkudG91Y2gobyksdC5ycDA9dC5ycDE9YX1mdW5jdGlvbiBmcihlLHQpe3ZhciByPXQuc3RhY2ssbj1yLnBvcCgpLGE9dC56MltuXTtFLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJHQ1tcIitlK1wiXVwiLG4pLHIucHVzaCg2NCp0LmRwdi5kaXN0YW5jZShhLEt0LGUsITEpKX1mdW5jdGlvbiB5cihlLHQpe3ZhciByPXQuc3RhY2ssbj1yLnBvcCgpLGE9ci5wb3AoKSxvPXQuejFbbl0saT10LnowW2FdLHM9dC5kcHYuZGlzdGFuY2UoaSxvLGUsZSk7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiTURbXCIrZStcIl1cIixuLGEsXCItPlwiLHMpLHQuc3RhY2sucHVzaChNYXRoLnJvdW5kKDY0KnMpKX1mdW5jdGlvbiBncihlLHQpe3ZhciByPXQuc3RhY2ssbj1yLnBvcCgpLGE9dC5mdixvPXQucHYsaT10LnBwZW0scz10LmRlbHRhQmFzZSsxNiooZS0xKSxsPXQuZGVsdGFTaGlmdCxwPXQuejA7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiREVMVEFQW1wiK2UrXCJdXCIsbixyKTtmb3IodmFyIHU9MDt1PG47dSsrKXt2YXIgYz1yLnBvcCgpLGQ9ci5wb3AoKTtpZihzKygoMjQwJmQpPj40KT09PWkpe3ZhciBoPSgxNSZkKS04OzA8PWgmJmgrKyxFLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJERUxUQVBGSVhcIixjLFwiYnlcIixoKmwpO3ZhciBtPXBbY107YS5zZXRSZWxhdGl2ZShtLG0saCpsLG8pfX19ZnVuY3Rpb24gdnIoZSx0KXt2YXIgcj10LnN0YWNrLG49ci5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJST1VORFtdXCIpLHIucHVzaCg2NCp0LnJvdW5kKG4vNjQpKX1mdW5jdGlvbiBicihlLHQpe3ZhciByPXQuc3RhY2ssbj1yLnBvcCgpLGE9dC5wcGVtLG89dC5kZWx0YUJhc2UrMTYqKGUtMSksaT10LmRlbHRhU2hpZnQ7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiREVMVEFDW1wiK2UrXCJdXCIsbixyKTtmb3IodmFyIHM9MDtzPG47cysrKXt2YXIgbD1yLnBvcCgpLHA9ci5wb3AoKTtpZihvKygoMjQwJnApPj40KT09PWEpe3ZhciB1PSgxNSZwKS04OzA8PXUmJnUrKzt2YXIgYz11Kmk7RS5ERUJVRyYmY29uc29sZS5sb2codC5zdGVwLFwiREVMVEFDRklYXCIsbCxcImJ5XCIsYyksdC5jdnRbbF0rPWN9fX1mdW5jdGlvbiBfcihlLHQpe3ZhciByLG4sYT10LnN0YWNrLG89YS5wb3AoKSxpPWEucG9wKCkscz10LnoyW29dLGw9dC56MVtpXTtFLkRFQlVHJiZjb25zb2xlLmxvZyh0LnN0ZXAsXCJTRFBWVExbXCIrZStcIl1cIixvLGkpLG49ZT8ocj1zLnktbC55LGwueC1zLngpOihyPWwueC1zLngsbC55LXMueSksdC5kcHY9WnQocixuKX1mdW5jdGlvbiB4cihlLHQpe3ZhciByPXQuc3RhY2ssbj10LnByb2csYT10LmlwO0UuREVCVUcmJmNvbnNvbGUubG9nKHQuc3RlcCxcIlBVU0hCW1wiK2UrXCJdXCIpO2Zvcih2YXIgbz0wO288ZTtvKyspci5wdXNoKG5bKythXSk7dC5pcD1hfWZ1bmN0aW9uIFNyKGUsdCl7dmFyIHI9dC5pcCxuPXQucHJvZyxhPXQuc3RhY2s7RS5ERUJVRyYmY29uc29sZS5sb2codC5pcCxcIlBVU0hXW1wiK2UrXCJdXCIpO2Zvcih2YXIgbz0wO288ZTtvKyspe3ZhciBpPW5bKytyXTw8OHxuWysrcl07MzI3NjgmaSYmKGk9LSgxKyg2NTUzNV5pKSkpLGEucHVzaChpKX10LmlwPXJ9ZnVuY3Rpb24gd3IoZSx0LHIsbixhLG8pe3ZhciBpLHMsbCxwLHU9by5zdGFjayxjPWUmJnUucG9wKCksZD11LnBvcCgpLGg9by5ycDAsbT1vLnowW2hdLGY9by56MVtkXSx5PW8ubWluRGlzLGc9by5mdix2PW8uZHB2O2w9MDw9KHM9aT12LmRpc3RhbmNlKGYsbSwhMCwhMCkpPzE6LTEscz1NYXRoLmFicyhzKSxlJiYocD1vLmN2dFtjXSxuJiZNYXRoLmFicyhzLXApPG8uY3ZDdXRJbiYmKHM9cCkpLHImJnM8eSYmKHM9eSksbiYmKHM9by5yb3VuZChzKSksZy5zZXRSZWxhdGl2ZShmLG0sbCpzLHYpLGcudG91Y2goZiksRS5ERUJVRyYmY29uc29sZS5sb2coby5zdGVwLChlP1wiTUlSUFtcIjpcIk1EUlBbXCIpKyh0P1wiTVwiOlwibVwiKSsocj9cIj5cIjpcIl9cIikrKG4/XCJSXCI6XCJfXCIpKygwPT09YT9cIkdyXCI6MT09PWE/XCJCbFwiOjI9PT1hP1wiV2hcIjpcIlwiKStcIl1cIixlP2MrXCIoXCIrby5jdnRbY10rXCIsXCIrcCtcIilcIjpcIlwiLGQsXCIoZCA9XCIsaSxcIi0+XCIsbCpzLFwiKVwiKSxvLnJwMT1vLnJwMCxvLnJwMj1kLHQmJihvLnJwMD1kKX1VdC5wcm90b3R5cGUuZXhlYz1mdW5jdGlvbihlLHQpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0KXRocm93IG5ldyBFcnJvcihcIlBvaW50IHNpemUgaXMgbm90IGEgbnVtYmVyIVwiKTtpZighKDI8dGhpcy5fZXJyb3JTdGF0ZSkpe3ZhciByPXRoaXMuZm9udCxuPXRoaXMuX3ByZXBTdGF0ZTtpZighbnx8bi5wcGVtIT09dCl7dmFyIGE9dGhpcy5fZnBnbVN0YXRlO2lmKCFhKXskdC5wcm90b3R5cGU9SnQsKGE9dGhpcy5fZnBnbVN0YXRlPW5ldyAkdChcImZwZ21cIixyLnRhYmxlcy5mcGdtKSkuZnVuY3M9W10sYS5mb250PXIsRS5ERUJVRyYmKGNvbnNvbGUubG9nKFwiLS0tRVhFQyBGUEdNLS0tXCIpLGEuc3RlcD0tMSk7dHJ5e0R0KGEpfWNhdGNoKGUpe3JldHVybiBjb25zb2xlLmxvZyhcIkhpbnRpbmcgZXJyb3IgaW4gRlBHTTpcIitlKSx2b2lkKHRoaXMuX2Vycm9yU3RhdGU9Myl9fSR0LnByb3RvdHlwZT1hLChuPXRoaXMuX3ByZXBTdGF0ZT1uZXcgJHQoXCJwcmVwXCIsci50YWJsZXMucHJlcCkpLnBwZW09dDt2YXIgbz1yLnRhYmxlcy5jdnQ7aWYobylmb3IodmFyIGk9bi5jdnQ9bmV3IEFycmF5KG8ubGVuZ3RoKSxzPXQvci51bml0c1BlckVtLGw9MDtsPG8ubGVuZ3RoO2wrKylpW2xdPW9bbF0qcztlbHNlIG4uY3Z0PVtdO0UuREVCVUcmJihjb25zb2xlLmxvZyhcIi0tLUVYRUMgUFJFUC0tLVwiKSxuLnN0ZXA9LTEpO3RyeXtEdChuKX1jYXRjaChlKXt0aGlzLl9lcnJvclN0YXRlPDImJmNvbnNvbGUubG9nKFwiSGludGluZyBlcnJvciBpbiBQUkVQOlwiK2UpLHRoaXMuX2Vycm9yU3RhdGU9Mn19aWYoISgxPHRoaXMuX2Vycm9yU3RhdGUpKXRyeXtyZXR1cm4gQXQoZSxuKX1jYXRjaChlKXtyZXR1cm4gdGhpcy5fZXJyb3JTdGF0ZTwxJiYoY29uc29sZS5sb2coXCJIaW50aW5nIGVycm9yOlwiK2UpLGNvbnNvbGUubG9nKFwiTm90ZTogZnVydGhlciBoaW50aW5nIGVycm9ycyBhcmUgc2lsZW5jZWRcIikpLHZvaWQodGhpcy5fZXJyb3JTdGF0ZT0xKX19fSxBdD1mdW5jdGlvbihlLHQpe3ZhciByLG4sYSxvPXQucHBlbS90LmZvbnQudW5pdHNQZXJFbSxpPW8scz1lLmNvbXBvbmVudHM7aWYoJHQucHJvdG90eXBlPXQscyl7dmFyIGw9dC5mb250O249W10scj1bXTtmb3IodmFyIHA9MDtwPHMubGVuZ3RoO3ArKyl7dmFyIHU9c1twXSxjPWwuZ2x5cGhzLmdldCh1LmdseXBoSW5kZXgpO2E9bmV3ICR0KFwiZ2x5ZlwiLGMuaW5zdHJ1Y3Rpb25zKSxFLkRFQlVHJiYoY29uc29sZS5sb2coXCItLS1FWEVDIENPTVAgXCIrcCtcIi0tLVwiKSxhLnN0ZXA9LTEpLGt0KGMsYSxvLGkpO2Zvcih2YXIgZD1NYXRoLnJvdW5kKHUuZHgqbyksaD1NYXRoLnJvdW5kKHUuZHkqaSksbT1hLmdab25lLGY9YS5jb250b3Vycyx5PTA7eTxtLmxlbmd0aDt5Kyspe3ZhciBnPW1beV07Zy54VG91Y2hlZD1nLnlUb3VjaGVkPSExLGcueG89Zy54PWcueCtkLGcueW89Zy55PWcueStofXZhciB2PW4ubGVuZ3RoO24ucHVzaC5hcHBseShuLG0pO2Zvcih2YXIgYj0wO2I8Zi5sZW5ndGg7YisrKXIucHVzaChmW2JdK3YpfWUuaW5zdHJ1Y3Rpb25zJiYhYS5pbmhpYml0R3JpZEZpdCYmKChhPW5ldyAkdChcImdseWZcIixlLmluc3RydWN0aW9ucykpLmdab25lPWEuejA9YS56MT1hLnoyPW4sYS5jb250b3Vycz1yLG4ucHVzaChuZXcgUXQoMCwwKSxuZXcgUXQoTWF0aC5yb3VuZChlLmFkdmFuY2VXaWR0aCpvKSwwKSksRS5ERUJVRyYmKGNvbnNvbGUubG9nKFwiLS0tRVhFQyBDT01QT1NJVEUtLS1cIiksYS5zdGVwPS0xKSxEdChhKSxuLmxlbmd0aC09Mil9ZWxzZSBhPW5ldyAkdChcImdseWZcIixlLmluc3RydWN0aW9ucyksRS5ERUJVRyYmKGNvbnNvbGUubG9nKFwiLS0tRVhFQyBHTFlQSC0tLVwiKSxhLnN0ZXA9LTEpLGt0KGUsYSxvLGkpLG49YS5nWm9uZTtyZXR1cm4gbn0sa3Q9ZnVuY3Rpb24oZSx0LHIsbil7Zm9yKHZhciBhLG8saSxzPWUucG9pbnRzfHxbXSxsPXMubGVuZ3RoLHA9dC5nWm9uZT10LnowPXQuejE9dC56Mj1bXSx1PXQuY29udG91cnM9W10sYz0wO2M8bDtjKyspYT1zW2NdLHBbY109bmV3IFF0KGEueCpyLGEueSpuLGEubGFzdFBvaW50T2ZDb250b3VyLGEub25DdXJ2ZSk7Zm9yKHZhciBkPTA7ZDxsO2QrKylhPXBbZF0sb3x8KG89YSx1LnB1c2goZCkpLGEubGFzdFBvaW50T2ZDb250b3VyPygoYS5uZXh0UG9pbnRPbkNvbnRvdXI9bykucHJldlBvaW50T25Db250b3VyPWEsbz12b2lkIDApOihpPXBbZCsxXSwoYS5uZXh0UG9pbnRPbkNvbnRvdXI9aSkucHJldlBvaW50T25Db250b3VyPWEpO2lmKCF0LmluaGliaXRHcmlkRml0KXtpZihFLkRFQlVHKXtjb25zb2xlLmxvZyhcIlBST0NFU1NJTkcgR0xZUEhcIix0LnN0YWNrKTtmb3IodmFyIGg9MDtoPGw7aCsrKWNvbnNvbGUubG9nKGgscFtoXS54LHBbaF0ueSl9aWYocC5wdXNoKG5ldyBRdCgwLDApLG5ldyBRdChNYXRoLnJvdW5kKGUuYWR2YW5jZVdpZHRoKnIpLDApKSxEdCh0KSxwLmxlbmd0aC09MixFLkRFQlVHKXtjb25zb2xlLmxvZyhcIkZJTklTSEVEIEdMWVBIXCIsdC5zdGFjayk7Zm9yKHZhciBtPTA7bTxsO20rKyljb25zb2xlLmxvZyhtLHBbbV0ueCxwW21dLnkpfX19LER0PWZ1bmN0aW9uKGUpe3ZhciB0PWUucHJvZztpZih0KXt2YXIgcixuPXQubGVuZ3RoO2ZvcihlLmlwPTA7ZS5pcDxuO2UuaXArKyl7aWYoRS5ERUJVRyYmZS5zdGVwKyssIShyPVJ0W3RbZS5pcF1dKSl0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIGluc3RydWN0aW9uOiAweFwiK051bWJlcih0W2UuaXBdKS50b1N0cmluZygxNikpO3IoZSl9fX0sUnQ9W3JyLmJpbmQodm9pZCAwLHF0KSxyci5iaW5kKHZvaWQgMCxYdCksbnIuYmluZCh2b2lkIDAscXQpLG5yLmJpbmQodm9pZCAwLFh0KSxhci5iaW5kKHZvaWQgMCxxdCksYXIuYmluZCh2b2lkIDAsWHQpLG9yLmJpbmQodm9pZCAwLDApLG9yLmJpbmQodm9pZCAwLDEpLGlyLmJpbmQodm9pZCAwLDApLGlyLmJpbmQodm9pZCAwLDEpLGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTUFZGU1tdXCIscixuKSxlLnB2PWUuZHB2PVp0KG4scil9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTUFZGU1tdXCIscixuKSxlLmZ2PVp0KG4scil9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj1lLnB2O0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkdQVltdXCIpLHQucHVzaCgxNjM4NCpyLngpLHQucHVzaCgxNjM4NCpyLnkpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9ZS5mdjtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJHRlZbXVwiKSx0LnB1c2goMTYzODQqci54KSx0LnB1c2goMTYzODQqci55KX0sZnVuY3Rpb24oZSl7ZS5mdj1lLnB2LEUuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNGVlRQVltdXCIpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCksYT10LnBvcCgpLG89dC5wb3AoKSxpPXQucG9wKCkscz1lLnowLGw9ZS56MSxwPXNbcl0sdT1zW25dLGM9bFthXSxkPWxbb10saD1lLnoyW2ldO0UuREVCVUcmJmNvbnNvbGUubG9nKFwiSVNFQ1RbXSwgXCIscixuLGEsbyxpKTt2YXIgbT1wLngsZj1wLnkseT11LngsZz11Lnksdj1jLngsYj1jLnksXz1kLngseD1kLnksUz0obS15KSooYi14KS0oZi1nKSoodi1fKSx3PW0qZy1mKnksTT12KngtYipfO2gueD0odyoodi1fKS1NKihtLXkpKS9TLGgueT0odyooYi14KS1NKihmLWcpKS9TfSxmdW5jdGlvbihlKXtlLnJwMD1lLnN0YWNrLnBvcCgpLEUuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNSUDBbXVwiLGUucnAwKX0sZnVuY3Rpb24oZSl7ZS5ycDE9ZS5zdGFjay5wb3AoKSxFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTUlAxW11cIixlLnJwMSl9LGZ1bmN0aW9uKGUpe2UucnAyPWUuc3RhY2sucG9wKCksRS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1JQMltdXCIsZS5ycDIpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO3N3aXRjaChFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTWlAwW11cIix0KSxlLnpwMD10KXtjYXNlIDA6ZS50Wm9uZXx8ZXIoZSksZS56MD1lLnRab25lO2JyZWFrO2Nhc2UgMTplLnowPWUuZ1pvbmU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHpvbmUgcG9pbnRlclwiKX19LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7c3dpdGNoKEUuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNaUDFbXVwiLHQpLGUuenAxPXQpe2Nhc2UgMDplLnRab25lfHxlcihlKSxlLnoxPWUudFpvbmU7YnJlYWs7Y2FzZSAxOmUuejE9ZS5nWm9uZTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIkludmFsaWQgem9uZSBwb2ludGVyXCIpfX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtzd2l0Y2goRS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU1pQMltdXCIsdCksZS56cDI9dCl7Y2FzZSAwOmUudFpvbmV8fGVyKGUpLGUuejI9ZS50Wm9uZTticmVhaztjYXNlIDE6ZS56Mj1lLmdab25lO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB6b25lIHBvaW50ZXJcIil9fSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO3N3aXRjaChFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTWlBTW11cIix0KSxlLnpwMD1lLnpwMT1lLnpwMj10LHQpe2Nhc2UgMDplLnRab25lfHxlcihlKSxlLnowPWUuejE9ZS56Mj1lLnRab25lO2JyZWFrO2Nhc2UgMTplLnowPWUuejE9ZS56Mj1lLmdab25lO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB6b25lIHBvaW50ZXJcIil9fSxmdW5jdGlvbihlKXtlLmxvb3A9ZS5zdGFjay5wb3AoKSxFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTTE9PUFtdXCIsZS5sb29wKX0sZnVuY3Rpb24oZSl7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUlRHW11cIiksZS5yb3VuZD1HdH0sZnVuY3Rpb24oZSl7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUlRIR1tdXCIpLGUucm91bmQ9VnR9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU01EW11cIix0KSxlLm1pbkRpcz10LzY0fSxmdW5jdGlvbihlKXtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJFTFNFW11cIiksdHIoZSwhMSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiSk1QUltdXCIsdCksZS5pcCs9dC0xfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNDVlRDSVtdXCIsdCksZS5jdkN1dEluPXQvNjR9LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjaztFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJEVVBbXVwiKSx0LnB1c2godFt0Lmxlbmd0aC0xXSl9LHNyLGZ1bmN0aW9uKGUpe0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkNMRUFSW11cIiksZS5zdGFjay5sZW5ndGg9MH0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNXQVBbXVwiKSx0LnB1c2gociksdC5wdXNoKG4pfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkRFUFRIW11cIiksdC5wdXNoKHQubGVuZ3RoKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiQ0lOREVYW11cIixyKSx0LnB1c2godFt0Lmxlbmd0aC1yXSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk1JTkRFWFtdXCIsciksdC5wdXNoKHQuc3BsaWNlKHQubGVuZ3RoLXIsMSlbMF0pfSx2b2lkIDAsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTE9PUENBTExbXVwiLHIsbik7dmFyIGE9ZS5pcCxvPWUucHJvZztlLnByb2c9ZS5mdW5jc1tyXTtmb3IodmFyIGk9MDtpPG47aSsrKUR0KGUpLEUuREVCVUcmJmNvbnNvbGUubG9nKCsrZS5zdGVwLGkrMTxuP1wibmV4dCBsb29wY2FsbFwiOlwiZG9uZSBsb29wY2FsbFwiLGkpO2UuaXA9YSxlLnByb2c9b30sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJDQUxMW11cIix0KTt2YXIgcj1lLmlwLG49ZS5wcm9nO2UucHJvZz1lLmZ1bmNzW3RdLER0KGUpLGUuaXA9cixlLnByb2c9bixFLkRFQlVHJiZjb25zb2xlLmxvZygrK2Uuc3RlcCxcInJldHVybmluZyBmcm9tXCIsdCl9LGZ1bmN0aW9uKGUpe2lmKFwiZnBnbVwiIT09ZS5lbnYpdGhyb3cgbmV3IEVycm9yKFwiRkRFRiBub3QgYWxsb3dlZCBoZXJlXCIpO3ZhciB0PWUuc3RhY2sscj1lLnByb2csbj1lLmlwLGE9dC5wb3AoKSxvPW47Zm9yKEUuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkZERUZbXVwiLGEpOzQ1IT09clsrK25dOyk7ZS5pcD1uLGUuZnVuY3NbYV09ci5zbGljZShvKzEsbil9LHZvaWQgMCxsci5iaW5kKHZvaWQgMCwwKSxsci5iaW5kKHZvaWQgMCwxKSxwci5iaW5kKHZvaWQgMCxxdCkscHIuYmluZCh2b2lkIDAsWHQpLHVyLmJpbmQodm9pZCAwLDApLHVyLmJpbmQodm9pZCAwLDEpLGNyLmJpbmQodm9pZCAwLDApLGNyLmJpbmQodm9pZCAwLDEpLGRyLmJpbmQodm9pZCAwLDApLGRyLmJpbmQodm9pZCAwLDEpLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLnN0YWNrLHI9ZS5sb29wLG49ZS5mdixhPXQucG9wKCkvNjQsbz1lLnoyO3ItLTspe3ZhciBpPXQucG9wKCkscz1vW2ldO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCwoMTxlLmxvb3A/XCJsb29wIFwiKyhlLmxvb3AtcikrXCI6IFwiOlwiXCIpK1wiU0hQSVhbXVwiLGksYSksbi5zZXRSZWxhdGl2ZShzLHMsYSksbi50b3VjaChzKX1lLmxvb3A9MX0sZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuc3RhY2sscj1lLnJwMSxuPWUucnAyLGE9ZS5sb29wLG89ZS56MFtyXSxpPWUuejFbbl0scz1lLmZ2LGw9ZS5kcHYscD1lLnoyO2EtLTspe3ZhciB1PXQucG9wKCksYz1wW3VdO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCwoMTxlLmxvb3A/XCJsb29wIFwiKyhlLmxvb3AtYSkrXCI6IFwiOlwiXCIpK1wiSVBbXVwiLHUscixcIjwtPlwiLG4pLHMuaW50ZXJwb2xhdGUoYyxvLGksbCkscy50b3VjaChjKX1lLmxvb3A9MX0saHIuYmluZCh2b2lkIDAsMCksaHIuYmluZCh2b2lkIDAsMSksZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuc3RhY2sscj1lLnJwMCxuPWUuejBbcl0sYT1lLmxvb3Asbz1lLmZ2LGk9ZS5wdixzPWUuejE7YS0tOyl7dmFyIGw9dC5wb3AoKSxwPXNbbF07RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLCgxPGUubG9vcD9cImxvb3AgXCIrKGUubG9vcC1hKStcIjogXCI6XCJcIikrXCJBTElHTlJQW11cIixsKSxvLnNldFJlbGF0aXZlKHAsbiwwLGkpLG8udG91Y2gocCl9ZS5sb29wPTF9LGZ1bmN0aW9uKGUpe0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlJUREdbXVwiKSxlLnJvdW5kPWp0fSxtci5iaW5kKHZvaWQgMCwwKSxtci5iaW5kKHZvaWQgMCwxKSxmdW5jdGlvbihlKXt2YXIgdD1lLnByb2cscj1lLmlwLG49ZS5zdGFjayxhPXRbKytyXTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJOUFVTSEJbXVwiLGEpO2Zvcih2YXIgbz0wO288YTtvKyspbi5wdXNoKHRbKytyXSk7ZS5pcD1yfSxmdW5jdGlvbihlKXt2YXIgdD1lLmlwLHI9ZS5wcm9nLG49ZS5zdGFjayxhPXJbKyt0XTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJOUFVTSFdbXVwiLGEpO2Zvcih2YXIgbz0wO288YTtvKyspe3ZhciBpPXJbKyt0XTw8OHxyWysrdF07MzI3NjgmaSYmKGk9LSgxKyg2NTUzNV5pKSkpLG4ucHVzaChpKX1lLmlwPXR9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj1lLnN0b3JlO3I9cnx8KGUuc3RvcmU9W10pO3ZhciBuPXQucG9wKCksYT10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIldTXCIsbixhKSxyW2FdPW59LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj1lLnN0b3JlLG49dC5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJSU1wiLG4pO3ZhciBhPXImJnJbbl18fDA7dC5wdXNoKGEpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiV0NWVFBcIixyLG4pLGUuY3Z0W25dPXIvNjR9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlJDVlRcIixyKSx0LnB1c2goNjQqZS5jdnRbcl0pfSxmci5iaW5kKHZvaWQgMCwwKSxmci5iaW5kKHZvaWQgMCwxKSx2b2lkIDAseXIuYmluZCh2b2lkIDAsMCkseXIuYmluZCh2b2lkIDAsMSksZnVuY3Rpb24oZSl7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTVBQRU1bXVwiKSxlLnN0YWNrLnB1c2goZS5wcGVtKX0sdm9pZCAwLGZ1bmN0aW9uKGUpe0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkZMSVBPTltdXCIpLGUuYXV0b0ZsaXA9ITB9LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkxUW11cIixyLG4pLHQucHVzaChuPHI/MTowKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkxURVFbXVwiLHIsbiksdC5wdXNoKG48PXI/MTowKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkdUW11cIixyLG4pLHQucHVzaChyPG4/MTowKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkdURVFbXVwiLHIsbiksdC5wdXNoKHI8PW4/MTowKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkVRW11cIixyLG4pLHQucHVzaChyPT09bj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTkVRW11cIixyLG4pLHQucHVzaChyIT09bj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJPRERbXVwiLHIpLHQucHVzaChNYXRoLnRydW5jKHIpJTI/MTowKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRVZFTltdXCIsciksdC5wdXNoKE1hdGgudHJ1bmMociklMj8wOjEpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIklGW11cIix0KSx0fHwodHIoZSwhMCksRS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiRUlGW11cIikpfSxmdW5jdGlvbihlKXtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJFSUZbXVwiKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkFORFtdXCIscixuKSx0LnB1c2gociYmbj8xOjApfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiT1JbXVwiLHIsbiksdC5wdXNoKHJ8fG4/MTowKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTk9UW11cIixyKSx0LnB1c2gocj8wOjEpfSxnci5iaW5kKHZvaWQgMCwxKSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNEQltdXCIsdCksZS5kZWx0YUJhc2U9dH0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjay5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJTRFNbXVwiLHQpLGUuZGVsdGFTaGlmdD1NYXRoLnBvdyguNSx0KX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkFERFtdXCIscixuKSx0LnB1c2gobityKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNVQltdXCIscixuKSx0LnB1c2gobi1yKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkRJVltdXCIscixuKSx0LnB1c2goNjQqbi9yKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk1VTFtdXCIscixuKSx0LnB1c2gobipyLzY0KX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiQUJTW11cIixyKSx0LnB1c2goTWF0aC5hYnMocikpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKTtFLkRFQlVHJiZjb25zb2xlLmxvZyhlLnN0ZXAsXCJORUdbXVwiLHIpLHQucHVzaCgtcil9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkZMT09SW11cIixyKSx0LnB1c2goNjQqTWF0aC5mbG9vcihyLzY0KSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIkNFSUxJTkdbXVwiLHIpLHQucHVzaCg2NCpNYXRoLmNlaWwoci82NCkpfSx2ci5iaW5kKHZvaWQgMCwwKSx2ci5iaW5kKHZvaWQgMCwxKSx2ci5iaW5kKHZvaWQgMCwyKSx2ci5iaW5kKHZvaWQgMCwzKSx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIldDVlRGW11cIixyLG4pLGUuY3Z0W25dPXIqZS5wcGVtL2UuZm9udC51bml0c1BlckVtfSxnci5iaW5kKHZvaWQgMCwyKSxnci5iaW5kKHZvaWQgMCwzKSxici5iaW5kKHZvaWQgMCwxKSxici5iaW5kKHZvaWQgMCwyKSxici5iaW5kKHZvaWQgMCwzKSxmdW5jdGlvbihlKXt2YXIgdCxyPWUuc3RhY2sucG9wKCk7c3dpdGNoKEUuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlNST1VORFtdXCIsciksZS5yb3VuZD1XdCwxOTImcil7Y2FzZSAwOnQ9LjU7YnJlYWs7Y2FzZSA2NDp0PTE7YnJlYWs7Y2FzZSAxMjg6dD0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBTUk9VTkQgdmFsdWVcIil9c3dpdGNoKGUuc3JQZXJpb2Q9dCw0OCZyKXtjYXNlIDA6ZS5zclBoYXNlPTA7YnJlYWs7Y2FzZSAxNjplLnNyUGhhc2U9LjI1KnQ7YnJlYWs7Y2FzZSAzMjplLnNyUGhhc2U9LjUqdDticmVhaztjYXNlIDQ4OmUuc3JQaGFzZT0uNzUqdDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcImludmFsaWQgU1JPVU5EIHZhbHVlXCIpfXImPTE1LGUuc3JUaHJlc2hvbGQ9MD09PXI/MDooci84LS41KSp0fSxmdW5jdGlvbihlKXt2YXIgdCxyPWUuc3RhY2sucG9wKCk7c3dpdGNoKEUuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlM0NVJPVU5EW11cIixyKSxlLnJvdW5kPVd0LDE5MiZyKXtjYXNlIDA6dD1NYXRoLnNxcnQoMikvMjticmVhaztjYXNlIDY0OnQ9TWF0aC5zcXJ0KDIpO2JyZWFrO2Nhc2UgMTI4OnQ9MipNYXRoLnNxcnQoMik7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIFM0NVJPVU5EIHZhbHVlXCIpfXN3aXRjaChlLnNyUGVyaW9kPXQsNDgmcil7Y2FzZSAwOmUuc3JQaGFzZT0wO2JyZWFrO2Nhc2UgMTY6ZS5zclBoYXNlPS4yNSp0O2JyZWFrO2Nhc2UgMzI6ZS5zclBoYXNlPS41KnQ7YnJlYWs7Y2FzZSA0ODplLnNyUGhhc2U9Ljc1KnQ7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIFM0NVJPVU5EIHZhbHVlXCIpfXImPTE1LGUuc3JUaHJlc2hvbGQ9MD09PXI/MDooci84LS41KSp0fSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKGUpe0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlJPRkZbXVwiKSxlLnJvdW5kPUJ0fSx2b2lkIDAsZnVuY3Rpb24oZSl7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUlVUR1tdXCIpLGUucm91bmQ9enR9LGZ1bmN0aW9uKGUpe0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIlJEVEdbXVwiKSxlLnJvdW5kPUh0fSxzcixzcix2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU0NBTkNUUkxbXVwiLHQpfSxfci5iaW5kKHZvaWQgMCwwKSxfci5iaW5kKHZvaWQgMCwxKSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPTA7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiR0VUSU5GT1tdXCIsciksMSZyJiYobj0zNSksMzImciYmKG58PTQwOTYpLHQucHVzaChuKX0sdm9pZCAwLGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sscj10LnBvcCgpLG49dC5wb3AoKSxhPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiUk9MTFtdXCIpLHQucHVzaChuKSx0LnB1c2gociksdC5wdXNoKGEpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLHI9dC5wb3AoKSxuPXQucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiTUFYW11cIixyLG4pLHQucHVzaChNYXRoLm1heChuLHIpKX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdGFjayxyPXQucG9wKCksbj10LnBvcCgpO0UuREVCVUcmJmNvbnNvbGUubG9nKGUuc3RlcCxcIk1JTltdXCIscixuKSx0LnB1c2goTWF0aC5taW4obixyKSl9LGZ1bmN0aW9uKGUpe3ZhciB0PWUuc3RhY2sucG9wKCk7RS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiU0NBTlRZUEVbXVwiLHQpfSxmdW5jdGlvbihlKXt2YXIgdD1lLnN0YWNrLnBvcCgpLHI9ZS5zdGFjay5wb3AoKTtzd2l0Y2goRS5ERUJVRyYmY29uc29sZS5sb2coZS5zdGVwLFwiSU5TVENUUkxbXVwiLHQsciksdCl7Y2FzZSAxOnJldHVybiB2b2lkKGUuaW5oaWJpdEdyaWRGaXQ9ISFyKTtjYXNlIDI6cmV0dXJuIHZvaWQoZS5pZ25vcmVDdnQ9ISFyKTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcImludmFsaWQgSU5TVENUUkxbXSBzZWxlY3RvclwiKX19LHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAsdm9pZCAwLHhyLmJpbmQodm9pZCAwLDEpLHhyLmJpbmQodm9pZCAwLDIpLHhyLmJpbmQodm9pZCAwLDMpLHhyLmJpbmQodm9pZCAwLDQpLHhyLmJpbmQodm9pZCAwLDUpLHhyLmJpbmQodm9pZCAwLDYpLHhyLmJpbmQodm9pZCAwLDcpLHhyLmJpbmQodm9pZCAwLDgpLFNyLmJpbmQodm9pZCAwLDEpLFNyLmJpbmQodm9pZCAwLDIpLFNyLmJpbmQodm9pZCAwLDMpLFNyLmJpbmQodm9pZCAwLDQpLFNyLmJpbmQodm9pZCAwLDUpLFNyLmJpbmQodm9pZCAwLDYpLFNyLmJpbmQodm9pZCAwLDcpLFNyLmJpbmQodm9pZCAwLDgpLHdyLmJpbmQodm9pZCAwLDAsMCwwLDAsMCksd3IuYmluZCh2b2lkIDAsMCwwLDAsMCwxKSx3ci5iaW5kKHZvaWQgMCwwLDAsMCwwLDIpLHdyLmJpbmQodm9pZCAwLDAsMCwwLDAsMyksd3IuYmluZCh2b2lkIDAsMCwwLDAsMSwwKSx3ci5iaW5kKHZvaWQgMCwwLDAsMCwxLDEpLHdyLmJpbmQodm9pZCAwLDAsMCwwLDEsMiksd3IuYmluZCh2b2lkIDAsMCwwLDAsMSwzKSx3ci5iaW5kKHZvaWQgMCwwLDAsMSwwLDApLHdyLmJpbmQodm9pZCAwLDAsMCwxLDAsMSksd3IuYmluZCh2b2lkIDAsMCwwLDEsMCwyKSx3ci5iaW5kKHZvaWQgMCwwLDAsMSwwLDMpLHdyLmJpbmQodm9pZCAwLDAsMCwxLDEsMCksd3IuYmluZCh2b2lkIDAsMCwwLDEsMSwxKSx3ci5iaW5kKHZvaWQgMCwwLDAsMSwxLDIpLHdyLmJpbmQodm9pZCAwLDAsMCwxLDEsMyksd3IuYmluZCh2b2lkIDAsMCwxLDAsMCwwKSx3ci5iaW5kKHZvaWQgMCwwLDEsMCwwLDEpLHdyLmJpbmQodm9pZCAwLDAsMSwwLDAsMiksd3IuYmluZCh2b2lkIDAsMCwxLDAsMCwzKSx3ci5iaW5kKHZvaWQgMCwwLDEsMCwxLDApLHdyLmJpbmQodm9pZCAwLDAsMSwwLDEsMSksd3IuYmluZCh2b2lkIDAsMCwxLDAsMSwyKSx3ci5iaW5kKHZvaWQgMCwwLDEsMCwxLDMpLHdyLmJpbmQodm9pZCAwLDAsMSwxLDAsMCksd3IuYmluZCh2b2lkIDAsMCwxLDEsMCwxKSx3ci5iaW5kKHZvaWQgMCwwLDEsMSwwLDIpLHdyLmJpbmQodm9pZCAwLDAsMSwxLDAsMyksd3IuYmluZCh2b2lkIDAsMCwxLDEsMSwwKSx3ci5iaW5kKHZvaWQgMCwwLDEsMSwxLDEpLHdyLmJpbmQodm9pZCAwLDAsMSwxLDEsMiksd3IuYmluZCh2b2lkIDAsMCwxLDEsMSwzKSx3ci5iaW5kKHZvaWQgMCwxLDAsMCwwLDApLHdyLmJpbmQodm9pZCAwLDEsMCwwLDAsMSksd3IuYmluZCh2b2lkIDAsMSwwLDAsMCwyKSx3ci5iaW5kKHZvaWQgMCwxLDAsMCwwLDMpLHdyLmJpbmQodm9pZCAwLDEsMCwwLDEsMCksd3IuYmluZCh2b2lkIDAsMSwwLDAsMSwxKSx3ci5iaW5kKHZvaWQgMCwxLDAsMCwxLDIpLHdyLmJpbmQodm9pZCAwLDEsMCwwLDEsMyksd3IuYmluZCh2b2lkIDAsMSwwLDEsMCwwKSx3ci5iaW5kKHZvaWQgMCwxLDAsMSwwLDEpLHdyLmJpbmQodm9pZCAwLDEsMCwxLDAsMiksd3IuYmluZCh2b2lkIDAsMSwwLDEsMCwzKSx3ci5iaW5kKHZvaWQgMCwxLDAsMSwxLDApLHdyLmJpbmQodm9pZCAwLDEsMCwxLDEsMSksd3IuYmluZCh2b2lkIDAsMSwwLDEsMSwyKSx3ci5iaW5kKHZvaWQgMCwxLDAsMSwxLDMpLHdyLmJpbmQodm9pZCAwLDEsMSwwLDAsMCksd3IuYmluZCh2b2lkIDAsMSwxLDAsMCwxKSx3ci5iaW5kKHZvaWQgMCwxLDEsMCwwLDIpLHdyLmJpbmQodm9pZCAwLDEsMSwwLDAsMyksd3IuYmluZCh2b2lkIDAsMSwxLDAsMSwwKSx3ci5iaW5kKHZvaWQgMCwxLDEsMCwxLDEpLHdyLmJpbmQodm9pZCAwLDEsMSwwLDEsMiksd3IuYmluZCh2b2lkIDAsMSwxLDAsMSwzKSx3ci5iaW5kKHZvaWQgMCwxLDEsMSwwLDApLHdyLmJpbmQodm9pZCAwLDEsMSwxLDAsMSksd3IuYmluZCh2b2lkIDAsMSwxLDEsMCwyKSx3ci5iaW5kKHZvaWQgMCwxLDEsMSwwLDMpLHdyLmJpbmQodm9pZCAwLDEsMSwxLDEsMCksd3IuYmluZCh2b2lkIDAsMSwxLDEsMSwxKSx3ci5iaW5kKHZvaWQgMCwxLDEsMSwxLDIpLHdyLmJpbmQodm9pZCAwLDEsMSwxLDEsMyldO3ZhciBNcj1BcnJheS5mcm9tfHxmdW5jdGlvbihlKXtyZXR1cm4gZS5tYXRjaCgvW1xcdUQ4MDAtXFx1REJGRl1bXFx1REMwMC1cXHVERkZGXT98W15cXHVEODAwLVxcdURGRkZdfC4vZyl8fFtdfTtmdW5jdGlvbiBFcihlKXsoZT1lfHx7fSkuZW1wdHl8fChDdChlLmZhbWlseU5hbWUsXCJXaGVuIGNyZWF0aW5nIGEgbmV3IEZvbnQgb2JqZWN0LCBmYW1pbHlOYW1lIGlzIHJlcXVpcmVkLlwiKSxDdChlLnN0eWxlTmFtZSxcIldoZW4gY3JlYXRpbmcgYSBuZXcgRm9udCBvYmplY3QsIHN0eWxlTmFtZSBpcyByZXF1aXJlZC5cIiksQ3QoZS51bml0c1BlckVtLFwiV2hlbiBjcmVhdGluZyBhIG5ldyBGb250IG9iamVjdCwgdW5pdHNQZXJFbSBpcyByZXF1aXJlZC5cIiksQ3QoZS5hc2NlbmRlcixcIldoZW4gY3JlYXRpbmcgYSBuZXcgRm9udCBvYmplY3QsIGFzY2VuZGVyIGlzIHJlcXVpcmVkLlwiKSxDdChlLmRlc2NlbmRlcixcIldoZW4gY3JlYXRpbmcgYSBuZXcgRm9udCBvYmplY3QsIGRlc2NlbmRlciBpcyByZXF1aXJlZC5cIiksQ3QoZS5kZXNjZW5kZXI8MCxcIkRlc2NlbmRlciBzaG91bGQgYmUgbmVnYXRpdmUgKGUuZy4gLTUxMikuXCIpLHRoaXMubmFtZXM9e2ZvbnRGYW1pbHk6e2VuOmUuZmFtaWx5TmFtZXx8XCIgXCJ9LGZvbnRTdWJmYW1pbHk6e2VuOmUuc3R5bGVOYW1lfHxcIiBcIn0sZnVsbE5hbWU6e2VuOmUuZnVsbE5hbWV8fGUuZmFtaWx5TmFtZStcIiBcIitlLnN0eWxlTmFtZX0scG9zdFNjcmlwdE5hbWU6e2VuOmUucG9zdFNjcmlwdE5hbWV8fChlLmZhbWlseU5hbWUrZS5zdHlsZU5hbWUpLnJlcGxhY2UoL1xccy9nLFwiXCIpfSxkZXNpZ25lcjp7ZW46ZS5kZXNpZ25lcnx8XCIgXCJ9LGRlc2lnbmVyVVJMOntlbjplLmRlc2lnbmVyVVJMfHxcIiBcIn0sbWFudWZhY3R1cmVyOntlbjplLm1hbnVmYWN0dXJlcnx8XCIgXCJ9LG1hbnVmYWN0dXJlclVSTDp7ZW46ZS5tYW51ZmFjdHVyZXJVUkx8fFwiIFwifSxsaWNlbnNlOntlbjplLmxpY2Vuc2V8fFwiIFwifSxsaWNlbnNlVVJMOntlbjplLmxpY2Vuc2VVUkx8fFwiIFwifSx2ZXJzaW9uOntlbjplLnZlcnNpb258fFwiVmVyc2lvbiAwLjFcIn0sZGVzY3JpcHRpb246e2VuOmUuZGVzY3JpcHRpb258fFwiIFwifSxjb3B5cmlnaHQ6e2VuOmUuY29weXJpZ2h0fHxcIiBcIn0sdHJhZGVtYXJrOntlbjplLnRyYWRlbWFya3x8XCIgXCJ9fSx0aGlzLnVuaXRzUGVyRW09ZS51bml0c1BlckVtfHwxZTMsdGhpcy5hc2NlbmRlcj1lLmFzY2VuZGVyLHRoaXMuZGVzY2VuZGVyPWUuZGVzY2VuZGVyLHRoaXMuY3JlYXRlZFRpbWVzdGFtcD1lLmNyZWF0ZWRUaW1lc3RhbXAsdGhpcy50YWJsZXM9e29zMjp7dXNXZWlnaHRDbGFzczplLndlaWdodENsYXNzfHx0aGlzLnVzV2VpZ2h0Q2xhc3Nlcy5NRURJVU0sdXNXaWR0aENsYXNzOmUud2lkdGhDbGFzc3x8dGhpcy51c1dpZHRoQ2xhc3Nlcy5NRURJVU0sZnNTZWxlY3Rpb246ZS5mc1NlbGVjdGlvbnx8dGhpcy5mc1NlbGVjdGlvblZhbHVlcy5SRUdVTEFSfX0pLHRoaXMuc3VwcG9ydGVkPSEwLHRoaXMuZ2x5cGhzPW5ldyB4ZS5HbHlwaFNldCh0aGlzLGUuZ2x5cGhzfHxbXSksdGhpcy5lbmNvZGluZz1uZXcgaGUodGhpcyksdGhpcy5wb3NpdGlvbj1uZXcgU3QodGhpcyksdGhpcy5zdWJzdGl0dXRpb249bmV3IHd0KHRoaXMpLHRoaXMudGFibGVzPXRoaXMudGFibGVzfHx7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImhpbnRpbmdcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hpbnRpbmc/dGhpcy5faGludGluZzpcInRydWV0eXBlXCI9PT10aGlzLm91dGxpbmVzRm9ybWF0P3RoaXMuX2hpbnRpbmc9bmV3IFV0KHRoaXMpOnZvaWQgMH19KX1mdW5jdGlvbiBUcihlLHQpe3ZhciByPUpTT04uc3RyaW5naWZ5KGUpLG49MjU2O2Zvcih2YXIgYSBpbiB0KXt2YXIgbz1wYXJzZUludChhKTtpZihvJiYhKG88MjU2KSl7aWYoSlNPTi5zdHJpbmdpZnkodFthXSk9PT1yKXJldHVybiBvO248PW8mJihuPW8rMSl9fXJldHVybiB0W25dPWUsbn1mdW5jdGlvbiBDcihlLHQscixuKXtmb3IodmFyIGE9W3tuYW1lOlwibmFtZUlEX1wiK2UsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOlRyKHQubmFtZSxuKX0se25hbWU6XCJmbGFnc19cIitlLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfV0sbz0wO288ci5sZW5ndGg7KytvKXt2YXIgaT1yW29dLnRhZzthLnB1c2goe25hbWU6XCJheGlzX1wiK2UrXCIgXCIraSx0eXBlOlwiRklYRURcIix2YWx1ZTp0LmNvb3JkaW5hdGVzW2ldPDwxNn0pfXJldHVybiBhfWZ1bmN0aW9uIE5yKGUsdCxyLG4pe3ZhciBhPXt9LG89bmV3IHNlLlBhcnNlcihlLHQpO2EubmFtZT1uW28ucGFyc2VVU2hvcnQoKV18fHt9LG8uc2tpcChcInVTaG9ydFwiLDEpLGEuY29vcmRpbmF0ZXM9e307Zm9yKHZhciBpPTA7aTxyLmxlbmd0aDsrK2kpYS5jb29yZGluYXRlc1tyW2ldLnRhZ109by5wYXJzZUZpeGVkKCk7cmV0dXJuIGF9RXIucHJvdG90eXBlLmhhc0NoYXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPT10aGlzLmVuY29kaW5nLmNoYXJUb0dseXBoSW5kZXgoZSl9LEVyLnByb3RvdHlwZS5jaGFyVG9HbHlwaEluZGV4PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVuY29kaW5nLmNoYXJUb0dseXBoSW5kZXgoZSl9LEVyLnByb3RvdHlwZS5jaGFyVG9HbHlwaD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmNoYXJUb0dseXBoSW5kZXgoZSkscj10aGlzLmdseXBocy5nZXQodCk7cmV0dXJuIHI9cnx8dGhpcy5nbHlwaHMuZ2V0KDApfSxFci5wcm90b3R5cGUuc3RyaW5nVG9HbHlwaHM9ZnVuY3Rpb24oZSx0KXt0PXR8fHRoaXMuZGVmYXVsdFJlbmRlck9wdGlvbnM7Zm9yKHZhciByPU1yKGUpLG49W10sYT0wO2E8ci5sZW5ndGg7YSs9MSl7dmFyIG89clthXTtuLnB1c2godGhpcy5jaGFyVG9HbHlwaEluZGV4KG8pKX12YXIgaT1uLmxlbmd0aDtpZih0LmZlYXR1cmVzKXt2YXIgcz10LnNjcmlwdHx8dGhpcy5zdWJzdGl0dXRpb24uZ2V0RGVmYXVsdFNjcmlwdE5hbWUoKSxsPVtdO3QuZmVhdHVyZXMubGlnYSYmKGw9bC5jb25jYXQodGhpcy5zdWJzdGl0dXRpb24uZ2V0RmVhdHVyZShcImxpZ2FcIixzLHQubGFuZ3VhZ2UpKSksdC5mZWF0dXJlcy5ybGlnJiYobD1sLmNvbmNhdCh0aGlzLnN1YnN0aXR1dGlvbi5nZXRGZWF0dXJlKFwicmxpZ1wiLHMsdC5sYW5ndWFnZSkpKTtmb3IodmFyIHA9MDtwPGk7cCs9MSlmb3IodmFyIHU9MDt1PGwubGVuZ3RoO3UrKyl7Zm9yKHZhciBjPWxbdV0sZD1jLnN1YixoPWQubGVuZ3RoLG09MDttPGgmJmRbbV09PT1uW3ArbV07KW0rKzttPT09aCYmKG4uc3BsaWNlKHAsaCxjLmJ5KSxpPWktaCsxKX19Zm9yKHZhciBmPW5ldyBBcnJheShpKSx5PXRoaXMuZ2x5cGhzLmdldCgwKSxnPTA7ZzxpO2crPTEpZltnXT10aGlzLmdseXBocy5nZXQobltnXSl8fHk7cmV0dXJuIGZ9LEVyLnByb3RvdHlwZS5uYW1lVG9HbHlwaEluZGV4PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmdseXBoTmFtZXMubmFtZVRvR2x5cGhJbmRleChlKX0sRXIucHJvdG90eXBlLm5hbWVUb0dseXBoPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMubmFtZVRvR2x5cGhJbmRleChlKSxyPXRoaXMuZ2x5cGhzLmdldCh0KTtyZXR1cm4gcj1yfHx0aGlzLmdseXBocy5nZXQoMCl9LEVyLnByb3RvdHlwZS5nbHlwaEluZGV4VG9OYW1lPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmdseXBoTmFtZXMuZ2x5cGhJbmRleFRvTmFtZT90aGlzLmdseXBoTmFtZXMuZ2x5cGhJbmRleFRvTmFtZShlKTpcIlwifSxFci5wcm90b3R5cGUuZ2V0S2VybmluZ1ZhbHVlPWZ1bmN0aW9uKGUsdCl7ZT1lLmluZGV4fHxlLHQ9dC5pbmRleHx8dDt2YXIgcj10aGlzLnBvc2l0aW9uLmRlZmF1bHRLZXJuaW5nVGFibGVzO3JldHVybiByP3RoaXMucG9zaXRpb24uZ2V0S2VybmluZ1ZhbHVlKHIsZSx0KTp0aGlzLmtlcm5pbmdQYWlyc1tlK1wiLFwiK3RdfHwwfSxFci5wcm90b3R5cGUuZGVmYXVsdFJlbmRlck9wdGlvbnM9e2tlcm5pbmc6ITAsZmVhdHVyZXM6e2xpZ2E6ITAscmxpZzohMH19LEVyLnByb3RvdHlwZS5mb3JFYWNoR2x5cGg9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe3Q9dm9pZCAwIT09dD90OjAscj12b2lkIDAhPT1yP3I6MCxuPXZvaWQgMCE9PW4/bjo3MixhPWF8fHRoaXMuZGVmYXVsdFJlbmRlck9wdGlvbnM7dmFyIGkscz0xL3RoaXMudW5pdHNQZXJFbSpuLGw9dGhpcy5zdHJpbmdUb0dseXBocyhlLGEpO2lmKGEua2VybmluZyl7dmFyIHA9YS5zY3JpcHR8fHRoaXMucG9zaXRpb24uZ2V0RGVmYXVsdFNjcmlwdE5hbWUoKTtpPXRoaXMucG9zaXRpb24uZ2V0S2VybmluZ1RhYmxlcyhwLGEubGFuZ3VhZ2UpfWZvcih2YXIgdT0wO3U8bC5sZW5ndGg7dSs9MSl7dmFyIGM9bFt1XTtpZihvLmNhbGwodGhpcyxjLHQscixuLGEpLGMuYWR2YW5jZVdpZHRoJiYodCs9Yy5hZHZhbmNlV2lkdGgqcyksYS5rZXJuaW5nJiZ1PGwubGVuZ3RoLTEpdCs9KGk/dGhpcy5wb3NpdGlvbi5nZXRLZXJuaW5nVmFsdWUoaSxjLmluZGV4LGxbdSsxXS5pbmRleCk6dGhpcy5nZXRLZXJuaW5nVmFsdWUoYyxsW3UrMV0pKSpzO2EubGV0dGVyU3BhY2luZz90Kz1hLmxldHRlclNwYWNpbmcqbjphLnRyYWNraW5nJiYodCs9YS50cmFja2luZy8xZTMqbil9cmV0dXJuIHR9LEVyLnByb3RvdHlwZS5nZXRQYXRoPWZ1bmN0aW9uKGUsdCxyLG4sbyl7dmFyIGk9bmV3IEE7cmV0dXJuIHRoaXMuZm9yRWFjaEdseXBoKGUsdCxyLG4sbyxmdW5jdGlvbihlLHQscixuKXt2YXIgYT1lLmdldFBhdGgodCxyLG4sbyx0aGlzKTtpLmV4dGVuZChhKX0pLGl9LEVyLnByb3RvdHlwZS5nZXRQYXRocz1mdW5jdGlvbihlLHQscixuLG8pe3ZhciBpPVtdO3JldHVybiB0aGlzLmZvckVhY2hHbHlwaChlLHQscixuLG8sZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9ZS5nZXRQYXRoKHQscixuLG8sdGhpcyk7aS5wdXNoKGEpfSksaX0sRXIucHJvdG90eXBlLmdldEFkdmFuY2VXaWR0aD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHRoaXMuZm9yRWFjaEdseXBoKGUsMCwwLHQscixmdW5jdGlvbigpe30pfSxFci5wcm90b3R5cGUuZHJhdz1mdW5jdGlvbihlLHQscixuLGEsbyl7dGhpcy5nZXRQYXRoKHQscixuLGEsbykuZHJhdyhlKX0sRXIucHJvdG90eXBlLmRyYXdQb2ludHM9ZnVuY3Rpb24oYSxlLHQscixuLG8pe3RoaXMuZm9yRWFjaEdseXBoKGUsdCxyLG4sbyxmdW5jdGlvbihlLHQscixuKXtlLmRyYXdQb2ludHMoYSx0LHIsbil9KX0sRXIucHJvdG90eXBlLmRyYXdNZXRyaWNzPWZ1bmN0aW9uKGEsZSx0LHIsbixvKXt0aGlzLmZvckVhY2hHbHlwaChlLHQscixuLG8sZnVuY3Rpb24oZSx0LHIsbil7ZS5kcmF3TWV0cmljcyhhLHQscixuKX0pfSxFci5wcm90b3R5cGUuZ2V0RW5nbGlzaE5hbWU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5uYW1lc1tlXTtpZih0KXJldHVybiB0LmVufSxFci5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24oKXt2YXIgcj10aGlzO2Z1bmN0aW9uIGUoZSl7dmFyIHQ9ci5nZXRFbmdsaXNoTmFtZShlKTt0JiZ0LnRyaW0oKS5sZW5ndGh9ZShcImZvbnRGYW1pbHlcIiksZShcIndlaWdodE5hbWVcIiksZShcIm1hbnVmYWN0dXJlclwiKSxlKFwiY29weXJpZ2h0XCIpLGUoXCJ2ZXJzaW9uXCIpLHRoaXMudW5pdHNQZXJFbX0sRXIucHJvdG90eXBlLnRvVGFibGVzPWZ1bmN0aW9uKCl7cmV0dXJuIGd0LmZvbnRUb1RhYmxlKHRoaXMpfSxFci5wcm90b3R5cGUudG9CdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS53YXJuKFwiRm9udC50b0J1ZmZlciBpcyBkZXByZWNhdGVkLiBVc2UgRm9udC50b0FycmF5QnVmZmVyIGluc3RlYWQuXCIpLHRoaXMudG9BcnJheUJ1ZmZlcigpfSxFci5wcm90b3R5cGUudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLnRvVGFibGVzKCkuZW5jb2RlKCksdD1uZXcgQXJyYXlCdWZmZXIoZS5sZW5ndGgpLHI9bmV3IFVpbnQ4QXJyYXkodCksbj0wO248ZS5sZW5ndGg7bisrKXJbbl09ZVtuXTtyZXR1cm4gdH0sRXIucHJvdG90eXBlLmRvd25sb2FkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0RW5nbGlzaE5hbWUoXCJmb250RmFtaWx5XCIpLHI9dGhpcy5nZXRFbmdsaXNoTmFtZShcImZvbnRTdWJmYW1pbHlcIik7dD10fHxlLnJlcGxhY2UoL1xccy9nLFwiXCIpK1wiLVwiK3IrXCIub3RmXCI7dmFyIGE9dGhpcy50b0FycmF5QnVmZmVyKCk7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyl3aW5kb3cucmVxdWVzdEZpbGVTeXN0ZW09d2luZG93LnJlcXVlc3RGaWxlU3lzdGVtfHx3aW5kb3cud2Via2l0UmVxdWVzdEZpbGVTeXN0ZW0sd2luZG93LnJlcXVlc3RGaWxlU3lzdGVtKHdpbmRvdy5URU1QT1JBUlksYS5ieXRlTGVuZ3RoLGZ1bmN0aW9uKGUpe2Uucm9vdC5nZXRGaWxlKHQse2NyZWF0ZTohMH0sZnVuY3Rpb24obil7bi5jcmVhdGVXcml0ZXIoZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IERhdGFWaWV3KGEpLHI9bmV3IEJsb2IoW3RdLHt0eXBlOlwiZm9udC9vcGVudHlwZVwifSk7ZS53cml0ZShyKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJ3cml0ZWVuZFwiLGZ1bmN0aW9uKCl7bG9jYXRpb24uaHJlZj1uLnRvVVJMKCl9LCExKX0pfSl9LGZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihlLm5hbWUrXCI6IFwiK2UubWVzc2FnZSl9KTtlbHNle3ZhciBuPWpyKFwiZnNcIiksbz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3IEdyKGUuYnl0ZUxlbmd0aCkscj1uZXcgVWludDhBcnJheShlKSxuPTA7bjx0Lmxlbmd0aDsrK24pdFtuXT1yW25dO3JldHVybiB0fShhKTtuLndyaXRlRmlsZVN5bmModCxvKX19LEVyLnByb3RvdHlwZS5mc1NlbGVjdGlvblZhbHVlcz17SVRBTElDOjEsVU5ERVJTQ09SRToyLE5FR0FUSVZFOjQsT1VUTElORUQ6OCxTVFJJS0VPVVQ6MTYsQk9MRDozMixSRUdVTEFSOjY0LFVTRVJfVFlQT19NRVRSSUNTOjEyOCxXV1M6MjU2LE9CTElRVUU6NTEyfSxFci5wcm90b3R5cGUudXNXaWR0aENsYXNzZXM9e1VMVFJBX0NPTkRFTlNFRDoxLEVYVFJBX0NPTkRFTlNFRDoyLENPTkRFTlNFRDozLFNFTUlfQ09OREVOU0VEOjQsTUVESVVNOjUsU0VNSV9FWFBBTkRFRDo2LEVYUEFOREVEOjcsRVhUUkFfRVhQQU5ERUQ6OCxVTFRSQV9FWFBBTkRFRDo5fSxFci5wcm90b3R5cGUudXNXZWlnaHRDbGFzc2VzPXtUSElOOjEwMCxFWFRSQV9MSUdIVDoyMDAsTElHSFQ6MzAwLE5PUk1BTDo0MDAsTUVESVVNOjUwMCxTRU1JX0JPTEQ6NjAwLEJPTEQ6NzAwLEVYVFJBX0JPTEQ6ODAwLEJMQUNLOjkwMH07dmFyIE9yPXttYWtlOmZ1bmN0aW9uKGUsdCl7dmFyIHIsbixhLG8saT1uZXcgJC5UYWJsZShcImZ2YXJcIixbe25hbWU6XCJ2ZXJzaW9uXCIsdHlwZTpcIlVMT05HXCIsdmFsdWU6NjU1MzZ9LHtuYW1lOlwib2Zmc2V0VG9EYXRhXCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOjB9LHtuYW1lOlwiY291bnRTaXplUGFpcnNcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6Mn0se25hbWU6XCJheGlzQ291bnRcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6ZS5heGVzLmxlbmd0aH0se25hbWU6XCJheGlzU2l6ZVwiLHR5cGU6XCJVU0hPUlRcIix2YWx1ZToyMH0se25hbWU6XCJpbnN0YW5jZUNvdW50XCIsdHlwZTpcIlVTSE9SVFwiLHZhbHVlOmUuaW5zdGFuY2VzLmxlbmd0aH0se25hbWU6XCJpbnN0YW5jZVNpemVcIix0eXBlOlwiVVNIT1JUXCIsdmFsdWU6NCs0KmUuYXhlcy5sZW5ndGh9XSk7aS5vZmZzZXRUb0RhdGE9aS5zaXplT2YoKTtmb3IodmFyIHM9MDtzPGUuYXhlcy5sZW5ndGg7cysrKWkuZmllbGRzPWkuZmllbGRzLmNvbmNhdCgocj1zLG49ZS5heGVzW3NdLGE9dCxvPVRyKG4ubmFtZSxhKSxbe25hbWU6XCJ0YWdfXCIrcix0eXBlOlwiVEFHXCIsdmFsdWU6bi50YWd9LHtuYW1lOlwibWluVmFsdWVfXCIrcix0eXBlOlwiRklYRURcIix2YWx1ZTpuLm1pblZhbHVlPDwxNn0se25hbWU6XCJkZWZhdWx0VmFsdWVfXCIrcix0eXBlOlwiRklYRURcIix2YWx1ZTpuLmRlZmF1bHRWYWx1ZTw8MTZ9LHtuYW1lOlwibWF4VmFsdWVfXCIrcix0eXBlOlwiRklYRURcIix2YWx1ZTpuLm1heFZhbHVlPDwxNn0se25hbWU6XCJmbGFnc19cIityLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTowfSx7bmFtZTpcIm5hbWVJRF9cIityLHR5cGU6XCJVU0hPUlRcIix2YWx1ZTpvfV0pKTtmb3IodmFyIGw9MDtsPGUuaW5zdGFuY2VzLmxlbmd0aDtsKyspaS5maWVsZHM9aS5maWVsZHMuY29uY2F0KENyKGwsZS5pbnN0YW5jZXNbbF0sZS5heGVzLHQpKTtyZXR1cm4gaX0scGFyc2U6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPW5ldyBzZS5QYXJzZXIoZSx0KSxhPW4ucGFyc2VVTG9uZygpO0wuYXJndW1lbnQoNjU1MzY9PT1hLFwiVW5zdXBwb3J0ZWQgZnZhciB0YWJsZSB2ZXJzaW9uLlwiKTt2YXIgbz1uLnBhcnNlT2Zmc2V0MTYoKTtuLnNraXAoXCJ1U2hvcnRcIiwxKTtmb3IodmFyIGkscyxsLHAsdSxjPW4ucGFyc2VVU2hvcnQoKSxkPW4ucGFyc2VVU2hvcnQoKSxoPW4ucGFyc2VVU2hvcnQoKSxtPW4ucGFyc2VVU2hvcnQoKSxmPVtdLHk9MDt5PGM7eSsrKWYucHVzaCgoaT1lLHM9dCtvK3kqZCxsPXIsdT1wPXZvaWQgMCxwPXt9LHU9bmV3IHNlLlBhcnNlcihpLHMpLHAudGFnPXUucGFyc2VUYWcoKSxwLm1pblZhbHVlPXUucGFyc2VGaXhlZCgpLHAuZGVmYXVsdFZhbHVlPXUucGFyc2VGaXhlZCgpLHAubWF4VmFsdWU9dS5wYXJzZUZpeGVkKCksdS5za2lwKFwidVNob3J0XCIsMSkscC5uYW1lPWxbdS5wYXJzZVVTaG9ydCgpXXx8e30scCkpO2Zvcih2YXIgZz1bXSx2PXQrbytjKmQsYj0wO2I8aDtiKyspZy5wdXNoKE5yKGUsditiKm0sZixyKSk7cmV0dXJue2F4ZXM6ZixpbnN0YW5jZXM6Z319fSxMcj1uZXcgQXJyYXkoMTApO0xyWzFdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCx0PXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm4gMT09PXQ/e3Bvc0Zvcm1hdDoxLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSx2YWx1ZTp0aGlzLnBhcnNlVmFsdWVSZWNvcmQoKX06Mj09PXQ/e3Bvc0Zvcm1hdDoyLGNvdmVyYWdlOnRoaXMucGFyc2VQb2ludGVyKG9lLmNvdmVyYWdlKSx2YWx1ZXM6dGhpcy5wYXJzZVZhbHVlUmVjb3JkTGlzdCgpfTp2b2lkIEwuYXNzZXJ0KCExLFwiMHhcIitlLnRvU3RyaW5nKDE2KStcIjogR1BPUyBsb29rdXAgdHlwZSAxIGZvcm1hdCBtdXN0IGJlIDEgb3IgMi5cIil9LExyWzJdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXQrdGhpcy5yZWxhdGl2ZU9mZnNldCx0PXRoaXMucGFyc2VVU2hvcnQoKTtMLmFzc2VydCgxPT09dHx8Mj09PXQsXCIweFwiK2UudG9TdHJpbmcoMTYpK1wiOiBHUE9TIGxvb2t1cCB0eXBlIDIgZm9ybWF0IG11c3QgYmUgMSBvciAyLlwiKTt2YXIgcj10aGlzLnBhcnNlUG9pbnRlcihvZS5jb3ZlcmFnZSksbj10aGlzLnBhcnNlVVNob3J0KCksYT10aGlzLnBhcnNlVVNob3J0KCk7aWYoMT09PXQpcmV0dXJue3Bvc0Zvcm1hdDp0LGNvdmVyYWdlOnIsdmFsdWVGb3JtYXQxOm4sdmFsdWVGb3JtYXQyOmEscGFpclNldHM6dGhpcy5wYXJzZUxpc3Qob2UucG9pbnRlcihvZS5saXN0KGZ1bmN0aW9uKCl7cmV0dXJue3NlY29uZEdseXBoOnRoaXMucGFyc2VVU2hvcnQoKSx2YWx1ZTE6dGhpcy5wYXJzZVZhbHVlUmVjb3JkKG4pLHZhbHVlMjp0aGlzLnBhcnNlVmFsdWVSZWNvcmQoYSl9fSkpKX07aWYoMj09PXQpe3ZhciBvPXRoaXMucGFyc2VQb2ludGVyKG9lLmNsYXNzRGVmKSxpPXRoaXMucGFyc2VQb2ludGVyKG9lLmNsYXNzRGVmKSxzPXRoaXMucGFyc2VVU2hvcnQoKSxsPXRoaXMucGFyc2VVU2hvcnQoKTtyZXR1cm57cG9zRm9ybWF0OnQsY292ZXJhZ2U6cix2YWx1ZUZvcm1hdDE6bix2YWx1ZUZvcm1hdDI6YSxjbGFzc0RlZjE6byxjbGFzc0RlZjI6aSxjbGFzczFDb3VudDpzLGNsYXNzMkNvdW50OmwsY2xhc3NSZWNvcmRzOnRoaXMucGFyc2VMaXN0KHMsb2UubGlzdChsLGZ1bmN0aW9uKCl7cmV0dXJue3ZhbHVlMTp0aGlzLnBhcnNlVmFsdWVSZWNvcmQobiksdmFsdWUyOnRoaXMucGFyc2VWYWx1ZVJlY29yZChhKX19KSl9fX0sTHJbM109ZnVuY3Rpb24oKXtyZXR1cm57ZXJyb3I6XCJHUE9TIExvb2t1cCAzIG5vdCBzdXBwb3J0ZWRcIn19LExyWzRdPWZ1bmN0aW9uKCl7cmV0dXJue2Vycm9yOlwiR1BPUyBMb29rdXAgNCBub3Qgc3VwcG9ydGVkXCJ9fSxMcls1XT1mdW5jdGlvbigpe3JldHVybntlcnJvcjpcIkdQT1MgTG9va3VwIDUgbm90IHN1cHBvcnRlZFwifX0sTHJbNl09ZnVuY3Rpb24oKXtyZXR1cm57ZXJyb3I6XCJHUE9TIExvb2t1cCA2IG5vdCBzdXBwb3J0ZWRcIn19LExyWzddPWZ1bmN0aW9uKCl7cmV0dXJue2Vycm9yOlwiR1BPUyBMb29rdXAgNyBub3Qgc3VwcG9ydGVkXCJ9fSxMcls4XT1mdW5jdGlvbigpe3JldHVybntlcnJvcjpcIkdQT1MgTG9va3VwIDggbm90IHN1cHBvcnRlZFwifX0sTHJbOV09ZnVuY3Rpb24oKXtyZXR1cm57ZXJyb3I6XCJHUE9TIExvb2t1cCA5IG5vdCBzdXBwb3J0ZWRcIn19O3ZhciBJcj1uZXcgQXJyYXkoMTApO3ZhciBQcj17cGFyc2U6ZnVuY3Rpb24oZSx0KXt2YXIgcj1uZXcgb2UoZSx0PXR8fDApLG49ci5wYXJzZVZlcnNpb24oMSk7cmV0dXJuIEwuYXJndW1lbnQoMT09PW58fDEuMT09PW4sXCJVbnN1cHBvcnRlZCBHUE9TIHRhYmxlIHZlcnNpb24gXCIrbiksMT09PW4/e3ZlcnNpb246bixzY3JpcHRzOnIucGFyc2VTY3JpcHRMaXN0KCksZmVhdHVyZXM6ci5wYXJzZUZlYXR1cmVMaXN0KCksbG9va3VwczpyLnBhcnNlTG9va3VwTGlzdChMcil9Ont2ZXJzaW9uOm4sc2NyaXB0czpyLnBhcnNlU2NyaXB0TGlzdCgpLGZlYXR1cmVzOnIucGFyc2VGZWF0dXJlTGlzdCgpLGxvb2t1cHM6ci5wYXJzZUxvb2t1cExpc3QoTHIpLHZhcmlhdGlvbnM6ci5wYXJzZUZlYXR1cmVWYXJpYXRpb25zTGlzdCgpfX0sbWFrZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3ICQuVGFibGUoXCJHUE9TXCIsW3tuYW1lOlwidmVyc2lvblwiLHR5cGU6XCJVTE9OR1wiLHZhbHVlOjY1NTM2fSx7bmFtZTpcInNjcmlwdHNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgJC5TY3JpcHRMaXN0KGUuc2NyaXB0cyl9LHtuYW1lOlwiZmVhdHVyZXNcIix0eXBlOlwiVEFCTEVcIix2YWx1ZTpuZXcgJC5GZWF0dXJlTGlzdChlLmZlYXR1cmVzKX0se25hbWU6XCJsb29rdXBzXCIsdHlwZTpcIlRBQkxFXCIsdmFsdWU6bmV3ICQuTG9va3VwTGlzdChlLmxvb2t1cHMsSXIpfV0pfX07dmFyIFJyPXtwYXJzZTpmdW5jdGlvbihlLHQpe3ZhciByPW5ldyBzZS5QYXJzZXIoZSx0KSxuPXIucGFyc2VVU2hvcnQoKTtpZigwPT09bilyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZS5za2lwKFwidVNob3J0XCIpO3ZhciByPWUucGFyc2VVU2hvcnQoKTtMLmFyZ3VtZW50KDA9PT1yLFwiVW5zdXBwb3J0ZWQga2VybiBzdWItdGFibGUgdmVyc2lvbi5cIiksZS5za2lwKFwidVNob3J0XCIsMik7dmFyIG49ZS5wYXJzZVVTaG9ydCgpO2Uuc2tpcChcInVTaG9ydFwiLDMpO2Zvcih2YXIgYT0wO2E8bjthKz0xKXt2YXIgbz1lLnBhcnNlVVNob3J0KCksaT1lLnBhcnNlVVNob3J0KCkscz1lLnBhcnNlU2hvcnQoKTt0W28rXCIsXCIraV09c31yZXR1cm4gdH0ocik7aWYoMT09PW4pcmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PXt9O2Uuc2tpcChcInVTaG9ydFwiKSwxPGUucGFyc2VVTG9uZygpJiZjb25zb2xlLndhcm4oXCJPbmx5IHRoZSBmaXJzdCBrZXJuIHN1YnRhYmxlIGlzIHN1cHBvcnRlZC5cIiksZS5za2lwKFwidUxvbmdcIik7dmFyIHI9MjU1JmUucGFyc2VVU2hvcnQoKTtpZihlLnNraXAoXCJ1U2hvcnRcIiksMD09cil7dmFyIG49ZS5wYXJzZVVTaG9ydCgpO2Uuc2tpcChcInVTaG9ydFwiLDMpO2Zvcih2YXIgYT0wO2E8bjthKz0xKXt2YXIgbz1lLnBhcnNlVVNob3J0KCksaT1lLnBhcnNlVVNob3J0KCkscz1lLnBhcnNlU2hvcnQoKTt0W28rXCIsXCIraV09c319cmV0dXJuIHR9KHIpO3Rocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIGtlcm4gdGFibGUgdmVyc2lvbiAoXCIrbitcIikuXCIpfX07dmFyIERyPXtwYXJzZTpmdW5jdGlvbihlLHQscixuKXtmb3IodmFyIGE9bmV3IHNlLlBhcnNlcihlLHQpLG89bj9hLnBhcnNlVVNob3J0OmEucGFyc2VVTG9uZyxpPVtdLHM9MDtzPHIrMTtzKz0xKXt2YXIgbD1vLmNhbGwoYSk7biYmKGwqPTIpLGkucHVzaChsKX1yZXR1cm4gaX19O2Z1bmN0aW9uIEFyKGUscil7anIoXCJmc1wiKS5yZWFkRmlsZShlLGZ1bmN0aW9uKGUsdCl7aWYoZSlyZXR1cm4gcihlLm1lc3NhZ2UpO3IobnVsbCxUdCh0KSl9KX1mdW5jdGlvbiBrcihlLHQpe3ZhciByPW5ldyBYTUxIdHRwUmVxdWVzdDtyLm9wZW4oXCJnZXRcIixlLCEwKSxyLnJlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCIsci5vbmxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gci5yZXNwb25zZT90KG51bGwsci5yZXNwb25zZSk6dChcIkZvbnQgY291bGQgbm90IGJlIGxvYWRlZDogXCIrci5zdGF0dXNUZXh0KX0sci5vbmVycm9yPWZ1bmN0aW9uKCl7dChcIkZvbnQgY291bGQgbm90IGJlIGxvYWRlZFwiKX0sci5zZW5kKCl9ZnVuY3Rpb24gRnIoZSx0KXtmb3IodmFyIHI9W10sbj0xMixhPTA7YTx0O2ErPTEpe3ZhciBvPXNlLmdldFRhZyhlLG4pLGk9c2UuZ2V0VUxvbmcoZSxuKzQpLHM9c2UuZ2V0VUxvbmcoZSxuKzgpLGw9c2UuZ2V0VUxvbmcoZSxuKzEyKTtyLnB1c2goe3RhZzpvLGNoZWNrc3VtOmksb2Zmc2V0OnMsbGVuZ3RoOmwsY29tcHJlc3Npb246ITF9KSxuKz0xNn1yZXR1cm4gcn1mdW5jdGlvbiBVcihlLHQpe2lmKFwiV09GRlwiIT09dC5jb21wcmVzc2lvbilyZXR1cm57ZGF0YTplLG9mZnNldDp0Lm9mZnNldH07dmFyIHI9bmV3IFVpbnQ4QXJyYXkoZS5idWZmZXIsdC5vZmZzZXQrMix0LmNvbXByZXNzZWRMZW5ndGgtMiksbj1uZXcgVWludDhBcnJheSh0Lmxlbmd0aCk7aWYoYShyLG4pLG4uYnl0ZUxlbmd0aCE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkRlY29tcHJlc3Npb24gZXJyb3I6IFwiK3QudGFnK1wiIGRlY29tcHJlc3NlZCBsZW5ndGggZG9lc24ndCBtYXRjaCByZWNvcmRlZCBsZW5ndGhcIik7cmV0dXJue2RhdGE6bmV3IERhdGFWaWV3KG4uYnVmZmVyLDApLG9mZnNldDowfX1mdW5jdGlvbiBCcihlKXt2YXIgdCxyLG4sYSxvLGkscyxsLHAsdSxjLGQsaCxtLGY9bmV3IEVyKHtlbXB0eTohMH0pLHk9bmV3IERhdGFWaWV3KGUsMCksZz1bXSx2PXNlLmdldFRhZyh5LDApO2lmKHY9PT1TdHJpbmcuZnJvbUNoYXJDb2RlKDAsMSwwLDApfHxcInRydWVcIj09PXZ8fFwidHlwMVwiPT09dilmLm91dGxpbmVzRm9ybWF0PVwidHJ1ZXR5cGVcIixnPUZyKHksbj1zZS5nZXRVU2hvcnQoeSw0KSk7ZWxzZSBpZihcIk9UVE9cIj09PXYpZi5vdXRsaW5lc0Zvcm1hdD1cImNmZlwiLGc9RnIoeSxuPXNlLmdldFVTaG9ydCh5LDQpKTtlbHNle2lmKFwid09GRlwiIT09dil0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBPcGVuVHlwZSBzaWduYXR1cmUgXCIrdik7dmFyIGI9c2UuZ2V0VGFnKHksNCk7aWYoYj09PVN0cmluZy5mcm9tQ2hhckNvZGUoMCwxLDAsMCkpZi5vdXRsaW5lc0Zvcm1hdD1cInRydWV0eXBlXCI7ZWxzZXtpZihcIk9UVE9cIiE9PWIpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgT3BlblR5cGUgZmxhdm9yIFwiK3YpO2Yub3V0bGluZXNGb3JtYXQ9XCJjZmZcIn1nPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPVtdLG49NDQsYT0wO2E8dDthKz0xKXt2YXIgbz1zZS5nZXRUYWcoZSxuKSxpPXNlLmdldFVMb25nKGUsbis0KSxzPXNlLmdldFVMb25nKGUsbis4KSxsPXNlLmdldFVMb25nKGUsbisxMikscD12b2lkIDA7cD1zPGwmJlwiV09GRlwiLHIucHVzaCh7dGFnOm8sb2Zmc2V0OmksY29tcHJlc3Npb246cCxjb21wcmVzc2VkTGVuZ3RoOnMsbGVuZ3RoOmx9KSxuKz0yMH1yZXR1cm4gcn0oeSxuPXNlLmdldFVTaG9ydCh5LDEyKSl9Zm9yKHZhciBfPTA7XzxuO18rPTEpe3ZhciB4PWdbX10sUz12b2lkIDA7c3dpdGNoKHgudGFnKXtjYXNlXCJjbWFwXCI6Uz1Vcih5LHgpLGYudGFibGVzLmNtYXA9bGUucGFyc2UoUy5kYXRhLFMub2Zmc2V0KSxmLmVuY29kaW5nPW5ldyBtZShmLnRhYmxlcy5jbWFwKTticmVhaztjYXNlXCJjdnQgXCI6Uz1Vcih5LHgpLG09bmV3IHNlLlBhcnNlcihTLmRhdGEsUy5vZmZzZXQpLGYudGFibGVzLmN2dD1tLnBhcnNlU2hvcnRMaXN0KHgubGVuZ3RoLzIpO2JyZWFrO2Nhc2VcImZ2YXJcIjpvPXg7YnJlYWs7Y2FzZVwiZnBnbVwiOlM9VXIoeSx4KSxtPW5ldyBzZS5QYXJzZXIoUy5kYXRhLFMub2Zmc2V0KSxmLnRhYmxlcy5mcGdtPW0ucGFyc2VCeXRlTGlzdCh4Lmxlbmd0aCk7YnJlYWs7Y2FzZVwiaGVhZFwiOlM9VXIoeSx4KSxmLnRhYmxlcy5oZWFkPUdlLnBhcnNlKFMuZGF0YSxTLm9mZnNldCksZi51bml0c1BlckVtPWYudGFibGVzLmhlYWQudW5pdHNQZXJFbSx0PWYudGFibGVzLmhlYWQuaW5kZXhUb0xvY0Zvcm1hdDticmVhaztjYXNlXCJoaGVhXCI6Uz1Vcih5LHgpLGYudGFibGVzLmhoZWE9amUucGFyc2UoUy5kYXRhLFMub2Zmc2V0KSxmLmFzY2VuZGVyPWYudGFibGVzLmhoZWEuYXNjZW5kZXIsZi5kZXNjZW5kZXI9Zi50YWJsZXMuaGhlYS5kZXNjZW5kZXIsZi5udW1iZXJPZkhNZXRyaWNzPWYudGFibGVzLmhoZWEubnVtYmVyT2ZITWV0cmljczticmVhaztjYXNlXCJobXR4XCI6cD14O2JyZWFrO2Nhc2VcImx0YWdcIjpTPVVyKHkseCkscj16ZS5wYXJzZShTLmRhdGEsUy5vZmZzZXQpO2JyZWFrO2Nhc2VcIm1heHBcIjpTPVVyKHkseCksZi50YWJsZXMubWF4cD1IZS5wYXJzZShTLmRhdGEsUy5vZmZzZXQpLGYubnVtR2x5cGhzPWYudGFibGVzLm1heHAubnVtR2x5cGhzO2JyZWFrO2Nhc2VcIm5hbWVcIjpkPXg7YnJlYWs7Y2FzZVwiT1MvMlwiOlM9VXIoeSx4KSxmLnRhYmxlcy5vczI9b3QucGFyc2UoUy5kYXRhLFMub2Zmc2V0KTticmVhaztjYXNlXCJwb3N0XCI6Uz1Vcih5LHgpLGYudGFibGVzLnBvc3Q9aXQucGFyc2UoUy5kYXRhLFMub2Zmc2V0KSxmLmdseXBoTmFtZXM9bmV3IHllKGYudGFibGVzLnBvc3QpO2JyZWFrO2Nhc2VcInByZXBcIjpTPVVyKHkseCksbT1uZXcgc2UuUGFyc2VyKFMuZGF0YSxTLm9mZnNldCksZi50YWJsZXMucHJlcD1tLnBhcnNlQnl0ZUxpc3QoeC5sZW5ndGgpO2JyZWFrO2Nhc2VcImdseWZcIjppPXg7YnJlYWs7Y2FzZVwibG9jYVwiOmM9eDticmVhaztjYXNlXCJDRkYgXCI6YT14O2JyZWFrO2Nhc2VcImtlcm5cIjp1PXg7YnJlYWs7Y2FzZVwiR1BPU1wiOnM9eDticmVhaztjYXNlXCJHU1VCXCI6bD14O2JyZWFrO2Nhc2VcIm1ldGFcIjpoPXh9fXZhciB3PVVyKHksZCk7aWYoZi50YWJsZXMubmFtZT1udC5wYXJzZSh3LmRhdGEsdy5vZmZzZXQsciksZi5uYW1lcz1mLnRhYmxlcy5uYW1lLGkmJmMpe3ZhciBNPTA9PT10LEU9VXIoeSxjKSxUPURyLnBhcnNlKEUuZGF0YSxFLm9mZnNldCxmLm51bUdseXBocyxNKSxDPVVyKHksaSk7Zi5nbHlwaHM9RnQucGFyc2UoQy5kYXRhLEMub2Zmc2V0LFQsZil9ZWxzZXtpZighYSl0aHJvdyBuZXcgRXJyb3IoXCJGb250IGRvZXNuJ3QgY29udGFpbiBUcnVlVHlwZSBvciBDRkYgb3V0bGluZXMuXCIpO3ZhciBOPVVyKHksYSk7QmUucGFyc2UoTi5kYXRhLE4ub2Zmc2V0LGYpfXZhciBPPVVyKHkscCk7aWYoVmUucGFyc2UoTy5kYXRhLE8ub2Zmc2V0LGYubnVtYmVyT2ZITWV0cmljcyxmLm51bUdseXBocyxmLmdseXBocyksZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9ZS50YWJsZXMuY21hcC5nbHlwaEluZGV4TWFwLG49T2JqZWN0LmtleXMociksYT0wO2E8bi5sZW5ndGg7YSs9MSl7dmFyIG89blthXSxpPXJbb107KHQ9ZS5nbHlwaHMuZ2V0KGkpKS5hZGRVbmljb2RlKHBhcnNlSW50KG8pKX1mb3IodmFyIHM9MDtzPGUuZ2x5cGhzLmxlbmd0aDtzKz0xKXQ9ZS5nbHlwaHMuZ2V0KHMpLGUuY2ZmRW5jb2Rpbmc/ZS5pc0NJREZvbnQ/dC5uYW1lPVwiZ2lkXCIrczp0Lm5hbWU9ZS5jZmZFbmNvZGluZy5jaGFyc2V0W3NdOmUuZ2x5cGhOYW1lcy5uYW1lcyYmKHQubmFtZT1lLmdseXBoTmFtZXMuZ2x5cGhJbmRleFRvTmFtZShzKSl9KGYpLHUpe3ZhciBMPVVyKHksdSk7Zi5rZXJuaW5nUGFpcnM9UnIucGFyc2UoTC5kYXRhLEwub2Zmc2V0KX1lbHNlIGYua2VybmluZ1BhaXJzPXt9O2lmKHMpe3ZhciBJPVVyKHkscyk7Zi50YWJsZXMuZ3Bvcz1Qci5wYXJzZShJLmRhdGEsSS5vZmZzZXQpLGYucG9zaXRpb24uaW5pdCgpfWlmKGwpe3ZhciBQPVVyKHksbCk7Zi50YWJsZXMuZ3N1Yj11dC5wYXJzZShQLmRhdGEsUC5vZmZzZXQpfWlmKG8pe3ZhciBSPVVyKHksbyk7Zi50YWJsZXMuZnZhcj1Pci5wYXJzZShSLmRhdGEsUi5vZmZzZXQsZi5uYW1lcyl9aWYoaCl7dmFyIEQ9VXIoeSxoKTtmLnRhYmxlcy5tZXRhPWN0LnBhcnNlKEQuZGF0YSxELm9mZnNldCksZi5tZXRhcz1mLnRhYmxlcy5tZXRhfXJldHVybiBmfUUuRm9udD1FcixFLkdseXBoPXZlLEUuUGF0aD1BLEUuQm91bmRpbmdCb3g9QyxFLl9wYXJzZT1zZSxFLnBhcnNlPUJyLEUubG9hZD1mdW5jdGlvbihlLG4peyhcInVuZGVmaW5lZFwiPT10eXBlb2Ygd2luZG93P0FyOmtyKShlLGZ1bmN0aW9uKGUsdCl7aWYoZSlyZXR1cm4gbihlKTt2YXIgcjt0cnl7cj1Ccih0KX1jYXRjaChlKXtyZXR1cm4gbihlLG51bGwpfXJldHVybiBuKG51bGwscil9KX0sRS5sb2FkU3luYz1mdW5jdGlvbihlKXtyZXR1cm4gQnIoVHQoanIoXCJmc1wiKS5yZWFkRmlsZVN5bmMoZSkpKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KEUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9KFwib2JqZWN0XCI9PXR5cGVvZiByJiZ2b2lkIDAhPT10P3I6ZS5vcGVudHlwZT17fSl9KS5jYWxsKHRoaXMsanIoXCJidWZmZXJcIikuQnVmZmVyKX0se2J1ZmZlcjo1LGZzOjN9XSwxNDpbZnVuY3Rpb24oZSx0LHApeyhmdW5jdGlvbihhKXtmdW5jdGlvbiBvKGUsdCl7Zm9yKHZhciByPTAsbj1lLmxlbmd0aC0xOzA8PW47bi0tKXt2YXIgYT1lW25dO1wiLlwiPT09YT9lLnNwbGljZShuLDEpOlwiLi5cIj09PWE/KGUuc3BsaWNlKG4sMSkscisrKTpyJiYoZS5zcGxpY2UobiwxKSxyLS0pfWlmKHQpZm9yKDtyLS07KWUudW5zaGlmdChcIi4uXCIpO3JldHVybiBlfWZ1bmN0aW9uIGkoZSx0KXtpZihlLmZpbHRlcilyZXR1cm4gZS5maWx0ZXIodCk7Zm9yKHZhciByPVtdLG49MDtuPGUubGVuZ3RoO24rKyl0KGVbbl0sbixlKSYmci5wdXNoKGVbbl0pO3JldHVybiByfXAucmVzb2x2ZT1mdW5jdGlvbigpe2Zvcih2YXIgZT1cIlwiLHQ9ITEscj1hcmd1bWVudHMubGVuZ3RoLTE7LTE8PXImJiF0O3ItLSl7dmFyIG49MDw9cj9hcmd1bWVudHNbcl06YS5jd2QoKTtpZihcInN0cmluZ1wiIT10eXBlb2Ygbil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnRzIHRvIHBhdGgucmVzb2x2ZSBtdXN0IGJlIHN0cmluZ3NcIik7biYmKGU9bitcIi9cIitlLHQ9XCIvXCI9PT1uLmNoYXJBdCgwKSl9cmV0dXJuKHQ/XCIvXCI6XCJcIikrKGU9byhpKGUuc3BsaXQoXCIvXCIpLGZ1bmN0aW9uKGUpe3JldHVybiEhZX0pLCF0KS5qb2luKFwiL1wiKSl8fFwiLlwifSxwLm5vcm1hbGl6ZT1mdW5jdGlvbihlKXt2YXIgdD1wLmlzQWJzb2x1dGUoZSkscj1cIi9cIj09PW4oZSwtMSk7cmV0dXJuKGU9byhpKGUuc3BsaXQoXCIvXCIpLGZ1bmN0aW9uKGUpe3JldHVybiEhZX0pLCF0KS5qb2luKFwiL1wiKSl8fHR8fChlPVwiLlwiKSxlJiZyJiYoZSs9XCIvXCIpLCh0P1wiL1wiOlwiXCIpK2V9LHAuaXNBYnNvbHV0ZT1mdW5jdGlvbihlKXtyZXR1cm5cIi9cIj09PWUuY2hhckF0KDApfSxwLmpvaW49ZnVuY3Rpb24oKXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCk7cmV0dXJuIHAubm9ybWFsaXplKGkoZSxmdW5jdGlvbihlLHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudHMgdG8gcGF0aC5qb2luIG11c3QgYmUgc3RyaW5nc1wiKTtyZXR1cm4gZX0pLmpvaW4oXCIvXCIpKX0scC5yZWxhdGl2ZT1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIHIoZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aCYmXCJcIj09PWVbdF07dCsrKTtmb3IodmFyIHI9ZS5sZW5ndGgtMTswPD1yJiZcIlwiPT09ZVtyXTtyLS0pO3JldHVybiByPHQ/W106ZS5zbGljZSh0LHItdCsxKX1lPXAucmVzb2x2ZShlKS5zdWJzdHIoMSksdD1wLnJlc29sdmUodCkuc3Vic3RyKDEpO2Zvcih2YXIgbj1yKGUuc3BsaXQoXCIvXCIpKSxhPXIodC5zcGxpdChcIi9cIikpLG89TWF0aC5taW4obi5sZW5ndGgsYS5sZW5ndGgpLGk9byxzPTA7czxvO3MrKylpZihuW3NdIT09YVtzXSl7aT1zO2JyZWFrfXZhciBsPVtdO2ZvcihzPWk7czxuLmxlbmd0aDtzKyspbC5wdXNoKFwiLi5cIik7cmV0dXJuKGw9bC5jb25jYXQoYS5zbGljZShpKSkpLmpvaW4oXCIvXCIpfSxwLnNlcD1cIi9cIixwLmRlbGltaXRlcj1cIjpcIixwLmRpcm5hbWU9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUmJihlKz1cIlwiKSwwPT09ZS5sZW5ndGgpcmV0dXJuXCIuXCI7Zm9yKHZhciB0PWUuY2hhckNvZGVBdCgwKSxyPTQ3PT09dCxuPS0xLGE9ITAsbz1lLmxlbmd0aC0xOzE8PW87LS1vKWlmKDQ3PT09KHQ9ZS5jaGFyQ29kZUF0KG8pKSl7aWYoIWEpe249bzticmVha319ZWxzZSBhPSExO3JldHVybi0xPT09bj9yP1wiL1wiOlwiLlwiOnImJjE9PT1uP1wiL1wiOmUuc2xpY2UoMCxuKX0scC5iYXNlbmFtZT1mdW5jdGlvbihlLHQpe3ZhciByPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZSs9XCJcIik7dmFyIHQscj0wLG49LTEsYT0hMDtmb3IodD1lLmxlbmd0aC0xOzA8PXQ7LS10KWlmKDQ3PT09ZS5jaGFyQ29kZUF0KHQpKXtpZighYSl7cj10KzE7YnJlYWt9fWVsc2UtMT09PW4mJihhPSExLG49dCsxKTtyZXR1cm4tMT09PW4/XCJcIjplLnNsaWNlKHIsbil9KGUpO3JldHVybiB0JiZyLnN1YnN0cigtMSp0Lmxlbmd0aCk9PT10JiYocj1yLnN1YnN0cigwLHIubGVuZ3RoLXQubGVuZ3RoKSkscn0scC5leHRuYW1lPWZ1bmN0aW9uKGUpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYoZSs9XCJcIik7Zm9yKHZhciB0PS0xLHI9MCxuPS0xLGE9ITAsbz0wLGk9ZS5sZW5ndGgtMTswPD1pOy0taSl7dmFyIHM9ZS5jaGFyQ29kZUF0KGkpO2lmKDQ3PT09cyl7aWYoYSljb250aW51ZTtyPWkrMTticmVha30tMT09PW4mJihhPSExLG49aSsxKSw0Nj09PXM/LTE9PT10P3Q9aToxIT09byYmKG89MSk6LTEhPT10JiYobz0tMSl9cmV0dXJuLTE9PT10fHwtMT09PW58fDA9PT1vfHwxPT09byYmdD09PW4tMSYmdD09PXIrMT9cIlwiOmUuc2xpY2UodCxuKX07dmFyIG49XCJiXCI9PT1cImFiXCIuc3Vic3RyKC0xKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIGUuc3Vic3RyKHQscil9OmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdDwwJiYodD1lLmxlbmd0aCt0KSxlLnN1YnN0cih0LHIpfX0pLmNhbGwodGhpcyxlKFwiX3Byb2Nlc3NcIikpfSx7X3Byb2Nlc3M6MTV9XSwxNTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBuLGEsbz10LmV4cG9ydHM9e307ZnVuY3Rpb24gaSgpe3Rocm93IG5ldyBFcnJvcihcInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gcygpe3Rocm93IG5ldyBFcnJvcihcImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBsKHQpe2lmKG49PT1zZXRUaW1lb3V0KXJldHVybiBzZXRUaW1lb3V0KHQsMCk7aWYoKG49PT1pfHwhbikmJnNldFRpbWVvdXQpcmV0dXJuIG49c2V0VGltZW91dCxzZXRUaW1lb3V0KHQsMCk7dHJ5e3JldHVybiBuKHQsMCl9Y2F0Y2goZSl7dHJ5e3JldHVybiBuLmNhbGwobnVsbCx0LDApfWNhdGNoKGUpe3JldHVybiBuLmNhbGwodGhpcyx0LDApfX19IWZ1bmN0aW9uKCl7dHJ5e249XCJmdW5jdGlvblwiPT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Oml9Y2F0Y2goZSl7bj1pfXRyeXthPVwiZnVuY3Rpb25cIj09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6c31jYXRjaChlKXthPXN9fSgpO3ZhciBwLHU9W10sYz0hMSxkPS0xO2Z1bmN0aW9uIGgoKXtjJiZwJiYoYz0hMSxwLmxlbmd0aD91PXAuY29uY2F0KHUpOmQ9LTEsdS5sZW5ndGgmJm0oKSl9ZnVuY3Rpb24gbSgpe2lmKCFjKXt2YXIgZT1sKGgpO2M9ITA7Zm9yKHZhciB0PXUubGVuZ3RoO3Q7KXtmb3IocD11LHU9W107KytkPHQ7KXAmJnBbZF0ucnVuKCk7ZD0tMSx0PXUubGVuZ3RofXA9bnVsbCxjPSExLGZ1bmN0aW9uKHQpe2lmKGE9PT1jbGVhclRpbWVvdXQpcmV0dXJuIGNsZWFyVGltZW91dCh0KTtpZigoYT09PXN8fCFhKSYmY2xlYXJUaW1lb3V0KXJldHVybiBhPWNsZWFyVGltZW91dCxjbGVhclRpbWVvdXQodCk7dHJ5e2EodCl9Y2F0Y2goZSl7dHJ5e3JldHVybiBhLmNhbGwobnVsbCx0KX1jYXRjaChlKXtyZXR1cm4gYS5jYWxsKHRoaXMsdCl9fX0oZSl9fWZ1bmN0aW9uIGYoZSx0KXt0aGlzLmZ1bj1lLHRoaXMuYXJyYXk9dH1mdW5jdGlvbiB5KCl7fW8ubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoMTxhcmd1bWVudHMubGVuZ3RoKWZvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspdFtyLTFdPWFyZ3VtZW50c1tyXTt1LnB1c2gobmV3IGYoZSx0KSksMSE9PXUubGVuZ3RofHxjfHxsKG0pfSxmLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfSxvLnRpdGxlPVwiYnJvd3NlclwiLG8uYnJvd3Nlcj0hMCxvLmVudj17fSxvLmFyZ3Y9W10sby52ZXJzaW9uPVwiXCIsby52ZXJzaW9ucz17fSxvLm9uPXksby5hZGRMaXN0ZW5lcj15LG8ub25jZT15LG8ub2ZmPXksby5yZW1vdmVMaXN0ZW5lcj15LG8ucmVtb3ZlQWxsTGlzdGVuZXJzPXksby5lbWl0PXksby5wcmVwZW5kTGlzdGVuZXI9eSxvLnByZXBlbmRPbmNlTGlzdGVuZXI9eSxvLmxpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm5bXX0sby5iaW5kaW5nPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkXCIpfSxvLmN3ZD1mdW5jdGlvbigpe3JldHVyblwiL1wifSxvLmNoZGlyPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX0sby51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX0se31dLDE2OltmdW5jdGlvbihlLHQscil7IWZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2lmKCFlLmZldGNoKXt2YXIgdD1cIlVSTFNlYXJjaFBhcmFtc1wiaW4gZSxyPVwiU3ltYm9sXCJpbiBlJiZcIml0ZXJhdG9yXCJpbiBTeW1ib2wsaT1cIkZpbGVSZWFkZXJcImluIGUmJlwiQmxvYlwiaW4gZSYmZnVuY3Rpb24oKXt0cnl7cmV0dXJuIG5ldyBCbG9iLCEwfWNhdGNoKGUpe3JldHVybiExfX0oKSxuPVwiRm9ybURhdGFcImluIGUsYT1cIkFycmF5QnVmZmVyXCJpbiBlO2lmKGEpdmFyIG89W1wiW29iamVjdCBJbnQ4QXJyYXldXCIsXCJbb2JqZWN0IFVpbnQ4QXJyYXldXCIsXCJbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XVwiLFwiW29iamVjdCBJbnQxNkFycmF5XVwiLFwiW29iamVjdCBVaW50MTZBcnJheV1cIixcIltvYmplY3QgSW50MzJBcnJheV1cIixcIltvYmplY3QgVWludDMyQXJyYXldXCIsXCJbb2JqZWN0IEZsb2F0MzJBcnJheV1cIixcIltvYmplY3QgRmxvYXQ2NEFycmF5XVwiXSxzPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZEYXRhVmlldy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihlKX0sbD1BcnJheUJ1ZmZlci5pc1ZpZXd8fGZ1bmN0aW9uKGUpe3JldHVybiBlJiYtMTxvLmluZGV4T2YoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKX07bS5wcm90b3R5cGUuYXBwZW5kPWZ1bmN0aW9uKGUsdCl7ZT1jKGUpLHQ9ZCh0KTt2YXIgcj10aGlzLm1hcFtlXTt0aGlzLm1hcFtlXT1yP3IrXCIsXCIrdDp0fSxtLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24oZSl7ZGVsZXRlIHRoaXMubWFwW2MoZSldfSxtLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9YyhlKSx0aGlzLmhhcyhlKT90aGlzLm1hcFtlXTpudWxsfSxtLnByb3RvdHlwZS5oYXM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubWFwLmhhc093blByb3BlcnR5KGMoZSkpfSxtLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0KXt0aGlzLm1hcFtjKGUpXT1kKHQpfSxtLnByb3RvdHlwZS5mb3JFYWNoPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByIGluIHRoaXMubWFwKXRoaXMubWFwLmhhc093blByb3BlcnR5KHIpJiZlLmNhbGwodCx0aGlzLm1hcFtyXSxyLHRoaXMpfSxtLnByb3RvdHlwZS5rZXlzPWZ1bmN0aW9uKCl7dmFyIHI9W107cmV0dXJuIHRoaXMuZm9yRWFjaChmdW5jdGlvbihlLHQpe3IucHVzaCh0KX0pLGgocil9LG0ucHJvdG90eXBlLnZhbHVlcz1mdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24oZSl7dC5wdXNoKGUpfSksaCh0KX0sbS5wcm90b3R5cGUuZW50cmllcz1mdW5jdGlvbigpe3ZhciByPVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24oZSx0KXtyLnB1c2goW3QsZV0pfSksaChyKX0sciYmKG0ucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl09bS5wcm90b3R5cGUuZW50cmllcyk7dmFyIHA9W1wiREVMRVRFXCIsXCJHRVRcIixcIkhFQURcIixcIk9QVElPTlNcIixcIlBPU1RcIixcIlBVVFwiXTtfLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgXyh0aGlzLHtib2R5OnRoaXMuX2JvZHlJbml0fSl9LGIuY2FsbChfLnByb3RvdHlwZSksYi5jYWxsKFMucHJvdG90eXBlKSxTLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgUyh0aGlzLl9ib2R5SW5pdCx7c3RhdHVzOnRoaXMuc3RhdHVzLHN0YXR1c1RleHQ6dGhpcy5zdGF0dXNUZXh0LGhlYWRlcnM6bmV3IG0odGhpcy5oZWFkZXJzKSx1cmw6dGhpcy51cmx9KX0sUy5lcnJvcj1mdW5jdGlvbigpe3ZhciBlPW5ldyBTKG51bGwse3N0YXR1czowLHN0YXR1c1RleHQ6XCJcIn0pO3JldHVybiBlLnR5cGU9XCJlcnJvclwiLGV9O3ZhciB1PVszMDEsMzAyLDMwMywzMDcsMzA4XTtTLnJlZGlyZWN0PWZ1bmN0aW9uKGUsdCl7aWYoLTE9PT11LmluZGV4T2YodCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbnZhbGlkIHN0YXR1cyBjb2RlXCIpO3JldHVybiBuZXcgUyhudWxsLHtzdGF0dXM6dCxoZWFkZXJzOntsb2NhdGlvbjplfX0pfSxlLkhlYWRlcnM9bSxlLlJlcXVlc3Q9XyxlLlJlc3BvbnNlPVMsZS5mZXRjaD1mdW5jdGlvbihyLGEpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihuLGUpe3ZhciB0PW5ldyBfKHIsYSksbz1uZXcgWE1MSHR0cFJlcXVlc3Q7by5vbmxvYWQ9ZnVuY3Rpb24oKXt2YXIgZSxhLHQ9e3N0YXR1czpvLnN0YXR1cyxzdGF0dXNUZXh0Om8uc3RhdHVzVGV4dCxoZWFkZXJzOihlPW8uZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCl8fFwiXCIsYT1uZXcgbSxlLnJlcGxhY2UoL1xccj9cXG5bXFx0IF0rL2csXCIgXCIpLnNwbGl0KC9cXHI/XFxuLykuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1lLnNwbGl0KFwiOlwiKSxyPXQuc2hpZnQoKS50cmltKCk7aWYocil7dmFyIG49dC5qb2luKFwiOlwiKS50cmltKCk7YS5hcHBlbmQocixuKX19KSxhKX07dC51cmw9XCJyZXNwb25zZVVSTFwiaW4gbz9vLnJlc3BvbnNlVVJMOnQuaGVhZGVycy5nZXQoXCJYLVJlcXVlc3QtVVJMXCIpO3ZhciByPVwicmVzcG9uc2VcImluIG8/by5yZXNwb25zZTpvLnJlc3BvbnNlVGV4dDtuKG5ldyBTKHIsdCkpfSxvLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKG5ldyBUeXBlRXJyb3IoXCJOZXR3b3JrIHJlcXVlc3QgZmFpbGVkXCIpKX0sby5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXtlKG5ldyBUeXBlRXJyb3IoXCJOZXR3b3JrIHJlcXVlc3QgZmFpbGVkXCIpKX0sby5vcGVuKHQubWV0aG9kLHQudXJsLCEwKSxcImluY2x1ZGVcIj09PXQuY3JlZGVudGlhbHM/by53aXRoQ3JlZGVudGlhbHM9ITA6XCJvbWl0XCI9PT10LmNyZWRlbnRpYWxzJiYoby53aXRoQ3JlZGVudGlhbHM9ITEpLFwicmVzcG9uc2VUeXBlXCJpbiBvJiZpJiYoby5yZXNwb25zZVR5cGU9XCJibG9iXCIpLHQuaGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uKGUsdCl7by5zZXRSZXF1ZXN0SGVhZGVyKHQsZSl9KSxvLnNlbmQodm9pZCAwPT09dC5fYm9keUluaXQ/bnVsbDp0Ll9ib2R5SW5pdCl9KX0sZS5mZXRjaC5wb2x5ZmlsbD0hMH1mdW5jdGlvbiBjKGUpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlJiYoZT1TdHJpbmcoZSkpLC9bXmEtejAtOVxcLSMkJSYnKisuXFxeX2B8fl0vaS50ZXN0KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBoZWFkZXIgZmllbGQgbmFtZVwiKTtyZXR1cm4gZS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIGQoZSl7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGUmJihlPVN0cmluZyhlKSksZX1mdW5jdGlvbiBoKHQpe3ZhciBlPXtuZXh0OmZ1bmN0aW9uKCl7dmFyIGU9dC5zaGlmdCgpO3JldHVybntkb25lOnZvaWQgMD09PWUsdmFsdWU6ZX19fTtyZXR1cm4gciYmKGVbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiBlfSksZX1mdW5jdGlvbiBtKHQpe3RoaXMubWFwPXt9LHQgaW5zdGFuY2VvZiBtP3QuZm9yRWFjaChmdW5jdGlvbihlLHQpe3RoaXMuYXBwZW5kKHQsZSl9LHRoaXMpOkFycmF5LmlzQXJyYXkodCk/dC5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RoaXMuYXBwZW5kKGVbMF0sZVsxXSl9LHRoaXMpOnQmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpLmZvckVhY2goZnVuY3Rpb24oZSl7dGhpcy5hcHBlbmQoZSx0W2VdKX0sdGhpcyl9ZnVuY3Rpb24gZihlKXtpZihlLmJvZHlVc2VkKXJldHVybiBQcm9taXNlLnJlamVjdChuZXcgVHlwZUVycm9yKFwiQWxyZWFkeSByZWFkXCIpKTtlLmJvZHlVc2VkPSEwfWZ1bmN0aW9uIHkocil7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7ci5vbmxvYWQ9ZnVuY3Rpb24oKXtlKHIucmVzdWx0KX0sci5vbmVycm9yPWZ1bmN0aW9uKCl7dChyLmVycm9yKX19KX1mdW5jdGlvbiBnKGUpe3ZhciB0PW5ldyBGaWxlUmVhZGVyLHI9eSh0KTtyZXR1cm4gdC5yZWFkQXNBcnJheUJ1ZmZlcihlKSxyfWZ1bmN0aW9uIHYoZSl7aWYoZS5zbGljZSlyZXR1cm4gZS5zbGljZSgwKTt2YXIgdD1uZXcgVWludDhBcnJheShlLmJ5dGVMZW5ndGgpO3JldHVybiB0LnNldChuZXcgVWludDhBcnJheShlKSksdC5idWZmZXJ9ZnVuY3Rpb24gYigpe3JldHVybiB0aGlzLmJvZHlVc2VkPSExLHRoaXMuX2luaXRCb2R5PWZ1bmN0aW9uKGUpe2lmKHRoaXMuX2JvZHlJbml0PWUpaWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpdGhpcy5fYm9keVRleHQ9ZTtlbHNlIGlmKGkmJkJsb2IucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoZSkpdGhpcy5fYm9keUJsb2I9ZTtlbHNlIGlmKG4mJkZvcm1EYXRhLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGUpKXRoaXMuX2JvZHlGb3JtRGF0YT1lO2Vsc2UgaWYodCYmVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGUpKXRoaXMuX2JvZHlUZXh0PWUudG9TdHJpbmcoKTtlbHNlIGlmKGEmJmkmJnMoZSkpdGhpcy5fYm9keUFycmF5QnVmZmVyPXYoZS5idWZmZXIpLHRoaXMuX2JvZHlJbml0PW5ldyBCbG9iKFt0aGlzLl9ib2R5QXJyYXlCdWZmZXJdKTtlbHNle2lmKCFhfHwhQXJyYXlCdWZmZXIucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoZSkmJiFsKGUpKXRocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkIEJvZHlJbml0IHR5cGVcIik7dGhpcy5fYm9keUFycmF5QnVmZmVyPXYoZSl9ZWxzZSB0aGlzLl9ib2R5VGV4dD1cIlwiO3RoaXMuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIil8fChcInN0cmluZ1wiPT10eXBlb2YgZT90aGlzLmhlYWRlcnMuc2V0KFwiY29udGVudC10eXBlXCIsXCJ0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLThcIik6dGhpcy5fYm9keUJsb2ImJnRoaXMuX2JvZHlCbG9iLnR5cGU/dGhpcy5oZWFkZXJzLnNldChcImNvbnRlbnQtdHlwZVwiLHRoaXMuX2JvZHlCbG9iLnR5cGUpOnQmJlVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihlKSYmdGhpcy5oZWFkZXJzLnNldChcImNvbnRlbnQtdHlwZVwiLFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9VVRGLThcIikpfSxpJiYodGhpcy5ibG9iPWZ1bmN0aW9uKCl7dmFyIGU9Zih0aGlzKTtpZihlKXJldHVybiBlO2lmKHRoaXMuX2JvZHlCbG9iKXJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5fYm9keUJsb2IpO2lmKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBCbG9iKFt0aGlzLl9ib2R5QXJyYXlCdWZmZXJdKSk7aWYodGhpcy5fYm9keUZvcm1EYXRhKXRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCByZWFkIEZvcm1EYXRhIGJvZHkgYXMgYmxvYlwiKTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBCbG9iKFt0aGlzLl9ib2R5VGV4dF0pKX0sdGhpcy5hcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ib2R5QXJyYXlCdWZmZXI/Zih0aGlzKXx8UHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcik6dGhpcy5ibG9iKCkudGhlbihnKX0pLHRoaXMudGV4dD1mdW5jdGlvbigpe3ZhciBlLHQscixuPWYodGhpcyk7aWYobilyZXR1cm4gbjtpZih0aGlzLl9ib2R5QmxvYilyZXR1cm4gZT10aGlzLl9ib2R5QmxvYix0PW5ldyBGaWxlUmVhZGVyLHI9eSh0KSx0LnJlYWRBc1RleHQoZSkscjtpZih0aGlzLl9ib2R5QXJyYXlCdWZmZXIpcmV0dXJuIFByb21pc2UucmVzb2x2ZShmdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3IFVpbnQ4QXJyYXkoZSkscj1uZXcgQXJyYXkodC5sZW5ndGgpLG49MDtuPHQubGVuZ3RoO24rKylyW25dPVN0cmluZy5mcm9tQ2hhckNvZGUodFtuXSk7cmV0dXJuIHIuam9pbihcIlwiKX0odGhpcy5fYm9keUFycmF5QnVmZmVyKSk7aWYodGhpcy5fYm9keUZvcm1EYXRhKXRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCByZWFkIEZvcm1EYXRhIGJvZHkgYXMgdGV4dFwiKTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlUZXh0KX0sbiYmKHRoaXMuZm9ybURhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50ZXh0KCkudGhlbih4KX0pLHRoaXMuanNvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRleHQoKS50aGVuKEpTT04ucGFyc2UpfSx0aGlzfWZ1bmN0aW9uIF8oZSx0KXt2YXIgcixuLGE9KHQ9dHx8e30pLmJvZHk7aWYoZSBpbnN0YW5jZW9mIF8pe2lmKGUuYm9keVVzZWQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFscmVhZHkgcmVhZFwiKTt0aGlzLnVybD1lLnVybCx0aGlzLmNyZWRlbnRpYWxzPWUuY3JlZGVudGlhbHMsdC5oZWFkZXJzfHwodGhpcy5oZWFkZXJzPW5ldyBtKGUuaGVhZGVycykpLHRoaXMubWV0aG9kPWUubWV0aG9kLHRoaXMubW9kZT1lLm1vZGUsYXx8bnVsbD09ZS5fYm9keUluaXR8fChhPWUuX2JvZHlJbml0LGUuYm9keVVzZWQ9ITApfWVsc2UgdGhpcy51cmw9U3RyaW5nKGUpO2lmKHRoaXMuY3JlZGVudGlhbHM9dC5jcmVkZW50aWFsc3x8dGhpcy5jcmVkZW50aWFsc3x8XCJvbWl0XCIsIXQuaGVhZGVycyYmdGhpcy5oZWFkZXJzfHwodGhpcy5oZWFkZXJzPW5ldyBtKHQuaGVhZGVycykpLHRoaXMubWV0aG9kPShyPXQubWV0aG9kfHx0aGlzLm1ldGhvZHx8XCJHRVRcIixuPXIudG9VcHBlckNhc2UoKSwtMTxwLmluZGV4T2Yobik/bjpyKSx0aGlzLm1vZGU9dC5tb2RlfHx0aGlzLm1vZGV8fG51bGwsdGhpcy5yZWZlcnJlcj1udWxsLChcIkdFVFwiPT09dGhpcy5tZXRob2R8fFwiSEVBRFwiPT09dGhpcy5tZXRob2QpJiZhKXRocm93IG5ldyBUeXBlRXJyb3IoXCJCb2R5IG5vdCBhbGxvd2VkIGZvciBHRVQgb3IgSEVBRCByZXF1ZXN0c1wiKTt0aGlzLl9pbml0Qm9keShhKX1mdW5jdGlvbiB4KGUpe3ZhciBhPW5ldyBGb3JtRGF0YTtyZXR1cm4gZS50cmltKCkuc3BsaXQoXCImXCIpLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoZSl7dmFyIHQ9ZS5zcGxpdChcIj1cIikscj10LnNoaWZ0KCkucmVwbGFjZSgvXFwrL2csXCIgXCIpLG49dC5qb2luKFwiPVwiKS5yZXBsYWNlKC9cXCsvZyxcIiBcIik7YS5hcHBlbmQoZGVjb2RlVVJJQ29tcG9uZW50KHIpLGRlY29kZVVSSUNvbXBvbmVudChuKSl9fSksYX1mdW5jdGlvbiBTKGUsdCl7dD10fHx7fSx0aGlzLnR5cGU9XCJkZWZhdWx0XCIsdGhpcy5zdGF0dXM9dm9pZCAwPT09dC5zdGF0dXM/MjAwOnQuc3RhdHVzLHRoaXMub2s9MjAwPD10aGlzLnN0YXR1cyYmdGhpcy5zdGF0dXM8MzAwLHRoaXMuc3RhdHVzVGV4dD1cInN0YXR1c1RleHRcImluIHQ/dC5zdGF0dXNUZXh0OlwiT0tcIix0aGlzLmhlYWRlcnM9bmV3IG0odC5oZWFkZXJzKSx0aGlzLnVybD10LnVybHx8XCJcIix0aGlzLl9pbml0Qm9keShlKX19KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcyl9LHt9XSwxNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuLGE9KG49ZShcIi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZShcIi4vY29yZS9jb25zdGFudHNcIiksZShcIi4vY29yZS9lbnZpcm9ubWVudFwiKSxlKFwiLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9zdGFja3RyYWNlXCIpLGUoXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiKSxlKFwiLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiKSxlKFwiLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSxlKFwiLi9jb3JlL2hlbHBlcnNcIiksZShcIi4vY29yZS9sZWdhY3lcIiksZShcIi4vY29yZS9wcmVsb2FkXCIpLGUoXCIuL2NvcmUvcDUuRWxlbWVudFwiKSxlKFwiLi9jb3JlL3A1LkdyYXBoaWNzXCIpLGUoXCIuL2NvcmUvcDUuUmVuZGVyZXJcIiksZShcIi4vY29yZS9wNS5SZW5kZXJlcjJEXCIpLGUoXCIuL2NvcmUvcmVuZGVyaW5nXCIpLGUoXCIuL2NvcmUvc2hpbVwiKSxlKFwiLi9jb3JlL3N0cnVjdHVyZVwiKSxlKFwiLi9jb3JlL3RyYW5zZm9ybVwiKSxlKFwiLi9jb3JlL3NoYXBlLzJkX3ByaW1pdGl2ZXNcIiksZShcIi4vY29yZS9zaGFwZS9hdHRyaWJ1dGVzXCIpLGUoXCIuL2NvcmUvc2hhcGUvY3VydmVzXCIpLGUoXCIuL2NvcmUvc2hhcGUvdmVydGV4XCIpLGUoXCIuL2NvbG9yL2NvbG9yX2NvbnZlcnNpb25cIiksZShcIi4vY29sb3IvY3JlYXRpbmdfcmVhZGluZ1wiKSxlKFwiLi9jb2xvci9wNS5Db2xvclwiKSxlKFwiLi9jb2xvci9zZXR0aW5nXCIpLGUoXCIuL2RhdGEvcDUuVHlwZWREaWN0XCIpLGUoXCIuL2RhdGEvbG9jYWxfc3RvcmFnZS5qc1wiKSxlKFwiLi9kb20vZG9tXCIpLGUoXCIuL2V2ZW50cy9hY2NlbGVyYXRpb25cIiksZShcIi4vZXZlbnRzL2tleWJvYXJkXCIpLGUoXCIuL2V2ZW50cy9tb3VzZVwiKSxlKFwiLi9ldmVudHMvdG91Y2hcIiksZShcIi4vaW1hZ2UvZmlsdGVyc1wiKSxlKFwiLi9pbWFnZS9pbWFnZVwiKSxlKFwiLi9pbWFnZS9sb2FkaW5nX2Rpc3BsYXlpbmdcIiksZShcIi4vaW1hZ2UvcDUuSW1hZ2VcIiksZShcIi4vaW1hZ2UvcGl4ZWxzXCIpLGUoXCIuL2lvL2ZpbGVzXCIpLGUoXCIuL2lvL3A1LlRhYmxlXCIpLGUoXCIuL2lvL3A1LlRhYmxlUm93XCIpLGUoXCIuL2lvL3A1LlhNTFwiKSxlKFwiLi9tYXRoL2NhbGN1bGF0aW9uXCIpLGUoXCIuL21hdGgvbWF0aFwiKSxlKFwiLi9tYXRoL25vaXNlXCIpLGUoXCIuL21hdGgvcDUuVmVjdG9yXCIpLGUoXCIuL21hdGgvcmFuZG9tXCIpLGUoXCIuL21hdGgvdHJpZ29ub21ldHJ5XCIpLGUoXCIuL3R5cG9ncmFwaHkvYXR0cmlidXRlc1wiKSxlKFwiLi90eXBvZ3JhcGh5L2xvYWRpbmdfZGlzcGxheWluZ1wiKSxlKFwiLi90eXBvZ3JhcGh5L3A1LkZvbnRcIiksZShcIi4vdXRpbGl0aWVzL2FycmF5X2Z1bmN0aW9uc1wiKSxlKFwiLi91dGlsaXRpZXMvY29udmVyc2lvblwiKSxlKFwiLi91dGlsaXRpZXMvc3RyaW5nX2Z1bmN0aW9uc1wiKSxlKFwiLi91dGlsaXRpZXMvdGltZV9kYXRlXCIpLGUoXCIuL3dlYmdsLzNkX3ByaW1pdGl2ZXNcIiksZShcIi4vd2ViZ2wvaW50ZXJhY3Rpb25cIiksZShcIi4vd2ViZ2wvbGlnaHRcIiksZShcIi4vd2ViZ2wvbG9hZGluZ1wiKSxlKFwiLi93ZWJnbC9tYXRlcmlhbFwiKSxlKFwiLi93ZWJnbC9wNS5DYW1lcmFcIiksZShcIi4vd2ViZ2wvcDUuR2VvbWV0cnlcIiksZShcIi4vd2ViZ2wvcDUuTWF0cml4XCIpLGUoXCIuL3dlYmdsL3A1LlJlbmRlcmVyR0wuSW1tZWRpYXRlXCIpLGUoXCIuL3dlYmdsL3A1LlJlbmRlcmVyR0xcIiksZShcIi4vd2ViZ2wvcDUuUmVuZGVyZXJHTC5SZXRhaW5lZFwiKSxlKFwiLi93ZWJnbC9wNS5TaGFkZXJcIiksZShcIi4vd2ViZ2wvcDUuUmVuZGVyQnVmZmVyXCIpLGUoXCIuL3dlYmdsL3A1LlRleHR1cmVcIiksZShcIi4vd2ViZ2wvdGV4dFwiKSxlKFwiLi9jb3JlL2luaXRcIiksdC5leHBvcnRzPWEuZGVmYXVsdH0se1wiLi9jb2xvci9jb2xvcl9jb252ZXJzaW9uXCI6MTgsXCIuL2NvbG9yL2NyZWF0aW5nX3JlYWRpbmdcIjoxOSxcIi4vY29sb3IvcDUuQ29sb3JcIjoyMCxcIi4vY29sb3Ivc2V0dGluZ1wiOjIxLFwiLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi9jb3JlL2Vudmlyb25tZW50XCI6MjMsXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCI6MjQsXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjUsXCIuL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3N0YWNrdHJhY2VcIjoyNixcIi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCI6MjcsXCIuL2NvcmUvaGVscGVyc1wiOjI4LFwiLi9jb3JlL2luaXRcIjoyOSxcIi4vY29yZS9sZWdhY3lcIjozMSxcIi4vY29yZS9tYWluXCI6MzIsXCIuL2NvcmUvcDUuRWxlbWVudFwiOjMzLFwiLi9jb3JlL3A1LkdyYXBoaWNzXCI6MzQsXCIuL2NvcmUvcDUuUmVuZGVyZXJcIjozNSxcIi4vY29yZS9wNS5SZW5kZXJlcjJEXCI6MzYsXCIuL2NvcmUvcHJlbG9hZFwiOjM3LFwiLi9jb3JlL3JlbmRlcmluZ1wiOjM4LFwiLi9jb3JlL3NoYXBlLzJkX3ByaW1pdGl2ZXNcIjozOSxcIi4vY29yZS9zaGFwZS9hdHRyaWJ1dGVzXCI6NDAsXCIuL2NvcmUvc2hhcGUvY3VydmVzXCI6NDEsXCIuL2NvcmUvc2hhcGUvdmVydGV4XCI6NDIsXCIuL2NvcmUvc2hpbVwiOjQzLFwiLi9jb3JlL3N0cnVjdHVyZVwiOjQ0LFwiLi9jb3JlL3RyYW5zZm9ybVwiOjQ1LFwiLi9kYXRhL2xvY2FsX3N0b3JhZ2UuanNcIjo0NixcIi4vZGF0YS9wNS5UeXBlZERpY3RcIjo0NyxcIi4vZG9tL2RvbVwiOjQ4LFwiLi9ldmVudHMvYWNjZWxlcmF0aW9uXCI6NDksXCIuL2V2ZW50cy9rZXlib2FyZFwiOjUwLFwiLi9ldmVudHMvbW91c2VcIjo1MSxcIi4vZXZlbnRzL3RvdWNoXCI6NTIsXCIuL2ltYWdlL2ZpbHRlcnNcIjo1MyxcIi4vaW1hZ2UvaW1hZ2VcIjo1NCxcIi4vaW1hZ2UvbG9hZGluZ19kaXNwbGF5aW5nXCI6NTUsXCIuL2ltYWdlL3A1LkltYWdlXCI6NTYsXCIuL2ltYWdlL3BpeGVsc1wiOjU3LFwiLi9pby9maWxlc1wiOjU4LFwiLi9pby9wNS5UYWJsZVwiOjU5LFwiLi9pby9wNS5UYWJsZVJvd1wiOjYwLFwiLi9pby9wNS5YTUxcIjo2MSxcIi4vbWF0aC9jYWxjdWxhdGlvblwiOjYyLFwiLi9tYXRoL21hdGhcIjo2MyxcIi4vbWF0aC9ub2lzZVwiOjY0LFwiLi9tYXRoL3A1LlZlY3RvclwiOjY1LFwiLi9tYXRoL3JhbmRvbVwiOjY2LFwiLi9tYXRoL3RyaWdvbm9tZXRyeVwiOjY3LFwiLi90eXBvZ3JhcGh5L2F0dHJpYnV0ZXNcIjo2OCxcIi4vdHlwb2dyYXBoeS9sb2FkaW5nX2Rpc3BsYXlpbmdcIjo2OSxcIi4vdHlwb2dyYXBoeS9wNS5Gb250XCI6NzAsXCIuL3V0aWxpdGllcy9hcnJheV9mdW5jdGlvbnNcIjo3MSxcIi4vdXRpbGl0aWVzL2NvbnZlcnNpb25cIjo3MixcIi4vdXRpbGl0aWVzL3N0cmluZ19mdW5jdGlvbnNcIjo3MyxcIi4vdXRpbGl0aWVzL3RpbWVfZGF0ZVwiOjc0LFwiLi93ZWJnbC8zZF9wcmltaXRpdmVzXCI6NzUsXCIuL3dlYmdsL2ludGVyYWN0aW9uXCI6NzYsXCIuL3dlYmdsL2xpZ2h0XCI6NzcsXCIuL3dlYmdsL2xvYWRpbmdcIjo3OCxcIi4vd2ViZ2wvbWF0ZXJpYWxcIjo3OSxcIi4vd2ViZ2wvcDUuQ2FtZXJhXCI6ODAsXCIuL3dlYmdsL3A1Lkdlb21ldHJ5XCI6ODEsXCIuL3dlYmdsL3A1Lk1hdHJpeFwiOjgyLFwiLi93ZWJnbC9wNS5SZW5kZXJCdWZmZXJcIjo4MyxcIi4vd2ViZ2wvcDUuUmVuZGVyZXJHTFwiOjg2LFwiLi93ZWJnbC9wNS5SZW5kZXJlckdMLkltbWVkaWF0ZVwiOjg0LFwiLi93ZWJnbC9wNS5SZW5kZXJlckdMLlJldGFpbmVkXCI6ODUsXCIuL3dlYmdsL3A1LlNoYWRlclwiOjg3LFwiLi93ZWJnbC9wNS5UZXh0dXJlXCI6ODgsXCIuL3dlYmdsL3RleHRcIjo4OX1dLDE4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTthLmRlZmF1bHQuQ29sb3JDb252ZXJzaW9uPXt9LGEuZGVmYXVsdC5Db2xvckNvbnZlcnNpb24uX2hzYmFUb0hTTEE9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXSxyPWVbMV0sbj1lWzJdLGE9KDItcikqbi8yO3JldHVybiAwIT1hJiYoMT09YT9yPTA6YTwuNT9yLz0yLXI6cj1yKm4vKDItMiphKSksW3QscixhLGVbM11dfSxhLmRlZmF1bHQuQ29sb3JDb252ZXJzaW9uLl9oc2JhVG9SR0JBPWZ1bmN0aW9uKGUpe3ZhciB0PTYqZVswXSxyPWVbMV0sbj1lWzJdLGE9W107aWYoMD09PXIpYT1bbixuLG4sZVszXV07ZWxzZXt2YXIgbyxpLHMsbD1NYXRoLmZsb29yKHQpLHA9biooMS1yKSx1PW4qKDEtcioodC1sKSksYz1uKigxLXIqKDErbC10KSk7cz0xPT09bD8obz11LGk9bixwKToyPT09bD8obz1wLGk9bixjKTozPT09bD8obz1wLGk9dSxuKTo0PT09bD8obz1jLGk9cCxuKTo1PT09bD8obz1uLGk9cCx1KToobz1uLGk9YyxwKSxhPVtvLGkscyxlWzNdXX1yZXR1cm4gYX0sYS5kZWZhdWx0LkNvbG9yQ29udmVyc2lvbi5faHNsYVRvSFNCQT1mdW5jdGlvbihlKXt2YXIgdCxyPWVbMF0sbj1lWzFdLGE9ZVsyXTtyZXR1cm5bcixuPTIqKCh0PWE8LjU/KDErbikqYTphK24tYSpuKS1hKS90LHQsZVszXV19LGEuZGVmYXVsdC5Db2xvckNvbnZlcnNpb24uX2hzbGFUb1JHQkE9ZnVuY3Rpb24oZSl7dmFyIHQ9NiplWzBdLHI9ZVsxXSxuPWVbMl0sYT1bXTtpZigwPT09cilhPVtuLG4sbixlWzNdXTtlbHNle3ZhciBvLGk9MipuLShvPW48LjU/KDErcikqbjpuK3ItbipyKSxzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZTwwP2UrPTY6Njw9ZSYmKGUtPTYpLGU8MT90KyhyLXQpKmU6ZTwzP3I6ZTw0P3QrKHItdCkqKDQtZSk6dH07YT1bcygyK3QsaSxvKSxzKHQsaSxvKSxzKHQtMixpLG8pLGVbM11dfXJldHVybiBhfSxhLmRlZmF1bHQuQ29sb3JDb252ZXJzaW9uLl9yZ2JhVG9IU0JBPWZ1bmN0aW9uKGUpe3ZhciB0LHIsbj1lWzBdLGE9ZVsxXSxvPWVbMl0saT1NYXRoLm1heChuLGEsbykscz1pLU1hdGgubWluKG4sYSxvKTtyZXR1cm4gMD09cz9yPXQ9MDoocj1zL2ksbj09PWk/dD0oYS1vKS9zOmE9PT1pP3Q9Misoby1uKS9zOm89PT1pJiYodD00KyhuLWEpL3MpLHQ8MD90Kz02OjY8PXQmJih0LT02KSksW3QvNixyLGksZVszXV19LGEuZGVmYXVsdC5Db2xvckNvbnZlcnNpb24uX3JnYmFUb0hTTEE9ZnVuY3Rpb24oZSl7dmFyIHQscixuPWVbMF0sYT1lWzFdLG89ZVsyXSxpPU1hdGgubWF4KG4sYSxvKSxzPU1hdGgubWluKG4sYSxvKSxsPWkrcyxwPWktcztyZXR1cm4gMD09cD9yPXQ9MDoocj1sPDE/cC9sOnAvKDItbCksbj09PWk/dD0oYS1vKS9wOmE9PT1pP3Q9Misoby1uKS9wOm89PT1pJiYodD00KyhuLWEpL3ApLHQ8MD90Kz02OjY8PXQmJih0LT02KSksW3QvNixyLGwvMixlWzNdXX07dmFyIG89YS5kZWZhdWx0LkNvbG9yQ29udmVyc2lvbjtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MzJ9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sZD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWUoXCIuL3A1LkNvbG9yXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSxjLmRlZmF1bHQucHJvdG90eXBlLmFscGhhPWZ1bmN0aW9uKGUpe3JldHVybiBjLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImFscGhhXCIsYXJndW1lbnRzKSx0aGlzLmNvbG9yKGUpLl9nZXRBbHBoYSgpfSxjLmRlZmF1bHQucHJvdG90eXBlLmJsdWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmx1ZVwiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0Qmx1ZSgpfSxjLmRlZmF1bHQucHJvdG90eXBlLmJyaWdodG5lc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIGMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYnJpZ2h0bmVzc1wiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0QnJpZ2h0bmVzcygpfSxjLmRlZmF1bHQucHJvdG90eXBlLmNvbG9yPWZ1bmN0aW9uKCl7aWYoYy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjb2xvclwiLGFyZ3VtZW50cyksYXJndW1lbnRzWzBdaW5zdGFuY2VvZiBjLmRlZmF1bHQuQ29sb3IpcmV0dXJuIGFyZ3VtZW50c1swXTt2YXIgZT1hcmd1bWVudHNbMF1pbnN0YW5jZW9mIEFycmF5P2FyZ3VtZW50c1swXTphcmd1bWVudHM7cmV0dXJuIG5ldyBjLmRlZmF1bHQuQ29sb3IodGhpcyxlKX0sYy5kZWZhdWx0LnByb3RvdHlwZS5ncmVlbj1mdW5jdGlvbihlKXtyZXR1cm4gYy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJncmVlblwiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0R3JlZW4oKX0sYy5kZWZhdWx0LnByb3RvdHlwZS5odWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiaHVlXCIsYXJndW1lbnRzKSx0aGlzLmNvbG9yKGUpLl9nZXRIdWUoKX0sYy5kZWZhdWx0LnByb3RvdHlwZS5sZXJwQ29sb3I9ZnVuY3Rpb24oZSx0LHIpe2MuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibGVycENvbG9yXCIsYXJndW1lbnRzKTt2YXIgbixhLG8saSxzLGwscD10aGlzLl9jb2xvck1vZGUsdT10aGlzLl9jb2xvck1heGVzO2lmKHA9PT1kLlJHQilzPWUubGV2ZWxzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS8yNTV9KSxsPXQubGV2ZWxzLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS8yNTV9KTtlbHNlIGlmKHA9PT1kLkhTQillLl9nZXRCcmlnaHRuZXNzKCksdC5fZ2V0QnJpZ2h0bmVzcygpLHM9ZS5oc2JhLGw9dC5oc2JhO2Vsc2V7aWYocCE9PWQuSFNMKXRocm93IG5ldyBFcnJvcihcIlwiLmNvbmNhdChwLFwiY2Fubm90IGJlIHVzZWQgZm9yIGludGVycG9sYXRpb24uXCIpKTtlLl9nZXRMaWdodG5lc3MoKSx0Ll9nZXRMaWdodG5lc3MoKSxzPWUuaHNsYSxsPXQuaHNsYX1yZXR1cm4gcj1NYXRoLm1heChNYXRoLm1pbihyLDEpLDApLHZvaWQgMD09PXRoaXMubGVycCYmKHRoaXMubGVycD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHIqKHQtZSkrZX0pLG49dGhpcy5sZXJwKHNbMF0sbFswXSxyKSxhPXRoaXMubGVycChzWzFdLGxbMV0sciksbz10aGlzLmxlcnAoc1syXSxsWzJdLHIpLGk9dGhpcy5sZXJwKHNbM10sbFszXSxyKSxuKj11W3BdWzBdLGEqPXVbcF1bMV0sbyo9dVtwXVsyXSxpKj11W3BdWzNdLHRoaXMuY29sb3IobixhLG8saSl9LGMuZGVmYXVsdC5wcm90b3R5cGUubGlnaHRuZXNzPWZ1bmN0aW9uKGUpe3JldHVybiBjLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImxpZ2h0bmVzc1wiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0TGlnaHRuZXNzKCl9LGMuZGVmYXVsdC5wcm90b3R5cGUucmVkPWZ1bmN0aW9uKGUpe3JldHVybiBjLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlZFwiLGFyZ3VtZW50cyksdGhpcy5jb2xvcihlKS5fZ2V0UmVkKCl9LGMuZGVmYXVsdC5wcm90b3R5cGUuc2F0dXJhdGlvbj1mdW5jdGlvbihlKXtyZXR1cm4gYy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzYXR1cmF0aW9uXCIsYXJndW1lbnRzKSx0aGlzLmNvbG9yKGUpLl9nZXRTYXR1cmF0aW9uKCl9O3ZhciBhPWMuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCI6MjQsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiOjI1LFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCI6MjcsXCIuLi9jb3JlL21haW5cIjozMixcIi4vcDUuQ29sb3JcIjoyMH1dLDIwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgYz1uKGUoXCIuLi9jb3JlL21haW5cIikpLGQ9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09aShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSksaD1uKGUoXCIuL2NvbG9yX2NvbnZlcnNpb25cIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19Yy5kZWZhdWx0LkNvbG9yPWZ1bmN0aW9uKGUsdCl7aWYodGhpcy5fc3RvcmVNb2RlQW5kTWF4ZXMoZS5fY29sb3JNb2RlLGUuX2NvbG9yTWF4ZXMpLHRoaXMubW9kZSE9PWQuUkdCJiZ0aGlzLm1vZGUhPT1kLkhTTCYmdGhpcy5tb2RlIT09ZC5IU0IpdGhyb3cgbmV3IEVycm9yKFwiXCIuY29uY2F0KHRoaXMubW9kZSxcIiBpcyBhbiBpbnZhbGlkIGNvbG9yTW9kZS5cIikpO3JldHVybiB0aGlzLl9hcnJheT1jLmRlZmF1bHQuQ29sb3IuX3BhcnNlSW5wdXRzLmFwcGx5KHRoaXMsdCksdGhpcy5fY2FsY3VsYXRlTGV2ZWxzKCksdGhpc30sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmxldmVscyxyPXRoaXMuX2FycmF5LG49clszXTtzd2l0Y2goZSl7Y2FzZVwiI3JyZ2diYlwiOnJldHVyblwiI1wiLmNvbmNhdCh0WzBdPDE2P1wiMFwiLmNvbmNhdCh0WzBdLnRvU3RyaW5nKDE2KSk6dFswXS50b1N0cmluZygxNiksdFsxXTwxNj9cIjBcIi5jb25jYXQodFsxXS50b1N0cmluZygxNikpOnRbMV0udG9TdHJpbmcoMTYpLHRbMl08MTY/XCIwXCIuY29uY2F0KHRbMl0udG9TdHJpbmcoMTYpKTp0WzJdLnRvU3RyaW5nKDE2KSk7Y2FzZVwiI3JyZ2diYmFhXCI6cmV0dXJuXCIjXCIuY29uY2F0KHRbMF08MTY/XCIwXCIuY29uY2F0KHRbMF0udG9TdHJpbmcoMTYpKTp0WzBdLnRvU3RyaW5nKDE2KSx0WzFdPDE2P1wiMFwiLmNvbmNhdCh0WzFdLnRvU3RyaW5nKDE2KSk6dFsxXS50b1N0cmluZygxNiksdFsyXTwxNj9cIjBcIi5jb25jYXQodFsyXS50b1N0cmluZygxNikpOnRbMl0udG9TdHJpbmcoMTYpLHRbM108MTY/XCIwXCIuY29uY2F0KHRbMl0udG9TdHJpbmcoMTYpKTp0WzNdLnRvU3RyaW5nKDE2KSk7Y2FzZVwiI3JnYlwiOnJldHVyblwiI1wiLmNvbmNhdChNYXRoLnJvdW5kKDE1KnJbMF0pLnRvU3RyaW5nKDE2KSxNYXRoLnJvdW5kKDE1KnJbMV0pLnRvU3RyaW5nKDE2KSxNYXRoLnJvdW5kKDE1KnJbMl0pLnRvU3RyaW5nKDE2KSk7Y2FzZVwiI3JnYmFcIjpyZXR1cm5cIiNcIi5jb25jYXQoTWF0aC5yb3VuZCgxNSpyWzBdKS50b1N0cmluZygxNiksTWF0aC5yb3VuZCgxNSpyWzFdKS50b1N0cmluZygxNiksTWF0aC5yb3VuZCgxNSpyWzJdKS50b1N0cmluZygxNiksTWF0aC5yb3VuZCgxNSpyWzNdKS50b1N0cmluZygxNikpO2Nhc2VcInJnYlwiOnJldHVyblwicmdiKFwiLmNvbmNhdCh0WzBdLFwiLCBcIix0WzFdLFwiLCBcIix0WzJdLFwiKVwiKTtjYXNlXCJyZ2IlXCI6cmV0dXJuXCJyZ2IoXCIuY29uY2F0KCgxMDAqclswXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnJbMV0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCpyWzJdKS50b1ByZWNpc2lvbigzKSxcIiUpXCIpO2Nhc2VcInJnYmElXCI6cmV0dXJuXCJyZ2JhKFwiLmNvbmNhdCgoMTAwKnJbMF0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCpyWzFdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqclsyXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnJbM10pLnRvUHJlY2lzaW9uKDMpLFwiJSlcIik7Y2FzZVwiaHNiXCI6Y2FzZVwiaHN2XCI6cmV0dXJuIHRoaXMuaHNiYXx8KHRoaXMuaHNiYT1oLmRlZmF1bHQuX3JnYmFUb0hTQkEodGhpcy5fYXJyYXkpKSxcImhzYihcIi5jb25jYXQodGhpcy5oc2JhWzBdKnRoaXMubWF4ZXNbZC5IU0JdWzBdLFwiLCBcIix0aGlzLmhzYmFbMV0qdGhpcy5tYXhlc1tkLkhTQl1bMV0sXCIsIFwiLHRoaXMuaHNiYVsyXSp0aGlzLm1heGVzW2QuSFNCXVsyXSxcIilcIik7Y2FzZVwiaHNiJVwiOmNhc2VcImhzdiVcIjpyZXR1cm4gdGhpcy5oc2JhfHwodGhpcy5oc2JhPWguZGVmYXVsdC5fcmdiYVRvSFNCQSh0aGlzLl9hcnJheSkpLFwiaHNiKFwiLmNvbmNhdCgoMTAwKnRoaXMuaHNiYVswXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnRoaXMuaHNiYVsxXSkudG9QcmVjaXNpb24oMyksXCIlLCBcIiwoMTAwKnRoaXMuaHNiYVsyXSkudG9QcmVjaXNpb24oMyksXCIlKVwiKTtjYXNlXCJoc2JhXCI6Y2FzZVwiaHN2YVwiOnJldHVybiB0aGlzLmhzYmF8fCh0aGlzLmhzYmE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0JBKHRoaXMuX2FycmF5KSksXCJoc2JhKFwiLmNvbmNhdCh0aGlzLmhzYmFbMF0qdGhpcy5tYXhlc1tkLkhTQl1bMF0sXCIsIFwiLHRoaXMuaHNiYVsxXSp0aGlzLm1heGVzW2QuSFNCXVsxXSxcIiwgXCIsdGhpcy5oc2JhWzJdKnRoaXMubWF4ZXNbZC5IU0JdWzJdLFwiLCBcIixuLFwiKVwiKTtjYXNlXCJoc2JhJVwiOmNhc2VcImhzdmElXCI6cmV0dXJuIHRoaXMuaHNiYXx8KHRoaXMuaHNiYT1oLmRlZmF1bHQuX3JnYmFUb0hTQkEodGhpcy5fYXJyYXkpKSxcImhzYmEoXCIuY29uY2F0KCgxMDAqdGhpcy5oc2JhWzBdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2JhWzFdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2JhWzJdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqbikudG9QcmVjaXNpb24oMyksXCIlKVwiKTtjYXNlXCJoc2xcIjpyZXR1cm4gdGhpcy5oc2xhfHwodGhpcy5oc2xhPWguZGVmYXVsdC5fcmdiYVRvSFNMQSh0aGlzLl9hcnJheSkpLFwiaHNsKFwiLmNvbmNhdCh0aGlzLmhzbGFbMF0qdGhpcy5tYXhlc1tkLkhTTF1bMF0sXCIsIFwiLHRoaXMuaHNsYVsxXSp0aGlzLm1heGVzW2QuSFNMXVsxXSxcIiwgXCIsdGhpcy5oc2xhWzJdKnRoaXMubWF4ZXNbZC5IU0xdWzJdLFwiKVwiKTtjYXNlXCJoc2wlXCI6cmV0dXJuIHRoaXMuaHNsYXx8KHRoaXMuaHNsYT1oLmRlZmF1bHQuX3JnYmFUb0hTTEEodGhpcy5fYXJyYXkpKSxcImhzbChcIi5jb25jYXQoKDEwMCp0aGlzLmhzbGFbMF0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCp0aGlzLmhzbGFbMV0pLnRvUHJlY2lzaW9uKDMpLFwiJSwgXCIsKDEwMCp0aGlzLmhzbGFbMl0pLnRvUHJlY2lzaW9uKDMpLFwiJSlcIik7Y2FzZVwiaHNsYVwiOnJldHVybiB0aGlzLmhzbGF8fCh0aGlzLmhzbGE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0xBKHRoaXMuX2FycmF5KSksXCJoc2xhKFwiLmNvbmNhdCh0aGlzLmhzbGFbMF0qdGhpcy5tYXhlc1tkLkhTTF1bMF0sXCIsIFwiLHRoaXMuaHNsYVsxXSp0aGlzLm1heGVzW2QuSFNMXVsxXSxcIiwgXCIsdGhpcy5oc2xhWzJdKnRoaXMubWF4ZXNbZC5IU0xdWzJdLFwiLCBcIixuLFwiKVwiKTtjYXNlXCJoc2xhJVwiOnJldHVybiB0aGlzLmhzbGF8fCh0aGlzLmhzbGE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0xBKHRoaXMuX2FycmF5KSksXCJoc2woXCIuY29uY2F0KCgxMDAqdGhpcy5oc2xhWzBdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2xhWzFdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqdGhpcy5oc2xhWzJdKS50b1ByZWNpc2lvbigzKSxcIiUsIFwiLCgxMDAqbikudG9QcmVjaXNpb24oMyksXCIlKVwiKTtjYXNlXCJyZ2JhXCI6ZGVmYXVsdDpyZXR1cm5cInJnYmEoXCIuY29uY2F0KHRbMF0sXCIsXCIsdFsxXSxcIixcIix0WzJdLFwiLFwiLG4sXCIpXCIpfX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5zZXRSZWQ9ZnVuY3Rpb24oZSl7dGhpcy5fYXJyYXlbMF09ZS90aGlzLm1heGVzW2QuUkdCXVswXSx0aGlzLl9jYWxjdWxhdGVMZXZlbHMoKX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5zZXRHcmVlbj1mdW5jdGlvbihlKXt0aGlzLl9hcnJheVsxXT1lL3RoaXMubWF4ZXNbZC5SR0JdWzFdLHRoaXMuX2NhbGN1bGF0ZUxldmVscygpfSxjLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLnNldEJsdWU9ZnVuY3Rpb24oZSl7dGhpcy5fYXJyYXlbMl09ZS90aGlzLm1heGVzW2QuUkdCXVsyXSx0aGlzLl9jYWxjdWxhdGVMZXZlbHMoKX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5zZXRBbHBoYT1mdW5jdGlvbihlKXt0aGlzLl9hcnJheVszXT1lL3RoaXMubWF4ZXNbdGhpcy5tb2RlXVszXSx0aGlzLl9jYWxjdWxhdGVMZXZlbHMoKX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fY2FsY3VsYXRlTGV2ZWxzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuX2FycmF5LHQ9dGhpcy5sZXZlbHM9bmV3IEFycmF5KGUubGVuZ3RoKSxyPWUubGVuZ3RoLTE7MDw9cjstLXIpdFtyXT1NYXRoLnJvdW5kKDI1NSplW3JdKX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0QWxwaGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXlbM10qdGhpcy5tYXhlc1t0aGlzLm1vZGVdWzNdfSxjLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLl9zdG9yZU1vZGVBbmRNYXhlcz1mdW5jdGlvbihlLHQpe3RoaXMubW9kZT1lLHRoaXMubWF4ZXM9dH0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0TW9kZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGV9LGMuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldE1heGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWF4ZXN9LGMuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldEJsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXlbMl0qdGhpcy5tYXhlc1tkLlJHQl1bMl19LGMuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldEJyaWdodG5lc3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oc2JhfHwodGhpcy5oc2JhPWguZGVmYXVsdC5fcmdiYVRvSFNCQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNiYVsyXSp0aGlzLm1heGVzW2QuSFNCXVsyXX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0R3JlZW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXlbMV0qdGhpcy5tYXhlc1tkLlJHQl1bMV19LGMuZGVmYXVsdC5Db2xvci5wcm90b3R5cGUuX2dldEh1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGU9PT1kLkhTQj8odGhpcy5oc2JhfHwodGhpcy5oc2JhPWguZGVmYXVsdC5fcmdiYVRvSFNCQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNiYVswXSp0aGlzLm1heGVzW2QuSFNCXVswXSk6KHRoaXMuaHNsYXx8KHRoaXMuaHNsYT1oLmRlZmF1bHQuX3JnYmFUb0hTTEEodGhpcy5fYXJyYXkpKSx0aGlzLmhzbGFbMF0qdGhpcy5tYXhlc1tkLkhTTF1bMF0pfSxjLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLl9nZXRMaWdodG5lc3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oc2xhfHwodGhpcy5oc2xhPWguZGVmYXVsdC5fcmdiYVRvSFNMQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNsYVsyXSp0aGlzLm1heGVzW2QuSFNMXVsyXX0sYy5kZWZhdWx0LkNvbG9yLnByb3RvdHlwZS5fZ2V0UmVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FycmF5WzBdKnRoaXMubWF4ZXNbZC5SR0JdWzBdfSxjLmRlZmF1bHQuQ29sb3IucHJvdG90eXBlLl9nZXRTYXR1cmF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubW9kZT09PWQuSFNCPyh0aGlzLmhzYmF8fCh0aGlzLmhzYmE9aC5kZWZhdWx0Ll9yZ2JhVG9IU0JBKHRoaXMuX2FycmF5KSksdGhpcy5oc2JhWzFdKnRoaXMubWF4ZXNbZC5IU0JdWzFdKToodGhpcy5oc2xhfHwodGhpcy5oc2xhPWguZGVmYXVsdC5fcmdiYVRvSFNMQSh0aGlzLl9hcnJheSkpLHRoaXMuaHNsYVsxXSp0aGlzLm1heGVzW2QuSFNMXVsxXSl9O3ZhciBtPXthbGljZWJsdWU6XCIjZjBmOGZmXCIsYW50aXF1ZXdoaXRlOlwiI2ZhZWJkN1wiLGFxdWE6XCIjMDBmZmZmXCIsYXF1YW1hcmluZTpcIiM3ZmZmZDRcIixhenVyZTpcIiNmMGZmZmZcIixiZWlnZTpcIiNmNWY1ZGNcIixiaXNxdWU6XCIjZmZlNGM0XCIsYmxhY2s6XCIjMDAwMDAwXCIsYmxhbmNoZWRhbG1vbmQ6XCIjZmZlYmNkXCIsYmx1ZTpcIiMwMDAwZmZcIixibHVldmlvbGV0OlwiIzhhMmJlMlwiLGJyb3duOlwiI2E1MmEyYVwiLGJ1cmx5d29vZDpcIiNkZWI4ODdcIixjYWRldGJsdWU6XCIjNWY5ZWEwXCIsY2hhcnRyZXVzZTpcIiM3ZmZmMDBcIixjaG9jb2xhdGU6XCIjZDI2OTFlXCIsY29yYWw6XCIjZmY3ZjUwXCIsY29ybmZsb3dlcmJsdWU6XCIjNjQ5NWVkXCIsY29ybnNpbGs6XCIjZmZmOGRjXCIsY3JpbXNvbjpcIiNkYzE0M2NcIixjeWFuOlwiIzAwZmZmZlwiLGRhcmtibHVlOlwiIzAwMDA4YlwiLGRhcmtjeWFuOlwiIzAwOGI4YlwiLGRhcmtnb2xkZW5yb2Q6XCIjYjg4NjBiXCIsZGFya2dyYXk6XCIjYTlhOWE5XCIsZGFya2dyZWVuOlwiIzAwNjQwMFwiLGRhcmtncmV5OlwiI2E5YTlhOVwiLGRhcmtraGFraTpcIiNiZGI3NmJcIixkYXJrbWFnZW50YTpcIiM4YjAwOGJcIixkYXJrb2xpdmVncmVlbjpcIiM1NTZiMmZcIixkYXJrb3JhbmdlOlwiI2ZmOGMwMFwiLGRhcmtvcmNoaWQ6XCIjOTkzMmNjXCIsZGFya3JlZDpcIiM4YjAwMDBcIixkYXJrc2FsbW9uOlwiI2U5OTY3YVwiLGRhcmtzZWFncmVlbjpcIiM4ZmJjOGZcIixkYXJrc2xhdGVibHVlOlwiIzQ4M2Q4YlwiLGRhcmtzbGF0ZWdyYXk6XCIjMmY0ZjRmXCIsZGFya3NsYXRlZ3JleTpcIiMyZjRmNGZcIixkYXJrdHVycXVvaXNlOlwiIzAwY2VkMVwiLGRhcmt2aW9sZXQ6XCIjOTQwMGQzXCIsZGVlcHBpbms6XCIjZmYxNDkzXCIsZGVlcHNreWJsdWU6XCIjMDBiZmZmXCIsZGltZ3JheTpcIiM2OTY5NjlcIixkaW1ncmV5OlwiIzY5Njk2OVwiLGRvZGdlcmJsdWU6XCIjMWU5MGZmXCIsZmlyZWJyaWNrOlwiI2IyMjIyMlwiLGZsb3JhbHdoaXRlOlwiI2ZmZmFmMFwiLGZvcmVzdGdyZWVuOlwiIzIyOGIyMlwiLGZ1Y2hzaWE6XCIjZmYwMGZmXCIsZ2FpbnNib3JvOlwiI2RjZGNkY1wiLGdob3N0d2hpdGU6XCIjZjhmOGZmXCIsZ29sZDpcIiNmZmQ3MDBcIixnb2xkZW5yb2Q6XCIjZGFhNTIwXCIsZ3JheTpcIiM4MDgwODBcIixncmVlbjpcIiMwMDgwMDBcIixncmVlbnllbGxvdzpcIiNhZGZmMmZcIixncmV5OlwiIzgwODA4MFwiLGhvbmV5ZGV3OlwiI2YwZmZmMFwiLGhvdHBpbms6XCIjZmY2OWI0XCIsaW5kaWFucmVkOlwiI2NkNWM1Y1wiLGluZGlnbzpcIiM0YjAwODJcIixpdm9yeTpcIiNmZmZmZjBcIixraGFraTpcIiNmMGU2OGNcIixsYXZlbmRlcjpcIiNlNmU2ZmFcIixsYXZlbmRlcmJsdXNoOlwiI2ZmZjBmNVwiLGxhd25ncmVlbjpcIiM3Y2ZjMDBcIixsZW1vbmNoaWZmb246XCIjZmZmYWNkXCIsbGlnaHRibHVlOlwiI2FkZDhlNlwiLGxpZ2h0Y29yYWw6XCIjZjA4MDgwXCIsbGlnaHRjeWFuOlwiI2UwZmZmZlwiLGxpZ2h0Z29sZGVucm9keWVsbG93OlwiI2ZhZmFkMlwiLGxpZ2h0Z3JheTpcIiNkM2QzZDNcIixsaWdodGdyZWVuOlwiIzkwZWU5MFwiLGxpZ2h0Z3JleTpcIiNkM2QzZDNcIixsaWdodHBpbms6XCIjZmZiNmMxXCIsbGlnaHRzYWxtb246XCIjZmZhMDdhXCIsbGlnaHRzZWFncmVlbjpcIiMyMGIyYWFcIixsaWdodHNreWJsdWU6XCIjODdjZWZhXCIsbGlnaHRzbGF0ZWdyYXk6XCIjNzc4ODk5XCIsbGlnaHRzbGF0ZWdyZXk6XCIjNzc4ODk5XCIsbGlnaHRzdGVlbGJsdWU6XCIjYjBjNGRlXCIsbGlnaHR5ZWxsb3c6XCIjZmZmZmUwXCIsbGltZTpcIiMwMGZmMDBcIixsaW1lZ3JlZW46XCIjMzJjZDMyXCIsbGluZW46XCIjZmFmMGU2XCIsbWFnZW50YTpcIiNmZjAwZmZcIixtYXJvb246XCIjODAwMDAwXCIsbWVkaXVtYXF1YW1hcmluZTpcIiM2NmNkYWFcIixtZWRpdW1ibHVlOlwiIzAwMDBjZFwiLG1lZGl1bW9yY2hpZDpcIiNiYTU1ZDNcIixtZWRpdW1wdXJwbGU6XCIjOTM3MGRiXCIsbWVkaXVtc2VhZ3JlZW46XCIjM2NiMzcxXCIsbWVkaXVtc2xhdGVibHVlOlwiIzdiNjhlZVwiLG1lZGl1bXNwcmluZ2dyZWVuOlwiIzAwZmE5YVwiLG1lZGl1bXR1cnF1b2lzZTpcIiM0OGQxY2NcIixtZWRpdW12aW9sZXRyZWQ6XCIjYzcxNTg1XCIsbWlkbmlnaHRibHVlOlwiIzE5MTk3MFwiLG1pbnRjcmVhbTpcIiNmNWZmZmFcIixtaXN0eXJvc2U6XCIjZmZlNGUxXCIsbW9jY2FzaW46XCIjZmZlNGI1XCIsbmF2YWpvd2hpdGU6XCIjZmZkZWFkXCIsbmF2eTpcIiMwMDAwODBcIixvbGRsYWNlOlwiI2ZkZjVlNlwiLG9saXZlOlwiIzgwODAwMFwiLG9saXZlZHJhYjpcIiM2YjhlMjNcIixvcmFuZ2U6XCIjZmZhNTAwXCIsb3JhbmdlcmVkOlwiI2ZmNDUwMFwiLG9yY2hpZDpcIiNkYTcwZDZcIixwYWxlZ29sZGVucm9kOlwiI2VlZThhYVwiLHBhbGVncmVlbjpcIiM5OGZiOThcIixwYWxldHVycXVvaXNlOlwiI2FmZWVlZVwiLHBhbGV2aW9sZXRyZWQ6XCIjZGI3MDkzXCIscGFwYXlhd2hpcDpcIiNmZmVmZDVcIixwZWFjaHB1ZmY6XCIjZmZkYWI5XCIscGVydTpcIiNjZDg1M2ZcIixwaW5rOlwiI2ZmYzBjYlwiLHBsdW06XCIjZGRhMGRkXCIscG93ZGVyYmx1ZTpcIiNiMGUwZTZcIixwdXJwbGU6XCIjODAwMDgwXCIscmViZWNjYXB1cnBsZTpcIiM2NjMzOTlcIixyZWQ6XCIjZmYwMDAwXCIscm9zeWJyb3duOlwiI2JjOGY4ZlwiLHJveWFsYmx1ZTpcIiM0MTY5ZTFcIixzYWRkbGVicm93bjpcIiM4YjQ1MTNcIixzYWxtb246XCIjZmE4MDcyXCIsc2FuZHlicm93bjpcIiNmNGE0NjBcIixzZWFncmVlbjpcIiMyZThiNTdcIixzZWFzaGVsbDpcIiNmZmY1ZWVcIixzaWVubmE6XCIjYTA1MjJkXCIsc2lsdmVyOlwiI2MwYzBjMFwiLHNreWJsdWU6XCIjODdjZWViXCIsc2xhdGVibHVlOlwiIzZhNWFjZFwiLHNsYXRlZ3JheTpcIiM3MDgwOTBcIixzbGF0ZWdyZXk6XCIjNzA4MDkwXCIsc25vdzpcIiNmZmZhZmFcIixzcHJpbmdncmVlbjpcIiMwMGZmN2ZcIixzdGVlbGJsdWU6XCIjNDY4MmI0XCIsdGFuOlwiI2QyYjQ4Y1wiLHRlYWw6XCIjMDA4MDgwXCIsdGhpc3RsZTpcIiNkOGJmZDhcIix0b21hdG86XCIjZmY2MzQ3XCIsdHVycXVvaXNlOlwiIzQwZTBkMFwiLHZpb2xldDpcIiNlZTgyZWVcIix3aGVhdDpcIiNmNWRlYjNcIix3aGl0ZTpcIiNmZmZmZmZcIix3aGl0ZXNtb2tlOlwiI2Y1ZjVmNVwiLHllbGxvdzpcIiNmZmZmMDBcIix5ZWxsb3dncmVlbjpcIiM5YWNkMzJcIn0sYT0vXFxzKi8sbz0vKFxcZHsxLDN9KS8sbD0vKCg/OlxcZCsoPzpcXC5cXGQrKT8pfCg/OlxcLlxcZCspKS8scD1uZXcgUmVnRXhwKFwiXCIuY29uY2F0KGwuc291cmNlLFwiJVwiKSksZj17SEVYMzovXiMoW2EtZjAtOV0pKFthLWYwLTldKShbYS1mMC05XSkkL2ksSEVYNDovXiMoW2EtZjAtOV0pKFthLWYwLTldKShbYS1mMC05XSkoW2EtZjAtOV0pJC9pLEhFWDY6L14jKFthLWYwLTldezJ9KShbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pJC9pLEhFWDg6L14jKFthLWYwLTldezJ9KShbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pKFthLWYwLTldezJ9KSQvaSxSR0I6bmV3IFJlZ0V4cChbXCJecmdiXFxcXChcIixvLnNvdXJjZSxcIixcIixvLnNvdXJjZSxcIixcIixvLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKGEuc291cmNlKSxcImlcIiksUkdCX1BFUkNFTlQ6bmV3IFJlZ0V4cChbXCJecmdiXFxcXChcIixwLnNvdXJjZSxcIixcIixwLnNvdXJjZSxcIixcIixwLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKGEuc291cmNlKSxcImlcIiksUkdCQTpuZXcgUmVnRXhwKFtcIl5yZ2JhXFxcXChcIixvLnNvdXJjZSxcIixcIixvLnNvdXJjZSxcIixcIixvLnNvdXJjZSxcIixcIixsLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKGEuc291cmNlKSxcImlcIiksUkdCQV9QRVJDRU5UOm5ldyBSZWdFeHAoW1wiXnJnYmFcXFxcKFwiLHAuc291cmNlLFwiLFwiLHAuc291cmNlLFwiLFwiLHAuc291cmNlLFwiLFwiLGwuc291cmNlLFwiXFxcXCkkXCJdLmpvaW4oYS5zb3VyY2UpLFwiaVwiKSxIU0w6bmV3IFJlZ0V4cChbXCJeaHNsXFxcXChcIixvLnNvdXJjZSxcIixcIixwLnNvdXJjZSxcIixcIixwLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKGEuc291cmNlKSxcImlcIiksSFNMQTpuZXcgUmVnRXhwKFtcIl5oc2xhXFxcXChcIixvLnNvdXJjZSxcIixcIixwLnNvdXJjZSxcIixcIixwLnNvdXJjZSxcIixcIixsLnNvdXJjZSxcIlxcXFwpJFwiXS5qb2luKGEuc291cmNlKSxcImlcIiksSFNCOm5ldyBSZWdFeHAoW1wiXmhzYlxcXFwoXCIsby5zb3VyY2UsXCIsXCIscC5zb3VyY2UsXCIsXCIscC5zb3VyY2UsXCJcXFxcKSRcIl0uam9pbihhLnNvdXJjZSksXCJpXCIpLEhTQkE6bmV3IFJlZ0V4cChbXCJeaHNiYVxcXFwoXCIsby5zb3VyY2UsXCIsXCIscC5zb3VyY2UsXCIsXCIscC5zb3VyY2UsXCIsXCIsbC5zb3VyY2UsXCJcXFxcKSRcIl0uam9pbihhLnNvdXJjZSksXCJpXCIpfTtjLmRlZmF1bHQuQ29sb3IuX3BhcnNlSW5wdXRzPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhLG89YXJndW1lbnRzLmxlbmd0aCxpPXRoaXMubW9kZSxzPXRoaXMubWF4ZXNbaV0sbD1bXTtpZigzPD1vKXtmb3IobFswXT1lL3NbMF0sbFsxXT10L3NbMV0sbFsyXT1yL3NbMl0sbFszXT1cIm51bWJlclwiPT10eXBlb2Ygbj9uL3NbM106MSxhPWwubGVuZ3RoLTE7MDw9YTstLWEpe3ZhciBwPWxbYV07cDwwP2xbYV09MDoxPHAmJihsW2FdPTEpfXJldHVybiBpPT09ZC5IU0w/aC5kZWZhdWx0Ll9oc2xhVG9SR0JBKGwpOmk9PT1kLkhTQj9oLmRlZmF1bHQuX2hzYmFUb1JHQkEobCk6bH1pZigxPT09byYmXCJzdHJpbmdcIj09dHlwZW9mIGUpe3ZhciB1PWUudHJpbSgpLnRvTG93ZXJDYXNlKCk7aWYobVt1XSlyZXR1cm4gYy5kZWZhdWx0LkNvbG9yLl9wYXJzZUlucHV0cy5jYWxsKHRoaXMsbVt1XSk7aWYoZi5IRVgzLnRlc3QodSkpcmV0dXJuKGw9Zi5IRVgzLmV4ZWModSkuc2xpY2UoMSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBwYXJzZUludChlK2UsMTYpLzI1NX0pKVszXT0xLGw7aWYoZi5IRVg2LnRlc3QodSkpcmV0dXJuKGw9Zi5IRVg2LmV4ZWModSkuc2xpY2UoMSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBwYXJzZUludChlLDE2KS8yNTV9KSlbM109MSxsO2lmKGYuSEVYNC50ZXN0KHUpKXJldHVybiBsPWYuSEVYNC5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZStlLDE2KS8yNTV9KTtpZihmLkhFWDgudGVzdCh1KSlyZXR1cm4gbD1mLkhFWDguZXhlYyh1KS5zbGljZSgxKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUsMTYpLzI1NX0pO2lmKGYuUkdCLnRlc3QodSkpcmV0dXJuKGw9Zi5SR0IuZXhlYyh1KS5zbGljZSgxKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUvMjU1fSkpWzNdPTEsbDtpZihmLlJHQl9QRVJDRU5ULnRlc3QodSkpcmV0dXJuKGw9Zi5SR0JfUEVSQ0VOVC5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VGbG9hdChlKS8xMDB9KSlbM109MSxsO2lmKGYuUkdCQS50ZXN0KHUpKXJldHVybiBsPWYuUkdCQS5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAzPT09dD9wYXJzZUZsb2F0KGUpOmUvMjU1fSk7aWYoZi5SR0JBX1BFUkNFTlQudGVzdCh1KSlyZXR1cm4gbD1mLlJHQkFfUEVSQ0VOVC5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAzPT09dD9wYXJzZUZsb2F0KGUpOnBhcnNlRmxvYXQoZSkvMTAwfSk7aWYoZi5IU0wudGVzdCh1KT8obD1mLkhTTC5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6cGFyc2VJbnQoZSwxMCkvMTAwfSkpWzNdPTE6Zi5IU0xBLnRlc3QodSkmJihsPWYuSFNMQS5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6Mz09PXQ/cGFyc2VGbG9hdChlKTpwYXJzZUludChlLDEwKS8xMDB9KSksKGw9bC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgubWF4KE1hdGgubWluKGUsMSksMCl9KSkubGVuZ3RoKXJldHVybiBoLmRlZmF1bHQuX2hzbGFUb1JHQkEobCk7aWYoZi5IU0IudGVzdCh1KT8obD1mLkhTQi5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6cGFyc2VJbnQoZSwxMCkvMTAwfSkpWzNdPTE6Zi5IU0JBLnRlc3QodSkmJihsPWYuSFNCQS5leGVjKHUpLnNsaWNlKDEpLm1hcChmdW5jdGlvbihlLHQpe3JldHVybiAwPT09dD9wYXJzZUludChlLDEwKS8zNjA6Mz09PXQ/cGFyc2VGbG9hdChlKTpwYXJzZUludChlLDEwKS8xMDB9KSksbC5sZW5ndGgpe2ZvcihhPWwubGVuZ3RoLTE7MDw9YTstLWEpbFthXT1NYXRoLm1heChNYXRoLm1pbihsW2FdLDEpLDApO3JldHVybiBoLmRlZmF1bHQuX2hzYmFUb1JHQkEobCl9bD1bMSwxLDEsMV19ZWxzZXtpZigxIT09byYmMiE9PW98fFwibnVtYmVyXCIhPXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcihcIlwiLmNvbmNhdChhcmd1bWVudHMsXCJpcyBub3QgYSB2YWxpZCBjb2xvciByZXByZXNlbnRhdGlvbi5cIikpO2xbMF09ZS9zWzJdLGxbMV09ZS9zWzJdLGxbMl09ZS9zWzJdLGxbM109XCJudW1iZXJcIj09dHlwZW9mIHQ/dC9zWzNdOjEsbD1sLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5tYXgoTWF0aC5taW4oZSwxKSwwKX0pfXJldHVybiBsfTt2YXIgdT1jLmRlZmF1bHQuQ29sb3I7ci5kZWZhdWx0PXV9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjIsXCIuLi9jb3JlL21haW5cIjozMixcIi4vY29sb3JfY29udmVyc2lvblwiOjE4fV0sMjE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKGUpe3JldHVybihpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLHM9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09aShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1wKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcCgpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHA9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1lKFwiLi9wNS5Db2xvclwiKSxzLmRlZmF1bHQucHJvdG90eXBlLmJhY2tncm91bmQ9ZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4oZT10aGlzLl9yZW5kZXJlcikuYmFja2dyb3VuZC5hcHBseShlLGFyZ3VtZW50cyksdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJlci5jbGVhcigpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuY29sb3JNb2RlPWZ1bmN0aW9uKGUsdCxyLG4sYSl7aWYocy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjb2xvck1vZGVcIixhcmd1bWVudHMpLGU9PT1sLlJHQnx8ZT09PWwuSFNCfHxlPT09bC5IU0wpe3RoaXMuX2NvbG9yTW9kZT1lO3ZhciBvPXRoaXMuX2NvbG9yTWF4ZXNbZV07Mj09PWFyZ3VtZW50cy5sZW5ndGg/KG9bMF09dCxvWzFdPXQsb1syXT10LG9bM109dCk6ND09PWFyZ3VtZW50cy5sZW5ndGg/KG9bMF09dCxvWzFdPXIsb1syXT1uKTo1PT09YXJndW1lbnRzLmxlbmd0aCYmKG9bMF09dCxvWzFdPXIsb1syXT1uLG9bM109YSl9cmV0dXJuIHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuZmlsbD1mdW5jdGlvbigpe3ZhciBlO3JldHVybiB0aGlzLl9yZW5kZXJlci5fc2V0UHJvcGVydHkoXCJfZmlsbFNldFwiLCEwKSx0aGlzLl9yZW5kZXJlci5fc2V0UHJvcGVydHkoXCJfZG9GaWxsXCIsITApLChlPXRoaXMuX3JlbmRlcmVyKS5maWxsLmFwcGx5KGUsYXJndW1lbnRzKSx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLm5vRmlsbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJlci5fc2V0UHJvcGVydHkoXCJfZG9GaWxsXCIsITEpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUubm9TdHJva2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX2RvU3Ryb2tlXCIsITEpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuc3Ryb2tlPWZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9zdHJva2VTZXRcIiwhMCksdGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX2RvU3Ryb2tlXCIsITApLChlPXRoaXMuX3JlbmRlcmVyKS5zdHJva2UuYXBwbHkoZSxhcmd1bWVudHMpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuZXJhc2U9ZnVuY3Rpb24oKXt2YXIgZT0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06MjU1LHQ9MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjI1NTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuZXJhc2UoZSx0KSx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLm5vRXJhc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyZXIubm9FcmFzZSgpLHRoaXN9O3ZhciBhPXMuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4uL2NvcmUvbWFpblwiOjMyLFwiLi9wNS5Db2xvclwiOjIwfV0sMjI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLkZJTEw9ci5TVFJPS0U9ci5DVVJWRT1yLkJFWklFUj1yLlFVQURSQVRJQz1yLkxJTkVBUj1yLl9DVFhfTUlERExFPXIuX0RFRkFVTFRfTEVBRE1VTFQ9ci5fREVGQVVMVF9URVhUX0ZJTEw9ci5CT0xESVRBTElDPXIuQk9MRD1yLklUQUxJQz1yLk5PUk1BTD1yLkJMVVI9ci5FUk9ERT1yLkRJTEFURT1yLlBPU1RFUklaRT1yLklOVkVSVD1yLk9QQVFVRT1yLkdSQVk9ci5USFJFU0hPTEQ9ci5CVVJOPXIuRE9ER0U9ci5TT0ZUX0xJR0hUPXIuSEFSRF9MSUdIVD1yLk9WRVJMQVk9ci5SRVBMQUNFPXIuU0NSRUVOPXIuTVVMVElQTFk9ci5FWENMVVNJT049ci5TVUJUUkFDVD1yLkRJRkZFUkVOQ0U9ci5MSUdIVEVTVD1yLkRBUktFU1Q9ci5BREQ9ci5SRU1PVkU9ci5CTEVORD1yLlVQX0FSUk9XPXIuVEFCPXIuU0hJRlQ9ci5SSUdIVF9BUlJPVz1yLlJFVFVSTj1yLk9QVElPTj1yLkxFRlRfQVJST1c9ci5FU0NBUEU9ci5FTlRFUj1yLkRPV05fQVJST1c9ci5ERUxFVEU9ci5DT05UUk9MPXIuQkFDS1NQQUNFPXIuQUxUPXIuQVVUTz1yLkhTTD1yLkhTQj1yLlJHQj1yLk1JVEVSPXIuQkVWRUw9ci5ST1VORD1yLlNRVUFSRT1yLlBST0pFQ1Q9ci5QSUU9ci5DSE9SRD1yLk9QRU49ci5DTE9TRT1yLlRFU1M9ci5RVUFEX1NUUklQPXIuUVVBRFM9ci5UUklBTkdMRV9TVFJJUD1yLlRSSUFOR0xFX0ZBTj1yLlRSSUFOR0xFUz1yLkxJTkVfTE9PUD1yLkxJTkVfU1RSSVA9ci5MSU5FUz1yLlBPSU5UUz1yLkJBU0VMSU5FPXIuQk9UVE9NPXIuVE9QPXIuQ0VOVEVSPXIuTEVGVD1yLlJJR0hUPXIuUkFESVVTPXIuQ09STkVSUz1yLkNPUk5FUj1yLlJBRF9UT19ERUc9ci5ERUdfVE9fUkFEPXIuUkFESUFOUz1yLkRFR1JFRVM9ci5UV09fUEk9ci5UQVU9ci5RVUFSVEVSX1BJPXIuUEk9ci5IQUxGX1BJPXIuV0FJVD1yLlRFWFQ9ci5NT1ZFPXIuSEFORD1yLkNST1NTPXIuQVJST1c9ci5XRUJHTD1yLlAyRD12b2lkIDAsci5BWEVTPXIuR1JJRD1yLl9ERUZBVUxUX0ZJTEw9ci5fREVGQVVMVF9TVFJPS0U9ci5QT1JUUkFJVD1yLkxBTkRTQ0FQRT1yLk1JUlJPUj1yLkNMQU1QPXIuUkVQRUFUPXIuTkVBUkVTVD1yLklNQUdFPXIuSU1NRURJQVRFPXIuVEVYVFVSRT12b2lkIDA7dmFyIG49TWF0aC5QSTtyLlAyRD1cInAyZFwiO3IuV0VCR0w9XCJ3ZWJnbFwiO3IuQVJST1c9XCJkZWZhdWx0XCI7ci5DUk9TUz1cImNyb3NzaGFpclwiO3IuSEFORD1cInBvaW50ZXJcIjtyLk1PVkU9XCJtb3ZlXCI7ci5URVhUPVwidGV4dFwiO3IuV0FJVD1cIndhaXRcIjt2YXIgYT1uLzI7ci5IQUxGX1BJPWE7dmFyIG89bjtyLlBJPW87dmFyIGk9bi80O3IuUVVBUlRFUl9QST1pO3ZhciBzPTIqbjtyLlRBVT1zO3ZhciBsPTIqbjtyLlRXT19QST1sO3IuREVHUkVFUz1cImRlZ3JlZXNcIjtyLlJBRElBTlM9XCJyYWRpYW5zXCI7dmFyIHA9bi8xODA7ci5ERUdfVE9fUkFEPXA7dmFyIHU9MTgwL247ci5SQURfVE9fREVHPXU7ci5DT1JORVI9XCJjb3JuZXJcIjtyLkNPUk5FUlM9XCJjb3JuZXJzXCI7ci5SQURJVVM9XCJyYWRpdXNcIjtyLlJJR0hUPVwicmlnaHRcIjtyLkxFRlQ9XCJsZWZ0XCI7ci5DRU5URVI9XCJjZW50ZXJcIjtyLlRPUD1cInRvcFwiO3IuQk9UVE9NPVwiYm90dG9tXCI7ci5CQVNFTElORT1cImFscGhhYmV0aWNcIjtyLlBPSU5UUz0wO3IuTElORVM9MTtyLkxJTkVfU1RSSVA9MztyLkxJTkVfTE9PUD0yO3IuVFJJQU5HTEVTPTQ7ci5UUklBTkdMRV9GQU49NjtyLlRSSUFOR0xFX1NUUklQPTU7ci5RVUFEUz1cInF1YWRzXCI7ci5RVUFEX1NUUklQPVwicXVhZF9zdHJpcFwiO3IuVEVTUz1cInRlc3NcIjtyLkNMT1NFPVwiY2xvc2VcIjtyLk9QRU49XCJvcGVuXCI7ci5DSE9SRD1cImNob3JkXCI7ci5QSUU9XCJwaWVcIjtyLlBST0pFQ1Q9XCJzcXVhcmVcIjtyLlNRVUFSRT1cImJ1dHRcIjtyLlJPVU5EPVwicm91bmRcIjtyLkJFVkVMPVwiYmV2ZWxcIjtyLk1JVEVSPVwibWl0ZXJcIjtyLlJHQj1cInJnYlwiO3IuSFNCPVwiaHNiXCI7ci5IU0w9XCJoc2xcIjtyLkFVVE89XCJhdXRvXCI7ci5BTFQ9MTg7ci5CQUNLU1BBQ0U9ODtyLkNPTlRST0w9MTc7ci5ERUxFVEU9NDY7ci5ET1dOX0FSUk9XPTQwO3IuRU5URVI9MTM7ci5FU0NBUEU9Mjc7ci5MRUZUX0FSUk9XPTM3O3IuT1BUSU9OPTE4O3IuUkVUVVJOPTEzO3IuUklHSFRfQVJST1c9Mzk7ci5TSElGVD0xNjtyLlRBQj05O3IuVVBfQVJST1c9Mzg7ci5CTEVORD1cInNvdXJjZS1vdmVyXCI7ci5SRU1PVkU9XCJkZXN0aW5hdGlvbi1vdXRcIjtyLkFERD1cImxpZ2h0ZXJcIjtyLkRBUktFU1Q9XCJkYXJrZW5cIjtyLkxJR0hURVNUPVwibGlnaHRlblwiO3IuRElGRkVSRU5DRT1cImRpZmZlcmVuY2VcIjtyLlNVQlRSQUNUPVwic3VidHJhY3RcIjtyLkVYQ0xVU0lPTj1cImV4Y2x1c2lvblwiO3IuTVVMVElQTFk9XCJtdWx0aXBseVwiO3IuU0NSRUVOPVwic2NyZWVuXCI7ci5SRVBMQUNFPVwiY29weVwiO3IuT1ZFUkxBWT1cIm92ZXJsYXlcIjtyLkhBUkRfTElHSFQ9XCJoYXJkLWxpZ2h0XCI7ci5TT0ZUX0xJR0hUPVwic29mdC1saWdodFwiO3IuRE9ER0U9XCJjb2xvci1kb2RnZVwiO3IuQlVSTj1cImNvbG9yLWJ1cm5cIjtyLlRIUkVTSE9MRD1cInRocmVzaG9sZFwiO3IuR1JBWT1cImdyYXlcIjtyLk9QQVFVRT1cIm9wYXF1ZVwiO3IuSU5WRVJUPVwiaW52ZXJ0XCI7ci5QT1NURVJJWkU9XCJwb3N0ZXJpemVcIjtyLkRJTEFURT1cImRpbGF0ZVwiO3IuRVJPREU9XCJlcm9kZVwiO3IuQkxVUj1cImJsdXJcIjtyLk5PUk1BTD1cIm5vcm1hbFwiO3IuSVRBTElDPVwiaXRhbGljXCI7ci5CT0xEPVwiYm9sZFwiO3IuQk9MRElUQUxJQz1cImJvbGQgaXRhbGljXCI7ci5fREVGQVVMVF9URVhUX0ZJTEw9XCIjMDAwMDAwXCI7ci5fREVGQVVMVF9MRUFETVVMVD0xLjI1O3IuX0NUWF9NSURETEU9XCJtaWRkbGVcIjtyLkxJTkVBUj1cImxpbmVhclwiO3IuUVVBRFJBVElDPVwicXVhZHJhdGljXCI7ci5CRVpJRVI9XCJiZXppZXJcIjtyLkNVUlZFPVwiY3VydmVcIjtyLlNUUk9LRT1cInN0cm9rZVwiO3IuRklMTD1cImZpbGxcIjtyLlRFWFRVUkU9XCJ0ZXh0dXJlXCI7ci5JTU1FRElBVEU9XCJpbW1lZGlhdGVcIjtyLklNQUdFPVwiaW1hZ2VcIjtyLk5FQVJFU1Q9XCJuZWFyZXN0XCI7ci5SRVBFQVQ9XCJyZXBlYXRcIjtyLkNMQU1QPVwiY2xhbXBcIjtyLk1JUlJPUj1cIm1pcnJvclwiO3IuTEFORFNDQVBFPVwibGFuZHNjYXBlXCI7ci5QT1JUUkFJVD1cInBvcnRyYWl0XCI7ci5fREVGQVVMVF9TVFJPS0U9XCIjMDAwMDAwXCI7ci5fREVGQVVMVF9GSUxMPVwiI0ZGRkZGRlwiO3IuR1JJRD1cImdyaWRcIjtyLkFYRVM9XCJheGVzXCJ9LHt9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sbz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4vY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfXZhciBsPVtvLkFSUk9XLG8uQ1JPU1Msby5IQU5ELG8uTU9WRSxvLlRFWFQsby5XQUlUXTthLmRlZmF1bHQucHJvdG90eXBlLl9mcmFtZVJhdGU9MCxhLmRlZmF1bHQucHJvdG90eXBlLl9sYXN0RnJhbWVUaW1lPXdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSxhLmRlZmF1bHQucHJvdG90eXBlLl90YXJnZXRGcmFtZVJhdGU9NjA7dmFyIHA9d2luZG93LnByaW50O2Z1bmN0aW9uIHUoKXtyZXR1cm4gd2luZG93LmlubmVyV2lkdGh8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCYmZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRofHxkb2N1bWVudC5ib2R5JiZkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRofHwwfWZ1bmN0aW9uIGMoKXtyZXR1cm4gd2luZG93LmlubmVySGVpZ2h0fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHR8fGRvY3VtZW50LmJvZHkmJmRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0fHwwfWEuZGVmYXVsdC5wcm90b3R5cGUucHJpbnQ9ZnVuY3Rpb24oKXt2YXIgZTthcmd1bWVudHMubGVuZ3RoPyhlPWNvbnNvbGUpLmxvZy5hcHBseShlLGFyZ3VtZW50cyk6cCgpfSxhLmRlZmF1bHQucHJvdG90eXBlLmZyYW1lQ291bnQ9MCxhLmRlZmF1bHQucHJvdG90eXBlLmRlbHRhVGltZT0wLGEuZGVmYXVsdC5wcm90b3R5cGUuZm9jdXNlZD1kb2N1bWVudC5oYXNGb2N1cygpLGEuZGVmYXVsdC5wcm90b3R5cGUuY3Vyc29yPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1cImF1dG9cIixhPXRoaXMuX2N1ckVsZW1lbnQuZWx0O2lmKGwuaW5jbHVkZXMoZSkpbj1lO2Vsc2UgaWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe3ZhciBvPVwiXCI7dCYmciYmXCJudW1iZXJcIj09dHlwZW9mIHQmJlwibnVtYmVyXCI9PXR5cGVvZiByJiYobz1cIlwiLmNvbmNhdCh0LFwiIFwiKS5jb25jYXQocikpLG49XCJodHRwOi8vXCI9PT1lLnN1YnN0cmluZygwLDcpfHxcImh0dHBzOi8vXCI9PT1lLnN1YnN0cmluZygwLDgpP1widXJsKFwiLmNvbmNhdChlLFwiKSBcIikuY29uY2F0KG8sXCIsIGF1dG9cIik6L1xcLihjdXJ8anBnfGpwZWd8Z2lmfHBuZ3xDVVJ8SlBHfEpQRUd8R0lGfFBORykkLy50ZXN0KGUpP1widXJsKFwiLmNvbmNhdChlLFwiKSBcIikuY29uY2F0KG8sXCIsIGF1dG9cIik6ZX1hLnN0eWxlLmN1cnNvcj1ufSxhLmRlZmF1bHQucHJvdG90eXBlLmZyYW1lUmF0ZT1mdW5jdGlvbihlKXtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJmcmFtZVJhdGVcIixhcmd1bWVudHMpLFwibnVtYmVyXCIhPXR5cGVvZiBlfHxlPDA/dGhpcy5fZnJhbWVSYXRlOih0aGlzLl9zZXRQcm9wZXJ0eShcIl90YXJnZXRGcmFtZVJhdGVcIixlKSwwPT09ZSYmdGhpcy5fc2V0UHJvcGVydHkoXCJfZnJhbWVSYXRlXCIsZSksdGhpcyl9LGEuZGVmYXVsdC5wcm90b3R5cGUuZ2V0RnJhbWVSYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZnJhbWVSYXRlKCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuc2V0RnJhbWVSYXRlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmZyYW1lUmF0ZShlKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5ub0N1cnNvcj1mdW5jdGlvbigpe3RoaXMuX2N1ckVsZW1lbnQuZWx0LnN0eWxlLmN1cnNvcj1cIm5vbmVcIn0sYS5kZWZhdWx0LnByb3RvdHlwZS5kaXNwbGF5V2lkdGg9c2NyZWVuLndpZHRoLGEuZGVmYXVsdC5wcm90b3R5cGUuZGlzcGxheUhlaWdodD1zY3JlZW4uaGVpZ2h0LGEuZGVmYXVsdC5wcm90b3R5cGUud2luZG93V2lkdGg9dSgpLGEuZGVmYXVsdC5wcm90b3R5cGUud2luZG93SGVpZ2h0PWMoKSxhLmRlZmF1bHQucHJvdG90eXBlLl9vbnJlc2l6ZT1mdW5jdGlvbihlKXt0aGlzLl9zZXRQcm9wZXJ0eShcIndpbmRvd1dpZHRoXCIsdSgpKSx0aGlzLl9zZXRQcm9wZXJ0eShcIndpbmRvd0hlaWdodFwiLGMoKSk7dmFyIHQscj10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztcImZ1bmN0aW9uXCI9PXR5cGVvZiByLndpbmRvd1Jlc2l6ZWQmJih2b2lkIDA9PT0odD1yLndpbmRvd1Jlc2l6ZWQoZSkpfHx0fHxlLnByZXZlbnREZWZhdWx0KCkpfSxhLmRlZmF1bHQucHJvdG90eXBlLndpZHRoPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5oZWlnaHQ9MCxhLmRlZmF1bHQucHJvdG90eXBlLmZ1bGxzY3JlZW49ZnVuY3Rpb24oZSl7aWYoYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJmdWxsc2NyZWVuXCIsYXJndW1lbnRzKSx2b2lkIDA9PT1lKXJldHVybiBkb2N1bWVudC5mdWxsc2NyZWVuRWxlbWVudHx8ZG9jdW1lbnQud2Via2l0RnVsbHNjcmVlbkVsZW1lbnR8fGRvY3VtZW50Lm1vekZ1bGxTY3JlZW5FbGVtZW50fHxkb2N1bWVudC5tc0Z1bGxzY3JlZW5FbGVtZW50O2U/ZnVuY3Rpb24oZSl7aWYoIShkb2N1bWVudC5mdWxsc2NyZWVuRW5hYmxlZHx8ZG9jdW1lbnQud2Via2l0RnVsbHNjcmVlbkVuYWJsZWR8fGRvY3VtZW50Lm1vekZ1bGxTY3JlZW5FbmFibGVkfHxkb2N1bWVudC5tc0Z1bGxzY3JlZW5FbmFibGVkKSl0aHJvdyBuZXcgRXJyb3IoXCJGdWxsc2NyZWVuIG5vdCBlbmFibGVkIGluIHRoaXMgYnJvd3Nlci5cIik7ZS5yZXF1ZXN0RnVsbHNjcmVlbj9lLnJlcXVlc3RGdWxsc2NyZWVuKCk6ZS5tb3pSZXF1ZXN0RnVsbFNjcmVlbj9lLm1velJlcXVlc3RGdWxsU2NyZWVuKCk6ZS53ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbj9lLndlYmtpdFJlcXVlc3RGdWxsc2NyZWVuKCk6ZS5tc1JlcXVlc3RGdWxsc2NyZWVuJiZlLm1zUmVxdWVzdEZ1bGxzY3JlZW4oKX0oZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTpkb2N1bWVudC5leGl0RnVsbHNjcmVlbj9kb2N1bWVudC5leGl0RnVsbHNjcmVlbigpOmRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW4/ZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbigpOmRvY3VtZW50LndlYmtpdEV4aXRGdWxsc2NyZWVuP2RvY3VtZW50LndlYmtpdEV4aXRGdWxsc2NyZWVuKCk6ZG9jdW1lbnQubXNFeGl0RnVsbHNjcmVlbiYmZG9jdW1lbnQubXNFeGl0RnVsbHNjcmVlbigpfSxhLmRlZmF1bHQucHJvdG90eXBlLnBpeGVsRGVuc2l0eT1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJwaXhlbERlbnNpdHlcIixhcmd1bWVudHMpLFwibnVtYmVyXCI9PXR5cGVvZiBlPyhlIT09dGhpcy5fcGl4ZWxEZW5zaXR5JiYodGhpcy5fcGl4ZWxEZW5zaXR5PWUpLCh0PXRoaXMpLnJlc2l6ZUNhbnZhcyh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0LCEwKSk6dD10aGlzLl9waXhlbERlbnNpdHksdH0sYS5kZWZhdWx0LnByb3RvdHlwZS5kaXNwbGF5RGVuc2l0eT1mdW5jdGlvbigpe3JldHVybiB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb30sYS5kZWZhdWx0LnByb3RvdHlwZS5nZXRVUkw9ZnVuY3Rpb24oKXtyZXR1cm4gbG9jYXRpb24uaHJlZn0sYS5kZWZhdWx0LnByb3RvdHlwZS5nZXRVUkxQYXRoPWZ1bmN0aW9uKCl7cmV0dXJuIGxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuXCJcIiE9PWV9KX0sYS5kZWZhdWx0LnByb3RvdHlwZS5nZXRVUkxQYXJhbXM9ZnVuY3Rpb24oKXtmb3IodmFyIGUsdD0vWz8mXShbXiY9XSspKD86WyY9XSkoW14mPV0rKS9naW0scj17fTtudWxsIT0oZT10LmV4ZWMobG9jYXRpb24uc2VhcmNoKSk7KWUuaW5kZXg9PT10Lmxhc3RJbmRleCYmdC5sYXN0SW5kZXgrKyxyW2VbMV1dPWVbMl07cmV0dXJuIHJ9O3ZhciBkPWEuZGVmYXVsdDtyLmRlZmF1bHQ9ZH0se1wiLi9jb25zdGFudHNcIjoyMixcIi4vbWFpblwiOjMyfV0sMjQ6W2Z1bmN0aW9uKHIsZSx0KXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49cihcIi4uL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtyKFwiLi4vaW50ZXJuYXRpb25hbGl6YXRpb25cIik7dmFyIG89bnVsbCxpPW51bGw7YS5kZWZhdWx0Ll9mcmllbmRseUVycm9yPWEuZGVmYXVsdC5fY2hlY2tGb3JVc2VyRGVmaW5lZEZ1bmN0aW9ucz1hLmRlZmF1bHQuX2Zlc0Vycm9yTW9uaXRvcj1mdW5jdGlvbigpe30sbz1udWxsO3ZhciBzPVwiaHR0cHM6Ly9naXRodWIuY29tL3Byb2Nlc3NpbmcvcDUuanMvd2lraS9wNS5qcy1vdmVydmlldyN3aHktY2FudC1pLWFzc2lnbi12YXJpYWJsZXMtdXNpbmctcDUtZnVuY3Rpb25zLWFuZC12YXJpYWJsZXMtYmVmb3JlLXNldHVwXCI7aT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUocil7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHIpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm5cIl9cIiE9PWVbMF0mJighKGUgaW4gdCkmJih0W2VdPSEwKSl9KS5tYXAoZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIHQ9XCJmdW5jdGlvblwiPT10eXBlb2YgcltlXT9cImZ1bmN0aW9uXCI6ZT09PWUudG9VcHBlckNhc2UoKT9cImNvbnN0YW50XCI6XCJ2YXJpYWJsZVwiLHtuYW1lOmUsdHlwZTp0fX0pfXZhciB0PXt9OyhvPVtdLmNvbmNhdChlKGEuZGVmYXVsdC5wcm90b3R5cGUpLGUocihcIi4uL2NvbnN0YW50c1wiKSkpKS5zb3J0KGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQubmFtZS5sZW5ndGgtZS5uYW1lLmxlbmd0aH0pfTtmdW5jdGlvbiBsKHIsbil7bj1ufHxjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLG98fGkoKSxvLnNvbWUoZnVuY3Rpb24oZSl7aWYoci5tZXNzYWdlJiZudWxsIT09ci5tZXNzYWdlLm1hdGNoKFwiXFxcXFc/XCIuY29uY2F0KGUubmFtZSxcIlxcXFxXXCIpKSl7dmFyIHQ9XCJmdW5jdGlvblwiPT09ZS50eXBlP1wiXCIuY29uY2F0KGUubmFtZSxcIigpXCIpOmUubmFtZTtyZXR1cm4gbihcIkRpZCB5b3UganVzdCB0cnkgdG8gdXNlIHA1LmpzJ3MgXCIuY29uY2F0KHQsXCIgXCIpLmNvbmNhdChlLnR5cGUsXCI/IElmIHNvLCB5b3UgbWF5IHdhbnQgdG8gbW92ZSBpdCBpbnRvIHlvdXIgc2tldGNoJ3Mgc2V0dXAoKSBmdW5jdGlvbi5cXG5cXG5Gb3IgbW9yZSBkZXRhaWxzLCBzZWU6IFwiKS5jb25jYXQocykpLCEwfX0pfWEuZGVmYXVsdC5wcm90b3R5cGUuX2hlbHBGb3JNaXN1c2VkQXRUb3BMZXZlbENvZGU9bCxcImNvbXBsZXRlXCIhPT1kb2N1bWVudC5yZWFkeVN0YXRlJiYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLGwsITEpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGZ1bmN0aW9uKCl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLGwsITEpfSkpO3ZhciBwPWEuZGVmYXVsdDt0LmRlZmF1bHQ9cH0se1wiLi4vY29uc3RhbnRzXCI6MjIsXCIuLi9pbnRlcm5hdGlvbmFsaXphdGlvblwiOjMwLFwiLi4vbWFpblwiOjMyLFwiLi9icm93c2VyX2Vycm9yc1wiOnZvaWQgMH1dLDI1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZShcIi4uL2ludGVybmF0aW9uYWxpemF0aW9uXCIpO2EuZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yPWZ1bmN0aW9uKCl7fTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2ludGVybmF0aW9uYWxpemF0aW9uXCI6MzAsXCIuLi9tYWluXCI6MzJ9XSwyNjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2Z1bmN0aW9uIG8oKXt2YXIgdD0vKF58QClcXFMrOlxcZCsvLHI9L15cXHMqYXQgLiooXFxTKzpcXGQrfFxcKG5hdGl2ZVxcKSkvbSxuPS9eKGV2YWxAKT8oXFxbbmF0aXZlIGNvZGVdKT8kLztyZXR1cm57cGFyc2U6ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUuc3RhY2t0cmFjZXx8dm9pZCAwIT09ZVtcIm9wZXJhI3NvdXJjZWxvY1wiXT90aGlzLnBhcnNlT3BlcmEoZSk6ZS5zdGFjayYmZS5zdGFjay5tYXRjaChyKT90aGlzLnBhcnNlVjhPcklFKGUpOmUuc3RhY2s/dGhpcy5wYXJzZUZGT3JTYWZhcmkoZSk6dm9pZCAwfSxleHRyYWN0TG9jYXRpb246ZnVuY3Rpb24oZSl7aWYoLTE9PT1lLmluZGV4T2YoXCI6XCIpKXJldHVybltlXTt2YXIgdD0vKC4rPykoPzo6KFxcZCspKT8oPzo6KFxcZCspKT8kLy5leGVjKGUucmVwbGFjZSgvWygpXS9nLFwiXCIpKTtyZXR1cm5bdFsxXSx0WzJdfHx2b2lkIDAsdFszXXx8dm9pZCAwXX0scGFyc2VWOE9ySUU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3RhY2suc3BsaXQoXCJcXG5cIikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiEhZS5tYXRjaChyKX0sdGhpcykubWFwKGZ1bmN0aW9uKGUpey0xPGUuaW5kZXhPZihcIihldmFsIFwiKSYmKGU9ZS5yZXBsYWNlKC9ldmFsIGNvZGUvZyxcImV2YWxcIikucmVwbGFjZSgvKFxcKGV2YWwgYXQgW14oKV0qKXwoXFwpLC4qJCkvZyxcIlwiKSk7dmFyIHQ9ZS5yZXBsYWNlKC9eXFxzKy8sXCJcIikucmVwbGFjZSgvXFwoZXZhbCBjb2RlL2csXCIoXCIpLHI9dC5tYXRjaCgvIChcXCgoLispOihcXGQrKTooXFxkKylcXCkkKS8pLG49KHQ9cj90LnJlcGxhY2UoclswXSxcIlwiKTp0KS5zcGxpdCgvXFxzKy8pLnNsaWNlKDEpLGE9dGhpcy5leHRyYWN0TG9jYXRpb24ocj9yWzFdOm4ucG9wKCkpO3JldHVybntmdW5jdGlvbk5hbWU6bi5qb2luKFwiIFwiKXx8dm9pZCAwLGZpbGVOYW1lOi0xPFtcImV2YWxcIixcIjxhbm9ueW1vdXM+XCJdLmluZGV4T2YoYVswXSk/dm9pZCAwOmFbMF0sbGluZU51bWJlcjphWzFdLGNvbHVtbk51bWJlcjphWzJdLHNvdXJjZTplfX0sdGhpcyl9LHBhcnNlRkZPclNhZmFyaTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zdGFjay5zcGxpdChcIlxcblwiKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIWUubWF0Y2gobil9LHRoaXMpLm1hcChmdW5jdGlvbihlKXtpZigtMTxlLmluZGV4T2YoXCIgPiBldmFsXCIpJiYoZT1lLnJlcGxhY2UoLyBsaW5lIChcXGQrKSg/OiA+IGV2YWwgbGluZSBcXGQrKSogPiBldmFsOlxcZCs6XFxkKy9nLFwiOiQxXCIpKSwtMT09PWUuaW5kZXhPZihcIkBcIikmJi0xPT09ZS5pbmRleE9mKFwiOlwiKSlyZXR1cm57ZnVuY3Rpb25OYW1lOmV9O3ZhciB0PS8oKC4qXCIuK1wiW15AXSopP1teQF0qKSg/OkApLyxyPWUubWF0Y2godCksbj1yJiZyWzFdP3JbMV06dm9pZCAwLGE9dGhpcy5leHRyYWN0TG9jYXRpb24oZS5yZXBsYWNlKHQsXCJcIikpO3JldHVybntmdW5jdGlvbk5hbWU6bixmaWxlTmFtZTphWzBdLGxpbmVOdW1iZXI6YVsxXSxjb2x1bW5OdW1iZXI6YVsyXSxzb3VyY2U6ZX19LHRoaXMpfSxwYXJzZU9wZXJhOmZ1bmN0aW9uKGUpe3JldHVybiFlLnN0YWNrdHJhY2V8fC0xPGUubWVzc2FnZS5pbmRleE9mKFwiXFxuXCIpJiZlLm1lc3NhZ2Uuc3BsaXQoXCJcXG5cIikubGVuZ3RoPmUuc3RhY2t0cmFjZS5zcGxpdChcIlxcblwiKS5sZW5ndGg/dGhpcy5wYXJzZU9wZXJhOShlKTplLnN0YWNrP3RoaXMucGFyc2VPcGVyYTExKGUpOnRoaXMucGFyc2VPcGVyYTEwKGUpfSxwYXJzZU9wZXJhOTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9L0xpbmUgKFxcZCspLipzY3JpcHQgKD86aW4gKT8oXFxTKykvaSxyPWUubWVzc2FnZS5zcGxpdChcIlxcblwiKSxuPVtdLGE9MixvPXIubGVuZ3RoO2E8bzthKz0yKXt2YXIgaT10LmV4ZWMoclthXSk7aSYmbi5wdXNoKHtmaWxlTmFtZTppWzJdLGxpbmVOdW1iZXI6aVsxXSxzb3VyY2U6clthXX0pfXJldHVybiBufSxwYXJzZU9wZXJhMTA6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PS9MaW5lIChcXGQrKS4qc2NyaXB0ICg/OmluICk/KFxcUyspKD86OiBJbiBmdW5jdGlvbiAoXFxTKykpPyQvaSxyPWUuc3RhY2t0cmFjZS5zcGxpdChcIlxcblwiKSxuPVtdLGE9MCxvPXIubGVuZ3RoO2E8bzthKz0yKXt2YXIgaT10LmV4ZWMoclthXSk7aSYmbi5wdXNoKHtmdW5jdGlvbk5hbWU6aVszXXx8dm9pZCAwLGZpbGVOYW1lOmlbMl0sbGluZU51bWJlcjppWzFdLHNvdXJjZTpyW2FdfSl9cmV0dXJuIG59LHBhcnNlT3BlcmExMTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zdGFjay5zcGxpdChcIlxcblwiKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuISFlLm1hdGNoKHQpJiYhZS5tYXRjaCgvXkVycm9yIGNyZWF0ZWQgYXQvKX0sdGhpcykubWFwKGZ1bmN0aW9uKGUpe3ZhciB0LHI9ZS5zcGxpdChcIkBcIiksbj10aGlzLmV4dHJhY3RMb2NhdGlvbihyLnBvcCgpKSxhPXIuc2hpZnQoKXx8XCJcIixvPWEucmVwbGFjZSgvPGFub255bW91cyBmdW5jdGlvbig6IChcXHcrKSk/Pi8sXCIkMlwiKS5yZXBsYWNlKC9cXChbXildKlxcKS9nLFwiXCIpfHx2b2lkIDA7cmV0dXJuIGEubWF0Y2goL1xcKChbXildKilcXCkvKSYmKHQ9YS5yZXBsYWNlKC9eW14oXStcXCgoW14pXSopXFwpJC8sXCIkMVwiKSkse2Z1bmN0aW9uTmFtZTpvLGFyZ3M6dm9pZCAwPT09dHx8XCJbYXJndW1lbnRzIG5vdCBhdmFpbGFibGVdXCI9PT10P3ZvaWQgMDp0LnNwbGl0KFwiLFwiKSxmaWxlTmFtZTpuWzBdLGxpbmVOdW1iZXI6blsxXSxjb2x1bW5OdW1iZXI6blsyXSxzb3VyY2U6ZX19LHRoaXMpfX19YS5kZWZhdWx0Ll9nZXRFcnJvclN0YWNrUGFyc2VyPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBvfTt2YXIgaT1hLmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uL21haW5cIjozMn1dLDI3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07KGZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm47aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1zKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybjt2YXIgdD1pKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscil9KShlKFwiLi4vY29uc3RhbnRzXCIpKSxlKFwiLi4vaW50ZXJuYXRpb25hbGl6YXRpb25cIik7ZnVuY3Rpb24gaSgpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIGk9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBzKGUpe3JldHVybihzPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1hLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycz1hLmRlZmF1bHQuX2NsZWFyVmFsaWRhdGVQYXJhbXNDYWNoZT1mdW5jdGlvbigpe307dmFyIG89YS5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi8uLi8uLi9kb2NzL3BhcmFtZXRlckRhdGEuanNvblwiOjEsXCIuLi9jb25zdGFudHNcIjoyMixcIi4uL2ludGVybmF0aW9uYWxpemF0aW9uXCI6MzAsXCIuLi9tYWluXCI6MzJ9XSwyODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG89ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09aShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX12YXIgbj17bW9kZUFkanVzdDpmdW5jdGlvbihlLHQscixuLGEpe3JldHVybiBhPT09by5DT1JORVI/e3g6ZSx5OnQsdzpyLGg6bn06YT09PW8uQ09STkVSUz97eDplLHk6dCx3OnItZSxoOm4tdH06YT09PW8uUkFESVVTP3t4OmUtcix5OnQtbix3OjIqcixoOjIqbn06YT09PW8uQ0VOVEVSP3t4OmUtLjUqcix5OnQtLjUqbix3OnIsaDpufTp2b2lkIDB9fTtyLmRlZmF1bHQ9bn0se1wiLi9jb25zdGFudHNcIjoyMn1dLDI5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZShcIi4vaW50ZXJuYXRpb25hbGl6YXRpb25cIik7dmFyIG89UHJvbWlzZS5yZXNvbHZlKCk7UHJvbWlzZS5hbGwoW25ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7XCJjb21wbGV0ZVwiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZT9lKCk6d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsZSwhMSl9KSxvXSkudGhlbihmdW5jdGlvbigpe3ZvaWQgMD09PXdpbmRvdy5fc2V0dXBEb25lP3dpbmRvdy5tb2NoYXx8KHdpbmRvdy5zZXR1cCYmXCJmdW5jdGlvblwiPT10eXBlb2Ygd2luZG93LnNldHVwfHx3aW5kb3cuZHJhdyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygd2luZG93LmRyYXcpJiYhYS5kZWZhdWx0Lmluc3RhbmNlJiZuZXcgYS5kZWZhdWx0OmNvbnNvbGUud2FybihcInA1LmpzIHNlZW1zIHRvIGhhdmUgYmVlbiBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcy4gUGxlYXNlIHJlbW92ZSB0aGUgZHVwbGljYXRlIGltcG9ydFwiKX0pfSx7XCIuLi9jb3JlL21haW5cIjozMixcIi4vaW50ZXJuYXRpb25hbGl6YXRpb25cIjozMH1dLDMwOltmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KG4sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksbi5pbml0aWFsaXplPW4udHJhbnNsYXRvcj12b2lkIDA7dmFyIGEsbz1yKGUoXCJpMThuZXh0XCIpKSxpPXIoZShcImkxOG5leHQtYnJvd3Nlci1sYW5ndWFnZWRldGVjdG9yXCIpKTtmdW5jdGlvbiByKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgcz1mdW5jdGlvbigpe3JldHVybiBjb25zb2xlLmRlYnVnKFwicDUuanMgdHJhbnNsYXRvciBjYWxsZWQgYmVmb3JlIHRyYW5zbGF0aW9ucyB3ZXJlIGxvYWRlZFwiKSxcIlwifTtuLnRyYW5zbGF0b3I9cztuLmluaXRpYWxpemU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxyKXtvLmRlZmF1bHQudXNlKGkuZGVmYXVsdCkuaW5pdCh7ZmFsbGJhY2tMbmc6XCJlblwiLG5lc3RpbmdQcmVmaXg6XCIkdHIoXCIsbmVzdGluZ1N1ZmZpeDpcIilcIixkZWZhdWx0TlM6XCJ0cmFuc2xhdGlvblwiLHJldHVybkVtcHR5U3RyaW5nOiExLGludGVycG9sYXRpb246e2VzY2FwZVZhbHVlOiExfSxkZXRlY3Rpb246e2NoZWNrV2hpdGVsaXN0OiExfSxyZXNvdXJjZXM6YX0pLnRoZW4oZnVuY3Rpb24oZSl7bi50cmFuc2xhdG9yPXM9ZSx0KCl9LGZ1bmN0aW9uKGUpe3JldHVybiByKFwiVHJhbnNsYXRpb25zIGZhaWxlZCB0byBsb2FkIChcIi5jb25jYXQoZSxcIilcIikpfSl9KX19LHtcIi4uLy4uL3RyYW5zbGF0aW9uc1wiOnZvaWQgMCxpMThuZXh0OjQsXCJpMThuZXh0LWJyb3dzZXItbGFuZ3VhZ2VkZXRlY3RvclwiOjR9XSwzMTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07YS5kZWZhdWx0LnByb3RvdHlwZS5wdXNoU3R5bGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJwdXNoU3R5bGUoKSBub3QgdXNlZCwgc2VlIHB1c2goKVwiKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5wb3BTdHlsZT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInBvcFN0eWxlKCkgbm90IHVzZWQsIHNlZSBwb3AoKVwiKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5wb3BNYXRyaXg9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJwb3BNYXRyaXgoKSBub3QgdXNlZCwgc2VlIHBvcCgpXCIpfSxhLmRlZmF1bHQucHJvdG90eXBlLnB1c2hNYXRyaXg9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJwdXNoTWF0cml4KCkgbm90IHVzZWQsIHNlZSBwdXNoKClcIil9O3ZhciBvPWEuZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi9tYWluXCI6MzJ9XSwzMjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDAsZShcIi4vc2hpbVwiKTt2YXIgbj1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4vY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIGEoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG49dFtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbi5rZXksbil9fXZhciBvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXyhlLHQscil7dmFyIGQ9dGhpczshZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLF8pLHRoaXMuX3NldHVwRG9uZT0hMSx0aGlzLl9waXhlbERlbnNpdHk9TWF0aC5jZWlsKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvKXx8MSx0aGlzLl91c2VyTm9kZT10LHRoaXMuX2N1ckVsZW1lbnQ9bnVsbCx0aGlzLl9lbGVtZW50cz1bXSx0aGlzLl9nbEF0dHJpYnV0ZXM9bnVsbCx0aGlzLl9yZXF1ZXN0QW5pbUlkPTAsdGhpcy5fcHJlbG9hZENvdW50PTAsdGhpcy5faXNHbG9iYWw9ITEsdGhpcy5fbG9vcD0hMCx0aGlzLl9pbml0aWFsaXplSW5zdGFuY2VWYXJpYWJsZXMoKSx0aGlzLl9kZWZhdWx0Q2FudmFzU2l6ZT17d2lkdGg6MTAwLGhlaWdodDoxMDB9LHRoaXMuX2V2ZW50cz17bW91c2Vtb3ZlOm51bGwsbW91c2Vkb3duOm51bGwsbW91c2V1cDpudWxsLGRyYWdlbmQ6bnVsbCxkcmFnb3ZlcjpudWxsLGNsaWNrOm51bGwsZGJsY2xpY2s6bnVsbCxtb3VzZW92ZXI6bnVsbCxtb3VzZW91dDpudWxsLGtleWRvd246bnVsbCxrZXl1cDpudWxsLGtleXByZXNzOm51bGwsdG91Y2hzdGFydDpudWxsLHRvdWNobW92ZTpudWxsLHRvdWNoZW5kOm51bGwscmVzaXplOm51bGwsYmx1cjpudWxsfSx0aGlzLl9taWxsaXNTdGFydD0tMSx0aGlzLl9sY2dfcmFuZG9tX3N0YXRlPW51bGwsdGhpcy5fZ2F1c3NpYW5fcHJldmlvdXM9ITEsdGhpcy5fZXZlbnRzLndoZWVsPW51bGwsdGhpcy5fbG9hZGluZ1NjcmVlbklkPVwicDVfbG9hZGluZ1wiLHRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzPXt9O3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKF8ucHJvdG90eXBlLl9yZWdpc3RlcmVkTWV0aG9kcyksYT0hMCxvPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIHMsbD1uW1N5bWJvbC5pdGVyYXRvcl0oKTshKGE9KHM9bC5uZXh0KCkpLmRvbmUpO2E9ITApe3ZhciBwPXMudmFsdWU7dGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHNbcF09Xy5wcm90b3R5cGUuX3JlZ2lzdGVyZWRNZXRob2RzW3BdLnNsaWNlKCl9fWNhdGNoKGUpe289ITAsaT1lfWZpbmFsbHl7dHJ5e2F8fG51bGw9PWwucmV0dXJufHxsLnJldHVybigpfWZpbmFsbHl7aWYobyl0aHJvdyBpfX13aW5kb3cuRGV2aWNlT3JpZW50YXRpb25FdmVudCYmKHRoaXMuX2V2ZW50cy5kZXZpY2VvcmllbnRhdGlvbj1udWxsKSx3aW5kb3cuRGV2aWNlTW90aW9uRXZlbnQmJiF3aW5kb3cuX2lzTm9kZVdlYmtpdCYmKHRoaXMuX2V2ZW50cy5kZXZpY2Vtb3Rpb249bnVsbCksdGhpcy5fc3RhcnQ9ZnVuY3Rpb24oKXtkLl91c2VyTm9kZSYmXCJzdHJpbmdcIj09dHlwZW9mIGQuX3VzZXJOb2RlJiYoZC5fdXNlck5vZGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZC5fdXNlck5vZGUpKTt2YXIgZT0oZC5faXNHbG9iYWw/d2luZG93OmQpLnByZWxvYWQ7aWYoZSl7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZC5fbG9hZGluZ1NjcmVlbklkKTtpZighdCkodD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKS5pbm5lckhUTUw9XCJMb2FkaW5nLi4uXCIsdC5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCIsdC5pZD1kLl9sb2FkaW5nU2NyZWVuSWQsKGQuX3VzZXJOb2RlfHxkb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZCh0KTt2YXIgcj1kLl9wcmVsb2FkTWV0aG9kcztmb3IodmFyIG4gaW4gcil7cltuXT1yW25dfHxfO3ZhciBhPXJbbl07YSE9PV8ucHJvdG90eXBlJiZhIT09X3x8KGQuX2lzR2xvYmFsJiYod2luZG93W25dPWQuX3dyYXBQcmVsb2FkKGQsbikpLGE9ZCksZC5fcmVnaXN0ZXJlZFByZWxvYWRNZXRob2RzW25dPWFbbl0sYVtuXT1kLl93cmFwUHJlbG9hZChhLG4pfWUoKSxkLl9ydW5JZlByZWxvYWRzQXJlRG9uZSgpfWVsc2UgZC5fc2V0dXAoKSxkLl9kcmF3KCl9LHRoaXMuX3J1bklmUHJlbG9hZHNBcmVEb25lPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7aWYoMD09PWUuX3ByZWxvYWRDb3VudCl7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZS5fbG9hZGluZ1NjcmVlbklkKTt0JiZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCksdGhpcy5fbGFzdEZyYW1lVGltZT13aW5kb3cucGVyZm9ybWFuY2Uubm93KCksZS5fc2V0dXAoKSxlLl9kcmF3KCl9fSx0aGlzLl9kZWNyZW1lbnRQcmVsb2FkPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7XCJmdW5jdGlvblwiPT10eXBlb2YgZS5wcmVsb2FkJiYoZS5fc2V0UHJvcGVydHkoXCJfcHJlbG9hZENvdW50XCIsZS5fcHJlbG9hZENvdW50LTEpLGUuX3J1bklmUHJlbG9hZHNBcmVEb25lKCkpfSx0aGlzLl93cmFwUHJlbG9hZD1mdW5jdGlvbihuLGEpe3ZhciBvPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKCl7by5faW5jcmVtZW50UHJlbG9hZCgpO2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3JldHVybiBvLl9yZWdpc3RlcmVkUHJlbG9hZE1ldGhvZHNbYV0uYXBwbHkobix0KX19LHRoaXMuX2luY3JlbWVudFByZWxvYWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztlLl9zZXRQcm9wZXJ0eShcIl9wcmVsb2FkQ291bnRcIixlLl9wcmVsb2FkQ291bnQrMSl9LHRoaXMuX3NldHVwPWZ1bmN0aW9uKCl7ZC5jcmVhdGVDYW52YXMoZC5fZGVmYXVsdENhbnZhc1NpemUud2lkdGgsZC5fZGVmYXVsdENhbnZhc1NpemUuaGVpZ2h0LFwicDJkXCIpO3ZhciBlPWQuX2lzR2xvYmFsP3dpbmRvdzpkO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUucHJlbG9hZClmb3IodmFyIHQgaW4gZC5fcHJlbG9hZE1ldGhvZHMpZVt0XT1kLl9wcmVsb2FkTWV0aG9kc1t0XVt0XSxlW3RdJiZkJiYoZVt0XT1lW3RdLmJpbmQoZCkpO2QuX21pbGxpc1N0YXJ0PXdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnNldHVwJiZlLnNldHVwKCk7dmFyIHI9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJjYW52YXNcIiksbj0hMCxhPSExLG89dm9pZCAwO3RyeXtmb3IodmFyIGkscz1yW1N5bWJvbC5pdGVyYXRvcl0oKTshKG49KGk9cy5uZXh0KCkpLmRvbmUpO249ITApe3ZhciBsPWkudmFsdWU7XCJ0cnVlXCI9PT1sLmRhdGFzZXQuaGlkZGVuJiYobC5zdHlsZS52aXNpYmlsaXR5PVwiXCIsZGVsZXRlIGwuZGF0YXNldC5oaWRkZW4pfX1jYXRjaChlKXthPSEwLG89ZX1maW5hbGx5e3RyeXtufHxudWxsPT1zLnJldHVybnx8cy5yZXR1cm4oKX1maW5hbGx5e2lmKGEpdGhyb3cgb319ZC5fbGFzdEZyYW1lVGltZT13aW5kb3cucGVyZm9ybWFuY2Uubm93KCksZC5fc2V0dXBEb25lPSEwfSx0aGlzLl9kcmF3PWZ1bmN0aW9uKCl7dmFyIGU9d2luZG93LnBlcmZvcm1hbmNlLm5vdygpLHQ9ZS1kLl9sYXN0RnJhbWVUaW1lLHI9MWUzL2QuX3RhcmdldEZyYW1lUmF0ZTsoIWQuX2xvb3B8fHItNTw9dCkmJihkLnJlZHJhdygpLGQuX2ZyYW1lUmF0ZT0xZTMvKGUtZC5fbGFzdEZyYW1lVGltZSksZC5kZWx0YVRpbWU9ZS1kLl9sYXN0RnJhbWVUaW1lLGQuX3NldFByb3BlcnR5KFwiZGVsdGFUaW1lXCIsZC5kZWx0YVRpbWUpLGQuX2xhc3RGcmFtZVRpbWU9ZSx2b2lkIDAhPT1kLl91cGRhdGVNb3VzZUNvb3JkcyYmKGQuX3VwZGF0ZU1vdXNlQ29vcmRzKCksZC5fc2V0UHJvcGVydHkoXCJtb3ZlZFhcIiwwKSxkLl9zZXRQcm9wZXJ0eShcIm1vdmVkWVwiLDApKSksZC5fbG9vcCYmKGQuX3JlcXVlc3RBbmltSWQ9d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShkLl9kcmF3KSl9LHRoaXMuX3NldFByb3BlcnR5PWZ1bmN0aW9uKGUsdCl7ZFtlXT10LGQuX2lzR2xvYmFsJiYod2luZG93W2VdPXQpfSx0aGlzLnJlbW92ZT1mdW5jdGlvbigpe3ZhciBlPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGQuX2xvYWRpbmdTY3JlZW5JZCk7aWYoZSYmKGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKSxkLl9pbmNyZW1lbnRQcmVsb2FkKCkpLGQuX2N1ckVsZW1lbnQpe2Zvcih2YXIgdCBpbiBkLl9sb29wPSExLGQuX3JlcXVlc3RBbmltSWQmJndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShkLl9yZXF1ZXN0QW5pbUlkKSxkLl9ldmVudHMpd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIodCxkLl9ldmVudHNbdF0pO3ZhciByPSEwLG49ITEsYT12b2lkIDA7dHJ5e2Zvcih2YXIgbyxpPWQuX2VsZW1lbnRzW1N5bWJvbC5pdGVyYXRvcl0oKTshKHI9KG89aS5uZXh0KCkpLmRvbmUpO3I9ITApe3ZhciBzPW8udmFsdWU7Zm9yKHZhciBsIGluIHMuZWx0JiZzLmVsdC5wYXJlbnROb2RlJiZzLmVsdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHMuZWx0KSxzLl9ldmVudHMpcy5lbHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihsLHMuX2V2ZW50c1tsXSl9fWNhdGNoKGUpe249ITAsYT1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBhfX12YXIgcD1kO2QuX3JlZ2lzdGVyZWRNZXRob2RzLnJlbW92ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZvaWQgMCE9PWUmJmUuY2FsbChwKX0pfWlmKGQuX2lzR2xvYmFsKXtmb3IodmFyIHUgaW4gXy5wcm90b3R5cGUpdHJ5e2RlbGV0ZSB3aW5kb3dbdV19Y2F0Y2goZSl7d2luZG93W3VdPXZvaWQgMH1mb3IodmFyIGMgaW4gZClpZihkLmhhc093blByb3BlcnR5KGMpKXRyeXtkZWxldGUgd2luZG93W2NdfWNhdGNoKGUpe3dpbmRvd1tjXT12b2lkIDB9Xy5pbnN0YW5jZT1udWxsfX0sdGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMuaW5pdC5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZvaWQgMCE9PWUmJmUuY2FsbCh0aGlzKX0sdGhpcyksdGhpcy5fc2V0dXBQcm9taXNlUHJlbG9hZHMoKTt2YXIgdT10aGlzLl9jcmVhdGVGcmllbmRseUdsb2JhbEZ1bmN0aW9uQmluZGVyKCk7aWYoZSllKHRoaXMpLF8uX2NoZWNrRm9yVXNlckRlZmluZWRGdW5jdGlvbnModGhpcyk7ZWxzZXtmb3IodmFyIGMgaW4gdGhpcy5faXNHbG9iYWw9ITAsXy5pbnN0YW5jZT10aGlzLF8ucHJvdG90eXBlKWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIF8ucHJvdG90eXBlW2NdKXt2YXIgaD1jLnN1YnN0cmluZygyKTt0aGlzLl9ldmVudHMuaGFzT3duUHJvcGVydHkoaCl8fChNYXRoLmhhc093blByb3BlcnR5KGMpJiZNYXRoW2NdPT09Xy5wcm90b3R5cGVbY10/dShjLF8ucHJvdG90eXBlW2NdKTp1KGMsXy5wcm90b3R5cGVbY10uYmluZCh0aGlzKSkpfWVsc2UgdShjLF8ucHJvdG90eXBlW2NdKTtmb3IodmFyIG0gaW4gdGhpcyl0aGlzLmhhc093blByb3BlcnR5KG0pJiZ1KG0sdGhpc1ttXSl9Zm9yKHZhciBmIGluIHRoaXMuX2V2ZW50cyl7dmFyIHk9dGhpc1tcIl9vblwiLmNvbmNhdChmKV07aWYoeSl7dmFyIGc9eS5iaW5kKHRoaXMpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGYsZyx7cGFzc2l2ZTohMX0pLHRoaXMuX2V2ZW50c1tmXT1nfX1mdW5jdGlvbiB2KCl7ZC5fc2V0UHJvcGVydHkoXCJmb2N1c2VkXCIsITApfWZ1bmN0aW9uIGIoKXtkLl9zZXRQcm9wZXJ0eShcImZvY3VzZWRcIiwhMSl9d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLHYpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLGIpLHRoaXMucmVnaXN0ZXJNZXRob2QoXCJyZW1vdmVcIixmdW5jdGlvbigpe3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIix2KSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImJsdXJcIixiKX0pLFwiY29tcGxldGVcIj09PWRvY3VtZW50LnJlYWR5U3RhdGU/dGhpcy5fc3RhcnQoKTp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIix0aGlzLl9zdGFydC5iaW5kKHRoaXMpLCExKX12YXIgZSx0LHI7cmV0dXJuIGU9XywodD1be2tleTpcIl9pbml0aWFsaXplSW5zdGFuY2VWYXJpYWJsZXNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX3N0eWxlcz1bXSx0aGlzLl9iZXppZXJEZXRhaWw9MjAsdGhpcy5fY3VydmVEZXRhaWw9MjAsdGhpcy5fY29sb3JNb2RlPW4uUkdCLHRoaXMuX2NvbG9yTWF4ZXM9e3JnYjpbMjU1LDI1NSwyNTUsMjU1XSxoc2I6WzM2MCwxMDAsMTAwLDFdLGhzbDpbMzYwLDEwMCwxMDAsMV19LHRoaXMuX2Rvd25LZXlzPXt9fX0se2tleTpcInJlZ2lzdGVyUHJlbG9hZE1ldGhvZFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Xy5wcm90b3R5cGUuX3ByZWxvYWRNZXRob2RzLmhhc093blByb3BlcnR5KGUpfHwoXy5wcm90b3R5cGUuX3ByZWxvYWRNZXRob2RzW2VdPXQpfX0se2tleTpcInJlZ2lzdGVyTWV0aG9kXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzfHxfLnByb3RvdHlwZTtyLl9yZWdpc3RlcmVkTWV0aG9kcy5oYXNPd25Qcm9wZXJ0eShlKXx8KHIuX3JlZ2lzdGVyZWRNZXRob2RzW2VdPVtdKSxyLl9yZWdpc3RlcmVkTWV0aG9kc1tlXS5wdXNoKHQpfX0se2tleTpcIl9jcmVhdGVGcmllbmRseUdsb2JhbEZ1bmN0aW9uQmluZGVyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1lP2U6e30scj10Lmdsb2JhbE9iamVjdHx8d2luZG93O3QubG9nfHxjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO3JldHVybiBmdW5jdGlvbihlLHQpe3JbZV09dH19fV0pJiZhKGUucHJvdG90eXBlLHQpLHImJmEoZSxyKSxffSgpO2Zvcih2YXIgbCBpbiBvLmluc3RhbmNlPW51bGwsby5kaXNhYmxlRnJpZW5kbHlFcnJvcnM9ITEsbilvLnByb3RvdHlwZVtsXT1uW2xdO28ucHJvdG90eXBlLl9wcmVsb2FkTWV0aG9kcz17bG9hZEpTT046by5wcm90b3R5cGUsbG9hZEltYWdlOm8ucHJvdG90eXBlLGxvYWRTdHJpbmdzOm8ucHJvdG90eXBlLGxvYWRYTUw6by5wcm90b3R5cGUsbG9hZEJ5dGVzOm8ucHJvdG90eXBlLGxvYWRUYWJsZTpvLnByb3RvdHlwZSxsb2FkRm9udDpvLnByb3RvdHlwZSxsb2FkTW9kZWw6by5wcm90b3R5cGUsbG9hZFNoYWRlcjpvLnByb3RvdHlwZX0sby5wcm90b3R5cGUuX3JlZ2lzdGVyZWRNZXRob2RzPXtpbml0OltdLHByZTpbXSxwb3N0OltdLHJlbW92ZTpbXX0sby5wcm90b3R5cGUuX3JlZ2lzdGVyZWRQcmVsb2FkTWV0aG9kcz17fTt2YXIgcD1vO3IuZGVmYXVsdD1wfSx7XCIuL2NvbnN0YW50c1wiOjIyLFwiLi9zaGltXCI6NDN9XSwzMzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07YS5kZWZhdWx0LkVsZW1lbnQ9ZnVuY3Rpb24oZSx0KXt0aGlzLmVsdD1lLHRoaXMuX3BJbnN0PXRoaXMuX3BpeGVsc1N0YXRlPXQsdGhpcy5fZXZlbnRzPXt9LHRoaXMud2lkdGg9dGhpcy5lbHQub2Zmc2V0V2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5lbHQub2Zmc2V0SGVpZ2h0fSxhLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUucGFyZW50PWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP3RoaXMuZWx0LnBhcmVudE5vZGU6KFwic3RyaW5nXCI9PXR5cGVvZiBlPyhcIiNcIj09PWVbMF0mJihlPWUuc3Vic3RyaW5nKDEpKSxlPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUpKTplIGluc3RhbmNlb2YgYS5kZWZhdWx0LkVsZW1lbnQmJihlPWUuZWx0KSxlLmFwcGVuZENoaWxkKHRoaXMuZWx0KSx0aGlzKX0sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmlkPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP3RoaXMuZWx0LmlkOih0aGlzLmVsdC5pZD1lLHRoaXMud2lkdGg9dGhpcy5lbHQub2Zmc2V0V2lkdGgsdGhpcy5oZWlnaHQ9dGhpcy5lbHQub2Zmc2V0SGVpZ2h0LHRoaXMpfSxhLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuY2xhc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/dGhpcy5lbHQuY2xhc3NOYW1lOih0aGlzLmVsdC5jbGFzc05hbWU9ZSx0aGlzKX0sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlUHJlc3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gYS5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwibW91c2Vkb3duXCIsZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcIm1vdXNlSXNQcmVzc2VkXCIsITApLHRoaXMuX3BJbnN0Ll9zZXRNb3VzZUJ1dHRvbihlKSx0LmNhbGwodGhpcyl9LHRoaXMpLHRoaXN9LGEuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5kb3VibGVDbGlja2VkPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJkYmxjbGlja1wiLGUsdGhpcyksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlV2hlZWw9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcIndoZWVsXCIsZSx0aGlzKSx0aGlzfSxhLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUubW91c2VSZWxlYXNlZD1mdW5jdGlvbihlKXtyZXR1cm4gYS5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwibW91c2V1cFwiLGUsdGhpcyksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlQ2xpY2tlZD1mdW5jdGlvbihlKXtyZXR1cm4gYS5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwiY2xpY2tcIixlLHRoaXMpLHRoaXN9LGEuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5tb3VzZU1vdmVkPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixlLHRoaXMpLHRoaXN9LGEuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5tb3VzZU92ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLGUsdGhpcyksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLm1vdXNlT3V0PWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJtb3VzZW91dFwiLGUsdGhpcyksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvdWNoU3RhcnRlZD1mdW5jdGlvbihlKXtyZXR1cm4gYS5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwidG91Y2hzdGFydFwiLGUsdGhpcyksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvdWNoTW92ZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcInRvdWNobW92ZVwiLGUsdGhpcyksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnRvdWNoRW5kZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcInRvdWNoZW5kXCIsZSx0aGlzKSx0aGlzfSxhLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuZHJhZ092ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcImRyYWdvdmVyXCIsZSx0aGlzKSx0aGlzfSxhLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuZHJhZ0xlYXZlPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuRWxlbWVudC5fYWRqdXN0TGlzdGVuZXIoXCJkcmFnbGVhdmVcIixlLHRoaXMpLHRoaXN9LGEuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcj1mdW5jdGlvbihlLHQscil7cmV0dXJuITE9PT10P2EuZGVmYXVsdC5FbGVtZW50Ll9kZXRhY2hMaXN0ZW5lcihlLHIpOmEuZGVmYXVsdC5FbGVtZW50Ll9hdHRhY2hMaXN0ZW5lcihlLHQsciksdGhpc30sYS5kZWZhdWx0LkVsZW1lbnQuX2F0dGFjaExpc3RlbmVyPWZ1bmN0aW9uKGUsdCxyKXtyLl9ldmVudHNbZV0mJmEuZGVmYXVsdC5FbGVtZW50Ll9kZXRhY2hMaXN0ZW5lcihlLHIpO3ZhciBuPXQuYmluZChyKTtyLmVsdC5hZGRFdmVudExpc3RlbmVyKGUsbiwhMSksci5fZXZlbnRzW2VdPW59LGEuZGVmYXVsdC5FbGVtZW50Ll9kZXRhY2hMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe3ZhciByPXQuX2V2ZW50c1tlXTt0LmVsdC5yZW1vdmVFdmVudExpc3RlbmVyKGUsciwhMSksdC5fZXZlbnRzW2VdPW51bGx9LGEuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5fc2V0UHJvcGVydHk9ZnVuY3Rpb24oZSx0KXt0aGlzW2VdPXR9O3ZhciBvPWEuZGVmYXVsdC5FbGVtZW50O3IuZGVmYXVsdD1vfSx7XCIuL21haW5cIjozMn1dLDM0OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxsPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cCgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHAoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBwPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9cy5kZWZhdWx0LkdyYXBoaWNzPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhPXJ8fGwuUDJEO3RoaXMuY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7dmFyIG89bi5fdXNlck5vZGV8fGRvY3VtZW50LmJvZHk7Zm9yKHZhciBpIGluIG8uYXBwZW5kQ2hpbGQodGhpcy5jYW52YXMpLHMuZGVmYXVsdC5FbGVtZW50LmNhbGwodGhpcyx0aGlzLmNhbnZhcyxuKSxzLmRlZmF1bHQucHJvdG90eXBlKXRoaXNbaV18fChcImZ1bmN0aW9uXCI9PXR5cGVvZiBzLmRlZmF1bHQucHJvdG90eXBlW2ldP3RoaXNbaV09cy5kZWZhdWx0LnByb3RvdHlwZVtpXS5iaW5kKHRoaXMpOnRoaXNbaV09cy5kZWZhdWx0LnByb3RvdHlwZVtpXSk7cmV0dXJuIHMuZGVmYXVsdC5wcm90b3R5cGUuX2luaXRpYWxpemVJbnN0YW5jZVZhcmlhYmxlcy5hcHBseSh0aGlzKSx0aGlzLndpZHRoPWUsdGhpcy5oZWlnaHQ9dCx0aGlzLl9waXhlbERlbnNpdHk9bi5fcGl4ZWxEZW5zaXR5LGE9PT1sLldFQkdMP3RoaXMuX3JlbmRlcmVyPW5ldyBzLmRlZmF1bHQuUmVuZGVyZXJHTCh0aGlzLmNhbnZhcyx0aGlzLCExKTp0aGlzLl9yZW5kZXJlcj1uZXcgcy5kZWZhdWx0LlJlbmRlcmVyMkQodGhpcy5jYW52YXMsdGhpcywhMSksbi5fZWxlbWVudHMucHVzaCh0aGlzKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImRlbHRhVGltZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcEluc3QuZGVsdGFUaW1lfX0pLHRoaXMuX3JlbmRlcmVyLnJlc2l6ZShlLHQpLHRoaXMuX3JlbmRlcmVyLl9hcHBseURlZmF1bHRzKCksdGhpc30scy5kZWZhdWx0LkdyYXBoaWNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHMuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZSkscy5kZWZhdWx0LkdyYXBoaWNzLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMuX3JlbmRlcmVyLnJlc2V0TWF0cml4KCksdGhpcy5fcmVuZGVyZXIuaXNQM0QmJnRoaXMuX3JlbmRlcmVyLl91cGRhdGUoKX0scy5kZWZhdWx0LkdyYXBoaWNzLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oKXt0aGlzLmVsdC5wYXJlbnROb2RlJiZ0aGlzLmVsdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZWx0KTt2YXIgZT10aGlzLl9wSW5zdC5fZWxlbWVudHMuaW5kZXhPZih0aGlzKTtmb3IodmFyIHQgaW4tMSE9PWUmJnRoaXMuX3BJbnN0Ll9lbGVtZW50cy5zcGxpY2UoZSwxKSx0aGlzLl9ldmVudHMpdGhpcy5lbHQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LHRoaXMuX2V2ZW50c1t0XSl9O3ZhciBhPXMuZGVmYXVsdC5HcmFwaGljcztyLmRlZmF1bHQ9YX0se1wiLi9jb25zdGFudHNcIjoyMixcIi4vbWFpblwiOjMyfV0sMzU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGw9KG49ZShcIi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGI9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09cyhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1pKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gaSgpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIGk9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBzKGUpe3JldHVybihzPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1mdW5jdGlvbiBwKGUpe3ZhciB0PTAscj0wO2lmKGUub2Zmc2V0UGFyZW50KWZvcig7dCs9ZS5vZmZzZXRMZWZ0LHIrPWUub2Zmc2V0VG9wLGU9ZS5vZmZzZXRQYXJlbnQ7KTtlbHNlIHQrPWUub2Zmc2V0TGVmdCxyKz1lLm9mZnNldFRvcDtyZXR1cm5bdCxyXX1sLmRlZmF1bHQuUmVuZGVyZXI9ZnVuY3Rpb24oZSx0LHIpe2wuZGVmYXVsdC5FbGVtZW50LmNhbGwodGhpcyxlLHQpLHRoaXMuY2FudmFzPWUsdGhpcy5fcGl4ZWxzU3RhdGU9dCxyPyh0aGlzLl9pc01haW5DYW52YXM9ITAsdGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwiX2N1ckVsZW1lbnRcIix0aGlzKSx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJjYW52YXNcIix0aGlzLmNhbnZhcyksdGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwid2lkdGhcIix0aGlzLndpZHRoKSx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJoZWlnaHRcIix0aGlzLmhlaWdodCkpOih0aGlzLmNhbnZhcy5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLHRoaXMuX3N0eWxlcz1bXSksdGhpcy5fdGV4dFNpemU9MTIsdGhpcy5fdGV4dExlYWRpbmc9MTUsdGhpcy5fdGV4dEZvbnQ9XCJzYW5zLXNlcmlmXCIsdGhpcy5fdGV4dFN0eWxlPWIuTk9STUFMLHRoaXMuX3RleHRBc2NlbnQ9bnVsbCx0aGlzLl90ZXh0RGVzY2VudD1udWxsLHRoaXMuX3RleHRBbGlnbj1iLkxFRlQsdGhpcy5fdGV4dEJhc2VsaW5lPWIuQkFTRUxJTkUsdGhpcy5fcmVjdE1vZGU9Yi5DT1JORVIsdGhpcy5fZWxsaXBzZU1vZGU9Yi5DRU5URVIsdGhpcy5fY3VydmVUaWdodG5lc3M9MCx0aGlzLl9pbWFnZU1vZGU9Yi5DT1JORVIsdGhpcy5fdGludD1udWxsLHRoaXMuX2RvU3Ryb2tlPSEwLHRoaXMuX2RvRmlsbD0hMCx0aGlzLl9zdHJva2VTZXQ9ITEsdGhpcy5fZmlsbFNldD0hMX0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGwuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZSksbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKCl7cmV0dXJue3Byb3BlcnRpZXM6e19kb1N0cm9rZTp0aGlzLl9kb1N0cm9rZSxfc3Ryb2tlU2V0OnRoaXMuX3N0cm9rZVNldCxfZG9GaWxsOnRoaXMuX2RvRmlsbCxfZmlsbFNldDp0aGlzLl9maWxsU2V0LF90aW50OnRoaXMuX3RpbnQsX2ltYWdlTW9kZTp0aGlzLl9pbWFnZU1vZGUsX3JlY3RNb2RlOnRoaXMuX3JlY3RNb2RlLF9lbGxpcHNlTW9kZTp0aGlzLl9lbGxpcHNlTW9kZSxfdGV4dEZvbnQ6dGhpcy5fdGV4dEZvbnQsX3RleHRMZWFkaW5nOnRoaXMuX3RleHRMZWFkaW5nLF90ZXh0U2l6ZTp0aGlzLl90ZXh0U2l6ZSxfdGV4dEFsaWduOnRoaXMuX3RleHRBbGlnbixfdGV4dEJhc2VsaW5lOnRoaXMuX3RleHRCYXNlbGluZSxfdGV4dFN0eWxlOnRoaXMuX3RleHRTdHlsZX19fSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnBvcD1mdW5jdGlvbihlKXtlLnByb3BlcnRpZXMmJk9iamVjdC5hc3NpZ24odGhpcyxlLnByb3BlcnRpZXMpfSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbihlLHQpe3RoaXMud2lkdGg9ZSx0aGlzLmhlaWdodD10LHRoaXMuZWx0LndpZHRoPWUqdGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eSx0aGlzLmVsdC5oZWlnaHQ9dCp0aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5LHRoaXMuZWx0LnN0eWxlLndpZHRoPVwiXCIuY29uY2F0KGUsXCJweFwiKSx0aGlzLmVsdC5zdHlsZS5oZWlnaHQ9XCJcIi5jb25jYXQodCxcInB4XCIpLHRoaXMuX2lzTWFpbkNhbnZhcyYmKHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcIndpZHRoXCIsdGhpcy53aWR0aCksdGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwiaGVpZ2h0XCIsdGhpcy5oZWlnaHQpKX0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9dGhpcy5fcGl4ZWxzU3RhdGUsbz1hLl9waXhlbERlbnNpdHksaT10aGlzLmNhbnZhcztpZih2b2lkIDA9PT1lJiZ2b2lkIDA9PT10KWU9dD0wLHI9YS53aWR0aCxuPWEuaGVpZ2h0O2Vsc2UgaWYoZSo9byx0Kj1vLHZvaWQgMD09PXImJnZvaWQgMD09PW4pcmV0dXJuIGU8MHx8dDwwfHxlPj1pLndpZHRofHx0Pj1pLmhlaWdodD9bMCwwLDAsMF06dGhpcy5fZ2V0UGl4ZWwoZSx0KTt2YXIgcz1uZXcgbC5kZWZhdWx0LkltYWdlKHIsbik7cmV0dXJuIHMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKS5kcmF3SW1hZ2UoaSxlLHQscipvLG4qbywwLDAscixuKSxzfSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnRleHRMZWFkaW5nPWZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlPyh0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0TGVhZGluZ1wiLGUpLHRoaXMuX3BJbnN0KTp0aGlzLl90ZXh0TGVhZGluZ30sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS50ZXh0U2l6ZT1mdW5jdGlvbihlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZT8odGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dFNpemVcIixlKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0TGVhZGluZ1wiLGUqYi5fREVGQVVMVF9MRUFETVVMVCksdGhpcy5fYXBwbHlUZXh0UHJvcGVydGllcygpKTp0aGlzLl90ZXh0U2l6ZX0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS50ZXh0U3R5bGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU/KGUhPT1iLk5PUk1BTCYmZSE9PWIuSVRBTElDJiZlIT09Yi5CT0xEJiZlIT09Yi5CT0xESVRBTElDfHx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0U3R5bGVcIixlKSx0aGlzLl9hcHBseVRleHRQcm9wZXJ0aWVzKCkpOnRoaXMuX3RleHRTdHlsZX0sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS50ZXh0QXNjZW50PWZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PT10aGlzLl90ZXh0QXNjZW50JiZ0aGlzLl91cGRhdGVUZXh0TWV0cmljcygpLHRoaXMuX3RleHRBc2NlbnR9LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUudGV4dERlc2NlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbD09PXRoaXMuX3RleHREZXNjZW50JiZ0aGlzLl91cGRhdGVUZXh0TWV0cmljcygpLHRoaXMuX3RleHREZXNjZW50fSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnRleHRBbGlnbj1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDAhPT1lPyh0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0QWxpZ25cIixlKSx2b2lkIDAhPT10JiZ0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0QmFzZWxpbmVcIix0KSx0aGlzLl9hcHBseVRleHRQcm9wZXJ0aWVzKCkpOntob3Jpem9udGFsOnRoaXMuX3RleHRBbGlnbix2ZXJ0aWNhbDp0aGlzLl90ZXh0QmFzZWxpbmV9fSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbyxpLHMsbCxwLHUsYyxkLGgsbT10aGlzLl9wSW5zdCxmPU51bWJlci5NQVhfVkFMVUU7aWYoKHRoaXMuX2RvRmlsbHx8dGhpcy5fZG9TdHJva2UpJiZ2b2lkIDAhPT1lKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZSYmKGU9ZS50b1N0cmluZygpKSxvPShlPWUucmVwbGFjZSgvKFxcdCkvZyxcIiAgXCIpKS5zcGxpdChcIlxcblwiKSx2b2lkIDAhPT1uKXtmb3IoYz0xLHM9aD0wO3M8by5sZW5ndGg7cysrKXtmb3IocD1cIlwiLGQ9b1tzXS5zcGxpdChcIiBcIiksaT0wO2k8ZC5sZW5ndGg7aSsrKXU9XCJcIi5jb25jYXQocCtkW2ldLFwiIFwiKSxuPHRoaXMudGV4dFdpZHRoKHUpJiYxPGM/KHA9XCJcIi5jb25jYXQoZFtpXSxcIiBcIiksaCs9bS50ZXh0TGVhZGluZygpLGM9MSk6KHA9dSxjKz0xKTtzPG8ubGVuZ3RoLTEmJihoKz1tLnRleHRMZWFkaW5nKCkpfXN3aXRjaCh0aGlzLl9yZWN0TW9kZT09PWIuQ0VOVEVSJiYodC09bi8yLHItPWEvMiksdGhpcy5fdGV4dEFsaWduKXtjYXNlIGIuQ0VOVEVSOnQrPW4vMjticmVhaztjYXNlIGIuUklHSFQ6dCs9bn12YXIgeT0hMTtpZih2b2lkIDAhPT1hKXtzd2l0Y2godGhpcy5fdGV4dEJhc2VsaW5lKXtjYXNlIGIuQk9UVE9NOnIrPWEtaDticmVhaztjYXNlIGIuQ0VOVEVSOnIrPShhLWgpLzI7YnJlYWs7Y2FzZSBiLkJBU0VMSU5FOnk9ITAsdGhpcy5fdGV4dEJhc2VsaW5lPWIuVE9QfWY9cithLW0udGV4dEFzY2VudCgpfWZvcihzPTA7czxvLmxlbmd0aDtzKyspe2ZvcihwPVwiXCIsZD1vW3NdLnNwbGl0KFwiIFwiKSxpPTA7aTxkLmxlbmd0aDtpKyspdT1cIlwiLmNvbmNhdChwK2RbaV0sXCIgXCIpLG48dGhpcy50ZXh0V2lkdGgodSkmJjA8cC5sZW5ndGg/KHRoaXMuX3JlbmRlclRleHQobSxwLHQscixmKSxwPVwiXCIuY29uY2F0KGRbaV0sXCIgXCIpLHIrPW0udGV4dExlYWRpbmcoKSk6cD11O3RoaXMuX3JlbmRlclRleHQobSxwLHQscixmKSxyKz1tLnRleHRMZWFkaW5nKCkseSYmKHRoaXMuX3RleHRCYXNlbGluZT1iLkJBU0VMSU5FKX19ZWxzZXt2YXIgZz0wLHY9bS50ZXh0QWxpZ24oKS52ZXJ0aWNhbDtmb3Iodj09PWIuQ0VOVEVSP2c9KG8ubGVuZ3RoLTEpKm0udGV4dExlYWRpbmcoKS8yOnY9PT1iLkJPVFRPTSYmKGc9KG8ubGVuZ3RoLTEpKm0udGV4dExlYWRpbmcoKSksbD0wO2w8by5sZW5ndGg7bCsrKXRoaXMuX3JlbmRlclRleHQobSxvW2xdLHQsci1nLGYpLHIrPW0udGV4dExlYWRpbmcoKX1yZXR1cm4gbX19LGwuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUuX2FwcGx5RGVmYXVsdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sbC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5faXNPcGVuVHlwZT1mdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp0aGlzLl90ZXh0Rm9udDtyZXR1cm5cIm9iamVjdFwiPT09cyhlKSYmZS5mb250JiZlLmZvbnQuc3VwcG9ydGVkfSxsLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLl91cGRhdGVUZXh0TWV0cmljcz1mdW5jdGlvbigpe2lmKHRoaXMuX2lzT3BlblR5cGUoKSlyZXR1cm4gdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dEFzY2VudFwiLHRoaXMuX3RleHRGb250Ll90ZXh0QXNjZW50KCkpLHRoaXMuX3NldFByb3BlcnR5KFwiX3RleHREZXNjZW50XCIsdGhpcy5fdGV4dEZvbnQuX3RleHREZXNjZW50KCkpLHRoaXM7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7ZS5zdHlsZS5mb250RmFtaWx5PXRoaXMuX3RleHRGb250LGUuc3R5bGUuZm9udFNpemU9XCJcIi5jb25jYXQodGhpcy5fdGV4dFNpemUsXCJweFwiKSxlLmlubmVySFRNTD1cIkFCQ2pncXxcIjt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3Quc3R5bGUuZGlzcGxheT1cImlubGluZS1ibG9ja1wiLHQuc3R5bGUud2lkdGg9XCIxcHhcIix0LnN0eWxlLmhlaWdodD1cIjBweFwiO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7ci5hcHBlbmRDaGlsZChlKSxyLmFwcGVuZENoaWxkKHQpLHIuc3R5bGUuaGVpZ2h0PVwiMHB4XCIsci5zdHlsZS5vdmVyZmxvdz1cImhpZGRlblwiLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQociksdC5zdHlsZS52ZXJ0aWNhbEFsaWduPVwiYmFzZWxpbmVcIjt2YXIgbj1wKHQpLGE9cChlKSxvPW5bMV0tYVsxXTt0LnN0eWxlLnZlcnRpY2FsQWxpZ249XCJib3R0b21cIixuPXAodCksYT1wKGUpO3ZhciBpPW5bMV0tYVsxXS1vO3JldHVybiBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHIpLHRoaXMuX3NldFByb3BlcnR5KFwiX3RleHRBc2NlbnRcIixvKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0RGVzY2VudFwiLGkpLHRoaXN9O3ZhciBhPWwuZGVmYXVsdC5SZW5kZXJlcjtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4vbWFpblwiOjMyfV0sMzY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKGUpe3JldHVybihpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBjPW4oZShcIi4vbWFpblwiKSksbT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4vY29uc3RhbnRzXCIpKSxkPW4oZShcIi4uL2ltYWdlL2ZpbHRlcnNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZShcIi4vcDUuUmVuZGVyZXJcIik7dmFyIHk9XCJyZ2JhKDAsMCwwLDApXCI7Yy5kZWZhdWx0LlJlbmRlcmVyMkQ9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBjLmRlZmF1bHQuUmVuZGVyZXIuY2FsbCh0aGlzLGUsdCxyKSx0aGlzLmRyYXdpbmdDb250ZXh0PXRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKSx0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJkcmF3aW5nQ29udGV4dFwiLHRoaXMuZHJhd2luZ0NvbnRleHQpLHRoaXN9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUpLGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fYXBwbHlEZWZhdWx0cz1mdW5jdGlvbigpe3RoaXMuX2NhY2hlZEZpbGxTdHlsZT10aGlzLl9jYWNoZWRTdHJva2VTdHlsZT12b2lkIDAsdGhpcy5fY2FjaGVkQmxlbmRNb2RlPW0uQkxFTkQsdGhpcy5fc2V0RmlsbChtLl9ERUZBVUxUX0ZJTEwpLHRoaXMuX3NldFN0cm9rZShtLl9ERUZBVUxUX1NUUk9LRSksdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lQ2FwPW0uUk9VTkQsdGhpcy5kcmF3aW5nQ29udGV4dC5mb250PVwibm9ybWFsIDEycHggc2Fucy1zZXJpZlwifSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKGUsdCl7Yy5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5yZXNpemUuY2FsbCh0aGlzLGUsdCksdGhpcy5kcmF3aW5nQ29udGV4dC5zY2FsZSh0aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5LHRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHkpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYmFja2dyb3VuZD1mdW5jdGlvbigpe2lmKHRoaXMuZHJhd2luZ0NvbnRleHQuc2F2ZSgpLHRoaXMucmVzZXRNYXRyaXgoKSwoYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdKWluc3RhbmNlb2YgYy5kZWZhdWx0LkltYWdlKXRoaXMuX3BJbnN0LmltYWdlKGFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSwwLDAsdGhpcy53aWR0aCx0aGlzLmhlaWdodCk7ZWxzZXt2YXIgZSx0PXRoaXMuX2dldEZpbGwoKSxyPShlPXRoaXMuX3BJbnN0KS5jb2xvci5hcHBseShlLGFyZ3VtZW50cykudG9TdHJpbmcoKTt0aGlzLl9zZXRGaWxsKHIpLHRoaXMuX2lzRXJhc2luZyYmdGhpcy5ibGVuZE1vZGUodGhpcy5fY2FjaGVkQmxlbmRNb2RlKSx0aGlzLmRyYXdpbmdDb250ZXh0LmZpbGxSZWN0KDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSx0aGlzLl9zZXRGaWxsKHQpLHRoaXMuX2lzRXJhc2luZyYmdGhpcy5fcEluc3QuZXJhc2UoKX10aGlzLmRyYXdpbmdDb250ZXh0LnJlc3RvcmUoKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5kcmF3aW5nQ29udGV4dC5zYXZlKCksdGhpcy5yZXNldE1hdHJpeCgpLHRoaXMuZHJhd2luZ0NvbnRleHQuY2xlYXJSZWN0KDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSx0aGlzLmRyYXdpbmdDb250ZXh0LnJlc3RvcmUoKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24oKXt2YXIgZSx0PShlPXRoaXMuX3BJbnN0KS5jb2xvci5hcHBseShlLGFyZ3VtZW50cyk7dGhpcy5fc2V0RmlsbCh0LnRvU3RyaW5nKCkpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuc3Ryb2tlPWZ1bmN0aW9uKCl7dmFyIGUsdD0oZT10aGlzLl9wSW5zdCkuY29sb3IuYXBwbHkoZSxhcmd1bWVudHMpO3RoaXMuX3NldFN0cm9rZSh0LnRvU3RyaW5nKCkpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuZXJhc2U9ZnVuY3Rpb24oZSx0KXtpZighdGhpcy5faXNFcmFzaW5nKXt0aGlzLl9jYWNoZWRGaWxsU3R5bGU9dGhpcy5kcmF3aW5nQ29udGV4dC5maWxsU3R5bGU7dmFyIHI9dGhpcy5fcEluc3QuY29sb3IoMjU1LGUpLnRvU3RyaW5nKCk7dGhpcy5kcmF3aW5nQ29udGV4dC5maWxsU3R5bGU9cix0aGlzLl9jYWNoZWRTdHJva2VTdHlsZT10aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZVN0eWxlO3ZhciBuPXRoaXMuX3BJbnN0LmNvbG9yKDI1NSx0KS50b1N0cmluZygpO3RoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlU3R5bGU9bjt2YXIgYT10aGlzLl9jYWNoZWRCbGVuZE1vZGU7dGhpcy5ibGVuZE1vZGUobS5SRU1PVkUpLHRoaXMuX2NhY2hlZEJsZW5kTW9kZT1hLHRoaXMuX2lzRXJhc2luZz0hMH19LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5ub0VyYXNlPWZ1bmN0aW9uKCl7dGhpcy5faXNFcmFzaW5nJiYodGhpcy5kcmF3aW5nQ29udGV4dC5maWxsU3R5bGU9dGhpcy5fY2FjaGVkRmlsbFN0eWxlLHRoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlU3R5bGU9dGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGUsdGhpcy5ibGVuZE1vZGUodGhpcy5fY2FjaGVkQmxlbmRNb2RlKSx0aGlzLl9pc0VyYXNpbmc9ITEpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuaW1hZ2U9ZnVuY3Rpb24oZSx0LHIsbixhLG8saSxzLGwpe3ZhciBwO2UuZ2lmUHJvcGVydGllcyYmZS5fYW5pbWF0ZUdpZih0aGlzLl9wSW5zdCk7dHJ5e3RoaXMuX3RpbnQmJihjLmRlZmF1bHQuTWVkaWFFbGVtZW50JiZlIGluc3RhbmNlb2YgYy5kZWZhdWx0Lk1lZGlhRWxlbWVudCYmZS5sb2FkUGl4ZWxzKCksZS5jYW52YXMmJihwPXRoaXMuX2dldFRpbnRlZEltYWdlQ2FudmFzKGUpKSkscD1wfHwoZS5jYW52YXN8fGUuZWx0KTt2YXIgdT0xO2Uud2lkdGgmJjA8ZS53aWR0aCYmKHU9cC53aWR0aC9lLndpZHRoKSx0aGlzLl9pc0VyYXNpbmcmJnRoaXMuYmxlbmRNb2RlKHRoaXMuX2NhY2hlZEJsZW5kTW9kZSksdGhpcy5kcmF3aW5nQ29udGV4dC5kcmF3SW1hZ2UocCx1KnQsdSpyLHUqbix1KmEsbyxpLHMsbCksdGhpcy5faXNFcmFzaW5nJiZ0aGlzLl9wSW5zdC5lcmFzZSgpfWNhdGNoKGUpe2lmKFwiTlNfRVJST1JfTk9UX0FWQUlMQUJMRVwiIT09ZS5uYW1lKXRocm93IGV9fSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuX2dldFRpbnRlZEltYWdlQ2FudmFzPWZ1bmN0aW9uKGUpe2lmKCFlLmNhbnZhcylyZXR1cm4gZTt2YXIgdD1kLmRlZmF1bHQuX3RvUGl4ZWxzKGUuY2FudmFzKSxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7ci53aWR0aD1lLmNhbnZhcy53aWR0aCxyLmhlaWdodD1lLmNhbnZhcy5oZWlnaHQ7Zm9yKHZhciBuPXIuZ2V0Q29udGV4dChcIjJkXCIpLGE9bi5jcmVhdGVJbWFnZURhdGEoZS5jYW52YXMud2lkdGgsZS5jYW52YXMuaGVpZ2h0KSxvPWEuZGF0YSxpPTA7aTx0Lmxlbmd0aDtpKz00KXt2YXIgcz10W2ldLGw9dFtpKzFdLHA9dFtpKzJdLHU9dFtpKzNdO29baV09cyp0aGlzLl90aW50WzBdLzI1NSxvW2krMV09bCp0aGlzLl90aW50WzFdLzI1NSxvW2krMl09cCp0aGlzLl90aW50WzJdLzI1NSxvW2krM109dSp0aGlzLl90aW50WzNdLzI1NX1yZXR1cm4gbi5wdXRJbWFnZURhdGEoYSwwLDApLHJ9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5ibGVuZE1vZGU9ZnVuY3Rpb24oZSl7aWYoZT09PW0uU1VCVFJBQ1QpY29uc29sZS53YXJuKFwiYmxlbmRNb2RlKFNVQlRSQUNUKSBvbmx5IHdvcmtzIGluIFdFQkdMIG1vZGUuXCIpO2Vsc2V7aWYoZSE9PW0uQkxFTkQmJmUhPT1tLlJFTU9WRSYmZSE9PW0uREFSS0VTVCYmZSE9PW0uTElHSFRFU1QmJmUhPT1tLkRJRkZFUkVOQ0UmJmUhPT1tLk1VTFRJUExZJiZlIT09bS5FWENMVVNJT04mJmUhPT1tLlNDUkVFTiYmZSE9PW0uUkVQTEFDRSYmZSE9PW0uT1ZFUkxBWSYmZSE9PW0uSEFSRF9MSUdIVCYmZSE9PW0uU09GVF9MSUdIVCYmZSE9PW0uRE9ER0UmJmUhPT1tLkJVUk4mJmUhPT1tLkFERCl0aHJvdyBuZXcgRXJyb3IoXCJNb2RlIFwiLmNvbmNhdChlLFwiIG5vdCByZWNvZ25pemVkLlwiKSk7dGhpcy5fY2FjaGVkQmxlbmRNb2RlPWUsdGhpcy5kcmF3aW5nQ29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249ZX19LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5ibGVuZD1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLmRyYXdpbmdDb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbix0PWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkodCksbj0wO248dDtuKyspcltuXT1hcmd1bWVudHNbbl07dmFyIGE9cltyLmxlbmd0aC0xXSxvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHIsMCxyLmxlbmd0aC0xKTt0aGlzLmRyYXdpbmdDb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj1hLGMuZGVmYXVsdC5wcm90b3R5cGUuY29weS5hcHBseSh0aGlzLG8pLHRoaXMuZHJhd2luZ0NvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPWV9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fZ2V0UGl4ZWw9ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm5bKHI9dGhpcy5kcmF3aW5nQ29udGV4dC5nZXRJbWFnZURhdGEoZSx0LDEsMSkuZGF0YSlbMF0sclsxXSxyWzJdLHJbM11dfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUubG9hZFBpeGVscz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3BpeGVsc1N0YXRlLHQ9ZS5fcGl4ZWxEZW5zaXR5LHI9dGhpcy53aWR0aCp0LG49dGhpcy5oZWlnaHQqdCxhPXRoaXMuZHJhd2luZ0NvbnRleHQuZ2V0SW1hZ2VEYXRhKDAsMCxyLG4pO2UuX3NldFByb3BlcnR5KFwiaW1hZ2VEYXRhXCIsYSksZS5fc2V0UHJvcGVydHkoXCJwaXhlbHNcIixhLmRhdGEpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCxyKXtlPU1hdGguZmxvb3IoZSksdD1NYXRoLmZsb29yKHQpO3ZhciBuPXRoaXMuX3BpeGVsc1N0YXRlO2lmKHIgaW5zdGFuY2VvZiBjLmRlZmF1bHQuSW1hZ2UpdGhpcy5kcmF3aW5nQ29udGV4dC5zYXZlKCksdGhpcy5kcmF3aW5nQ29udGV4dC5zZXRUcmFuc2Zvcm0oMSwwLDAsMSwwLDApLHRoaXMuZHJhd2luZ0NvbnRleHQuc2NhbGUobi5fcGl4ZWxEZW5zaXR5LG4uX3BpeGVsRGVuc2l0eSksdGhpcy5kcmF3aW5nQ29udGV4dC5jbGVhclJlY3QoZSx0LHIud2lkdGgsci5oZWlnaHQpLHRoaXMuZHJhd2luZ0NvbnRleHQuZHJhd0ltYWdlKHIuY2FudmFzLGUsdCksdGhpcy5kcmF3aW5nQ29udGV4dC5yZXN0b3JlKCk7ZWxzZXt2YXIgYT0wLG89MCxpPTAscz0wLGw9NCoodCpuLl9waXhlbERlbnNpdHkqKHRoaXMud2lkdGgqbi5fcGl4ZWxEZW5zaXR5KStlKm4uX3BpeGVsRGVuc2l0eSk7aWYobi5pbWFnZURhdGF8fG4ubG9hZFBpeGVscy5jYWxsKG4pLFwibnVtYmVyXCI9PXR5cGVvZiByKWw8bi5waXhlbHMubGVuZ3RoJiYoaT1vPWE9cixzPTI1NSk7ZWxzZSBpZihyIGluc3RhbmNlb2YgQXJyYXkpe2lmKHIubGVuZ3RoPDQpdGhyb3cgbmV3IEVycm9yKFwicGl4ZWwgYXJyYXkgbXVzdCBiZSBvZiB0aGUgZm9ybSBbUiwgRywgQiwgQV1cIik7bDxuLnBpeGVscy5sZW5ndGgmJihhPXJbMF0sbz1yWzFdLGk9clsyXSxzPXJbM10pfWVsc2UgciBpbnN0YW5jZW9mIGMuZGVmYXVsdC5Db2xvciYmbDxuLnBpeGVscy5sZW5ndGgmJihhPXIubGV2ZWxzWzBdLG89ci5sZXZlbHNbMV0saT1yLmxldmVsc1syXSxzPXIubGV2ZWxzWzNdKTtmb3IodmFyIHA9MDtwPG4uX3BpeGVsRGVuc2l0eTtwKyspZm9yKHZhciB1PTA7dTxuLl9waXhlbERlbnNpdHk7dSsrKWw9NCooKHQqbi5fcGl4ZWxEZW5zaXR5K3UpKnRoaXMud2lkdGgqbi5fcGl4ZWxEZW5zaXR5KyhlKm4uX3BpeGVsRGVuc2l0eStwKSksbi5waXhlbHNbbF09YSxuLnBpeGVsc1tsKzFdPW8sbi5waXhlbHNbbCsyXT1pLG4ucGl4ZWxzW2wrM109c319LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS51cGRhdGVQaXhlbHM9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9dGhpcy5fcGl4ZWxzU3RhdGUsbz1hLl9waXhlbERlbnNpdHk7dm9pZCAwPT09ZSYmdm9pZCAwPT09dCYmdm9pZCAwPT09ciYmdm9pZCAwPT09biYmKHQ9ZT0wLHI9dGhpcy53aWR0aCxuPXRoaXMuaGVpZ2h0KSxlKj1vLHQqPW8scio9byxuKj1vLHRoaXMuZ2lmUHJvcGVydGllcyYmKHRoaXMuZ2lmUHJvcGVydGllcy5mcmFtZXNbdGhpcy5naWZQcm9wZXJ0aWVzLmRpc3BsYXlJbmRleF0uaW1hZ2U9YS5pbWFnZURhdGEpLHRoaXMuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKGEuaW1hZ2VEYXRhLGUsdCwwLDAscixuKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9hY3V0ZUFyY1RvQmV6aWVyPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dC8yLG49TWF0aC5jb3MociksYT1NYXRoLnNpbihyKSxvPTEvTWF0aC50YW4ociksaT1lK3Iscz1NYXRoLmNvcyhpKSxsPU1hdGguc2luKGkpLHA9KDQtbikvMyx1PWErKG4tcCkqbztyZXR1cm57YXg6TWF0aC5jb3MoZSkudG9GaXhlZCg3KSxheTpNYXRoLnNpbihlKS50b0ZpeGVkKDcpLGJ4OihwKnMrdSpsKS50b0ZpeGVkKDcpLGJ5OihwKmwtdSpzKS50b0ZpeGVkKDcpLGN4OihwKnMtdSpsKS50b0ZpeGVkKDcpLGN5OihwKmwrdSpzKS50b0ZpeGVkKDcpLGR4Ok1hdGguY29zKGUrdCkudG9GaXhlZCg3KSxkeTpNYXRoLnNpbihlK3QpLnRvRml4ZWQoNyl9fSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYXJjPWZ1bmN0aW9uKHIsbixlLHQsYSxvLGkpe3ZhciBzPXRoaXMuZHJhd2luZ0NvbnRleHQsbD1lLzIscD10LzIsdT0wLGM9W107Zm9yKHIrPWwsbis9cDsxZS01PD1vLWE7KXU9TWF0aC5taW4oby1hLG0uSEFMRl9QSSksYy5wdXNoKHRoaXMuX2FjdXRlQXJjVG9CZXppZXIoYSx1KSksYSs9dTtyZXR1cm4gdGhpcy5fZG9GaWxsJiYocy5iZWdpblBhdGgoKSxjLmZvckVhY2goZnVuY3Rpb24oZSx0KXswPT09dCYmcy5tb3ZlVG8ocitlLmF4KmwsbitlLmF5KnApLHMuYmV6aWVyQ3VydmVUbyhyK2UuYngqbCxuK2UuYnkqcCxyK2UuY3gqbCxuK2UuY3kqcCxyK2UuZHgqbCxuK2UuZHkqcCl9KSxpIT09bS5QSUUmJm51bGwhPWl8fHMubGluZVRvKHIsbikscy5jbG9zZVBhdGgoKSxzLmZpbGwoKSksdGhpcy5fZG9TdHJva2UmJihzLmJlZ2luUGF0aCgpLGMuZm9yRWFjaChmdW5jdGlvbihlLHQpezA9PT10JiZzLm1vdmVUbyhyK2UuYXgqbCxuK2UuYXkqcCkscy5iZXppZXJDdXJ2ZVRvKHIrZS5ieCpsLG4rZS5ieSpwLHIrZS5jeCpsLG4rZS5jeSpwLHIrZS5keCpsLG4rZS5keSpwKX0pLGk9PT1tLlBJRT8ocy5saW5lVG8ocixuKSxzLmNsb3NlUGF0aCgpKTppPT09bS5DSE9SRCYmcy5jbG9zZVBhdGgoKSxzLnN0cm9rZSgpKSx0aGlzfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuZWxsaXBzZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmRyYXdpbmdDb250ZXh0LHI9dGhpcy5fZG9GaWxsLG49dGhpcy5fZG9TdHJva2UsYT1wYXJzZUZsb2F0KGVbMF0pLG89cGFyc2VGbG9hdChlWzFdKSxpPXBhcnNlRmxvYXQoZVsyXSkscz1wYXJzZUZsb2F0KGVbM10pO2lmKHImJiFuKXtpZih0aGlzLl9nZXRGaWxsKCk9PT15KXJldHVybiB0aGlzfWVsc2UgaWYoIXImJm4mJnRoaXMuX2dldFN0cm9rZSgpPT09eSlyZXR1cm4gdGhpczt2YXIgbD1pLzIqLjU1MjI4NDc0OTgscD1zLzIqLjU1MjI4NDc0OTgsdT1hK2ksYz1vK3MsZD1hK2kvMixoPW8rcy8yO3QuYmVnaW5QYXRoKCksdC5tb3ZlVG8oYSxoKSx0LmJlemllckN1cnZlVG8oYSxoLXAsZC1sLG8sZCxvKSx0LmJlemllckN1cnZlVG8oZCtsLG8sdSxoLXAsdSxoKSx0LmJlemllckN1cnZlVG8odSxoK3AsZCtsLGMsZCxjKSx0LmJlemllckN1cnZlVG8oZC1sLGMsYSxoK3AsYSxoKSxyJiZ0LmZpbGwoKSxuJiZ0LnN0cm9rZSgpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUubGluZT1mdW5jdGlvbihlLHQscixuKXt2YXIgYT10aGlzLmRyYXdpbmdDb250ZXh0O3JldHVybiB0aGlzLl9kb1N0cm9rZSYmKHRoaXMuX2dldFN0cm9rZSgpPT09eXx8KGEuYmVnaW5QYXRoKCksYS5tb3ZlVG8oZSx0KSxhLmxpbmVUbyhyLG4pLGEuc3Ryb2tlKCkpKSx0aGlzfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUucG9pbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmRyYXdpbmdDb250ZXh0O2lmKCF0aGlzLl9kb1N0cm9rZSlyZXR1cm4gdGhpcztpZih0aGlzLl9nZXRTdHJva2UoKT09PXkpcmV0dXJuIHRoaXM7dmFyIG49dGhpcy5fZ2V0U3Ryb2tlKCksYT10aGlzLl9nZXRGaWxsKCk7ZT1NYXRoLnJvdW5kKGUpLHQ9TWF0aC5yb3VuZCh0KSx0aGlzLl9zZXRGaWxsKG4pLDE8ci5saW5lV2lkdGg/KHIuYmVnaW5QYXRoKCksci5hcmMoZSx0LHIubGluZVdpZHRoLzIsMCxtLlRXT19QSSwhMSksci5maWxsKCkpOnIuZmlsbFJlY3QoZSx0LDEsMSksdGhpcy5fc2V0RmlsbChhKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnF1YWQ9ZnVuY3Rpb24oZSx0LHIsbixhLG8saSxzKXt2YXIgbD10aGlzLmRyYXdpbmdDb250ZXh0LHA9dGhpcy5fZG9GaWxsLHU9dGhpcy5fZG9TdHJva2U7aWYocCYmIXUpe2lmKHRoaXMuX2dldEZpbGwoKT09PXkpcmV0dXJuIHRoaXN9ZWxzZSBpZighcCYmdSYmdGhpcy5fZ2V0U3Ryb2tlKCk9PT15KXJldHVybiB0aGlzO3JldHVybiBsLmJlZ2luUGF0aCgpLGwubW92ZVRvKGUsdCksbC5saW5lVG8ocixuKSxsLmxpbmVUbyhhLG8pLGwubGluZVRvKGkscyksbC5jbG9zZVBhdGgoKSxwJiZsLmZpbGwoKSx1JiZsLnN0cm9rZSgpLHRoaXN9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5yZWN0PWZ1bmN0aW9uKGUpe3ZhciB0PWVbMF0scj1lWzFdLG49ZVsyXSxhPWVbM10sbz1lWzRdLGk9ZVs1XSxzPWVbNl0sbD1lWzddLHA9dGhpcy5kcmF3aW5nQ29udGV4dCx1PXRoaXMuX2RvRmlsbCxjPXRoaXMuX2RvU3Ryb2tlO2lmKHUmJiFjKXtpZih0aGlzLl9nZXRGaWxsKCk9PT15KXJldHVybiB0aGlzfWVsc2UgaWYoIXUmJmMmJnRoaXMuX2dldFN0cm9rZSgpPT09eSlyZXR1cm4gdGhpcztpZihwLmJlZ2luUGF0aCgpLHZvaWQgMD09PW8pcC5yZWN0KHQscixuLGEpO2Vsc2V7dm9pZCAwPT09aSYmKGk9byksdm9pZCAwPT09cyYmKHM9aSksdm9pZCAwPT09bCYmKGw9cyk7dmFyIGQ9TWF0aC5hYnMobiksaD1NYXRoLmFicyhhKSxtPWQvMixmPWgvMjtkPDIqbyYmKG89bSksaDwyKm8mJihvPWYpLGQ8MippJiYoaT1tKSxoPDIqaSYmKGk9ZiksZDwyKnMmJihzPW0pLGg8MipzJiYocz1mKSxkPDIqbCYmKGw9bSksaDwyKmwmJihsPWYpLHAuYmVnaW5QYXRoKCkscC5tb3ZlVG8odCtvLHIpLHAuYXJjVG8odCtuLHIsdCtuLHIrYSxpKSxwLmFyY1RvKHQrbixyK2EsdCxyK2EscykscC5hcmNUbyh0LHIrYSx0LHIsbCkscC5hcmNUbyh0LHIsdCtuLHIsbykscC5jbG9zZVBhdGgoKX1yZXR1cm4gdGhpcy5fZG9GaWxsJiZwLmZpbGwoKSx0aGlzLl9kb1N0cm9rZSYmcC5zdHJva2UoKSx0aGlzfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUudHJpYW5nbGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5kcmF3aW5nQ29udGV4dCxyPXRoaXMuX2RvRmlsbCxuPXRoaXMuX2RvU3Ryb2tlLGE9ZVswXSxvPWVbMV0saT1lWzJdLHM9ZVszXSxsPWVbNF0scD1lWzVdO2lmKHImJiFuKXtpZih0aGlzLl9nZXRGaWxsKCk9PT15KXJldHVybiB0aGlzfWVsc2UgaWYoIXImJm4mJnRoaXMuX2dldFN0cm9rZSgpPT09eSlyZXR1cm4gdGhpczt0LmJlZ2luUGF0aCgpLHQubW92ZVRvKGEsbyksdC5saW5lVG8oaSxzKSx0LmxpbmVUbyhsLHApLHQuY2xvc2VQYXRoKCksciYmdC5maWxsKCksbiYmdC5zdHJva2UoKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmVuZFNoYXBlPWZ1bmN0aW9uKGUsdCxyLG4sYSxvLGkpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gdGhpcztpZighdGhpcy5fZG9TdHJva2UmJiF0aGlzLl9kb0ZpbGwpcmV0dXJuIHRoaXM7dmFyIHMsbCxwLHU9ZT09PW0uQ0xPU0U7dSYmIW8mJnQucHVzaCh0WzBdKTt2YXIgYz10Lmxlbmd0aDtpZighcnx8aSE9PW0uUE9MWUdPTiYmbnVsbCE9PWkpaWYoIW58fGkhPT1tLlBPTFlHT04mJm51bGwhPT1pKWlmKCFhfHxpIT09bS5QT0xZR09OJiZudWxsIT09aSlpZihpPT09bS5QT0lOVFMpZm9yKGw9MDtsPGM7bCsrKXM9dFtsXSx0aGlzLl9kb1N0cm9rZSYmdGhpcy5fcEluc3Quc3Ryb2tlKHNbNl0pLHRoaXMuX3BJbnN0LnBvaW50KHNbMF0sc1sxXSk7ZWxzZSBpZihpPT09bS5MSU5FUylmb3IobD0wO2wrMTxjO2wrPTIpcz10W2xdLHRoaXMuX2RvU3Ryb2tlJiZ0aGlzLl9wSW5zdC5zdHJva2UodFtsKzFdWzZdKSx0aGlzLl9wSW5zdC5saW5lKHNbMF0sc1sxXSx0W2wrMV1bMF0sdFtsKzFdWzFdKTtlbHNlIGlmKGk9PT1tLlRSSUFOR0xFUylmb3IobD0wO2wrMjxjO2wrPTMpcz10W2xdLHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksdGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8oc1swXSxzWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wrMV1bMF0sdFtsKzFdWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wrMl1bMF0sdFtsKzJdWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuX2RvRmlsbCYmKHRoaXMuX3BJbnN0LmZpbGwodFtsKzJdWzVdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmZpbGwoKSksdGhpcy5fZG9TdHJva2UmJih0aGlzLl9wSW5zdC5zdHJva2UodFtsKzJdWzZdKSx0aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZSgpKTtlbHNlIGlmKGk9PT1tLlRSSUFOR0xFX1NUUklQKWZvcihsPTA7bCsxPGM7bCsrKXM9dFtsXSx0aGlzLmRyYXdpbmdDb250ZXh0LmJlZ2luUGF0aCgpLHRoaXMuZHJhd2luZ0NvbnRleHQubW92ZVRvKHRbbCsxXVswXSx0W2wrMV1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHNbMF0sc1sxXSksdGhpcy5fZG9TdHJva2UmJnRoaXMuX3BJbnN0LnN0cm9rZSh0W2wrMV1bNl0pLHRoaXMuX2RvRmlsbCYmdGhpcy5fcEluc3QuZmlsbCh0W2wrMV1bNV0pLGwrMjxjJiYodGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFtsKzJdWzBdLHRbbCsyXVsxXSksdGhpcy5fZG9TdHJva2UmJnRoaXMuX3BJbnN0LnN0cm9rZSh0W2wrMl1bNl0pLHRoaXMuX2RvRmlsbCYmdGhpcy5fcEluc3QuZmlsbCh0W2wrMl1bNV0pKSx0aGlzLl9kb0ZpbGxTdHJva2VDbG9zZSh1KTtlbHNlIGlmKGk9PT1tLlRSSUFOR0xFX0ZBTil7aWYoMjxjKXtmb3IodGhpcy5kcmF3aW5nQ29udGV4dC5iZWdpblBhdGgoKSxsPTI7bDxjO2wrKylzPXRbbF0sdGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8odFswXVswXSx0WzBdWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wtMV1bMF0sdFtsLTFdWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyhzWzBdLHNbMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbMF1bMF0sdFswXVsxXSksbDxjLTEmJih0aGlzLl9kb0ZpbGwmJnNbNV0hPT10W2wrMV1bNV18fHRoaXMuX2RvU3Ryb2tlJiZzWzZdIT09dFtsKzFdWzZdKSYmKHRoaXMuX2RvRmlsbCYmKHRoaXMuX3BJbnN0LmZpbGwoc1s1XSksdGhpcy5kcmF3aW5nQ29udGV4dC5maWxsKCksdGhpcy5fcEluc3QuZmlsbCh0W2wrMV1bNV0pKSx0aGlzLl9kb1N0cm9rZSYmKHRoaXMuX3BJbnN0LnN0cm9rZShzWzZdKSx0aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZSgpLHRoaXMuX3BJbnN0LnN0cm9rZSh0W2wrMV1bNl0pKSx0aGlzLmRyYXdpbmdDb250ZXh0LmNsb3NlUGF0aCgpLHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCkpO3RoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKHUpfX1lbHNlIGlmKGk9PT1tLlFVQURTKWZvcihsPTA7bCszPGM7bCs9NCl7Zm9yKHM9dFtsXSx0aGlzLmRyYXdpbmdDb250ZXh0LmJlZ2luUGF0aCgpLHRoaXMuZHJhd2luZ0NvbnRleHQubW92ZVRvKHNbMF0sc1sxXSkscD0xO3A8NDtwKyspdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFtsK3BdWzBdLHRbbCtwXVsxXSk7dGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8oc1swXSxzWzFdKSx0aGlzLl9kb0ZpbGwmJnRoaXMuX3BJbnN0LmZpbGwodFtsKzNdWzVdKSx0aGlzLl9kb1N0cm9rZSYmdGhpcy5fcEluc3Quc3Ryb2tlKHRbbCszXVs2XSksdGhpcy5fZG9GaWxsU3Ryb2tlQ2xvc2UodSl9ZWxzZSBpZihpPT09bS5RVUFEX1NUUklQKXtpZigzPGMpZm9yKGw9MDtsKzE8YztsKz0yKXM9dFtsXSx0aGlzLmRyYXdpbmdDb250ZXh0LmJlZ2luUGF0aCgpLGwrMzxjPyh0aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyh0W2wrMl1bMF0sdFtsKzJdWzFdKSx0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyhzWzBdLHNbMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbCsxXVswXSx0W2wrMV1bMV0pLHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHRbbCszXVswXSx0W2wrM11bMV0pLHRoaXMuX2RvRmlsbCYmdGhpcy5fcEluc3QuZmlsbCh0W2wrM11bNV0pLHRoaXMuX2RvU3Ryb2tlJiZ0aGlzLl9wSW5zdC5zdHJva2UodFtsKzNdWzZdKSk6KHRoaXMuZHJhd2luZ0NvbnRleHQubW92ZVRvKHNbMF0sc1sxXSksdGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFtsKzFdWzBdLHRbbCsxXVsxXSkpLHRoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKHUpfWVsc2V7Zm9yKHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksdGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8odFswXVswXSx0WzBdWzFdKSxsPTE7bDxjO2wrKykocz10W2xdKS5pc1ZlcnQmJihzLm1vdmVUbz90aGlzLmRyYXdpbmdDb250ZXh0Lm1vdmVUbyhzWzBdLHNbMV0pOnRoaXMuZHJhd2luZ0NvbnRleHQubGluZVRvKHNbMF0sc1sxXSkpO3RoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKHUpfWVsc2V7Zm9yKHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksbD0wO2w8YztsKyspdFtsXS5pc1ZlcnQ/dFtsXS5tb3ZlVG8/dGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8odFtsXVswXSx0W2xdWzFdKTp0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2xdWzBdLHRbbF1bMV0pOnRoaXMuZHJhd2luZ0NvbnRleHQucXVhZHJhdGljQ3VydmVUbyh0W2xdWzBdLHRbbF1bMV0sdFtsXVsyXSx0W2xdWzNdKTt0aGlzLl9kb0ZpbGxTdHJva2VDbG9zZSh1KX1lbHNle2Zvcih0aGlzLmRyYXdpbmdDb250ZXh0LmJlZ2luUGF0aCgpLGw9MDtsPGM7bCsrKXRbbF0uaXNWZXJ0P3RbbF0ubW92ZVRvP3RoaXMuZHJhd2luZ0NvbnRleHQubW92ZVRvKHRbbF1bMF0sdFtsXVsxXSk6dGhpcy5kcmF3aW5nQ29udGV4dC5saW5lVG8odFtsXVswXSx0W2xdWzFdKTp0aGlzLmRyYXdpbmdDb250ZXh0LmJlemllckN1cnZlVG8odFtsXVswXSx0W2xdWzFdLHRbbF1bMl0sdFtsXVszXSx0W2xdWzRdLHRbbF1bNV0pO3RoaXMuX2RvRmlsbFN0cm9rZUNsb3NlKHUpfWVsc2UgaWYoMzxjKXt2YXIgZD1bXSxoPTEtdGhpcy5fY3VydmVUaWdodG5lc3M7Zm9yKHRoaXMuZHJhd2luZ0NvbnRleHQuYmVnaW5QYXRoKCksdGhpcy5kcmF3aW5nQ29udGV4dC5tb3ZlVG8odFsxXVswXSx0WzFdWzFdKSxsPTE7bCsyPGM7bCsrKXM9dFtsXSxkWzBdPVtzWzBdLHNbMV1dLGRbMV09W3NbMF0rKGgqdFtsKzFdWzBdLWgqdFtsLTFdWzBdKS82LHNbMV0rKGgqdFtsKzFdWzFdLWgqdFtsLTFdWzFdKS82XSxkWzJdPVt0W2wrMV1bMF0rKGgqdFtsXVswXS1oKnRbbCsyXVswXSkvNix0W2wrMV1bMV0rKGgqdFtsXVsxXS1oKnRbbCsyXVsxXSkvNl0sZFszXT1bdFtsKzFdWzBdLHRbbCsxXVsxXV0sdGhpcy5kcmF3aW5nQ29udGV4dC5iZXppZXJDdXJ2ZVRvKGRbMV1bMF0sZFsxXVsxXSxkWzJdWzBdLGRbMl1bMV0sZFszXVswXSxkWzNdWzFdKTt1JiZ0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVUbyh0W2wrMV1bMF0sdFtsKzFdWzFdKSx0aGlzLl9kb0ZpbGxTdHJva2VDbG9zZSh1KX1yZXR1cm4gbz1hPW49cj0hMSx1JiZ0LnBvcCgpLHRoaXN9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5zdHJva2VDYXA9ZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1tLlJPVU5EJiZlIT09bS5TUVVBUkUmJmUhPT1tLlBST0pFQ1R8fCh0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVDYXA9ZSksdGhpc30sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnN0cm9rZUpvaW49ZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1tLlJPVU5EJiZlIT09bS5CRVZFTCYmZSE9PW0uTUlURVJ8fCh0aGlzLmRyYXdpbmdDb250ZXh0LmxpbmVKb2luPWUpLHRoaXN9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5zdHJva2VXZWlnaHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZHJhd2luZ0NvbnRleHQubGluZVdpZHRoPXZvaWQgMD09PWV8fDA9PT1lPzFlLTQ6ZSx0aGlzfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuX2dldEZpbGw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FjaGVkRmlsbFN0eWxlfHwodGhpcy5fY2FjaGVkRmlsbFN0eWxlPXRoaXMuZHJhd2luZ0NvbnRleHQuZmlsbFN0eWxlKSx0aGlzLl9jYWNoZWRGaWxsU3R5bGV9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fc2V0RmlsbD1mdW5jdGlvbihlKXtlIT09dGhpcy5fY2FjaGVkRmlsbFN0eWxlJiYodGhpcy5kcmF3aW5nQ29udGV4dC5maWxsU3R5bGU9ZSx0aGlzLl9jYWNoZWRGaWxsU3R5bGU9ZSl9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fZ2V0U3Ryb2tlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NhY2hlZFN0cm9rZVN0eWxlfHwodGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGU9dGhpcy5kcmF3aW5nQ29udGV4dC5zdHJva2VTdHlsZSksdGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGV9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fc2V0U3Ryb2tlPWZ1bmN0aW9uKGUpe2UhPT10aGlzLl9jYWNoZWRTdHJva2VTdHlsZSYmKHRoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlU3R5bGU9ZSx0aGlzLl9jYWNoZWRTdHJva2VTdHlsZT1lKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLmJlemllcj1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMpe3JldHVybiB0aGlzLl9wSW5zdC5iZWdpblNoYXBlKCksdGhpcy5fcEluc3QudmVydGV4KGUsdCksdGhpcy5fcEluc3QuYmV6aWVyVmVydGV4KHIsbixhLG8saSxzKSx0aGlzLl9wSW5zdC5lbmRTaGFwZSgpLHRoaXN9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5jdXJ2ZT1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMpe3JldHVybiB0aGlzLl9wSW5zdC5iZWdpblNoYXBlKCksdGhpcy5fcEluc3QuY3VydmVWZXJ0ZXgoZSx0KSx0aGlzLl9wSW5zdC5jdXJ2ZVZlcnRleChyLG4pLHRoaXMuX3BJbnN0LmN1cnZlVmVydGV4KGEsbyksdGhpcy5fcEluc3QuY3VydmVWZXJ0ZXgoaSxzKSx0aGlzLl9wSW5zdC5lbmRTaGFwZSgpLHRoaXN9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fZG9GaWxsU3Ryb2tlQ2xvc2U9ZnVuY3Rpb24oZSl7ZSYmdGhpcy5kcmF3aW5nQ29udGV4dC5jbG9zZVBhdGgoKSx0aGlzLl9kb0ZpbGwmJnRoaXMuZHJhd2luZ0NvbnRleHQuZmlsbCgpLHRoaXMuX2RvU3Ryb2tlJiZ0aGlzLmRyYXdpbmdDb250ZXh0LnN0cm9rZSgpfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYXBwbHlNYXRyaXg9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe3RoaXMuZHJhd2luZ0NvbnRleHQudHJhbnNmb3JtKGUsdCxyLG4sYSxvKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnJlc2V0TWF0cml4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZHJhd2luZ0NvbnRleHQuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSx0aGlzLmRyYXdpbmdDb250ZXh0LnNjYWxlKHRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHksdGhpcy5fcEluc3QuX3BpeGVsRGVuc2l0eSksdGhpc30sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlKXt0aGlzLmRyYXdpbmdDb250ZXh0LnJvdGF0ZShlKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnNjYWxlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuZHJhd2luZ0NvbnRleHQuc2NhbGUoZSx0KSx0aGlzfSxjLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUudHJhbnNsYXRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUgaW5zdGFuY2VvZiBjLmRlZmF1bHQuVmVjdG9yJiYodD1lLnksZT1lLngpLHRoaXMuZHJhd2luZ0NvbnRleHQudHJhbnNsYXRlKGUsdCksdGhpc30sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbzt2b2lkIDAhPT1uJiZ0aGlzLmRyYXdpbmdDb250ZXh0LnRleHRCYXNlbGluZT09PW0uQkFTRUxJTkUmJihvPSEwLHRoaXMuZHJhd2luZ0NvbnRleHQudGV4dEJhc2VsaW5lPW0uVE9QKTt2YXIgaT1jLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnRleHQuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBvJiYodGhpcy5kcmF3aW5nQ29udGV4dC50ZXh0QmFzZWxpbmU9bS5CQVNFTElORSksaX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLl9yZW5kZXJUZXh0PWZ1bmN0aW9uKGUsdCxyLG4sYSl7aWYoIShhPD1uKSlyZXR1cm4gZS5wdXNoKCksdGhpcy5faXNPcGVuVHlwZSgpP3RoaXMuX3RleHRGb250Ll9yZW5kZXJQYXRoKHQscixuLHtyZW5kZXJlcjp0aGlzfSk6KHRoaXMuX2RvU3Ryb2tlJiZ0aGlzLl9zdHJva2VTZXQmJnRoaXMuZHJhd2luZ0NvbnRleHQuc3Ryb2tlVGV4dCh0LHIsbiksdGhpcy5fZG9GaWxsJiYodGhpcy5fZmlsbFNldHx8dGhpcy5fc2V0RmlsbChtLl9ERUZBVUxUX1RFWFRfRklMTCksdGhpcy5kcmF3aW5nQ29udGV4dC5maWxsVGV4dCh0LHIsbikpKSxlLnBvcCgpLGV9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS50ZXh0V2lkdGg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2lzT3BlblR5cGUoKT90aGlzLl90ZXh0Rm9udC5fdGV4dFdpZHRoKGUsdGhpcy5fdGV4dFNpemUpOnRoaXMuZHJhd2luZ0NvbnRleHQubWVhc3VyZVRleHQoZSkud2lkdGh9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fYXBwbHlUZXh0UHJvcGVydGllcz1mdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fcEluc3Q7cmV0dXJuIHRoaXMuX3NldFByb3BlcnR5KFwiX3RleHRBc2NlbnRcIixudWxsKSx0aGlzLl9zZXRQcm9wZXJ0eShcIl90ZXh0RGVzY2VudFwiLG51bGwpLGU9dGhpcy5fdGV4dEZvbnQsdGhpcy5faXNPcGVuVHlwZSgpJiYoZT10aGlzLl90ZXh0Rm9udC5mb250LmZhbWlseU5hbWUsdGhpcy5fc2V0UHJvcGVydHkoXCJfdGV4dFN0eWxlXCIsdGhpcy5fdGV4dEZvbnQuZm9udC5zdHlsZU5hbWUpKSx0aGlzLmRyYXdpbmdDb250ZXh0LmZvbnQ9XCJcIi5jb25jYXQodGhpcy5fdGV4dFN0eWxlfHxcIm5vcm1hbFwiLFwiIFwiKS5jb25jYXQodGhpcy5fdGV4dFNpemV8fDEyLFwicHggXCIpLmNvbmNhdChlfHxcInNhbnMtc2VyaWZcIiksdGhpcy5kcmF3aW5nQ29udGV4dC50ZXh0QWxpZ249dGhpcy5fdGV4dEFsaWduLHRoaXMuX3RleHRCYXNlbGluZT09PW0uQ0VOVEVSP3RoaXMuZHJhd2luZ0NvbnRleHQudGV4dEJhc2VsaW5lPW0uX0NUWF9NSURETEU6dGhpcy5kcmF3aW5nQ29udGV4dC50ZXh0QmFzZWxpbmU9dGhpcy5fdGV4dEJhc2VsaW5lLHR9LGMuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZHJhd2luZ0NvbnRleHQuc2F2ZSgpLGMuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzKX0sYy5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnBvcD1mdW5jdGlvbihlKXt0aGlzLmRyYXdpbmdDb250ZXh0LnJlc3RvcmUoKSx0aGlzLl9jYWNoZWRGaWxsU3R5bGU9dGhpcy5kcmF3aW5nQ29udGV4dC5maWxsU3R5bGUsdGhpcy5fY2FjaGVkU3Ryb2tlU3R5bGU9dGhpcy5kcmF3aW5nQ29udGV4dC5zdHJva2VTdHlsZSxjLmRlZmF1bHQuUmVuZGVyZXIucHJvdG90eXBlLnBvcC5jYWxsKHRoaXMsZSl9O3ZhciBhPWMuZGVmYXVsdC5SZW5kZXJlcjJEO3IuZGVmYXVsdD1hfSx7XCIuLi9pbWFnZS9maWx0ZXJzXCI6NTMsXCIuL2NvbnN0YW50c1wiOjIyLFwiLi9tYWluXCI6MzIsXCIuL3A1LlJlbmRlcmVyXCI6MzV9XSwzNzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuLGQ9KG49ZShcIi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2QuZGVmYXVsdC5wcm90b3R5cGUuX3Byb21pc2VQcmVsb2Fkcz1bXTt2YXIgaD0hKGQuZGVmYXVsdC5wcm90b3R5cGUucmVnaXN0ZXJQcm9taXNlUHJlbG9hZD1mdW5jdGlvbihlKXtkLmRlZmF1bHQucHJvdG90eXBlLl9wcm9taXNlUHJlbG9hZHMucHVzaChlKX0pO2QuZGVmYXVsdC5wcm90b3R5cGUuX3NldHVwUHJvbWlzZVByZWxvYWRzPWZ1bmN0aW9uKCl7dmFyIGU9ITAsdD0hMSxyPXZvaWQgMDt0cnl7Zm9yKHZhciBuLGE9dGhpcy5fcHJvbWlzZVByZWxvYWRzW1N5bWJvbC5pdGVyYXRvcl0oKTshKGU9KG49YS5uZXh0KCkpLmRvbmUpO2U9ITApe3ZhciBvPW4udmFsdWUsaT10aGlzLHM9by5tZXRob2QsbD1vLmFkZENhbGxiYWNrcyxwPW8ubGVnYWN5UHJlbG9hZFNldHVwLHU9by50YXJnZXR8fHRoaXMsYz11W3NdLmJpbmQodSk7aWYodT09PWQuZGVmYXVsdC5wcm90b3R5cGUpe2lmKGgpY29udGludWU7aT1udWxsLGM9dVtzXX1pZih1W3NdPXRoaXMuX3dyYXBQcm9taXNlUHJlbG9hZChpLGMsbCkscCl1W3AubWV0aG9kXT10aGlzLl9sZWdhY3lQcmVsb2FkR2VuZXJhdG9yKGkscCx1W3NdKX19Y2F0Y2goZSl7dD0hMCxyPWV9ZmluYWxseXt0cnl7ZXx8bnVsbD09YS5yZXR1cm58fGEucmV0dXJuKCl9ZmluYWxseXtpZih0KXRocm93IHJ9fWg9ITB9LGQuZGVmYXVsdC5wcm90b3R5cGUuX3dyYXBQcm9taXNlUHJlbG9hZD1mdW5jdGlvbihlLGwscCl7dmFyIHQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX2luY3JlbWVudFByZWxvYWQoKTtmb3IodmFyIHQ9bnVsbCxyPW51bGwsbj1hcmd1bWVudHMubGVuZ3RoLGE9bmV3IEFycmF5KG4pLG89MDtvPG47bysrKWFbb109YXJndW1lbnRzW29dO2lmKHApZm9yKHZhciBpPWEubGVuZ3RoLTE7MDw9aSYmIXImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGFbaV07aS0tKXI9dCx0PWEucG9wKCk7dmFyIHM9UHJvbWlzZS5yZXNvbHZlKGwuYXBwbHkodGhpcyxhKSk7cmV0dXJuIHQmJnMudGhlbih0KSxyJiZzLmNhdGNoKHIpLHMudGhlbihmdW5jdGlvbigpe3JldHVybiBlLl9kZWNyZW1lbnRQcmVsb2FkKCl9KSxzfTtyZXR1cm4gZSYmKHQ9dC5iaW5kKGUpKSx0fTtmdW5jdGlvbiBvKCl7cmV0dXJue319ZC5kZWZhdWx0LnByb3RvdHlwZS5fbGVnYWN5UHJlbG9hZEdlbmVyYXRvcj1mdW5jdGlvbihlLHQsbil7dmFyIGE9dC5jcmVhdGVCYXNlT2JqZWN0fHxvLHI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuX2luY3JlbWVudFByZWxvYWQoKTt2YXIgcj1hLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbi5hcHBseSh0aGlzLGFyZ3VtZW50cykudGhlbihmdW5jdGlvbihlKXtPYmplY3QuYXNzaWduKHIsZSksdC5fZGVjcmVtZW50UHJlbG9hZCgpfSkscn07cmV0dXJuIGUmJihyPXIuYmluZChlKSkscn19LHtcIi4vbWFpblwiOjMyfV0sMzg6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGw9KG49ZShcIi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LHA9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09cyhlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1pKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gaSgpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIGk9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBzKGUpe3JldHVybihzPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1lKFwiLi9wNS5HcmFwaGljc1wiKSxlKFwiLi9wNS5SZW5kZXJlcjJEXCIpLGUoXCIuLi93ZWJnbC9wNS5SZW5kZXJlckdMXCIpO3ZhciB1PVwiZGVmYXVsdENhbnZhczBcIjtsLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUNhbnZhcz1mdW5jdGlvbihlLHQscil7bC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVDYW52YXNcIixhcmd1bWVudHMpO3ZhciBuLGE9cnx8cC5QMkQ7aWYoYT09PXAuV0VCR0wpe2lmKG49ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodSkpe24ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKTt2YXIgbz10aGlzLl9yZW5kZXJlcjt0aGlzLl9lbGVtZW50cz10aGlzLl9lbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1vfSl9KG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSkuaWQ9dSxuLmNsYXNzTGlzdC5hZGQoXCJwNUNhbnZhc1wiKX1lbHNlIGlmKHRoaXMuX2RlZmF1bHRHcmFwaGljc0NyZWF0ZWQpbj10aGlzLmNhbnZhcztlbHNle249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtmb3IodmFyIGk9MDtkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlZmF1bHRDYW52YXNcIi5jb25jYXQoaSkpOylpKys7dT1cImRlZmF1bHRDYW52YXNcIi5jb25jYXQoaSksbi5pZD11LG4uY2xhc3NMaXN0LmFkZChcInA1Q2FudmFzXCIpfWlmKHRoaXMuX3NldHVwRG9uZXx8KG4uZGF0YXNldC5oaWRkZW49ITAsbi5zdHlsZS52aXNpYmlsaXR5PVwiaGlkZGVuXCIpLHRoaXMuX3VzZXJOb2RlKXRoaXMuX3VzZXJOb2RlLmFwcGVuZENoaWxkKG4pO2Vsc2V7aWYoMD09PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibWFpblwiKS5sZW5ndGgpe3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIpO2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocyl9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJtYWluXCIpWzBdLmFwcGVuZENoaWxkKG4pfXJldHVybiBhPT09cC5XRUJHTD8odGhpcy5fc2V0UHJvcGVydHkoXCJfcmVuZGVyZXJcIixuZXcgbC5kZWZhdWx0LlJlbmRlcmVyR0wobix0aGlzLCEwKSksdGhpcy5fZWxlbWVudHMucHVzaCh0aGlzLl9yZW5kZXJlcikpOnRoaXMuX2RlZmF1bHRHcmFwaGljc0NyZWF0ZWR8fCh0aGlzLl9zZXRQcm9wZXJ0eShcIl9yZW5kZXJlclwiLG5ldyBsLmRlZmF1bHQuUmVuZGVyZXIyRChuLHRoaXMsITApKSx0aGlzLl9kZWZhdWx0R3JhcGhpY3NDcmVhdGVkPSEwLHRoaXMuX2VsZW1lbnRzLnB1c2godGhpcy5fcmVuZGVyZXIpKSx0aGlzLl9yZW5kZXJlci5yZXNpemUoZSx0KSx0aGlzLl9yZW5kZXJlci5fYXBwbHlEZWZhdWx0cygpLHRoaXMuX3JlbmRlcmVyfSxsLmRlZmF1bHQucHJvdG90eXBlLnJlc2l6ZUNhbnZhcz1mdW5jdGlvbihlLHQscil7aWYobC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJyZXNpemVDYW52YXNcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyKXt2YXIgbj17fTtmb3IodmFyIGEgaW4gdGhpcy5kcmF3aW5nQ29udGV4dCl7dmFyIG89dGhpcy5kcmF3aW5nQ29udGV4dFthXTtcIm9iamVjdFwiIT09cyhvKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgbyYmKG5bYV09byl9Zm9yKHZhciBpIGluIHRoaXMuX3JlbmRlcmVyLnJlc2l6ZShlLHQpLHRoaXMud2lkdGg9ZSx0aGlzLmhlaWdodD10LG4pdHJ5e3RoaXMuZHJhd2luZ0NvbnRleHRbaV09bltpXX1jYXRjaChlKXt9cnx8dGhpcy5yZWRyYXcoKX19LGwuZGVmYXVsdC5wcm90b3R5cGUubm9DYW52YXM9ZnVuY3Rpb24oKXt0aGlzLmNhbnZhcyYmdGhpcy5jYW52YXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmNhbnZhcyl9LGwuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlR3JhcGhpY3M9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBsLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUdyYXBoaWNzXCIsYXJndW1lbnRzKSxuZXcgbC5kZWZhdWx0LkdyYXBoaWNzKGUsdCxyLHRoaXMpfSxsLmRlZmF1bHQucHJvdG90eXBlLmJsZW5kTW9kZT1mdW5jdGlvbihlKXtsLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJsZW5kTW9kZVwiLGFyZ3VtZW50cyksZT09PXAuTk9STUFMJiYoY29uc29sZS53YXJuKFwiTk9STUFMIGhhcyBiZWVuIGRlcHJlY2F0ZWQgZm9yIHVzZSBpbiBibGVuZE1vZGUuIGRlZmF1bHRpbmcgdG8gQkxFTkQgaW5zdGVhZC5cIiksZT1wLkJMRU5EKSx0aGlzLl9yZW5kZXJlci5ibGVuZE1vZGUoZSl9O3ZhciBhPWwuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vd2ViZ2wvcDUuUmVuZGVyZXJHTFwiOjg2LFwiLi9jb25zdGFudHNcIjoyMixcIi4vbWFpblwiOjMyLFwiLi9wNS5HcmFwaGljc1wiOjM0LFwiLi9wNS5SZW5kZXJlcjJEXCI6MzZ9XSwzOTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIHU9bihlKFwiLi4vbWFpblwiKSkscz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PWwoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvbnN0YW50c1wiKSksYz1uKGUoXCIuLi9oZWxwZXJzXCIpKTtmdW5jdGlvbiBsKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gbD1mdW5jdGlvbigpe3JldHVybiBlfSxlfWZ1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWUoXCIuLi9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIiksZShcIi4uL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiKSxlKFwiLi4vZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiKSx1LmRlZmF1bHQucHJvdG90eXBlLl9ub3JtYWxpemVBcmNBbmdsZXM9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbztyZXR1cm4gZS09cy5UV09fUEkqTWF0aC5mbG9vcihlL3MuVFdPX1BJKSx0LT1zLlRXT19QSSpNYXRoLmZsb29yKHQvcy5UV09fUEkpLG89TWF0aC5taW4oTWF0aC5hYnMoZS10KSxzLlRXT19QSS1NYXRoLmFicyhlLXQpKSxhJiYoZT1lPD1zLkhBTEZfUEk/TWF0aC5hdGFuKHIvbipNYXRoLnRhbihlKSk6ZT5zLkhBTEZfUEkmJmU8PTMqcy5IQUxGX1BJP01hdGguYXRhbihyL24qTWF0aC50YW4oZSkpK3MuUEk6TWF0aC5hdGFuKHIvbipNYXRoLnRhbihlKSkrcy5UV09fUEksdD10PD1zLkhBTEZfUEk/TWF0aC5hdGFuKHIvbipNYXRoLnRhbih0KSk6dD5zLkhBTEZfUEkmJnQ8PTMqcy5IQUxGX1BJP01hdGguYXRhbihyL24qTWF0aC50YW4odCkpK3MuUEk6TWF0aC5hdGFuKHIvbipNYXRoLnRhbih0KSkrcy5UV09fUEkpLHQ8ZSYmKHQrPXMuVFdPX1BJKSx7c3RhcnQ6ZSxzdG9wOnQsY29ycmVzcG9uZFRvU2FtZVBvaW50Om88MWUtNX19LHUuZGVmYXVsdC5wcm90b3R5cGUuYXJjPWZ1bmN0aW9uKGUsdCxyLG4sYSxvLGkscyl7aWYodS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJhcmNcIixhcmd1bWVudHMpLCF0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJiF0aGlzLl9yZW5kZXJlci5fZG9GaWxsKXJldHVybiB0aGlzO2lmKGE9PT1vKXJldHVybiB0aGlzO2E9dGhpcy5fdG9SYWRpYW5zKGEpLG89dGhpcy5fdG9SYWRpYW5zKG8pLHI9TWF0aC5hYnMociksbj1NYXRoLmFicyhuKTt2YXIgbD1jLmRlZmF1bHQubW9kZUFkanVzdChlLHQscixuLHRoaXMuX3JlbmRlcmVyLl9lbGxpcHNlTW9kZSkscD10aGlzLl9ub3JtYWxpemVBcmNBbmdsZXMoYSxvLGwudyxsLmgsITApO3JldHVybiBwLmNvcnJlc3BvbmRUb1NhbWVQb2ludD90aGlzLl9yZW5kZXJlci5lbGxpcHNlKFtsLngsbC55LGwudyxsLmgsc10pOnRoaXMuX3JlbmRlcmVyLmFyYyhsLngsbC55LGwudyxsLmgscC5zdGFydCxwLnN0b3AsaSxzKSx0aGlzfSx1LmRlZmF1bHQucHJvdG90eXBlLmVsbGlwc2U9ZnVuY3Rpb24oZSx0LHIsbixhKXtyZXR1cm4gdS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJlbGxpcHNlXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJFbGxpcHNlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdS5kZWZhdWx0LnByb3RvdHlwZS5jaXJjbGU9ZnVuY3Rpb24oKXt1LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNpcmNsZVwiLGFyZ3VtZW50cyk7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDAsMik7cmV0dXJuIGUucHVzaChhcmd1bWVudHNbMl0pLGUucHVzaChhcmd1bWVudHNbMl0pLHRoaXMuX3JlbmRlckVsbGlwc2UuYXBwbHkodGhpcyxlKX0sdS5kZWZhdWx0LnByb3RvdHlwZS5fcmVuZGVyRWxsaXBzZT1mdW5jdGlvbihlLHQscixuLGEpe2lmKCF0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJiF0aGlzLl9yZW5kZXJlci5fZG9GaWxsKXJldHVybiB0aGlzO3I8MCYmKHI9TWF0aC5hYnMocikpLHZvaWQgMD09PW4/bj1yOm48MCYmKG49TWF0aC5hYnMobikpO3ZhciBvPWMuZGVmYXVsdC5tb2RlQWRqdXN0KGUsdCxyLG4sdGhpcy5fcmVuZGVyZXIuX2VsbGlwc2VNb2RlKTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuZWxsaXBzZShbby54LG8ueSxvLncsby5oLGFdKSx0aGlzfSx1LmRlZmF1bHQucHJvdG90eXBlLmxpbmU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjt1LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImxpbmVcIix0KSx0aGlzLl9yZW5kZXJlci5fZG9TdHJva2UmJihuPXRoaXMuX3JlbmRlcmVyKS5saW5lLmFwcGx5KG4sdCk7cmV0dXJuIHRoaXN9LHUuZGVmYXVsdC5wcm90b3R5cGUucG9pbnQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjt1LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInBvaW50XCIsdCksdGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiYoMT09PXQubGVuZ3RoJiZ0WzBdaW5zdGFuY2VvZiB1LmRlZmF1bHQuVmVjdG9yP3RoaXMuX3JlbmRlcmVyLnBvaW50LmNhbGwodGhpcy5fcmVuZGVyZXIsdFswXS54LHRbMF0ueSx0WzBdLnopOihuPXRoaXMuX3JlbmRlcmVyKS5wb2ludC5hcHBseShuLHQpKTtyZXR1cm4gdGhpc30sdS5kZWZhdWx0LnByb3RvdHlwZS5xdWFkPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07dmFyIG47dS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJxdWFkXCIsdCksKHRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZXx8dGhpcy5fcmVuZGVyZXIuX2RvRmlsbCkmJih0aGlzLl9yZW5kZXJlci5pc1AzRCYmMTIhPT10Lmxlbmd0aD90aGlzLl9yZW5kZXJlci5xdWFkLmNhbGwodGhpcy5fcmVuZGVyZXIsdFswXSx0WzFdLDAsdFsyXSx0WzNdLDAsdFs0XSx0WzVdLDAsdFs2XSx0WzddLDApOihuPXRoaXMuX3JlbmRlcmVyKS5xdWFkLmFwcGx5KG4sdCkpO3JldHVybiB0aGlzfSx1LmRlZmF1bHQucHJvdG90eXBlLnJlY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJyZWN0XCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJSZWN0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdS5kZWZhdWx0LnByb3RvdHlwZS5zcXVhcmU9ZnVuY3Rpb24oZSx0LHIsbixhLG8saSl7cmV0dXJuIHUuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3F1YXJlXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJSZWN0LmNhbGwodGhpcyxlLHQscixyLG4sYSxvLGkpfSx1LmRlZmF1bHQucHJvdG90eXBlLl9yZW5kZXJSZWN0PWZ1bmN0aW9uKCl7aWYodGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlfHx0aGlzLl9yZW5kZXJlci5fZG9GaWxsKXszPT09YXJndW1lbnRzLmxlbmd0aCYmKGFyZ3VtZW50c1szXT1hcmd1bWVudHNbMl0pO2Zvcih2YXIgZT1jLmRlZmF1bHQubW9kZUFkanVzdChhcmd1bWVudHNbMF0sYXJndW1lbnRzWzFdLGFyZ3VtZW50c1syXSxhcmd1bWVudHNbM10sdGhpcy5fcmVuZGVyZXIuX3JlY3RNb2RlKSx0PVtlLngsZS55LGUudyxlLmhdLHI9NDtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXRbcl09YXJndW1lbnRzW3JdO3RoaXMuX3JlbmRlcmVyLnJlY3QodCl9cmV0dXJuIHRoaXN9LHUuZGVmYXVsdC5wcm90b3R5cGUudHJpYW5nbGU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gdS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0cmlhbmdsZVwiLHQpLCh0aGlzLl9yZW5kZXJlci5fZG9TdHJva2V8fHRoaXMuX3JlbmRlcmVyLl9kb0ZpbGwpJiZ0aGlzLl9yZW5kZXJlci50cmlhbmdsZSh0KSx0aGlzfTt2YXIgYT11LmRlZmF1bHQ7ci5kZWZhdWx0PWF9LHtcIi4uL2NvbnN0YW50c1wiOjIyLFwiLi4vZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCI6MjQsXCIuLi9mcmllbmRseV9lcnJvcnMvZmlsZV9lcnJvcnNcIjoyNSxcIi4uL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIjoyNyxcIi4uL2hlbHBlcnNcIjoyOCxcIi4uL21haW5cIjozMn1dLDQwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sbz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1hLmRlZmF1bHQucHJvdG90eXBlLmVsbGlwc2VNb2RlPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImVsbGlwc2VNb2RlXCIsYXJndW1lbnRzKSxlIT09by5DT1JORVImJmUhPT1vLkNPUk5FUlMmJmUhPT1vLlJBRElVUyYmZSE9PW8uQ0VOVEVSfHwodGhpcy5fcmVuZGVyZXIuX2VsbGlwc2VNb2RlPWUpLHRoaXN9LGEuZGVmYXVsdC5wcm90b3R5cGUubm9TbW9vdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXRBdHRyaWJ1dGVzKFwiYW50aWFsaWFzXCIsITEpLHRoaXMuX3JlbmRlcmVyLmlzUDNEfHxcImltYWdlU21vb3RoaW5nRW5hYmxlZFwiaW4gdGhpcy5kcmF3aW5nQ29udGV4dCYmKHRoaXMuZHJhd2luZ0NvbnRleHQuaW1hZ2VTbW9vdGhpbmdFbmFibGVkPSExKSx0aGlzfSxhLmRlZmF1bHQucHJvdG90eXBlLnJlY3RNb2RlPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlY3RNb2RlXCIsYXJndW1lbnRzKSxlIT09by5DT1JORVImJmUhPT1vLkNPUk5FUlMmJmUhPT1vLlJBRElVUyYmZSE9PW8uQ0VOVEVSfHwodGhpcy5fcmVuZGVyZXIuX3JlY3RNb2RlPWUpLHRoaXN9LGEuZGVmYXVsdC5wcm90b3R5cGUuc21vb3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0QXR0cmlidXRlcyhcImFudGlhbGlhc1wiLCEwKSx0aGlzLl9yZW5kZXJlci5pc1AzRHx8XCJpbWFnZVNtb290aGluZ0VuYWJsZWRcImluIHRoaXMuZHJhd2luZ0NvbnRleHQmJih0aGlzLmRyYXdpbmdDb250ZXh0LmltYWdlU21vb3RoaW5nRW5hYmxlZD0hMCksdGhpc30sYS5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2VDYXA9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3Ryb2tlQ2FwXCIsYXJndW1lbnRzKSxlIT09by5ST1VORCYmZSE9PW8uU1FVQVJFJiZlIT09by5QUk9KRUNUfHx0aGlzLl9yZW5kZXJlci5zdHJva2VDYXAoZSksdGhpc30sYS5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2VKb2luPWZ1bmN0aW9uKGUpe3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInN0cm9rZUpvaW5cIixhcmd1bWVudHMpLGUhPT1vLlJPVU5EJiZlIT09by5CRVZFTCYmZSE9PW8uTUlURVJ8fHRoaXMuX3JlbmRlcmVyLnN0cm9rZUpvaW4oZSksdGhpc30sYS5kZWZhdWx0LnByb3RvdHlwZS5zdHJva2VXZWlnaHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3Ryb2tlV2VpZ2h0XCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5zdHJva2VXZWlnaHQoZSksdGhpc307dmFyIGw9YS5kZWZhdWx0O3IuZGVmYXVsdD1sfSx7XCIuLi9jb25zdGFudHNcIjoyMixcIi4uL21haW5cIjozMn1dLDQxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZShcIi4uL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSxlKFwiLi4vZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuLi9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCIpLHMuZGVmYXVsdC5wcm90b3R5cGUuYmV6aWVyPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJiZXppZXJcIixyKSwodGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlfHx0aGlzLl9yZW5kZXJlci5fZG9GaWxsKSYmKGU9dGhpcy5fcmVuZGVyZXIpLmJlemllci5hcHBseShlLHIpLHRoaXN9LHMuZGVmYXVsdC5wcm90b3R5cGUuYmV6aWVyRGV0YWlsPWZ1bmN0aW9uKGUpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImJlemllckRldGFpbFwiLGFyZ3VtZW50cyksdGhpcy5fYmV6aWVyRGV0YWlsPWUsdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5iZXppZXJQb2ludD1mdW5jdGlvbihlLHQscixuLGEpe3MuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmV6aWVyUG9pbnRcIixhcmd1bWVudHMpO3ZhciBvPTEtYTtyZXR1cm4gTWF0aC5wb3cobywzKSplKzMqTWF0aC5wb3cobywyKSphKnQrMypvKk1hdGgucG93KGEsMikqcitNYXRoLnBvdyhhLDMpKm59LHMuZGVmYXVsdC5wcm90b3R5cGUuYmV6aWVyVGFuZ2VudD1mdW5jdGlvbihlLHQscixuLGEpe3MuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmV6aWVyVGFuZ2VudFwiLGFyZ3VtZW50cyk7dmFyIG89MS1hO3JldHVybiAzKm4qTWF0aC5wb3coYSwyKS0zKnIqTWF0aC5wb3coYSwyKSs2KnIqbyphLTYqdCpvKmErMyp0Kk1hdGgucG93KG8sMiktMyplKk1hdGgucG93KG8sMil9LHMuZGVmYXVsdC5wcm90b3R5cGUuY3VydmU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlXCIsdCksdGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiYobj10aGlzLl9yZW5kZXJlcikuY3VydmUuYXBwbHkobix0KTtyZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5jdXJ2ZURldGFpbD1mdW5jdGlvbihlKXtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjdXJ2ZURldGFpbFwiLGFyZ3VtZW50cyksdGhpcy5fY3VydmVEZXRhaWw9ZTwzPzM6ZSx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmN1cnZlVGlnaHRuZXNzPWZ1bmN0aW9uKGUpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlVGlnaHRuZXNzXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5fY3VydmVUaWdodG5lc3M9ZSx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmN1cnZlUG9pbnQ9ZnVuY3Rpb24oZSx0LHIsbixhKXtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlUG9pbnRcIixhcmd1bWVudHMpO3ZhciBvPWEqYSphLGk9YSphO3JldHVybiBlKigtLjUqbytpLS41KmEpK3QqKDEuNSpvLTIuNSppKzEpK3IqKC0xLjUqbysyKmkrLjUqYSkrbiooLjUqby0uNSppKX0scy5kZWZhdWx0LnByb3RvdHlwZS5jdXJ2ZVRhbmdlbnQ9ZnVuY3Rpb24oZSx0LHIsbixhKXtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlVGFuZ2VudFwiLGFyZ3VtZW50cyk7dmFyIG89YSphO3JldHVybiBlKigtMypvLzIrMiphLS41KSt0Kig5Km8vMi01KmEpK3IqKC05Km8vMis0KmErLjUpK24qKDMqby8yLWEpfTt2YXIgYT1zLmRlZmF1bHQ7ci5kZWZhdWx0PWF9LHtcIi4uL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiOjI0LFwiLi4vZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjUsXCIuLi9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCI6MjcsXCIuLi9tYWluXCI6MzJ9XSw0MjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4scz0obj1lKFwiLi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09aShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1wKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHAoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBwPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9dmFyIGE9bnVsbCx1PVtdLGM9W10sZD0hMSxvPSExLGg9ITEsbT0hMSxmPSEwO3MuZGVmYXVsdC5wcm90b3R5cGUuYmVnaW5Db250b3VyPWZ1bmN0aW9uKCl7cmV0dXJuIGM9W10sbT0hMCx0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmJlZ2luU2hhcGU9ZnVuY3Rpb24oZSl7dmFyIHQ7KHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmVnaW5TaGFwZVwiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIuaXNQM0QpPyh0PXRoaXMuX3JlbmRlcmVyKS5iZWdpblNoYXBlLmFwcGx5KHQsYXJndW1lbnRzKTooYT1lPT09bC5QT0lOVFN8fGU9PT1sLkxJTkVTfHxlPT09bC5UUklBTkdMRVN8fGU9PT1sLlRSSUFOR0xFX0ZBTnx8ZT09PWwuVFJJQU5HTEVfU1RSSVB8fGU9PT1sLlFVQURTfHxlPT09bC5RVUFEX1NUUklQP2U6bnVsbCx1PVtdLGM9W10pO3JldHVybiB0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmJlemllclZlcnRleD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3ZhciBuO2lmKHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYmV6aWVyVmVydGV4XCIsdCksdGhpcy5fcmVuZGVyZXIuaXNQM0QpKG49dGhpcy5fcmVuZGVyZXIpLmJlemllclZlcnRleC5hcHBseShuLHQpO2Vsc2UgaWYoMD09PXUubGVuZ3RoKXMuZGVmYXVsdC5fZnJpZW5kbHlFcnJvcihcInZlcnRleCgpIG11c3QgYmUgdXNlZCBvbmNlIGJlZm9yZSBjYWxsaW5nIGJlemllclZlcnRleCgpXCIsXCJiZXppZXJWZXJ0ZXhcIik7ZWxzZXtkPSEwO2Zvcih2YXIgYT1bXSxvPTA7bzx0Lmxlbmd0aDtvKyspYVtvXT10W29dO2EuaXNWZXJ0PSExLG0/Yy5wdXNoKGEpOnUucHVzaChhKX1yZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS5jdXJ2ZVZlcnRleD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3ZhciBuOyhzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImN1cnZlVmVydGV4XCIsdCksdGhpcy5fcmVuZGVyZXIuaXNQM0QpPyhuPXRoaXMuX3JlbmRlcmVyKS5jdXJ2ZVZlcnRleC5hcHBseShuLHQpOihvPSEwLHRoaXMudmVydGV4KHRbMF0sdFsxXSkpO3JldHVybiB0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmVuZENvbnRvdXI9ZnVuY3Rpb24oKXt2YXIgZT1jWzBdLnNsaWNlKCk7ZS5pc1ZlcnQ9Y1swXS5pc1ZlcnQsZS5tb3ZlVG89ITEsYy5wdXNoKGUpLGYmJih1LnB1c2godVswXSksZj0hMSk7Zm9yKHZhciB0PTA7dDxjLmxlbmd0aDt0KyspdS5wdXNoKGNbdF0pO3JldHVybiB0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLmVuZFNoYXBlPWZ1bmN0aW9uKGUpe2lmKHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZW5kU2hhcGVcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLmlzUDNEKXRoaXMuX3JlbmRlcmVyLmVuZFNoYXBlKGUsbyxkLGgsbSxhKTtlbHNle2lmKDA9PT11Lmxlbmd0aClyZXR1cm4gdGhpcztpZighdGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiYhdGhpcy5fcmVuZGVyZXIuX2RvRmlsbClyZXR1cm4gdGhpczt2YXIgdD1lPT09bC5DTE9TRTt0JiYhbSYmdS5wdXNoKHVbMF0pLHRoaXMuX3JlbmRlcmVyLmVuZFNoYXBlKGUsdSxvLGQsaCxtLGEpLGY9IShtPWg9ZD1vPSExKSx0JiZ1LnBvcCgpfXJldHVybiB0aGlzfSxzLmRlZmF1bHQucHJvdG90eXBlLnF1YWRyYXRpY1ZlcnRleD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2lmKHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicXVhZHJhdGljVmVydGV4XCIsdCksdGhpcy5fcmVuZGVyZXIuaXNQM0Qpe3ZhciBuOyhuPXRoaXMuX3JlbmRlcmVyKS5xdWFkcmF0aWNWZXJ0ZXguYXBwbHkobix0KX1lbHNle2lmKHRoaXMuX2NvbnRvdXJJbml0ZWQpe3ZhciBhPXt9O3JldHVybiBhLng9dFswXSxhLnk9dFsxXSxhLngzPXRbMl0sYS55Mz10WzNdLGEudHlwZT1sLlFVQURSQVRJQyx0aGlzLl9jb250b3VyVmVydGljZXMucHVzaChhKSx0aGlzfWlmKDA8dS5sZW5ndGgpe2g9ITA7Zm9yKHZhciBvPVtdLGk9MDtpPHQubGVuZ3RoO2krKylvW2ldPXRbaV07by5pc1ZlcnQ9ITEsbT9jLnB1c2gobyk6dS5wdXNoKG8pfWVsc2Ugcy5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwidmVydGV4KCkgbXVzdCBiZSB1c2VkIG9uY2UgYmVmb3JlIGNhbGxpbmcgcXVhZHJhdGljVmVydGV4KClcIixcInF1YWRyYXRpY1ZlcnRleFwiKX1yZXR1cm4gdGhpc30scy5kZWZhdWx0LnByb3RvdHlwZS52ZXJ0ZXg9ZnVuY3Rpb24oZSx0LHIsbixhKXtpZih0aGlzLl9yZW5kZXJlci5pc1AzRCl7dmFyIG87KG89dGhpcy5fcmVuZGVyZXIpLnZlcnRleC5hcHBseShvLGFyZ3VtZW50cyl9ZWxzZXt2YXIgaT1bXTtpLmlzVmVydD0hMCxpWzBdPWUsaVsxXT10LGlbMl09MCxpWzNdPTAsaVs0XT0wLGlbNV09dGhpcy5fcmVuZGVyZXIuX2dldEZpbGwoKSxpWzZdPXRoaXMuX3JlbmRlcmVyLl9nZXRTdHJva2UoKSxyJiYoaS5tb3ZlVG89ciksbT8oMD09PWMubGVuZ3RoJiYoaS5tb3ZlVG89ITApLGMucHVzaChpKSk6dS5wdXNoKGkpfXJldHVybiB0aGlzfTt2YXIgeT1zLmRlZmF1bHQ7ci5kZWZhdWx0PXl9LHtcIi4uL2NvbnN0YW50c1wiOjIyLFwiLi4vbWFpblwiOjMyfV0sNDM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKGUpe3JldHVybihuPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGUsdCl7d2luZG93LnNldFRpbWVvdXQoZSwxZTMvNjApfSxcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXl8fFVpbnQ4Q2xhbXBlZEFycmF5LnByb3RvdHlwZS5zbGljZXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KFVpbnQ4Q2xhbXBlZEFycmF5LnByb3RvdHlwZSxcInNsaWNlXCIse3ZhbHVlOkFycmF5LnByb3RvdHlwZS5zbGljZSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMX0pLGZ1bmN0aW9uKCl7aWYoIU9iamVjdC5hc3NpZ24pe3ZhciBzPU9iamVjdC5rZXlzLGU9T2JqZWN0LmRlZmluZVByb3BlcnR5LGw9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT09bihTeW1ib2woKSkscj1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLHA9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiByLmNhbGwodCxlKX19O2UoT2JqZWN0LFwiYXNzaWduXCIse3ZhbHVlOmZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwidGFyZ2V0IG11c3QgYmUgYW4gb2JqZWN0XCIpO3ZhciByLG4sYSxvLGk9T2JqZWN0KGUpO2ZvcihyPTE7cjxhcmd1bWVudHMubGVuZ3RoOysrcilmb3Iobj1PYmplY3QoYXJndW1lbnRzW3JdKSxvPXMobiksbCYmT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyYmby5wdXNoLmFwcGx5KG8sT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhuKS5maWx0ZXIocChuKSkpLGE9MDthPG8ubGVuZ3RoOysrYSlpW29bYV1dPW5bb1thXV07cmV0dXJuIGl9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfSl9fSgpfSx7fV0sNDQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2EuZGVmYXVsdC5wcm90b3R5cGUubm9Mb29wPWZ1bmN0aW9uKCl7dGhpcy5fbG9vcD0hMX0sYS5kZWZhdWx0LnByb3RvdHlwZS5sb29wPWZ1bmN0aW9uKCl7dGhpcy5fbG9vcHx8KHRoaXMuX2xvb3A9ITAsdGhpcy5fc2V0dXBEb25lJiZ0aGlzLl9kcmF3KCkpfSxhLmRlZmF1bHQucHJvdG90eXBlLmlzTG9vcGluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb29wfSxhLmRlZmF1bHQucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oKXt0aGlzLl9zdHlsZXMucHVzaCh7cHJvcHM6e19jb2xvck1vZGU6dGhpcy5fY29sb3JNb2RlfSxyZW5kZXJlcjp0aGlzLl9yZW5kZXJlci5wdXNoKCl9KX0sYS5kZWZhdWx0LnByb3RvdHlwZS5wb3A9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9zdHlsZXMucG9wKCk7ZT8odGhpcy5fcmVuZGVyZXIucG9wKGUucmVuZGVyZXIpLE9iamVjdC5hc3NpZ24odGhpcyxlLnByb3BzKSk6Y29uc29sZS53YXJuKFwicG9wKCkgd2FzIGNhbGxlZCB3aXRob3V0IG1hdGNoaW5nIHB1c2goKVwiKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5yZWRyYXc9ZnVuY3Rpb24oZSl7aWYoIXRoaXMuX2luVXNlckRyYXcmJnRoaXMuX3NldHVwRG9uZSl7dmFyIHQ9cGFyc2VJbnQoZSk7KGlzTmFOKHQpfHx0PDEpJiYodD0xKTt2YXIgcj10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcyxuPXIuc2V0dXAsYT1yLmRyYXc7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYSl7dm9pZCAwPT09biYmci5zY2FsZShyLl9waXhlbERlbnNpdHksci5fcGl4ZWxEZW5zaXR5KTtmb3IodmFyIG89ZnVuY3Rpb24oZSl7ZS5jYWxsKHIpfSxpPTA7aTx0O2krKyl7ci5yZXNldE1hdHJpeCgpLHIuX3JlbmRlcmVyLmlzUDNEJiZyLl9yZW5kZXJlci5fdXBkYXRlKCksci5fc2V0UHJvcGVydHkoXCJmcmFtZUNvdW50XCIsci5mcmFtZUNvdW50KzEpLHIuX3JlZ2lzdGVyZWRNZXRob2RzLnByZS5mb3JFYWNoKG8pLHRoaXMuX2luVXNlckRyYXc9ITA7dHJ5e2EoKX1maW5hbGx5e3RoaXMuX2luVXNlckRyYXc9ITF9ci5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdC5mb3JFYWNoKG8pfX19fTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4vbWFpblwiOjMyfV0sNDU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLG89KG49ZShcIi4vbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O28uZGVmYXVsdC5wcm90b3R5cGUuYXBwbHlNYXRyaXg9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe3ZhciBpO3JldHVybihpPXRoaXMuX3JlbmRlcmVyKS5hcHBseU1hdHJpeC5hcHBseShpLGFyZ3VtZW50cyksdGhpc30sby5kZWZhdWx0LnByb3RvdHlwZS5yZXNldE1hdHJpeD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJlci5yZXNldE1hdHJpeCgpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUucm90YXRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicm90YXRlXCIsYXJndW1lbnRzKSx0aGlzLl9yZW5kZXJlci5yb3RhdGUodGhpcy5fdG9SYWRpYW5zKGUpLHQpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUucm90YXRlWD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJyb3RhdGVYXCIpLG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicm90YXRlWFwiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIucm90YXRlWCh0aGlzLl90b1JhZGlhbnMoZSkpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUucm90YXRlWT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJyb3RhdGVZXCIpLG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicm90YXRlWVwiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIucm90YXRlWSh0aGlzLl90b1JhZGlhbnMoZSkpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUucm90YXRlWj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJyb3RhdGVaXCIpLG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicm90YXRlWlwiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIucm90YXRlWih0aGlzLl90b1JhZGlhbnMoZSkpLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUuc2NhbGU9ZnVuY3Rpb24oZSx0LHIpe2lmKG8uZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2NhbGVcIixhcmd1bWVudHMpLGUgaW5zdGFuY2VvZiBvLmRlZmF1bHQuVmVjdG9yKXt2YXIgbj1lO2U9bi54LHQ9bi55LHI9bi56fWVsc2UgaWYoZSBpbnN0YW5jZW9mIEFycmF5KXt2YXIgYT1lO2U9YVswXSx0PWFbMV0scj1hWzJdfHwxfXJldHVybiBpc05hTih0KT90PXI9ZTppc05hTihyKSYmKHI9MSksdGhpcy5fcmVuZGVyZXIuc2NhbGUuY2FsbCh0aGlzLl9yZW5kZXJlcixlLHQsciksdGhpc30sby5kZWZhdWx0LnByb3RvdHlwZS5zaGVhclg9ZnVuY3Rpb24oZSl7by5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzaGVhclhcIixhcmd1bWVudHMpO3ZhciB0PXRoaXMuX3RvUmFkaWFucyhlKTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuYXBwbHlNYXRyaXgoMSwwLE1hdGgudGFuKHQpLDEsMCwwKSx0aGlzfSxvLmRlZmF1bHQucHJvdG90eXBlLnNoZWFyWT1mdW5jdGlvbihlKXtvLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNoZWFyWVwiLGFyZ3VtZW50cyk7dmFyIHQ9dGhpcy5fdG9SYWRpYW5zKGUpO3JldHVybiB0aGlzLl9yZW5kZXJlci5hcHBseU1hdHJpeCgxLE1hdGgudGFuKHQpLDAsMSwwLDApLHRoaXN9LG8uZGVmYXVsdC5wcm90b3R5cGUudHJhbnNsYXRlPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gby5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0cmFuc2xhdGVcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLmlzUDNEP3RoaXMuX3JlbmRlcmVyLnRyYW5zbGF0ZShlLHQscik6dGhpcy5fcmVuZGVyZXIudHJhbnNsYXRlKGUsdCksdGhpc307dmFyIGE9by5kZWZhdWx0O3IuZGVmYXVsdD1hfSx7XCIuL21haW5cIjozMn1dLDQ2OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciB0PTAscj1uZXcgQXJyYXkoZS5sZW5ndGgpO3Q8ZS5sZW5ndGg7dCsrKXJbdF09ZVt0XTtyZXR1cm4gcn19KGUpfHxmdW5jdGlvbihlKXtpZihTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGUpfHxcIltvYmplY3QgQXJndW1lbnRzXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKXJldHVybiBBcnJheS5mcm9tKGUpfShlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIil9KCl9ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9YS5kZWZhdWx0LnByb3RvdHlwZS5zdG9yZUl0ZW09ZnVuY3Rpb24oZSx0KXtcInN0cmluZ1wiIT10eXBlb2YgZSYmY29uc29sZS5sb2coXCJUaGUgYXJndW1lbnQgdGhhdCB5b3UgcGFzc2VkIHRvIHN0b3JlSXRlbSgpIC0gXCIuY29uY2F0KGUsXCIgaXMgbm90IGEgc3RyaW5nLlwiKSksZS5lbmRzV2l0aChcInA1VHlwZUlEXCIpJiZjb25zb2xlLmxvZyhcIlRoZSBhcmd1bWVudCB0aGF0IHlvdSBwYXNzZWQgdG8gc3RvcmVJdGVtKCkgLSBcIi5jb25jYXQoZSxcIiBtdXN0IG5vdCBlbmQgd2l0aCAncDVUeXBlSUQnLlwiKSksdm9pZCAwPT09dCYmY29uc29sZS5sb2coXCJZb3UgY2Fubm90IHN0b3JlIHVuZGVmaW5lZCB2YXJpYWJsZXMgdXNpbmcgc3RvcmVJdGVtKCkuXCIpO3ZhciByPWkodCk7c3dpdGNoKHIpe2Nhc2VcIm51bWJlclwiOmNhc2VcImJvb2xlYW5cIjp0PXQudG9TdHJpbmcoKTticmVhaztjYXNlXCJvYmplY3RcIjppZih0IGluc3RhbmNlb2YgYS5kZWZhdWx0LkNvbG9yKXI9XCJwNS5Db2xvclwiO2Vsc2UgaWYodCBpbnN0YW5jZW9mIGEuZGVmYXVsdC5WZWN0b3Ipe3I9XCJwNS5WZWN0b3JcIix0PVt0LngsdC55LHQuel19dD1KU09OLnN0cmluZ2lmeSh0KX1sb2NhbFN0b3JhZ2Uuc2V0SXRlbShlLHQpO3ZhciBuPVwiXCIuY29uY2F0KGUsXCJwNVR5cGVJRFwiKTtsb2NhbFN0b3JhZ2Uuc2V0SXRlbShuLHIpfSxhLmRlZmF1bHQucHJvdG90eXBlLmdldEl0ZW09ZnVuY3Rpb24oZSl7dmFyIHQ9bG9jYWxTdG9yYWdlLmdldEl0ZW0oZSkscj1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIlwiLmNvbmNhdChlLFwicDVUeXBlSURcIikpO2lmKHZvaWQgMD09PXIpY29uc29sZS5sb2coXCJVbmFibGUgdG8gZGV0ZXJtaW5lIHR5cGUgb2YgaXRlbSBzdG9yZWQgdW5kZXIgXCIuY29uY2F0KGUsXCJpbiBsb2NhbCBzdG9yYWdlLiBEaWQgeW91IHNhdmUgdGhlIGl0ZW0gd2l0aCBzb21ldGhpbmcgb3RoZXIgdGhhbiBzZXRJdGVtKCk/XCIpKTtlbHNlIGlmKG51bGwhPT10KXN3aXRjaChyKXtjYXNlXCJudW1iZXJcIjp0PXBhcnNlSW50KHQpO2JyZWFrO2Nhc2VcImJvb2xlYW5cIjp0PVwidHJ1ZVwiPT09dDticmVhaztjYXNlXCJvYmplY3RcIjp0PUpTT04ucGFyc2UodCk7YnJlYWs7Y2FzZVwicDUuQ29sb3JcIjp0PUpTT04ucGFyc2UodCksdD10aGlzLmNvbG9yLmFwcGx5KHRoaXMsbyh0LmxldmVscykpO2JyZWFrO2Nhc2VcInA1LlZlY3RvclwiOnQ9SlNPTi5wYXJzZSh0KSx0PXRoaXMuY3JlYXRlVmVjdG9yLmFwcGx5KHRoaXMsbyh0KSl9cmV0dXJuIHR9LGEuZGVmYXVsdC5wcm90b3R5cGUuY2xlYXJTdG9yYWdlPWZ1bmN0aW9uKCl7bG9jYWxTdG9yYWdlLmNsZWFyKCl9LGEuZGVmYXVsdC5wcm90b3R5cGUucmVtb3ZlSXRlbT1mdW5jdGlvbihlKXtcInN0cmluZ1wiIT10eXBlb2YgZSYmY29uc29sZS5sb2coXCJUaGUgYXJndW1lbnQgdGhhdCB5b3UgcGFzc2VkIHRvIHJlbW92ZUl0ZW0oKSAtIFwiLmNvbmNhdChlLFwiIGlzIG5vdCBhIHN0cmluZy5cIikpLGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGUpLGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiXCIuY29uY2F0KGUsXCJwNVR5cGVJRFwiKSl9fSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDQ3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTthLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVN0cmluZ0RpY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVTdHJpbmdEaWN0XCIsYXJndW1lbnRzKSxuZXcgYS5kZWZhdWx0LlN0cmluZ0RpY3QoZSx0KX0sYS5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVOdW1iZXJEaWN0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlTnVtYmVyRGljdFwiLGFyZ3VtZW50cyksbmV3IGEuZGVmYXVsdC5OdW1iZXJEaWN0KGUsdCl9LGEuZGVmYXVsdC5UeXBlZERpY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSBpbnN0YW5jZW9mIE9iamVjdD90aGlzLmRhdGE9ZToodGhpcy5kYXRhPXt9LHRoaXMuZGF0YVtlXT10KSx0aGlzfSxhLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5zaXplPWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZGF0YSkubGVuZ3RofSxhLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5oYXNLZXk9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZGF0YS5oYXNPd25Qcm9wZXJ0eShlKX0sYS5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUpe2lmKHRoaXMuZGF0YS5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4gdGhpcy5kYXRhW2VdO2NvbnNvbGUubG9nKFwiXCIuY29uY2F0KGUsXCIgZG9lcyBub3QgZXhpc3QgaW4gdGhpcyBEaWN0aW9uYXJ5XCIpKX0sYS5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCl7dGhpcy5fdmFsaWRhdGUodCk/dGhpcy5kYXRhW2VdPXQ6Y29uc29sZS5sb2coXCJUaG9zZSB2YWx1ZXMgZG9udCB3b3JrIGZvciB0aGlzIGRpY3Rpb25hcnkgdHlwZS5cIil9LGEuZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLl9hZGRPYmo9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0IGluIGUpdGhpcy5zZXQodCxlW3RdKX0sYS5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUuY3JlYXRlPWZ1bmN0aW9uKGUsdCl7ZSBpbnN0YW5jZW9mIE9iamVjdCYmdm9pZCAwPT09dD90aGlzLl9hZGRPYmooZSk6dm9pZCAwIT09ZT90aGlzLnNldChlLHQpOmNvbnNvbGUubG9nKFwiSW4gb3JkZXIgdG8gY3JlYXRlIGEgbmV3IERpY3Rpb25hcnkgZW50cnkgeW91IG11c3QgcGFzcyBhbiBvYmplY3Qgb3IgYSBrZXksIHZhbHVlIHBhaXJcIil9LGEuZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5kYXRhPXt9fSxhLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7aWYoIXRoaXMuZGF0YS5oYXNPd25Qcm9wZXJ0eShlKSl0aHJvdyBuZXcgRXJyb3IoXCJcIi5jb25jYXQoZSxcIiBkb2VzIG5vdCBleGlzdCBpbiB0aGlzIERpY3Rpb25hcnlcIikpO2RlbGV0ZSB0aGlzLmRhdGFbZV19LGEuZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLnByaW50PWZ1bmN0aW9uKCl7Zm9yKHZhciBlIGluIHRoaXMuZGF0YSljb25zb2xlLmxvZyhcImtleTpcIi5jb25jYXQoZSxcIiB2YWx1ZTpcIikuY29uY2F0KHRoaXMuZGF0YVtlXSkpfSxhLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5zYXZlVGFibGU9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJcIjtmb3IodmFyIHIgaW4gdGhpcy5kYXRhKXQrPVwiXCIuY29uY2F0KHIsXCIsXCIpLmNvbmNhdCh0aGlzLmRhdGFbcl0sXCJcXG5cIik7dmFyIG49bmV3IEJsb2IoW3RdLHt0eXBlOlwidGV4dC9jc3ZcIn0pO2EuZGVmYXVsdC5wcm90b3R5cGUuZG93bmxvYWRGaWxlKG4sZXx8XCJteWNzdlwiLFwiY3N2XCIpfSxhLmRlZmF1bHQuVHlwZWREaWN0LnByb3RvdHlwZS5zYXZlSlNPTj1mdW5jdGlvbihlLHQpe2EuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUpTT04odGhpcy5kYXRhLGUsdCl9LGEuZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlLl92YWxpZGF0ZT1mdW5jdGlvbihlKXtyZXR1cm4hMH0sYS5kZWZhdWx0LlN0cmluZ0RpY3Q9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTthLmRlZmF1bHQuVHlwZWREaWN0LmFwcGx5KHRoaXMsdCl9LGEuZGVmYXVsdC5TdHJpbmdEaWN0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGEuZGVmYXVsdC5UeXBlZERpY3QucHJvdG90eXBlKSxhLmRlZmF1bHQuU3RyaW5nRGljdC5wcm90b3R5cGUuX3ZhbGlkYXRlPWZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlfSxhLmRlZmF1bHQuTnVtYmVyRGljdD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2EuZGVmYXVsdC5UeXBlZERpY3QuYXBwbHkodGhpcyx0KX0sYS5kZWZhdWx0Lk51bWJlckRpY3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYS5kZWZhdWx0LlR5cGVkRGljdC5wcm90b3R5cGUpLGEuZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5fdmFsaWRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGV9LGEuZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSx0KXt0aGlzLmRhdGEuaGFzT3duUHJvcGVydHkoZSk/dGhpcy5kYXRhW2VdKz10OmNvbnNvbGUubG9nKFwiVGhlIGtleSAtIFwiLmNvbmNhdChlLFwiIGRvZXMgbm90IGV4aXN0IGluIHRoaXMgZGljdGlvbmFyeS5cIikpfSxhLmRlZmF1bHQuTnVtYmVyRGljdC5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKGUsdCl7dGhpcy5hZGQoZSwtdCl9LGEuZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5tdWx0PWZ1bmN0aW9uKGUsdCl7dGhpcy5kYXRhLmhhc093blByb3BlcnR5KGUpP3RoaXMuZGF0YVtlXSo9dDpjb25zb2xlLmxvZyhcIlRoZSBrZXkgLSBcIi5jb25jYXQoZSxcIiBkb2VzIG5vdCBleGlzdCBpbiB0aGlzIGRpY3Rpb25hcnkuXCIpKX0sYS5kZWZhdWx0Lk51bWJlckRpY3QucHJvdG90eXBlLmRpdj1mdW5jdGlvbihlLHQpe3RoaXMuZGF0YS5oYXNPd25Qcm9wZXJ0eShlKT90aGlzLmRhdGFbZV0vPXQ6Y29uc29sZS5sb2coXCJUaGUga2V5IC0gXCIuY29uY2F0KGUsXCIgZG9lcyBub3QgZXhpc3QgaW4gdGhpcyBkaWN0aW9uYXJ5LlwiKSl9LGEuZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5fdmFsdWVUZXN0PWZ1bmN0aW9uKGUpe2lmKDA9PT1PYmplY3Qua2V5cyh0aGlzLmRhdGEpLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gc2VhcmNoIGZvciBhIG1pbmltdW0gb3IgbWF4aW11bSB2YWx1ZSBvbiBhbiBlbXB0eSBOdW1iZXJEaWN0XCIpO2lmKDE9PT1PYmplY3Qua2V5cyh0aGlzLmRhdGEpLmxlbmd0aClyZXR1cm4gdGhpcy5kYXRhW09iamVjdC5rZXlzKHRoaXMuZGF0YSlbMF1dO3ZhciB0PXRoaXMuZGF0YVtPYmplY3Qua2V5cyh0aGlzLmRhdGEpWzBdXTtmb3IodmFyIHIgaW4gdGhpcy5kYXRhKXRoaXMuZGF0YVtyXSplPHQqZSYmKHQ9dGhpcy5kYXRhW3JdKTtyZXR1cm4gdH0sYS5kZWZhdWx0Lk51bWJlckRpY3QucHJvdG90eXBlLm1pblZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZhbHVlVGVzdCgxKX0sYS5kZWZhdWx0Lk51bWJlckRpY3QucHJvdG90eXBlLm1heFZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZhbHVlVGVzdCgtMSl9LGEuZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5fa2V5VGVzdD1mdW5jdGlvbihlKXtpZigwPT09T2JqZWN0LmtleXModGhpcy5kYXRhKS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIHVzZSBtaW5WYWx1ZSBvbiBhbiBlbXB0eSBOdW1iZXJEaWN0XCIpO2lmKDE9PT1PYmplY3Qua2V5cyh0aGlzLmRhdGEpLmxlbmd0aClyZXR1cm4gT2JqZWN0LmtleXModGhpcy5kYXRhKVswXTtmb3IodmFyIHQ9T2JqZWN0LmtleXModGhpcy5kYXRhKVswXSxyPTE7cjxPYmplY3Qua2V5cyh0aGlzLmRhdGEpLmxlbmd0aDtyKyspT2JqZWN0LmtleXModGhpcy5kYXRhKVtyXSplPHQqZSYmKHQ9T2JqZWN0LmtleXModGhpcy5kYXRhKVtyXSk7cmV0dXJuIHR9LGEuZGVmYXVsdC5OdW1iZXJEaWN0LnByb3RvdHlwZS5taW5LZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa2V5VGVzdCgxKX0sYS5kZWZhdWx0Lk51bWJlckRpY3QucHJvdG90eXBlLm1heEtleT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9rZXlUZXN0KC0xKX07dmFyIG89YS5kZWZhdWx0LlR5cGVkRGljdDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MzJ9XSw0ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sZD0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gaChlKXtyZXR1cm4oaD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24gZihlLHQscil7KHQuX3VzZXJOb2RlP3QuX3VzZXJOb2RlOmRvY3VtZW50LmJvZHkpLmFwcGVuZENoaWxkKGUpO3ZhciBuPXI/bmV3IGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQoZSx0KTpuZXcgZC5kZWZhdWx0LkVsZW1lbnQoZSx0KTtyZXR1cm4gdC5fZWxlbWVudHMucHVzaChuKSxufWZ1bmN0aW9uIGEoZSx0LHIsbil7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KTtcInN0cmluZ1wiPT10eXBlb2Yocj1yfHxcIlwiKSYmKHI9W3JdKTt2YXIgbz0hMCxpPSExLHM9dm9pZCAwO3RyeXtmb3IodmFyIGwscD1yW1N5bWJvbC5pdGVyYXRvcl0oKTshKG89KGw9cC5uZXh0KCkpLmRvbmUpO289ITApe3ZhciB1PWwudmFsdWUsYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic291cmNlXCIpO2Muc2V0QXR0cmlidXRlKFwic3JjXCIsdSksYS5hcHBlbmRDaGlsZChjKX19Y2F0Y2goZSl7aT0hMCxzPWV9ZmluYWxseXt0cnl7b3x8bnVsbD09cC5yZXR1cm58fHAucmV0dXJuKCl9ZmluYWxseXtpZihpKXRocm93IHN9fWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4pe2EuYWRkRXZlbnRMaXN0ZW5lcihcImNhbnBsYXl0aHJvdWdoXCIsZnVuY3Rpb24gZSgpe24oKSxhLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjYW5wbGF5dGhyb3VnaFwiLGUpfSl9dmFyIGQ9ZihhLGUsITApO3JldHVybiBkLmxvYWRlZG1ldGFkYXRhPSExLGEuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRlZG1ldGFkYXRhXCIsZnVuY3Rpb24oKXtkLndpZHRoPWEudmlkZW9XaWR0aCxkLmhlaWdodD1hLnZpZGVvSGVpZ2h0LDA9PT1kLmVsdC53aWR0aCYmKGQuZWx0LndpZHRoPWEudmlkZW9XaWR0aCksMD09PWQuZWx0LmhlaWdodCYmKGQuZWx0LmhlaWdodD1hLnZpZGVvSGVpZ2h0KSxkLnByZXNldFBsYXliYWNrUmF0ZSYmKGQuZWx0LnBsYXliYWNrUmF0ZT1kLnByZXNldFBsYXliYWNrUmF0ZSxkZWxldGUgZC5wcmVzZXRQbGF5YmFja1JhdGUpLGQubG9hZGVkbWV0YWRhdGE9ITB9KSxkfWQuZGVmYXVsdC5wcm90b3R5cGUuc2VsZWN0PWZ1bmN0aW9uKGUsdCl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzZWxlY3RcIixhcmd1bWVudHMpO3ZhciByPXRoaXMuX2dldENvbnRhaW5lcih0KS5xdWVyeVNlbGVjdG9yKGUpO3JldHVybiByP3RoaXMuX3dyYXBFbGVtZW50KHIpOm51bGx9LGQuZGVmYXVsdC5wcm90b3R5cGUuc2VsZWN0QWxsPWZ1bmN0aW9uKGUsdCl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzZWxlY3RBbGxcIixhcmd1bWVudHMpO3ZhciByPVtdLG49dGhpcy5fZ2V0Q29udGFpbmVyKHQpLnF1ZXJ5U2VsZWN0b3JBbGwoZSk7aWYobilmb3IodmFyIGE9MDthPG4ubGVuZ3RoO2ErKyl7dmFyIG89dGhpcy5fd3JhcEVsZW1lbnQoblthXSk7ci5wdXNoKG8pfXJldHVybiByfSxkLmRlZmF1bHQucHJvdG90eXBlLl9nZXRDb250YWluZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9ZG9jdW1lbnQ7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/dD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpfHxkb2N1bWVudDplIGluc3RhbmNlb2YgZC5kZWZhdWx0LkVsZW1lbnQ/dD1lLmVsdDplIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQmJih0PWUpLHR9LGQuZGVmYXVsdC5wcm90b3R5cGUuX3dyYXBFbGVtZW50PWZ1bmN0aW9uKGUpe3ZhciB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUuY2hpbGRyZW4pO2lmKFwiSU5QVVRcIiE9PWUudGFnTmFtZXx8XCJjaGVja2JveFwiIT09ZS50eXBlKXJldHVyblwiVklERU9cIj09PWUudGFnTmFtZXx8XCJBVURJT1wiPT09ZS50YWdOYW1lP25ldyBkLmRlZmF1bHQuTWVkaWFFbGVtZW50KGUsdGhpcyk6XCJTRUxFQ1RcIj09PWUudGFnTmFtZT90aGlzLmNyZWF0ZVNlbGVjdChuZXcgZC5kZWZhdWx0LkVsZW1lbnQoZSx0aGlzKSk6MDx0Lmxlbmd0aCYmdC5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm5cIklOUFVUXCI9PT1lLnRhZ05hbWV8fFwiTEFCRUxcIj09PWUudGFnTmFtZX0pP3RoaXMuY3JlYXRlUmFkaW8obmV3IGQuZGVmYXVsdC5FbGVtZW50KGUsdGhpcykpOm5ldyBkLmRlZmF1bHQuRWxlbWVudChlLHRoaXMpO3ZhciByPW5ldyBkLmRlZmF1bHQuRWxlbWVudChlLHRoaXMpO3JldHVybiByLmNoZWNrZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lbHQuY2hlY2tlZDoodGhpcy5lbHQuY2hlY2tlZD0hIWFyZ3VtZW50c1swXSx0aGlzKX0scn0sZC5kZWZhdWx0LnByb3RvdHlwZS5yZW1vdmVFbGVtZW50cz1mdW5jdGlvbihlKXtkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInJlbW92ZUVsZW1lbnRzXCIsYXJndW1lbnRzKTt0aGlzLl9lbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIShlLmVsdCBpbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50KX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5yZW1vdmUoKX0pfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuY2hhbmdlZD1mdW5jdGlvbihlKXtyZXR1cm4gZC5kZWZhdWx0LkVsZW1lbnQuX2FkanVzdExpc3RlbmVyKFwiY2hhbmdlXCIsZSx0aGlzKSx0aGlzfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuaW5wdXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGQuZGVmYXVsdC5FbGVtZW50Ll9hZGp1c3RMaXN0ZW5lcihcImlucHV0XCIsZSx0aGlzKSx0aGlzfSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZURpdj1mdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcIlwiLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtyZXR1cm4gdC5pbm5lckhUTUw9ZSxmKHQsdGhpcyl9LGQuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlUD1mdW5jdGlvbigpe3ZhciBlPTA8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcIlwiLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7cmV0dXJuIHQuaW5uZXJIVE1MPWUsZih0LHRoaXMpfSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVNwYW49ZnVuY3Rpb24oKXt2YXIgZT0wPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCJcIix0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO3JldHVybiB0LmlubmVySFRNTD1lLGYodCx0aGlzKX0sZC5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVJbWc9ZnVuY3Rpb24oKXtkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUltZ1wiLGFyZ3VtZW50cyk7dmFyIHQscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpLG49YXJndW1lbnRzO3JldHVybiAxPG4ubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgblsxXSYmKHIuYWx0PW5bMV0pLDI8bi5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBuWzJdJiYoci5jcm9zc09yaWdpbj1uWzJdKSxyLnNyYz1uWzBdLHQ9ZihyLHRoaXMpLHIuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbigpe3Qud2lkdGg9ci5vZmZzZXRXaWR0aHx8ci53aWR0aCx0LmhlaWdodD1yLm9mZnNldEhlaWdodHx8ci5oZWlnaHQ7dmFyIGU9bltuLmxlbmd0aC0xXTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiZlKHQpfSksdH0sZC5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVBPWZ1bmN0aW9uKGUsdCxyKXtkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNyZWF0ZUFcIixhcmd1bWVudHMpO3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO3JldHVybiBuLmhyZWY9ZSxuLmlubmVySFRNTD10LHImJihuLnRhcmdldD1yKSxmKG4sdGhpcyl9LGQuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlU2xpZGVyPWZ1bmN0aW9uKGUsdCxyLG4pe2QuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlU2xpZGVyXCIsYXJndW1lbnRzKTt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7cmV0dXJuIGEudHlwZT1cInJhbmdlXCIsYS5taW49ZSxhLm1heD10LDA9PT1uP2Euc3RlcD0xZS0xODpuJiYoYS5zdGVwPW4pLFwibnVtYmVyXCI9PXR5cGVvZiByJiYoYS52YWx1ZT1yKSxmKGEsdGhpcyl9LGQuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlQnV0dG9uPWZ1bmN0aW9uKGUsdCl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVCdXR0b25cIixhcmd1bWVudHMpO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7cmV0dXJuIHIuaW5uZXJIVE1MPWUsdCYmKHIudmFsdWU9dCksZihyLHRoaXMpfSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUNoZWNrYm94PWZ1bmN0aW9uKCl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVDaGVja2JveFwiLGFyZ3VtZW50cyk7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSx0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTt0LnR5cGU9XCJjaGVja2JveFwiLGUuYXBwZW5kQ2hpbGQodCk7dmFyIHI9ZihlLHRoaXMpO2lmKHIuY2hlY2tlZD1mdW5jdGlvbigpe3ZhciBlPXIuZWx0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07aWYoZSl7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGUuY2hlY2tlZDtlLmNoZWNrZWQ9ISFhcmd1bWVudHNbMF19cmV0dXJuIHJ9LHRoaXMudmFsdWU9ZnVuY3Rpb24oZSl7cmV0dXJuIHIudmFsdWU9ZSx0aGlzfSxhcmd1bWVudHNbMF0pe3ZhciBuPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO3Quc2V0QXR0cmlidXRlKFwiaWRcIixuKSxhLmh0bWxGb3I9bixyLnZhbHVlKGFyZ3VtZW50c1swXSksYS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhcmd1bWVudHNbMF0pKSxlLmFwcGVuZENoaWxkKGEpfXJldHVybiBhcmd1bWVudHNbMV0mJih0LmNoZWNrZWQ9ITApLHJ9LGQuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlU2VsZWN0PWZ1bmN0aW9uKCl7dmFyIGU7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVTZWxlY3RcIixhcmd1bWVudHMpO3ZhciB0PWFyZ3VtZW50c1swXTtpZih0IGluc3RhbmNlb2YgZC5kZWZhdWx0LkVsZW1lbnQmJnQuZWx0IGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpZT10LHRoaXMuZWx0PXQuZWx0O2Vsc2UgaWYodCBpbnN0YW5jZW9mIEhUTUxTZWxlY3RFbGVtZW50KWU9Zih0LHRoaXMpLHRoaXMuZWx0PXQ7ZWxzZXt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO3QmJlwiYm9vbGVhblwiPT10eXBlb2YgdCYmci5zZXRBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiLFwidHJ1ZVwiKSxlPWYocix0aGlzKSx0aGlzLmVsdD1yfXJldHVybiBlLm9wdGlvbj1mdW5jdGlvbihlLHQpe3ZhciByO2lmKHZvaWQgMCE9PWUpe2Zvcih2YXIgbj0wO248dGhpcy5lbHQubGVuZ3RoO24rPTEpaWYodGhpcy5lbHRbbl0uaW5uZXJIVE1MPT09ZSl7cj1uO2JyZWFrfWlmKHZvaWQgMCE9PXIpITE9PT10P3RoaXMuZWx0LnJlbW92ZShyKTp0aGlzLmVsdFtyXS52YWx1ZT10O2Vsc2V7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTthLmlubmVySFRNTD1lLGEudmFsdWU9dm9pZCAwPT09dD9lOnQsdGhpcy5lbHQuYXBwZW5kQ2hpbGQoYSksdGhpcy5fcEluc3QuX2VsZW1lbnRzLnB1c2goYSl9fX0sZS5zZWxlY3RlZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPT1lKXtmb3IodmFyIHQ9MDt0PHRoaXMuZWx0Lmxlbmd0aDt0Kz0xKXRoaXMuZWx0W3RdLnZhbHVlLnRvU3RyaW5nKCk9PT1lLnRvU3RyaW5nKCkmJih0aGlzLmVsdC5zZWxlY3RlZEluZGV4PXQpO3JldHVybiB0aGlzfWlmKHRoaXMuZWx0LmdldEF0dHJpYnV0ZShcIm11bHRpcGxlXCIpKXt2YXIgcj1bXSxuPSEwLGE9ITEsbz12b2lkIDA7dHJ5e2Zvcih2YXIgaSxzPXRoaXMuZWx0LnNlbGVjdGVkT3B0aW9uc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShpPXMubmV4dCgpKS5kb25lKTtuPSEwKXt2YXIgbD1pLnZhbHVlO3IucHVzaChsLnZhbHVlKX19Y2F0Y2goZSl7YT0hMCxvPWV9ZmluYWxseXt0cnl7bnx8bnVsbD09cy5yZXR1cm58fHMucmV0dXJuKCl9ZmluYWxseXtpZihhKXRocm93IG99fXJldHVybiByfXJldHVybiB0aGlzLmVsdC52YWx1ZX0sZS5kaXNhYmxlPWZ1bmN0aW9uKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKWZvcih2YXIgdD0wO3Q8dGhpcy5lbHQubGVuZ3RoO3QrKyl0aGlzLmVsdFt0XS52YWx1ZS50b1N0cmluZygpPT09ZSYmKHRoaXMuZWx0W3RdLmRpc2FibGVkPSEwLHRoaXMuZWx0W3RdLnNlbGVjdGVkPSExKTtlbHNlIHRoaXMuZWx0LmRpc2FibGVkPSEwO3JldHVybiB0aGlzfSxlfSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVJhZGlvPWZ1bmN0aW9uKCl7dmFyIGUsdCxyPWFyZ3VtZW50c1swXTtyIGluc3RhbmNlb2YgSFRNTERpdkVsZW1lbnR8fHIgaW5zdGFuY2VvZiBIVE1MU3BhbkVsZW1lbnQ/KGU9cixcInN0cmluZ1wiPT10eXBlb2YgYXJndW1lbnRzWzFdJiYodD1hcmd1bWVudHNbMV0pKTooXCJzdHJpbmdcIj09dHlwZW9mIHImJih0PXIpLGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7dmFyIG09Zih0aGlzLmVsdD1lLHRoaXMpO20uX25hbWU9dHx8XCJyYWRpb09wdGlvblwiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50JiZcInJhZGlvXCI9PT1lLnR5cGV9ZnVuY3Rpb24gdShlKXtyZXR1cm4gZS5uZXh0RWxlbWVudFNpYmxpbmcgaW5zdGFuY2VvZiBIVE1MTGFiZWxFbGVtZW50fXJldHVybiBtLl9nZXRPcHRpb25zQXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmVsdC5jaGlsZHJlbikuZmlsdGVyKG4pfSxtLm9wdGlvbj1mdW5jdGlvbihlLHQpe3ZhciByLG4sYT0hMCxvPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIHMsbD1tLl9nZXRPcHRpb25zQXJyYXkoKVtTeW1ib2wuaXRlcmF0b3JdKCk7IShhPShzPWwubmV4dCgpKS5kb25lKTthPSEwKXt2YXIgcD1zLnZhbHVlO2lmKHAudmFsdWU9PT1lKXtyPXA7YnJlYWt9fX1jYXRjaChlKXtvPSEwLGk9ZX1maW5hbGx5e3RyeXthfHxudWxsPT1sLnJldHVybnx8bC5yZXR1cm4oKX1maW5hbGx5e2lmKG8pdGhyb3cgaX19cmV0dXJuIHZvaWQgMD09PXImJigocj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIikpLnNldEF0dHJpYnV0ZShcInR5cGVcIixcInJhZGlvXCIpLHIuc2V0QXR0cmlidXRlKFwidmFsdWVcIixlKSx0aGlzLmVsdC5hcHBlbmRDaGlsZChyKSksdShyKT9uPXIubmV4dEVsZW1lbnRTaWJsaW5nOihuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKSxyLmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyZW5kXCIsbikpLG4uaW5uZXJIVE1MPXZvaWQgMD09PXQ/ZTp0LHIuc2V0QXR0cmlidXRlKFwibmFtZVwiLG0uX25hbWUpLHJ9LG0ucmVtb3ZlPWZ1bmN0aW9uKGUpe3ZhciB0PSEwLHI9ITEsbj12b2lkIDA7dHJ5e2Zvcih2YXIgYSxvPW0uX2dldE9wdGlvbnNBcnJheSgpW1N5bWJvbC5pdGVyYXRvcl0oKTshKHQ9KGE9by5uZXh0KCkpLmRvbmUpO3Q9ITApe3ZhciBpPWEudmFsdWU7aWYoaS52YWx1ZT09PWUpcmV0dXJuIHUoaSkmJmkubmV4dEVsZW1lbnRTaWJsaW5nLnJlbW92ZSgpLHZvaWQgaS5yZW1vdmUoKX19Y2F0Y2goZSl7cj0hMCxuPWV9ZmluYWxseXt0cnl7dHx8bnVsbD09by5yZXR1cm58fG8ucmV0dXJuKCl9ZmluYWxseXtpZihyKXRocm93IG59fX0sbS52YWx1ZT1mdW5jdGlvbigpe3ZhciBlPVwiXCIsdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIGEsbz1tLl9nZXRPcHRpb25zQXJyYXkoKVtTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShhPW8ubmV4dCgpKS5kb25lKTt0PSEwKXt2YXIgaT1hLnZhbHVlO2lmKGkuY2hlY2tlZCl7ZT1pLnZhbHVlO2JyZWFrfX19Y2F0Y2goZSl7cj0hMCxuPWV9ZmluYWxseXt0cnl7dHx8bnVsbD09by5yZXR1cm58fG8ucmV0dXJuKCl9ZmluYWxseXtpZihyKXRocm93IG59fXJldHVybiBlfSxtLnNlbGVjdGVkPWZ1bmN0aW9uKGUpe3ZhciB0PW51bGw7aWYodm9pZCAwPT09ZSl7dmFyIHI9ITAsbj0hMSxhPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9bS5fZ2V0T3B0aW9uc0FycmF5KClbU3ltYm9sLml0ZXJhdG9yXSgpOyEocj0obz1pLm5leHQoKSkuZG9uZSk7cj0hMCl7dmFyIHM9by52YWx1ZTtpZihzLmNoZWNrZWQpe3Q9czticmVha319fWNhdGNoKGUpe249ITAsYT1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBhfX19ZWxzZXt2YXIgbD0hMCxwPSExLHU9dm9pZCAwO3RyeXtmb3IodmFyIGMsZD1tLl9nZXRPcHRpb25zQXJyYXkoKVtTeW1ib2wuaXRlcmF0b3JdKCk7IShsPShjPWQubmV4dCgpKS5kb25lKTtsPSEwKXt2YXIgaD1jLnZhbHVlO2gudmFsdWU9PT1lJiYoaC5zZXRBdHRyaWJ1dGUoXCJjaGVja2VkXCIsITApLHQ9aCl9fWNhdGNoKGUpe3A9ITAsdT1lfWZpbmFsbHl7dHJ5e2x8fG51bGw9PWQucmV0dXJufHxkLnJldHVybigpfWZpbmFsbHl7aWYocCl0aHJvdyB1fX19cmV0dXJuIHR9LG0uZGlzYWJsZT1mdW5jdGlvbigpe3ZhciBlPSEoMDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0pfHxhcmd1bWVudHNbMF0sdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIGEsbz1tLl9nZXRPcHRpb25zQXJyYXkoKVtTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShhPW8ubmV4dCgpKS5kb25lKTt0PSEwKXthLnZhbHVlLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsZSl9fWNhdGNoKGUpe3I9ITAsbj1lfWZpbmFsbHl7dHJ5e3R8fG51bGw9PW8ucmV0dXJufHxvLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBufX19LG19LGQuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlQ29sb3JQaWNrZXI9ZnVuY3Rpb24oZSl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVDb2xvclBpY2tlclwiLGFyZ3VtZW50cyk7dmFyIHQscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7cmV0dXJuIHIudHlwZT1cImNvbG9yXCIsZT9lIGluc3RhbmNlb2YgZC5kZWZhdWx0LkNvbG9yP3IudmFsdWU9ZS50b1N0cmluZyhcIiNycmdnYmJcIik6KGQuZGVmYXVsdC5wcm90b3R5cGUuX2NvbG9yTW9kZT1cInJnYlwiLGQuZGVmYXVsdC5wcm90b3R5cGUuX2NvbG9yTWF4ZXM9e3JnYjpbMjU1LDI1NSwyNTUsMjU1XSxoc2I6WzM2MCwxMDAsMTAwLDFdLGhzbDpbMzYwLDEwMCwxMDAsMV19LHIudmFsdWU9ZC5kZWZhdWx0LnByb3RvdHlwZS5jb2xvcihlKS50b1N0cmluZyhcIiNycmdnYmJcIikpOnIudmFsdWU9XCIjMDAwMDAwXCIsKHQ9ZihyLHRoaXMpKS5jb2xvcj1mdW5jdGlvbigpe3JldHVybiBlJiYoZS5tb2RlJiYoZC5kZWZhdWx0LnByb3RvdHlwZS5fY29sb3JNb2RlPWUubW9kZSksZS5tYXhlcyYmKGQuZGVmYXVsdC5wcm90b3R5cGUuX2NvbG9yTWF4ZXM9ZS5tYXhlcykpLGQuZGVmYXVsdC5wcm90b3R5cGUuY29sb3IodGhpcy5lbHQudmFsdWUpfSx0fSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUlucHV0PWZ1bmN0aW9uKCl7dmFyIGU9MDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOlwiXCIsdD0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06XCJ0ZXh0XCI7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVJbnB1dFwiLGFyZ3VtZW50cyk7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO3JldHVybiByLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsZSksci5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsdCksZihyLHRoaXMpfSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUZpbGVJbnB1dD1mdW5jdGlvbihzKXt2YXIgZT0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdO2QuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlRmlsZUlucHV0XCIsYXJndW1lbnRzKTtpZih3aW5kb3cuRmlsZSYmd2luZG93LkZpbGVSZWFkZXImJndpbmRvdy5GaWxlTGlzdCYmd2luZG93LkJsb2Ipe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtyZXR1cm4gdC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsXCJmaWxlXCIpLGUmJnQuc2V0QXR0cmlidXRlKFwibXVsdGlwbGVcIiwhMCksdC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZnVuY3Rpb24oZSl7dmFyIHQ9ITAscj0hMSxuPXZvaWQgMDt0cnl7Zm9yKHZhciBhLG89ZS50YXJnZXQuZmlsZXNbU3ltYm9sLml0ZXJhdG9yXSgpOyEodD0oYT1vLm5leHQoKSkuZG9uZSk7dD0hMCl7dmFyIGk9YS52YWx1ZTtkLmRlZmF1bHQuRmlsZS5fbG9hZChpLHMpfX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1vLnJldHVybnx8by5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19fSwhMSksZih0LHRoaXMpfWNvbnNvbGUubG9nKFwiVGhlIEZpbGUgQVBJcyBhcmUgbm90IGZ1bGx5IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXIuIENhbm5vdCBjcmVhdGUgZWxlbWVudC5cIil9LGQuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlVmlkZW89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVWaWRlb1wiLGFyZ3VtZW50cyksYSh0aGlzLFwidmlkZW9cIixlLHQpfSxkLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZUF1ZGlvPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3JlYXRlQXVkaW9cIixhcmd1bWVudHMpLGEodGhpcyxcImF1ZGlvXCIsZSx0KX0sZC5kZWZhdWx0LnByb3RvdHlwZS5WSURFTz1cInZpZGVvXCIsZC5kZWZhdWx0LnByb3RvdHlwZS5BVURJTz1cImF1ZGlvXCIsdm9pZCAwPT09bmF2aWdhdG9yLm1lZGlhRGV2aWNlcyYmKG5hdmlnYXRvci5tZWRpYURldmljZXM9e30pLHZvaWQgMD09PW5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhJiYobmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWE9ZnVuY3Rpb24ocil7dmFyIG49bmF2aWdhdG9yLndlYmtpdEdldFVzZXJNZWRpYXx8bmF2aWdhdG9yLm1vekdldFVzZXJNZWRpYTtyZXR1cm4gbj9uZXcgUHJvbWlzZShmdW5jdGlvbihlLHQpe24uY2FsbChuYXZpZ2F0b3IscixlLHQpfSk6UHJvbWlzZS5yZWplY3QobmV3IEVycm9yKFwiZ2V0VXNlck1lZGlhIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGJyb3dzZXJcIikpfSksZC5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVDYXB0dXJlPWZ1bmN0aW9uKCl7aWYoZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVDYXB0dXJlXCIsYXJndW1lbnRzKSwhbmF2aWdhdG9yLm1lZGlhRGV2aWNlc3x8IW5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKXRocm93IG5ldyBET01FeGNlcHRpb24oXCJnZXRVc2VyTWVkaWEgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7dmFyIGUsdCxyPSEwLG49ITAsYT0hMCxvPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIHMsbD1hcmd1bWVudHNbU3ltYm9sLml0ZXJhdG9yXSgpOyEoYT0ocz1sLm5leHQoKSkuZG9uZSk7YT0hMCl7dmFyIHA9cy52YWx1ZTtwPT09ZC5kZWZhdWx0LnByb3RvdHlwZS5WSURFTz9uPSExOnA9PT1kLmRlZmF1bHQucHJvdG90eXBlLkFVRElPP3I9ITE6XCJvYmplY3RcIj09PWgocCk/ZT1wOlwiZnVuY3Rpb25cIj09dHlwZW9mIHAmJih0PXApfX1jYXRjaChlKXtvPSEwLGk9ZX1maW5hbGx5e3RyeXthfHxudWxsPT1sLnJldHVybnx8bC5yZXR1cm4oKX1maW5hbGx5e2lmKG8pdGhyb3cgaX19ZT1lfHx7dmlkZW86cixhdWRpbzpufTt2YXIgdT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidmlkZW9cIik7dS5zZXRBdHRyaWJ1dGUoXCJwbGF5c2lubGluZVwiLFwiXCIpLG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGUpLnRoZW4oZnVuY3Rpb24odCl7dHJ5e1wic3JjT2JqZWN0XCJpbiB1P3Uuc3JjT2JqZWN0PXQ6dS5zcmM9d2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwodCl9Y2F0Y2goZSl7dS5zcmM9dH19LGNvbnNvbGUubG9nKTt2YXIgYz1mKHUsdGhpcywhMCk7cmV0dXJuIGMubG9hZGVkbWV0YWRhdGE9ITEsdS5hZGRFdmVudExpc3RlbmVyKFwibG9hZGVkbWV0YWRhdGFcIixmdW5jdGlvbigpe3UucGxheSgpLHUud2lkdGg/KGMud2lkdGg9dS53aWR0aCxjLmhlaWdodD11LmhlaWdodCk6KGMud2lkdGg9Yy5lbHQud2lkdGg9dS52aWRlb1dpZHRoLGMuaGVpZ2h0PWMuZWx0LmhlaWdodD11LnZpZGVvSGVpZ2h0KSxjLmxvYWRlZG1ldGFkYXRhPSEwLHQmJnQodS5zcmNPYmplY3QpfSksY30sZC5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50PWZ1bmN0aW9uKGUsdCl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVFbGVtZW50XCIsYXJndW1lbnRzKTt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KGUpO3JldHVybiB2b2lkIDAhPT10JiYoci5pbm5lckhUTUw9dCksZihyLHRoaXMpfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuYWRkQ2xhc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWx0LmNsYXNzTmFtZT90aGlzLmhhc0NsYXNzKGUpfHwodGhpcy5lbHQuY2xhc3NOYW1lPXRoaXMuZWx0LmNsYXNzTmFtZStcIiBcIitlKTp0aGlzLmVsdC5jbGFzc05hbWU9ZSx0aGlzfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQ2xhc3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWx0LmNsYXNzTGlzdC5yZW1vdmUoZSksdGhpc30sZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmhhc0NsYXNzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVsdC5jbGFzc0xpc3QuY29udGFpbnMoZSl9LGQuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS50b2dnbGVDbGFzcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lbHQuY2xhc3NMaXN0LmNvbnRhaW5zKGUpP3RoaXMuZWx0LmNsYXNzTGlzdC5yZW1vdmUoZSk6dGhpcy5lbHQuY2xhc3NMaXN0LmFkZChlKSx0aGlzfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuY2hpbGQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/dGhpcy5lbHQuY2hpbGROb2RlczooXCJzdHJpbmdcIj09dHlwZW9mIGU/KFwiI1wiPT09ZVswXSYmKGU9ZS5zdWJzdHJpbmcoMSkpLGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSkpOmUgaW5zdGFuY2VvZiBkLmRlZmF1bHQuRWxlbWVudCYmKGU9ZS5lbHQpLGUgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCYmdGhpcy5lbHQuYXBwZW5kQ2hpbGQoZSksdGhpcyl9LGQuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5jZW50ZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5lbHQuc3R5bGUuZGlzcGxheSxyPVwibm9uZVwiPT09dGhpcy5lbHQuc3R5bGUuZGlzcGxheSxuPVwibm9uZVwiPT09dGhpcy5wYXJlbnQoKS5zdHlsZS5kaXNwbGF5LGE9e3g6dGhpcy5lbHQub2Zmc2V0TGVmdCx5OnRoaXMuZWx0Lm9mZnNldFRvcH07ciYmdGhpcy5zaG93KCksbiYmdGhpcy5wYXJlbnQoKS5zaG93KCksdGhpcy5lbHQuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdGhpcy5wb3NpdGlvbigwLDApO3ZhciBvPU1hdGguYWJzKHRoaXMucGFyZW50KCkub2Zmc2V0V2lkdGgtdGhpcy5lbHQub2Zmc2V0V2lkdGgpLGk9TWF0aC5hYnModGhpcy5wYXJlbnQoKS5vZmZzZXRIZWlnaHQtdGhpcy5lbHQub2Zmc2V0SGVpZ2h0KTtyZXR1cm5cImJvdGhcIj09PWV8fHZvaWQgMD09PWU/dGhpcy5wb3NpdGlvbihvLzIrdGhpcy5wYXJlbnQoKS5vZmZzZXRMZWZ0LGkvMit0aGlzLnBhcmVudCgpLm9mZnNldFRvcCk6XCJob3Jpem9udGFsXCI9PT1lP3RoaXMucG9zaXRpb24oby8yK3RoaXMucGFyZW50KCkub2Zmc2V0TGVmdCxhLnkpOlwidmVydGljYWxcIj09PWUmJnRoaXMucG9zaXRpb24oYS54LGkvMit0aGlzLnBhcmVudCgpLm9mZnNldFRvcCksdGhpcy5zdHlsZShcImRpc3BsYXlcIix0KSxyJiZ0aGlzLmhpZGUoKSxuJiZ0aGlzLnBhcmVudCgpLmhpZGUoKSx0aGlzfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuaHRtbD1mdW5jdGlvbigpe3JldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLmVsdC5pbm5lckhUTUw6KGFyZ3VtZW50c1sxXT90aGlzLmVsdC5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIixhcmd1bWVudHNbMF0pOnRoaXMuZWx0LmlubmVySFRNTD1hcmd1bWVudHNbMF0sdGhpcyl9LGQuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5wb3NpdGlvbj1mdW5jdGlvbigpe2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybnt4OnRoaXMuZWx0Lm9mZnNldExlZnQseTp0aGlzLmVsdC5vZmZzZXRUb3B9O3ZhciBlPVwiYWJzb2x1dGVcIjtyZXR1cm5cInN0YXRpY1wiIT09YXJndW1lbnRzWzJdJiZcImZpeGVkXCIhPT1hcmd1bWVudHNbMl0mJlwicmVsYXRpdmVcIiE9PWFyZ3VtZW50c1syXSYmXCJzdGlja3lcIiE9PWFyZ3VtZW50c1syXSYmXCJpbml0aWFsXCIhPT1hcmd1bWVudHNbMl0mJlwiaW5oZXJpdFwiIT09YXJndW1lbnRzWzJdfHwoZT1hcmd1bWVudHNbMl0pLHRoaXMuZWx0LnN0eWxlLnBvc2l0aW9uPWUsdGhpcy5lbHQuc3R5bGUubGVmdD1hcmd1bWVudHNbMF0rXCJweFwiLHRoaXMuZWx0LnN0eWxlLnRvcD1hcmd1bWVudHNbMV0rXCJweFwiLHRoaXMueD1hcmd1bWVudHNbMF0sdGhpcy55PWFyZ3VtZW50c1sxXSx0aGlzfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuX3RyYW5zbGF0ZT1mdW5jdGlvbigpe3RoaXMuZWx0LnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIjt2YXIgZT1cIlwiO3JldHVybiB0aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm0mJihlPShlPXRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybS5yZXBsYWNlKC90cmFuc2xhdGUzZFxcKC4qXFwpL2csXCJcIikpLnJlcGxhY2UoL3RyYW5zbGF0ZVtYLVpdP1xcKC4qXFwpL2csXCJcIikpLDI9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybT1cInRyYW5zbGF0ZShcIithcmd1bWVudHNbMF0rXCJweCwgXCIrYXJndW1lbnRzWzFdK1wicHgpXCI6Mjxhcmd1bWVudHMubGVuZ3RoJiYodGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtPVwidHJhbnNsYXRlM2QoXCIrYXJndW1lbnRzWzBdK1wicHgsXCIrYXJndW1lbnRzWzFdK1wicHgsXCIrYXJndW1lbnRzWzJdK1wicHgpXCIsdGhpcy5lbHQucGFyZW50RWxlbWVudC5zdHlsZS5wZXJzcGVjdGl2ZT0zPT09YXJndW1lbnRzLmxlbmd0aD9cIjEwMDBweFwiOmFyZ3VtZW50c1szXStcInB4XCIpLHRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybSs9ZSx0aGlzfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuX3JvdGF0ZT1mdW5jdGlvbigpe3ZhciBlPVwiXCI7cmV0dXJuIHRoaXMuZWx0LnN0eWxlLnRyYW5zZm9ybSYmKGU9KGU9dGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtLnJlcGxhY2UoL3JvdGF0ZTNkXFwoLipcXCkvZyxcIlwiKSkucmVwbGFjZSgvcm90YXRlW1gtWl0/XFwoLipcXCkvZyxcIlwiKSksMT09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtPVwicm90YXRlKFwiK2FyZ3VtZW50c1swXStcImRlZylcIjoyPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm09XCJyb3RhdGUoXCIrYXJndW1lbnRzWzBdK1wiZGVnLCBcIithcmd1bWVudHNbMV0rXCJkZWcpXCI6Mz09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm09XCJyb3RhdGVYKFwiK2FyZ3VtZW50c1swXStcImRlZylcIix0aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm0rPVwicm90YXRlWShcIithcmd1bWVudHNbMV0rXCJkZWcpXCIsdGhpcy5lbHQuc3R5bGUudHJhbnNmb3JtKz1cInJvdGF0ZVooXCIrYXJndW1lbnRzWzJdK1wiZGVnKVwiKSx0aGlzLmVsdC5zdHlsZS50cmFuc2Zvcm0rPWUsdGhpc30sZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnN0eWxlPWZ1bmN0aW9uKGUsdCl7aWYodCBpbnN0YW5jZW9mIGQuZGVmYXVsdC5Db2xvciYmKHQ9XCJyZ2JhKFwiK3QubGV2ZWxzWzBdK1wiLFwiK3QubGV2ZWxzWzFdK1wiLFwiK3QubGV2ZWxzWzJdK1wiLFwiK3QubGV2ZWxzWzNdLzI1NStcIilcIiksdm9pZCAwPT09dCl7aWYoLTE9PT1lLmluZGV4T2YoXCI6XCIpKXJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsdCkuZ2V0UHJvcGVydHlWYWx1ZShlKTtmb3IodmFyIHI9ZS5zcGxpdChcIjtcIiksbj0wO248ci5sZW5ndGg7bisrKXt2YXIgYT1yW25dLnNwbGl0KFwiOlwiKTthWzBdJiZhWzFdJiYodGhpcy5lbHQuc3R5bGVbYVswXS50cmltKCldPWFbMV0udHJpbSgpKX19ZWxzZSBpZih0aGlzLmVsdC5zdHlsZVtlXT10LFwid2lkdGhcIj09PWV8fFwiaGVpZ2h0XCI9PT1lfHxcImxlZnRcIj09PWV8fFwidG9wXCI9PT1lKXt2YXIgbz13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsdCkuZ2V0UHJvcGVydHlWYWx1ZShlKS5yZXBsYWNlKC9cXEQrL2csXCJcIik7dGhpc1tlXT1wYXJzZUludChvLDEwKX1yZXR1cm4gdGhpc30sZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLmF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PXRoaXMuZWx0LmZpcnN0Q2hpbGR8fFwiY2hlY2tib3hcIiE9PXRoaXMuZWx0LmZpcnN0Q2hpbGQudHlwZSYmXCJyYWRpb1wiIT09dGhpcy5lbHQuZmlyc3RDaGlsZC50eXBlKXJldHVybiB2b2lkIDA9PT10P3RoaXMuZWx0LmdldEF0dHJpYnV0ZShlKToodGhpcy5lbHQuc2V0QXR0cmlidXRlKGUsdCksdGhpcyk7aWYodm9pZCAwPT09dClyZXR1cm4gdGhpcy5lbHQuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoZSk7Zm9yKHZhciByPTA7cjx0aGlzLmVsdC5jaGlsZE5vZGVzLmxlbmd0aDtyKyspdGhpcy5lbHQuY2hpbGROb2Rlc1tyXS5zZXRBdHRyaWJ1dGUoZSx0KX0sZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUF0dHJpYnV0ZT1mdW5jdGlvbihlKXtpZihudWxsIT10aGlzLmVsdC5maXJzdENoaWxkJiYoXCJjaGVja2JveFwiPT09dGhpcy5lbHQuZmlyc3RDaGlsZC50eXBlfHxcInJhZGlvXCI9PT10aGlzLmVsdC5maXJzdENoaWxkLnR5cGUpKWZvcih2YXIgdD0wO3Q8dGhpcy5lbHQuY2hpbGROb2Rlcy5sZW5ndGg7dCsrKXRoaXMuZWx0LmNoaWxkTm9kZXNbdF0ucmVtb3ZlQXR0cmlidXRlKGUpO3JldHVybiB0aGlzLmVsdC5yZW1vdmVBdHRyaWJ1dGUoZSksdGhpc30sZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIDA8YXJndW1lbnRzLmxlbmd0aD8odGhpcy5lbHQudmFsdWU9YXJndW1lbnRzWzBdLHRoaXMpOlwicmFuZ2VcIj09PXRoaXMuZWx0LnR5cGU/cGFyc2VGbG9hdCh0aGlzLmVsdC52YWx1ZSk6dGhpcy5lbHQudmFsdWV9LGQuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWx0LnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiLHRoaXN9LGQuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWx0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsdGhpc30sZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlLnNpemU9ZnVuY3Rpb24oZSx0KXtpZigwPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm57d2lkdGg6dGhpcy5lbHQub2Zmc2V0V2lkdGgsaGVpZ2h0OnRoaXMuZWx0Lm9mZnNldEhlaWdodH07dmFyIHI9ZSxuPXQsYT1kLmRlZmF1bHQucHJvdG90eXBlLkFVVE87aWYociE9PWF8fG4hPT1hKXtpZihyPT09YT9yPXQqdGhpcy53aWR0aC90aGlzLmhlaWdodDpuPT09YSYmKG49ZSp0aGlzLmhlaWdodC90aGlzLndpZHRoKSx0aGlzLmVsdCBpbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50KXt2YXIgbyxpPXt9LHM9dGhpcy5lbHQuZ2V0Q29udGV4dChcIjJkXCIpO2ZvcihvIGluIHMpaVtvXT1zW29dO2ZvcihvIGluIHRoaXMuZWx0LnNldEF0dHJpYnV0ZShcIndpZHRoXCIscip0aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5KSx0aGlzLmVsdC5zZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIixuKnRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHkpLHRoaXMuZWx0LnN0eWxlLndpZHRoPXIrXCJweFwiLHRoaXMuZWx0LnN0eWxlLmhlaWdodD1uK1wicHhcIix0aGlzLl9wSW5zdC5zY2FsZSh0aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5LHRoaXMuX3BJbnN0Ll9waXhlbERlbnNpdHkpLGkpdGhpcy5lbHQuZ2V0Q29udGV4dChcIjJkXCIpW29dPWlbb119ZWxzZSB0aGlzLmVsdC5zdHlsZS53aWR0aD1yK1wicHhcIix0aGlzLmVsdC5zdHlsZS5oZWlnaHQ9bitcInB4XCIsdGhpcy5lbHQud2lkdGg9cix0aGlzLmVsdC5oZWlnaHQ9bjt0aGlzLndpZHRoPXRoaXMuZWx0Lm9mZnNldFdpZHRoLHRoaXMuaGVpZ2h0PXRoaXMuZWx0Lm9mZnNldEhlaWdodCx0aGlzLl9wSW5zdCYmdGhpcy5fcEluc3QuX2N1ckVsZW1lbnQmJnRoaXMuX3BJbnN0Ll9jdXJFbGVtZW50LmVsdD09PXRoaXMuZWx0JiYodGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwid2lkdGhcIix0aGlzLmVsdC5vZmZzZXRXaWR0aCksdGhpcy5fcEluc3QuX3NldFByb3BlcnR5KFwiaGVpZ2h0XCIsdGhpcy5lbHQub2Zmc2V0SGVpZ2h0KSl9cmV0dXJuIHRoaXN9LGQuZGVmYXVsdC5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oKXt0aGlzIGluc3RhbmNlb2YgZC5kZWZhdWx0Lk1lZGlhRWxlbWVudCYmdGhpcy5lbHQuc3JjT2JqZWN0LmdldFRyYWNrcygpLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5zdG9wKCl9KTt2YXIgZT10aGlzLl9wSW5zdC5fZWxlbWVudHMuaW5kZXhPZih0aGlzKTtmb3IodmFyIHQgaW4tMSE9PWUmJnRoaXMuX3BJbnN0Ll9lbGVtZW50cy5zcGxpY2UoZSwxKSx0aGlzLl9ldmVudHMpdGhpcy5lbHQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LHRoaXMuX2V2ZW50c1t0XSk7dGhpcy5lbHQmJnRoaXMuZWx0LnBhcmVudE5vZGUmJnRoaXMuZWx0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5lbHQpfSxkLmRlZmF1bHQuRWxlbWVudC5wcm90b3R5cGUuZHJvcD1mdW5jdGlvbihhLG8pe2lmKHdpbmRvdy5GaWxlJiZ3aW5kb3cuRmlsZVJlYWRlciYmd2luZG93LkZpbGVMaXN0JiZ3aW5kb3cuQmxvYil7aWYoIXRoaXMuX2RyYWdEaXNhYmxlZCl7dGhpcy5fZHJhZ0Rpc2FibGVkPSEwO3ZhciBlPWZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKX07dGhpcy5lbHQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsZSksdGhpcy5lbHQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdsZWF2ZVwiLGUpfWQuZGVmYXVsdC5FbGVtZW50Ll9hdHRhY2hMaXN0ZW5lcihcImRyb3BcIixmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksXCJmdW5jdGlvblwiPT10eXBlb2YgbyYmby5jYWxsKHRoaXMsZSk7Zm9yKHZhciB0PWUuZGF0YVRyYW5zZmVyLmZpbGVzLHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG49dFtyXTtkLmRlZmF1bHQuRmlsZS5fbG9hZChuLGEpfX0sdGhpcyl9ZWxzZSBjb25zb2xlLmxvZyhcIlRoZSBGaWxlIEFQSXMgYXJlIG5vdCBmdWxseSBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyLlwiKTtyZXR1cm4gdGhpc30sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudD1mdW5jdGlvbihuLGUpe2QuZGVmYXVsdC5FbGVtZW50LmNhbGwodGhpcyxuLGUpO3ZhciBhPXRoaXM7dGhpcy5lbHQuY3Jvc3NPcmlnaW49XCJhbm9ueW1vdXNcIix0aGlzLl9wcmV2VGltZT0wLHRoaXMuX2N1ZUlEQ291bnRlcj0wLHRoaXMuX2N1ZXM9W10sKHRoaXMuX3BpeGVsc1N0YXRlPXRoaXMpLl9waXhlbERlbnNpdHk9MSx0aGlzLl9tb2RpZmllZD0hMSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcInNyY1wiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgZT1hLmVsdC5jaGlsZHJlblswXS5zcmMsdD1hLmVsdC5zcmM9PT13aW5kb3cubG9jYXRpb24uaHJlZj9cIlwiOmEuZWx0LnNyYztyZXR1cm4gZT09PXdpbmRvdy5sb2NhdGlvbi5ocmVmP3Q6ZX0sc2V0OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3Q8YS5lbHQuY2hpbGRyZW4ubGVuZ3RoO3QrKylhLmVsdC5yZW1vdmVDaGlsZChhLmVsdC5jaGlsZHJlblt0XSk7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNvdXJjZVwiKTtyLnNyYz1lLG4uYXBwZW5kQ2hpbGQociksYS5lbHQuc3JjPWUsYS5tb2RpZmllZD0hMH19KSxhLl9vbmVuZGVkPWZ1bmN0aW9uKCl7fSxhLmVsdC5vbmVuZGVkPWZ1bmN0aW9uKCl7YS5fb25lbmRlZChhKX19LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZC5kZWZhdWx0LkVsZW1lbnQucHJvdG90eXBlKSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5wbGF5PWZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIHRoaXMuZWx0LmN1cnJlbnRUaW1lPT09dGhpcy5lbHQuZHVyYXRpb24mJih0aGlzLmVsdC5jdXJyZW50VGltZT0wKSwoZT0oMTx0aGlzLmVsdC5yZWFkeVN0YXRlfHx0aGlzLmVsdC5sb2FkKCksdGhpcy5lbHQucGxheSgpKSkmJmUuY2F0Y2gmJmUuY2F0Y2goZnVuY3Rpb24oZSl7XCJOb3RBbGxvd2VkRXJyb3JcIj09PWUubmFtZT9kLmRlZmF1bHQuX2ZyaWVuZGx5QXV0b3BsYXlFcnJvcih0aGlzLnNyYyk6Y29uc29sZS5lcnJvcihcIk1lZGlhIHBsYXkgbWV0aG9kIGVuY291bnRlcmVkIGFuIHVuZXhwZWN0ZWQgZXJyb3JcIixlKX0pLHRoaXN9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbHQucGF1c2UoKSx0aGlzLmVsdC5jdXJyZW50VGltZT0wLHRoaXN9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnBhdXNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWx0LnBhdXNlKCksdGhpc30sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUubG9vcD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVsdC5zZXRBdHRyaWJ1dGUoXCJsb29wXCIsITApLHRoaXMucGxheSgpLHRoaXN9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLm5vTG9vcD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVsdC5yZW1vdmVBdHRyaWJ1dGUoXCJsb29wXCIpLHRoaXN9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLl9zZXR1cEF1dG9wbGF5RmFpbERldGVjdGlvbj1mdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIGQuZGVmYXVsdC5fZnJpZW5kbHlBdXRvcGxheUVycm9yKGUuc3JjKX0sNTAwKTt0aGlzLmVsdC5hZGRFdmVudExpc3RlbmVyKFwicGxheVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGNsZWFyVGltZW91dCh0KX0se3Bhc3NpdmU6ITAsb25jZTohMH0pfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5hdXRvcGxheT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcy5lbHQuZ2V0QXR0cmlidXRlKFwiYXV0b3BsYXlcIik7aWYodGhpcy5lbHQuc2V0QXR0cmlidXRlKFwiYXV0b3BsYXlcIixlKSxlJiYhcil7dmFyIG49ZnVuY3Rpb24oKXtyZXR1cm4gdC5fc2V0dXBBdXRvcGxheUZhaWxEZXRlY3Rpb24oKX07ND09PXRoaXMuZWx0LnJlYWR5U3RhdGU/bigpOnRoaXMuZWx0LmFkZEV2ZW50TGlzdGVuZXIoXCJjYW5wbGF5XCIsbix7cGFzc2l2ZTohMCxvbmNlOiEwfSl9cmV0dXJuIHRoaXN9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnZvbHVtZT1mdW5jdGlvbihlKXtpZih2b2lkIDA9PT1lKXJldHVybiB0aGlzLmVsdC52b2x1bWU7dGhpcy5lbHQudm9sdW1lPWV9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnNwZWVkPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpcmV0dXJuIHRoaXMucHJlc2V0UGxheWJhY2tSYXRlfHx0aGlzLmVsdC5wbGF5YmFja1JhdGU7dGhpcy5sb2FkZWRtZXRhZGF0YT90aGlzLmVsdC5wbGF5YmFja1JhdGU9ZTp0aGlzLnByZXNldFBsYXliYWNrUmF0ZT1lfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS50aW1lPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP3RoaXMuZWx0LmN1cnJlbnRUaW1lOih0aGlzLmVsdC5jdXJyZW50VGltZT1lLHRoaXMpfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5kdXJhdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVsdC5kdXJhdGlvbn0sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUucGl4ZWxzPVtdLGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLl9lbnN1cmVDYW52YXM9ZnVuY3Rpb24oKXt0aGlzLmNhbnZhc3x8KHRoaXMuY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksdGhpcy5kcmF3aW5nQ29udGV4dD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiksdGhpcy5zZXRNb2RpZmllZCghMCkpLHRoaXMubG9hZGVkbWV0YWRhdGEmJih0aGlzLmNhbnZhcy53aWR0aCE9PXRoaXMuZWx0LndpZHRoJiYodGhpcy5jYW52YXMud2lkdGg9dGhpcy5lbHQud2lkdGgsdGhpcy5jYW52YXMuaGVpZ2h0PXRoaXMuZWx0LmhlaWdodCx0aGlzLndpZHRoPXRoaXMuY2FudmFzLndpZHRoLHRoaXMuaGVpZ2h0PXRoaXMuY2FudmFzLmhlaWdodCksdGhpcy5kcmF3aW5nQ29udGV4dC5kcmF3SW1hZ2UodGhpcy5lbHQsMCwwLHRoaXMuY2FudmFzLndpZHRoLHRoaXMuY2FudmFzLmhlaWdodCksdGhpcy5zZXRNb2RpZmllZCghMCkpfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5sb2FkUGl4ZWxzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Vuc3VyZUNhbnZhcygpLGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5sb2FkUGl4ZWxzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUudXBkYXRlUGl4ZWxzPWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiB0aGlzLmxvYWRlZG1ldGFkYXRhJiYodGhpcy5fZW5zdXJlQ2FudmFzKCksZC5kZWZhdWx0LlJlbmRlcmVyMkQucHJvdG90eXBlLnVwZGF0ZVBpeGVscy5jYWxsKHRoaXMsZSx0LHIsbikpLHRoaXMuc2V0TW9kaWZpZWQoITApLHRoaXN9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbnN1cmVDYW52YXMoKSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuZ2V0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuX2dldFBpeGVsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubG9hZFBpeGVscygpLGQuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5fZ2V0UGl4ZWwuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0LHIpe3RoaXMubG9hZGVkbWV0YWRhdGEmJih0aGlzLl9lbnN1cmVDYW52YXMoKSxkLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuc2V0LmNhbGwodGhpcyxlLHQsciksdGhpcy5zZXRNb2RpZmllZCghMCkpfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7dGhpcy5fZW5zdXJlQ2FudmFzKCksZC5kZWZhdWx0LnByb3RvdHlwZS5jb3B5LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUubWFzaz1mdW5jdGlvbigpe3RoaXMubG9hZFBpeGVscygpLHRoaXMuc2V0TW9kaWZpZWQoITApLGQuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUubWFzay5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmlzTW9kaWZpZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kaWZpZWR9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnNldE1vZGlmaWVkPWZ1bmN0aW9uKGUpe3RoaXMuX21vZGlmaWVkPWV9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLm9uZW5kZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX29uZW5kZWQ9ZSx0aGlzfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5jb25uZWN0PWZ1bmN0aW9uKGUpe3ZhciB0LHI7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZC5kZWZhdWx0LnByb3RvdHlwZS5nZXRBdWRpb0NvbnRleHQpdD1kLmRlZmF1bHQucHJvdG90eXBlLmdldEF1ZGlvQ29udGV4dCgpLHI9ZC5kZWZhdWx0LnNvdW5kT3V0LmlucHV0O2Vsc2UgdHJ5e3I9KHQ9ZS5jb250ZXh0KS5kZXN0aW5hdGlvbn1jYXRjaChlKXt0aHJvd1wiY29ubmVjdCgpIGlzIG1lYW50IHRvIGJlIHVzZWQgd2l0aCBXZWIgQXVkaW8gQVBJIG9yIHA1LnNvdW5kLmpzXCJ9dGhpcy5hdWRpb1NvdXJjZU5vZGV8fCh0aGlzLmF1ZGlvU291cmNlTm9kZT10LmNyZWF0ZU1lZGlhRWxlbWVudFNvdXJjZSh0aGlzLmVsdCksdGhpcy5hdWRpb1NvdXJjZU5vZGUuY29ubmVjdChyKSksZT9lLmlucHV0P3RoaXMuYXVkaW9Tb3VyY2VOb2RlLmNvbm5lY3QoZS5pbnB1dCk6dGhpcy5hdWRpb1NvdXJjZU5vZGUuY29ubmVjdChlKTp0aGlzLmF1ZGlvU291cmNlTm9kZS5jb25uZWN0KHIpfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuYXVkaW9Tb3VyY2VOb2RlKXRocm93XCJub3RoaW5nIHRvIGRpc2Nvbm5lY3RcIjt0aGlzLmF1ZGlvU291cmNlTm9kZS5kaXNjb25uZWN0KCl9LGQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLnNob3dDb250cm9scz1mdW5jdGlvbigpe3RoaXMuZWx0LnN0eWxlW1widGV4dC1hbGlnblwiXT1cImluaGVyaXRcIix0aGlzLmVsdC5jb250cm9scz0hMH0sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUuaGlkZUNvbnRyb2xzPWZ1bmN0aW9uKCl7dGhpcy5lbHQuY29udHJvbHM9ITF9O2Z1bmN0aW9uIG8oZSx0LHIsbil7dGhpcy5jYWxsYmFjaz1lLHRoaXMudGltZT10LHRoaXMuaWQ9cix0aGlzLnZhbD1ufWQuZGVmYXVsdC5NZWRpYUVsZW1lbnQucHJvdG90eXBlLmFkZEN1ZT1mdW5jdGlvbihlLHQscil7dmFyIG49dGhpcy5fY3VlSURDb3VudGVyKyssYT1uZXcgbyh0LGUsbixyKTtyZXR1cm4gdGhpcy5fY3Vlcy5wdXNoKGEpLHRoaXMuZWx0Lm9udGltZXVwZGF0ZXx8KHRoaXMuZWx0Lm9udGltZXVwZGF0ZT10aGlzLl9vblRpbWVVcGRhdGUuYmluZCh0aGlzKSksbn0sZC5kZWZhdWx0Lk1lZGlhRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQ3VlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3Q8dGhpcy5fY3Vlcy5sZW5ndGg7dCsrKXRoaXMuX2N1ZXNbdF0uaWQ9PT1lJiYoY29uc29sZS5sb2coZSksdGhpcy5fY3Vlcy5zcGxpY2UodCwxKSk7MD09PXRoaXMuX2N1ZXMubGVuZ3RoJiYodGhpcy5lbHQub250aW1ldXBkYXRlPW51bGwpfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5jbGVhckN1ZXM9ZnVuY3Rpb24oKXt0aGlzLl9jdWVzPVtdLHRoaXMuZWx0Lm9udGltZXVwZGF0ZT1udWxsfSxkLmRlZmF1bHQuTWVkaWFFbGVtZW50LnByb3RvdHlwZS5fb25UaW1lVXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMudGltZSgpLHQ9MDt0PHRoaXMuX2N1ZXMubGVuZ3RoO3QrKyl7dmFyIHI9dGhpcy5fY3Vlc1t0XS50aW1lLG49dGhpcy5fY3Vlc1t0XS52YWw7dGhpcy5fcHJldlRpbWU8ciYmcjw9ZSYmdGhpcy5fY3Vlc1t0XS5jYWxsYmFjayhuKX10aGlzLl9wcmV2VGltZT1lfSxkLmRlZmF1bHQuRmlsZT1mdW5jdGlvbihlLHQpe3RoaXMuZmlsZT1lLHRoaXMuX3BJbnN0PXQ7dmFyIHI9ZS50eXBlLnNwbGl0KFwiL1wiKTt0aGlzLnR5cGU9clswXSx0aGlzLnN1YnR5cGU9clsxXSx0aGlzLm5hbWU9ZS5uYW1lLHRoaXMuc2l6ZT1lLnNpemUsdGhpcy5kYXRhPXZvaWQgMH0sZC5kZWZhdWx0LkZpbGUuX2NyZWF0ZUxvYWRlcj1mdW5jdGlvbihuLGEpe3ZhciBlPW5ldyBGaWxlUmVhZGVyO3JldHVybiBlLm9ubG9hZD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgZC5kZWZhdWx0LkZpbGUobik7aWYoXCJhcHBsaWNhdGlvbi9qc29uXCI9PT10LmZpbGUudHlwZSl0LmRhdGE9SlNPTi5wYXJzZShlLnRhcmdldC5yZXN1bHQpO2Vsc2UgaWYoXCJ0ZXh0L3htbFwiPT09dC5maWxlLnR5cGUpe3ZhciByPShuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoZS50YXJnZXQucmVzdWx0LFwidGV4dC94bWxcIik7dC5kYXRhPW5ldyBkLmRlZmF1bHQuWE1MKHIuZG9jdW1lbnRFbGVtZW50KX1lbHNlIHQuZGF0YT1lLnRhcmdldC5yZXN1bHQ7YSh0KX0sZX0sZC5kZWZhdWx0LkZpbGUuX2xvYWQ9ZnVuY3Rpb24oZSx0KXtpZigvXnRleHRcXC8vLnRlc3QoZS50eXBlKXx8XCJhcHBsaWNhdGlvbi9qc29uXCI9PT1lLnR5cGUpZC5kZWZhdWx0LkZpbGUuX2NyZWF0ZUxvYWRlcihlLHQpLnJlYWRBc1RleHQoZSk7ZWxzZSBpZigvXih2aWRlb3xhdWRpbylcXC8vLnRlc3QoZS50eXBlKSl7dmFyIHI9bmV3IGQuZGVmYXVsdC5GaWxlKGUpO3IuZGF0YT1VUkwuY3JlYXRlT2JqZWN0VVJMKGUpLHQocil9ZWxzZSBkLmRlZmF1bHQuRmlsZS5fY3JlYXRlTG9hZGVyKGUsdCkucmVhZEFzRGF0YVVSTChlKX07dmFyIGk9ZC5kZWZhdWx0O3IuZGVmYXVsdD1pfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDQ5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxvPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9YS5kZWZhdWx0LnByb3RvdHlwZS5kZXZpY2VPcmllbnRhdGlvbj0xPHdpbmRvdy5pbm5lcldpZHRoL3dpbmRvdy5pbm5lckhlaWdodD9cImxhbmRzY2FwZVwiOlwicG9ydHJhaXRcIixhLmRlZmF1bHQucHJvdG90eXBlLmFjY2VsZXJhdGlvblg9MCxhLmRlZmF1bHQucHJvdG90eXBlLmFjY2VsZXJhdGlvblk9MCxhLmRlZmF1bHQucHJvdG90eXBlLmFjY2VsZXJhdGlvblo9MCxhLmRlZmF1bHQucHJvdG90eXBlLnBBY2NlbGVyYXRpb25YPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5wQWNjZWxlcmF0aW9uWT0wLGEuZGVmYXVsdC5wcm90b3R5cGUucEFjY2VsZXJhdGlvblo9MCxhLmRlZmF1bHQucHJvdG90eXBlLl91cGRhdGVQQWNjZWxlcmF0aW9ucz1mdW5jdGlvbigpe3RoaXMuX3NldFByb3BlcnR5KFwicEFjY2VsZXJhdGlvblhcIix0aGlzLmFjY2VsZXJhdGlvblgpLHRoaXMuX3NldFByb3BlcnR5KFwicEFjY2VsZXJhdGlvbllcIix0aGlzLmFjY2VsZXJhdGlvblkpLHRoaXMuX3NldFByb3BlcnR5KFwicEFjY2VsZXJhdGlvblpcIix0aGlzLmFjY2VsZXJhdGlvblopfSxhLmRlZmF1bHQucHJvdG90eXBlLnJvdGF0aW9uWD0wLGEuZGVmYXVsdC5wcm90b3R5cGUucm90YXRpb25ZPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5yb3RhdGlvblo9MCxhLmRlZmF1bHQucHJvdG90eXBlLnBSb3RhdGlvblg9MCxhLmRlZmF1bHQucHJvdG90eXBlLnBSb3RhdGlvblk9MDt2YXIgYz1hLmRlZmF1bHQucHJvdG90eXBlLnBSb3RhdGlvblo9MCxkPTAsaD0wLG09XCJjbG9ja3dpc2VcIixmPVwiY2xvY2t3aXNlXCIseT1cImNsb2Nrd2lzZVwiO2EuZGVmYXVsdC5wcm90b3R5cGUucFJvdGF0ZURpcmVjdGlvblg9dm9pZCAwLGEuZGVmYXVsdC5wcm90b3R5cGUucFJvdGF0ZURpcmVjdGlvblk9dm9pZCAwLGEuZGVmYXVsdC5wcm90b3R5cGUucFJvdGF0ZURpcmVjdGlvblo9dm9pZCAwLGEuZGVmYXVsdC5wcm90b3R5cGUuX3VwZGF0ZVBSb3RhdGlvbnM9ZnVuY3Rpb24oKXt0aGlzLl9zZXRQcm9wZXJ0eShcInBSb3RhdGlvblhcIix0aGlzLnJvdGF0aW9uWCksdGhpcy5fc2V0UHJvcGVydHkoXCJwUm90YXRpb25ZXCIsdGhpcy5yb3RhdGlvblkpLHRoaXMuX3NldFByb3BlcnR5KFwicFJvdGF0aW9uWlwiLHRoaXMucm90YXRpb25aKX0sYS5kZWZhdWx0LnByb3RvdHlwZS50dXJuQXhpcz12b2lkIDA7dmFyIGc9LjUsdj0zMDthLmRlZmF1bHQucHJvdG90eXBlLnNldE1vdmVUaHJlc2hvbGQ9ZnVuY3Rpb24oZSl7YS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzZXRNb3ZlVGhyZXNob2xkXCIsYXJndW1lbnRzKSxnPWV9LGEuZGVmYXVsdC5wcm90b3R5cGUuc2V0U2hha2VUaHJlc2hvbGQ9ZnVuY3Rpb24oZSl7YS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzZXRTaGFrZVRocmVzaG9sZFwiLGFyZ3VtZW50cyksdj1lfSxhLmRlZmF1bHQucHJvdG90eXBlLl9vbmRldmljZW9yaWVudGF0aW9uPWZ1bmN0aW9uKGUpe3RoaXMuX3VwZGF0ZVBSb3RhdGlvbnMoKSx0aGlzLl9hbmdsZU1vZGU9PT1vLnJhZGlhbnMmJihlLmJldGE9ZS5iZXRhKihfUEkvMTgwKSxlLmdhbW1hPWUuZ2FtbWEqKF9QSS8xODApLGUuYWxwaGE9ZS5hbHBoYSooX1BJLzE4MCkpLHRoaXMuX3NldFByb3BlcnR5KFwicm90YXRpb25YXCIsZS5iZXRhKSx0aGlzLl9zZXRQcm9wZXJ0eShcInJvdGF0aW9uWVwiLGUuZ2FtbWEpLHRoaXMuX3NldFByb3BlcnR5KFwicm90YXRpb25aXCIsZS5hbHBoYSksdGhpcy5faGFuZGxlTW90aW9uKCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX29uZGV2aWNlbW90aW9uPWZ1bmN0aW9uKGUpe3RoaXMuX3VwZGF0ZVBBY2NlbGVyYXRpb25zKCksdGhpcy5fc2V0UHJvcGVydHkoXCJhY2NlbGVyYXRpb25YXCIsMiplLmFjY2VsZXJhdGlvbi54KSx0aGlzLl9zZXRQcm9wZXJ0eShcImFjY2VsZXJhdGlvbllcIiwyKmUuYWNjZWxlcmF0aW9uLnkpLHRoaXMuX3NldFByb3BlcnR5KFwiYWNjZWxlcmF0aW9uWlwiLDIqZS5hY2NlbGVyYXRpb24ueiksdGhpcy5faGFuZGxlTW90aW9uKCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX2hhbmRsZU1vdGlvbj1mdW5jdGlvbigpezkwPT09d2luZG93Lm9yaWVudGF0aW9ufHwtOTA9PT13aW5kb3cub3JpZW50YXRpb24/dGhpcy5fc2V0UHJvcGVydHkoXCJkZXZpY2VPcmllbnRhdGlvblwiLFwibGFuZHNjYXBlXCIpOjA9PT13aW5kb3cub3JpZW50YXRpb24/dGhpcy5fc2V0UHJvcGVydHkoXCJkZXZpY2VPcmllbnRhdGlvblwiLFwicG9ydHJhaXRcIik6dm9pZCAwPT09d2luZG93Lm9yaWVudGF0aW9uJiZ0aGlzLl9zZXRQcm9wZXJ0eShcImRldmljZU9yaWVudGF0aW9uXCIsXCJ1bmRlZmluZWRcIik7dmFyIGU9dGhpcy5kZXZpY2VNb3ZlZHx8d2luZG93LmRldmljZU1vdmVkO1wiZnVuY3Rpb25cIj09dHlwZW9mIGUmJihNYXRoLmFicyh0aGlzLmFjY2VsZXJhdGlvblgtdGhpcy5wQWNjZWxlcmF0aW9uWCk+Z3x8TWF0aC5hYnModGhpcy5hY2NlbGVyYXRpb25ZLXRoaXMucEFjY2VsZXJhdGlvblkpPmd8fE1hdGguYWJzKHRoaXMuYWNjZWxlcmF0aW9uWi10aGlzLnBBY2NlbGVyYXRpb25aKT5nKSYmZSgpO3ZhciB0PXRoaXMuZGV2aWNlVHVybmVkfHx3aW5kb3cuZGV2aWNlVHVybmVkO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQpe3ZhciByPXRoaXMucm90YXRpb25YKzE4MCxuPXRoaXMucFJvdGF0aW9uWCsxODAsYT1jKzE4MDswPHItbiYmci1uPDI3MHx8ci1uPC0yNzA/bT1cImNsb2Nrd2lzZVwiOihyLW48MHx8MjcwPHItbikmJihtPVwiY291bnRlci1jbG9ja3dpc2VcIiksbSE9PXRoaXMucFJvdGF0ZURpcmVjdGlvblgmJihhPXIpLDkwPE1hdGguYWJzKHItYSkmJk1hdGguYWJzKHItYSk8MjcwJiYoYT1yLHRoaXMuX3NldFByb3BlcnR5KFwidHVybkF4aXNcIixcIlhcIiksdCgpKSx0aGlzLnBSb3RhdGVEaXJlY3Rpb25YPW0sYz1hLTE4MDt2YXIgbz10aGlzLnJvdGF0aW9uWSsxODAsaT10aGlzLnBSb3RhdGlvblkrMTgwLHM9ZCsxODA7MDxvLWkmJm8taTwyNzB8fG8taTwtMjcwP2Y9XCJjbG9ja3dpc2VcIjooby1pPDB8fDI3MDxvLXRoaXMucFJvdGF0aW9uWSkmJihmPVwiY291bnRlci1jbG9ja3dpc2VcIiksZiE9PXRoaXMucFJvdGF0ZURpcmVjdGlvblkmJihzPW8pLDkwPE1hdGguYWJzKG8tcykmJk1hdGguYWJzKG8tcyk8MjcwJiYocz1vLHRoaXMuX3NldFByb3BlcnR5KFwidHVybkF4aXNcIixcIllcIiksdCgpKSx0aGlzLnBSb3RhdGVEaXJlY3Rpb25ZPWYsZD1zLTE4MCwwPHRoaXMucm90YXRpb25aLXRoaXMucFJvdGF0aW9uWiYmdGhpcy5yb3RhdGlvblotdGhpcy5wUm90YXRpb25aPDI3MHx8dGhpcy5yb3RhdGlvblotdGhpcy5wUm90YXRpb25aPC0yNzA/eT1cImNsb2Nrd2lzZVwiOih0aGlzLnJvdGF0aW9uWi10aGlzLnBSb3RhdGlvblo8MHx8MjcwPHRoaXMucm90YXRpb25aLXRoaXMucFJvdGF0aW9uWikmJih5PVwiY291bnRlci1jbG9ja3dpc2VcIikseSE9PXRoaXMucFJvdGF0ZURpcmVjdGlvblomJihoPXRoaXMucm90YXRpb25aKSw5MDxNYXRoLmFicyh0aGlzLnJvdGF0aW9uWi1oKSYmTWF0aC5hYnModGhpcy5yb3RhdGlvblotaCk8MjcwJiYoaD10aGlzLnJvdGF0aW9uWix0aGlzLl9zZXRQcm9wZXJ0eShcInR1cm5BeGlzXCIsXCJaXCIpLHQoKSksdGhpcy5wUm90YXRlRGlyZWN0aW9uWj15LHRoaXMuX3NldFByb3BlcnR5KFwidHVybkF4aXNcIix2b2lkIDApfXZhciBsLHAsdT10aGlzLmRldmljZVNoYWtlbnx8d2luZG93LmRldmljZVNoYWtlbjtcImZ1bmN0aW9uXCI9PXR5cGVvZiB1JiYobnVsbCE9PXRoaXMucEFjY2VsZXJhdGlvblgmJihsPU1hdGguYWJzKHRoaXMuYWNjZWxlcmF0aW9uWC10aGlzLnBBY2NlbGVyYXRpb25YKSxwPU1hdGguYWJzKHRoaXMuYWNjZWxlcmF0aW9uWS10aGlzLnBBY2NlbGVyYXRpb25ZKSksdjxsK3AmJnUoKSl9O3ZhciBsPWEuZGVmYXVsdDtyLmRlZmF1bHQ9bH0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4uL2NvcmUvbWFpblwiOjMyfV0sNTA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2EuZGVmYXVsdC5wcm90b3R5cGUuaXNLZXlQcmVzc2VkPSExLGEuZGVmYXVsdC5wcm90b3R5cGUua2V5SXNQcmVzc2VkPSExLGEuZGVmYXVsdC5wcm90b3R5cGUua2V5PVwiXCIsYS5kZWZhdWx0LnByb3RvdHlwZS5rZXlDb2RlPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5fb25rZXlkb3duPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLl9kb3duS2V5c1tlLndoaWNoXSl7dGhpcy5fc2V0UHJvcGVydHkoXCJpc0tleVByZXNzZWRcIiwhMCksdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlJc1ByZXNzZWRcIiwhMCksdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlDb2RlXCIsZS53aGljaCksdGhpcy5fZG93bktleXNbZS53aGljaF09ITAsdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlcIixlLmtleXx8U3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKXx8ZS53aGljaCk7dmFyIHQ9dGhpcy5rZXlQcmVzc2VkfHx3aW5kb3cua2V5UHJlc3NlZDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYhZS5jaGFyQ29kZSkhMT09PXQoZSkmJmUucHJldmVudERlZmF1bHQoKX19LGEuZGVmYXVsdC5wcm90b3R5cGUuX29ua2V5dXA9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5rZXlSZWxlYXNlZHx8d2luZG93LmtleVJlbGVhc2VkO3RoaXMuX2Rvd25LZXlzW2Uud2hpY2hdPSExLHRoaXMuX2FyZURvd25LZXlzKCl8fCh0aGlzLl9zZXRQcm9wZXJ0eShcImlzS2V5UHJlc3NlZFwiLCExKSx0aGlzLl9zZXRQcm9wZXJ0eShcImtleUlzUHJlc3NlZFwiLCExKSksdGhpcy5fc2V0UHJvcGVydHkoXCJfbGFzdEtleUNvZGVUeXBlZFwiLG51bGwpLHRoaXMuX3NldFByb3BlcnR5KFwia2V5XCIsZS5rZXl8fFN0cmluZy5mcm9tQ2hhckNvZGUoZS53aGljaCl8fGUud2hpY2gpLHRoaXMuX3NldFByb3BlcnR5KFwia2V5Q29kZVwiLGUud2hpY2gpLFwiZnVuY3Rpb25cIiE9dHlwZW9mIHR8fCExPT09dChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfSxhLmRlZmF1bHQucHJvdG90eXBlLl9vbmtleXByZXNzPWZ1bmN0aW9uKGUpe2lmKGUud2hpY2ghPT10aGlzLl9sYXN0S2V5Q29kZVR5cGVkKXt0aGlzLl9zZXRQcm9wZXJ0eShcIl9sYXN0S2V5Q29kZVR5cGVkXCIsZS53aGljaCksdGhpcy5fc2V0UHJvcGVydHkoXCJrZXlcIixTdHJpbmcuZnJvbUNoYXJDb2RlKGUud2hpY2gpKTt2YXIgdD10aGlzLmtleVR5cGVkfHx3aW5kb3cua2V5VHlwZWQ7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdCkhMT09PXQoZSkmJmUucHJldmVudERlZmF1bHQoKX19LGEuZGVmYXVsdC5wcm90b3R5cGUuX29uYmx1cj1mdW5jdGlvbihlKXt0aGlzLl9kb3duS2V5cz17fX0sYS5kZWZhdWx0LnByb3RvdHlwZS5rZXlJc0Rvd249ZnVuY3Rpb24oZSl7cmV0dXJuIGEuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwia2V5SXNEb3duXCIsYXJndW1lbnRzKSx0aGlzLl9kb3duS2V5c1tlXXx8ITF9LGEuZGVmYXVsdC5wcm90b3R5cGUuX2FyZURvd25LZXlzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlIGluIHRoaXMuX2Rvd25LZXlzKWlmKHRoaXMuX2Rvd25LZXlzLmhhc093blByb3BlcnR5KGUpJiYhMD09PXRoaXMuX2Rvd25LZXlzW2VdKXJldHVybiEwO3JldHVybiExfTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNTE6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKGUpe3JldHVybihpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LG89ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09aShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1zKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1hLmRlZmF1bHQucHJvdG90eXBlLm1vdmVkWD0wLGEuZGVmYXVsdC5wcm90b3R5cGUubW92ZWRZPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5faGFzTW91c2VJbnRlcmFjdGVkPSExLGEuZGVmYXVsdC5wcm90b3R5cGUubW91c2VYPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5tb3VzZVk9MCxhLmRlZmF1bHQucHJvdG90eXBlLnBtb3VzZVg9MCxhLmRlZmF1bHQucHJvdG90eXBlLnBtb3VzZVk9MCxhLmRlZmF1bHQucHJvdG90eXBlLndpbk1vdXNlWD0wLGEuZGVmYXVsdC5wcm90b3R5cGUud2luTW91c2VZPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5wd2luTW91c2VYPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5wd2luTW91c2VZPTAsYS5kZWZhdWx0LnByb3RvdHlwZS5tb3VzZUJ1dHRvbj0wLGEuZGVmYXVsdC5wcm90b3R5cGUubW91c2VJc1ByZXNzZWQ9ITEsYS5kZWZhdWx0LnByb3RvdHlwZS5fdXBkYXRlTmV4dE1vdXNlQ29vcmRzPWZ1bmN0aW9uKGUpe2lmKG51bGwhPT10aGlzLl9jdXJFbGVtZW50JiYoIWUudG91Y2hlc3x8MDxlLnRvdWNoZXMubGVuZ3RoKSl7dmFyIHQ9ZnVuY3Rpb24oZSx0LHIsbil7biYmIW4uY2xpZW50WCYmKG4udG91Y2hlcz9uPW4udG91Y2hlc1swXTpuLmNoYW5nZWRUb3VjaGVzJiYobj1uLmNoYW5nZWRUb3VjaGVzWzBdKSk7dmFyIGE9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxvPWUuc2Nyb2xsV2lkdGgvdHx8MSxpPWUuc2Nyb2xsSGVpZ2h0L3J8fDE7cmV0dXJue3g6KG4uY2xpZW50WC1hLmxlZnQpL28seToobi5jbGllbnRZLWEudG9wKS9pLHdpblg6bi5jbGllbnRYLHdpblk6bi5jbGllbnRZLGlkOm4uaWRlbnRpZmllcn19KHRoaXMuX2N1ckVsZW1lbnQuZWx0LHRoaXMud2lkdGgsdGhpcy5oZWlnaHQsZSk7dGhpcy5fc2V0UHJvcGVydHkoXCJtb3ZlZFhcIixlLm1vdmVtZW50WCksdGhpcy5fc2V0UHJvcGVydHkoXCJtb3ZlZFlcIixlLm1vdmVtZW50WSksdGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZVhcIix0LngpLHRoaXMuX3NldFByb3BlcnR5KFwibW91c2VZXCIsdC55KSx0aGlzLl9zZXRQcm9wZXJ0eShcIndpbk1vdXNlWFwiLHQud2luWCksdGhpcy5fc2V0UHJvcGVydHkoXCJ3aW5Nb3VzZVlcIix0LndpblkpfXRoaXMuX2hhc01vdXNlSW50ZXJhY3RlZHx8KHRoaXMuX3VwZGF0ZU1vdXNlQ29vcmRzKCksdGhpcy5fc2V0UHJvcGVydHkoXCJfaGFzTW91c2VJbnRlcmFjdGVkXCIsITApKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fdXBkYXRlTW91c2VDb29yZHM9ZnVuY3Rpb24oKXt0aGlzLl9zZXRQcm9wZXJ0eShcInBtb3VzZVhcIix0aGlzLm1vdXNlWCksdGhpcy5fc2V0UHJvcGVydHkoXCJwbW91c2VZXCIsdGhpcy5tb3VzZVkpLHRoaXMuX3NldFByb3BlcnR5KFwicHdpbk1vdXNlWFwiLHRoaXMud2luTW91c2VYKSx0aGlzLl9zZXRQcm9wZXJ0eShcInB3aW5Nb3VzZVlcIix0aGlzLndpbk1vdXNlWSksdGhpcy5fc2V0UHJvcGVydHkoXCJfcG1vdXNlV2hlZWxEZWx0YVlcIix0aGlzLl9tb3VzZVdoZWVsRGVsdGFZKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fc2V0TW91c2VCdXR0b249ZnVuY3Rpb24oZSl7MT09PWUuYnV0dG9uP3RoaXMuX3NldFByb3BlcnR5KFwibW91c2VCdXR0b25cIixvLkNFTlRFUik6Mj09PWUuYnV0dG9uP3RoaXMuX3NldFByb3BlcnR5KFwibW91c2VCdXR0b25cIixvLlJJR0hUKTp0aGlzLl9zZXRQcm9wZXJ0eShcIm1vdXNlQnV0dG9uXCIsby5MRUZUKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fb25tb3VzZW1vdmU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7dGhpcy5fdXBkYXRlTmV4dE1vdXNlQ29vcmRzKGUpLHRoaXMubW91c2VJc1ByZXNzZWQ/XCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZURyYWdnZWQ/ITE9PT10Lm1vdXNlRHJhZ2dlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG91Y2hNb3ZlZCYmITE9PT10LnRvdWNoTW92ZWQoZSkmJmUucHJldmVudERlZmF1bHQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1vdXNlTW92ZWQmJiExPT09dC5tb3VzZU1vdmVkKGUpJiZlLnByZXZlbnREZWZhdWx0KCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX29ubW91c2Vkb3duPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO3RoaXMuX3NldFByb3BlcnR5KFwibW91c2VJc1ByZXNzZWRcIiwhMCksdGhpcy5fc2V0TW91c2VCdXR0b24oZSksdGhpcy5fdXBkYXRlTmV4dE1vdXNlQ29vcmRzKGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQubW91c2VQcmVzc2VkPyExPT09dC5tb3VzZVByZXNzZWQoZSkmJmUucHJldmVudERlZmF1bHQoKTpuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJzYWZhcmlcIikmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG91Y2hTdGFydGVkJiYhMT09PXQudG91Y2hTdGFydGVkKGUpJiZlLnByZXZlbnREZWZhdWx0KCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX29ubW91c2V1cD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpczt0aGlzLl9zZXRQcm9wZXJ0eShcIm1vdXNlSXNQcmVzc2VkXCIsITEpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQubW91c2VSZWxlYXNlZD8hMT09PXQubW91c2VSZWxlYXNlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG91Y2hFbmRlZCYmITE9PT10LnRvdWNoRW5kZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fb25kcmFnZW5kPWEuZGVmYXVsdC5wcm90b3R5cGUuX29ubW91c2V1cCxhLmRlZmF1bHQucHJvdG90eXBlLl9vbmRyYWdvdmVyPWEuZGVmYXVsdC5wcm90b3R5cGUuX29ubW91c2Vtb3ZlLGEuZGVmYXVsdC5wcm90b3R5cGUuX29uY2xpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7XCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZUNsaWNrZWQmJiExPT09dC5tb3VzZUNsaWNrZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fb25kYmxjbGljaz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9pc0dsb2JhbD93aW5kb3c6dGhpcztcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmRvdWJsZUNsaWNrZWQmJiExPT09dC5kb3VibGVDbGlja2VkKGUpJiZlLnByZXZlbnREZWZhdWx0KCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX21vdXNlV2hlZWxEZWx0YVk9MCxhLmRlZmF1bHQucHJvdG90eXBlLl9wbW91c2VXaGVlbERlbHRhWT0wLGEuZGVmYXVsdC5wcm90b3R5cGUuX29ud2hlZWw9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7dGhpcy5fc2V0UHJvcGVydHkoXCJfbW91c2VXaGVlbERlbHRhWVwiLGUuZGVsdGFZKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1vdXNlV2hlZWwmJihlLmRlbHRhPWUuZGVsdGFZLCExPT09dC5tb3VzZVdoZWVsKGUpJiZlLnByZXZlbnREZWZhdWx0KCkpfSxhLmRlZmF1bHQucHJvdG90eXBlLnJlcXVlc3RQb2ludGVyTG9jaz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2N1ckVsZW1lbnQuZWx0O3JldHVybiBlLnJlcXVlc3RQb2ludGVyTG9jaz1lLnJlcXVlc3RQb2ludGVyTG9ja3x8ZS5tb3pSZXF1ZXN0UG9pbnRlckxvY2ssZS5yZXF1ZXN0UG9pbnRlckxvY2s/KGUucmVxdWVzdFBvaW50ZXJMb2NrKCksITApOihjb25zb2xlLmxvZyhcInJlcXVlc3RQb2ludGVyTG9jayBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBicm93c2VyXCIpLCExKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5leGl0UG9pbnRlckxvY2s9ZnVuY3Rpb24oKXtkb2N1bWVudC5leGl0UG9pbnRlckxvY2soKX07dmFyIGw9YS5kZWZhdWx0O3IuZGVmYXVsdD1sfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzJ9XSw1MjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gbyhlLHQscixuLGEpe3ZhciBvPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YT9hOjAsaT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9ZS5zY3JvbGxXaWR0aC90fHwxLGw9ZS5zY3JvbGxIZWlnaHQvcnx8MSxwPW4udG91Y2hlc1tvXXx8bi5jaGFuZ2VkVG91Y2hlc1tvXTtyZXR1cm57eDoocC5jbGllbnRYLWkubGVmdCkvcyx5OihwLmNsaWVudFktaS50b3ApL2wsd2luWDpwLmNsaWVudFgsd2luWTpwLmNsaWVudFksaWQ6cC5pZGVudGlmaWVyfX1hLmRlZmF1bHQucHJvdG90eXBlLnRvdWNoZXM9W10sYS5kZWZhdWx0LnByb3RvdHlwZS5fdXBkYXRlVG91Y2hDb29yZHM9ZnVuY3Rpb24oZSl7aWYobnVsbCE9PXRoaXMuX2N1ckVsZW1lbnQpe2Zvcih2YXIgdD1bXSxyPTA7cjxlLnRvdWNoZXMubGVuZ3RoO3IrKyl0W3JdPW8odGhpcy5fY3VyRWxlbWVudC5lbHQsdGhpcy53aWR0aCx0aGlzLmhlaWdodCxlLHIpO3RoaXMuX3NldFByb3BlcnR5KFwidG91Y2hlc1wiLHQpfX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fb250b3VjaHN0YXJ0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2lzR2xvYmFsP3dpbmRvdzp0aGlzO3RoaXMuX3NldFByb3BlcnR5KFwibW91c2VJc1ByZXNzZWRcIiwhMCksdGhpcy5fdXBkYXRlVG91Y2hDb29yZHMoZSksdGhpcy5fdXBkYXRlTmV4dE1vdXNlQ29vcmRzKGUpLHRoaXMuX3VwZGF0ZU1vdXNlQ29vcmRzKCksXCJmdW5jdGlvblwiPT10eXBlb2YgdC50b3VjaFN0YXJ0ZWQ/ITE9PT10LnRvdWNoU3RhcnRlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpOm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcInNhZmFyaVwiKSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZVByZXNzZWQmJiExPT09dC5tb3VzZVByZXNzZWQoZSkmJmUucHJldmVudERlZmF1bHQoKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5fb250b3VjaG1vdmU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7dGhpcy5fdXBkYXRlVG91Y2hDb29yZHMoZSksdGhpcy5fdXBkYXRlTmV4dE1vdXNlQ29vcmRzKGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG91Y2hNb3ZlZD8hMT09PXQudG91Y2hNb3ZlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQubW91c2VEcmFnZ2VkJiYhMT09PXQubW91c2VEcmFnZ2VkKGUpJiZlLnByZXZlbnREZWZhdWx0KCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX29udG91Y2hlbmQ9ZnVuY3Rpb24oZSl7dGhpcy5fc2V0UHJvcGVydHkoXCJtb3VzZUlzUHJlc3NlZFwiLCExKSx0aGlzLl91cGRhdGVUb3VjaENvb3JkcyhlKSx0aGlzLl91cGRhdGVOZXh0TW91c2VDb29yZHMoZSk7dmFyIHQ9dGhpcy5faXNHbG9iYWw/d2luZG93OnRoaXM7XCJmdW5jdGlvblwiPT10eXBlb2YgdC50b3VjaEVuZGVkPyExPT09dC50b3VjaEVuZGVkKGUpJiZlLnByZXZlbnREZWZhdWx0KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgdC5tb3VzZVJlbGVhc2VkJiYhMT09PXQubW91c2VSZWxlYXNlZChlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfTt2YXIgaT1hLmRlZmF1bHQ7ci5kZWZhdWx0PWl9LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNTM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBOLE8sTCxJLFA9e307ZnVuY3Rpb24gbihlLHQpe2Zvcih2YXIgcixuLGEsbyxpLHMsbCxwLHUsYyxkPVAuX3RvUGl4ZWxzKGUpLGg9ZS53aWR0aCxtPWUuaGVpZ2h0LGY9aCptLHk9bmV3IEludDMyQXJyYXkoZiksZz0wO2c8ZjtnKyspeVtnXT1QLl9nZXRBUkdCKGQsZyk7dmFyIHYsYixfLHgsUz1uZXcgSW50MzJBcnJheShmKSx3PW5ldyBJbnQzMkFycmF5KGYpLE09bmV3IEludDMyQXJyYXkoZiksRT1uZXcgSW50MzJBcnJheShmKSxUPTA7Zm9yKCFmdW5jdGlvbihlKXt2YXIgdD0zLjUqZXwwO2lmKE4hPT0odD10PDE/MTp0PDI0OD90OjI0OCkpe089MSsoTj10KTw8MSxMPW5ldyBJbnQzMkFycmF5KE8pLEk9bmV3IEFycmF5KE8pO2Zvcih2YXIgcj0wO3I8TztyKyspSVtyXT1uZXcgSW50MzJBcnJheSgyNTYpO2Zvcih2YXIgbixhLG8saSxzPTEsbD10LTE7czx0O3MrKyl7TFt0K3NdPUxbbF09YT1sKmwsbz1JW3Qrc10saT1JW2wtLV07Zm9yKHZhciBwPTA7cDwyNTY7cCsrKW9bcF09aVtwXT1hKnB9bj1MW3RdPXQqdCxvPUlbdF07Zm9yKHZhciB1PTA7dTwyNTY7dSsrKW9bdV09bip1fX0odCksYj0wO2I8bTtiKyspe2Zvcih2PTA7djxoO3YrKyl7aWYobz1hPW49aT1yPTAsKHM9di1OKTwwKWM9LXMscz0wO2Vsc2V7aWYoaDw9cylicmVhaztjPTB9Zm9yKF89YztfPE8mJiEoaDw9cyk7XysrKXt2YXIgQz15W3MrVF07aSs9KHg9SVtfXSlbKC0xNjc3NzIxNiZDKT4+PjI0XSxuKz14WygxNjcxMTY4MCZDKT4+MTZdLGErPXhbKDY1MjgwJkMpPj44XSxvKz14WzI1NSZDXSxyKz1MW19dLHMrK31TW2w9VCt2XT1pL3Isd1tsXT1uL3IsTVtsXT1hL3IsRVtsXT1vL3J9VCs9aH1mb3IodT0ocD0tTikqaCxiPVQ9MDtiPG07YisrKXtmb3Iodj0wO3Y8aDt2Kyspe2lmKG89YT1uPWk9cj0wLHA8MCljPWw9LXAscz12O2Vsc2V7aWYobTw9cClicmVhaztjPTAsbD1wLHM9dit1fWZvcihfPWM7XzxPJiYhKG08PWwpO18rKylpKz0oeD1JW19dKVtTW3NdXSxuKz14W3dbc11dLGErPXhbTVtzXV0sbys9eFtFW3NdXSxyKz1MW19dLGwrKyxzKz1oO3lbditUXT1pL3I8PDI0fG4vcjw8MTZ8YS9yPDw4fG8vcn1UKz1oLHUrPWgscCsrfVAuX3NldFBpeGVscyhkLHkpfVAuX3RvUGl4ZWxzPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgSW1hZ2VEYXRhP2UuZGF0YTplLmdldENvbnRleHQoXCIyZFwiKS5nZXRJbWFnZURhdGEoMCwwLGUud2lkdGgsZS5oZWlnaHQpLmRhdGF9LFAuX2dldEFSR0I9ZnVuY3Rpb24oZSx0KXt2YXIgcj00KnQ7cmV0dXJuIGVbMytyXTw8MjQmNDI3ODE5MDA4MHxlW3JdPDwxNiYxNjcxMTY4MHxlWzErcl08PDgmNjUyODB8MjU1JmVbMityXX0sUC5fc2V0UGl4ZWxzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPTAsbj0wLGE9ZS5sZW5ndGg7bjxhO24rKyllWyhyPTQqbikrMF09KDE2NzExNjgwJnRbbl0pPj4+MTYsZVtyKzFdPSg2NTI4MCZ0W25dKT4+PjgsZVtyKzJdPTI1NSZ0W25dLGVbciszXT0oNDI3ODE5MDA4MCZ0W25dKT4+PjI0fSxQLl90b0ltYWdlRGF0YT1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEltYWdlRGF0YT9lOmUuZ2V0Q29udGV4dChcIjJkXCIpLmdldEltYWdlRGF0YSgwLDAsZS53aWR0aCxlLmhlaWdodCl9LFAuX2NyZWF0ZUltYWdlRGF0YT1mdW5jdGlvbihlLHQpe3JldHVybiBQLl90bXBDYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSxQLl90bXBDdHg9UC5fdG1wQ2FudmFzLmdldENvbnRleHQoXCIyZFwiKSx0aGlzLl90bXBDdHguY3JlYXRlSW1hZ2VEYXRhKGUsdCl9LFAuYXBwbHk9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUuZ2V0Q29udGV4dChcIjJkXCIpLGE9bi5nZXRJbWFnZURhdGEoMCwwLGUud2lkdGgsZS5oZWlnaHQpLG89dChhLHIpO28gaW5zdGFuY2VvZiBJbWFnZURhdGE/bi5wdXRJbWFnZURhdGEobywwLDAsMCwwLGUud2lkdGgsZS5oZWlnaHQpOm4ucHV0SW1hZ2VEYXRhKGEsMCwwLDAsMCxlLndpZHRoLGUuaGVpZ2h0KX0sUC50aHJlc2hvbGQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1QLl90b1BpeGVscyhlKTt2b2lkIDA9PT10JiYodD0uNSk7Zm9yKHZhciBuPU1hdGguZmxvb3IoMjU1KnQpLGE9MDthPHIubGVuZ3RoO2ErPTQpe3ZhciBvPXZvaWQgMDtvPW48PS4yMTI2KnJbYV0rLjcxNTIqclthKzFdKy4wNzIyKnJbYSsyXT8yNTU6MCxyW2FdPXJbYSsxXT1yW2ErMl09b319LFAuZ3JheT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9UC5fdG9QaXhlbHMoZSkscj0wO3I8dC5sZW5ndGg7cis9NCl7dmFyIG49LjIxMjYqdFtyXSsuNzE1Mip0W3IrMV0rLjA3MjIqdFtyKzJdO3Rbcl09dFtyKzFdPXRbcisyXT1ufX0sUC5vcGFxdWU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVAuX3RvUGl4ZWxzKGUpLHI9MDtyPHQubGVuZ3RoO3IrPTQpdFtyKzNdPTI1NTtyZXR1cm4gdH0sUC5pbnZlcnQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVAuX3RvUGl4ZWxzKGUpLHI9MDtyPHQubGVuZ3RoO3IrPTQpdFtyXT0yNTUtdFtyXSx0W3IrMV09MjU1LXRbcisxXSx0W3IrMl09MjU1LXRbcisyXX0sUC5wb3N0ZXJpemU9ZnVuY3Rpb24oZSx0KXt2YXIgcj1QLl90b1BpeGVscyhlKTtpZih0PDJ8fDI1NTx0KXRocm93IG5ldyBFcnJvcihcIkxldmVsIG11c3QgYmUgZ3JlYXRlciB0aGFuIDIgYW5kIGxlc3MgdGhhbiAyNTUgZm9yIHBvc3Rlcml6ZVwiKTtmb3IodmFyIG49dC0xLGE9MDthPHIubGVuZ3RoO2ErPTQpe3ZhciBvPXJbYV0saT1yW2ErMV0scz1yW2ErMl07clthXT0yNTUqKG8qdD4+OCkvbixyW2ErMV09MjU1KihpKnQ+PjgpL24sclthKzJdPTI1NSoocyp0Pj44KS9ufX0sUC5kaWxhdGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbixhLG8saSxzLGwscCx1LGMsZCxoLG0sZix5LGcsdj1QLl90b1BpeGVscyhlKSxiPTAsXz12Lmxlbmd0aD92Lmxlbmd0aC80OjAseD1uZXcgSW50MzJBcnJheShfKTtiPF87KWZvcihyPSh0PWIpK2Uud2lkdGg7YjxyOyluPWE9UC5fZ2V0QVJHQih2LGIpLChzPWItMSk8dCYmKHM9Yikscjw9KGk9YisxKSYmKGk9YiksKGw9Yi1lLndpZHRoKTwwJiYobD0wKSxfPD0ocD1iK2Uud2lkdGgpJiYocD1iKSxkPVAuX2dldEFSR0IodixsKSxjPVAuX2dldEFSR0IodixzKSxoPVAuX2dldEFSR0IodixwKSwobz03Nyoobj4+MTYmMjU1KSsxNTEqKG4+PjgmMjU1KSsyOCooMjU1Jm4pKTwoZj03NyooYz4+MTYmMjU1KSsxNTEqKGM+PjgmMjU1KSsyOCooMjU1JmMpKSYmKGE9YyxvPWYpLG88KG09NzcqKCh1PVAuX2dldEFSR0IodixpKSk+PjE2JjI1NSkrMTUxKih1Pj44JjI1NSkrMjgqKDI1NSZ1KSkmJihhPXUsbz1tKSxvPCh5PTc3KihkPj4xNiYyNTUpKzE1MSooZD4+OCYyNTUpKzI4KigyNTUmZCkpJiYoYT1kLG89eSksbzwoZz03NyooaD4+MTYmMjU1KSsxNTEqKGg+PjgmMjU1KSsyOCooMjU1JmgpKSYmKGE9aCxvPWcpLHhbYisrXT1hO1AuX3NldFBpeGVscyh2LHgpfSxQLmVyb2RlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyLG4sYSxvLGkscyxsLHAsdSxjLGQsaCxtLGYseSxnLHY9UC5fdG9QaXhlbHMoZSksYj0wLF89di5sZW5ndGg/di5sZW5ndGgvNDowLHg9bmV3IEludDMyQXJyYXkoXyk7YjxfOylmb3Iocj0odD1iKStlLndpZHRoO2I8cjspbj1hPVAuX2dldEFSR0IodixiKSwocz1iLTEpPHQmJihzPWIpLHI8PShpPWIrMSkmJihpPWIpLChsPWItZS53aWR0aCk8MCYmKGw9MCksXzw9KHA9YitlLndpZHRoKSYmKHA9YiksZD1QLl9nZXRBUkdCKHYsbCksYz1QLl9nZXRBUkdCKHYscyksaD1QLl9nZXRBUkdCKHYscCksKGY9NzcqKGM+PjE2JjI1NSkrMTUxKihjPj44JjI1NSkrMjgqKDI1NSZjKSk8KG89NzcqKG4+PjE2JjI1NSkrMTUxKihuPj44JjI1NSkrMjgqKDI1NSZuKSkmJihhPWMsbz1mKSwobT03NyooKHU9UC5fZ2V0QVJHQih2LGkpKT4+MTYmMjU1KSsxNTEqKHU+PjgmMjU1KSsyOCooMjU1JnUpKTxvJiYoYT11LG89bSksKHk9NzcqKGQ+PjE2JjI1NSkrMTUxKihkPj44JjI1NSkrMjgqKDI1NSZkKSk8byYmKGE9ZCxvPXkpLChnPTc3KihoPj4xNiYyNTUpKzE1MSooaD4+OCYyNTUpKzI4KigyNTUmaCkpPG8mJihhPWgsbz1nKSx4W2IrK109YTtQLl9zZXRQaXhlbHModix4KX0sUC5ibHVyPWZ1bmN0aW9uKGUsdCl7bihlLHQpfTt2YXIgYT1QO3IuZGVmYXVsdD1hfSx7fV0sNTQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBQPW4oZShcIi4uL2NvcmUvbWFpblwiKSksUj1uKGUoXCJvbWdnaWZcIikpO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIEQoZSl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLHI9bmV3IEFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKylyW3RdPWVbdF07cmV0dXJuIHJ9fShlKXx8ZnVuY3Rpb24oZSl7aWYoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKXx8XCJbb2JqZWN0IEFyZ3VtZW50c11cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSlyZXR1cm4gQXJyYXkuZnJvbShlKX0oZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpfSgpfVAuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlSW1hZ2U9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gUC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVJbWFnZVwiLGFyZ3VtZW50cyksbmV3IFAuZGVmYXVsdC5JbWFnZShlLHQpfSxQLmRlZmF1bHQucHJvdG90eXBlLnNhdmVDYW52YXM9ZnVuY3Rpb24oKXtQLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNhdmVDYW52YXNcIixhcmd1bWVudHMpO3ZhciBlLHQscixuLGE9W10uc2xpY2UuY2FsbChhcmd1bWVudHMpO3N3aXRjaChhcmd1bWVudHNbMF1pbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50PyhlPWFyZ3VtZW50c1swXSxhLnNoaWZ0KCkpOmFyZ3VtZW50c1swXWluc3RhbmNlb2YgUC5kZWZhdWx0LkVsZW1lbnQ/KGU9YXJndW1lbnRzWzBdLmVsdCxhLnNoaWZ0KCkpOmU9dGhpcy5fY3VyRWxlbWVudCYmdGhpcy5fY3VyRWxlbWVudC5lbHQsMTw9YS5sZW5ndGgmJih0PWFbMF0pLDI8PWEubGVuZ3RoJiYocj1hWzFdKSxyPXJ8fFAuZGVmYXVsdC5wcm90b3R5cGUuX2NoZWNrRmlsZUV4dGVuc2lvbih0LHIpWzFdfHxcInBuZ1wiKXtkZWZhdWx0Om49XCJpbWFnZS9wbmdcIjticmVhaztjYXNlXCJqcGVnXCI6Y2FzZVwianBnXCI6bj1cImltYWdlL2pwZWdcIn1lLnRvQmxvYihmdW5jdGlvbihlKXtQLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShlLHQscil9LG4pfSxQLmRlZmF1bHQucHJvdG90eXBlLnNhdmVHaWY9ZnVuY3Rpb24obSxlKXt2YXIgZj1tLmdpZlByb3BlcnRpZXMsdD1mLmxvb3BMaW1pdDsxPT09dD90PW51bGw6bnVsbD09PXQmJih0PTApO2Zvcih2YXIgcj1uZXcgVWludDhBcnJheShtLndpZHRoKm0uaGVpZ2h0KmYubnVtRnJhbWVzKSx5PVtdLG49e30sYT0wO2E8Zi5udW1GcmFtZXM7YSsrKXtmb3IodmFyIG89bmV3IFNldCxpPWYuZnJhbWVzW2FdLmltYWdlLmRhdGEscz1pLmxlbmd0aCxsPW5ldyBVaW50MzJBcnJheShtLndpZHRoKm0uaGVpZ2h0KSxwPTAsdT0wO3A8cztwKz00LHUrKyl7dmFyIGM9aVtwKzBdPDwxNnxpW3ArMV08PDh8aVtwKzJdPDwwO28uYWRkKGMpLGxbdV09Y312YXIgZD1EKG8pLnNvcnQoKS50b1N0cmluZygpO3ZvaWQgMD09PW5bZF0/bltkXT17ZnJlcToxLGZyYW1lczpbYV19OihuW2RdLmZyZXErPTEsbltkXS5mcmFtZXMucHVzaChhKSkseS5wdXNoKGwpfXZhciBnPVtdLGg9T2JqZWN0LmtleXMobikuc29ydChmdW5jdGlvbihlLHQpe3JldHVybiBuW3RdLmZyZXEtbltlXS5mcmVxfSksdj1oWzBdLnNwbGl0KFwiLFwiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUpfSk7Zz1nLmNvbmNhdChuW3ZdLmZyYW1lcyk7Zm9yKHZhciBiPW5ldyBTZXQodiksXz0xO188aC5sZW5ndGg7XysrKXt2YXIgeD1oW19dLnNwbGl0KFwiLFwiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUpfSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFiLmhhcyhlKX0pO2lmKHYubGVuZ3RoK3gubGVuZ3RoPD0yNTYpe2Zvcih2YXIgUz0wO1M8eC5sZW5ndGg7UysrKXYucHVzaCh4W1NdKSxiLmFkZCh4W1NdKTtnPWcuY29uY2F0KG5baFtfXV0uZnJhbWVzKX19Zz1uZXcgU2V0KGcpO2Zvcih2YXIgdz17fSxNPTA7TTx2Lmxlbmd0aDtNKyspd1t2W01dXXx8KHdbdltNXV09TSk7Zm9yKHZhciBFPTE7RTx2Lmxlbmd0aDspRTw8PTE7di5sZW5ndGg9RTtmb3IodmFyIFQ9e2xvb3A6dCxwYWxldHRlOm5ldyBVaW50MzJBcnJheSh2KX0sQz1uZXcgUi5kZWZhdWx0LkdpZldyaXRlcihyLG0ud2lkdGgsbS5oZWlnaHQsVCksTj17fSxPPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0hZy5oYXMoZSkscj10P1tdOnYsbj1uZXcgVWludDhBcnJheShtLndpZHRoKm0uaGVpZ2h0KSxhPXt9LG89bmV3IFNldCxpPTA7aTx5W2VdLmxlbmd0aDtpKyspe3ZhciBzPXlbZV1baV07dD8odm9pZCAwPT09YVtzXSYmKGFbc109ci5sZW5ndGgsci5wdXNoKHMpKSxuW2ldPWFbc10pOm5baV09d1tzXSwwPGUmJnlbZS0xXVtpXSE9PXMmJm8uYWRkKHMpfXZhciBsPXt9LHA9ci5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIW8uaGFzKGUpfSk7aWYoMDxwLmxlbmd0aCl7dmFyIHU9cFswXSxjPXQ/YVt1XTp3W3VdO2lmKDA8ZSl7Zm9yKHZhciBkPTA7ZDx5W2VdLmxlbmd0aDtkKyspeVtlLTFdW2RdPT09eVtlXVtkXSYmKG5bZF09Yyk7bC50cmFuc3BhcmVudD1jLE4uZnJhbWVPcHRzLmRpc3Bvc2FsPTF9fWlmKGwuZGVsYXk9Zi5mcmFtZXNbZV0uZGVsYXkvMTAsdCl7Zm9yKHZhciBoPTE7aDxyLmxlbmd0aDspaDw8PTE7ci5sZW5ndGg9aCxsLnBhbGV0dGU9bmV3IFVpbnQzMkFycmF5KHIpfTA8ZSYmQy5hZGRGcmFtZSgwLDAsbS53aWR0aCxtLmhlaWdodCxOLnBpeGVsUGFsZXR0ZUluZGV4LE4uZnJhbWVPcHRzKSxOPXtwaXhlbFBhbGV0dGVJbmRleDpuLGZyYW1lT3B0czpsfX0sTD0wO0w8Zi5udW1GcmFtZXM7TCsrKU8oTCk7Ti5mcmFtZU9wdHMuZGlzcG9zYWw9MSxDLmFkZEZyYW1lKDAsMCxtLndpZHRoLG0uaGVpZ2h0LE4ucGl4ZWxQYWxldHRlSW5kZXgsTi5mcmFtZU9wdHMpO3ZhciBJPW5ldyBCbG9iKFtyLnNsaWNlKDAsQy5lbmQoKSldLHt0eXBlOlwiaW1hZ2UvZ2lmXCJ9KTtQLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShJLGUsXCJnaWZcIil9LFAuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUZyYW1lcz1mdW5jdGlvbihlLHQscixuLGkpe1AuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2F2ZUZyYW1lc1wiLGFyZ3VtZW50cyk7dmFyIGE9cnx8MzthPVAuZGVmYXVsdC5wcm90b3R5cGUuY29uc3RyYWluKGEsMCwxNSksYSo9MWUzO3ZhciBvPW58fDE1O289UC5kZWZhdWx0LnByb3RvdHlwZS5jb25zdHJhaW4obywwLDIyKTt2YXIgcz0wLGw9UC5kZWZhdWx0LnByb3RvdHlwZS5fbWFrZUZyYW1lLHA9dGhpcy5fY3VyRWxlbWVudC5lbHQsdT1bXSxjPXNldEludGVydmFsKGZ1bmN0aW9uKCl7dS5wdXNoKGwoZStzLHQscCkpLHMrK30sMWUzL28pO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihjbGVhckludGVydmFsKGMpLGkpaSh1KTtlbHNle3ZhciBlPSEwLHQ9ITEscj12b2lkIDA7dHJ5e2Zvcih2YXIgbixhPXVbU3ltYm9sLml0ZXJhdG9yXSgpOyEoZT0obj1hLm5leHQoKSkuZG9uZSk7ZT0hMCl7dmFyIG89bi52YWx1ZTtQLmRlZmF1bHQucHJvdG90eXBlLmRvd25sb2FkRmlsZShvLmltYWdlRGF0YSxvLmZpbGVuYW1lLG8uZXh0KX19Y2F0Y2goZSl7dD0hMCxyPWV9ZmluYWxseXt0cnl7ZXx8bnVsbD09YS5yZXR1cm58fGEucmV0dXJuKCl9ZmluYWxseXtpZih0KXRocm93IHJ9fX11PVtdfSxhKy4wMSl9LFAuZGVmYXVsdC5wcm90b3R5cGUuX21ha2VGcmFtZT1mdW5jdGlvbihlLHQscil7dmFyIG4sYTtpZihuPXRoaXM/dGhpcy5fY3VyRWxlbWVudC5lbHQ6cix0KXN3aXRjaCh0LnRvTG93ZXJDYXNlKCkpe2Nhc2VcInBuZ1wiOmE9XCJpbWFnZS9wbmdcIjticmVhaztjYXNlXCJqcGVnXCI6Y2FzZVwianBnXCI6YT1cImltYWdlL2pwZWdcIjticmVhaztkZWZhdWx0OmE9XCJpbWFnZS9wbmdcIn1lbHNlIHQ9XCJwbmdcIixhPVwiaW1hZ2UvcG5nXCI7dmFyIG89bi50b0RhdGFVUkwoYSk7bz1vLnJlcGxhY2UoYSxcImltYWdlL29jdGV0LXN0cmVhbVwiKTt2YXIgaT17fTtyZXR1cm4gaS5pbWFnZURhdGE9byxpLmZpbGVuYW1lPWUsaS5leHQ9dCxpfTt2YXIgYT1QLmRlZmF1bHQ7ci5kZWZhdWx0PWF9LHtcIi4uL2NvcmUvbWFpblwiOjMyLG9tZ2dpZjoxMn1dLDU1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgeD1hKGUoXCIuLi9jb3JlL21haW5cIikpLGM9YShlKFwiLi9maWx0ZXJzXCIpKSxTPWEoZShcIi4uL2NvcmUvaGVscGVyc1wiKSksbj1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKSxtPWEoZShcIm9tZ2dpZlwiKSk7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBhKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiB3KGUsdCl7cmV0dXJuIDA8ZSYmZTx0P2U6dH1lKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIikseC5kZWZhdWx0LnByb3RvdHlwZS5sb2FkSW1hZ2U9ZnVuY3Rpb24obixhLG8pe3guZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibG9hZEltYWdlXCIsYXJndW1lbnRzKTt2YXIgaT1uZXcgeC5kZWZhdWx0LkltYWdlKDEsMSx0aGlzKSxzPXRoaXMsZT1uZXcgUmVxdWVzdChuLHttZXRob2Q6XCJHRVRcIixtb2RlOlwiY29yc1wifSk7cmV0dXJuIGZldGNoKG4sZSkudGhlbihmdW5jdGlvbihlKXt2YXIgdD1lLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpO2lmKG51bGw9PT10JiZjb25zb2xlLndhcm4oXCJUaGUgaW1hZ2UgeW91IGxvYWRlZCBkb2VzIG5vdCBoYXZlIGEgQ29udGVudC1UeXBlIGhlYWRlci4gSWYgeW91IGFyZSB1c2luZyB0aGUgb25saW5lIGVkaXRvciBjb25zaWRlciByZXVwbG9hZGluZyB0aGUgYXNzZXQuXCIpLHQmJnQuaW5jbHVkZXMoXCJpbWFnZS9naWZcIikpZS5hcnJheUJ1ZmZlcigpLnRoZW4oZnVuY3Rpb24oZSl7ZSYmZnVuY3Rpb24oZSxyLHQsbixhKXt2YXIgbz1uZXcgbS5kZWZhdWx0LkdpZlJlYWRlcihlKTtyLndpZHRoPXIuY2FudmFzLndpZHRoPW8ud2lkdGgsci5oZWlnaHQ9ci5jYW52YXMuaGVpZ2h0PW8uaGVpZ2h0O3ZhciBpPVtdLHM9by5udW1GcmFtZXMoKSxsPW5ldyBVaW50OENsYW1wZWRBcnJheShyLndpZHRoKnIuaGVpZ2h0KjQpO2lmKDE8cyl7Zm9yKHZhciBwPWZ1bmN0aW9uKGUsdCl7dHJ5e3QuZGVjb2RlQW5kQmxpdEZyYW1lUkdCQShlLGwpfWNhdGNoKGUpe3guZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDgsci5zcmMpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bihlKTpjb25zb2xlLmVycm9yKGUpfX0sdT0wO3U8czt1Kyspe3ZhciBjPW8uZnJhbWVJbmZvKHUpOzE9PT1vLmZyYW1lSW5mbyh1KS5kaXNwb3NhbCYmMDx1P3IuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKGlbdS0xXS5pbWFnZSwwLDApOihyLmRyYXdpbmdDb250ZXh0LmNsZWFyUmVjdCgwLDAsci53aWR0aCxyLmhlaWdodCksbD1uZXcgVWludDhDbGFtcGVkQXJyYXkoci53aWR0aCpyLmhlaWdodCo0KSkscCh1LG8pO3ZhciBkPW5ldyBJbWFnZURhdGEobCxyLndpZHRoLHIuaGVpZ2h0KTtyLmRyYXdpbmdDb250ZXh0LnB1dEltYWdlRGF0YShkLDAsMCksaS5wdXNoKHtpbWFnZTpyLmRyYXdpbmdDb250ZXh0LmdldEltYWdlRGF0YSgwLDAsci53aWR0aCxyLmhlaWdodCksZGVsYXk6MTAqYy5kZWxheX0pfXZhciBoPW8ubG9vcENvdW50KCk7bnVsbD09PWg/aD0xOjA9PT1oJiYoaD1udWxsKSxyLmdpZlByb3BlcnRpZXM9e2Rpc3BsYXlJbmRleDowLGxvb3BMaW1pdDpoLGxvb3BDb3VudDowLGZyYW1lczppLG51bUZyYW1lczpzLHBsYXlpbmc6ITAsdGltZURpc3BsYXllZDowfX1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZ0KHIpO2EoKX0obmV3IFVpbnQ4QXJyYXkoZSksaSxhLG8sZnVuY3Rpb24oZSl7cy5fZGVjcmVtZW50UHJlbG9hZCgpfS5iaW5kKHMpKX0sZnVuY3Rpb24oZSl7XCJmdW5jdGlvblwiPT10eXBlb2Ygbz9vKGUpOmNvbnNvbGUuZXJyb3IoZSl9KTtlbHNle3ZhciByPW5ldyBJbWFnZTtyLm9ubG9hZD1mdW5jdGlvbigpe2kud2lkdGg9aS5jYW52YXMud2lkdGg9ci53aWR0aCxpLmhlaWdodD1pLmNhbnZhcy5oZWlnaHQ9ci5oZWlnaHQsaS5kcmF3aW5nQ29udGV4dC5kcmF3SW1hZ2UociwwLDApLGkubW9kaWZpZWQ9ITAsXCJmdW5jdGlvblwiPT10eXBlb2YgYSYmYShpKSxzLl9kZWNyZW1lbnRQcmVsb2FkKCl9LHIub25lcnJvcj1mdW5jdGlvbihlKXt4LmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcigwLHIuc3JjKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvP28oZSk6Y29uc29sZS5lcnJvcihlKX0sMCE9PW4uaW5kZXhPZihcImRhdGE6aW1hZ2UvXCIpJiYoci5jcm9zc09yaWdpbj1cIkFub255bW91c1wiKSxyLnNyYz1ufWkubW9kaWZpZWQ9ITB9KSxpfSx4LmRlZmF1bHQucHJvdG90eXBlLmltYWdlPWZ1bmN0aW9uKGUsdCxyLG4sYSxvLGkscyxsKXt4LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImltYWdlXCIsYXJndW1lbnRzKTt2YXIgcD1lLndpZHRoLHU9ZS5oZWlnaHQ7ZS5lbHQmJmUuZWx0LnZpZGVvV2lkdGgmJiFlLmNhbnZhcyYmKHA9ZS5lbHQudmlkZW9XaWR0aCx1PWUuZWx0LnZpZGVvSGVpZ2h0KTt2YXIgYz10LGQ9cixoPW58fHAsbT1hfHx1LGY9b3x8MCx5PWl8fDAsZz1zfHxwLHY9bHx8dTtnPXcoZyxwKSx2PXcodix1KTt2YXIgYj0xO2UuZWx0JiYhZS5jYW52YXMmJmUuZWx0LnN0eWxlLndpZHRoJiYoYj1lLmVsdC52aWRlb1dpZHRoJiYhbj9lLmVsdC52aWRlb1dpZHRoOmUuZWx0LndpZHRoLGIvPXBhcnNlSW50KGUuZWx0LnN0eWxlLndpZHRoLDEwKSksZio9Yix5Kj1iLHYqPWIsZyo9Yjt2YXIgXz1TLmRlZmF1bHQubW9kZUFkanVzdChjLGQsaCxtLHRoaXMuX3JlbmRlcmVyLl9pbWFnZU1vZGUpO3RoaXMuX3JlbmRlcmVyLmltYWdlKGUsZix5LGcsdixfLngsXy55LF8udyxfLmgpfSx4LmRlZmF1bHQucHJvdG90eXBlLnRpbnQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt4LmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRpbnRcIix0KTt2YXIgbj10aGlzLmNvbG9yLmFwcGx5KHRoaXMsdCk7dGhpcy5fcmVuZGVyZXIuX3RpbnQ9bi5sZXZlbHN9LHguZGVmYXVsdC5wcm90b3R5cGUubm9UaW50PWZ1bmN0aW9uKCl7dGhpcy5fcmVuZGVyZXIuX3RpbnQ9bnVsbH0seC5kZWZhdWx0LnByb3RvdHlwZS5fZ2V0VGludGVkSW1hZ2VDYW52YXM9ZnVuY3Rpb24oZSl7aWYoIWUuY2FudmFzKXJldHVybiBlO3ZhciB0PWMuZGVmYXVsdC5fdG9QaXhlbHMoZS5jYW52YXMpLHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtyLndpZHRoPWUuY2FudmFzLndpZHRoLHIuaGVpZ2h0PWUuY2FudmFzLmhlaWdodDtmb3IodmFyIG49ci5nZXRDb250ZXh0KFwiMmRcIiksYT1uLmNyZWF0ZUltYWdlRGF0YShlLmNhbnZhcy53aWR0aCxlLmNhbnZhcy5oZWlnaHQpLG89YS5kYXRhLGk9MDtpPHQubGVuZ3RoO2krPTQpe3ZhciBzPXRbaV0sbD10W2krMV0scD10W2krMl0sdT10W2krM107b1tpXT1zKnRoaXMuX3JlbmRlcmVyLl90aW50WzBdLzI1NSxvW2krMV09bCp0aGlzLl9yZW5kZXJlci5fdGludFsxXS8yNTUsb1tpKzJdPXAqdGhpcy5fcmVuZGVyZXIuX3RpbnRbMl0vMjU1LG9baSszXT11KnRoaXMuX3JlbmRlcmVyLl90aW50WzNdLzI1NX1yZXR1cm4gbi5wdXRJbWFnZURhdGEoYSwwLDApLHJ9LHguZGVmYXVsdC5wcm90b3R5cGUuaW1hZ2VNb2RlPWZ1bmN0aW9uKGUpe3guZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiaW1hZ2VNb2RlXCIsYXJndW1lbnRzKSxlIT09bi5DT1JORVImJmUhPT1uLkNPUk5FUlMmJmUhPT1uLkNFTlRFUnx8KHRoaXMuX3JlbmRlcmVyLl9pbWFnZU1vZGU9ZSl9O3ZhciBvPXguZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCI6MjQsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiOjI1LFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCI6MjcsXCIuLi9jb3JlL2hlbHBlcnNcIjoyOCxcIi4uL2NvcmUvbWFpblwiOjMyLFwiLi9maWx0ZXJzXCI6NTMsb21nZ2lmOjEyfV0sNTY6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBhPW8oZShcIi4uL2NvcmUvbWFpblwiKSksbj1vKGUoXCIuL2ZpbHRlcnNcIikpO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWEuZGVmYXVsdC5JbWFnZT1mdW5jdGlvbihlLHQpe3RoaXMud2lkdGg9ZSx0aGlzLmhlaWdodD10LHRoaXMuY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksdGhpcy5jYW52YXMud2lkdGg9dGhpcy53aWR0aCx0aGlzLmNhbnZhcy5oZWlnaHQ9dGhpcy5oZWlnaHQsdGhpcy5kcmF3aW5nQ29udGV4dD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiksKHRoaXMuX3BpeGVsc1N0YXRlPXRoaXMpLl9waXhlbERlbnNpdHk9MSx0aGlzLmdpZlByb3BlcnRpZXM9bnVsbCx0aGlzLl9tb2RpZmllZD0hMSx0aGlzLnBpeGVscz1bXX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5fYW5pbWF0ZUdpZj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmdpZlByb3BlcnRpZXM7aWYodC5wbGF5aW5nKXt0LnRpbWVEaXNwbGF5ZWQrPWUuZGVsdGFUaW1lO3ZhciByPXQuZnJhbWVzW3QuZGlzcGxheUluZGV4XS5kZWxheTtpZih0LnRpbWVEaXNwbGF5ZWQ+PXIpe3ZhciBuPU1hdGguZmxvb3IodC50aW1lRGlzcGxheWVkL3IpO2lmKHQudGltZURpc3BsYXllZD0wLHQuZGlzcGxheUluZGV4Kz1uLHQubG9vcENvdW50PU1hdGguZmxvb3IodC5kaXNwbGF5SW5kZXgvdC5udW1GcmFtZXMpLG51bGwhPT10Lmxvb3BMaW1pdCYmdC5sb29wQ291bnQ+PXQubG9vcExpbWl0KXQucGxheWluZz0hMTtlbHNle3ZhciBhPXQuZGlzcGxheUluZGV4JXQubnVtRnJhbWVzO3RoaXMuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKHQuZnJhbWVzW2FdLmltYWdlLDAsMCksdC5kaXNwbGF5SW5kZXg9YSx0aGlzLnNldE1vZGlmaWVkKCEwKX19fX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5fc2V0UHJvcGVydHk9ZnVuY3Rpb24oZSx0KXt0aGlzW2VdPXQsdGhpcy5zZXRNb2RpZmllZCghMCl9LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUubG9hZFBpeGVscz1mdW5jdGlvbigpe2EuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5sb2FkUGl4ZWxzLmNhbGwodGhpcyksdGhpcy5zZXRNb2RpZmllZCghMCl9LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUudXBkYXRlUGl4ZWxzPWZ1bmN0aW9uKGUsdCxyLG4pe2EuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS51cGRhdGVQaXhlbHMuY2FsbCh0aGlzLGUsdCxyLG4pLHRoaXMuc2V0TW9kaWZpZWQoITApfSxhLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLmdldD1mdW5jdGlvbihlLHQscixuKXtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJwNS5JbWFnZS5nZXRcIixhcmd1bWVudHMpLGEuZGVmYXVsdC5SZW5kZXJlcjJELnByb3RvdHlwZS5nZXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxhLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLl9nZXRQaXhlbD1hLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuX2dldFBpeGVsLGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCxyKXthLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuc2V0LmNhbGwodGhpcyxlLHQsciksdGhpcy5zZXRNb2RpZmllZCghMCl9LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKGUsdCl7MD09PWUmJjA9PT10PyhlPXRoaXMuY2FudmFzLndpZHRoLHQ9dGhpcy5jYW52YXMuaGVpZ2h0KTowPT09ZT9lPXRoaXMuY2FudmFzLndpZHRoKnQvdGhpcy5jYW52YXMuaGVpZ2h0OjA9PT10JiYodD10aGlzLmNhbnZhcy5oZWlnaHQqZS90aGlzLmNhbnZhcy53aWR0aCksZT1NYXRoLmZsb29yKGUpLHQ9TWF0aC5mbG9vcih0KTt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2lmKHIud2lkdGg9ZSxyLmhlaWdodD10LHRoaXMuZ2lmUHJvcGVydGllcylmb3IodmFyIG49dGhpcy5naWZQcm9wZXJ0aWVzLGE9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9MCxuPTA7bjx0LmhlaWdodDtuKyspZm9yKHZhciBhPTA7YTx0LndpZHRoO2ErKyl7dmFyIG89TWF0aC5mbG9vcihhKmUud2lkdGgvdC53aWR0aCksaT00KihNYXRoLmZsb29yKG4qZS5oZWlnaHQvdC5oZWlnaHQpKmUud2lkdGgrbyk7dC5kYXRhW3IrK109ZS5kYXRhW2krK10sdC5kYXRhW3IrK109ZS5kYXRhW2krK10sdC5kYXRhW3IrK109ZS5kYXRhW2krK10sdC5kYXRhW3IrK109ZS5kYXRhW2krK119fSxvPTA7bzxuLm51bUZyYW1lcztvKyspe3ZhciBpPXRoaXMuZHJhd2luZ0NvbnRleHQuY3JlYXRlSW1hZ2VEYXRhKGUsdCk7YShuLmZyYW1lc1tvXS5pbWFnZSxpKSxuLmZyYW1lc1tvXS5pbWFnZT1pfXIuZ2V0Q29udGV4dChcIjJkXCIpLmRyYXdJbWFnZSh0aGlzLmNhbnZhcywwLDAsdGhpcy5jYW52YXMud2lkdGgsdGhpcy5jYW52YXMuaGVpZ2h0LDAsMCxyLndpZHRoLHIuaGVpZ2h0KSx0aGlzLmNhbnZhcy53aWR0aD10aGlzLndpZHRoPWUsdGhpcy5jYW52YXMuaGVpZ2h0PXRoaXMuaGVpZ2h0PXQsdGhpcy5kcmF3aW5nQ29udGV4dC5kcmF3SW1hZ2UociwwLDAsZSx0LDAsMCxlLHQpLDA8dGhpcy5waXhlbHMubGVuZ3RoJiZ0aGlzLmxvYWRQaXhlbHMoKSx0aGlzLnNldE1vZGlmaWVkKCEwKX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07YS5kZWZhdWx0LnByb3RvdHlwZS5jb3B5LmFwcGx5KHRoaXMsdCl9LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUubWFzaz1mdW5jdGlvbihlKXt2b2lkIDA9PT1lJiYoZT10aGlzKTt2YXIgdD10aGlzLmRyYXdpbmdDb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbixyPTE7ZSBpbnN0YW5jZW9mIGEuZGVmYXVsdC5SZW5kZXJlciYmKHI9ZS5fcEluc3QuX3BpeGVsRGVuc2l0eSk7dmFyIG49W2UsMCwwLHIqZS53aWR0aCxyKmUuaGVpZ2h0LDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0XTt0aGlzLmRyYXdpbmdDb250ZXh0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj1cImRlc3RpbmF0aW9uLWluXCIsYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5jb3B5LmFwcGx5KHRoaXMsbiksdGhpcy5kcmF3aW5nQ29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249dCx0aGlzLnNldE1vZGlmaWVkKCEwKX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5maWx0ZXI9ZnVuY3Rpb24oZSx0KXtuLmRlZmF1bHQuYXBwbHkodGhpcy5jYW52YXMsbi5kZWZhdWx0W2VdLHQpLHRoaXMuc2V0TW9kaWZpZWQoITApfSxhLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLmJsZW5kPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07YS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJwNS5JbWFnZS5ibGVuZFwiLGFyZ3VtZW50cyksYS5kZWZhdWx0LnByb3RvdHlwZS5ibGVuZC5hcHBseSh0aGlzLHQpLHRoaXMuc2V0TW9kaWZpZWQoITApfSxhLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLnNldE1vZGlmaWVkPWZ1bmN0aW9uKGUpe3RoaXMuX21vZGlmaWVkPWV9LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuaXNNb2RpZmllZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb2RpZmllZH0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5zYXZlPWZ1bmN0aW9uKGUsdCl7dGhpcy5naWZQcm9wZXJ0aWVzP2EuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUdpZih0aGlzLGUpOmEuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUNhbnZhcyh0aGlzLmNhbnZhcyxlLHQpfSxhLmRlZmF1bHQuSW1hZ2UucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7aWYodGhpcy5naWZQcm9wZXJ0aWVzKXt2YXIgZT10aGlzLmdpZlByb3BlcnRpZXM7ZS5wbGF5aW5nPSEwLGUudGltZVNpbmNlU3RhcnQ9MCxlLnRpbWVEaXNwbGF5ZWQ9MCxlLmxvb3BDb3VudD0wLGUuZGlzcGxheUluZGV4PTAsdGhpcy5kcmF3aW5nQ29udGV4dC5wdXRJbWFnZURhdGEoZS5mcmFtZXNbMF0uaW1hZ2UsMCwwKX19LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUuZ2V0Q3VycmVudEZyYW1lPWZ1bmN0aW9uKCl7aWYodGhpcy5naWZQcm9wZXJ0aWVzKXt2YXIgZT10aGlzLmdpZlByb3BlcnRpZXM7cmV0dXJuIGUuZGlzcGxheUluZGV4JWUubnVtRnJhbWVzfX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5zZXRGcmFtZT1mdW5jdGlvbihlKXtpZih0aGlzLmdpZlByb3BlcnRpZXMpe3ZhciB0PXRoaXMuZ2lmUHJvcGVydGllcztlPHQubnVtRnJhbWVzJiYwPD1lPyh0LnRpbWVEaXNwbGF5ZWQ9MCx0LmRpc3BsYXlJbmRleD1lLHRoaXMuZHJhd2luZ0NvbnRleHQucHV0SW1hZ2VEYXRhKHQuZnJhbWVzW2VdLmltYWdlLDAsMCkpOmNvbnNvbGUubG9nKFwiQ2Fubm90IHNldCBHSUYgdG8gYSBmcmFtZSBudW1iZXIgdGhhdCBpcyBoaWdoZXIgdGhhbiB0b3RhbCBudW1iZXIgb2YgZnJhbWVzIG9yIGJlbG93IHplcm8uXCIpfX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5udW1GcmFtZXM9ZnVuY3Rpb24oKXtpZih0aGlzLmdpZlByb3BlcnRpZXMpcmV0dXJuIHRoaXMuZ2lmUHJvcGVydGllcy5udW1GcmFtZXN9LGEuZGVmYXVsdC5JbWFnZS5wcm90b3R5cGUucGxheT1mdW5jdGlvbigpe3RoaXMuZ2lmUHJvcGVydGllcyYmKHRoaXMuZ2lmUHJvcGVydGllcy5wbGF5aW5nPSEwKX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3RoaXMuZ2lmUHJvcGVydGllcyYmKHRoaXMuZ2lmUHJvcGVydGllcy5wbGF5aW5nPSExKX0sYS5kZWZhdWx0LkltYWdlLnByb3RvdHlwZS5kZWxheT1mdW5jdGlvbihlLHQpe2lmKHRoaXMuZ2lmUHJvcGVydGllcyl7dmFyIHI9dGhpcy5naWZQcm9wZXJ0aWVzO2lmKHQ8ci5udW1GcmFtZXMmJjA8PXQpci5mcmFtZXNbdF0uZGVsYXk9ZTtlbHNle3ZhciBuPSEwLGE9ITEsbz12b2lkIDA7dHJ5e2Zvcih2YXIgaSxzPXIuZnJhbWVzW1N5bWJvbC5pdGVyYXRvcl0oKTshKG49KGk9cy5uZXh0KCkpLmRvbmUpO249ITApe2kudmFsdWUuZGVsYXk9ZX19Y2F0Y2goZSl7YT0hMCxvPWV9ZmluYWxseXt0cnl7bnx8bnVsbD09cy5yZXR1cm58fHMucmV0dXJuKCl9ZmluYWxseXtpZihhKXRocm93IG99fX19fTt2YXIgaT1hLmRlZmF1bHQuSW1hZ2U7ci5kZWZhdWx0PWl9LHtcIi4uL2NvcmUvbWFpblwiOjMyLFwiLi9maWx0ZXJzXCI6NTN9XSw1NzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIGg9YShlKFwiLi4vY29yZS9tYWluXCIpKSxuPWEoZShcIi4vZmlsdGVyc1wiKSk7ZnVuY3Rpb24gYShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZShcIi4uL2NvbG9yL3A1LkNvbG9yXCIpLGguZGVmYXVsdC5wcm90b3R5cGUucGl4ZWxzPVtdLGguZGVmYXVsdC5wcm90b3R5cGUuYmxlbmQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTt2YXIgbjsoaC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJibGVuZFwiLHQpLHRoaXMuX3JlbmRlcmVyKT8obj10aGlzLl9yZW5kZXJlcikuYmxlbmQuYXBwbHkobix0KTpoLmRlZmF1bHQuUmVuZGVyZXIyRC5wcm90b3R5cGUuYmxlbmQuYXBwbHkodGhpcyx0KX0saC5kZWZhdWx0LnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07dmFyIG4sYSxvLGkscyxsLHAsdSxjO2lmKGguZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY29weVwiLHQpLDk9PT10Lmxlbmd0aCluPXRbMF0sYT10WzFdLG89dFsyXSxpPXRbM10scz10WzRdLGw9dFs1XSxwPXRbNl0sdT10WzddLGM9dFs4XTtlbHNle2lmKDghPT10Lmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJTaWduYXR1cmUgbm90IHN1cHBvcnRlZFwiKTtuPXRoaXMsYT10WzBdLG89dFsxXSxpPXRbMl0scz10WzNdLGw9dFs0XSxwPXRbNV0sdT10WzZdLGM9dFs3XX1oLmRlZmF1bHQucHJvdG90eXBlLl9jb3B5SGVscGVyKHRoaXMsbixhLG8saSxzLGwscCx1LGMpfSxoLmRlZmF1bHQucHJvdG90eXBlLl9jb3B5SGVscGVyPWZ1bmN0aW9uKGUsdCxyLG4sYSxvLGkscyxsLHApe3QubG9hZFBpeGVscygpO3ZhciB1PXQuY2FudmFzLndpZHRoL3Qud2lkdGgsYz0wLGQ9MDt0Ll9yZW5kZXJlciYmdC5fcmVuZGVyZXIuaXNQM0QmJihjPXQud2lkdGgvMixkPXQuaGVpZ2h0LzIpLGUuX3JlbmRlcmVyJiZlLl9yZW5kZXJlci5pc1AzRD9oLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuaW1hZ2UuY2FsbChlLl9yZW5kZXJlcix0LHIrYyxuK2QsYSxvLGkscyxsLHApOmUuZHJhd2luZ0NvbnRleHQuZHJhd0ltYWdlKHQuY2FudmFzLHUqKHIrYyksdSoobitkKSx1KmEsdSpvLGkscyxsLHApfSxoLmRlZmF1bHQucHJvdG90eXBlLmZpbHRlcj1mdW5jdGlvbihlLHQpe2guZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZmlsdGVyXCIsYXJndW1lbnRzKSx2b2lkIDAhPT10aGlzLmNhbnZhcz9uLmRlZmF1bHQuYXBwbHkodGhpcy5jYW52YXMsbi5kZWZhdWx0W2VdLHQpOm4uZGVmYXVsdC5hcHBseSh0aGlzLmVsdCxuLmRlZmF1bHRbZV0sdCl9LGguZGVmYXVsdC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhO3JldHVybiBoLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImdldFwiLGFyZ3VtZW50cyksKGE9dGhpcy5fcmVuZGVyZXIpLmdldC5hcHBseShhLGFyZ3VtZW50cyl9LGguZGVmYXVsdC5wcm90b3R5cGUubG9hZFBpeGVscz1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2guZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibG9hZFBpeGVsc1wiLHQpLHRoaXMuX3JlbmRlcmVyLmxvYWRQaXhlbHMoKX0saC5kZWZhdWx0LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0LHIpe3RoaXMuX3JlbmRlcmVyLnNldChlLHQscil9LGguZGVmYXVsdC5wcm90b3R5cGUudXBkYXRlUGl4ZWxzPWZ1bmN0aW9uKGUsdCxyLG4pe2guZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidXBkYXRlUGl4ZWxzXCIsYXJndW1lbnRzKSwwIT09dGhpcy5waXhlbHMubGVuZ3RoJiZ0aGlzLl9yZW5kZXJlci51cGRhdGVQaXhlbHMoZSx0LHIsbil9O3ZhciBvPWguZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29sb3IvcDUuQ29sb3JcIjoyMCxcIi4uL2NvcmUvbWFpblwiOjMyLFwiLi9maWx0ZXJzXCI6NTN9XSw1ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIGc9bihlKFwiLi4vY29yZS9tYWluXCIpKTtlKFwid2hhdHdnLWZldGNoXCIpLGUoXCJlczYtcHJvbWlzZS9hdXRvXCIpO3ZhciB5PW4oZShcImZldGNoLWpzb25wXCIpKSxzPW4oZShcImZpbGUtc2F2ZXJcIikpO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIHYoZSl7cmV0dXJuKHY9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfWZ1bmN0aW9uIGIoZSx0KXt2YXIgcj17fTtpZih2b2lkIDA9PT0odD10fHxbXSkpZm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspdFtuLnRvU3RyaW5nKCldPW47Zm9yKHZhciBhPTA7YTx0Lmxlbmd0aDthKyspe3ZhciBvPXRbYV0saT1lW2FdO3Jbb109aX1yZXR1cm4gcn1mdW5jdGlvbiBmKGUpe3JldHVybiBlLnJlcGxhY2UoLyYvZyxcIiZhbXA7XCIpLnJlcGxhY2UoLzwvZyxcIiZsdDtcIikucmVwbGFjZSgvPi9nLFwiJmd0O1wiKS5yZXBsYWNlKC9cIi9nLFwiJnF1b3Q7XCIpLnJlcGxhY2UoLycvZyxcIiYjMDM5O1wiKX1mdW5jdGlvbiBsKGUsdCl7dCYmITAhPT10JiZcInRydWVcIiE9PXR8fCh0PVwiXCIpO3ZhciByPVwiXCI7cmV0dXJuKGU9ZXx8XCJ1bnRpdGxlZFwiKSYmZS5pbmNsdWRlcyhcIi5cIikmJihyPWUuc3BsaXQoXCIuXCIpLnBvcCgpKSx0JiZyIT09dCYmKHI9dCxlPVwiXCIuY29uY2F0KGUsXCIuXCIpLmNvbmNhdChyKSksW2Uscl19ZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmlsZV9lcnJvcnNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2Zlc19jb3JlXCIpLGcuZGVmYXVsdC5wcm90b3R5cGUubG9hZEpTT049ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtnLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImxvYWRKU09OXCIsdCk7Zm9yKHZhciBuLGEsbyxpPXRbMF0scz17fSxsPVwianNvblwiLHA9MTtwPHQubGVuZ3RoO3ArKyl7dmFyIHU9dFtwXTtcInN0cmluZ1wiPT10eXBlb2YgdT9cImpzb25wXCIhPT11JiZcImpzb25cIiE9PXV8fChsPXUpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHU/bj9hPXU6bj11Olwib2JqZWN0XCI9PT12KHUpJiYodS5oYXNPd25Qcm9wZXJ0eShcImpzb25wQ2FsbGJhY2tcIil8fHUuaGFzT3duUHJvcGVydHkoXCJqc29ucENhbGxiYWNrRnVuY3Rpb25cIikpJiYobD1cImpzb25wXCIsbz11KX12YXIgYz10aGlzO3JldHVybiB0aGlzLmh0dHBEbyhpLFwiR0VUXCIsbyxsLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdCBpbiBlKXNbdF09ZVt0XTt2b2lkIDAhPT1uJiZuKGUpLGMuX2RlY3JlbWVudFByZWxvYWQoKX0sZnVuY3Rpb24oZSl7aWYoZy5kZWZhdWx0Ll9mcmllbmRseUZpbGVMb2FkRXJyb3IoNSxpKSwhYSl0aHJvdyBlO2EoZSl9KSxzfSxnLmRlZmF1bHQucHJvdG90eXBlLmxvYWRTdHJpbmdzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07Zy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsb2FkU3RyaW5nc1wiLHQpO2Zvcih2YXIgbixhLG89W10saT0xO2k8dC5sZW5ndGg7aSsrKXt2YXIgcz10W2ldO1wiZnVuY3Rpb25cIj09dHlwZW9mIHMmJih2b2lkIDA9PT1uP249czp2b2lkIDA9PT1hJiYoYT1zKSl9dmFyIGw9dGhpcztyZXR1cm4gZy5kZWZhdWx0LnByb3RvdHlwZS5odHRwRG8uY2FsbCh0aGlzLHRbMF0sXCJHRVRcIixcInRleHRcIixmdW5jdGlvbihlKXt2YXIgdD1lLnJlcGxhY2UoL1xcclxcbi9nLFwiXFxyXCIpLnJlcGxhY2UoL1xcbi9nLFwiXFxyXCIpLnNwbGl0KC9cXHIvKTtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShvLHQpLHZvaWQgMCE9PW4mJm4obyksbC5fZGVjcmVtZW50UHJlbG9hZCgpfSxmdW5jdGlvbihlKXtpZihnLmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcigzLGUpLCFhKXRocm93IGU7YShlKX0pLG99LGcuZGVmYXVsdC5wcm90b3R5cGUubG9hZFRhYmxlPWZ1bmN0aW9uKHQpe3ZhciBkLHIsaCxlPVtdLG09ITEsbj10LnN1YnN0cmluZyh0Lmxhc3RJbmRleE9mKFwiLlwiKSsxLHQubGVuZ3RoKTtcImNzdlwiPT09bj9oPVwiLFwiOlwic3N2XCI9PT1uP2g9XCI7XCI6XCJ0c3ZcIj09PW4mJihoPVwiXFx0XCIpO2Zvcih2YXIgYT0xO2E8YXJndW1lbnRzLmxlbmd0aDthKyspXCJmdW5jdGlvblwiPT10eXBlb2YgYXJndW1lbnRzW2FdP3ZvaWQgMD09PWQ/ZD1hcmd1bWVudHNbYV06dm9pZCAwPT09ciYmKHI9YXJndW1lbnRzW2FdKTpcInN0cmluZ1wiPT10eXBlb2YgYXJndW1lbnRzW2FdJiYoZS5wdXNoKGFyZ3VtZW50c1thXSksXCJoZWFkZXJcIj09PWFyZ3VtZW50c1thXSYmKG09ITApLFwiY3N2XCI9PT1hcmd1bWVudHNbYV0/aD1cIixcIjpcInNzdlwiPT09YXJndW1lbnRzW2FdP2g9XCI7XCI6XCJ0c3ZcIj09PWFyZ3VtZW50c1thXSYmKGg9XCJcXHRcIikpO2NvbnNvbGUubG9nKFwiU0VQIElTIFwiK2gpO3ZhciBmPW5ldyBnLmRlZmF1bHQuVGFibGUseT10aGlzO3JldHVybiB0aGlzLmh0dHBEbyh0LFwiR0VUXCIsXCJ0YWJsZVwiLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyLG49e30sYT1bXSxvPTAsaT1udWxsLHM9ZnVuY3Rpb24oKXtuLmN1cnJlbnRTdGF0ZT0wLG4udG9rZW49XCJcIn0sbD1mdW5jdGlvbigpe2kucHVzaChuLnRva2VuKSxzKCl9LHA9ZnVuY3Rpb24oKXtuLmN1cnJlbnRTdGF0ZT00LGEucHVzaChpKSxpPW51bGx9Ozspe2lmKG51bGw9PSh0PWVbbysrXSkpe2lmKG4uZXNjYXBlZCl0aHJvdyBuZXcgRXJyb3IoXCJVbmNsb3NlZCBxdW90ZSBpbiBmaWxlLlwiKTtpZihpKXtsKCkscCgpO2JyZWFrfX1pZihudWxsPT09aSYmKG4uZXNjYXBlZD0hMSxpPVtdLHMoKSksMD09PW4uY3VycmVudFN0YXRlKXtpZignXCInPT09dCl7bi5lc2NhcGVkPSEwLG4uY3VycmVudFN0YXRlPTE7Y29udGludWV9bi5jdXJyZW50U3RhdGU9MX1pZigxPT09bi5jdXJyZW50U3RhdGUmJm4uZXNjYXBlZClpZignXCInPT09dCknXCInPT09ZVtvXT8obi50b2tlbis9J1wiJyxvKyspOihuLmVzY2FwZWQ9ITEsbi5jdXJyZW50U3RhdGU9Mik7ZWxzZXtpZihcIlxcclwiPT09dCljb250aW51ZTtuLnRva2VuKz10fWVsc2VcIlxcclwiPT09dD8oXCJcXG5cIj09PWVbb10mJm8rKyxsKCkscCgpKTpcIlxcblwiPT09dD8obCgpLHAoKSk6dD09PWg/bCgpOjE9PT1uLmN1cnJlbnRTdGF0ZSYmKG4udG9rZW4rPXQpfWlmKG0pZi5jb2x1bW5zPWEuc2hpZnQoKTtlbHNlIGZvcih2YXIgdT0wO3U8YVswXS5sZW5ndGg7dSsrKWYuY29sdW1uc1t1XT1cIm51bGxcIjtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKykoMSE9PWFbY10ubGVuZ3RofHxcInVuZGVmaW5lZFwiIT09YVtjXVswXSYmXCJcIiE9PWFbY11bMF0pJiYoKHI9bmV3IGcuZGVmYXVsdC5UYWJsZVJvdykuYXJyPWFbY10sci5vYmo9YihhW2NdLGYuY29sdW1ucyksZi5hZGRSb3cocikpO1wiZnVuY3Rpb25cIj09dHlwZW9mIGQmJmQoZikseS5fZGVjcmVtZW50UHJlbG9hZCgpfSxmdW5jdGlvbihlKXtnLmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcigyLHQpLHI/cihlKTpjb25zb2xlLmVycm9yKGUpfSksZn0sZy5kZWZhdWx0LnByb3RvdHlwZS5sb2FkWE1MPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07Zm9yKHZhciBuLGEsbz1uZXcgZy5kZWZhdWx0LlhNTCxpPTE7aTx0Lmxlbmd0aDtpKyspe3ZhciBzPXRbaV07XCJmdW5jdGlvblwiPT10eXBlb2YgcyYmKHZvaWQgMD09PW4/bj1zOnZvaWQgMD09PWEmJihhPXMpKX12YXIgbD10aGlzO3JldHVybiB0aGlzLmh0dHBEbyh0WzBdLFwiR0VUXCIsXCJ4bWxcIixmdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gZSlvW3RdPWVbdF07dm9pZCAwIT09biYmbihvKSxsLl9kZWNyZW1lbnRQcmVsb2FkKCl9LGZ1bmN0aW9uKGUpe2lmKGcuZGVmYXVsdC5fZnJpZW5kbHlGaWxlTG9hZEVycm9yKDEsZSksIWEpdGhyb3cgZTthKGUpfSksb30sZy5kZWZhdWx0LnByb3RvdHlwZS5sb2FkQnl0ZXM9ZnVuY3Rpb24odCxyLG4pe3ZhciBhPXt9LG89dGhpcztyZXR1cm4gdGhpcy5odHRwRG8odCxcIkdFVFwiLFwiYXJyYXlCdWZmZXJcIixmdW5jdGlvbihlKXthLmJ5dGVzPW5ldyBVaW50OEFycmF5KGUpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHImJnIoYSksby5fZGVjcmVtZW50UHJlbG9hZCgpfSxmdW5jdGlvbihlKXtpZihnLmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcig2LHQpLCFuKXRocm93IGU7bihlKX0pLGF9LGcuZGVmYXVsdC5wcm90b3R5cGUuaHR0cEdldD1mdW5jdGlvbigpe2cuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiaHR0cEdldFwiLGFyZ3VtZW50cyk7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtyZXR1cm4gZS5zcGxpY2UoMSwwLFwiR0VUXCIpLGcuZGVmYXVsdC5wcm90b3R5cGUuaHR0cERvLmFwcGx5KHRoaXMsZSl9LGcuZGVmYXVsdC5wcm90b3R5cGUuaHR0cFBvc3Q9ZnVuY3Rpb24oKXtnLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImh0dHBQb3N0XCIsYXJndW1lbnRzKTt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO3JldHVybiBlLnNwbGljZSgxLDAsXCJQT1NUXCIpLGcuZGVmYXVsdC5wcm90b3R5cGUuaHR0cERvLmFwcGx5KHRoaXMsZSl9LGcuZGVmYXVsdC5wcm90b3R5cGUuaHR0cERvPWZ1bmN0aW9uKCl7Zm9yKHZhciBuLGUsdCxyLGEsbz17fSxpPTAscz1cInRleHQvcGxhaW5cIixsPWFyZ3VtZW50cy5sZW5ndGgtMTswPGwmJlwiZnVuY3Rpb25cIj09dHlwZW9mKGw8MHx8YXJndW1lbnRzLmxlbmd0aDw9bD92b2lkIDA6YXJndW1lbnRzW2xdKTtsLS0paSsrO3ZhciBwPWFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXTtpZigyPT1hcmd1bWVudHMubGVuZ3RoLWkmJlwic3RyaW5nXCI9PXR5cGVvZiBwJiZcIm9iamVjdFwiPT09dihhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pKXI9bmV3IFJlcXVlc3QocCxhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pLGU9YXJndW1lbnRzLmxlbmd0aDw9Mj92b2lkIDA6YXJndW1lbnRzWzJdLHQ9YXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdO2Vsc2V7Zm9yKHZhciB1LGM9XCJHRVRcIixkPTE7ZDxhcmd1bWVudHMubGVuZ3RoO2QrKyl7dmFyIGg9ZDwwfHxhcmd1bWVudHMubGVuZ3RoPD1kP3ZvaWQgMDphcmd1bWVudHNbZF07aWYoXCJzdHJpbmdcIj09dHlwZW9mIGgpXCJHRVRcIj09PWh8fFwiUE9TVFwiPT09aHx8XCJQVVRcIj09PWh8fFwiREVMRVRFXCI9PT1oP2M9aDpcImpzb25cIj09PWh8fFwianNvbnBcIj09PWh8fFwiYmluYXJ5XCI9PT1ofHxcImFycmF5QnVmZmVyXCI9PT1ofHxcInhtbFwiPT09aHx8XCJ0ZXh0XCI9PT1ofHxcInRhYmxlXCI9PT1oP249aDp1PWg7ZWxzZSBpZihcIm51bWJlclwiPT10eXBlb2YgaCl1PWgudG9TdHJpbmcoKTtlbHNlIGlmKFwib2JqZWN0XCI9PT12KGgpKWlmKGguaGFzT3duUHJvcGVydHkoXCJqc29ucENhbGxiYWNrXCIpfHxoLmhhc093blByb3BlcnR5KFwianNvbnBDYWxsYmFja0Z1bmN0aW9uXCIpKWZvcih2YXIgbSBpbiBoKW9bbV09aFttXTtlbHNlIHM9aCBpbnN0YW5jZW9mIGcuZGVmYXVsdC5YTUw/KHU9aC5zZXJpYWxpemUoKSxcImFwcGxpY2F0aW9uL3htbFwiKToodT1KU09OLnN0cmluZ2lmeShoKSxcImFwcGxpY2F0aW9uL2pzb25cIik7ZWxzZVwiZnVuY3Rpb25cIj09dHlwZW9mIGgmJihlP3Q9aDplPWgpfXZhciBmPVwiR0VUXCI9PT1jP25ldyBIZWFkZXJzOm5ldyBIZWFkZXJzKHtcIkNvbnRlbnQtVHlwZVwiOnN9KTtyPW5ldyBSZXF1ZXN0KHAse21ldGhvZDpjLG1vZGU6XCJjb3JzXCIsYm9keTp1LGhlYWRlcnM6Zn0pfXJldHVybihhPShhPVwianNvbnBcIj09PShuPW58fChwLmluY2x1ZGVzKFwianNvblwiKT9cImpzb25cIjpwLmluY2x1ZGVzKFwieG1sXCIpP1wieG1sXCI6XCJ0ZXh0XCIpKT8oMCx5LmRlZmF1bHQpKHAsbyk6ZmV0Y2gocikpLnRoZW4oZnVuY3Rpb24oZSl7aWYoIWUub2spe3ZhciB0PW5ldyBFcnJvcihlLmJvZHkpO3Rocm93IHQuc3RhdHVzPWUuc3RhdHVzLHQub2s9ITEsdH12YXIgcj0wO3N3aXRjaChcImpzb25wXCIhPT1uJiYocj1lLmhlYWRlcnMuZ2V0KFwiY29udGVudC1sZW5ndGhcIikpLHImJjY0ZTY8ciYmZy5kZWZhdWx0Ll9mcmllbmRseUZpbGVMb2FkRXJyb3IoNyxwKSxuKXtjYXNlXCJqc29uXCI6Y2FzZVwianNvbnBcIjpyZXR1cm4gZS5qc29uKCk7Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIGUuYmxvYigpO2Nhc2VcImFycmF5QnVmZmVyXCI6cmV0dXJuIGUuYXJyYXlCdWZmZXIoKTtjYXNlXCJ4bWxcIjpyZXR1cm4gZS50ZXh0KCkudGhlbihmdW5jdGlvbihlKXt2YXIgdD0obmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKGUsXCJ0ZXh0L3htbFwiKTtyZXR1cm4gbmV3IGcuZGVmYXVsdC5YTUwodC5kb2N1bWVudEVsZW1lbnQpfSk7ZGVmYXVsdDpyZXR1cm4gZS50ZXh0KCl9fSkpLnRoZW4oZXx8ZnVuY3Rpb24oKXt9KSxhLmNhdGNoKHR8fGNvbnNvbGUuZXJyb3IpLGF9LHdpbmRvdy5VUkw9d2luZG93LlVSTHx8d2luZG93LndlYmtpdFVSTCxnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVycz1bXSxnLmRlZmF1bHQucHJvdG90eXBlLmNyZWF0ZVdyaXRlcj1mdW5jdGlvbihlLHQpe3ZhciByO2Zvcih2YXIgbiBpbiBnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVycylpZihnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVyc1tuXS5uYW1lPT09ZSlyZXR1cm4gcj1uZXcgZy5kZWZhdWx0LlByaW50V3JpdGVyKGUrdGhpcy5taWxsaXMoKSx0KSxnLmRlZmF1bHQucHJvdG90eXBlLl9wV3JpdGVycy5wdXNoKHIpLHI7cmV0dXJuIHI9bmV3IGcuZGVmYXVsdC5QcmludFdyaXRlcihlLHQpLGcuZGVmYXVsdC5wcm90b3R5cGUuX3BXcml0ZXJzLnB1c2gocikscn0sZy5kZWZhdWx0LlByaW50V3JpdGVyPWZ1bmN0aW9uKHIsbil7dmFyIGE9dGhpczt0aGlzLm5hbWU9cix0aGlzLmNvbnRlbnQ9XCJcIix0aGlzLndyaXRlPWZ1bmN0aW9uKGUpe3RoaXMuY29udGVudCs9ZX0sdGhpcy5wcmludD1mdW5jdGlvbihlKXt0aGlzLmNvbnRlbnQrPVwiXCIuY29uY2F0KGUsXCJcXG5cIil9LHRoaXMuY2xlYXI9ZnVuY3Rpb24oKXt0aGlzLmNvbnRlbnQ9XCJcIn0sdGhpcy5jbG9zZT1mdW5jdGlvbigpe3ZhciBlPVtdO2Zvcih2YXIgdCBpbiBlLnB1c2godGhpcy5jb250ZW50KSxnLmRlZmF1bHQucHJvdG90eXBlLndyaXRlRmlsZShlLHIsbiksZy5kZWZhdWx0LnByb3RvdHlwZS5fcFdyaXRlcnMpZy5kZWZhdWx0LnByb3RvdHlwZS5fcFdyaXRlcnNbdF0ubmFtZT09PXRoaXMubmFtZSYmZy5kZWZhdWx0LnByb3RvdHlwZS5fcFdyaXRlcnMuc3BsaWNlKHQsMSk7YS5jbGVhcigpLGE9e319fSxnLmRlZmF1bHQucHJvdG90eXBlLnNhdmU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWFyZ3VtZW50cyxhPXRoaXMuX2N1ckVsZW1lbnQ/dGhpcy5fY3VyRWxlbWVudC5lbHQ6dGhpcy5lbHQ7aWYoMCE9PW4ubGVuZ3RoKWlmKG5bMF1pbnN0YW5jZW9mIGcuZGVmYXVsdC5SZW5kZXJlcnx8blswXWluc3RhbmNlb2YgZy5kZWZhdWx0LkdyYXBoaWNzKWcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUNhbnZhcyhuWzBdLmVsdCxuWzFdLG5bMl0pO2Vsc2UgaWYoMT09PW4ubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgblswXSlnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVDYW52YXMoYSxuWzBdKTtlbHNlIHN3aXRjaChsKG5bMV0sblsyXSlbMV0pe2Nhc2VcImpzb25cIjpyZXR1cm4gdm9pZCBnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVKU09OKG5bMF0sblsxXSxuWzJdKTtjYXNlXCJ0eHRcIjpyZXR1cm4gdm9pZCBnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVTdHJpbmdzKG5bMF0sblsxXSxuWzJdKTtkZWZhdWx0Om5bMF1pbnN0YW5jZW9mIEFycmF5P2cuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZVN0cmluZ3MoblswXSxuWzFdLG5bMl0pOm5bMF1pbnN0YW5jZW9mIGcuZGVmYXVsdC5UYWJsZT9nLmRlZmF1bHQucHJvdG90eXBlLnNhdmVUYWJsZShuWzBdLG5bMV0sblsyXSk6blswXWluc3RhbmNlb2YgZy5kZWZhdWx0LkltYWdlP2cuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUNhbnZhcyhuWzBdLmNhbnZhcyxuWzFdKTpuWzBdaW5zdGFuY2VvZiBnLmRlZmF1bHQuU291bmRGaWxlJiZnLmRlZmF1bHQucHJvdG90eXBlLnNhdmVTb3VuZChuWzBdLG5bMV0sblsyXSxuWzNdKX1lbHNlIGcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUNhbnZhcyhhKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlSlNPTj1mdW5jdGlvbihlLHQscil7dmFyIG47Zy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzYXZlSlNPTlwiLGFyZ3VtZW50cyksbj1yP0pTT04uc3RyaW5naWZ5KGUpOkpTT04uc3RyaW5naWZ5KGUsdm9pZCAwLDIpLHRoaXMuc2F2ZVN0cmluZ3Mobi5zcGxpdChcIlxcblwiKSx0LFwianNvblwiKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlSlNPTk9iamVjdD1nLmRlZmF1bHQucHJvdG90eXBlLnNhdmVKU09OLGcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZUpTT05BcnJheT1nLmRlZmF1bHQucHJvdG90eXBlLnNhdmVKU09OLGcuZGVmYXVsdC5wcm90b3R5cGUuc2F2ZVN0cmluZ3M9ZnVuY3Rpb24oZSx0LHIsbil7Zy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzYXZlU3RyaW5nc1wiLGFyZ3VtZW50cyk7Zm9yKHZhciBhPXJ8fFwidHh0XCIsbz10aGlzLmNyZWF0ZVdyaXRlcih0LGEpLGk9MDtpPGUubGVuZ3RoO2krKyluP28ud3JpdGUoZVtpXStcIlxcclxcblwiKTpvLndyaXRlKGVbaV0rXCJcXG5cIik7by5jbG9zZSgpLG8uY2xlYXIoKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5zYXZlVGFibGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuO2cuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic2F2ZVRhYmxlXCIsYXJndW1lbnRzKSxuPXZvaWQgMD09PXI/dC5zdWJzdHJpbmcodC5sYXN0SW5kZXhPZihcIi5cIikrMSx0Lmxlbmd0aCk6cjt2YXIgYT10aGlzLmNyZWF0ZVdyaXRlcih0LG4pLG89ZS5jb2x1bW5zLGk9XCIsXCI7aWYoXCJ0c3ZcIj09PW4mJihpPVwiXFx0XCIpLFwiaHRtbFwiIT09bil7aWYoXCIwXCIhPT1vWzBdKXtmb3IodmFyIHM9MDtzPG8ubGVuZ3RoO3MrKylzPG8ubGVuZ3RoLTE/YS53cml0ZShvW3NdK2kpOmEud3JpdGUob1tzXSk7YS53cml0ZShcIlxcblwiKX1mb3IodmFyIGw9MDtsPGUucm93cy5sZW5ndGg7bCsrKXt2YXIgcD12b2lkIDA7Zm9yKHA9MDtwPGUucm93c1tsXS5hcnIubGVuZ3RoO3ArKylwPGUucm93c1tsXS5hcnIubGVuZ3RoLTE/YS53cml0ZShlLnJvd3NbbF0uYXJyW3BdK2kpOihlLnJvd3MubGVuZ3RoLGEud3JpdGUoZS5yb3dzW2xdLmFycltwXSkpO2Eud3JpdGUoXCJcXG5cIil9fWVsc2V7YS5wcmludChcIjxodG1sPlwiKSxhLnByaW50KFwiPGhlYWQ+XCIpO2lmKGEucHJpbnQoJyAgPG1ldGEgaHR0cC1lcXVpdj1cImNvbnRlbnQtdHlwZVwiIGNvbnRlbnQ9XCJ0ZXh0L2h0bWw7Y2hhcnNldD11dGYtOFwiIC8+JyksYS5wcmludChcIjwvaGVhZD5cIiksYS5wcmludChcIjxib2R5PlwiKSxhLnByaW50KFwiICA8dGFibGU+XCIpLFwiMFwiIT09b1swXSl7YS5wcmludChcIiAgICA8dHI+XCIpO2Zvcih2YXIgdT0wO3U8by5sZW5ndGg7dSsrKXt2YXIgYz1mKG9bdV0pO2EucHJpbnQoXCIgICAgICA8dGQ+XCIuY29uY2F0KGMpKSxhLnByaW50KFwiICAgICAgPC90ZD5cIil9YS5wcmludChcIiAgICA8L3RyPlwiKX1mb3IodmFyIGQ9MDtkPGUucm93cy5sZW5ndGg7ZCsrKXthLnByaW50KFwiICAgIDx0cj5cIik7Zm9yKHZhciBoPTA7aDxlLmNvbHVtbnMubGVuZ3RoO2grKyl7dmFyIG09ZihlLnJvd3NbZF0uZ2V0U3RyaW5nKGgpKTthLnByaW50KFwiICAgICAgPHRkPlwiLmNvbmNhdChtKSksYS5wcmludChcIiAgICAgIDwvdGQ+XCIpfWEucHJpbnQoXCIgICAgPC90cj5cIil9YS5wcmludChcIiAgPC90YWJsZT5cIiksYS5wcmludChcIjwvYm9keT5cIiksYS5wcmludChcIjwvaHRtbD5cIil9YS5jbG9zZSgpLGEuY2xlYXIoKX0sZy5kZWZhdWx0LnByb3RvdHlwZS53cml0ZUZpbGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPVwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCI7Zy5kZWZhdWx0LnByb3RvdHlwZS5faXNTYWZhcmkoKSYmKG49XCJ0ZXh0L3BsYWluXCIpO3ZhciBhPW5ldyBCbG9iKGUse3R5cGU6bn0pO2cuZGVmYXVsdC5wcm90b3R5cGUuZG93bmxvYWRGaWxlKGEsdCxyKX0sZy5kZWZhdWx0LnByb3RvdHlwZS5kb3dubG9hZEZpbGU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWwodCxyKSxhPW5bMF07aWYoZSBpbnN0YW5jZW9mIEJsb2Ipcy5kZWZhdWx0LnNhdmVBcyhlLGEpO2Vsc2V7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7aWYoby5ocmVmPWUsby5kb3dubG9hZD1hLG8ub25jbGljaz1mdW5jdGlvbihlKXt2YXIgdDt0PWUsZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0LnRhcmdldCksZS5zdG9wUHJvcGFnYXRpb24oKX0sby5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobyksZy5kZWZhdWx0LnByb3RvdHlwZS5faXNTYWZhcmkoKSl7dmFyIGk9XCJIZWxsbywgU2FmYXJpIHVzZXIhIFRvIGRvd25sb2FkIHRoaXMgZmlsZS4uLlxcblwiO2krPVwiMS4gR28gdG8gRmlsZSAtLVxceDNlIFNhdmUgQXMuXFxuXCIsaSs9JzIuIENob29zZSBcIlBhZ2UgU291cmNlXCIgYXMgdGhlIEZvcm1hdC5cXG4nLGkrPSczLiBOYW1lIGl0IHdpdGggdGhpcyBleHRlbnNpb246IC5cIicuY29uY2F0KG5bMV0sJ1wiJyksYWxlcnQoaSl9by5jbGljaygpfX0sZy5kZWZhdWx0LnByb3RvdHlwZS5fY2hlY2tGaWxlRXh0ZW5zaW9uPWwsZy5kZWZhdWx0LnByb3RvdHlwZS5faXNTYWZhcmk9ZnVuY3Rpb24oKXtyZXR1cm4gMDxPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwod2luZG93LkhUTUxFbGVtZW50KS5pbmRleE9mKFwiQ29uc3RydWN0b3JcIil9O3ZhciBhPWcuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIjoyNCxcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjUsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIjoyNyxcIi4uL2NvcmUvbWFpblwiOjMyLFwiZXM2LXByb21pc2UvYXV0b1wiOjYsXCJmZXRjaC1qc29ucFwiOjgsXCJmaWxlLXNhdmVyXCI6OSxcIndoYXR3Zy1mZXRjaFwiOjE2fV0sNTk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2EuZGVmYXVsdC5UYWJsZT1mdW5jdGlvbihlKXt0aGlzLmNvbHVtbnM9W10sdGhpcy5yb3dzPVtdfSxhLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLmFkZFJvdz1mdW5jdGlvbihlKXt2YXIgdD1lfHxuZXcgYS5kZWZhdWx0LlRhYmxlUm93O2lmKHZvaWQgMD09PXQuYXJyfHx2b2lkIDA9PT10Lm9iail0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIFRhYmxlUm93OiBcIi5jb25jYXQodCkpO3JldHVybih0LnRhYmxlPXRoaXMpLnJvd3MucHVzaCh0KSx0fSxhLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLnJlbW92ZVJvdz1mdW5jdGlvbihlKXt0aGlzLnJvd3NbZV0udGFibGU9bnVsbDt2YXIgdD10aGlzLnJvd3Muc3BsaWNlKGUrMSx0aGlzLnJvd3MubGVuZ3RoKTt0aGlzLnJvd3MucG9wKCksdGhpcy5yb3dzPXRoaXMucm93cy5jb25jYXQodCl9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0Um93PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJvd3NbZV19LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0Um93cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJvd3N9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZmluZFJvdz1mdW5jdGlvbihlLHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXtmb3IodmFyIHI9MDtyPHRoaXMucm93cy5sZW5ndGg7cisrKWlmKHRoaXMucm93c1tyXS5vYmpbdF09PT1lKXJldHVybiB0aGlzLnJvd3Nbcl19ZWxzZSBmb3IodmFyIG49MDtuPHRoaXMucm93cy5sZW5ndGg7bisrKWlmKHRoaXMucm93c1tuXS5hcnJbdF09PT1lKXJldHVybiB0aGlzLnJvd3Nbbl07cmV0dXJuIG51bGx9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZmluZFJvd3M9ZnVuY3Rpb24oZSx0KXt2YXIgcj1bXTtpZihcInN0cmluZ1wiPT10eXBlb2YgdClmb3IodmFyIG49MDtuPHRoaXMucm93cy5sZW5ndGg7bisrKXRoaXMucm93c1tuXS5vYmpbdF09PT1lJiZyLnB1c2godGhpcy5yb3dzW25dKTtlbHNlIGZvcih2YXIgYT0wO2E8dGhpcy5yb3dzLmxlbmd0aDthKyspdGhpcy5yb3dzW2FdLmFyclt0XT09PWUmJnIucHVzaCh0aGlzLnJvd3NbYV0pO3JldHVybiByfSxhLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLm1hdGNoUm93PWZ1bmN0aW9uKGUsdCl7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpe2Zvcih2YXIgcj0wO3I8dGhpcy5yb3dzLmxlbmd0aDtyKyspaWYodGhpcy5yb3dzW3JdLmFyclt0XS5tYXRjaChlKSlyZXR1cm4gdGhpcy5yb3dzW3JdfWVsc2UgZm9yKHZhciBuPTA7bjx0aGlzLnJvd3MubGVuZ3RoO24rKylpZih0aGlzLnJvd3Nbbl0ub2JqW3RdLm1hdGNoKGUpKXJldHVybiB0aGlzLnJvd3Nbbl07cmV0dXJuIG51bGx9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUubWF0Y2hSb3dzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9W107aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpZm9yKHZhciBuPTA7bjx0aGlzLnJvd3MubGVuZ3RoO24rKyl0aGlzLnJvd3Nbbl0uYXJyW3RdLm1hdGNoKGUpJiZyLnB1c2godGhpcy5yb3dzW25dKTtlbHNlIGZvcih2YXIgYT0wO2E8dGhpcy5yb3dzLmxlbmd0aDthKyspdGhpcy5yb3dzW2FdLm9ialt0XS5tYXRjaChlKSYmci5wdXNoKHRoaXMucm93c1thXSk7cmV0dXJuIHJ9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0Q29sdW1uPWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKWZvcih2YXIgcj0wO3I8dGhpcy5yb3dzLmxlbmd0aDtyKyspdC5wdXNoKHRoaXMucm93c1tyXS5vYmpbZV0pO2Vsc2UgZm9yKHZhciBuPTA7bjx0aGlzLnJvd3MubGVuZ3RoO24rKyl0LnB1c2godGhpcy5yb3dzW25dLmFycltlXSk7cmV0dXJuIHR9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuY2xlYXJSb3dzPWZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMucm93cyx0aGlzLnJvd3M9W119LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuYWRkQ29sdW1uPWZ1bmN0aW9uKGUpe3ZhciB0PWV8fG51bGw7dGhpcy5jb2x1bW5zLnB1c2godCl9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0Q29sdW1uQ291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb2x1bW5zLmxlbmd0aH0sYS5kZWZhdWx0LlRhYmxlLnByb3RvdHlwZS5nZXRSb3dDb3VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJvd3MubGVuZ3RofSxhLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLnJlbW92ZVRva2Vucz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcj1bXSxuPTA7bjxlLmxlbmd0aDtuKyspci5wdXNoKGUuY2hhckF0KG4pLnJlcGxhY2UoL1stL1xcXFxeJCorPy4oKXxbXFxde31dL2csXCJcXFxcJCZcIikpO3ZhciBhPW5ldyBSZWdFeHAoci5qb2luKFwifFwiKSxcImdcIik7aWYodm9pZCAwPT09dClmb3IodmFyIG89MDtvPHRoaXMuY29sdW1ucy5sZW5ndGg7bysrKWZvcih2YXIgaT0wO2k8dGhpcy5yb3dzLmxlbmd0aDtpKyspe3ZhciBzPXRoaXMucm93c1tpXS5hcnJbb107cz1zLnJlcGxhY2UoYSxcIlwiKSx0aGlzLnJvd3NbaV0uYXJyW29dPXMsdGhpcy5yb3dzW2ldLm9ialt0aGlzLmNvbHVtbnNbb11dPXN9ZWxzZSBpZihcInN0cmluZ1wiPT10eXBlb2YgdClmb3IodmFyIGw9MDtsPHRoaXMucm93cy5sZW5ndGg7bCsrKXt2YXIgcD10aGlzLnJvd3NbbF0ub2JqW3RdO3A9cC5yZXBsYWNlKGEsXCJcIiksdGhpcy5yb3dzW2xdLm9ialt0XT1wO3ZhciB1PXRoaXMuY29sdW1ucy5pbmRleE9mKHQpO3RoaXMucm93c1tsXS5hcnJbdV09cH1lbHNlIGZvcih2YXIgYz0wO2M8dGhpcy5yb3dzLmxlbmd0aDtjKyspe3ZhciBkPXRoaXMucm93c1tjXS5hcnJbdF07ZD1kLnJlcGxhY2UoYSxcIlwiKSx0aGlzLnJvd3NbY10uYXJyW3RdPWQsdGhpcy5yb3dzW2NdLm9ialt0aGlzLmNvbHVtbnNbdF1dPWR9fSxhLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLnRyaW09ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IFJlZ0V4cChcIiBcIixcImdcIik7aWYodm9pZCAwPT09ZSlmb3IodmFyIHI9MDtyPHRoaXMuY29sdW1ucy5sZW5ndGg7cisrKWZvcih2YXIgbj0wO248dGhpcy5yb3dzLmxlbmd0aDtuKyspe3ZhciBhPXRoaXMucm93c1tuXS5hcnJbcl07YT1hLnJlcGxhY2UodCxcIlwiKSx0aGlzLnJvd3Nbbl0uYXJyW3JdPWEsdGhpcy5yb3dzW25dLm9ialt0aGlzLmNvbHVtbnNbcl1dPWF9ZWxzZSBpZihcInN0cmluZ1wiPT10eXBlb2YgZSlmb3IodmFyIG89MDtvPHRoaXMucm93cy5sZW5ndGg7bysrKXt2YXIgaT10aGlzLnJvd3Nbb10ub2JqW2VdO2k9aS5yZXBsYWNlKHQsXCJcIiksdGhpcy5yb3dzW29dLm9ialtlXT1pO3ZhciBzPXRoaXMuY29sdW1ucy5pbmRleE9mKGUpO3RoaXMucm93c1tvXS5hcnJbc109aX1lbHNlIGZvcih2YXIgbD0wO2w8dGhpcy5yb3dzLmxlbmd0aDtsKyspe3ZhciBwPXRoaXMucm93c1tsXS5hcnJbZV07cD1wLnJlcGxhY2UodCxcIlwiKSx0aGlzLnJvd3NbbF0uYXJyW2VdPXAsdGhpcy5yb3dzW2xdLm9ialt0aGlzLmNvbHVtbnNbZV1dPXB9fSxhLmRlZmF1bHQuVGFibGUucHJvdG90eXBlLnJlbW92ZUNvbHVtbj1mdW5jdGlvbihlKXt2YXIgdCxyO1wic3RyaW5nXCI9PXR5cGVvZiBlPyh0PWUscj10aGlzLmNvbHVtbnMuaW5kZXhPZihlKSk6KHI9ZSx0PXRoaXMuY29sdW1uc1tlXSk7dmFyIG49dGhpcy5jb2x1bW5zLnNwbGljZShyKzEsdGhpcy5jb2x1bW5zLmxlbmd0aCk7dGhpcy5jb2x1bW5zLnBvcCgpLHRoaXMuY29sdW1ucz10aGlzLmNvbHVtbnMuY29uY2F0KG4pO2Zvcih2YXIgYT0wO2E8dGhpcy5yb3dzLmxlbmd0aDthKyspe3ZhciBvPXRoaXMucm93c1thXS5hcnIsaT1vLnNwbGljZShyKzEsby5sZW5ndGgpO28ucG9wKCksdGhpcy5yb3dzW2FdLmFycj1vLmNvbmNhdChpKSxkZWxldGUgdGhpcy5yb3dzW2FdLm9ialt0XX19LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCxyKXt0aGlzLnJvd3NbZV0uc2V0KHQscil9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuc2V0TnVtPWZ1bmN0aW9uKGUsdCxyKXt0aGlzLnJvd3NbZV0uc2V0TnVtKHQscil9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuc2V0U3RyaW5nPWZ1bmN0aW9uKGUsdCxyKXt0aGlzLnJvd3NbZV0uc2V0U3RyaW5nKHQscil9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMucm93c1tlXS5nZXQodCl9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0TnVtPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMucm93c1tlXS5nZXROdW0odCl9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0U3RyaW5nPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMucm93c1tlXS5nZXRTdHJpbmcodCl9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0T2JqZWN0PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPXt9LG49MDtuPHRoaXMucm93cy5sZW5ndGg7bisrKWlmKHQ9dGhpcy5yb3dzW25dLm9iaixcInN0cmluZ1wiPT10eXBlb2YgZSl7aWYoISgwPD10aGlzLmNvbHVtbnMuaW5kZXhPZihlKSkpdGhyb3cgbmV3IEVycm9yKCdUaGlzIHRhYmxlIGhhcyBubyBjb2x1bW4gbmFtZWQgXCInLmNvbmNhdChlLCdcIicpKTtyW3RbZV1dPXR9ZWxzZSByW25dPXRoaXMucm93c1tuXS5vYmo7cmV0dXJuIHJ9LGEuZGVmYXVsdC5UYWJsZS5wcm90b3R5cGUuZ2V0QXJyYXk9ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10sdD0wO3Q8dGhpcy5yb3dzLmxlbmd0aDt0KyspZS5wdXNoKHRoaXMucm93c1t0XS5hcnIpO3JldHVybiBlfTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNjA6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2EuZGVmYXVsdC5UYWJsZVJvdz1mdW5jdGlvbihlLHQpe3ZhciByPVtdLG49e307ZSYmKHQ9dHx8XCIsXCIscj1lLnNwbGl0KHQpKTtmb3IodmFyIGE9MDthPHIubGVuZ3RoO2ErKyl7dmFyIG89YSxpPXJbYV07bltvXT1pfXRoaXMuYXJyPXIsdGhpcy5vYmo9bix0aGlzLnRhYmxlPW51bGx9LGEuZGVmYXVsdC5UYWJsZVJvdy5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe3ZhciByPXRoaXMudGFibGUuY29sdW1ucy5pbmRleE9mKGUpO2lmKCEoMDw9cikpdGhyb3cgbmV3IEVycm9yKCdUaGlzIHRhYmxlIGhhcyBubyBjb2x1bW4gbmFtZWQgXCInLmNvbmNhdChlLCdcIicpKTt0aGlzLm9ialtlXT10LHRoaXMuYXJyW3JdPXR9ZWxzZXtpZighKGU8dGhpcy50YWJsZS5jb2x1bW5zLmxlbmd0aCkpdGhyb3cgbmV3IEVycm9yKFwiQ29sdW1uICNcIi5jb25jYXQoZSxcIiBpcyBvdXQgb2YgdGhlIHJhbmdlIG9mIHRoaXMgdGFibGVcIikpO3RoaXMuYXJyW2VdPXQ7dmFyIG49dGhpcy50YWJsZS5jb2x1bW5zW2VdO3RoaXMub2JqW25dPXR9fSxhLmRlZmF1bHQuVGFibGVSb3cucHJvdG90eXBlLnNldE51bT1mdW5jdGlvbihlLHQpe3ZhciByPXBhcnNlRmxvYXQodCk7dGhpcy5zZXQoZSxyKX0sYS5kZWZhdWx0LlRhYmxlUm93LnByb3RvdHlwZS5zZXRTdHJpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj10LnRvU3RyaW5nKCk7dGhpcy5zZXQoZSxyKX0sYS5kZWZhdWx0LlRhYmxlUm93LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/dGhpcy5vYmpbZV06dGhpcy5hcnJbZV19LGEuZGVmYXVsdC5UYWJsZVJvdy5wcm90b3R5cGUuZ2V0TnVtPWZ1bmN0aW9uKGUpe3ZhciB0O2lmKFwiTmFOXCI9PT0odD1cInN0cmluZ1wiPT10eXBlb2YgZT9wYXJzZUZsb2F0KHRoaXMub2JqW2VdKTpwYXJzZUZsb2F0KHRoaXMuYXJyW2VdKSkudG9TdHJpbmcoKSl0aHJvd1wiRXJyb3I6IFwiLmNvbmNhdCh0aGlzLm9ialtlXSxcIiBpcyBOYU4gKE5vdCBhIE51bWJlcilcIik7cmV0dXJuIHR9LGEuZGVmYXVsdC5UYWJsZVJvdy5wcm90b3R5cGUuZ2V0U3RyaW5nPWZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlP3RoaXMub2JqW2VdLnRvU3RyaW5nKCk6dGhpcy5hcnJbZV0udG9TdHJpbmcoKX07dmFyIG89YS5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDYxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBhKGUpe2Zvcih2YXIgdD1bXSxyPTA7cjxlLmxlbmd0aDtyKyspdC5wdXNoKG5ldyBzLmRlZmF1bHQuWE1MKGVbcl0pKTtyZXR1cm4gdH1zLmRlZmF1bHQuWE1MPWZ1bmN0aW9uKGUpe2lmKGUpdGhpcy5ET009ZTtlbHNle3ZhciB0PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZURvY3VtZW50KG51bGwsXCJkb2NcIik7dGhpcy5ET009dC5jcmVhdGVFbGVtZW50KFwicm9vdFwiKX19LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLmdldFBhcmVudD1mdW5jdGlvbigpe3JldHVybiBuZXcgcy5kZWZhdWx0LlhNTCh0aGlzLkRPTS5wYXJlbnRFbGVtZW50KX0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuZ2V0TmFtZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLkRPTS50YWdOYW1lfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5zZXROYW1lPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuRE9NLmlubmVySFRNTCxyPXRoaXMuRE9NLmF0dHJpYnV0ZXMsbj1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVEb2N1bWVudChudWxsLFwiZGVmYXVsdFwiKS5jcmVhdGVFbGVtZW50KGUpO24uaW5uZXJIVE1MPXQ7Zm9yKHZhciBhPTA7YTxyLmxlbmd0aDthKyspbi5zZXRBdHRyaWJ1dGUoclthXS5ub2RlTmFtZSxyLm5vZGVWYWx1ZSk7dGhpcy5ET009bn0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuaGFzQ2hpbGRyZW49ZnVuY3Rpb24oKXtyZXR1cm4gMDx0aGlzLkRPTS5jaGlsZHJlbi5sZW5ndGh9LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLmxpc3RDaGlsZHJlbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PTA7dDx0aGlzLkRPTS5jaGlsZE5vZGVzLmxlbmd0aDt0KyspZS5wdXNoKHRoaXMuRE9NLmNoaWxkTm9kZXNbdF0ubm9kZU5hbWUpO3JldHVybiBlfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRDaGlsZHJlbj1mdW5jdGlvbihlKXtyZXR1cm4gYShlP3RoaXMuRE9NLmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpOnRoaXMuRE9NLmNoaWxkcmVuKX0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuZ2V0Q2hpbGQ9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpcmV0dXJuIG5ldyBzLmRlZmF1bHQuWE1MKHRoaXMuRE9NLmNoaWxkcmVuW2VdKTt2YXIgdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIGEsbz10aGlzLkRPTS5jaGlsZHJlbltTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShhPW8ubmV4dCgpKS5kb25lKTt0PSEwKXt2YXIgaT1hLnZhbHVlO2lmKGkudGFnTmFtZT09PWUpcmV0dXJuIG5ldyBzLmRlZmF1bHQuWE1MKGkpfX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1vLnJldHVybnx8by5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19fSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5hZGRDaGlsZD1mdW5jdGlvbihlKXtlIGluc3RhbmNlb2Ygcy5kZWZhdWx0LlhNTCYmdGhpcy5ET00uYXBwZW5kQ2hpbGQoZS5ET00pfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5yZW1vdmVDaGlsZD1mdW5jdGlvbihlKXt2YXIgdD0tMTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7Zm9yKHZhciByPTA7cjx0aGlzLkRPTS5jaGlsZHJlbi5sZW5ndGg7cisrKWlmKHRoaXMuRE9NLmNoaWxkcmVuW3JdLnRhZ05hbWU9PT1lKXt0PXI7YnJlYWt9fWVsc2UgdD1lOy0xIT09dCYmdGhpcy5ET00ucmVtb3ZlQ2hpbGQodGhpcy5ET00uY2hpbGRyZW5bdF0pfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRBdHRyaWJ1dGVDb3VudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLkRPTS5hdHRyaWJ1dGVzLmxlbmd0aH0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUubGlzdEF0dHJpYnV0ZXM9ZnVuY3Rpb24oKXt2YXIgZT1bXSx0PSEwLHI9ITEsbj12b2lkIDA7dHJ5e2Zvcih2YXIgYSxvPXRoaXMuRE9NLmF0dHJpYnV0ZXNbU3ltYm9sLml0ZXJhdG9yXSgpOyEodD0oYT1vLm5leHQoKSkuZG9uZSk7dD0hMCl7dmFyIGk9YS52YWx1ZTtlLnB1c2goaS5ub2RlTmFtZSl9fWNhdGNoKGUpe3I9ITAsbj1lfWZpbmFsbHl7dHJ5e3R8fG51bGw9PW8ucmV0dXJufHxvLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBufX1yZXR1cm4gZX0scy5kZWZhdWx0LlhNTC5wcm90b3R5cGUuaGFzQXR0cmlidXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXt9LHI9ITAsbj0hMSxhPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9dGhpcy5ET00uYXR0cmlidXRlc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShvPWkubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1vLnZhbHVlO3Rbcy5ub2RlTmFtZV09cy5ub2RlVmFsdWV9fWNhdGNoKGUpe249ITAsYT1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBhfX1yZXR1cm4hIXRbZV19LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLmdldE51bT1mdW5jdGlvbihlLHQpe3ZhciByPXt9LG49ITAsYT0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBpLHM9dGhpcy5ET00uYXR0cmlidXRlc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShuPShpPXMubmV4dCgpKS5kb25lKTtuPSEwKXt2YXIgbD1pLnZhbHVlO3JbbC5ub2RlTmFtZV09bC5ub2RlVmFsdWV9fWNhdGNoKGUpe2E9ITAsbz1lfWZpbmFsbHl7dHJ5e258fG51bGw9PXMucmV0dXJufHxzLnJldHVybigpfWZpbmFsbHl7aWYoYSl0aHJvdyBvfX1yZXR1cm4gTnVtYmVyKHJbZV0pfHx0fHwwfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRTdHJpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgcj17fSxuPSEwLGE9ITEsbz12b2lkIDA7dHJ5e2Zvcih2YXIgaSxzPXRoaXMuRE9NLmF0dHJpYnV0ZXNbU3ltYm9sLml0ZXJhdG9yXSgpOyEobj0oaT1zLm5leHQoKSkuZG9uZSk7bj0hMCl7dmFyIGw9aS52YWx1ZTtyW2wubm9kZU5hbWVdPWwubm9kZVZhbHVlfX1jYXRjaChlKXthPSEwLG89ZX1maW5hbGx5e3RyeXtufHxudWxsPT1zLnJldHVybnx8cy5yZXR1cm4oKX1maW5hbGx5e2lmKGEpdGhyb3cgb319cmV0dXJuIHJbZV0/U3RyaW5nKHJbZV0pOnR8fG51bGx9LHMuZGVmYXVsdC5YTUwucHJvdG90eXBlLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihlLHQpe3RoaXMuRE9NLnNldEF0dHJpYnV0ZShlLHQpfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5nZXRDb250ZW50PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLkRPTS50ZXh0Q29udGVudC5yZXBsYWNlKC9cXHNcXHMrL2csXCIsXCIpfHxlfHxudWxsfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5zZXRDb250ZW50PWZ1bmN0aW9uKGUpe3RoaXMuRE9NLmNoaWxkcmVuLmxlbmd0aHx8KHRoaXMuRE9NLnRleHRDb250ZW50PWUpfSxzLmRlZmF1bHQuWE1MLnByb3RvdHlwZS5zZXJpYWxpemU9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFhNTFNlcmlhbGl6ZXIpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuRE9NKX07dmFyIG89cy5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDYyOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixzPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBhKCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgTWF0aC5oeXBvdClyZXR1cm4gTWF0aC5oeXBvdC5hcHBseShudWxsLGFyZ3VtZW50cyk7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1bXSxyPTAsbj0wO248ZTtuKyspe3ZhciBhPWFyZ3VtZW50c1tuXTtpZigoYT0rYSk9PT0xLzB8fGE9PT0tMS8wKXJldHVybiAxLzA7cjwoYT1NYXRoLmFicyhhKSkmJihyPWEpLHRbbl09YX0wPT09ciYmKHI9MSk7Zm9yKHZhciBvPTAsaT0wLHM9MDtzPGU7cysrKXt2YXIgbD10W3NdL3IscD1sKmwtaSx1PW8rcDtpPXUtby1wLG89dX1yZXR1cm4gTWF0aC5zcXJ0KG8pKnJ9cy5kZWZhdWx0LnByb3RvdHlwZS5hYnM9TWF0aC5hYnMscy5kZWZhdWx0LnByb3RvdHlwZS5jZWlsPU1hdGguY2VpbCxzLmRlZmF1bHQucHJvdG90eXBlLmNvbnN0cmFpbj1mdW5jdGlvbihlLHQscil7cmV0dXJuIHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY29uc3RyYWluXCIsYXJndW1lbnRzKSxNYXRoLm1heChNYXRoLm1pbihlLHIpLHQpfSxzLmRlZmF1bHQucHJvdG90eXBlLmRpc3Q9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJkaXN0XCIsdCksND09PXQubGVuZ3RoP2EodFsyXS10WzBdLHRbM10tdFsxXSk6Nj09PXQubGVuZ3RoP2EodFszXS10WzBdLHRbNF0tdFsxXSx0WzVdLXRbMl0pOnZvaWQgMH0scy5kZWZhdWx0LnByb3RvdHlwZS5leHA9TWF0aC5leHAscy5kZWZhdWx0LnByb3RvdHlwZS5mbG9vcj1NYXRoLmZsb29yLHMuZGVmYXVsdC5wcm90b3R5cGUubGVycD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibGVycFwiLGFyZ3VtZW50cykscioodC1lKStlfSxzLmRlZmF1bHQucHJvdG90eXBlLmxvZz1NYXRoLmxvZyxzLmRlZmF1bHQucHJvdG90eXBlLm1hZz1mdW5jdGlvbihlLHQpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm1hZ1wiLGFyZ3VtZW50cyksYShlLHQpfSxzLmRlZmF1bHQucHJvdG90eXBlLm1hcD1mdW5jdGlvbihlLHQscixuLGEsbyl7cy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJtYXBcIixhcmd1bWVudHMpO3ZhciBpPShlLXQpLyhyLXQpKihhLW4pK247cmV0dXJuIG8/bjxhP3RoaXMuY29uc3RyYWluKGksbixhKTp0aGlzLmNvbnN0cmFpbihpLGEsbik6aX0scy5kZWZhdWx0LnByb3RvdHlwZS5tYXg9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gcy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJtYXhcIix0KSx0WzBdaW5zdGFuY2VvZiBBcnJheT9NYXRoLm1heC5hcHBseShudWxsLHRbMF0pOk1hdGgubWF4LmFwcGx5KG51bGwsdCl9LHMuZGVmYXVsdC5wcm90b3R5cGUubWluPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07cmV0dXJuIHMuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibWluXCIsdCksdFswXWluc3RhbmNlb2YgQXJyYXk/TWF0aC5taW4uYXBwbHkobnVsbCx0WzBdKTpNYXRoLm1pbi5hcHBseShudWxsLHQpfSxzLmRlZmF1bHQucHJvdG90eXBlLm5vcm09ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm5vcm1cIixhcmd1bWVudHMpLHRoaXMubWFwKGUsdCxyLDAsMSl9LHMuZGVmYXVsdC5wcm90b3R5cGUucG93PU1hdGgucG93LHMuZGVmYXVsdC5wcm90b3R5cGUucm91bmQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdD9OdW1iZXIoTWF0aC5yb3VuZChlK1wiZVwiK3QpK1wiZS1cIit0KTpNYXRoLnJvdW5kKGUpfSxzLmRlZmF1bHQucHJvdG90eXBlLnNxPWZ1bmN0aW9uKGUpe3JldHVybiBlKmV9LHMuZGVmYXVsdC5wcm90b3R5cGUuc3FydD1NYXRoLnNxcnQscy5kZWZhdWx0LnByb3RvdHlwZS5mcmFjdD1mdW5jdGlvbihlKXtzLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImZyYWN0XCIsYXJndW1lbnRzKTt2YXIgdD0wLHI9TnVtYmVyKGUpO2lmKGlzTmFOKHIpfHxNYXRoLmFicyhyKT09PTEvMClyZXR1cm4gcjtpZihyPDAmJihyPS1yLHQ9MSksIVN0cmluZyhyKS5pbmNsdWRlcyhcIi5cIil8fFN0cmluZyhyKS5pbmNsdWRlcyhcImVcIikpcmV0dXJuIHI8MT9NYXRoLmFicyh0LXIpOjA7dmFyIG49U3RyaW5nKHIpO3JldHVybiBuPU51bWJlcihcIjBcIituLnNsaWNlKG4uaW5kZXhPZihcIi5cIikpKSxNYXRoLmFicyh0LW4pfTt2YXIgbz1zLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNjM6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2EuZGVmYXVsdC5wcm90b3R5cGUuY3JlYXRlVmVjdG9yPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGEuZGVmYXVsdD9uZXcgYS5kZWZhdWx0LlZlY3Rvcih0aGlzLGFyZ3VtZW50cyk6bmV3IGEuZGVmYXVsdC5WZWN0b3IoZSx0LHIpfTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNjQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2Z1bmN0aW9uIGIoZSl7cmV0dXJuLjUqKDEtTWF0aC5jb3MoZSpNYXRoLlBJKSl9dmFyIF8seD00MDk1LFM9NCx3PS41O2EuZGVmYXVsdC5wcm90b3R5cGUubm9pc2U9ZnVuY3Rpb24oZSl7dmFyIHQ9MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjAscj0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06MDtpZihudWxsPT1fKXtfPW5ldyBBcnJheSg0MDk2KTtmb3IodmFyIG49MDtuPDQwOTY7bisrKV9bbl09TWF0aC5yYW5kb20oKX1lPDAmJihlPS1lKSx0PDAmJih0PS10KSxyPDAmJihyPS1yKTtmb3IodmFyIGEsbyxpLHMsbCxwPU1hdGguZmxvb3IoZSksdT1NYXRoLmZsb29yKHQpLGM9TWF0aC5mbG9vcihyKSxkPWUtcCxoPXQtdSxtPXItYyxmPTAseT0uNSxnPTA7ZzxTO2crKyl7dmFyIHY9cCsodTw8NCkrKGM8PDgpO2E9YihkKSxvPWIoaCksaT1fW3YmeF0saSs9YSooX1t2KzEmeF0taSkscz1fW3YrMTYmeF0saSs9byooKHMrPWEqKF9bdisxNisxJnhdLXMpKS1pKSxzPV9bKHYrPTI1NikmeF0scys9YSooX1t2KzEmeF0tcyksbD1fW3YrMTYmeF0scys9byooKGwrPWEqKF9bdisxNisxJnhdLWwpKS1zKSxmKz0oaSs9YihtKSoocy1pKSkqeSx5Kj13LHA8PD0xLHU8PD0xLGM8PD0xLDE8PShkKj0yKSYmKHArKyxkLS0pLDE8PShoKj0yKSYmKHUrKyxoLS0pLDE8PShtKj0yKSYmKGMrKyxtLS0pfXJldHVybiBmfSxhLmRlZmF1bHQucHJvdG90eXBlLm5vaXNlRGV0YWlsPWZ1bmN0aW9uKGUsdCl7MDxlJiYoUz1lKSwwPHQmJih3PXQpfSxhLmRlZmF1bHQucHJvdG90eXBlLm5vaXNlU2VlZD1mdW5jdGlvbihlKXt2YXIgdCxyLG4sYT0obj00Mjk0OTY3Mjk2LHtzZXRTZWVkOmZ1bmN0aW9uKGUpe3I9dD0obnVsbD09ZT9NYXRoLnJhbmRvbSgpKm46ZSk+Pj4wfSxnZXRTZWVkOmZ1bmN0aW9uKCl7cmV0dXJuIHR9LHJhbmQ6ZnVuY3Rpb24oKXtyZXR1cm4ocj0oMTY2NDUyNSpyKzEwMTM5MDQyMjMpJW4pL259fSk7YS5zZXRTZWVkKGUpLF89bmV3IEFycmF5KDQwOTYpO2Zvcih2YXIgbz0wO288NDA5NjtvKyspX1tvXT1hLnJhbmQoKX07dmFyIG89YS5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDY1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixsPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxvPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9bC5kZWZhdWx0LlZlY3Rvcj1mdW5jdGlvbihlLHQscil7dmFyIG4sYSxvO289ZSBpbnN0YW5jZW9mIGwuZGVmYXVsdD8odGhpcy5wNT1lLG49dFswXXx8MCxhPXRbMV18fDAsdFsyXXx8MCk6KG49ZXx8MCxhPXR8fDAscnx8MCksdGhpcy54PW4sdGhpcy55PWEsdGhpcy56PW99LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJwNS5WZWN0b3IgT2JqZWN0IDogW1wiLmNvbmNhdCh0aGlzLngsXCIsIFwiKS5jb25jYXQodGhpcy55LFwiLCBcIikuY29uY2F0KHRoaXMueixcIl1cIil9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yPyh0aGlzLng9ZS54fHwwLHRoaXMueT1lLnl8fDAsdGhpcy56PWUuenx8MCk6ZSBpbnN0YW5jZW9mIEFycmF5Pyh0aGlzLng9ZVswXXx8MCx0aGlzLnk9ZVsxXXx8MCx0aGlzLno9ZVsyXXx8MCk6KHRoaXMueD1lfHwwLHRoaXMueT10fHwwLHRoaXMuej1yfHwwKSx0aGlzfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucDU/bmV3IGwuZGVmYXVsdC5WZWN0b3IodGhpcy5wNSxbdGhpcy54LHRoaXMueSx0aGlzLnpdKTpuZXcgbC5kZWZhdWx0LlZlY3Rvcih0aGlzLngsdGhpcy55LHRoaXMueil9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yPyh0aGlzLngrPWUueHx8MCx0aGlzLnkrPWUueXx8MCx0aGlzLnorPWUuenx8MCk6ZSBpbnN0YW5jZW9mIEFycmF5Pyh0aGlzLngrPWVbMF18fDAsdGhpcy55Kz1lWzFdfHwwLHRoaXMueis9ZVsyXXx8MCk6KHRoaXMueCs9ZXx8MCx0aGlzLnkrPXR8fDAsdGhpcy56Kz1yfHwwKSx0aGlzfTtmdW5jdGlvbiBwKGUsdCl7cmV0dXJuIDAhPT1lJiYodGhpcy54PXRoaXMueCVlKSwwIT09dCYmKHRoaXMueT10aGlzLnkldCksdGhpc31mdW5jdGlvbiB1KGUsdCxyKXtyZXR1cm4gMCE9PWUmJih0aGlzLng9dGhpcy54JWUpLDAhPT10JiYodGhpcy55PXRoaXMueSV0KSwwIT09ciYmKHRoaXMuej10aGlzLnolciksdGhpc31sLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5yZW09ZnVuY3Rpb24oZSx0LHIpe2lmKGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yKXtpZihOdW1iZXIuaXNGaW5pdGUoZS54KSYmTnVtYmVyLmlzRmluaXRlKGUueSkmJk51bWJlci5pc0Zpbml0ZShlLnopKXt2YXIgbj1wYXJzZUZsb2F0KGUueCksYT1wYXJzZUZsb2F0KGUueSksbz1wYXJzZUZsb2F0KGUueik7dS5jYWxsKHRoaXMsbixhLG8pfX1lbHNlIGlmKGUgaW5zdGFuY2VvZiBBcnJheSllLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBOdW1iZXIuaXNGaW5pdGUoZSl9KSYmKDI9PT1lLmxlbmd0aCYmcC5jYWxsKHRoaXMsZVswXSxlWzFdKSwzPT09ZS5sZW5ndGgmJnUuY2FsbCh0aGlzLGVbMF0sZVsxXSxlWzJdKSk7ZWxzZSBpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7aWYoTnVtYmVyLmlzRmluaXRlKGUpJiYwIT09ZSlyZXR1cm4gdGhpcy54PXRoaXMueCVlLHRoaXMueT10aGlzLnklZSx0aGlzLno9dGhpcy56JWUsdGhpc31lbHNlIGlmKDI9PT1hcmd1bWVudHMubGVuZ3RoKXt2YXIgaT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2kuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlci5pc0Zpbml0ZShlKX0pJiYyPT09aS5sZW5ndGgmJnAuY2FsbCh0aGlzLGlbMF0saVsxXSl9ZWxzZSBpZigzPT09YXJndW1lbnRzLmxlbmd0aCl7dmFyIHM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtzLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBOdW1iZXIuaXNGaW5pdGUoZSl9KSYmMz09PXMubGVuZ3RoJiZ1LmNhbGwodGhpcyxzWzBdLHNbMV0sc1syXSl9fSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlIGluc3RhbmNlb2YgbC5kZWZhdWx0LlZlY3Rvcj8odGhpcy54LT1lLnh8fDAsdGhpcy55LT1lLnl8fDAsdGhpcy56LT1lLnp8fDApOmUgaW5zdGFuY2VvZiBBcnJheT8odGhpcy54LT1lWzBdfHwwLHRoaXMueS09ZVsxXXx8MCx0aGlzLnotPWVbMl18fDApOih0aGlzLngtPWV8fDAsdGhpcy55LT10fHwwLHRoaXMuei09cnx8MCksdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUubXVsdD1mdW5jdGlvbihlLHQscil7aWYoZSBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3IpcmV0dXJuIE51bWJlci5pc0Zpbml0ZShlLngpJiZOdW1iZXIuaXNGaW5pdGUoZS55KSYmTnVtYmVyLmlzRmluaXRlKGUueikmJlwibnVtYmVyXCI9PXR5cGVvZiBlLngmJlwibnVtYmVyXCI9PXR5cGVvZiBlLnkmJlwibnVtYmVyXCI9PXR5cGVvZiBlLno/KHRoaXMueCo9ZS54LHRoaXMueSo9ZS55LHRoaXMueio9ZS56KTpjb25zb2xlLndhcm4oXCJwNS5WZWN0b3IucHJvdG90eXBlLm11bHQ6XCIsXCJ4IGNvbnRhaW5zIGNvbXBvbmVudHMgdGhhdCBhcmUgZWl0aGVyIHVuZGVmaW5lZCBvciBub3QgZmluaXRlIG51bWJlcnNcIiksdGhpcztpZihlIGluc3RhbmNlb2YgQXJyYXkpcmV0dXJuIGUuZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlci5pc0Zpbml0ZShlKX0pJiZlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlfSk/MT09PWUubGVuZ3RoPyh0aGlzLngqPWVbMF0sdGhpcy55Kj1lWzBdLHRoaXMueio9ZVswXSk6Mj09PWUubGVuZ3RoPyh0aGlzLngqPWVbMF0sdGhpcy55Kj1lWzFdKTozPT09ZS5sZW5ndGgmJih0aGlzLngqPWVbMF0sdGhpcy55Kj1lWzFdLHRoaXMueio9ZVsyXSk6Y29uc29sZS53YXJuKFwicDUuVmVjdG9yLnByb3RvdHlwZS5tdWx0OlwiLFwieCBjb250YWlucyBlbGVtZW50cyB0aGF0IGFyZSBlaXRoZXIgdW5kZWZpbmVkIG9yIG5vdCBmaW5pdGUgbnVtYmVyc1wiKSx0aGlzO3ZhciBuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIG4uZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlci5pc0Zpbml0ZShlKX0pJiZuLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlfSk/KDE9PT1hcmd1bWVudHMubGVuZ3RoJiYodGhpcy54Kj1lLHRoaXMueSo9ZSx0aGlzLnoqPWUpLDI9PT1hcmd1bWVudHMubGVuZ3RoJiYodGhpcy54Kj1lLHRoaXMueSo9dCksMz09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLngqPWUsdGhpcy55Kj10LHRoaXMueio9cikpOmNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUubXVsdDpcIixcIngsIHksIG9yIHogYXJndW1lbnRzIGFyZSBlaXRoZXIgdW5kZWZpbmVkIG9yIG5vdCBhIGZpbml0ZSBudW1iZXJcIiksdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuZGl2PWZ1bmN0aW9uKGUsdCxyKXtpZihlIGluc3RhbmNlb2YgbC5kZWZhdWx0LlZlY3Rvcil7aWYoTnVtYmVyLmlzRmluaXRlKGUueCkmJk51bWJlci5pc0Zpbml0ZShlLnkpJiZOdW1iZXIuaXNGaW5pdGUoZS56KSYmXCJudW1iZXJcIj09dHlwZW9mIGUueCYmXCJudW1iZXJcIj09dHlwZW9mIGUueSYmXCJudW1iZXJcIj09dHlwZW9mIGUueil7aWYoMD09PWUueHx8MD09PWUueXx8MD09PWUueilyZXR1cm4gY29uc29sZS53YXJuKFwicDUuVmVjdG9yLnByb3RvdHlwZS5kaXY6XCIsXCJkaXZpZGUgYnkgMFwiKSx0aGlzO3RoaXMueC89ZS54LHRoaXMueS89ZS55LHRoaXMuei89ZS56fWVsc2UgY29uc29sZS53YXJuKFwicDUuVmVjdG9yLnByb3RvdHlwZS5kaXY6XCIsXCJ4IGNvbnRhaW5zIGNvbXBvbmVudHMgdGhhdCBhcmUgZWl0aGVyIHVuZGVmaW5lZCBvciBub3QgZmluaXRlIG51bWJlcnNcIik7cmV0dXJuIHRoaXN9aWYoZSBpbnN0YW5jZW9mIEFycmF5KXtpZihlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiBOdW1iZXIuaXNGaW5pdGUoZSl9KSYmZS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZX0pKXtpZihlLnNvbWUoZnVuY3Rpb24oZSl7cmV0dXJuIDA9PT1lfSkpcmV0dXJuIGNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUuZGl2OlwiLFwiZGl2aWRlIGJ5IDBcIiksdGhpczsxPT09ZS5sZW5ndGg/KHRoaXMueC89ZVswXSx0aGlzLnkvPWVbMF0sdGhpcy56Lz1lWzBdKToyPT09ZS5sZW5ndGg/KHRoaXMueC89ZVswXSx0aGlzLnkvPWVbMV0pOjM9PT1lLmxlbmd0aCYmKHRoaXMueC89ZVswXSx0aGlzLnkvPWVbMV0sdGhpcy56Lz1lWzJdKX1lbHNlIGNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUuZGl2OlwiLFwieCBjb250YWlucyBjb21wb25lbnRzIHRoYXQgYXJlIGVpdGhlciB1bmRlZmluZWQgb3Igbm90IGZpbml0ZSBudW1iZXJzXCIpO3JldHVybiB0aGlzfXZhciBuPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7aWYobi5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4gTnVtYmVyLmlzRmluaXRlKGUpfSkmJm4uZXZlcnkoZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGV9KSl7aWYobi5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiAwPT09ZX0pKXJldHVybiBjb25zb2xlLndhcm4oXCJwNS5WZWN0b3IucHJvdG90eXBlLmRpdjpcIixcImRpdmlkZSBieSAwXCIpLHRoaXM7MT09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLngvPWUsdGhpcy55Lz1lLHRoaXMuei89ZSksMj09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLngvPWUsdGhpcy55Lz10KSwzPT09YXJndW1lbnRzLmxlbmd0aCYmKHRoaXMueC89ZSx0aGlzLnkvPXQsdGhpcy56Lz1yKX1lbHNlIGNvbnNvbGUud2FybihcInA1LlZlY3Rvci5wcm90b3R5cGUuZGl2OlwiLFwieCwgeSwgb3IgeiBhcmd1bWVudHMgYXJlIGVpdGhlciB1bmRlZmluZWQgb3Igbm90IGEgZmluaXRlIG51bWJlclwiKTtyZXR1cm4gdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUubWFnPWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguc3FydCh0aGlzLm1hZ1NxKCkpfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5tYWdTcT1mdW5jdGlvbigpe3ZhciBlPXRoaXMueCx0PXRoaXMueSxyPXRoaXMuejtyZXR1cm4gZSplK3QqdCtyKnJ9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmRvdD1mdW5jdGlvbihlLHQscil7cmV0dXJuIGUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yP3RoaXMuZG90KGUueCxlLnksZS56KTp0aGlzLngqKGV8fDApK3RoaXMueSoodHx8MCkrdGhpcy56KihyfHwwKX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuY3Jvc3M9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy55KmUuei10aGlzLnoqZS55LHI9dGhpcy56KmUueC10aGlzLngqZS56LG49dGhpcy54KmUueS10aGlzLnkqZS54O3JldHVybiB0aGlzLnA1P25ldyBsLmRlZmF1bHQuVmVjdG9yKHRoaXMucDUsW3QscixuXSk6bmV3IGwuZGVmYXVsdC5WZWN0b3IodCxyLG4pfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5kaXN0PWZ1bmN0aW9uKGUpe3JldHVybiBlLmNvcHkoKS5zdWIodGhpcykubWFnKCl9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLm5vcm1hbGl6ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMubWFnKCk7cmV0dXJuIDAhPT1lJiZ0aGlzLm11bHQoMS9lKSx0aGlzfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5saW1pdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLm1hZ1NxKCk7cmV0dXJuIGUqZTx0JiZ0aGlzLmRpdihNYXRoLnNxcnQodCkpLm11bHQoZSksdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuc2V0TWFnPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm5vcm1hbGl6ZSgpLm11bHQoZSl9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmhlYWRpbmc9ZnVuY3Rpb24oKXt2YXIgZT1NYXRoLmF0YW4yKHRoaXMueSx0aGlzLngpO3JldHVybiB0aGlzLnA1P3RoaXMucDUuX2Zyb21SYWRpYW5zKGUpOmV9LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmhlYWRpbmcoKStlO3RoaXMucDUmJih0PXRoaXMucDUuX3RvUmFkaWFucyh0KSk7dmFyIHI9dGhpcy5tYWcoKTtyZXR1cm4gdGhpcy54PU1hdGguY29zKHQpKnIsdGhpcy55PU1hdGguc2luKHQpKnIsdGhpc30sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUuYW5nbGVCZXR3ZWVuPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcy5kb3QoZSkvKHRoaXMubWFnKCkqZS5tYWcoKSk7cmV0dXJuIHQ9TWF0aC5hY29zKE1hdGgubWluKDEsTWF0aC5tYXgoLTEscikpKSx0Kj1NYXRoLnNpZ24odGhpcy5jcm9zcyhlKS56fHwxKSx0aGlzLnA1JiYodD10aGlzLnA1Ll9mcm9tUmFkaWFucyh0KSksdH0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUubGVycD1mdW5jdGlvbihlLHQscixuKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3I/dGhpcy5sZXJwKGUueCxlLnksZS56LHQpOih0aGlzLngrPShlLXRoaXMueCkqbnx8MCx0aGlzLnkrPSh0LXRoaXMueSkqbnx8MCx0aGlzLnorPShyLXRoaXMueikqbnx8MCx0aGlzKX0sbC5kZWZhdWx0LlZlY3Rvci5wcm90b3R5cGUucmVmbGVjdD1mdW5jdGlvbihlKXtyZXR1cm4gZS5ub3JtYWxpemUoKSx0aGlzLnN1YihlLm11bHQoMip0aGlzLmRvdChlKSkpfSxsLmRlZmF1bHQuVmVjdG9yLnByb3RvdHlwZS5hcnJheT1mdW5jdGlvbigpe3JldHVyblt0aGlzLnh8fDAsdGhpcy55fHwwLHRoaXMuenx8MF19LGwuZGVmYXVsdC5WZWN0b3IucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlLHQscil7dmFyIG4sYSxvO3JldHVybiBvPWUgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yPyhuPWUueHx8MCxhPWUueXx8MCxlLnp8fDApOmUgaW5zdGFuY2VvZiBBcnJheT8obj1lWzBdfHwwLGE9ZVsxXXx8MCxlWzJdfHwwKToobj1lfHwwLGE9dHx8MCxyfHwwKSx0aGlzLng9PT1uJiZ0aGlzLnk9PT1hJiZ0aGlzLno9PT1vfSxsLmRlZmF1bHQuVmVjdG9yLmZyb21BbmdsZT1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0xKSxuZXcgbC5kZWZhdWx0LlZlY3Rvcih0Kk1hdGguY29zKGUpLHQqTWF0aC5zaW4oZSksMCl9LGwuZGVmYXVsdC5WZWN0b3IuZnJvbUFuZ2xlcz1mdW5jdGlvbihlLHQscil7dm9pZCAwPT09ciYmKHI9MSk7dmFyIG49TWF0aC5jb3ModCksYT1NYXRoLnNpbih0KSxvPU1hdGguY29zKGUpLGk9TWF0aC5zaW4oZSk7cmV0dXJuIG5ldyBsLmRlZmF1bHQuVmVjdG9yKHIqaSphLC1yKm8scippKm4pfSxsLmRlZmF1bHQuVmVjdG9yLnJhbmRvbTJEPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZnJvbUFuZ2xlKE1hdGgucmFuZG9tKCkqby5UV09fUEkpfSxsLmRlZmF1bHQuVmVjdG9yLnJhbmRvbTNEPWZ1bmN0aW9uKCl7dmFyIGU9TWF0aC5yYW5kb20oKSpvLlRXT19QSSx0PTIqTWF0aC5yYW5kb20oKS0xLHI9TWF0aC5zcXJ0KDEtdCp0KSxuPXIqTWF0aC5jb3MoZSksYT1yKk1hdGguc2luKGUpO3JldHVybiBuZXcgbC5kZWZhdWx0LlZlY3RvcihuLGEsdCl9LGwuZGVmYXVsdC5WZWN0b3IuYWRkPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcj9yLnNldChlKToocj1lLmNvcHkoKSwzPT09YXJndW1lbnRzLmxlbmd0aCYmbC5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwiVGhlIHRhcmdldCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLCBpdCBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5hZGRcIikpLHIuYWRkKHQpLHJ9LGwuZGVmYXVsdC5WZWN0b3IucmVtPWZ1bmN0aW9uKGUsdCl7aWYoZSBpbnN0YW5jZW9mIGwuZGVmYXVsdC5WZWN0b3ImJnQgaW5zdGFuY2VvZiBsLmRlZmF1bHQuVmVjdG9yKXt2YXIgcj1lLmNvcHkoKTtyZXR1cm4gci5yZW0odCkscn19LGwuZGVmYXVsdC5WZWN0b3Iuc3ViPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcj9yLnNldChlKToocj1lLmNvcHkoKSwzPT09YXJndW1lbnRzLmxlbmd0aCYmbC5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwiVGhlIHRhcmdldCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLCBpdCBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5zdWJcIikpLHIuc3ViKHQpLHJ9LGwuZGVmYXVsdC5WZWN0b3IubXVsdD1mdW5jdGlvbihlLHQscil7cmV0dXJuIHI/ci5zZXQoZSk6KHI9ZS5jb3B5KCksMz09PWFyZ3VtZW50cy5sZW5ndGgmJmwuZGVmYXVsdC5fZnJpZW5kbHlFcnJvcihcIlRoZSB0YXJnZXQgcGFyYW1ldGVyIGlzIHVuZGVmaW5lZCwgaXQgc2hvdWxkIGJlIG9mIHR5cGUgcDUuVmVjdG9yXCIsXCJwNS5WZWN0b3IubXVsdFwiKSksci5tdWx0KHQpLHJ9LGwuZGVmYXVsdC5WZWN0b3IuZGl2PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gcj9yLnNldChlKToocj1lLmNvcHkoKSwzPT09YXJndW1lbnRzLmxlbmd0aCYmbC5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwiVGhlIHRhcmdldCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLCBpdCBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5kaXZcIikpLHIuZGl2KHQpLHJ9LGwuZGVmYXVsdC5WZWN0b3IuZG90PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuZG90KHQpfSxsLmRlZmF1bHQuVmVjdG9yLmNyb3NzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY3Jvc3ModCl9LGwuZGVmYXVsdC5WZWN0b3IuZGlzdD1mdW5jdGlvbihlLHQpe3JldHVybiBlLmRpc3QodCl9LGwuZGVmYXVsdC5WZWN0b3IubGVycD1mdW5jdGlvbihlLHQscixuKXtyZXR1cm4gbj9uLnNldChlKToobj1lLmNvcHkoKSw0PT09YXJndW1lbnRzLmxlbmd0aCYmbC5kZWZhdWx0Ll9mcmllbmRseUVycm9yKFwiVGhlIHRhcmdldCBwYXJhbWV0ZXIgaXMgdW5kZWZpbmVkLCBpdCBzaG91bGQgYmUgb2YgdHlwZSBwNS5WZWN0b3JcIixcInA1LlZlY3Rvci5sZXJwXCIpKSxuLmxlcnAodCxyKSxufSxsLmRlZmF1bHQuVmVjdG9yLm1hZz1mdW5jdGlvbihlKXt2YXIgdD1lLngscj1lLnksbj1lLnosYT10KnQrcipyK24qbjtyZXR1cm4gTWF0aC5zcXJ0KGEpfTt2YXIgYT1sLmRlZmF1bHQuVmVjdG9yO3IuZGVmYXVsdD1hfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzJ9XSw2NjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07dmFyIG89XCJfbGNnX3JhbmRvbV9zdGF0ZVwiLGk9NDI5NDk2NzI5NixzPTA7YS5kZWZhdWx0LnByb3RvdHlwZS5fbGNnPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzW2VdPSgxNjY0NTI1KnRoaXNbZV0rMTAxMzkwNDIyMyklaSx0aGlzW2VdL2l9LGEuZGVmYXVsdC5wcm90b3R5cGUuX2xjZ1NldFNlZWQ9ZnVuY3Rpb24oZSx0KXt0aGlzW2VdPShudWxsPT10P01hdGgucmFuZG9tKCkqaTp0KT4+PjB9LGEuZGVmYXVsdC5wcm90b3R5cGUucmFuZG9tU2VlZD1mdW5jdGlvbihlKXt0aGlzLl9sY2dTZXRTZWVkKG8sZSksdGhpcy5fZ2F1c3NpYW5fcHJldmlvdXM9ITF9LGEuZGVmYXVsdC5wcm90b3R5cGUucmFuZG9tPWZ1bmN0aW9uKGUsdCl7dmFyIHI7aWYoYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJyYW5kb21cIixhcmd1bWVudHMpLHI9bnVsbCE9dGhpc1tvXT90aGlzLl9sY2cobyk6TWF0aC5yYW5kb20oKSx2b2lkIDA9PT1lKXJldHVybiByO2lmKHZvaWQgMD09PXQpcmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheT9lW01hdGguZmxvb3IociplLmxlbmd0aCldOnIqZTtpZih0PGUpe3ZhciBuPWU7ZT10LHQ9bn1yZXR1cm4gcioodC1lKStlfSxhLmRlZmF1bHQucHJvdG90eXBlLnJhbmRvbUdhdXNzaWFuPWZ1bmN0aW9uKGUsdCl7dmFyIHIsbixhLG87aWYodGhpcy5fZ2F1c3NpYW5fcHJldmlvdXMpcj1zLHRoaXMuX2dhdXNzaWFuX3ByZXZpb3VzPSExO2Vsc2V7Zm9yKDsxPD0obz0obj10aGlzLnJhbmRvbSgyKS0xKSpuKyhhPXRoaXMucmFuZG9tKDIpLTEpKmEpOyk7cj1uKihvPU1hdGguc3FydCgtMipNYXRoLmxvZyhvKS9vKSkscz1hKm8sdGhpcy5fZ2F1c3NpYW5fcHJldmlvdXM9ITB9cmV0dXJuIHIqKHR8fDEpKyhlfHwwKX07dmFyIGw9YS5kZWZhdWx0O3IuZGVmYXVsdD1sfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDY3OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxvPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9YS5kZWZhdWx0LnByb3RvdHlwZS5fYW5nbGVNb2RlPW8uUkFESUFOUyxhLmRlZmF1bHQucHJvdG90eXBlLmFjb3M9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2Zyb21SYWRpYW5zKE1hdGguYWNvcyhlKSl9LGEuZGVmYXVsdC5wcm90b3R5cGUuYXNpbj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fZnJvbVJhZGlhbnMoTWF0aC5hc2luKGUpKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5hdGFuPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9mcm9tUmFkaWFucyhNYXRoLmF0YW4oZSkpfSxhLmRlZmF1bHQucHJvdG90eXBlLmF0YW4yPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX2Zyb21SYWRpYW5zKE1hdGguYXRhbjIoZSx0KSl9LGEuZGVmYXVsdC5wcm90b3R5cGUuY29zPWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLmNvcyh0aGlzLl90b1JhZGlhbnMoZSkpfSxhLmRlZmF1bHQucHJvdG90eXBlLnNpbj1mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5zaW4odGhpcy5fdG9SYWRpYW5zKGUpKX0sYS5kZWZhdWx0LnByb3RvdHlwZS50YW49ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgudGFuKHRoaXMuX3RvUmFkaWFucyhlKSl9LGEuZGVmYXVsdC5wcm90b3R5cGUuZGVncmVlcz1mdW5jdGlvbihlKXtyZXR1cm4gZSpvLlJBRF9UT19ERUd9LGEuZGVmYXVsdC5wcm90b3R5cGUucmFkaWFucz1mdW5jdGlvbihlKXtyZXR1cm4gZSpvLkRFR19UT19SQUR9LGEuZGVmYXVsdC5wcm90b3R5cGUuYW5nbGVNb2RlPWZ1bmN0aW9uKGUpe2UhPT1vLkRFR1JFRVMmJmUhPT1vLlJBRElBTlN8fCh0aGlzLl9hbmdsZU1vZGU9ZSl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX3RvUmFkaWFucz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYW5nbGVNb2RlPT09by5ERUdSRUVTP2Uqby5ERUdfVE9fUkFEOmV9LGEuZGVmYXVsdC5wcm90b3R5cGUuX3RvRGVncmVlcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYW5nbGVNb2RlPT09by5SQURJQU5TP2Uqby5SQURfVE9fREVHOmV9LGEuZGVmYXVsdC5wcm90b3R5cGUuX2Zyb21SYWRpYW5zPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9hbmdsZU1vZGU9PT1vLkRFR1JFRVM/ZSpvLlJBRF9UT19ERUc6ZX07dmFyIGw9YS5kZWZhdWx0O3IuZGVmYXVsdD1sfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzJ9XSw2ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07YS5kZWZhdWx0LnByb3RvdHlwZS50ZXh0QWxpZ249ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0ZXh0QWxpZ25cIixhcmd1bWVudHMpLChyPXRoaXMuX3JlbmRlcmVyKS50ZXh0QWxpZ24uYXBwbHkocixhcmd1bWVudHMpfSxhLmRlZmF1bHQucHJvdG90eXBlLnRleHRMZWFkaW5nPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRMZWFkaW5nXCIsYXJndW1lbnRzKSwodD10aGlzLl9yZW5kZXJlcikudGV4dExlYWRpbmcuYXBwbHkodCxhcmd1bWVudHMpfSxhLmRlZmF1bHQucHJvdG90eXBlLnRleHRTaXplPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRTaXplXCIsYXJndW1lbnRzKSwodD10aGlzLl9yZW5kZXJlcikudGV4dFNpemUuYXBwbHkodCxhcmd1bWVudHMpfSxhLmRlZmF1bHQucHJvdG90eXBlLnRleHRTdHlsZT1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0ZXh0U3R5bGVcIixhcmd1bWVudHMpLCh0PXRoaXMuX3JlbmRlcmVyKS50ZXh0U3R5bGUuYXBwbHkodCxhcmd1bWVudHMpfSxhLmRlZmF1bHQucHJvdG90eXBlLnRleHRXaWR0aD1mdW5jdGlvbigpe2Zvcih2YXIgZSx0PWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkodCksbj0wO248dDtuKyspcltuXT1hcmd1bWVudHNbbl07cmV0dXJuIHJbMF0rPVwiXCIsYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0ZXh0V2lkdGhcIixyKSwwPT09clswXS5sZW5ndGg/MDooZT10aGlzLl9yZW5kZXJlcikudGV4dFdpZHRoLmFwcGx5KGUscil9LGEuZGVmYXVsdC5wcm90b3R5cGUudGV4dEFzY2VudD1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3JldHVybiBhLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInRleHRBc2NlbnRcIix0KSx0aGlzLl9yZW5kZXJlci50ZXh0QXNjZW50KCl9LGEuZGVmYXVsdC5wcm90b3R5cGUudGV4dERlc2NlbnQ9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gYS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0ZXh0RGVzY2VudFwiLHQpLHRoaXMuX3JlbmRlcmVyLnRleHREZXNjZW50KCl9LGEuZGVmYXVsdC5wcm90b3R5cGUuX3VwZGF0ZVRleHRNZXRyaWNzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLl91cGRhdGVUZXh0TWV0cmljcygpfTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNjk6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKGUpe3JldHVybihpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGQ9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGE9bChlKFwiLi4vY29yZS9jb25zdGFudHNcIikpLG89bChlKFwib3BlbnR5cGUuanNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gbChlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19cmV0dXJuIHIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscikscn1lKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvdmFsaWRhdGVfcGFyYW1zXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9maWxlX2Vycm9yc1wiKSxlKFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIiksZC5kZWZhdWx0LnByb3RvdHlwZS5sb2FkRm9udD1mdW5jdGlvbihzLGwscCl7ZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJsb2FkRm9udFwiLGFyZ3VtZW50cyk7dmFyIHU9bmV3IGQuZGVmYXVsdC5Gb250KHRoaXMpLGM9dGhpcztyZXR1cm4gby5sb2FkKHMsZnVuY3Rpb24oZSx0KXtpZihlKXJldHVybiBkLmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcig0LHMpLHZvaWQgMCE9PXA/cChlKTp2b2lkIGNvbnNvbGUuZXJyb3IoZSxzKTt1LmZvbnQ9dCx2b2lkIDAhPT1sJiZsKHUpLGMuX2RlY3JlbWVudFByZWxvYWQoKTt2YXIgcixuLGE9cy5zcGxpdChcIlxcXFxcIikucG9wKCkuc3BsaXQoXCIvXCIpLnBvcCgpLG89YS5sYXN0SW5kZXhPZihcIi5cIiksaT1vPDE/bnVsbDphLnN1YnN0cihvKzEpO1tcInR0ZlwiLFwib3RmXCIsXCJ3b2ZmXCIsXCJ3b2ZmMlwiXS5pbmNsdWRlcyhpKSYmKHI9YS5zdWJzdHIoMCxvKSwobj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIikpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXFxuQGZvbnQtZmFjZSB7XFxuZm9udC1mYW1pbHk6IFwiLmNvbmNhdChyLFwiO1xcbnNyYzogdXJsKFwiKS5jb25jYXQocyxcIik7XFxufVxcblwiKSkpLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobikpfSksdX0sZC5kZWZhdWx0LnByb3RvdHlwZS50ZXh0PWZ1bmN0aW9uKGUsdCxyLG4sYSl7dmFyIG87cmV0dXJuIGQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidGV4dFwiLGFyZ3VtZW50cyksdGhpcy5fcmVuZGVyZXIuX2RvRmlsbHx8dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlPyhvPXRoaXMuX3JlbmRlcmVyKS50ZXh0LmFwcGx5KG8sYXJndW1lbnRzKTp0aGlzfSxkLmRlZmF1bHQucHJvdG90eXBlLnRleHRGb250PWZ1bmN0aW9uKGUsdCl7aWYoZC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0ZXh0Rm9udFwiLGFyZ3VtZW50cyksYXJndW1lbnRzLmxlbmd0aCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKFwibnVsbCBmb250IHBhc3NlZCB0byB0ZXh0Rm9udFwiKTtyZXR1cm4gdGhpcy5fcmVuZGVyZXIuX3NldFByb3BlcnR5KFwiX3RleHRGb250XCIsZSksdCYmKHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl90ZXh0U2l6ZVwiLHQpLHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl90ZXh0TGVhZGluZ1wiLHQqYS5fREVGQVVMVF9MRUFETVVMVCkpLHRoaXMuX3JlbmRlcmVyLl9hcHBseVRleHRQcm9wZXJ0aWVzKCl9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLl90ZXh0Rm9udH07dmFyIHA9ZC5kZWZhdWx0O3IuZGVmYXVsdD1wfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmVzX2NvcmVcIjoyNCxcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCI6MjUsXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIjoyNyxcIi4uL2NvcmUvbWFpblwiOjMyLFwib3BlbnR5cGUuanNcIjoxM31dLDcwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSx4PWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWgoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9aSgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIGkoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBpPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9ZnVuY3Rpb24gaChlKXtyZXR1cm4oaD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9ZnVuY3Rpb24gbShlLHQpe2Zvcih2YXIgcj1mdW5jdGlvbihlLHQpe2lmKFwib2JqZWN0XCIhPT1oKGUpKWU9dDtlbHNlIGZvcih2YXIgciBpbiB0KXZvaWQgMD09PWVbcl0mJihlW3JdPXRbcl0pO3JldHVybiBlfSh0LHtzYW1wbGVGYWN0b3I6LjEsc2ltcGxpZnlUaHJlc2hvbGQ6MH0pLG49bChlLDAsMSksYT1uLyhuKnIuc2FtcGxlRmFjdG9yKSxvPVtdLGk9MDtpPG47aSs9YSlvLnB1c2gobChlLGkpKTtyZXR1cm4gci5zaW1wbGlmeVRocmVzaG9sZCYmZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTowLHI9MCxuPWUubGVuZ3RoLTE7MzxlLmxlbmd0aCYmMDw9bjstLW4pZChzKGUsbi0xKSxzKGUsbikscyhlLG4rMSksdCkmJihlLnNwbGljZShuJWUubGVuZ3RoLDEpLHIrKyl9KG8sci5zaW1wbGlmeVRocmVzaG9sZCksb31mdW5jdGlvbiBmKGUpe2Zvcih2YXIgdCxyPVtdLG49MDtuPGUubGVuZ3RoO24rKylcIk1cIj09PWVbbl0udHlwZSYmKHQmJnIucHVzaCh0KSx0PVtdKSx0LnB1c2gobyhlW25dKSk7cmV0dXJuIHIucHVzaCh0KSxyfWZ1bmN0aW9uIG8oZSl7dmFyIHQ9W2UudHlwZV07cmV0dXJuXCJNXCI9PT1lLnR5cGV8fFwiTFwiPT09ZS50eXBlP3QucHVzaChlLngsZS55KTpcIkNcIj09PWUudHlwZT90LnB1c2goZS54MSxlLnkxLGUueDIsZS55MixlLngsZS55KTpcIlFcIj09PWUudHlwZSYmdC5wdXNoKGUueDEsZS55MSxlLngsZS55KSx0fWZ1bmN0aW9uIHMoZSx0KXt2YXIgcj1lLmxlbmd0aDtyZXR1cm4gZVt0PDA/dCVyK3I6dCVyXX1mdW5jdGlvbiBkKGUsdCxyLG4pe2lmKCFuKXJldHVybiAwPT0oYT1lLGk9ciwoKG89dClbMF0tYVswXSkqKGlbMV0tYVsxXSktKGlbMF0tYVswXSkqKG9bMV0tYVsxXSkpO3ZhciBhLG8saTt2b2lkIDA9PT1kLnRtcFBvaW50MSYmKGQudG1wUG9pbnQxPVtdLGQudG1wUG9pbnQyPVtdKTt2YXIgcz1kLnRtcFBvaW50MSxsPWQudG1wUG9pbnQyO3MueD10LngtZS54LHMueT10LnktZS55LGwueD1yLngtdC54LGwueT1yLnktdC55O3ZhciBwPXMueCpsLngrcy55KmwueSx1PU1hdGguc3FydChzLngqcy54K3MueSpzLnkpLGM9TWF0aC5zcXJ0KGwueCpsLngrbC55KmwueSk7cmV0dXJuIE1hdGguYWNvcyhwLyh1KmMpKTxufWZ1bmN0aW9uIGMoZSx0LHIsbixhLG8saSxzLGwpe3ZhciBwPTEtbCx1PU1hdGgucG93KHAsMyksYz1NYXRoLnBvdyhwLDIpLGQ9bCpsLGg9ZCpsLG09dSplKzMqYypsKnIrMypwKmwqbCphK2gqaSxmPXUqdCszKmMqbCpuKzMqcCpsKmwqbytoKnMseT1lKzIqbCooci1lKStkKihhLTIqcitlKSxnPXQrMipsKihuLXQpK2QqKG8tMipuK3QpLHY9cisyKmwqKGEtcikrZCooaS0yKmErciksYj1uKzIqbCooby1uKStkKihzLTIqbytuKSxfPXAqZStsKnIseD1wKnQrbCpuLFM9cCphK2wqaSx3PXAqbytsKnMsTT05MC0xODAqTWF0aC5hdGFuMih5LXYsZy1iKS9NYXRoLlBJO3JldHVybih2PHl8fGc8YikmJihNKz0xODApLHt4Om0seTpmLG06e3g6eSx5Omd9LG46e3g6dix5OmJ9LHN0YXJ0Ont4Ol8seTp4fSxlbmQ6e3g6Uyx5Ond9LGFscGhhOk19fWZ1bmN0aW9uIHkoZSx0LHIsbixhLG8saSxzLGwpe3JldHVybiBudWxsPT1sP2coZSx0LHIsbixhLG8saSxzKTpjKGUsdCxyLG4sYSxvLGkscyxmdW5jdGlvbihlLHQscixuLGEsbyxpLHMsbCl7aWYobDwwfHxnKGUsdCxyLG4sYSxvLGkscyk8bClyZXR1cm47dmFyIHAsdT0uNSxjPTEtdTtwPWcoZSx0LHIsbixhLG8saSxzLGMpO2Zvcig7LjAxPE1hdGguYWJzKHAtbCk7KXA9ZyhlLHQscixuLGEsbyxpLHMsYys9KHA8bD8xOi0xKSoodS89MikpO3JldHVybiBjfShlLHQscixuLGEsbyxpLHMsbCkpfWZ1bmN0aW9uIGwoZSx0LHIpe2Zvcih2YXIgbixhLG8saSxzLGw9MCxwPTAsdT0oZT1mdW5jdGlvbihlLHQpe2Z1bmN0aW9uIHIoZSx0LHIpe3ZhciBuLGE7aWYoIWUpcmV0dXJuW1wiQ1wiLHQueCx0LnksdC54LHQueSx0LngsdC55XTtzd2l0Y2goZVswXWlue1Q6MSxROjF9fHwodC5xeD10LnF5PW51bGwpLGVbMF0pe2Nhc2VcIk1cIjp0Llg9ZVsxXSx0Llk9ZVsyXTticmVhaztjYXNlXCJBXCI6ZT1bXCJDXCJdLmNvbmNhdChmdW5jdGlvbiBlKHQscixuLGEsbyxpLHMsbCxwLHUpe3ZhciBjPU1hdGguUEk7dmFyIGQ9MTIwKmMvMTgwO3ZhciBoO3ZhciBtO3ZhciBmO3ZhciB5O3ZhciBnPWMvMTgwKigrb3x8MCk7dmFyIHY9W107dmFyIGI7dmFyIF89ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUqTWF0aC5jb3MociktdCpNYXRoLnNpbihyKSxhPWUqTWF0aC5zaW4ocikrdCpNYXRoLmNvcyhyKTtyZXR1cm57eDpuLHk6YX19O2lmKHUpaD11WzBdLG09dVsxXSxmPXVbMl0seT11WzNdO2Vsc2V7Yj1fKHQsciwtZyksdD1iLngscj1iLnksYj1fKGwscCwtZyksbD1iLngscD1iLnk7dmFyIHg9KHQtbCkvMixTPShyLXApLzIsdz14KngvKG4qbikrUypTLyhhKmEpOzE8dyYmKHc9TWF0aC5zcXJ0KHcpLG4qPXcsYSo9dyk7dmFyIE09bipuLEU9YSphLFQ9KGk9PT1zPy0xOjEpKk1hdGguc3FydChNYXRoLmFicygoTSpFLU0qUypTLUUqeCp4KS8oTSpTKlMrRSp4KngpKSk7Zj1UKm4qUy9hKyh0K2wpLzIseT1UKi1hKngvbisocitwKS8yLGg9TWF0aC5hc2luKCgoci15KS9hKS50b0ZpeGVkKDkpKSxtPU1hdGguYXNpbigoKHAteSkvYSkudG9GaXhlZCg5KSksKGg9dDxmP2MtaDpoKTwwJiYoaD0yKmMraCksKG09bDxmP2MtbTptKTwwJiYobT0yKmMrbSkscyYmbTxoJiYoaC09MipjKSwhcyYmaDxtJiYobS09MipjKX12YXIgQz1tLWg7aWYoTWF0aC5hYnMoQyk+ZCl7dmFyIE49bSxPPWwsTD1wO209aCtkKihzJiZoPG0/MTotMSksbD1mK24qTWF0aC5jb3MobSkscD15K2EqTWF0aC5zaW4obSksdj1lKGwscCxuLGEsbywwLHMsTyxMLFttLE4sZix5XSl9Qz1tLWg7dmFyIEk9TWF0aC5jb3MoaCksUD1NYXRoLnNpbihoKSxSPU1hdGguY29zKG0pLEQ9TWF0aC5zaW4obSksQT1NYXRoLnRhbihDLzQpLGs9NC8zKm4qQSxGPTQvMyphKkEsVT1bdCxyXSxCPVt0K2sqUCxyLUYqSV0sRz1bbCtrKkQscC1GKlJdLGo9W2wscF07QlswXT0yKlVbMF0tQlswXTtCWzFdPTIqVVsxXS1CWzFdO3tpZih1KXJldHVybltCLEcsal0uY29uY2F0KHYpO3Y9W0IsRyxqXS5jb25jYXQodikuam9pbigpLnNwbGl0KFwiLFwiKTtmb3IodmFyIFY9W10sej0wLEg9di5sZW5ndGg7ejxIO3orKylWW3pdPXolMj9fKHZbei0xXSx2W3pdLGcpLnk6Xyh2W3pdLHZbeisxXSxnKS54O3JldHVybiBWfX0uYXBwbHkoMCxbdC54LHQueV0uY29uY2F0KGUuc2xpY2UoMSkpKSk7YnJlYWs7Y2FzZVwiU1wiOmE9XCJDXCI9PT1yfHxcIlNcIj09PXI/KG49Mip0LngtdC5ieCwyKnQueS10LmJ5KToobj10LngsdC55KSxlPVtcIkNcIixuLGFdLmNvbmNhdChlLnNsaWNlKDEpKTticmVhaztjYXNlXCJUXCI6XCJRXCI9PT1yfHxcIlRcIj09PXI/KHQucXg9Mip0LngtdC5xeCx0LnF5PTIqdC55LXQucXkpOih0LnF4PXQueCx0LnF5PXQueSksZT1bXCJDXCJdLmNvbmNhdCh3KHQueCx0LnksdC5xeCx0LnF5LGVbMV0sZVsyXSkpO2JyZWFrO2Nhc2VcIlFcIjp0LnF4PWVbMV0sdC5xeT1lWzJdLGU9W1wiQ1wiXS5jb25jYXQodyh0LngsdC55LGVbMV0sZVsyXSxlWzNdLGVbNF0pKTticmVhaztjYXNlXCJMXCI6ZT1bXCJDXCJdLmNvbmNhdChTKHQueCx0LnksZVsxXSxlWzJdKSk7YnJlYWs7Y2FzZVwiSFwiOmU9W1wiQ1wiXS5jb25jYXQoUyh0LngsdC55LGVbMV0sdC55KSk7YnJlYWs7Y2FzZVwiVlwiOmU9W1wiQ1wiXS5jb25jYXQoUyh0LngsdC55LHQueCxlWzFdKSk7YnJlYWs7Y2FzZVwiWlwiOmU9W1wiQ1wiXS5jb25jYXQoUyh0LngsdC55LHQuWCx0LlkpKX1yZXR1cm4gZX1mdW5jdGlvbiBuKGUsdCl7aWYoNzxlW3RdLmxlbmd0aCl7ZVt0XS5zaGlmdCgpO2Zvcih2YXIgcj1lW3RdO3IubGVuZ3RoOyl1W3RdPVwiQVwiLHMmJihjW3RdPVwiQVwiKSxlLnNwbGljZSh0KyssMCxbXCJDXCJdLmNvbmNhdChyLnNwbGljZSgwLDYpKSk7ZS5zcGxpY2UodCwxKSxvPU1hdGgubWF4KGkubGVuZ3RoLHMmJnMubGVuZ3RofHwwKX19ZnVuY3Rpb24gYShlLHQscixuLGEpe2UmJnQmJlwiTVwiPT09ZVthXVswXSYmXCJNXCIhPT10W2FdWzBdJiYodC5zcGxpY2UoYSwwLFtcIk1cIixuLngsbi55XSksci5ieD0wLHIuYnk9MCxyLng9ZVthXVsxXSxyLnk9ZVthXVsyXSxvPU1hdGgubWF4KGkubGVuZ3RoLHMmJnMubGVuZ3RofHwwKSl9dmFyIG8saT1iKGUpLHM9dCYmYih0KSxsPXt4OjAseTowLGJ4OjAsYnk6MCxYOjAsWTowLHF4Om51bGwscXk6bnVsbH0scD17eDowLHk6MCxieDowLGJ5OjAsWDowLFk6MCxxeDpudWxsLHF5Om51bGx9LHU9W10sYz1bXSxkPVwiXCIsaD1cIlwiO289TWF0aC5tYXgoaS5sZW5ndGgscyYmcy5sZW5ndGh8fDApO2Zvcih2YXIgbT0wO208bzttKyspe2lbbV0mJihkPWlbbV1bMF0pLFwiQ1wiIT09ZCYmKHVbbV09ZCxtJiYoaD11W20tMV0pKSxpW21dPXIoaVttXSxsLGgpLFwiQVwiIT09dVttXSYmXCJDXCI9PT1kJiYodVttXT1cIkNcIiksbihpLG0pLHMmJihzW21dJiYoZD1zW21dWzBdKSxcIkNcIiE9PWQmJihjW21dPWQsbSYmKGg9Y1ttLTFdKSksc1ttXT1yKHNbbV0scCxoKSxcIkFcIiE9PWNbbV0mJlwiQ1wiPT09ZCYmKGNbbV09XCJDXCIpLG4ocyxtKSksYShpLHMsbCxwLG0pLGEocyxpLHAsbCxtKTt2YXIgZj1pW21dLHk9cyYmc1ttXSxnPWYubGVuZ3RoLHY9cyYmeS5sZW5ndGg7bC54PWZbZy0yXSxsLnk9ZltnLTFdLGwuYng9cGFyc2VGbG9hdChmW2ctNF0pfHxsLngsbC5ieT1wYXJzZUZsb2F0KGZbZy0zXSl8fGwueSxwLmJ4PXMmJihwYXJzZUZsb2F0KHlbdi00XSl8fHAueCkscC5ieT1zJiYocGFyc2VGbG9hdCh5W3YtM10pfHxwLnkpLHAueD1zJiZ5W3YtMl0scC55PXMmJnlbdi0xXX1yZXR1cm4gcz9baSxzXTppfShlKSkubGVuZ3RoO3A8dTtwKyspe2lmKFwiTVwiPT09KG89ZVtwXSlbMF0pbj0rb1sxXSxhPStvWzJdO2Vsc2V7aWYodDxsKyhpPXkobixhLG9bMV0sb1syXSxvWzNdLG9bNF0sb1s1XSxvWzZdKSkmJiFyKXJldHVybnt4OihzPXkobixhLG9bMV0sb1syXSxvWzNdLG9bNF0sb1s1XSxvWzZdLHQtbCkpLngseTpzLnksYWxwaGE6cy5hbHBoYX07bCs9aSxuPStvWzVdLGE9K29bNl19by5zaGlmdCgpK299cmV0dXJuKHM9cj9sOmMobixhLG9bMF0sb1sxXSxvWzJdLG9bM10sb1s0XSxvWzVdLDEpKS5hbHBoYSYmKHM9e3g6cy54LHk6cy55LGFscGhhOnMuYWxwaGF9KSxzfWZ1bmN0aW9uIGIoZSl7dmFyIHQscj1bXSxuPTAsYT0wLG89MCxpPTAscz0wO2lmKCFlKXJldHVybiByO1wiTVwiPT09ZVswXVswXSYmKG89bj0rZVswXVsxXSxpPWE9K2VbMF1bMl0scysrLHJbMF09W1wiTVwiLG4sYV0pO2Zvcih2YXIgbCxwLHU9Mz09PWUubGVuZ3RoJiZcIk1cIj09PWVbMF1bMF0mJlwiUlwiPT09ZVsxXVswXS50b1VwcGVyQ2FzZSgpJiZcIlpcIj09PWVbMl1bMF0udG9VcHBlckNhc2UoKSxjPXMsZD1lLmxlbmd0aDtjPGQ7YysrKXtpZihyLnB1c2gobD1bXSksKHA9ZVtjXSlbMF0hPT1TdHJpbmcucHJvdG90eXBlLnRvVXBwZXJDYXNlLmNhbGwocFswXSkpc3dpdGNoKGxbMF09U3RyaW5nLnByb3RvdHlwZS50b1VwcGVyQ2FzZS5jYWxsKHBbMF0pLGxbMF0pe2Nhc2VcIkFcIjpsWzFdPXBbMV0sbFsyXT1wWzJdLGxbM109cFszXSxsWzRdPXBbNF0sbFs1XT1wWzVdLGxbNl09KyhwWzZdK24pLGxbN109KyhwWzddK2EpO2JyZWFrO2Nhc2VcIlZcIjpsWzFdPStwWzFdK2E7YnJlYWs7Y2FzZVwiSFwiOmxbMV09K3BbMV0rbjticmVhaztjYXNlXCJSXCI6Zm9yKHZhciBoPTIsbT0odD1bbixhXS5jb25jYXQocC5zbGljZSgxKSkpLmxlbmd0aDtoPG07aCsrKXRbaF09K3RbaF0rbix0WysraF09K3RbaF0rYTtyLnBvcCgpLHI9ci5jb25jYXQoXyh0LHUpKTticmVhaztjYXNlXCJNXCI6bz0rcFsxXStuLGk9K3BbMl0rYTticmVhaztkZWZhdWx0OmZvcih2YXIgZj0xLHk9cC5sZW5ndGg7Zjx5O2YrKylsW2ZdPStwW2ZdKyhmJTI/bjphKX1lbHNlIGlmKFwiUlwiPT09cFswXSl0PVtuLGFdLmNvbmNhdChwLnNsaWNlKDEpKSxyLnBvcCgpLHI9ci5jb25jYXQoXyh0LHUpKSxsPVtcIlJcIl0uY29uY2F0KHAuc2xpY2UoLTIpKTtlbHNlIGZvcih2YXIgZz0wLHY9cC5sZW5ndGg7Zzx2O2crKylsW2ddPXBbZ107c3dpdGNoKGxbMF0pe2Nhc2VcIlpcIjpuPW8sYT1pO2JyZWFrO2Nhc2VcIkhcIjpuPWxbMV07YnJlYWs7Y2FzZVwiVlwiOmE9bFsxXTticmVhaztjYXNlXCJNXCI6bz1sW2wubGVuZ3RoLTJdLGk9bFtsLmxlbmd0aC0xXTticmVhaztkZWZhdWx0Om49bFtsLmxlbmd0aC0yXSxhPWxbbC5sZW5ndGgtMV19fXJldHVybiByfWZ1bmN0aW9uIF8oZSx0KXtmb3IodmFyIHI9W10sbj0wLGE9ZS5sZW5ndGg7bjxhLTIqIXQ7bis9Mil7dmFyIG89W3t4OitlW24tMl0seTorZVtuLTFdfSx7eDorZVtuXSx5OitlW24rMV19LHt4OitlW24rMl0seTorZVtuKzNdfSx7eDorZVtuKzRdLHk6K2Vbbis1XX1dO3Q/bj9hLTQ9PT1uP29bM109e3g6K2VbMF0seTorZVsxXX06YS0yPT09biYmKG9bMl09e3g6K2VbMF0seTorZVsxXX0sb1szXT17eDorZVsyXSx5OitlWzNdfSk6b1swXT17eDorZVthLTJdLHk6K2VbYS0xXX06YS00PT09bj9vWzNdPW9bMl06bnx8KG9bMF09e3g6K2Vbbl0seTorZVtuKzFdfSksci5wdXNoKFtcIkNcIiwoLW9bMF0ueCs2Km9bMV0ueCtvWzJdLngpLzYsKC1vWzBdLnkrNipvWzFdLnkrb1syXS55KS82LChvWzFdLngrNipvWzJdLngtb1szXS54KS82LChvWzFdLnkrNipvWzJdLnktb1szXS55KS82LG9bMl0ueCxvWzJdLnldKX1yZXR1cm4gcn1mdW5jdGlvbiBTKGUsdCxyLG4pe3JldHVybltlLHQscixuLHIsbl19ZnVuY3Rpb24gdyhlLHQscixuLGEsbyl7cmV0dXJuWzEvMyplKzIvMypyLDEvMyp0KzIvMypuLDEvMyphKzIvMypyLDEvMypvKzIvMypuLGEsb119ZnVuY3Rpb24gZyhlLHQscixuLGEsbyxpLHMsbCl7bnVsbD09bCYmKGw9MSk7Zm9yKHZhciBwPShsPTE8bD8xOmw8MD8wOmwpLzIsdT1bLS4xMjUyLC4xMjUyLC0uMzY3OCwuMzY3OCwtLjU4NzMsLjU4NzMsLS43Njk5LC43Njk5LC0uOTA0MSwuOTA0MSwtLjk4MTYsLjk4MTZdLGM9MCxkPVsuMjQ5MSwuMjQ5MSwuMjMzNSwuMjMzNSwuMjAzMiwuMjAzMiwuMTYwMSwuMTYwMSwuMTA2OSwuMTA2OSwuMDQ3MiwuMDQ3Ml0saD0wO2g8MTI7aCsrKXt2YXIgbT1wKnVbaF0rcCxmPXYobSxlLHIsYSxpKSx5PXYobSx0LG4sbyxzKSxnPWYqZit5Knk7Yys9ZFtoXSpNYXRoLnNxcnQoZyl9cmV0dXJuIHAqY31mdW5jdGlvbiB2KGUsdCxyLG4sYSl7cmV0dXJuIGUqKGUqKC0zKnQrOSpyLTkqbiszKmEpKzYqdC0xMipyKzYqbiktMyp0KzMqcn1hLmRlZmF1bHQuRm9udD1mdW5jdGlvbihlKXt0aGlzLnBhcmVudD1lLHRoaXMuY2FjaGU9e30sdGhpcy5mb250PXZvaWQgMH0sYS5kZWZhdWx0LkZvbnQucHJvdG90eXBlLnRleHRCb3VuZHM9ZnVuY3Rpb24oZSl7dmFyIHQscj0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MCxuPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTowLGE9Mzxhcmd1bWVudHMubGVuZ3RoP2FyZ3VtZW50c1szXTp2b2lkIDAsbz00PGFyZ3VtZW50cy5sZW5ndGg/YXJndW1lbnRzWzRdOnZvaWQgMCxpPW8mJm8ucmVuZGVyZXImJm8ucmVuZGVyZXIuX3BJbnN0fHx0aGlzLnBhcmVudCxzPWkuX3JlbmRlcmVyLmRyYXdpbmdDb250ZXh0O3MudGV4dEFsaWdufHx4LkxFRlQscy50ZXh0QmFzZWxpbmV8fHguQkFTRUxJTkU7aWYoYT1hfHxpLl9yZW5kZXJlci5fdGV4dFNpemUsIXQpe3ZhciBsLHAsdT1bXSxjPVtdLGQ9W107ZFswXT1bXTt2YXIgaD1bXSxtPXRoaXMuX3NjYWxlKGEpLGY9aS5fcmVuZGVyZXIudGV4dExlYWRpbmcoKSx5PTA7dGhpcy5mb250LmZvckVhY2hHbHlwaChlLHIsbixhLG8sZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9ZS5nZXRNZXRyaWNzKCk7MD09PWUuaW5kZXh8fDEwPT09ZS5pbmRleD9kW3krPTFdPVtdOihkW3ldLnB1c2godCthLnhNaW4qbSksZFt5XS5wdXNoKHQrYS54TWF4Km0pLGgucHVzaChyK3kqZistYS55TWluKm0pLGgucHVzaChyK3kqZistYS55TWF4Km0pKX0pLDA8ZFt5XS5sZW5ndGgmJih1W3ldPU1hdGgubWluLmFwcGx5KG51bGwsZFt5XSksY1t5XT1NYXRoLm1heC5hcHBseShudWxsLGRbeV0pKTtmb3IodmFyIGc9MCx2PTA7djw9eTt2Kyspe3Vbdl09TWF0aC5taW4uYXBwbHkobnVsbCxkW3ZdKSxjW3ZdPU1hdGgubWF4LmFwcGx5KG51bGwsZFt2XSk7dmFyIGI9Y1t2XS11W3ZdO2c8YiYmKGc9Yil9dmFyIF89TWF0aC5taW4uYXBwbHkobnVsbCx1KTt0PXt4Ol8seTpsPU1hdGgubWluLmFwcGx5KG51bGwsaCksaDpNYXRoLm1heC5hcHBseShudWxsLGgpLWwsdzpnLGFkdmFuY2U6Xy1yfSxwPXRoaXMuX2hhbmRsZUFsaWdubWVudChpLl9yZW5kZXJlcixlLHQueCx0LnksdC53K3QuYWR2YW5jZSksdC54PXAueCx0Lnk9cC55fXJldHVybiB0fSxhLmRlZmF1bHQuRm9udC5wcm90b3R5cGUudGV4dFRvUG9pbnRzPWZ1bmN0aW9uKGUsdCxyLG4sYSl7dmFyIG8saT0wLHM9W10sbD10aGlzLl9nZXRHbHlwaHMoZSk7bj1ufHx0aGlzLnBhcmVudC5fcmVuZGVyZXIuX3RleHRTaXplO2Zvcih2YXIgcD0wO3A8bC5sZW5ndGg7cCsrKXtpZighKGxbbz1wXS5uYW1lJiZcInNwYWNlXCI9PT1sW29dLm5hbWV8fGUubGVuZ3RoPT09bC5sZW5ndGgmJlwiIFwiPT09ZVtvXXx8bFtvXS5pbmRleCYmMz09PWxbb10uaW5kZXgpKWZvcih2YXIgdT1mKGxbcF0uZ2V0UGF0aCh0LHIsbikuY29tbWFuZHMpLGM9MDtjPHUubGVuZ3RoO2MrKylmb3IodmFyIGQ9bSh1W2NdLGEpLGg9MDtoPGQubGVuZ3RoO2grKylkW2hdLngrPWkscy5wdXNoKGRbaF0pO2krPWxbcF0uYWR2YW5jZVdpZHRoKnRoaXMuX3NjYWxlKG4pfXJldHVybiBzfSxhLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX2dldEdseXBocz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5mb250LnN0cmluZ1RvR2x5cGhzKGUpfSxhLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX2dldFBhdGg9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9KG4mJm4ucmVuZGVyZXImJm4ucmVuZGVyZXIuX3BJbnN0fHx0aGlzLnBhcmVudCkuX3JlbmRlcmVyLG89dGhpcy5faGFuZGxlQWxpZ25tZW50KGEsZSx0LHIpO3JldHVybiB0aGlzLmZvbnQuZ2V0UGF0aChlLG8ueCxvLnksYS5fdGV4dFNpemUsbil9LGEuZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fZ2V0UGF0aERhdGE9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9MztyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmMjxhcmd1bWVudHMubGVuZ3RoP2U9dGhpcy5fZ2V0UGF0aChlLHQscixuKTpcIm9iamVjdFwiPT09aCh0KSYmKG49dCksbiYmXCJudW1iZXJcIj09dHlwZW9mIG4uZGVjaW1hbHMmJihhPW4uZGVjaW1hbHMpLGUudG9QYXRoRGF0YShhKX0sYS5kZWZhdWx0LkZvbnQucHJvdG90eXBlLl9nZXRTVkc9ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGE9MztyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmMjxhcmd1bWVudHMubGVuZ3RoP2U9dGhpcy5fZ2V0UGF0aChlLHQscixuKTpcIm9iamVjdFwiPT09aCh0KSYmKG49dCksbiYmKFwibnVtYmVyXCI9PXR5cGVvZiBuLmRlY2ltYWxzJiYoYT1uLmRlY2ltYWxzKSxcIm51bWJlclwiPT10eXBlb2Ygbi5zdHJva2VXaWR0aCYmKGUuc3Ryb2tlV2lkdGg9bi5zdHJva2VXaWR0aCksdm9pZCAwIT09bi5maWxsJiYoZS5maWxsPW4uZmlsbCksdm9pZCAwIT09bi5zdHJva2UmJihlLnN0cm9rZT1uLnN0cm9rZSkpLGUudG9TVkcoYSl9LGEuZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fcmVuZGVyUGF0aD1mdW5jdGlvbihlLHQscixuKXt2YXIgYSxvPW4mJm4ucmVuZGVyZXJ8fHRoaXMucGFyZW50Ll9yZW5kZXJlcixpPW8uZHJhd2luZ0NvbnRleHQ7YT1cIm9iamVjdFwiPT09aChlKSYmZS5jb21tYW5kcz9lLmNvbW1hbmRzOnRoaXMuX2dldFBhdGgoZSx0LHIsbikuY29tbWFuZHMsaS5iZWdpblBhdGgoKTt2YXIgcz0hMCxsPSExLHA9dm9pZCAwO3RyeXtmb3IodmFyIHUsYz1hW1N5bWJvbC5pdGVyYXRvcl0oKTshKHM9KHU9Yy5uZXh0KCkpLmRvbmUpO3M9ITApe3ZhciBkPXUudmFsdWU7XCJNXCI9PT1kLnR5cGU/aS5tb3ZlVG8oZC54LGQueSk6XCJMXCI9PT1kLnR5cGU/aS5saW5lVG8oZC54LGQueSk6XCJDXCI9PT1kLnR5cGU/aS5iZXppZXJDdXJ2ZVRvKGQueDEsZC55MSxkLngyLGQueTIsZC54LGQueSk6XCJRXCI9PT1kLnR5cGU/aS5xdWFkcmF0aWNDdXJ2ZVRvKGQueDEsZC55MSxkLngsZC55KTpcIlpcIj09PWQudHlwZSYmaS5jbG9zZVBhdGgoKX19Y2F0Y2goZSl7bD0hMCxwPWV9ZmluYWxseXt0cnl7c3x8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihsKXRocm93IHB9fXJldHVybiBvLl9kb1N0cm9rZSYmby5fc3Ryb2tlU2V0JiZpLnN0cm9rZSgpLG8uX2RvRmlsbCYmKG8uX2ZpbGxTZXR8fG8uX3NldEZpbGwoeC5fREVGQVVMVF9URVhUX0ZJTEwpLGkuZmlsbCgpKSx0aGlzfSxhLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX3RleHRXaWR0aD1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmZvbnQuZ2V0QWR2YW5jZVdpZHRoKGUsdCl9LGEuZGVmYXVsdC5Gb250LnByb3RvdHlwZS5fdGV4dEFzY2VudD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5mb250LmFzY2VuZGVyKnRoaXMuX3NjYWxlKGUpfSxhLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX3RleHREZXNjZW50PWZ1bmN0aW9uKGUpe3JldHVybi10aGlzLmZvbnQuZGVzY2VuZGVyKnRoaXMuX3NjYWxlKGUpfSxhLmRlZmF1bHQuRm9udC5wcm90b3R5cGUuX3NjYWxlPWZ1bmN0aW9uKGUpe3JldHVybiAxL3RoaXMuZm9udC51bml0c1BlckVtKihlfHx0aGlzLnBhcmVudC5fcmVuZGVyZXIuX3RleHRTaXplKX0sYS5kZWZhdWx0LkZvbnQucHJvdG90eXBlLl9oYW5kbGVBbGlnbm1lbnQ9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbz1lLl90ZXh0U2l6ZTtzd2l0Y2godm9pZCAwPT09YSYmKGE9dGhpcy5fdGV4dFdpZHRoKHQsbykpLGUuX3RleHRBbGlnbil7Y2FzZSB4LkNFTlRFUjpyLT1hLzI7YnJlYWs7Y2FzZSB4LlJJR0hUOnItPWF9c3dpdGNoKGUuX3RleHRCYXNlbGluZSl7Y2FzZSB4LlRPUDpuKz10aGlzLl90ZXh0QXNjZW50KG8pO2JyZWFrO2Nhc2UgeC5DRU5URVI6bis9dGhpcy5fdGV4dEFzY2VudChvKS8yO2JyZWFrO2Nhc2UgeC5CT1RUT006bi09dGhpcy5fdGV4dERlc2NlbnQobyl9cmV0dXJue3g6cix5Om59fTt2YXIgcD1hLmRlZmF1bHQ7ci5kZWZhdWx0PXB9LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjIsXCIuLi9jb3JlL21haW5cIjozMn1dLDcxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTthLmRlZmF1bHQucHJvdG90eXBlLmFwcGVuZD1mdW5jdGlvbihlLHQpe3JldHVybiBlLnB1c2godCksZX0sYS5kZWZhdWx0LnByb3RvdHlwZS5hcnJheUNvcHk9ZnVuY3Rpb24oZSx0LHIsbixhKXt2YXIgbyxpO2U9dm9pZCAwIT09YT8oaT1NYXRoLm1pbihhLGUubGVuZ3RoKSxvPW4sZS5zbGljZSh0LGkrdCkpOihpPXZvaWQgMCE9PXI/KGk9cixNYXRoLm1pbihpLGUubGVuZ3RoKSk6ZS5sZW5ndGgsbz0wLHI9dCxlLnNsaWNlKDAsaSkpLEFycmF5LnByb3RvdHlwZS5zcGxpY2UuYXBwbHkocixbbyxpXS5jb25jYXQoZSkpfSxhLmRlZmF1bHQucHJvdG90eXBlLmNvbmNhdD1mdW5jdGlvbihlLHQpe3JldHVybiBlLmNvbmNhdCh0KX0sYS5kZWZhdWx0LnByb3RvdHlwZS5yZXZlcnNlPWZ1bmN0aW9uKGUpe3JldHVybiBlLnJldmVyc2UoKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5zaG9ydGVuPWZ1bmN0aW9uKGUpe3JldHVybiBlLnBvcCgpLGV9LGEuZGVmYXVsdC5wcm90b3R5cGUuc2h1ZmZsZT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcixuLGE9QXJyYXlCdWZmZXImJkFycmF5QnVmZmVyLmlzVmlldyYmQXJyYXlCdWZmZXIuaXNWaWV3KGUpLG89KGU9dHx8YT9lOmUuc2xpY2UoKSkubGVuZ3RoOzE8bzspcj10aGlzLnJhbmRvbSgwLDEpKm98MCxuPWVbLS1vXSxlW29dPWVbcl0sZVtyXT1uO3JldHVybiBlfSxhLmRlZmF1bHQucHJvdG90eXBlLnNvcnQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj10P2Uuc2xpY2UoMCxNYXRoLm1pbih0LGUubGVuZ3RoKSk6ZSxuPXQ/ZS5zbGljZShNYXRoLm1pbih0LGUubGVuZ3RoKSk6W107cmV0dXJuKHI9XCJzdHJpbmdcIj09dHlwZW9mIHJbMF0/ci5zb3J0KCk6ci5zb3J0KGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUtdH0pKS5jb25jYXQobil9LGEuZGVmYXVsdC5wcm90b3R5cGUuc3BsaWNlPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShlLFtyLDBdLmNvbmNhdCh0KSksZX0sYS5kZWZhdWx0LnByb3RvdHlwZS5zdWJzZXQ9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB2b2lkIDAhPT1yP2Uuc2xpY2UodCx0K3IpOmUuc2xpY2UodCxlLmxlbmd0aCl9O3ZhciBvPWEuZGVmYXVsdDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MzJ9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07YS5kZWZhdWx0LnByb3RvdHlwZS5mbG9hdD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEFycmF5P2UubWFwKHBhcnNlRmxvYXQpOnBhcnNlRmxvYXQoZSl9LGEuZGVmYXVsdC5wcm90b3R5cGUuaW50PWZ1bmN0aW9uKGUpe3ZhciB0PTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXToxMDtyZXR1cm4gZT09PTEvMHx8XCJJbmZpbml0eVwiPT09ZT8xLzA6ZT09PS0xLzB8fFwiLUluZmluaXR5XCI9PT1lPy0xLzA6XCJzdHJpbmdcIj09dHlwZW9mIGU/cGFyc2VJbnQoZSx0KTpcIm51bWJlclwiPT10eXBlb2YgZT8wfGU6XCJib29sZWFuXCI9PXR5cGVvZiBlP2U/MTowOmUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gYS5kZWZhdWx0LnByb3RvdHlwZS5pbnQoZSx0KX0pOnZvaWQgMH0sYS5kZWZhdWx0LnByb3RvdHlwZS5zdHI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChhLmRlZmF1bHQucHJvdG90eXBlLnN0cik6U3RyaW5nKGUpfSxhLmRlZmF1bHQucHJvdG90eXBlLmJvb2xlYW49ZnVuY3Rpb24oZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGU/MCE9PWU6XCJzdHJpbmdcIj09dHlwZW9mIGU/XCJ0cnVlXCI9PT1lLnRvTG93ZXJDYXNlKCk6XCJib29sZWFuXCI9PXR5cGVvZiBlP2U6ZSBpbnN0YW5jZW9mIEFycmF5P2UubWFwKGEuZGVmYXVsdC5wcm90b3R5cGUuYm9vbGVhbik6dm9pZCAwfSxhLmRlZmF1bHQucHJvdG90eXBlLmJ5dGU9ZnVuY3Rpb24oZSl7dmFyIHQ9YS5kZWZhdWx0LnByb3RvdHlwZS5pbnQoZSwxMCk7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQ/KHQrMTI4KSUyNTYtMTI4OnQgaW5zdGFuY2VvZiBBcnJheT90Lm1hcChhLmRlZmF1bHQucHJvdG90eXBlLmJ5dGUpOnZvaWQgMH0sYS5kZWZhdWx0LnByb3RvdHlwZS5jaGFyPWZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCIhPXR5cGVvZiBlfHxpc05hTihlKT9lIGluc3RhbmNlb2YgQXJyYXk/ZS5tYXAoYS5kZWZhdWx0LnByb3RvdHlwZS5jaGFyKTpcInN0cmluZ1wiPT10eXBlb2YgZT9hLmRlZmF1bHQucHJvdG90eXBlLmNoYXIocGFyc2VJbnQoZSwxMCkpOnZvaWQgMDpTdHJpbmcuZnJvbUNoYXJDb2RlKGUpfSxhLmRlZmF1bHQucHJvdG90eXBlLnVuY2hhcj1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmMT09PWUubGVuZ3RoP2UuY2hhckNvZGVBdCgwKTplIGluc3RhbmNlb2YgQXJyYXk/ZS5tYXAoYS5kZWZhdWx0LnByb3RvdHlwZS51bmNoYXIpOnZvaWQgMH0sYS5kZWZhdWx0LnByb3RvdHlwZS5oZXg9ZnVuY3Rpb24oZSx0KXtpZih0PW51bGw9PXQ/dD04OnQsZSBpbnN0YW5jZW9mIEFycmF5KXJldHVybiBlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gYS5kZWZhdWx0LnByb3RvdHlwZS5oZXgoZSx0KX0pO2lmKGU9PT0xLzB8fGU9PT0tMS8wKXJldHVybihlPT09MS8wP1wiRlwiOlwiMFwiKS5yZXBlYXQodCk7aWYoXCJudW1iZXJcIj09dHlwZW9mIGUpe2U8MCYmKGU9NDI5NDk2NzI5NStlKzEpO2Zvcih2YXIgcj1OdW1iZXIoZSkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7ci5sZW5ndGg8dDspcj1cIjBcIi5jb25jYXQocik7cmV0dXJuIHIubGVuZ3RoPj10JiYocj1yLnN1YnN0cmluZyhyLmxlbmd0aC10LHIubGVuZ3RoKSkscn19LGEuZGVmYXVsdC5wcm90b3R5cGUudW5oZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChhLmRlZmF1bHQucHJvdG90eXBlLnVuaGV4KTpwYXJzZUludChcIjB4XCIuY29uY2F0KGUpLDE2KX07dmFyIG89YS5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDczOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixpPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmdW5jdGlvbiBhKGUsdCxyKXt2YXIgbj1lPDAsYT1uP2UudG9TdHJpbmcoKS5zdWJzdHJpbmcoMSk6ZS50b1N0cmluZygpLG89YS5pbmRleE9mKFwiLlwiKSxpPS0xIT09bz9hLnN1YnN0cmluZygwLG8pOmEscz0tMSE9PW8/YS5zdWJzdHJpbmcobysxKTpcIlwiLGw9bj9cIi1cIjpcIlwiO2lmKHZvaWQgMCE9PXIpe3ZhciBwPVwiXCI7KC0xIT09b3x8MDxyLXMubGVuZ3RoKSYmKHA9XCIuXCIpLHMubGVuZ3RoPnImJihzPXMuc3Vic3RyaW5nKDAscikpO2Zvcih2YXIgdT0wO3U8dC1pLmxlbmd0aDt1KyspbCs9XCIwXCI7bCs9aSxsKz1wLGwrPXM7Zm9yKHZhciBjPTA7YzxyLXMubGVuZ3RoO2MrKylsKz1cIjBcIjtyZXR1cm4gbH1mb3IodmFyIGQ9MDtkPE1hdGgubWF4KHQtaS5sZW5ndGgsMCk7ZCsrKWwrPVwiMFwiO3JldHVybiBsKz1hfWZ1bmN0aW9uIG8oZSx0KXt2YXIgcj0oZT1lLnRvU3RyaW5nKCkpLmluZGV4T2YoXCIuXCIpLG49LTEhPT1yP2Uuc3Vic3RyaW5nKHIpOlwiXCIsYT0tMSE9PXI/ZS5zdWJzdHJpbmcoMCxyKTplO2lmKGE9YS50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csXCIsXCIpLDA9PT10KW49XCJcIjtlbHNlIGlmKHZvaWQgMCE9PXQpaWYodD5uLmxlbmd0aClmb3IodmFyIG89dC0obis9LTE9PT1yP1wiLlwiOlwiXCIpLmxlbmd0aCsxLGk9MDtpPG87aSsrKW4rPVwiMFwiO2Vsc2Ugbj1uLnN1YnN0cmluZygwLHQrMSk7cmV0dXJuIGErbn1mdW5jdGlvbiBzKGUpe3JldHVybiAwPHBhcnNlRmxvYXQoZSk/XCIrXCIuY29uY2F0KGUudG9TdHJpbmcoKSk6ZS50b1N0cmluZygpfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIDA8PXBhcnNlRmxvYXQoZSk/XCIgXCIuY29uY2F0KGUudG9TdHJpbmcoKSk6ZS50b1N0cmluZygpfWUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy92YWxpZGF0ZV9wYXJhbXNcIiksZShcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL2ZpbGVfZXJyb3JzXCIpLGUoXCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiKSxpLmRlZmF1bHQucHJvdG90eXBlLmpvaW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJqb2luXCIsYXJndW1lbnRzKSxlLmpvaW4odCl9LGkuZGVmYXVsdC5wcm90b3R5cGUubWF0Y2g9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJtYXRjaFwiLGFyZ3VtZW50cyksZS5tYXRjaCh0KX0saS5kZWZhdWx0LnByb3RvdHlwZS5tYXRjaEFsbD1mdW5jdGlvbihlLHQpe2kuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibWF0Y2hBbGxcIixhcmd1bWVudHMpO2Zvcih2YXIgcj1uZXcgUmVnRXhwKHQsXCJnXCIpLG49ci5leGVjKGUpLGE9W107bnVsbCE9PW47KWEucHVzaChuKSxuPXIuZXhlYyhlKTtyZXR1cm4gYX0saS5kZWZhdWx0LnByb3RvdHlwZS5uZj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibmZcIixhcmd1bWVudHMpLGUgaW5zdGFuY2VvZiBBcnJheT9lLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gYShlLHQscil9KTpcIltvYmplY3QgQXJndW1lbnRzXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpPzM9PT1lLmxlbmd0aD90aGlzLm5mKGVbMF0sZVsxXSxlWzJdKToyPT09ZS5sZW5ndGg/dGhpcy5uZihlWzBdLGVbMV0pOnRoaXMubmYoZVswXSk6YShlLHQscil9LGkuZGVmYXVsdC5wcm90b3R5cGUubmZjPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibmZjXCIsYXJndW1lbnRzKSxlIGluc3RhbmNlb2YgQXJyYXk/ZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG8oZSx0KX0pOm8oZSx0KX0saS5kZWZhdWx0LnByb3RvdHlwZS5uZnA9ZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl0W3JdPWFyZ3VtZW50c1tyXTtpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm5mcFwiLHQpO3ZhciBuPWkuZGVmYXVsdC5wcm90b3R5cGUubmYuYXBwbHkodGhpcyx0KTtyZXR1cm4gbiBpbnN0YW5jZW9mIEFycmF5P24ubWFwKHMpOnMobil9LGkuZGVmYXVsdC5wcm90b3R5cGUubmZzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspdFtyXT1hcmd1bWVudHNbcl07aS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJuZnNcIix0KTt2YXIgbj1pLmRlZmF1bHQucHJvdG90eXBlLm5mLmFwcGx5KHRoaXMsdCk7cmV0dXJuIG4gaW5zdGFuY2VvZiBBcnJheT9uLm1hcChsKTpsKG4pfSxpLmRlZmF1bHQucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3BsaXRcIixhcmd1bWVudHMpLGUuc3BsaXQodCl9LGkuZGVmYXVsdC5wcm90b3R5cGUuc3BsaXRUb2tlbnM9ZnVuY3Rpb24oZSx0KXt2YXIgcjtpZihpLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNwbGl0VG9rZW5zXCIsYXJndW1lbnRzKSx2b2lkIDAhPT10KXt2YXIgbj10LGE9L1xcXS9nLmV4ZWMobiksbz0vXFxbL2cuZXhlYyhuKTtyPW8mJmE/KG49bi5zbGljZSgwLGEuaW5kZXgpK24uc2xpY2UoYS5pbmRleCsxKSxvPS9cXFsvZy5leGVjKG4pLG49bi5zbGljZSgwLG8uaW5kZXgpK24uc2xpY2Uoby5pbmRleCsxKSxuZXcgUmVnRXhwKFwiW1xcXFxbXCIuY29uY2F0KG4sXCJcXFxcXV1cIiksXCJnXCIpKTphPyhuPW4uc2xpY2UoMCxhLmluZGV4KStuLnNsaWNlKGEuaW5kZXgrMSksbmV3IFJlZ0V4cChcIltcIi5jb25jYXQobixcIlxcXFxdXVwiKSxcImdcIikpOm8/KG49bi5zbGljZSgwLG8uaW5kZXgpK24uc2xpY2Uoby5pbmRleCsxKSxuZXcgUmVnRXhwKFwiW1wiLmNvbmNhdChuLFwiXFxcXFtdXCIpLFwiZ1wiKSk6bmV3IFJlZ0V4cChcIltcIi5jb25jYXQobixcIl1cIiksXCJnXCIpfWVsc2Ugcj0vXFxzL2c7cmV0dXJuIGUuc3BsaXQocikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlfSl9LGkuZGVmYXVsdC5wcm90b3R5cGUudHJpbT1mdW5jdGlvbihlKXtyZXR1cm4gaS5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0cmltXCIsYXJndW1lbnRzKSxlIGluc3RhbmNlb2YgQXJyYXk/ZS5tYXAodGhpcy50cmltKTplLnRyaW0oKX07dmFyIHA9aS5kZWZhdWx0O3IuZGVmYXVsdD1wfSx7XCIuLi9jb3JlL2ZyaWVuZGx5X2Vycm9ycy9mZXNfY29yZVwiOjI0LFwiLi4vY29yZS9mcmllbmRseV9lcnJvcnMvZmlsZV9lcnJvcnNcIjoyNSxcIi4uL2NvcmUvZnJpZW5kbHlfZXJyb3JzL3ZhbGlkYXRlX3BhcmFtc1wiOjI3LFwiLi4vY29yZS9tYWluXCI6MzJ9XSw3NDpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07YS5kZWZhdWx0LnByb3RvdHlwZS5kYXk9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldERhdGUoKX0sYS5kZWZhdWx0LnByb3RvdHlwZS5ob3VyPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRIb3VycygpfSxhLmRlZmF1bHQucHJvdG90eXBlLm1pbnV0ZT1mdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0TWludXRlcygpfSxhLmRlZmF1bHQucHJvdG90eXBlLm1pbGxpcz1mdW5jdGlvbigpe3JldHVybi0xPT09dGhpcy5fbWlsbGlzU3RhcnQ/MDp3aW5kb3cucGVyZm9ybWFuY2Uubm93KCktdGhpcy5fbWlsbGlzU3RhcnR9LGEuZGVmYXVsdC5wcm90b3R5cGUubW9udGg9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldE1vbnRoKCkrMX0sYS5kZWZhdWx0LnByb3RvdHlwZS5zZWNvbmQ9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFNlY29uZHMoKX0sYS5kZWZhdWx0LnByb3RvdHlwZS55ZWFyPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpfTt2YXIgbz1hLmRlZmF1bHQ7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sNzU6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKGUpe3JldHVybihpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLFQ9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2UoXCIuL3A1Lkdlb21ldHJ5XCIpO3ZhciBoPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIHMoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBzPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9VC5kZWZhdWx0LnByb3RvdHlwZS5wbGFuZT1mdW5jdGlvbihlLHQscixuKXt0aGlzLl9hc3NlcnQzZChcInBsYW5lXCIpLFQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicGxhbmVcIixhcmd1bWVudHMpLHZvaWQgMD09PWUmJihlPTUwKSx2b2lkIDA9PT10JiYodD1lKSx2b2lkIDA9PT1yJiYocj0xKSx2b2lkIDA9PT1uJiYobj0xKTt2YXIgYT1cInBsYW5lfFwiLmNvbmNhdChyLFwifFwiKS5jb25jYXQobik7aWYoIXRoaXMuX3JlbmRlcmVyLmdlb21ldHJ5SW5IYXNoKGEpKXt2YXIgbz1uZXcgVC5kZWZhdWx0Lkdlb21ldHJ5KHIsbixmdW5jdGlvbigpe2Zvcih2YXIgZSx0LHIsbj0wO248PXRoaXMuZGV0YWlsWTtuKyspe3Q9bi90aGlzLmRldGFpbFk7Zm9yKHZhciBhPTA7YTw9dGhpcy5kZXRhaWxYO2ErKyllPWEvdGhpcy5kZXRhaWxYLHI9bmV3IFQuZGVmYXVsdC5WZWN0b3IoZS0uNSx0LS41LDApLHRoaXMudmVydGljZXMucHVzaChyKSx0aGlzLnV2cy5wdXNoKGUsdCl9fSk7by5jb21wdXRlRmFjZXMoKS5jb21wdXRlTm9ybWFscygpLHI8PTEmJm48PTE/by5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBkcmF3IHN0cm9rZSBvbiBwbGFuZSBvYmplY3RzIHdpdGggbW9yZSB0aGFuIDEgZGV0YWlsWCBvciAxIGRldGFpbFlcIiksdGhpcy5fcmVuZGVyZXIuY3JlYXRlQnVmZmVycyhhLG8pfXJldHVybiB0aGlzLl9yZW5kZXJlci5kcmF3QnVmZmVyc1NjYWxlZChhLGUsdCwxKSx0aGlzfSxULmRlZmF1bHQucHJvdG90eXBlLmJveD1mdW5jdGlvbihlLHQscixuLGEpe3RoaXMuX2Fzc2VydDNkKFwiYm94XCIpLFQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiYm94XCIsYXJndW1lbnRzKSx2b2lkIDA9PT1lJiYoZT01MCksdm9pZCAwPT09dCYmKHQ9ZSksdm9pZCAwPT09ciYmKHI9dCk7dmFyIG89dGhpcy5fcmVuZGVyZXIuYXR0cmlidXRlcyYmdGhpcy5fcmVuZGVyZXIuYXR0cmlidXRlcy5wZXJQaXhlbExpZ2h0aW5nO3ZvaWQgMD09PW4mJihuPW8/MTo0KSx2b2lkIDA9PT1hJiYoYT1vPzE6NCk7dmFyIGk9XCJib3h8XCIuY29uY2F0KG4sXCJ8XCIpLmNvbmNhdChhKTtpZighdGhpcy5fcmVuZGVyZXIuZ2VvbWV0cnlJbkhhc2goaSkpe3ZhciBzPW5ldyBULmRlZmF1bHQuR2VvbWV0cnkobixhLGZ1bmN0aW9uKCl7dmFyIGU9W1swLDQsMiw2XSxbMSwzLDUsN10sWzAsMSw0LDVdLFsyLDYsMyw3XSxbMCwyLDEsM10sWzQsNSw2LDddXTt0aGlzLnN0cm9rZUluZGljZXM9W1swLDFdLFsxLDNdLFszLDJdLFs2LDddLFs4LDldLFs5LDExXSxbMTQsMTVdLFsxNiwxN10sWzE3LDE5XSxbMTgsMTldLFsyMCwyMV0sWzIyLDIzXV07Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe2Zvcih2YXIgcj1lW3RdLG49NCp0LGE9MDthPDQ7YSsrKXt2YXIgbz1yW2FdLGk9bmV3IFQuZGVmYXVsdC5WZWN0b3IoKDIqKDEmbyktMSkvMiwoKDImbyktMSkvMiwoKDQmbykvMi0xKS8yKTt0aGlzLnZlcnRpY2VzLnB1c2goaSksdGhpcy51dnMucHVzaCgxJmEsKDImYSkvMil9dGhpcy5mYWNlcy5wdXNoKFtuLDErbiwyK25dKSx0aGlzLmZhY2VzLnB1c2goWzIrbiwxK24sMytuXSl9fSk7cy5jb21wdXRlTm9ybWFscygpLG48PTQmJmE8PTQ/cy5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBkcmF3IHN0cm9rZSBvbiBib3ggb2JqZWN0cyB3aXRoIG1vcmUgdGhhbiA0IGRldGFpbFggb3IgNCBkZXRhaWxZXCIpLHRoaXMuX3JlbmRlcmVyLmNyZWF0ZUJ1ZmZlcnMoaSxzKX1yZXR1cm4gdGhpcy5fcmVuZGVyZXIuZHJhd0J1ZmZlcnNTY2FsZWQoaSxlLHQsciksdGhpc30sVC5kZWZhdWx0LnByb3RvdHlwZS5zcGhlcmU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcInNwaGVyZVwiKSxULmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNwaGVyZVwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSYmKGU9NTApLHZvaWQgMD09PXQmJih0PTI0KSx2b2lkIDA9PT1yJiYocj0xNiksdGhpcy5lbGxpcHNvaWQoZSxlLGUsdCxyKSx0aGlzfTtmdW5jdGlvbiBsKGUsdCxyLG4sYSxvLGkpe2U9ZTw9MD8xOmUsdD10PDA/MDp0LHI9cjw9MD9lOnIsbj1uPDM/MzpuO3ZhciBzLGwscCx1PShvPXZvaWQgMD09PW98fG8pPy0yOjAsYz0oYT1hPDE/MTphKSsoKGk9dm9pZCAwPT09aT8wIT09dDppKT8yOjApLGQ9TWF0aC5hdGFuMihlLXQsciksaD1NYXRoLnNpbihkKSxtPU1hdGguY29zKGQpO2ZvcihzPXU7czw9YzsrK3Mpe3ZhciBmPXMvYSx5PXIqZixnPXZvaWQgMDtmb3IoZz1zPDA/KGY9eT0wLGUpOmE8cz8oeT1yLGY9MSx0KTplKyh0LWUpKmYsLTIhPT1zJiZzIT09YSsyfHwoZz0wKSx5LT1yLzIsbD0wO2w8bjsrK2wpe3ZhciB2PWwvKG4tMSksYj0yKk1hdGguUEkqdixfPU1hdGguc2luKGIpLHg9TWF0aC5jb3MoYik7dGhpcy52ZXJ0aWNlcy5wdXNoKG5ldyBULmRlZmF1bHQuVmVjdG9yKF8qZyx5LHgqZykpO3ZhciBTPXZvaWQgMDtTPXM8MD9uZXcgVC5kZWZhdWx0LlZlY3RvcigwLC0xLDApOmE8cyYmdD9uZXcgVC5kZWZhdWx0LlZlY3RvcigwLDEsMCk6bmV3IFQuZGVmYXVsdC5WZWN0b3IoXyptLGgseCptKSx0aGlzLnZlcnRleE5vcm1hbHMucHVzaChTKSx0aGlzLnV2cy5wdXNoKHYsZil9fXZhciB3PTA7aWYobyl7Zm9yKHA9MDtwPG47KytwKXt2YXIgTT0ocCsxKSVuO3RoaXMuZmFjZXMucHVzaChbdytwLHcrbitNLHcrbitwXSl9dys9MipufWZvcihzPTA7czxhOysrcyl7Zm9yKGw9MDtsPG47KytsKXt2YXIgRT0obCsxKSVuO3RoaXMuZmFjZXMucHVzaChbdytsLHcrRSx3K24rRV0pLHRoaXMuZmFjZXMucHVzaChbdytsLHcrbitFLHcrbitsXSl9dys9bn1pZihpKWZvcih3Kz1uLGw9MDtsPG47KytsKXRoaXMuZmFjZXMucHVzaChbdytsLHcrKGwrMSklbix3K25dKX1ULmRlZmF1bHQucHJvdG90eXBlLmN5bGluZGVyPWZ1bmN0aW9uKGUsdCxyLG4sYSxvKXt0aGlzLl9hc3NlcnQzZChcImN5bGluZGVyXCIpLFQuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiY3lsaW5kZXJcIixhcmd1bWVudHMpLHZvaWQgMD09PWUmJihlPTUwKSx2b2lkIDA9PT10JiYodD1lKSx2b2lkIDA9PT1yJiYocj0yNCksdm9pZCAwPT09biYmKG49MSksdm9pZCAwPT09byYmKG89ITApLHZvaWQgMD09PWEmJihhPSEwKTt2YXIgaT1cImN5bGluZGVyfFwiLmNvbmNhdChyLFwifFwiKS5jb25jYXQobixcInxcIikuY29uY2F0KGEsXCJ8XCIpLmNvbmNhdChvKTtpZighdGhpcy5fcmVuZGVyZXIuZ2VvbWV0cnlJbkhhc2goaSkpe3ZhciBzPW5ldyBULmRlZmF1bHQuR2VvbWV0cnkocixuKTtsLmNhbGwocywxLDEsMSxyLG4sYSxvKSxyPD0yNCYmbjw9MTY/cy5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBkcmF3IHN0cm9rZSBvbiBjeWxpbmRlciBvYmplY3RzIHdpdGggbW9yZSB0aGFuIDI0IGRldGFpbFggb3IgMTYgZGV0YWlsWVwiKSx0aGlzLl9yZW5kZXJlci5jcmVhdGVCdWZmZXJzKGkscyl9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRyYXdCdWZmZXJzU2NhbGVkKGksZSx0LGUpLHRoaXN9LFQuZGVmYXVsdC5wcm90b3R5cGUuY29uZT1mdW5jdGlvbihlLHQscixuLGEpe3RoaXMuX2Fzc2VydDNkKFwiY29uZVwiKSxULmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNvbmVcIixhcmd1bWVudHMpLHZvaWQgMD09PWUmJihlPTUwKSx2b2lkIDA9PT10JiYodD1lKSx2b2lkIDA9PT1yJiYocj0yNCksdm9pZCAwPT09biYmKG49MSksdm9pZCAwPT09YSYmKGE9ITApO3ZhciBvPVwiY29uZXxcIi5jb25jYXQocixcInxcIikuY29uY2F0KG4sXCJ8XCIpLmNvbmNhdChhKTtpZighdGhpcy5fcmVuZGVyZXIuZ2VvbWV0cnlJbkhhc2gobykpe3ZhciBpPW5ldyBULmRlZmF1bHQuR2VvbWV0cnkocixuKTtsLmNhbGwoaSwxLDAsMSxyLG4sYSwhMSkscjw9MjQmJm48PTE2P2kuX21ha2VUcmlhbmdsZUVkZ2VzKCkuX2VkZ2VzVG9WZXJ0aWNlcygpOnRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZSYmY29uc29sZS5sb2coXCJDYW5ub3QgZHJhdyBzdHJva2Ugb24gY29uZSBvYmplY3RzIHdpdGggbW9yZSB0aGFuIDI0IGRldGFpbFggb3IgMTYgZGV0YWlsWVwiKSx0aGlzLl9yZW5kZXJlci5jcmVhdGVCdWZmZXJzKG8saSl9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRyYXdCdWZmZXJzU2NhbGVkKG8sZSx0LGUpLHRoaXN9LFQuZGVmYXVsdC5wcm90b3R5cGUuZWxsaXBzb2lkPWZ1bmN0aW9uKGUsdCxyLG4sYSl7dGhpcy5fYXNzZXJ0M2QoXCJlbGxpcHNvaWRcIiksVC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJlbGxpcHNvaWRcIixhcmd1bWVudHMpLHZvaWQgMD09PWUmJihlPTUwKSx2b2lkIDA9PT10JiYodD1lKSx2b2lkIDA9PT1yJiYocj1lKSx2b2lkIDA9PT1uJiYobj0yNCksdm9pZCAwPT09YSYmKGE9MTYpO3ZhciBvPVwiZWxsaXBzb2lkfFwiLmNvbmNhdChuLFwifFwiKS5jb25jYXQoYSk7aWYoIXRoaXMuX3JlbmRlcmVyLmdlb21ldHJ5SW5IYXNoKG8pKXt2YXIgaT1uZXcgVC5kZWZhdWx0Lkdlb21ldHJ5KG4sYSxmdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8PXRoaXMuZGV0YWlsWTtlKyspZm9yKHZhciB0PWUvdGhpcy5kZXRhaWxZLHI9TWF0aC5QSSp0LU1hdGguUEkvMixuPU1hdGguY29zKHIpLGE9TWF0aC5zaW4ociksbz0wO288PXRoaXMuZGV0YWlsWDtvKyspe3ZhciBpPW8vdGhpcy5kZXRhaWxYLHM9MipNYXRoLlBJKmksbD1NYXRoLmNvcyhzKSxwPU1hdGguc2luKHMpLHU9bmV3IFQuZGVmYXVsdC5WZWN0b3IobipwLGEsbipsKTt0aGlzLnZlcnRpY2VzLnB1c2godSksdGhpcy52ZXJ0ZXhOb3JtYWxzLnB1c2godSksdGhpcy51dnMucHVzaChpLHQpfX0pO2kuY29tcHV0ZUZhY2VzKCksbjw9MjQmJmE8PTI0P2kuX21ha2VUcmlhbmdsZUVkZ2VzKCkuX2VkZ2VzVG9WZXJ0aWNlcygpOnRoaXMuX3JlbmRlcmVyLl9kb1N0cm9rZSYmY29uc29sZS5sb2coXCJDYW5ub3QgZHJhdyBzdHJva2Ugb24gZWxsaXBzb2lkcyB3aXRoIG1vcmUgdGhhbiAyNCBkZXRhaWxYIG9yIDI0IGRldGFpbFlcIiksdGhpcy5fcmVuZGVyZXIuY3JlYXRlQnVmZmVycyhvLGkpfXJldHVybiB0aGlzLl9yZW5kZXJlci5kcmF3QnVmZmVyc1NjYWxlZChvLGUsdCxyKSx0aGlzfSxULmRlZmF1bHQucHJvdG90eXBlLnRvcnVzPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKHRoaXMuX2Fzc2VydDNkKFwidG9ydXNcIiksVC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJ0b3J1c1wiLGFyZ3VtZW50cyksdm9pZCAwPT09ZSllPTUwO2Vsc2UgaWYoIWUpcmV0dXJuO2lmKHZvaWQgMD09PXQpdD0xMDtlbHNlIGlmKCF0KXJldHVybjt2b2lkIDA9PT1yJiYocj0yNCksdm9pZCAwPT09biYmKG49MTYpO3ZhciBoPSh0L2UpLnRvUHJlY2lzaW9uKDQpLGE9XCJ0b3J1c3xcIi5jb25jYXQoaCxcInxcIikuY29uY2F0KHIsXCJ8XCIpLmNvbmNhdChuKTtpZighdGhpcy5fcmVuZGVyZXIuZ2VvbWV0cnlJbkhhc2goYSkpe3ZhciBvPW5ldyBULmRlZmF1bHQuR2VvbWV0cnkocixuLGZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTw9dGhpcy5kZXRhaWxZO2UrKylmb3IodmFyIHQ9ZS90aGlzLmRldGFpbFkscj0yKk1hdGguUEkqdCxuPU1hdGguY29zKHIpLGE9TWF0aC5zaW4ociksbz0xK2gqbixpPTA7aTw9dGhpcy5kZXRhaWxYO2krKyl7dmFyIHM9aS90aGlzLmRldGFpbFgsbD0yKk1hdGguUEkqcyxwPU1hdGguY29zKGwpLHU9TWF0aC5zaW4obCksYz1uZXcgVC5kZWZhdWx0LlZlY3RvcihvKnAsbyp1LGgqYSksZD1uZXcgVC5kZWZhdWx0LlZlY3RvcihuKnAsbip1LGEpO3RoaXMudmVydGljZXMucHVzaChjKSx0aGlzLnZlcnRleE5vcm1hbHMucHVzaChkKSx0aGlzLnV2cy5wdXNoKHMsdCl9fSk7by5jb21wdXRlRmFjZXMoKSxyPD0yNCYmbjw9MTY/by5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBkcmF3IHN0cm9rZXMgb24gdG9ydXMgb2JqZWN0IHdpdGggbW9yZSB0aGFuIDI0IGRldGFpbFggb3IgMTYgZGV0YWlsWVwiKSx0aGlzLl9yZW5kZXJlci5jcmVhdGVCdWZmZXJzKGEsbyl9cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRyYXdCdWZmZXJzU2NhbGVkKGEsZSxlLGUpLHRoaXN9LFQuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5wb2ludD1mdW5jdGlvbihlLHQscil7dm9pZCAwPT09ciYmKHI9MCk7dmFyIG49W107cmV0dXJuIG4ucHVzaChuZXcgVC5kZWZhdWx0LlZlY3RvcihlLHQscikpLHRoaXMuX2RyYXdQb2ludHMobix0aGlzLmltbWVkaWF0ZU1vZGUuYnVmZmVycy5wb2ludCksdGhpc30sVC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnRyaWFuZ2xlPWZ1bmN0aW9uKGUpe3ZhciB0PWVbMF0scj1lWzFdLG49ZVsyXSxhPWVbM10sbz1lWzRdLGk9ZVs1XTtpZighdGhpcy5nZW9tZXRyeUluSGFzaChcInRyaVwiKSl7dmFyIHM9bmV3IFQuZGVmYXVsdC5HZW9tZXRyeSgxLDEsZnVuY3Rpb24oKXt2YXIgZT1bXTtlLnB1c2gobmV3IFQuZGVmYXVsdC5WZWN0b3IoMCwwLDApKSxlLnB1c2gobmV3IFQuZGVmYXVsdC5WZWN0b3IoMCwxLDApKSxlLnB1c2gobmV3IFQuZGVmYXVsdC5WZWN0b3IoMSwwLDApKSx0aGlzLnN0cm9rZUluZGljZXM9W1swLDFdLFsxLDJdLFsyLDBdXSx0aGlzLnZlcnRpY2VzPWUsdGhpcy5mYWNlcz1bWzAsMSwyXV0sdGhpcy51dnM9WzAsMCwwLDEsMSwxXX0pO3MuX21ha2VUcmlhbmdsZUVkZ2VzKCkuX2VkZ2VzVG9WZXJ0aWNlcygpLHMuY29tcHV0ZU5vcm1hbHMoKSx0aGlzLmNyZWF0ZUJ1ZmZlcnMoXCJ0cmlcIixzKX12YXIgbD10aGlzLnVNVk1hdHJpeC5jb3B5KCk7dHJ5e3ZhciBwPW5ldyBULmRlZmF1bHQuTWF0cml4KFtuLXQsYS1yLDAsMCxvLXQsaS1yLDAsMCwwLDAsMSwwLHQsciwwLDFdKS5tdWx0KHRoaXMudU1WTWF0cml4KTt0aGlzLnVNVk1hdHJpeD1wLHRoaXMuZHJhd0J1ZmZlcnMoXCJ0cmlcIil9ZmluYWxseXt0aGlzLnVNVk1hdHJpeD1sfXJldHVybiB0aGlzfSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZWxsaXBzZT1mdW5jdGlvbihlKXt0aGlzLmFyYyhlWzBdLGVbMV0sZVsyXSxlWzNdLDAsaC5UV09fUEksaC5PUEVOLGVbNF0pfSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuYXJjPWZ1bmN0aW9uKGUpe3ZhciB0LHI9ZSxuPWFyZ3VtZW50c1sxXSxhPWFyZ3VtZW50c1syXSxvPWFyZ3VtZW50c1szXSxpPWFyZ3VtZW50c1s0XSxzPWFyZ3VtZW50c1s1XSxsPWFyZ3VtZW50c1s2XSxwPWFyZ3VtZW50c1s3XXx8MjU7aWYodD1NYXRoLmFicyhzLWkpPj1oLlRXT19QST9cIlwiLmNvbmNhdChcImVsbGlwc2VcIixcInxcIikuY29uY2F0KHAsXCJ8XCIpOlwiXCIuY29uY2F0KFwiYXJjXCIsXCJ8XCIpLmNvbmNhdChpLFwifFwiKS5jb25jYXQocyxcInxcIikuY29uY2F0KGwsXCJ8XCIpLmNvbmNhdChwLFwifFwiKSwhdGhpcy5nZW9tZXRyeUluSGFzaCh0KSl7dmFyIHU9bmV3IFQuZGVmYXVsdC5HZW9tZXRyeShwLDEsZnVuY3Rpb24oKXtpZih0aGlzLnN0cm9rZUluZGljZXM9W10saS50b0ZpeGVkKDEwKSE9PXMudG9GaXhlZCgxMCkpe2whPT1oLlBJRSYmdm9pZCAwIT09bHx8KHRoaXMudmVydGljZXMucHVzaChuZXcgVC5kZWZhdWx0LlZlY3RvciguNSwuNSwwKSksdGhpcy51dnMucHVzaChbLjUsLjVdKSk7Zm9yKHZhciBlPTA7ZTw9cDtlKyspe3ZhciB0PShzLWkpKihlL3ApK2kscj0uNStNYXRoLmNvcyh0KS8yLG49LjUrTWF0aC5zaW4odCkvMjt0aGlzLnZlcnRpY2VzLnB1c2gobmV3IFQuZGVmYXVsdC5WZWN0b3IocixuLDApKSx0aGlzLnV2cy5wdXNoKFtyLG5dKSxlPHAtMSYmKHRoaXMuZmFjZXMucHVzaChbMCxlKzEsZSsyXSksdGhpcy5zdHJva2VJbmRpY2VzLnB1c2goW2UrMSxlKzJdKSl9c3dpdGNoKGwpe2Nhc2UgaC5QSUU6dGhpcy5mYWNlcy5wdXNoKFswLHRoaXMudmVydGljZXMubGVuZ3RoLTIsdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMV0pLHRoaXMuc3Ryb2tlSW5kaWNlcy5wdXNoKFswLDFdKSx0aGlzLnN0cm9rZUluZGljZXMucHVzaChbdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMix0aGlzLnZlcnRpY2VzLmxlbmd0aC0xXSksdGhpcy5zdHJva2VJbmRpY2VzLnB1c2goWzAsdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMV0pO2JyZWFrO2Nhc2UgaC5DSE9SRDp0aGlzLnN0cm9rZUluZGljZXMucHVzaChbMCwxXSksdGhpcy5zdHJva2VJbmRpY2VzLnB1c2goWzAsdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMV0pO2JyZWFrO2Nhc2UgaC5PUEVOOnRoaXMuc3Ryb2tlSW5kaWNlcy5wdXNoKFswLDFdKTticmVhaztkZWZhdWx0OnRoaXMuZmFjZXMucHVzaChbMCx0aGlzLnZlcnRpY2VzLmxlbmd0aC0yLHRoaXMudmVydGljZXMubGVuZ3RoLTFdKSx0aGlzLnN0cm9rZUluZGljZXMucHVzaChbdGhpcy52ZXJ0aWNlcy5sZW5ndGgtMix0aGlzLnZlcnRpY2VzLmxlbmd0aC0xXSl9fX0pO3UuY29tcHV0ZU5vcm1hbHMoKSxwPD01MD91Ll9tYWtlVHJpYW5nbGVFZGdlcygpLl9lZGdlc1RvVmVydGljZXModSk6dGhpcy5fcmVuZGVyZXIuX2RvU3Ryb2tlJiZjb25zb2xlLmxvZyhcIkNhbm5vdCBzdHJva2UgJHtzaGFwZX0gd2l0aCBtb3JlIHRoYW4gNTAgZGV0YWlsXCIpLHRoaXMuY3JlYXRlQnVmZmVycyh0LHUpfXZhciBjPXRoaXMudU1WTWF0cml4LmNvcHkoKTt0cnl7dGhpcy51TVZNYXRyaXgudHJhbnNsYXRlKFtyLG4sMF0pLHRoaXMudU1WTWF0cml4LnNjYWxlKGEsbywxKSx0aGlzLmRyYXdCdWZmZXJzKHQpfWZpbmFsbHl7dGhpcy51TVZNYXRyaXg9Y31yZXR1cm4gdGhpc30sVC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnJlY3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fcEluc3QuX2dsQXR0cmlidXRlcy5wZXJQaXhlbExpZ2h0aW5nLHI9ZVswXSxuPWVbMV0sYT1lWzJdLG89ZVszXSxpPWVbNF18fCh0PzE6MjQpLHM9ZVs1XXx8KHQ/MToxNiksbD1cInJlY3R8XCIuY29uY2F0KGksXCJ8XCIpLmNvbmNhdChzKTtpZighdGhpcy5nZW9tZXRyeUluSGFzaChsKSl7dmFyIHA9bmV3IFQuZGVmYXVsdC5HZW9tZXRyeShpLHMsZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPD10aGlzLmRldGFpbFk7ZSsrKWZvcih2YXIgdD1lL3RoaXMuZGV0YWlsWSxyPTA7cjw9dGhpcy5kZXRhaWxYO3IrKyl7dmFyIG49ci90aGlzLmRldGFpbFgsYT1uZXcgVC5kZWZhdWx0LlZlY3RvcihuLHQsMCk7dGhpcy52ZXJ0aWNlcy5wdXNoKGEpLHRoaXMudXZzLnB1c2gobix0KX0wPGkmJjA8cyYmKHRoaXMuc3Ryb2tlSW5kaWNlcz1bWzAsaV0sW2ksKGkrMSkqKHMrMSktMV0sWyhpKzEpKihzKzEpLTEsKGkrMSkqc10sWyhpKzEpKnMsMF1dKX0pO3AuY29tcHV0ZUZhY2VzKCkuY29tcHV0ZU5vcm1hbHMoKS5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCksdGhpcy5jcmVhdGVCdWZmZXJzKGwscCl9dmFyIHU9dGhpcy51TVZNYXRyaXguY29weSgpO3RyeXt0aGlzLnVNVk1hdHJpeC50cmFuc2xhdGUoW3IsbiwwXSksdGhpcy51TVZNYXRyaXguc2NhbGUoYSxvLDEpLHRoaXMuZHJhd0J1ZmZlcnMobCl9ZmluYWxseXt0aGlzLnVNVk1hdHJpeD11fXJldHVybiB0aGlzfSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucXVhZD1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMsbCxwLHUsYyl7dmFyIGQ9XCJxdWFkfFwiLmNvbmNhdChlLFwifFwiKS5jb25jYXQodCxcInxcIikuY29uY2F0KHIsXCJ8XCIpLmNvbmNhdChuLFwifFwiKS5jb25jYXQoYSxcInxcIikuY29uY2F0KG8sXCJ8XCIpLmNvbmNhdChpLFwifFwiKS5jb25jYXQocyxcInxcIikuY29uY2F0KGwsXCJ8XCIpLmNvbmNhdChwLFwifFwiKS5jb25jYXQodSxcInxcIikuY29uY2F0KGMpO2lmKCF0aGlzLmdlb21ldHJ5SW5IYXNoKGQpKXt2YXIgaD1uZXcgVC5kZWZhdWx0Lkdlb21ldHJ5KDIsMixmdW5jdGlvbigpe3RoaXMudmVydGljZXMucHVzaChuZXcgVC5kZWZhdWx0LlZlY3RvcihlLHQscikpLHRoaXMudmVydGljZXMucHVzaChuZXcgVC5kZWZhdWx0LlZlY3RvcihuLGEsbykpLHRoaXMudmVydGljZXMucHVzaChuZXcgVC5kZWZhdWx0LlZlY3RvcihpLHMsbCkpLHRoaXMudmVydGljZXMucHVzaChuZXcgVC5kZWZhdWx0LlZlY3RvcihwLHUsYykpLHRoaXMudXZzLnB1c2goMCwwLDEsMCwxLDEsMCwxKSx0aGlzLnN0cm9rZUluZGljZXM9W1swLDFdLFsxLDJdLFsyLDNdLFszLDBdXX0pO2guY29tcHV0ZU5vcm1hbHMoKS5fbWFrZVRyaWFuZ2xlRWRnZXMoKS5fZWRnZXNUb1ZlcnRpY2VzKCksaC5mYWNlcz1bWzAsMSwyXSxbMiwzLDBdXSx0aGlzLmNyZWF0ZUJ1ZmZlcnMoZCxoKX1yZXR1cm4gdGhpcy5kcmF3QnVmZmVycyhkKSx0aGlzfSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuYmV6aWVyPWZ1bmN0aW9uKGUsdCxyLG4sYSxvLGkscyxsLHAsdSxjKXs4PT09YXJndW1lbnRzLmxlbmd0aCYmKHU9cyxwPWkscz1vLGk9YSxhPW4sbj1yLHI9bz1sPWM9MCk7dmFyIGQ9dGhpcy5fcEluc3QuX2JlemllckRldGFpbHx8MjA7dGhpcy5iZWdpblNoYXBlKCk7Zm9yKHZhciBoPTA7aDw9ZDtoKyspe3ZhciBtPU1hdGgucG93KDEtaC9kLDMpLGY9aC9kKjMqTWF0aC5wb3coMS1oL2QsMikseT0zKk1hdGgucG93KGgvZCwyKSooMS1oL2QpLGc9TWF0aC5wb3coaC9kLDMpO3RoaXMudmVydGV4KGUqbStuKmYraSp5K3AqZyx0Km0rYSpmK3MqeSt1KmcsciptK28qZitsKnkrYypnKX1yZXR1cm4gdGhpcy5lbmRTaGFwZSgpLHRoaXN9LFQuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5jdXJ2ZT1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMsbCxwLHUsYyl7OD09PWFyZ3VtZW50cy5sZW5ndGgmJihwPWksdT1zLGk9YSxzPW4sYT1uPXIscj1vPWw9Yz0wKTt2YXIgZD10aGlzLl9wSW5zdC5fY3VydmVEZXRhaWw7dGhpcy5iZWdpblNoYXBlKCk7Zm9yKHZhciBoPTA7aDw9ZDtoKyspe3ZhciBtPS41Kk1hdGgucG93KGgvZCwzKSxmPS41Kk1hdGgucG93KGgvZCwyKSx5PWgvZCouNSxnPW0qKDMqbi1lLTMqaStwKStmKigyKmUtNSpuKzQqaS1wKSt5KigtZStpKSsyKm4qLjUsdj1tKigzKmEtdC0zKnMrdSkrZiooMip0LTUqYSs0KnMtdSkreSooLXQrcykrMiphKi41LGI9bSooMypvLXItMypsK2MpK2YqKDIqci01Km8rNCpsLWMpK3kqKC1yK2wpKzIqbyouNTt0aGlzLnZlcnRleChnLHYsYil9cmV0dXJuIHRoaXMuZW5kU2hhcGUoKSx0aGlzfSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUubGluZT1mdW5jdGlvbigpe3JldHVybiA2PT09YXJndW1lbnRzLmxlbmd0aD8odGhpcy5iZWdpblNoYXBlKGguTElORVMpLHRoaXMudmVydGV4KGFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSxhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0sYXJndW1lbnRzLmxlbmd0aDw9Mj92b2lkIDA6YXJndW1lbnRzWzJdKSx0aGlzLnZlcnRleChhcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM10sYXJndW1lbnRzLmxlbmd0aDw9ND92b2lkIDA6YXJndW1lbnRzWzRdLGFyZ3VtZW50cy5sZW5ndGg8PTU/dm9pZCAwOmFyZ3VtZW50c1s1XSksdGhpcy5lbmRTaGFwZSgpKTo0PT09YXJndW1lbnRzLmxlbmd0aCYmKHRoaXMuYmVnaW5TaGFwZShoLkxJTkVTKSx0aGlzLnZlcnRleChhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdLDApLHRoaXMudmVydGV4KGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSxhcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM10sMCksdGhpcy5lbmRTaGFwZSgpKSx0aGlzfSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuYmV6aWVyVmVydGV4PWZ1bmN0aW9uKCl7aWYoMD09PXRoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4Lmxlbmd0aCl0aHJvdyBFcnJvcihcInZlcnRleCgpIG11c3QgYmUgdXNlZCBvbmNlIGJlZm9yZSBjYWxsaW5nIGJlemllclZlcnRleCgpXCIpO3ZhciBlLHQscixuLGEsbz1bXSxpPVtdLHM9W10sbD1hcmd1bWVudHMubGVuZ3RoO2lmKChlPTApPT09dGhpcy5fbG9va1VwVGFibGVCZXppZXIubGVuZ3RofHx0aGlzLl9sdXRCZXppZXJEZXRhaWwhPT10aGlzLl9wSW5zdC5fY3VydmVEZXRhaWwpe3RoaXMuX2xvb2tVcFRhYmxlQmV6aWVyPVtdLHRoaXMuX2x1dEJlemllckRldGFpbD10aGlzLl9wSW5zdC5fY3VydmVEZXRhaWw7Zm9yKHZhciBwPTEvdGhpcy5fbHV0QmV6aWVyRGV0YWlsLHU9MCxjPTEsZD0wO3U8MTspe2lmKGU9cGFyc2VGbG9hdCh1LnRvRml4ZWQoNikpLHRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2RdPXRoaXMuX2JlemllckNvZWZmaWNpZW50cyhlKSxjLnRvRml4ZWQoNik9PT1wLnRvRml4ZWQoNikpe2U9cGFyc2VGbG9hdChjLnRvRml4ZWQoNikpK3BhcnNlRmxvYXQodS50b0ZpeGVkKDYpKSwrK2QsdGhpcy5fbG9va1VwVGFibGVCZXppZXJbZF09dGhpcy5fYmV6aWVyQ29lZmZpY2llbnRzKGUpO2JyZWFrfXUrPXAsYy09cCwrK2R9fXZhciBoPXRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyLmxlbmd0aDtpZig2PT09bCl7Zm9yKHRoaXMuaXNCZXppZXI9ITAsbz1bdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMF0sYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSxhcmd1bWVudHMubGVuZ3RoPD00P3ZvaWQgMDphcmd1bWVudHNbNF1dLGk9W3RoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzFdLGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSxhcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM10sYXJndW1lbnRzLmxlbmd0aDw9NT92b2lkIDA6YXJndW1lbnRzWzVdXSxhPTA7YTxoO2ErKyl0PW9bMF0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMF0rb1sxXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsxXStvWzJdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzJdK29bM10qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bM10scj1pWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzBdK2lbMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMV0raVsyXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsyXStpWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzNdLHRoaXMudmVydGV4KHQscik7dGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMF09YXJndW1lbnRzLmxlbmd0aDw9ND92b2lkIDA6YXJndW1lbnRzWzRdLHRoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzFdPWFyZ3VtZW50cy5sZW5ndGg8PTU/dm9pZCAwOmFyZ3VtZW50c1s1XX1lbHNlIGlmKDk9PT1sKXtmb3IodGhpcy5pc0Jlemllcj0hMCxvPVt0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFswXSxhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdLGFyZ3VtZW50cy5sZW5ndGg8PTY/dm9pZCAwOmFyZ3VtZW50c1s2XV0saT1bdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMV0sYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdLGFyZ3VtZW50cy5sZW5ndGg8PTQ/dm9pZCAwOmFyZ3VtZW50c1s0XSxhcmd1bWVudHMubGVuZ3RoPD03P3ZvaWQgMDphcmd1bWVudHNbN11dLHM9W3RoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzJdLGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXSxhcmd1bWVudHMubGVuZ3RoPD01P3ZvaWQgMDphcmd1bWVudHNbNV0sYXJndW1lbnRzLmxlbmd0aDw9OD92b2lkIDA6YXJndW1lbnRzWzhdXSxhPTA7YTxoO2ErKyl0PW9bMF0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMF0rb1sxXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsxXStvWzJdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzJdK29bM10qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bM10scj1pWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzBdK2lbMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMV0raVsyXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsyXStpWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzNdLG49c1swXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVswXStzWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzFdK3NbMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMl0rc1szXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVszXSx0aGlzLnZlcnRleCh0LHIsbik7dGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMF09YXJndW1lbnRzLmxlbmd0aDw9Nj92b2lkIDA6YXJndW1lbnRzWzZdLHRoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzFdPWFyZ3VtZW50cy5sZW5ndGg8PTc/dm9pZCAwOmFyZ3VtZW50c1s3XSx0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFsyXT1hcmd1bWVudHMubGVuZ3RoPD04P3ZvaWQgMDphcmd1bWVudHNbOF19fSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucXVhZHJhdGljVmVydGV4PWZ1bmN0aW9uKCl7aWYoMD09PXRoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4Lmxlbmd0aCl0aHJvdyBFcnJvcihcInZlcnRleCgpIG11c3QgYmUgdXNlZCBvbmNlIGJlZm9yZSBjYWxsaW5nIHF1YWRyYXRpY1ZlcnRleCgpXCIpO3ZhciBlLHQscixuLGEsbz1bXSxpPVtdLHM9W10sbD1hcmd1bWVudHMubGVuZ3RoO2lmKChlPTApPT09dGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWMubGVuZ3RofHx0aGlzLl9sdXRRdWFkcmF0aWNEZXRhaWwhPT10aGlzLl9wSW5zdC5fY3VydmVEZXRhaWwpe3RoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljPVtdLHRoaXMuX2x1dFF1YWRyYXRpY0RldGFpbD10aGlzLl9wSW5zdC5fY3VydmVEZXRhaWw7Zm9yKHZhciBwPTEvdGhpcy5fbHV0UXVhZHJhdGljRGV0YWlsLHU9MCxjPTEsZD0wO3U8MTspe2lmKGU9cGFyc2VGbG9hdCh1LnRvRml4ZWQoNikpLHRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2RdPXRoaXMuX3F1YWRyYXRpY0NvZWZmaWNpZW50cyhlKSxjLnRvRml4ZWQoNik9PT1wLnRvRml4ZWQoNikpe2U9cGFyc2VGbG9hdChjLnRvRml4ZWQoNikpK3BhcnNlRmxvYXQodS50b0ZpeGVkKDYpKSwrK2QsdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbZF09dGhpcy5fcXVhZHJhdGljQ29lZmZpY2llbnRzKGUpO2JyZWFrfXUrPXAsYy09cCwrK2R9fXZhciBoPXRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljLmxlbmd0aDtpZig0PT09bCl7Zm9yKHRoaXMuaXNRdWFkcmF0aWM9ITAsbz1bdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMF0sYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLGFyZ3VtZW50cy5sZW5ndGg8PTI/dm9pZCAwOmFyZ3VtZW50c1syXV0saT1bdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMV0sYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdLGFyZ3VtZW50cy5sZW5ndGg8PTM/dm9pZCAwOmFyZ3VtZW50c1szXV0sYT0wO2E8aDthKyspdD1vWzBdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2FdWzBdK29bMV0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbYV1bMV0rb1syXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1thXVsyXSxyPWlbMF0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbYV1bMF0raVsxXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1thXVsxXStpWzJdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2FdWzJdLHRoaXMudmVydGV4KHQscik7dGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMF09YXJndW1lbnRzLmxlbmd0aDw9Mj92b2lkIDA6YXJndW1lbnRzWzJdLHRoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzFdPWFyZ3VtZW50cy5sZW5ndGg8PTM/dm9pZCAwOmFyZ3VtZW50c1szXX1lbHNlIGlmKDY9PT1sKXtmb3IodGhpcy5pc1F1YWRyYXRpYz0hMCxvPVt0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFswXSxhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sYXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdXSxpPVt0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFsxXSxhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0sYXJndW1lbnRzLmxlbmd0aDw9ND92b2lkIDA6YXJndW1lbnRzWzRdXSxzPVt0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFsyXSxhcmd1bWVudHMubGVuZ3RoPD0yP3ZvaWQgMDphcmd1bWVudHNbMl0sYXJndW1lbnRzLmxlbmd0aDw9NT92b2lkIDA6YXJndW1lbnRzWzVdXSxhPTA7YTxoO2ErKyl0PW9bMF0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbYV1bMF0rb1sxXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1thXVsxXStvWzJdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2FdWzJdLHI9aVswXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1thXVswXStpWzFdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2FdWzFdK2lbMl0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbYV1bMl0sbj1zWzBdKnRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljW2FdWzBdK3NbMV0qdGhpcy5fbG9va1VwVGFibGVRdWFkcmF0aWNbYV1bMV0rc1syXSp0aGlzLl9sb29rVXBUYWJsZVF1YWRyYXRpY1thXVsyXSx0aGlzLnZlcnRleCh0LHIsbik7dGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMF09YXJndW1lbnRzLmxlbmd0aDw9Mz92b2lkIDA6YXJndW1lbnRzWzNdLHRoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzFdPWFyZ3VtZW50cy5sZW5ndGg8PTQ/dm9pZCAwOmFyZ3VtZW50c1s0XSx0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFsyXT1hcmd1bWVudHMubGVuZ3RoPD01P3ZvaWQgMDphcmd1bWVudHNbNV19fSxULmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuY3VydmVWZXJ0ZXg9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsbixhLG89W10saT1bXSxzPVtdLGw9YXJndW1lbnRzLmxlbmd0aDtpZigoZT0wKT09PXRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyLmxlbmd0aHx8dGhpcy5fbHV0QmV6aWVyRGV0YWlsIT09dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsKXt0aGlzLl9sb29rVXBUYWJsZUJlemllcj1bXSx0aGlzLl9sdXRCZXppZXJEZXRhaWw9dGhpcy5fcEluc3QuX2N1cnZlRGV0YWlsO2Zvcih2YXIgcD0xL3RoaXMuX2x1dEJlemllckRldGFpbCx1PTAsYz0xLGQ9MDt1PDE7KXtpZihlPXBhcnNlRmxvYXQodS50b0ZpeGVkKDYpKSx0aGlzLl9sb29rVXBUYWJsZUJlemllcltkXT10aGlzLl9iZXppZXJDb2VmZmljaWVudHMoZSksYy50b0ZpeGVkKDYpPT09cC50b0ZpeGVkKDYpKXtlPXBhcnNlRmxvYXQoYy50b0ZpeGVkKDYpKStwYXJzZUZsb2F0KHUudG9GaXhlZCg2KSksKytkLHRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2RdPXRoaXMuX2JlemllckNvZWZmaWNpZW50cyhlKTticmVha311Kz1wLGMtPXAsKytkfX12YXIgaD10aGlzLl9sb29rVXBUYWJsZUJlemllci5sZW5ndGg7aWYoMj09PWwpe2lmKHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXgucHVzaChhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0pLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXgucHVzaChhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pLDg9PT10aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4Lmxlbmd0aCl7Zm9yKHRoaXMuaXNDdXJ2ZT0hMCxvPXRoaXMuX2JlemllclRvQ2F0bXVsbChbdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFswXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzJdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbNF0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFs2XV0pLGk9dGhpcy5fYmV6aWVyVG9DYXRtdWxsKFt0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzFdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbM10sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFs1XSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzddXSksYT0wO2E8aDthKyspdD1vWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzBdK29bMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMV0rb1syXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsyXStvWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzNdLHI9aVswXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVswXStpWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzFdK2lbMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMl0raVszXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVszXSx0aGlzLnZlcnRleCh0LHIpO2ZvcihhPTA7YTxsO2ErKyl0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4LnNoaWZ0KCl9fWVsc2UgaWYoMz09PWwmJih0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4LnB1c2goYXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdKSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4LnB1c2goYXJndW1lbnRzLmxlbmd0aDw9MT92b2lkIDA6YXJndW1lbnRzWzFdKSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4LnB1c2goYXJndW1lbnRzLmxlbmd0aDw9Mj92b2lkIDA6YXJndW1lbnRzWzJdKSwxMj09PXRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXgubGVuZ3RoKSl7Zm9yKHRoaXMuaXNDdXJ2ZT0hMCxvPXRoaXMuX2JlemllclRvQ2F0bXVsbChbdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFswXSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzNdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbNl0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFs5XV0pLGk9dGhpcy5fYmV6aWVyVG9DYXRtdWxsKFt0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzFdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbNF0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFs3XSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzEwXV0pLHM9dGhpcy5fYmV6aWVyVG9DYXRtdWxsKFt0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzJdLHRoaXMuaW1tZWRpYXRlTW9kZS5fY3VydmVWZXJ0ZXhbNV0sdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleFs4XSx0aGlzLmltbWVkaWF0ZU1vZGUuX2N1cnZlVmVydGV4WzExXV0pLGE9MDthPGg7YSsrKXQ9b1swXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVswXStvWzFdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzFdK29bMl0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMl0rb1szXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVszXSxyPWlbMF0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMF0raVsxXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsxXStpWzJdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzJdK2lbM10qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bM10sbj1zWzBdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzBdK3NbMV0qdGhpcy5fbG9va1VwVGFibGVCZXppZXJbYV1bMV0rc1syXSp0aGlzLl9sb29rVXBUYWJsZUJlemllclthXVsyXStzWzNdKnRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyW2FdWzNdLHRoaXMudmVydGV4KHQscixuKTtmb3IoYT0wO2E8bDthKyspdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5zaGlmdCgpfX0sVC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmltYWdlPWZ1bmN0aW9uKGUsdCxyLG4sYSxvLGkscyxsKXt0aGlzLl9pc0VyYXNpbmcmJnRoaXMuYmxlbmRNb2RlKHRoaXMuX2NhY2hlZEJsZW5kTW9kZSksdGhpcy5fcEluc3QucHVzaCgpLHRoaXMuX3BJbnN0Lm5vTGlnaHRzKCksdGhpcy5fcEluc3QudGV4dHVyZShlKSx0aGlzLl9wSW5zdC50ZXh0dXJlTW9kZShoLk5PUk1BTCk7dmFyIHA9MDt0PD1lLndpZHRoJiYocD10L2Uud2lkdGgpO3ZhciB1PTE7dCtuPD1lLndpZHRoJiYodT0odCtuKS9lLndpZHRoKTt2YXIgYz0wO3I8PWUuaGVpZ2h0JiYoYz1yL2UuaGVpZ2h0KTt2YXIgZD0xO3IrYTw9ZS5oZWlnaHQmJihkPShyK2EpL2UuaGVpZ2h0KSx0aGlzLmJlZ2luU2hhcGUoKSx0aGlzLnZlcnRleChvLGksMCxwLGMpLHRoaXMudmVydGV4KG8rcyxpLDAsdSxjKSx0aGlzLnZlcnRleChvK3MsaStsLDAsdSxkKSx0aGlzLnZlcnRleChvLGkrbCwwLHAsZCksdGhpcy5lbmRTaGFwZShoLkNMT1NFKSx0aGlzLl9wSW5zdC5wb3AoKSx0aGlzLl9pc0VyYXNpbmcmJnRoaXMuYmxlbmRNb2RlKGguUkVNT1ZFKX07dmFyIGE9VC5kZWZhdWx0O3IuZGVmYXVsdD1hfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzIsXCIuL3A1Lkdlb21ldHJ5XCI6ODF9XSw3NjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sZD0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sYT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWQuZGVmYXVsdC5wcm90b3R5cGUub3JiaXRDb250cm9sPWZ1bmN0aW9uKGUsdCxyKXtpZih0aGlzLl9hc3NlcnQzZChcIm9yYml0Q29udHJvbFwiKSxkLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm9yYml0Q29udHJvbFwiLGFyZ3VtZW50cyksdGhpcy5tb3VzZVg8dGhpcy53aWR0aCYmMDx0aGlzLm1vdXNlWCYmdGhpcy5tb3VzZVk8dGhpcy5oZWlnaHQmJjA8dGhpcy5tb3VzZVkpe3ZhciBuPXRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmE7dm9pZCAwPT09ZSYmKGU9MSksdm9pZCAwPT09dCYmKHQ9ZSksdm9pZCAwPT09ciYmKHI9LjUpLCEwIT09dGhpcy5jb250ZXh0TWVudURpc2FibGVkJiYodGhpcy5jYW52YXMub25jb250ZXh0bWVudT1mdW5jdGlvbigpe3JldHVybiExfSx0aGlzLl9zZXRQcm9wZXJ0eShcImNvbnRleHRNZW51RGlzYWJsZWRcIiwhMCkpLCEwIT09dGhpcy53aGVlbERlZmF1bHREaXNhYmxlZCYmKHRoaXMuY2FudmFzLm9ud2hlZWw9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdGhpcy5fc2V0UHJvcGVydHkoXCJ3aGVlbERlZmF1bHREaXNhYmxlZFwiLCEwKSk7dmFyIGE9dGhpcy5oZWlnaHQ8dGhpcy53aWR0aD90aGlzLmhlaWdodDp0aGlzLndpZHRoO2lmKHRoaXMuX21vdXNlV2hlZWxEZWx0YVkhPT10aGlzLl9wbW91c2VXaGVlbERlbHRhWSYmKDA8dGhpcy5fbW91c2VXaGVlbERlbHRhWT90aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9vcmJpdCgwLDAsciphKTp0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9vcmJpdCgwLDAsLXIqYSkpLHRoaXMubW91c2VJc1ByZXNzZWQpaWYodGhpcy5tb3VzZUJ1dHRvbj09PXRoaXMuTEVGVCl7dmFyIG89LWUqKHRoaXMubW91c2VYLXRoaXMucG1vdXNlWCkvYSxpPXQqKHRoaXMubW91c2VZLXRoaXMucG1vdXNlWSkvYTt0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLl9vcmJpdChvLGksMCl9ZWxzZSBpZih0aGlzLm1vdXNlQnV0dG9uPT09dGhpcy5SSUdIVCl7dmFyIHM9bi5fZ2V0TG9jYWxBeGVzKCksbD1NYXRoLnNxcnQocy54WzBdKnMueFswXStzLnhbMl0qcy54WzJdKTswIT09bCYmKHMueFswXS89bCxzLnhbMl0vPWwpO3ZhciBwPU1hdGguc3FydChzLnlbMF0qcy55WzBdK3MueVsyXSpzLnlbMl0pOzAhPT1wJiYocy55WzBdLz1wLHMueVsyXS89cCk7dmFyIHU9LTEqZSoodGhpcy5tb3VzZVgtdGhpcy5wbW91c2VYKSxjPS0xKnQqKHRoaXMubW91c2VZLXRoaXMucG1vdXNlWSk7bi5zZXRQb3NpdGlvbihuLmV5ZVgrdSpzLnhbMF0rYypzLnpbMF0sbi5leWVZLG4uZXllWit1KnMueFsyXStjKnMuelsyXSl9cmV0dXJuIHRoaXN9fSxkLmRlZmF1bHQucHJvdG90eXBlLmRlYnVnTW9kZT1mdW5jdGlvbigpe3RoaXMuX2Fzc2VydDNkKFwiZGVidWdNb2RlXCIpO2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO2QuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZGVidWdNb2RlXCIsdCk7Zm9yKHZhciBuPXRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3QubGVuZ3RoLTE7MDw9bjtuLS0pdGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdFtuXS50b1N0cmluZygpIT09dGhpcy5fZ3JpZCgpLnRvU3RyaW5nKCkmJnRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3Rbbl0udG9TdHJpbmcoKSE9PXRoaXMuX2F4ZXNJY29uKCkudG9TdHJpbmcoKXx8dGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdC5zcGxpY2UobiwxKTt0WzBdPT09YS5HUklEP3RoaXMucmVnaXN0ZXJNZXRob2QoXCJwb3N0XCIsdGhpcy5fZ3JpZC5jYWxsKHRoaXMsdFsxXSx0WzJdLHRbM10sdFs0XSx0WzVdKSk6dFswXT09PWEuQVhFUz90aGlzLnJlZ2lzdGVyTWV0aG9kKFwicG9zdFwiLHRoaXMuX2F4ZXNJY29uLmNhbGwodGhpcyx0WzFdLHRbMl0sdFszXSx0WzRdKSk6KHRoaXMucmVnaXN0ZXJNZXRob2QoXCJwb3N0XCIsdGhpcy5fZ3JpZC5jYWxsKHRoaXMsdFswXSx0WzFdLHRbMl0sdFszXSx0WzRdKSksdGhpcy5yZWdpc3Rlck1ldGhvZChcInBvc3RcIix0aGlzLl9heGVzSWNvbi5jYWxsKHRoaXMsdFs1XSx0WzZdLHRbN10sdFs4XSkpKX0sZC5kZWZhdWx0LnByb3RvdHlwZS5ub0RlYnVnTW9kZT1mdW5jdGlvbigpe3RoaXMuX2Fzc2VydDNkKFwibm9EZWJ1Z01vZGVcIik7Zm9yKHZhciBlPXRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3QubGVuZ3RoLTE7MDw9ZTtlLS0pdGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdFtlXS50b1N0cmluZygpIT09dGhpcy5fZ3JpZCgpLnRvU3RyaW5nKCkmJnRoaXMuX3JlZ2lzdGVyZWRNZXRob2RzLnBvc3RbZV0udG9TdHJpbmcoKSE9PXRoaXMuX2F4ZXNJY29uKCkudG9TdHJpbmcoKXx8dGhpcy5fcmVnaXN0ZXJlZE1ldGhvZHMucG9zdC5zcGxpY2UoZSwxKX0sZC5kZWZhdWx0LnByb3RvdHlwZS5fZ3JpZD1mdW5jdGlvbihlLHIsbixhLG8pe3ZvaWQgMD09PWUmJihlPXRoaXMud2lkdGgvMiksdm9pZCAwPT09ciYmKHI9TWF0aC5yb3VuZChlLzMwKTw0PzQ6TWF0aC5yb3VuZChlLzMwKSksdm9pZCAwPT09biYmKG49MCksdm9pZCAwPT09YSYmKGE9MCksdm9pZCAwPT09byYmKG89MCk7dmFyIGk9ZS9yLHM9ZS8yO3JldHVybiBmdW5jdGlvbigpe3RoaXMucHVzaCgpLHRoaXMuc3Ryb2tlKDI1NSp0aGlzLl9yZW5kZXJlci5jdXJTdHJva2VDb2xvclswXSwyNTUqdGhpcy5fcmVuZGVyZXIuY3VyU3Ryb2tlQ29sb3JbMV0sMjU1KnRoaXMuX3JlbmRlcmVyLmN1clN0cm9rZUNvbG9yWzJdKSx0aGlzLl9yZW5kZXJlci51TVZNYXRyaXguc2V0KHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxXSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzJdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbM10sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs0XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzVdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbNl0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs3XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzhdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbOV0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMV0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMl0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxM10sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxNF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxNV0pO2Zvcih2YXIgZT0wO2U8PXI7ZSsrKXRoaXMuYmVnaW5TaGFwZSh0aGlzLkxJTkVTKSx0aGlzLnZlcnRleCgtcytuLGEsZSppLXMrbyksdGhpcy52ZXJ0ZXgoK3MrbixhLGUqaS1zK28pLHRoaXMuZW5kU2hhcGUoKTtmb3IodmFyIHQ9MDt0PD1yO3QrKyl0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCppLXMrbixhLC1zK28pLHRoaXMudmVydGV4KHQqaS1zK24sYSwrcytvKSx0aGlzLmVuZFNoYXBlKCk7dGhpcy5wb3AoKX19LGQuZGVmYXVsdC5wcm90b3R5cGUuX2F4ZXNJY29uPWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiB2b2lkIDA9PT1lJiYoZT00MDx0aGlzLndpZHRoLzIwP3RoaXMud2lkdGgvMjA6NDApLHZvaWQgMD09PXQmJih0PS10aGlzLndpZHRoLzQpLHZvaWQgMD09PXImJihyPXQpLHZvaWQgMD09PW4mJihuPXQpLGZ1bmN0aW9uKCl7dGhpcy5wdXNoKCksdGhpcy5fcmVuZGVyZXIudU1WTWF0cml4LnNldCh0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzBdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMV0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsyXSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzNdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbNF0sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs1XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzZdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbN10sdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs4XSx0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzldLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTBdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTFdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTJdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTNdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTRdLHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTVdKSx0aGlzLnN0cm9rZVdlaWdodCgyKSx0aGlzLnN0cm9rZSgyNTUsMCwwKSx0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCxyLG4pLHRoaXMudmVydGV4KHQrZSxyLG4pLHRoaXMuZW5kU2hhcGUoKSx0aGlzLnN0cm9rZSgwLDI1NSwwKSx0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCxyLG4pLHRoaXMudmVydGV4KHQscitlLG4pLHRoaXMuZW5kU2hhcGUoKSx0aGlzLnN0cm9rZSgwLDAsMjU1KSx0aGlzLmJlZ2luU2hhcGUodGhpcy5MSU5FUyksdGhpcy52ZXJ0ZXgodCxyLG4pLHRoaXMudmVydGV4KHQscixuK2UpLHRoaXMuZW5kU2hhcGUoKSx0aGlzLnBvcCgpfX07dmFyIG89ZC5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzJ9XSw3NzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sZj0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07Zi5kZWZhdWx0LnByb3RvdHlwZS5hbWJpZW50TGlnaHQ9ZnVuY3Rpb24oZSx0LHIsbil7dGhpcy5fYXNzZXJ0M2QoXCJhbWJpZW50TGlnaHRcIiksZi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJhbWJpZW50TGlnaHRcIixhcmd1bWVudHMpO3ZhciBhPXRoaXMuY29sb3IuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiB0aGlzLl9yZW5kZXJlci5hbWJpZW50TGlnaHRDb2xvcnMucHVzaChhLl9hcnJheVswXSxhLl9hcnJheVsxXSxhLl9hcnJheVsyXSksdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXN9LGYuZGVmYXVsdC5wcm90b3R5cGUuc3BlY3VsYXJDb2xvcj1mdW5jdGlvbihlLHQscil7dGhpcy5fYXNzZXJ0M2QoXCJzcGVjdWxhckNvbG9yXCIpLGYuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3BlY3VsYXJDb2xvclwiLGFyZ3VtZW50cyk7dmFyIG49dGhpcy5jb2xvci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLnNwZWN1bGFyQ29sb3JzPVtuLl9hcnJheVswXSxuLl9hcnJheVsxXSxuLl9hcnJheVsyXV0sdGhpc30sZi5kZWZhdWx0LnByb3RvdHlwZS5kaXJlY3Rpb25hbExpZ2h0PWZ1bmN0aW9uKGUsdCxyLG4sYSxvKXt2YXIgaSxzLGwscDt0aGlzLl9hc3NlcnQzZChcImRpcmVjdGlvbmFsTGlnaHRcIiksZi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJkaXJlY3Rpb25hbExpZ2h0XCIsYXJndW1lbnRzKSxpPWUgaW5zdGFuY2VvZiBmLmRlZmF1bHQuQ29sb3I/ZTp0aGlzLmNvbG9yKGUsdCxyKTt2YXIgdT1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXTtwPVwibnVtYmVyXCI9PXR5cGVvZiB1PyhzPWFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoLTNdLGw9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMl0sYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0pOihzPXUueCxsPXUueSx1LnopO3ZhciBjPU1hdGguc3FydChzKnMrbCpsK3AqcCk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zLnB1c2gocy9jLGwvYyxwL2MpLHRoaXMuX3JlbmRlcmVyLmRpcmVjdGlvbmFsTGlnaHREaWZmdXNlQ29sb3JzLnB1c2goaS5fYXJyYXlbMF0saS5fYXJyYXlbMV0saS5fYXJyYXlbMl0pLEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHRoaXMuX3JlbmRlcmVyLmRpcmVjdGlvbmFsTGlnaHRTcGVjdWxhckNvbG9ycyx0aGlzLl9yZW5kZXJlci5zcGVjdWxhckNvbG9ycyksdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXN9LGYuZGVmYXVsdC5wcm90b3R5cGUucG9pbnRMaWdodD1mdW5jdGlvbihlLHQscixuLGEsbyl7dmFyIGkscyxsLHA7dGhpcy5fYXNzZXJ0M2QoXCJwb2ludExpZ2h0XCIpLGYuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwicG9pbnRMaWdodFwiLGFyZ3VtZW50cyksaT1lIGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yP2U6dGhpcy5jb2xvcihlLHQscik7dmFyIHU9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV07cmV0dXJuIHA9XCJudW1iZXJcIj09dHlwZW9mIHU/KHM9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtM10sbD1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0yXSxhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSk6KHM9dS54LGw9dS55LHUueiksdGhpcy5fcmVuZGVyZXIucG9pbnRMaWdodFBvc2l0aW9ucy5wdXNoKHMsbCxwKSx0aGlzLl9yZW5kZXJlci5wb2ludExpZ2h0RGlmZnVzZUNvbG9ycy5wdXNoKGkuX2FycmF5WzBdLGkuX2FycmF5WzFdLGkuX2FycmF5WzJdKSxBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLl9yZW5kZXJlci5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMsdGhpcy5fcmVuZGVyZXIuc3BlY3VsYXJDb2xvcnMpLHRoaXMuX3JlbmRlcmVyLl9lbmFibGVMaWdodGluZz0hMCx0aGlzfSxmLmRlZmF1bHQucHJvdG90eXBlLmxpZ2h0cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcImxpZ2h0c1wiKSx0aGlzLmFtYmllbnRMaWdodCgxMjgsMTI4LDEyOCksdGhpcy5kaXJlY3Rpb25hbExpZ2h0KDEyOCwxMjgsMTI4LDAsMCwtMSksdGhpc30sZi5kZWZhdWx0LnByb3RvdHlwZS5saWdodEZhbGxvZmY9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcImxpZ2h0RmFsbG9mZlwiKSxmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImxpZ2h0RmFsbG9mZlwiLGFyZ3VtZW50cyksZTwwJiYoZT0wLGNvbnNvbGUud2FybihcIlZhbHVlIG9mIGNvbnN0YW50IGFyZ3VtZW50IGluIGxpZ2h0RmFsbG9mZigpIHNob3VsZCBiZSBuZXZlciBiZSBuZWdhdGl2ZS4gU2V0IHRvIDAuXCIpKSx0PDAmJih0PTAsY29uc29sZS53YXJuKFwiVmFsdWUgb2YgbGluZWFyIGFyZ3VtZW50IGluIGxpZ2h0RmFsbG9mZigpIHNob3VsZCBiZSBuZXZlciBiZSBuZWdhdGl2ZS4gU2V0IHRvIDAuXCIpKSxyPDAmJihyPTAsY29uc29sZS53YXJuKFwiVmFsdWUgb2YgcXVhZHJhdGljIGFyZ3VtZW50IGluIGxpZ2h0RmFsbG9mZigpIHNob3VsZCBiZSBuZXZlciBiZSBuZWdhdGl2ZS4gU2V0IHRvIDAuXCIpKSwwPT09ZSYmMD09PXQmJjA9PT1yJiYoZT0xLGNvbnNvbGUud2FybihcIkVpdGhlciBvbmUgb2YgdGhlIHRocmVlIGFyZ3VtZW50cyBpbiBsaWdodEZhbGxvZmYoKSBzaG91bGQgYmUgZ3JlYXRlciB0aGFuIHplcm8uIFNldCBjb25zdGFudCBhcmd1bWVudCB0byAxLlwiKSksdGhpcy5fcmVuZGVyZXIuY29uc3RhbnRBdHRlbnVhdGlvbj1lLHRoaXMuX3JlbmRlcmVyLmxpbmVhckF0dGVudWF0aW9uPXQsdGhpcy5fcmVuZGVyZXIucXVhZHJhdGljQXR0ZW51YXRpb249cix0aGlzfSxmLmRlZmF1bHQucHJvdG90eXBlLnNwb3RMaWdodD1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMsbCxwLHUpe3ZhciBjLGQsaDt0aGlzLl9hc3NlcnQzZChcInNwb3RMaWdodFwiKSxmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNwb3RMaWdodFwiLGFyZ3VtZW50cyk7dmFyIG09YXJndW1lbnRzLmxlbmd0aDtzd2l0Y2gobSl7Y2FzZSAxMTpjYXNlIDEwOmM9dGhpcy5jb2xvcihlLHQsciksZD1uZXcgZi5kZWZhdWx0LlZlY3RvcihuLGEsbyksaD1uZXcgZi5kZWZhdWx0LlZlY3RvcihpLHMsbCk7YnJlYWs7Y2FzZSA5OmUgaW5zdGFuY2VvZiBmLmRlZmF1bHQuQ29sb3I/KGM9ZSxkPW5ldyBmLmRlZmF1bHQuVmVjdG9yKHQscixuKSxoPW5ldyBmLmRlZmF1bHQuVmVjdG9yKGEsbyxpKSxwPXMsdT1sKTpuIGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3Rvcj8oYz10aGlzLmNvbG9yKGUsdCxyKSxkPW4saD1uZXcgZi5kZWZhdWx0LlZlY3RvcihhLG8saSkscD1zLHU9bCk6aSBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3I/KGM9dGhpcy5jb2xvcihlLHQsciksZD1uZXcgZi5kZWZhdWx0LlZlY3RvcihuLGEsbyksaD1pLHA9cyx1PWwpOihjPXRoaXMuY29sb3IoZSx0LHIpLGQ9bmV3IGYuZGVmYXVsdC5WZWN0b3IobixhLG8pLGg9bmV3IGYuZGVmYXVsdC5WZWN0b3IoaSxzLGwpKTticmVhaztjYXNlIDg6cD0oaD1lIGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yPyhjPWUsZD1uZXcgZi5kZWZhdWx0LlZlY3Rvcih0LHIsbiksbmV3IGYuZGVmYXVsdC5WZWN0b3IoYSxvLGkpKTpuIGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3Rvcj8oYz10aGlzLmNvbG9yKGUsdCxyKSxkPW4sbmV3IGYuZGVmYXVsdC5WZWN0b3IoYSxvLGkpKTooYz10aGlzLmNvbG9yKGUsdCxyKSxkPW5ldyBmLmRlZmF1bHQuVmVjdG9yKG4sYSxvKSxpKSxzKTticmVhaztjYXNlIDc6ZSBpbnN0YW5jZW9mIGYuZGVmYXVsdC5Db2xvciYmdCBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3I/KGM9ZSxkPXQsaD1uZXcgZi5kZWZhdWx0LlZlY3RvcihyLG4sYSkscD1vLHU9aSk6ZSBpbnN0YW5jZW9mIGYuZGVmYXVsdC5Db2xvciYmYSBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3I/KGM9ZSxkPW5ldyBmLmRlZmF1bHQuVmVjdG9yKHQscixuKSxoPWEscD1vLHU9aSk6biBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3ImJmEgaW5zdGFuY2VvZiBmLmRlZmF1bHQuVmVjdG9yPyhjPXRoaXMuY29sb3IoZSx0LHIpLGQ9bixoPWEscD1vLHU9aSk6aD1lIGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yPyhjPWUsZD1uZXcgZi5kZWZhdWx0LlZlY3Rvcih0LHIsbiksbmV3IGYuZGVmYXVsdC5WZWN0b3IoYSxvLGkpKTpuIGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3Rvcj8oYz10aGlzLmNvbG9yKGUsdCxyKSxkPW4sbmV3IGYuZGVmYXVsdC5WZWN0b3IoYSxvLGkpKTooYz10aGlzLmNvbG9yKGUsdCxyKSxkPW5ldyBmLmRlZmF1bHQuVmVjdG9yKG4sYSxvKSxpKTticmVhaztjYXNlIDY6biBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3ImJmEgaW5zdGFuY2VvZiBmLmRlZmF1bHQuVmVjdG9yPyhjPXRoaXMuY29sb3IoZSx0LHIpLGQ9bixoPWEscD1vKTplIGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yJiZhIGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3Rvcj8oYz1lLGQ9bmV3IGYuZGVmYXVsdC5WZWN0b3IodCxyLG4pLGg9YSxwPW8pOmUgaW5zdGFuY2VvZiBmLmRlZmF1bHQuQ29sb3ImJnQgaW5zdGFuY2VvZiBmLmRlZmF1bHQuVmVjdG9yJiYoYz1lLGQ9dCxoPW5ldyBmLmRlZmF1bHQuVmVjdG9yKHIsbixhKSxwPW8pO2JyZWFrO2Nhc2UgNTplIGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yJiZ0IGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3RvciYmciBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3I/KGM9ZSxkPXQsaD1yLHA9bix1PWEpOm4gaW5zdGFuY2VvZiBmLmRlZmF1bHQuVmVjdG9yJiZhIGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3Rvcj8oYz10aGlzLmNvbG9yKGUsdCxyKSxkPW4saD1hKTplIGluc3RhbmNlb2YgZi5kZWZhdWx0LkNvbG9yJiZhIGluc3RhbmNlb2YgZi5kZWZhdWx0LlZlY3Rvcj8oYz1lLGQ9bmV3IGYuZGVmYXVsdC5WZWN0b3IodCxyLG4pLGg9YSk6ZSBpbnN0YW5jZW9mIGYuZGVmYXVsdC5Db2xvciYmdCBpbnN0YW5jZW9mIGYuZGVmYXVsdC5WZWN0b3ImJihjPWUsZD10LGg9bmV3IGYuZGVmYXVsdC5WZWN0b3IocixuLGEpKTticmVhaztjYXNlIDQ6Yz1lLGQ9dCxoPXIscD1uO2JyZWFrO2Nhc2UgMzpjPWUsZD10LGg9cjticmVhaztkZWZhdWx0OnJldHVybiBjb25zb2xlLndhcm4oXCJTb3JyeSwgaW5wdXQgZm9yIHNwb3RsaWdodCgpIGlzIG5vdCBpbiBwcmVzY3JpYmVkIGZvcm1hdC4gVG9vIFwiLmNvbmNhdChtPDM/XCJmZXdcIjpcIm1hbnlcIixcIiBhcmd1bWVudHMgd2VyZSBwcm92aWRlZFwiKSksdGhpc31yZXR1cm4gdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycy5wdXNoKGMuX2FycmF5WzBdLGMuX2FycmF5WzFdLGMuX2FycmF5WzJdKSxBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzLl9yZW5kZXJlci5zcG90TGlnaHRTcGVjdWxhckNvbG9ycyx0aGlzLl9yZW5kZXJlci5zcGVjdWxhckNvbG9ycyksdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0UG9zaXRpb25zLnB1c2goZC54LGQueSxkLnopLGgubm9ybWFsaXplKCksdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0RGlyZWN0aW9ucy5wdXNoKGgueCxoLnksaC56KSx2b2lkIDA9PT1wJiYocD1NYXRoLlBJLzMpLHZvaWQgMCE9PXUmJnU8MT8odT0xLGNvbnNvbGUud2FybihcIlZhbHVlIG9mIGNvbmNlbnRyYXRpb24gbmVlZHMgdG8gYmUgZ3JlYXRlciB0aGFuIDEuIFNldHRpbmcgaXQgdG8gMVwiKSk6dm9pZCAwPT09dSYmKHU9MTAwKSxwPXRoaXMuX3JlbmRlcmVyLl9wSW5zdC5fdG9SYWRpYW5zKHApLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodEFuZ2xlLnB1c2goTWF0aC5jb3MocCkpLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodENvbmMucHVzaCh1KSx0aGlzLl9yZW5kZXJlci5fZW5hYmxlTGlnaHRpbmc9ITAsdGhpc30sZi5kZWZhdWx0LnByb3RvdHlwZS5ub0xpZ2h0cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcIm5vTGlnaHRzXCIpLGYuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibm9MaWdodHNcIixhcmd1bWVudHMpLHRoaXMuX3JlbmRlcmVyLl9lbmFibGVMaWdodGluZz0hMSx0aGlzLl9yZW5kZXJlci5hbWJpZW50TGlnaHRDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuc3BlY3VsYXJDb2xvcnM9WzEsMSwxXSx0aGlzLl9yZW5kZXJlci5kaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9ucy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5kaXJlY3Rpb25hbExpZ2h0RGlmZnVzZUNvbG9ycy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5kaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIucG9pbnRMaWdodFBvc2l0aW9ucy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5wb2ludExpZ2h0RGlmZnVzZUNvbG9ycy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0UG9zaXRpb25zLmxlbmd0aD0wLHRoaXMuX3JlbmRlcmVyLnNwb3RMaWdodERpcmVjdGlvbnMubGVuZ3RoPTAsdGhpcy5fcmVuZGVyZXIuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5zcG90TGlnaHRTcGVjdWxhckNvbG9ycy5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5zcG90TGlnaHRBbmdsZS5sZW5ndGg9MCx0aGlzLl9yZW5kZXJlci5zcG90TGlnaHRDb25jLmxlbmd0aD0wLHRoaXMuX3JlbmRlcmVyLmNvbnN0YW50QXR0ZW51YXRpb249MSx0aGlzLl9yZW5kZXJlci5saW5lYXJBdHRlbnVhdGlvbj0wLHRoaXMuX3JlbmRlcmVyLnF1YWRyYXRpY0F0dGVudWF0aW9uPTAsdGhpcy5fcmVuZGVyZXIuX3VzZVNoaW5pbmVzcz0xLHRoaXN9O3ZhciBhPWYuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9tYWluXCI6MzJ9XSw3ODpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sdz0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07ZnVuY3Rpb24gcyhlLHQscil7Zm9yKHZhciBuPTAsYT1lLmxlbmd0aDtuPGE7bisrKWlmKGVbbl0hPT10LmdldFVpbnQ4KHIrbiwhMSkpcmV0dXJuITE7cmV0dXJuITB9ZShcIi4vcDUuR2VvbWV0cnlcIiksdy5kZWZhdWx0LnByb3RvdHlwZS5sb2FkTW9kZWw9ZnVuY3Rpb24oZSl7dmFyIHQscixuO3cuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibG9hZE1vZGVsXCIsYXJndW1lbnRzKTt2YXIgYT1lLnNsaWNlKC00KTtcImJvb2xlYW5cIj09dHlwZW9mIGFyZ3VtZW50c1sxXT8odD1hcmd1bWVudHNbMV0scj1hcmd1bWVudHNbMl0sbj1hcmd1bWVudHNbM10sdm9pZCAwIT09YXJndW1lbnRzWzRdJiYoYT1hcmd1bWVudHNbNF0pKToodD0hMSxyPWFyZ3VtZW50c1sxXSxuPWFyZ3VtZW50c1syXSx2b2lkIDAhPT1hcmd1bWVudHNbM10mJihhPWFyZ3VtZW50c1szXSkpO3ZhciBvPW5ldyB3LmRlZmF1bHQuR2VvbWV0cnk7by5naWQ9XCJcIi5jb25jYXQoZSxcInxcIikuY29uY2F0KHQpO3ZhciBpPXRoaXM7cmV0dXJuIGEubWF0Y2goL1xcLnN0bCQvaSk/dGhpcy5odHRwRG8oZSxcIkdFVFwiLFwiYXJyYXlCdWZmZXJcIixmdW5jdGlvbihlKXshZnVuY3Rpb24oZSx0KXtpZihmdW5jdGlvbihlKXtmb3IodmFyIHQ9bmV3IERhdGFWaWV3KGUpLHI9WzExNSwxMTEsMTA4LDEwNSwxMDBdLG49MDtuPDU7bisrKWlmKHMocix0LG4pKXJldHVybiExO3JldHVybiEwfSh0KSkhZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIsbixhLG8saSxzLGwscD1uZXcgRGF0YVZpZXcodCksdT1wLmdldFVpbnQzMig4MCwhMCksYz0hMSxkPTA7ZDw3MDtkKyspMTEyOTI3MDM1MT09PXAuZ2V0VWludDMyKGQsITEpJiY4Mj09PXAuZ2V0VWludDgoZCs0KSYmNjE9PT1wLmdldFVpbnQ4KGQrNSkmJihjPSEwLG89W10saT1wLmdldFVpbnQ4KGQrNikvMjU1LHM9cC5nZXRVaW50OChkKzcpLzI1NSxsPXAuZ2V0VWludDgoZCs4KS8yNTUpO2Zvcih2YXIgaD0wO2g8dTtoKyspe3ZhciBtPTg0KzUwKmgsZj1wLmdldEZsb2F0MzIobSwhMCkseT1wLmdldEZsb2F0MzIoNCttLCEwKSxnPXAuZ2V0RmxvYXQzMig4K20sITApO2lmKGMpe3ZhciB2PXAuZ2V0VWludDE2KDQ4K20sITApO2E9MD09KDMyNzY4JnYpPyhyPSgzMSZ2KS8zMSxuPSh2Pj41JjMxKS8zMSwodj4+MTAmMzEpLzMxKToocj1pLG49cyxsKX1mb3IodmFyIGI9bmV3IHcuZGVmYXVsdC5WZWN0b3IoZix5LGcpLF89MTtfPD0zO18rKyl7dmFyIHg9bSsxMipfLFM9bmV3IHcuZGVmYXVsdC5WZWN0b3IocC5nZXRGbG9hdDMyKHgsITApLHAuZ2V0RmxvYXQzMig0K3gsITApLHAuZ2V0RmxvYXQzMig4K3gsITApKTtlLnZlcnRpY2VzLnB1c2goUyksZS52ZXJ0ZXhOb3JtYWxzLnB1c2goYiksYyYmby5wdXNoKHIsbixhKX1lLmZhY2VzLnB1c2goWzMqaCwzKmgrMSwzKmgrMl0pLGUudXZzLnB1c2goWzAsMF0sWzAsMF0sWzAsMF0pfX0oZSx0KTtlbHNle3ZhciByPW5ldyBEYXRhVmlldyh0KTtpZighKFwiVGV4dERlY29kZXJcImluIHdpbmRvdykpcmV0dXJuIGNvbnNvbGUud2FybihcIlNvcnJ5LCBBU0NJSSBTVEwgbG9hZGluZyBvbmx5IHdvcmtzIGluIGJyb3dzZXJzIHRoYXQgc3VwcG9ydCBUZXh0RGVjb2RlciAoaHR0cHM6Ly9jYW5pdXNlLmNvbS8jZmVhdD10ZXh0ZW5jb2RlcilcIik7dmFyIG49bmV3IFRleHREZWNvZGVyKFwidXRmLThcIikuZGVjb2RlKHIpLnNwbGl0KFwiXFxuXCIpOyFmdW5jdGlvbihlLHQpe2Zvcih2YXIgcixuLGE9XCJcIixvPVtdLGk9MDtpPHQubGVuZ3RoOysraSl7Zm9yKHZhciBzPXRbaV0udHJpbSgpLGw9cy5zcGxpdChcIiBcIikscD0wO3A8bC5sZW5ndGg7KytwKVwiXCI9PT1sW3BdJiZsLnNwbGljZShwLDEpO2lmKDAhPT1sLmxlbmd0aClzd2l0Y2goYSl7Y2FzZVwiXCI6aWYoXCJzb2xpZFwiIT09bFswXSlyZXR1cm4gY29uc29sZS5lcnJvcihzKSxjb25zb2xlLmVycm9yKCdJbnZhbGlkIHN0YXRlIFwiJy5jb25jYXQobFswXSwnXCIsIHNob3VsZCBiZSBcInNvbGlkXCInKSk7YT1cInNvbGlkXCI7YnJlYWs7Y2FzZVwic29saWRcIjppZihcImZhY2V0XCIhPT1sWzBdfHxcIm5vcm1hbFwiIT09bFsxXSlyZXR1cm4gY29uc29sZS5lcnJvcihzKSxjb25zb2xlLmVycm9yKCdJbnZhbGlkIHN0YXRlIFwiJy5jb25jYXQobFswXSwnXCIsIHNob3VsZCBiZSBcImZhY2V0IG5vcm1hbFwiJykpO3I9bmV3IHcuZGVmYXVsdC5WZWN0b3IocGFyc2VGbG9hdChsWzJdKSxwYXJzZUZsb2F0KGxbM10pLHBhcnNlRmxvYXQobFs0XSkpLGUudmVydGV4Tm9ybWFscy5wdXNoKHIscixyKSxhPVwiZmFjZXQgbm9ybWFsXCI7YnJlYWs7Y2FzZVwiZmFjZXQgbm9ybWFsXCI6aWYoXCJvdXRlclwiIT09bFswXXx8XCJsb29wXCIhPT1sWzFdKXJldHVybiBjb25zb2xlLmVycm9yKHMpLGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc3RhdGUgXCInLmNvbmNhdChsWzBdLCdcIiwgc2hvdWxkIGJlIFwib3V0ZXIgbG9vcFwiJykpO2E9XCJ2ZXJ0ZXhcIjticmVhaztjYXNlXCJ2ZXJ0ZXhcIjppZihcInZlcnRleFwiPT09bFswXSluPW5ldyB3LmRlZmF1bHQuVmVjdG9yKHBhcnNlRmxvYXQobFsxXSkscGFyc2VGbG9hdChsWzJdKSxwYXJzZUZsb2F0KGxbM10pKSxlLnZlcnRpY2VzLnB1c2gobiksZS51dnMucHVzaChbMCwwXSksby5wdXNoKGUudmVydGljZXMuaW5kZXhPZihuKSk7ZWxzZXtpZihcImVuZGxvb3BcIiE9PWxbMF0pcmV0dXJuIGNvbnNvbGUuZXJyb3IocyksY29uc29sZS5lcnJvcignSW52YWxpZCBzdGF0ZSBcIicuY29uY2F0KGxbMF0sJ1wiLCBzaG91bGQgYmUgXCJ2ZXJ0ZXhcIiBvciBcImVuZGxvb3BcIicpKTtlLmZhY2VzLnB1c2gobyksbz1bXSxhPVwiZW5kbG9vcFwifWJyZWFrO2Nhc2VcImVuZGxvb3BcIjppZihcImVuZGZhY2V0XCIhPT1sWzBdKXJldHVybiBjb25zb2xlLmVycm9yKHMpLGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc3RhdGUgXCInLmNvbmNhdChsWzBdLCdcIiwgc2hvdWxkIGJlIFwiZW5kZmFjZXRcIicpKTthPVwiZW5kZmFjZXRcIjticmVhaztjYXNlXCJlbmRmYWNldFwiOmlmKFwiZW5kc29saWRcIiE9PWxbMF0pe2lmKFwiZmFjZXRcIiE9PWxbMF18fFwibm9ybWFsXCIhPT1sWzFdKXJldHVybiBjb25zb2xlLmVycm9yKHMpLGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgc3RhdGUgXCInLmNvbmNhdChsWzBdLCdcIiwgc2hvdWxkIGJlIFwiZW5kc29saWRcIiBvciBcImZhY2V0IG5vcm1hbFwiJykpO3I9bmV3IHcuZGVmYXVsdC5WZWN0b3IocGFyc2VGbG9hdChsWzJdKSxwYXJzZUZsb2F0KGxbM10pLHBhcnNlRmxvYXQobFs0XSkpLGUudmVydGV4Tm9ybWFscy5wdXNoKHIscixyKSxhPVwiZmFjZXQgbm9ybWFsXCJ9YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKCdJbnZhbGlkIHN0YXRlIFwiJy5jb25jYXQoYSwnXCInKSl9fX0oZSxuKX19KG8sZSksdCYmby5ub3JtYWxpemUoKSxpLl9kZWNyZW1lbnRQcmVsb2FkKCksXCJmdW5jdGlvblwiPT10eXBlb2YgciYmcihvKX0sbik6YS5tYXRjaCgvXFwub2JqJC9pKT90aGlzLmxvYWRTdHJpbmdzKGUsZnVuY3Rpb24oZSl7IWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXt2OltdLHZ0OltdLHZuOltdfSxuPXt9LGE9MDthPHQubGVuZ3RoOysrYSl7dmFyIG89dFthXS50cmltKCkuc3BsaXQoL1xcYlxccysvKTtpZigwPG8ubGVuZ3RoKWlmKFwidlwiPT09b1swXXx8XCJ2blwiPT09b1swXSl7dmFyIGk9bmV3IHcuZGVmYXVsdC5WZWN0b3IocGFyc2VGbG9hdChvWzFdKSxwYXJzZUZsb2F0KG9bMl0pLHBhcnNlRmxvYXQob1szXSkpO3Jbb1swXV0ucHVzaChpKX1lbHNlIGlmKFwidnRcIj09PW9bMF0pe3ZhciBzPVtwYXJzZUZsb2F0KG9bMV0pLHBhcnNlRmxvYXQob1syXSldO3Jbb1swXV0ucHVzaChzKX1lbHNlIGlmKFwiZlwiPT09b1swXSlmb3IodmFyIGw9MztsPG8ubGVuZ3RoOysrbCl7Zm9yKHZhciBwPVtdLHU9WzEsbC0xLGxdLGM9MDtjPHUubGVuZ3RoOysrYyl7dmFyIGQ9b1t1W2NdXSxoPTA7aWYodm9pZCAwIT09bltkXSloPW5bZF07ZWxzZXtmb3IodmFyIG09ZC5zcGxpdChcIi9cIiksZj0wO2Y8bS5sZW5ndGg7ZisrKW1bZl09cGFyc2VJbnQobVtmXSktMTtoPW5bZF09ZS52ZXJ0aWNlcy5sZW5ndGgsZS52ZXJ0aWNlcy5wdXNoKHIudlttWzBdXS5jb3B5KCkpLHIudnRbbVsxXV0/ZS51dnMucHVzaChyLnZ0W21bMV1dLnNsaWNlKCkpOmUudXZzLnB1c2goWzAsMF0pLHIudm5bbVsyXV0mJmUudmVydGV4Tm9ybWFscy5wdXNoKHIudm5bbVsyXV0uY29weSgpKX1wLnB1c2goaCl9cFswXSE9PXBbMV0mJnBbMF0hPT1wWzJdJiZwWzFdIT09cFsyXSYmZS5mYWNlcy5wdXNoKHApfX0wPT09ZS52ZXJ0ZXhOb3JtYWxzLmxlbmd0aCYmZS5jb21wdXRlTm9ybWFscygpfShvLGUpLHQmJm8ubm9ybWFsaXplKCksaS5fZGVjcmVtZW50UHJlbG9hZCgpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHImJnIobyl9LG4pOih3LmRlZmF1bHQuX2ZyaWVuZGx5RmlsZUxvYWRFcnJvcigzLGUpLG4/bigpOmNvbnNvbGUuZXJyb3IoXCJTb3JyeSwgdGhlIGZpbGUgdHlwZSBpcyBpbnZhbGlkLiBPbmx5IE9CSiBhbmQgU1RMIGZpbGVzIGFyZSBzdXBwb3J0ZWQuXCIpKSxvfSx3LmRlZmF1bHQucHJvdG90eXBlLm1vZGVsPWZ1bmN0aW9uKGUpe3RoaXMuX2Fzc2VydDNkKFwibW9kZWxcIiksdy5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJtb2RlbFwiLGFyZ3VtZW50cyksMDxlLnZlcnRpY2VzLmxlbmd0aCYmKHRoaXMuX3JlbmRlcmVyLmdlb21ldHJ5SW5IYXNoKGUuZ2lkKXx8KGUuX21ha2VUcmlhbmdsZUVkZ2VzKCkuX2VkZ2VzVG9WZXJ0aWNlcygpLHRoaXMuX3JlbmRlcmVyLmNyZWF0ZUJ1ZmZlcnMoZS5naWQsZSkpLHRoaXMuX3JlbmRlcmVyLmRyYXdCdWZmZXJzKGUuZ2lkKSl9O3ZhciBhPXcuZGVmYXVsdDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9tYWluXCI6MzIsXCIuL3A1Lkdlb21ldHJ5XCI6ODF9XSw3OTpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4scD0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sYT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWUoXCIuL3A1LlRleHR1cmVcIikscC5kZWZhdWx0LnByb3RvdHlwZS5sb2FkU2hhZGVyPWZ1bmN0aW9uKGUsdCxyLG4pe3AuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwibG9hZFNoYWRlclwiLGFyZ3VtZW50cyksbj1ufHxjb25zb2xlLmVycm9yO2Z1bmN0aW9uIGEoKXtpLl9kZWNyZW1lbnRQcmVsb2FkKCksciYmcihvKX12YXIgbz1uZXcgcC5kZWZhdWx0LlNoYWRlcixpPXRoaXMscz0hMSxsPSExO3JldHVybiB0aGlzLmxvYWRTdHJpbmdzKGUsZnVuY3Rpb24oZSl7by5fdmVydFNyYz1lLmpvaW4oXCJcXG5cIiksbD0hMCxzJiZhKCl9LG4pLHRoaXMubG9hZFN0cmluZ3ModCxmdW5jdGlvbihlKXtvLl9mcmFnU3JjPWUuam9pbihcIlxcblwiKSxzPSEwLGwmJmEoKX0sbiksb30scC5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVTaGFkZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJjcmVhdGVTaGFkZXJcIikscC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJjcmVhdGVTaGFkZXJcIixhcmd1bWVudHMpLG5ldyBwLmRlZmF1bHQuU2hhZGVyKHRoaXMuX3JlbmRlcmVyLGUsdCl9LHAuZGVmYXVsdC5wcm90b3R5cGUuc2hhZGVyPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9hc3NlcnQzZChcInNoYWRlclwiKSxwLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInNoYWRlclwiLGFyZ3VtZW50cyksdm9pZCAwPT09ZS5fcmVuZGVyZXImJihlLl9yZW5kZXJlcj10aGlzLl9yZW5kZXJlciksZS5pc1N0cm9rZVNoYWRlcigpP3RoaXMuX3JlbmRlcmVyLnVzZXJTdHJva2VTaGFkZXI9ZToodGhpcy5fcmVuZGVyZXIudXNlckZpbGxTaGFkZXI9ZSx0aGlzLl9yZW5kZXJlci5fdXNlTm9ybWFsTWF0ZXJpYWw9ITEpLGUuaW5pdCgpLHRoaXN9LHAuZGVmYXVsdC5wcm90b3R5cGUucmVzZXRTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyZXIudXNlckZpbGxTaGFkZXI9dGhpcy5fcmVuZGVyZXIudXNlclN0cm9rZVNoYWRlcj1udWxsLHRoaXN9LHAuZGVmYXVsdC5wcm90b3R5cGUubm9ybWFsTWF0ZXJpYWw9ZnVuY3Rpb24oKXt0aGlzLl9hc3NlcnQzZChcIm5vcm1hbE1hdGVyaWFsXCIpO2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKXRbcl09YXJndW1lbnRzW3JdO3JldHVybiBwLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcIm5vcm1hbE1hdGVyaWFsXCIsdCksdGhpcy5fcmVuZGVyZXIuZHJhd01vZGU9YS5GSUxMLHRoaXMuX3JlbmRlcmVyLl91c2VTcGVjdWxhck1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl91c2VFbWlzc2l2ZU1hdGVyaWFsPSExLHRoaXMuX3JlbmRlcmVyLl91c2VOb3JtYWxNYXRlcmlhbD0hMCx0aGlzLl9yZW5kZXJlci5jdXJGaWxsQ29sb3I9WzEsMSwxLDFdLHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9kb0ZpbGxcIiwhMCksdGhpcy5ub1N0cm9rZSgpLHRoaXN9LHAuZGVmYXVsdC5wcm90b3R5cGUudGV4dHVyZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJ0ZXh0dXJlXCIpLHAuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwidGV4dHVyZVwiLGFyZ3VtZW50cyksZS5naWZQcm9wZXJ0aWVzJiZlLl9hbmltYXRlR2lmKHRoaXMpLHRoaXMuX3JlbmRlcmVyLmRyYXdNb2RlPWEuVEVYVFVSRSx0aGlzLl9yZW5kZXJlci5fdXNlU3BlY3VsYXJNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdXNlRW1pc3NpdmVNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdXNlTm9ybWFsTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX3RleD1lLHRoaXMuX3JlbmRlcmVyLl9zZXRQcm9wZXJ0eShcIl9kb0ZpbGxcIiwhMCksdGhpc30scC5kZWZhdWx0LnByb3RvdHlwZS50ZXh0dXJlTW9kZT1mdW5jdGlvbihlKXtlIT09YS5JTUFHRSYmZSE9PWEuTk9STUFMP2NvbnNvbGUud2FybihcIllvdSB0cmllZCB0byBzZXQgXCIuY29uY2F0KGUsXCIgdGV4dHVyZU1vZGUgb25seSBzdXBwb3J0cyBJTUFHRSAmIE5PUk1BTCBcIikpOnRoaXMuX3JlbmRlcmVyLnRleHR1cmVNb2RlPWV9LHAuZGVmYXVsdC5wcm90b3R5cGUudGV4dHVyZVdyYXA9ZnVuY3Rpb24oZSl7dmFyIHQ9MTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOmU7dGhpcy5fcmVuZGVyZXIudGV4dHVyZVdyYXBYPWUsdGhpcy5fcmVuZGVyZXIudGV4dHVyZVdyYXBZPXQ7Zm9yKHZhciByPXRoaXMuX3JlbmRlcmVyLnRleHR1cmVzLG49MDtuPHIubGVuZ3RoO24rKylyW25dLnNldFdyYXBNb2RlKGUsdCl9LHAuZGVmYXVsdC5wcm90b3R5cGUuYW1iaWVudE1hdGVyaWFsPWZ1bmN0aW9uKGUsdCxyKXt0aGlzLl9hc3NlcnQzZChcImFtYmllbnRNYXRlcmlhbFwiKSxwLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImFtYmllbnRNYXRlcmlhbFwiLGFyZ3VtZW50cyk7dmFyIG49cC5kZWZhdWx0LnByb3RvdHlwZS5jb2xvci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmN1ckZpbGxDb2xvcj1uLl9hcnJheSx0aGlzLl9yZW5kZXJlci5fdXNlU3BlY3VsYXJNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdXNlRW1pc3NpdmVNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdXNlTm9ybWFsTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXMuX3JlbmRlcmVyLl90ZXg9bnVsbCx0aGlzfSxwLmRlZmF1bHQucHJvdG90eXBlLmVtaXNzaXZlTWF0ZXJpYWw9ZnVuY3Rpb24oZSx0LHIsbil7dGhpcy5fYXNzZXJ0M2QoXCJlbWlzc2l2ZU1hdGVyaWFsXCIpLHAuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwiZW1pc3NpdmVNYXRlcmlhbFwiLGFyZ3VtZW50cyk7dmFyIGE9cC5kZWZhdWx0LnByb3RvdHlwZS5jb2xvci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmN1ckZpbGxDb2xvcj1hLl9hcnJheSx0aGlzLl9yZW5kZXJlci5fdXNlU3BlY3VsYXJNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdXNlRW1pc3NpdmVNYXRlcmlhbD0hMCx0aGlzLl9yZW5kZXJlci5fdXNlTm9ybWFsTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXMuX3JlbmRlcmVyLl90ZXg9bnVsbCx0aGlzfSxwLmRlZmF1bHQucHJvdG90eXBlLnNwZWN1bGFyTWF0ZXJpYWw9ZnVuY3Rpb24oZSx0LHIsbil7dGhpcy5fYXNzZXJ0M2QoXCJzcGVjdWxhck1hdGVyaWFsXCIpLHAuZGVmYXVsdC5fdmFsaWRhdGVQYXJhbWV0ZXJzKFwic3BlY3VsYXJNYXRlcmlhbFwiLGFyZ3VtZW50cyk7dmFyIGE9cC5kZWZhdWx0LnByb3RvdHlwZS5jb2xvci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmN1ckZpbGxDb2xvcj1hLl9hcnJheSx0aGlzLl9yZW5kZXJlci5fdXNlU3BlY3VsYXJNYXRlcmlhbD0hMCx0aGlzLl9yZW5kZXJlci5fdXNlRW1pc3NpdmVNYXRlcmlhbD0hMSx0aGlzLl9yZW5kZXJlci5fdXNlTm9ybWFsTWF0ZXJpYWw9ITEsdGhpcy5fcmVuZGVyZXIuX2VuYWJsZUxpZ2h0aW5nPSEwLHRoaXMuX3JlbmRlcmVyLl90ZXg9bnVsbCx0aGlzfSxwLmRlZmF1bHQucHJvdG90eXBlLnNoaW5pbmVzcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fYXNzZXJ0M2QoXCJzaGluaW5lc3NcIikscC5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJzaGluaW5lc3NcIixhcmd1bWVudHMpLGU8MSYmKGU9MSksdGhpcy5fcmVuZGVyZXIuX3VzZVNoaW5pbmVzcz1lLHRoaXN9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fYXBwbHlDb2xvckJsZW5kPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuR0wscj10aGlzLmRyYXdNb2RlPT09YS5URVhUVVJFfHxlW2UubGVuZ3RoLTFdPDF8fHRoaXMuX2lzRXJhc2luZztyZXR1cm4gciE9PXRoaXMuX2lzQmxlbmRpbmcmJihyfHx0aGlzLmN1ckJsZW5kTW9kZSE9PWEuQkxFTkQmJnRoaXMuY3VyQmxlbmRNb2RlIT09YS5BREQ/dC5lbmFibGUodC5CTEVORCk6dC5kaXNhYmxlKHQuQkxFTkQpLHQuZGVwdGhNYXNrKCEwKSx0aGlzLl9pc0JsZW5kaW5nPXIpLHRoaXMuX2FwcGx5QmxlbmRNb2RlKCksZX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9hcHBseUJsZW5kTW9kZT1mdW5jdGlvbigpe2lmKHRoaXMuX2NhY2hlZEJsZW5kTW9kZSE9PXRoaXMuY3VyQmxlbmRNb2RlKXt2YXIgZT10aGlzLkdMO3N3aXRjaCh0aGlzLmN1ckJsZW5kTW9kZSl7Y2FzZSBhLkJMRU5EOmNhc2UgYS5BREQ6ZS5ibGVuZEVxdWF0aW9uKGUuRlVOQ19BREQpLGUuYmxlbmRGdW5jKGUuU1JDX0FMUEhBLGUuT05FX01JTlVTX1NSQ19BTFBIQSk7YnJlYWs7Y2FzZSBhLlJFTU9WRTplLmJsZW5kRXF1YXRpb24oZS5GVU5DX1JFVkVSU0VfU1VCVFJBQ1QpLGUuYmxlbmRGdW5jKGUuU1JDX0FMUEhBLGUuRFNUX0FMUEhBKTticmVhaztjYXNlIGEuTVVMVElQTFk6ZS5ibGVuZEVxdWF0aW9uU2VwYXJhdGUoZS5GVU5DX0FERCxlLkZVTkNfQUREKSxlLmJsZW5kRnVuY1NlcGFyYXRlKGUuWkVSTyxlLlNSQ19DT0xPUixlLk9ORSxlLk9ORSk7YnJlYWs7Y2FzZSBhLlNDUkVFTjplLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShlLkZVTkNfQURELGUuRlVOQ19BREQpLGUuYmxlbmRGdW5jU2VwYXJhdGUoZS5PTkVfTUlOVVNfRFNUX0NPTE9SLGUuT05FLGUuT05FLGUuT05FKTticmVhaztjYXNlIGEuRVhDTFVTSU9OOmUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKGUuRlVOQ19BREQsZS5GVU5DX0FERCksZS5ibGVuZEZ1bmNTZXBhcmF0ZShlLk9ORV9NSU5VU19EU1RfQ09MT1IsZS5PTkVfTUlOVVNfU1JDX0NPTE9SLGUuT05FLGUuT05FKTticmVhaztjYXNlIGEuUkVQTEFDRTplLmJsZW5kRXF1YXRpb24oZS5GVU5DX0FERCksZS5ibGVuZEZ1bmMoZS5PTkUsZS5aRVJPKTticmVhaztjYXNlIGEuU1VCVFJBQ1Q6ZS5ibGVuZEVxdWF0aW9uU2VwYXJhdGUoZS5GVU5DX1JFVkVSU0VfU1VCVFJBQ1QsZS5GVU5DX0FERCksZS5ibGVuZEZ1bmNTZXBhcmF0ZShlLlNSQ19BTFBIQSxlLk9ORSxlLk9ORSxlLk9ORSk7YnJlYWs7Y2FzZSBhLkRBUktFU1Q6dGhpcy5ibGVuZEV4dD8oZS5ibGVuZEVxdWF0aW9uU2VwYXJhdGUodGhpcy5ibGVuZEV4dC5NSU5fRVhULGUuRlVOQ19BREQpLGUuYmxlbmRGdW5jU2VwYXJhdGUoZS5PTkUsZS5PTkUsZS5PTkUsZS5PTkUpKTpjb25zb2xlLndhcm4oXCJibGVuZE1vZGUoREFSS0VTVCkgZG9lcyBub3Qgd29yayBpbiB5b3VyIGJyb3dzZXIgaW4gV0VCR0wgbW9kZS5cIik7YnJlYWs7Y2FzZSBhLkxJR0hURVNUOnRoaXMuYmxlbmRFeHQ/KGUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKHRoaXMuYmxlbmRFeHQuTUFYX0VYVCxlLkZVTkNfQUREKSxlLmJsZW5kRnVuY1NlcGFyYXRlKGUuT05FLGUuT05FLGUuT05FLGUuT05FKSk6Y29uc29sZS53YXJuKFwiYmxlbmRNb2RlKExJR0hURVNUKSBkb2VzIG5vdCB3b3JrIGluIHlvdXIgYnJvd3NlciBpbiBXRUJHTCBtb2RlLlwiKTticmVhaztkZWZhdWx0OmNvbnNvbGUuZXJyb3IoXCJPb3BzISBTb21laG93IFJlbmRlcmVyR0wgc2V0IGN1ckJsZW5kTW9kZSB0byBhbiB1bnN1cHBvcnRlZCBtb2RlLlwiKX10aGlzLl9pc0VyYXNpbmd8fCh0aGlzLl9jYWNoZWRCbGVuZE1vZGU9dGhpcy5jdXJCbGVuZE1vZGUpfX07dmFyIG89cC5kZWZhdWx0O3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzIsXCIuL3A1LlRleHR1cmVcIjo4OH1dLDgwOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixmPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtmLmRlZmF1bHQucHJvdG90eXBlLmNhbWVyYT1mdW5jdGlvbigpe3ZhciBlO3RoaXMuX2Fzc2VydDNkKFwiY2FtZXJhXCIpO2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09YXJndW1lbnRzW25dO3JldHVybiBmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImNhbWVyYVwiLHIpLChlPXRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEpLmNhbWVyYS5hcHBseShlLHIpLHRoaXN9LGYuZGVmYXVsdC5wcm90b3R5cGUucGVyc3BlY3RpdmU9ZnVuY3Rpb24oKXt2YXIgZTt0aGlzLl9hc3NlcnQzZChcInBlcnNwZWN0aXZlXCIpO2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09YXJndW1lbnRzW25dO3JldHVybiBmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcInBlcnNwZWN0aXZlXCIsciksKGU9dGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYSkucGVyc3BlY3RpdmUuYXBwbHkoZSxyKSx0aGlzfSxmLmRlZmF1bHQucHJvdG90eXBlLm9ydGhvPWZ1bmN0aW9uKCl7dmFyIGU7dGhpcy5fYXNzZXJ0M2QoXCJvcnRob1wiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gZi5kZWZhdWx0Ll92YWxpZGF0ZVBhcmFtZXRlcnMoXCJvcnRob1wiLHIpLChlPXRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEpLm9ydGhvLmFwcGx5KGUsciksdGhpc30sZi5kZWZhdWx0LnByb3RvdHlwZS5mcnVzdHVtPWZ1bmN0aW9uKCl7dmFyIGU7dGhpcy5fYXNzZXJ0M2QoXCJmcnVzdHVtXCIpO2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09YXJndW1lbnRzW25dO3JldHVybiBmLmRlZmF1bHQuX3ZhbGlkYXRlUGFyYW1ldGVycyhcImZydXN0dW1cIixyKSwoZT10aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhKS5mcnVzdHVtLmFwcGx5KGUsciksdGhpc30sZi5kZWZhdWx0LnByb3RvdHlwZS5jcmVhdGVDYW1lcmE9ZnVuY3Rpb24oKXt0aGlzLl9hc3NlcnQzZChcImNyZWF0ZUNhbWVyYVwiKTt2YXIgZT1uZXcgZi5kZWZhdWx0LkNhbWVyYSh0aGlzLl9yZW5kZXJlcik7cmV0dXJuIGUuX2NvbXB1dGVDYW1lcmFEZWZhdWx0U2V0dGluZ3MoKSxlLl9zZXREZWZhdWx0Q2FtZXJhKCksdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYT1lfSxmLmRlZmF1bHQuQ2FtZXJhPWZ1bmN0aW9uKGUpe3RoaXMuX3JlbmRlcmVyPWUsdGhpcy5jYW1lcmFUeXBlPVwiZGVmYXVsdFwiLHRoaXMuY2FtZXJhTWF0cml4PW5ldyBmLmRlZmF1bHQuTWF0cml4LHRoaXMucHJvak1hdHJpeD1uZXcgZi5kZWZhdWx0Lk1hdHJpeH0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUucGVyc3BlY3RpdmU9ZnVuY3Rpb24oZSx0LHIsbil7dGhpcy5jYW1lcmFUeXBlPTA8YXJndW1lbnRzLmxlbmd0aD9cImN1c3RvbVwiOlwiZGVmYXVsdFwiLHZvaWQgMD09PWU/KGU9dGhpcy5kZWZhdWx0Q2FtZXJhRk9WLHRoaXMuY2FtZXJhRk9WPWUpOnRoaXMuY2FtZXJhRk9WPXRoaXMuX3JlbmRlcmVyLl9wSW5zdC5fdG9SYWRpYW5zKGUpLHZvaWQgMD09PXQmJih0PXRoaXMuZGVmYXVsdEFzcGVjdFJhdGlvKSx2b2lkIDA9PT1yJiYocj10aGlzLmRlZmF1bHRDYW1lcmFOZWFyKSx2b2lkIDA9PT1uJiYobj10aGlzLmRlZmF1bHRDYW1lcmFGYXIpLHI8PTFlLTQmJihyPS4wMSxjb25zb2xlLmxvZyhcIkF2b2lkIHBlcnNwZWN0aXZlIG5lYXIgcGxhbmUgdmFsdWVzIGNsb3NlIHRvIG9yIGJlbG93IDAuIFNldHRpbmcgdmFsdWUgdG8gMC4wMS5cIikpLG48ciYmY29uc29sZS5sb2coXCJQZXJzcGVjdGl2ZSBmYXIgcGxhbmUgdmFsdWUgaXMgbGVzcyB0aGFuIG5lYXIgcGxhbmUgdmFsdWUuIE5vdGhpbmcgd2lsbCBiZSBzaG93bi5cIiksdGhpcy5hc3BlY3RSYXRpbz10LHRoaXMuY2FtZXJhTmVhcj1yLHRoaXMuY2FtZXJhRmFyPW4sdGhpcy5wcm9qTWF0cml4PWYuZGVmYXVsdC5NYXRyaXguaWRlbnRpdHkoKTt2YXIgYT0xL01hdGgudGFuKHRoaXMuY2FtZXJhRk9WLzIpLG89MS8odGhpcy5jYW1lcmFOZWFyLXRoaXMuY2FtZXJhRmFyKTt0aGlzLnByb2pNYXRyaXguc2V0KGEvdCwwLDAsMCwwLC1hLDAsMCwwLDAsKG4rcikqbywtMSwwLDAsMipuKnIqbywwKSx0aGlzLl9pc0FjdGl2ZSgpJiZ0aGlzLl9yZW5kZXJlci51UE1hdHJpeC5zZXQodGhpcy5wcm9qTWF0cml4Lm1hdDRbMF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbM10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbN10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbOF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbOV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTBdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzExXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxMl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTNdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzE0XSx0aGlzLnByb2pNYXRyaXgubWF0NFsxNV0pfSxmLmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5vcnRobz1mdW5jdGlvbihlLHQscixuLGEsbyl7dm9pZCAwPT09ZSYmKGU9LXRoaXMuX3JlbmRlcmVyLndpZHRoLzIpLHZvaWQgMD09PXQmJih0PXRoaXMuX3JlbmRlcmVyLndpZHRoLzIpLHZvaWQgMD09PXImJihyPS10aGlzLl9yZW5kZXJlci5oZWlnaHQvMiksdm9pZCAwPT09biYmKG49dGhpcy5fcmVuZGVyZXIuaGVpZ2h0LzIpLHZvaWQgMD09PWEmJihhPTApLHZvaWQgMD09PW8mJihvPU1hdGgubWF4KHRoaXMuX3JlbmRlcmVyLndpZHRoLHRoaXMuX3JlbmRlcmVyLmhlaWdodCkpO3ZhciBpPXQtZSxzPW4tcixsPW8tYSxwPTIvaSx1PTIvcyxjPS0yL2wsZD0tKHQrZSkvaSxoPS0obityKS9zLG09LShvK2EpL2w7dGhpcy5wcm9qTWF0cml4PWYuZGVmYXVsdC5NYXRyaXguaWRlbnRpdHkoKSx0aGlzLnByb2pNYXRyaXguc2V0KHAsMCwwLDAsMCwtdSwwLDAsMCwwLGMsMCxkLGgsbSwxKSx0aGlzLl9pc0FjdGl2ZSgpJiZ0aGlzLl9yZW5kZXJlci51UE1hdHJpeC5zZXQodGhpcy5wcm9qTWF0cml4Lm1hdDRbMF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbM10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbNl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbN10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbOF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbOV0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTBdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzExXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxMl0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTNdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzE0XSx0aGlzLnByb2pNYXRyaXgubWF0NFsxNV0pLHRoaXMuY2FtZXJhVHlwZT1cImN1c3RvbVwifSxmLmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5mcnVzdHVtPWZ1bmN0aW9uKGUsdCxyLG4sYSxvKXt2b2lkIDA9PT1lJiYoZT0tdGhpcy5fcmVuZGVyZXIud2lkdGgvMiksdm9pZCAwPT09dCYmKHQ9dGhpcy5fcmVuZGVyZXIud2lkdGgvMiksdm9pZCAwPT09ciYmKHI9LXRoaXMuX3JlbmRlcmVyLmhlaWdodC8yKSx2b2lkIDA9PT1uJiYobj10aGlzLl9yZW5kZXJlci5oZWlnaHQvMiksdm9pZCAwPT09YSYmKGE9MCksdm9pZCAwPT09byYmKG89TWF0aC5tYXgodGhpcy5fcmVuZGVyZXIud2lkdGgsdGhpcy5fcmVuZGVyZXIuaGVpZ2h0KSk7dmFyIGk9dC1lLHM9bi1yLGw9by1hLHA9MiphL2ksdT0yKmEvcyxjPS0yKm8qYS9sLGQ9KHQrZSkvaSxoPShuK3IpL3MsbT0tKG8rYSkvbDt0aGlzLnByb2pNYXRyaXg9Zi5kZWZhdWx0Lk1hdHJpeC5pZGVudGl0eSgpLHRoaXMucHJvak1hdHJpeC5zZXQocCwwLDAsMCwwLHUsMCwwLGQsaCxtLC0xLDAsMCxjLDApLHRoaXMuX2lzQWN0aXZlKCkmJnRoaXMuX3JlbmRlcmVyLnVQTWF0cml4LnNldCh0aGlzLnByb2pNYXRyaXgubWF0NFswXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxXSx0aGlzLnByb2pNYXRyaXgubWF0NFsyXSx0aGlzLnByb2pNYXRyaXgubWF0NFszXSx0aGlzLnByb2pNYXRyaXgubWF0NFs0XSx0aGlzLnByb2pNYXRyaXgubWF0NFs1XSx0aGlzLnByb2pNYXRyaXgubWF0NFs2XSx0aGlzLnByb2pNYXRyaXgubWF0NFs3XSx0aGlzLnByb2pNYXRyaXgubWF0NFs4XSx0aGlzLnByb2pNYXRyaXgubWF0NFs5XSx0aGlzLnByb2pNYXRyaXgubWF0NFsxMF0sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTFdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzEyXSx0aGlzLnByb2pNYXRyaXgubWF0NFsxM10sdGhpcy5wcm9qTWF0cml4Lm1hdDRbMTRdLHRoaXMucHJvak1hdHJpeC5tYXQ0WzE1XSksdGhpcy5jYW1lcmFUeXBlPVwiY3VzdG9tXCJ9LGYuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLl9yb3RhdGVWaWV3PWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhPXRoaXMuY2VudGVyWCxvPXRoaXMuY2VudGVyWSxpPXRoaXMuY2VudGVyWjthLT10aGlzLmV5ZVgsby09dGhpcy5leWVZLGktPXRoaXMuZXllWjt2YXIgcz1mLmRlZmF1bHQuTWF0cml4LmlkZW50aXR5KHRoaXMuX3JlbmRlcmVyLl9wSW5zdCk7cy5yb3RhdGUodGhpcy5fcmVuZGVyZXIuX3BJbnN0Ll90b1JhZGlhbnMoZSksdCxyLG4pO3ZhciBsPVthKnMubWF0NFswXStvKnMubWF0NFs0XStpKnMubWF0NFs4XSxhKnMubWF0NFsxXStvKnMubWF0NFs1XStpKnMubWF0NFs5XSxhKnMubWF0NFsyXStvKnMubWF0NFs2XStpKnMubWF0NFsxMF1dO2xbMF0rPXRoaXMuZXllWCxsWzFdKz10aGlzLmV5ZVksbFsyXSs9dGhpcy5leWVaLHRoaXMuY2FtZXJhKHRoaXMuZXllWCx0aGlzLmV5ZVksdGhpcy5leWVaLGxbMF0sbFsxXSxsWzJdLHRoaXMudXBYLHRoaXMudXBZLHRoaXMudXBaKX0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUucGFuPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldExvY2FsQXhlcygpO3RoaXMuX3JvdGF0ZVZpZXcoZSx0LnlbMF0sdC55WzFdLHQueVsyXSl9LGYuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLnRpbHQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2V0TG9jYWxBeGVzKCk7dGhpcy5fcm90YXRlVmlldyhlLHQueFswXSx0LnhbMV0sdC54WzJdKX0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUubG9va0F0PWZ1bmN0aW9uKGUsdCxyKXt0aGlzLmNhbWVyYSh0aGlzLmV5ZVgsdGhpcy5leWVZLHRoaXMuZXllWixlLHQscix0aGlzLnVwWCx0aGlzLnVwWSx0aGlzLnVwWil9LGYuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLmNhbWVyYT1mdW5jdGlvbihlLHQscixuLGEsbyxpLHMsbCl7dm9pZCAwPT09ZSYmKGU9dGhpcy5kZWZhdWx0RXllWCx0PXRoaXMuZGVmYXVsdEV5ZVkscj10aGlzLmRlZmF1bHRFeWVaLG49ZSxhPXQscz0xLGw9aT1vPTApLHRoaXMuZXllWD1lLHRoaXMuZXllWT10LHRoaXMuZXllWj1yLHRoaXMuY2VudGVyWD1uLHRoaXMuY2VudGVyWT1hLHRoaXMuY2VudGVyWj1vLHRoaXMudXBYPWksdGhpcy51cFk9cyx0aGlzLnVwWj1sO3ZhciBwPXRoaXMuX2dldExvY2FsQXhlcygpO3RoaXMuY2FtZXJhTWF0cml4LnNldChwLnhbMF0scC55WzBdLHAuelswXSwwLHAueFsxXSxwLnlbMV0scC56WzFdLDAscC54WzJdLHAueVsyXSxwLnpbMl0sMCwwLDAsMCwxKTt2YXIgdT0tZSxjPS10LGQ9LXI7cmV0dXJuIHRoaXMuY2FtZXJhTWF0cml4LnRyYW5zbGF0ZShbdSxjLGRdKSx0aGlzLl9pc0FjdGl2ZSgpJiZ0aGlzLl9yZW5kZXJlci51TVZNYXRyaXguc2V0KHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbMF0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxXSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzJdLHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbM10sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFs0XSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzVdLHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbNl0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFs3XSx0aGlzLmNhbWVyYU1hdHJpeC5tYXQ0WzhdLHRoaXMuY2FtZXJhTWF0cml4Lm1hdDRbOV0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxMF0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxMV0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxMl0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxM10sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxNF0sdGhpcy5jYW1lcmFNYXRyaXgubWF0NFsxNV0pLHRoaXN9LGYuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLm1vdmU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMuX2dldExvY2FsQXhlcygpLGE9W24ueFswXSplLG4ueFsxXSplLG4ueFsyXSplXSxvPVtuLnlbMF0qdCxuLnlbMV0qdCxuLnlbMl0qdF0saT1bbi56WzBdKnIsbi56WzFdKnIsbi56WzJdKnJdO3RoaXMuY2FtZXJhKHRoaXMuZXllWCthWzBdK29bMF0raVswXSx0aGlzLmV5ZVkrYVsxXStvWzFdK2lbMV0sdGhpcy5leWVaK2FbMl0rb1syXStpWzJdLHRoaXMuY2VudGVyWCthWzBdK29bMF0raVswXSx0aGlzLmNlbnRlclkrYVsxXStvWzFdK2lbMV0sdGhpcy5jZW50ZXJaK2FbMl0rb1syXStpWzJdLDAsMSwwKX0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUuc2V0UG9zaXRpb249ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWUtdGhpcy5leWVYLGE9dC10aGlzLmV5ZVksbz1yLXRoaXMuZXllWjt0aGlzLmNhbWVyYShlLHQscix0aGlzLmNlbnRlclgrbix0aGlzLmNlbnRlclkrYSx0aGlzLmNlbnRlclorbywwLDEsMCl9LGYuZGVmYXVsdC5DYW1lcmEucHJvdG90eXBlLl9jb21wdXRlQ2FtZXJhRGVmYXVsdFNldHRpbmdzPWZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0Q2FtZXJhRk9WPTYwLzE4MCpNYXRoLlBJLHRoaXMuZGVmYXVsdEFzcGVjdFJhdGlvPXRoaXMuX3JlbmRlcmVyLndpZHRoL3RoaXMuX3JlbmRlcmVyLmhlaWdodCx0aGlzLmRlZmF1bHRFeWVYPTAsdGhpcy5kZWZhdWx0RXllWT0wLHRoaXMuZGVmYXVsdEV5ZVo9dGhpcy5fcmVuZGVyZXIuaGVpZ2h0LzIvTWF0aC50YW4odGhpcy5kZWZhdWx0Q2FtZXJhRk9WLzIpLHRoaXMuZGVmYXVsdENlbnRlclg9MCx0aGlzLmRlZmF1bHRDZW50ZXJZPTAsdGhpcy5kZWZhdWx0Q2VudGVyWj0wLHRoaXMuZGVmYXVsdENhbWVyYU5lYXI9LjEqdGhpcy5kZWZhdWx0RXllWix0aGlzLmRlZmF1bHRDYW1lcmFGYXI9MTAqdGhpcy5kZWZhdWx0RXllWn0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUuX3NldERlZmF1bHRDYW1lcmE9ZnVuY3Rpb24oKXt0aGlzLmNhbWVyYUZPVj10aGlzLmRlZmF1bHRDYW1lcmFGT1YsdGhpcy5hc3BlY3RSYXRpbz10aGlzLmRlZmF1bHRBc3BlY3RSYXRpbyx0aGlzLmV5ZVg9dGhpcy5kZWZhdWx0RXllWCx0aGlzLmV5ZVk9dGhpcy5kZWZhdWx0RXllWSx0aGlzLmV5ZVo9dGhpcy5kZWZhdWx0RXllWix0aGlzLmNlbnRlclg9dGhpcy5kZWZhdWx0Q2VudGVyWCx0aGlzLmNlbnRlclk9dGhpcy5kZWZhdWx0Q2VudGVyWSx0aGlzLmNlbnRlclo9dGhpcy5kZWZhdWx0Q2VudGVyWix0aGlzLnVwWD0wLHRoaXMudXBZPTEsdGhpcy51cFo9MCx0aGlzLmNhbWVyYU5lYXI9dGhpcy5kZWZhdWx0Q2FtZXJhTmVhcix0aGlzLmNhbWVyYUZhcj10aGlzLmRlZmF1bHRDYW1lcmFGYXIsdGhpcy5wZXJzcGVjdGl2ZSgpLHRoaXMuY2FtZXJhKCksdGhpcy5jYW1lcmFUeXBlPVwiZGVmYXVsdFwifSxmLmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5fcmVzaXplPWZ1bmN0aW9uKCl7XCJkZWZhdWx0XCI9PT10aGlzLmNhbWVyYVR5cGU/KHRoaXMuX2NvbXB1dGVDYW1lcmFEZWZhdWx0U2V0dGluZ3MoKSx0aGlzLl9zZXREZWZhdWx0Q2FtZXJhKCkpOnRoaXMucGVyc3BlY3RpdmUodGhpcy5jYW1lcmFGT1YsdGhpcy5fcmVuZGVyZXIud2lkdGgvdGhpcy5fcmVuZGVyZXIuaGVpZ2h0KX0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUuY29weT1mdW5jdGlvbigpe3ZhciBlPW5ldyBmLmRlZmF1bHQuQ2FtZXJhKHRoaXMuX3JlbmRlcmVyKTtyZXR1cm4gZS5jYW1lcmFGT1Y9dGhpcy5jYW1lcmFGT1YsZS5hc3BlY3RSYXRpbz10aGlzLmFzcGVjdFJhdGlvLGUuZXllWD10aGlzLmV5ZVgsZS5leWVZPXRoaXMuZXllWSxlLmV5ZVo9dGhpcy5leWVaLGUuY2VudGVyWD10aGlzLmNlbnRlclgsZS5jZW50ZXJZPXRoaXMuY2VudGVyWSxlLmNlbnRlclo9dGhpcy5jZW50ZXJaLGUuY2FtZXJhTmVhcj10aGlzLmNhbWVyYU5lYXIsZS5jYW1lcmFGYXI9dGhpcy5jYW1lcmFGYXIsZS5jYW1lcmFUeXBlPXRoaXMuY2FtZXJhVHlwZSxlLmNhbWVyYU1hdHJpeD10aGlzLmNhbWVyYU1hdHJpeC5jb3B5KCksZS5wcm9qTWF0cml4PXRoaXMucHJvak1hdHJpeC5jb3B5KCksZX0sZi5kZWZhdWx0LkNhbWVyYS5wcm90b3R5cGUuX2dldExvY2FsQXhlcz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZXllWC10aGlzLmNlbnRlclgsdD10aGlzLmV5ZVktdGhpcy5jZW50ZXJZLHI9dGhpcy5leWVaLXRoaXMuY2VudGVyWixuPU1hdGguc3FydChlKmUrdCp0K3Iqcik7MCE9PW4mJihlLz1uLHQvPW4sci89bik7dmFyIGE9dGhpcy51cFgsbz10aGlzLnVwWSxpPXRoaXMudXBaLHM9bypyLWkqdCxsPS1hKnIraSplLHA9YSp0LW8qZTthPXQqcC1yKmwsbz0tZSpwK3IqcyxpPWUqbC10KnM7dmFyIHU9TWF0aC5zcXJ0KHMqcytsKmwrcCpwKTswIT09dSYmKHMvPXUsbC89dSxwLz11KTt2YXIgYz1NYXRoLnNxcnQoYSphK28qbytpKmkpO3JldHVybiAwIT09YyYmKGEvPWMsby89YyxpLz1jKSx7eDpbcyxsLHBdLHk6W2EsbyxpXSx6OltlLHQscl19fSxmLmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5fb3JiaXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMuZXllWC10aGlzLmNlbnRlclgsYT10aGlzLmV5ZVktdGhpcy5jZW50ZXJZLG89dGhpcy5leWVaLXRoaXMuY2VudGVyWixpPU1hdGguc3FydChuKm4rYSphK28qbykscz1NYXRoLmF0YW4yKG4sbyksbD1NYXRoLmFjb3MoTWF0aC5tYXgoLTEsTWF0aC5taW4oMSxhL2kpKSk7cys9ZSwoaSs9cik8MCYmKGk9LjEpLChsKz10KT5NYXRoLlBJP2w9TWF0aC5QSTpsPD0wJiYobD0uMDAxKTt2YXIgcD1NYXRoLnNpbihsKSppKk1hdGguc2luKHMpLHU9TWF0aC5jb3MobCkqaSxjPU1hdGguc2luKGwpKmkqTWF0aC5jb3Mocyk7dGhpcy5jYW1lcmEocCt0aGlzLmNlbnRlclgsdSt0aGlzLmNlbnRlclksYyt0aGlzLmNlbnRlclosdGhpcy5jZW50ZXJYLHRoaXMuY2VudGVyWSx0aGlzLmNlbnRlclosMCwxLDApfSxmLmRlZmF1bHQuQ2FtZXJhLnByb3RvdHlwZS5faXNBY3RpdmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcz09PXRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmF9LGYuZGVmYXVsdC5wcm90b3R5cGUuc2V0Q2FtZXJhPWZ1bmN0aW9uKGUpe3RoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmE9ZSx0aGlzLl9yZW5kZXJlci51UE1hdHJpeC5zZXQoZS5wcm9qTWF0cml4Lm1hdDRbMF0sZS5wcm9qTWF0cml4Lm1hdDRbMV0sZS5wcm9qTWF0cml4Lm1hdDRbMl0sZS5wcm9qTWF0cml4Lm1hdDRbM10sZS5wcm9qTWF0cml4Lm1hdDRbNF0sZS5wcm9qTWF0cml4Lm1hdDRbNV0sZS5wcm9qTWF0cml4Lm1hdDRbNl0sZS5wcm9qTWF0cml4Lm1hdDRbN10sZS5wcm9qTWF0cml4Lm1hdDRbOF0sZS5wcm9qTWF0cml4Lm1hdDRbOV0sZS5wcm9qTWF0cml4Lm1hdDRbMTBdLGUucHJvak1hdHJpeC5tYXQ0WzExXSxlLnByb2pNYXRyaXgubWF0NFsxMl0sZS5wcm9qTWF0cml4Lm1hdDRbMTNdLGUucHJvak1hdHJpeC5tYXQ0WzE0XSxlLnByb2pNYXRyaXgubWF0NFsxNV0pfTt2YXIgYT1mLmRlZmF1bHQuQ2FtZXJhO3IuZGVmYXVsdD1hfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDgxOltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbix1PShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTt1LmRlZmF1bHQuR2VvbWV0cnk9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiB0aGlzLnZlcnRpY2VzPVtdLHRoaXMubGluZVZlcnRpY2VzPVtdLHRoaXMubGluZU5vcm1hbHM9W10sdGhpcy52ZXJ0ZXhOb3JtYWxzPVtdLHRoaXMuZmFjZXM9W10sdGhpcy51dnM9W10sdGhpcy5lZGdlcz1bXSx0aGlzLnZlcnRleENvbG9ycz1bXSx0aGlzLmRldGFpbFg9dm9pZCAwIT09ZT9lOjEsdGhpcy5kZXRhaWxZPXZvaWQgMCE9PXQ/dDoxLHRoaXMuZGlydHlGbGFncz17fSxyIGluc3RhbmNlb2YgRnVuY3Rpb24mJnIuY2FsbCh0aGlzKSx0aGlzfSx1LmRlZmF1bHQuR2VvbWV0cnkucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5saW5lVmVydGljZXMubGVuZ3RoPTAsdGhpcy5saW5lTm9ybWFscy5sZW5ndGg9MCx0aGlzLnZlcnRpY2VzLmxlbmd0aD0wLHRoaXMuZWRnZXMubGVuZ3RoPTAsdGhpcy52ZXJ0ZXhDb2xvcnMubGVuZ3RoPTAsdGhpcy52ZXJ0ZXhOb3JtYWxzLmxlbmd0aD0wLHRoaXMudXZzLmxlbmd0aD0wLHRoaXMuZGlydHlGbGFncz17fX0sdS5kZWZhdWx0Lkdlb21ldHJ5LnByb3RvdHlwZS5jb21wdXRlRmFjZXM9ZnVuY3Rpb24oKXt0aGlzLmZhY2VzLmxlbmd0aD0wO2Zvcih2YXIgZSx0LHIsbixhPXRoaXMuZGV0YWlsWCsxLG89MDtvPHRoaXMuZGV0YWlsWTtvKyspZm9yKHZhciBpPTA7aTx0aGlzLmRldGFpbFg7aSsrKXQ9KGU9byphK2kpKzEscj0obysxKSphK2krMSxuPShvKzEpKmEraSx0aGlzLmZhY2VzLnB1c2goW2UsdCxuXSksdGhpcy5mYWNlcy5wdXNoKFtuLHQscl0pO3JldHVybiB0aGlzfSx1LmRlZmF1bHQuR2VvbWV0cnkucHJvdG90eXBlLl9nZXRGYWNlTm9ybWFsPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZmFjZXNbZV0scj10aGlzLnZlcnRpY2VzW3RbMF1dLG49dGhpcy52ZXJ0aWNlc1t0WzFdXSxhPXRoaXMudmVydGljZXNbdFsyXV0sbz11LmRlZmF1bHQuVmVjdG9yLnN1YihuLHIpLGk9dS5kZWZhdWx0LlZlY3Rvci5zdWIoYSxyKSxzPXUuZGVmYXVsdC5WZWN0b3IuY3Jvc3MobyxpKSxsPXUuZGVmYXVsdC5WZWN0b3IubWFnKHMpLHA9bC8odS5kZWZhdWx0LlZlY3Rvci5tYWcobykqdS5kZWZhdWx0LlZlY3Rvci5tYWcoaSkpO3JldHVybiAwPT09cHx8aXNOYU4ocCk/KGNvbnNvbGUud2FybihcInA1Lkdlb21ldHJ5LnByb3RvdHlwZS5fZ2V0RmFjZU5vcm1hbDpcIixcImZhY2UgaGFzIGNvbGluZWFyIHNpZGVzIG9yIGEgcmVwZWF0ZWQgdmVydGV4XCIpLHMpOigxPHAmJihwPTEpLHMubXVsdChNYXRoLmFzaW4ocCkvbCkpfSx1LmRlZmF1bHQuR2VvbWV0cnkucHJvdG90eXBlLmNvbXB1dGVOb3JtYWxzPWZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLnZlcnRleE5vcm1hbHMscj10aGlzLnZlcnRpY2VzLG49dGhpcy5mYWNlcztmb3IoZT10Lmxlbmd0aD0wO2U8ci5sZW5ndGg7KytlKXQucHVzaChuZXcgdS5kZWZhdWx0LlZlY3Rvcik7Zm9yKHZhciBhPTA7YTxuLmxlbmd0aDsrK2EpZm9yKHZhciBvPW5bYV0saT10aGlzLl9nZXRGYWNlTm9ybWFsKGEpLHM9MDtzPDM7KytzKXt0W29bc11dLmFkZChpKX1mb3IoZT0wO2U8ci5sZW5ndGg7KytlKXRbZV0ubm9ybWFsaXplKCk7cmV0dXJuIHRoaXN9LHUuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUuYXZlcmFnZU5vcm1hbHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPD10aGlzLmRldGFpbFk7ZSsrKXt2YXIgdD10aGlzLmRldGFpbFgrMSxyPXUuZGVmYXVsdC5WZWN0b3IuYWRkKHRoaXMudmVydGV4Tm9ybWFsc1tlKnRdLHRoaXMudmVydGV4Tm9ybWFsc1tlKnQrdGhpcy5kZXRhaWxYXSk7cj11LmRlZmF1bHQuVmVjdG9yLmRpdihyLDIpLHRoaXMudmVydGV4Tm9ybWFsc1tlKnRdPXIsdGhpcy52ZXJ0ZXhOb3JtYWxzW2UqdCt0aGlzLmRldGFpbFhdPXJ9cmV0dXJuIHRoaXN9LHUuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUuYXZlcmFnZVBvbGVOb3JtYWxzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPW5ldyB1LmRlZmF1bHQuVmVjdG9yKDAsMCwwKSx0PTA7dDx0aGlzLmRldGFpbFg7dCsrKWUuYWRkKHRoaXMudmVydGV4Tm9ybWFsc1t0XSk7ZT11LmRlZmF1bHQuVmVjdG9yLmRpdihlLHRoaXMuZGV0YWlsWCk7Zm9yKHZhciByPTA7cjx0aGlzLmRldGFpbFg7cisrKXRoaXMudmVydGV4Tm9ybWFsc1tyXT1lO2U9bmV3IHUuZGVmYXVsdC5WZWN0b3IoMCwwLDApO2Zvcih2YXIgbj10aGlzLnZlcnRpY2VzLmxlbmd0aC0xO24+dGhpcy52ZXJ0aWNlcy5sZW5ndGgtMS10aGlzLmRldGFpbFg7bi0tKWUuYWRkKHRoaXMudmVydGV4Tm9ybWFsc1tuXSk7ZT11LmRlZmF1bHQuVmVjdG9yLmRpdihlLHRoaXMuZGV0YWlsWCk7Zm9yKHZhciBhPXRoaXMudmVydGljZXMubGVuZ3RoLTE7YT50aGlzLnZlcnRpY2VzLmxlbmd0aC0xLXRoaXMuZGV0YWlsWDthLS0pdGhpcy52ZXJ0ZXhOb3JtYWxzW2FdPWU7cmV0dXJuIHRoaXN9LHUuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUuX21ha2VUcmlhbmdsZUVkZ2VzPWZ1bmN0aW9uKCl7aWYodGhpcy5lZGdlcy5sZW5ndGg9MCxBcnJheS5pc0FycmF5KHRoaXMuc3Ryb2tlSW5kaWNlcykpZm9yKHZhciBlPTAsdD10aGlzLnN0cm9rZUluZGljZXMubGVuZ3RoO2U8dDtlKyspdGhpcy5lZGdlcy5wdXNoKHRoaXMuc3Ryb2tlSW5kaWNlc1tlXSk7ZWxzZSBmb3IodmFyIHI9MDtyPHRoaXMuZmFjZXMubGVuZ3RoO3IrKyl0aGlzLmVkZ2VzLnB1c2goW3RoaXMuZmFjZXNbcl1bMF0sdGhpcy5mYWNlc1tyXVsxXV0pLHRoaXMuZWRnZXMucHVzaChbdGhpcy5mYWNlc1tyXVsxXSx0aGlzLmZhY2VzW3JdWzJdXSksdGhpcy5lZGdlcy5wdXNoKFt0aGlzLmZhY2VzW3JdWzJdLHRoaXMuZmFjZXNbcl1bMF1dKTtyZXR1cm4gdGhpc30sdS5kZWZhdWx0Lkdlb21ldHJ5LnByb3RvdHlwZS5fZWRnZXNUb1ZlcnRpY2VzPWZ1bmN0aW9uKCl7dGhpcy5saW5lVmVydGljZXMubGVuZ3RoPTA7Zm9yKHZhciBlPXRoaXMubGluZU5vcm1hbHMubGVuZ3RoPTA7ZTx0aGlzLmVkZ2VzLmxlbmd0aDtlKyspe3ZhciB0PXRoaXMudmVydGljZXNbdGhpcy5lZGdlc1tlXVswXV0scj10aGlzLnZlcnRpY2VzW3RoaXMuZWRnZXNbZV1bMV1dLG49ci5jb3B5KCkuc3ViKHQpLm5vcm1hbGl6ZSgpLGE9dC5hcnJheSgpLG89dC5hcnJheSgpLGk9ci5hcnJheSgpLHM9ci5hcnJheSgpLGw9bi5hcnJheSgpLHA9bi5hcnJheSgpO2wucHVzaCgxKSxwLnB1c2goLTEpLHRoaXMubGluZU5vcm1hbHMucHVzaChsLHAsbCxsLHAscCksdGhpcy5saW5lVmVydGljZXMucHVzaChhLG8saSxpLG8scyl9cmV0dXJuIHRoaXN9LHUuZGVmYXVsdC5HZW9tZXRyeS5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKCl7aWYoMDx0aGlzLnZlcnRpY2VzLmxlbmd0aCl7Zm9yKHZhciBlPXRoaXMudmVydGljZXNbMF0uY29weSgpLHQ9dGhpcy52ZXJ0aWNlc1swXS5jb3B5KCkscj0wO3I8dGhpcy52ZXJ0aWNlcy5sZW5ndGg7cisrKWUueD1NYXRoLm1heChlLngsdGhpcy52ZXJ0aWNlc1tyXS54KSx0Lng9TWF0aC5taW4odC54LHRoaXMudmVydGljZXNbcl0ueCksZS55PU1hdGgubWF4KGUueSx0aGlzLnZlcnRpY2VzW3JdLnkpLHQueT1NYXRoLm1pbih0LnksdGhpcy52ZXJ0aWNlc1tyXS55KSxlLno9TWF0aC5tYXgoZS56LHRoaXMudmVydGljZXNbcl0ueiksdC56PU1hdGgubWluKHQueix0aGlzLnZlcnRpY2VzW3JdLnopO2Zvcih2YXIgbj11LmRlZmF1bHQuVmVjdG9yLmxlcnAoZSx0LC41KSxhPXUuZGVmYXVsdC5WZWN0b3Iuc3ViKGUsdCksbz0yMDAvTWF0aC5tYXgoTWF0aC5tYXgoYS54LGEueSksYS56KSxpPTA7aTx0aGlzLnZlcnRpY2VzLmxlbmd0aDtpKyspdGhpcy52ZXJ0aWNlc1tpXS5zdWIobiksdGhpcy52ZXJ0aWNlc1tpXS5tdWx0KG8pfXJldHVybiB0aGlzfTt2YXIgYT11LmRlZmF1bHQuR2VvbWV0cnk7ci5kZWZhdWx0PWF9LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sODI6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLEw9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O3ZhciBhPUFycmF5LEk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheX07XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEZsb2F0MzJBcnJheSYmKGE9RmxvYXQzMkFycmF5LEk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheXx8ZSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheX0pLEwuZGVmYXVsdC5NYXRyaXg9ZnVuY3Rpb24oKXtmb3IodmFyIGU9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpLHQ9MDt0PGUubGVuZ3RoOysrdCllW3RdPWFyZ3VtZW50c1t0XTtyZXR1cm4gZS5sZW5ndGgmJmVbZS5sZW5ndGgtMV1pbnN0YW5jZW9mIEwuZGVmYXVsdCYmKHRoaXMucDU9ZVtlLmxlbmd0aC0xXSksXCJtYXQzXCI9PT1lWzBdP3RoaXMubWF0Mz1BcnJheS5pc0FycmF5KGVbMV0pP2VbMV06bmV3IGEoWzEsMCwwLDAsMSwwLDAsMCwxXSk6dGhpcy5tYXQ0PUFycmF5LmlzQXJyYXkoZVswXSk/ZVswXTpuZXcgYShbMSwwLDAsMCwwLDEsMCwwLDAsMCwxLDAsMCwwLDAsMV0pLHRoaXN9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnNldD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEwuZGVmYXVsdC5NYXRyaXg/dGhpcy5tYXQ0PWUubWF0NDpJKGUpP3RoaXMubWF0ND1lOjE2PT09YXJndW1lbnRzLmxlbmd0aCYmKHRoaXMubWF0NFswXT1lLHRoaXMubWF0NFsxXT1hcmd1bWVudHNbMV0sdGhpcy5tYXQ0WzJdPWFyZ3VtZW50c1syXSx0aGlzLm1hdDRbM109YXJndW1lbnRzWzNdLHRoaXMubWF0NFs0XT1hcmd1bWVudHNbNF0sdGhpcy5tYXQ0WzVdPWFyZ3VtZW50c1s1XSx0aGlzLm1hdDRbNl09YXJndW1lbnRzWzZdLHRoaXMubWF0NFs3XT1hcmd1bWVudHNbN10sdGhpcy5tYXQ0WzhdPWFyZ3VtZW50c1s4XSx0aGlzLm1hdDRbOV09YXJndW1lbnRzWzldLHRoaXMubWF0NFsxMF09YXJndW1lbnRzWzEwXSx0aGlzLm1hdDRbMTFdPWFyZ3VtZW50c1sxMV0sdGhpcy5tYXQ0WzEyXT1hcmd1bWVudHNbMTJdLHRoaXMubWF0NFsxM109YXJndW1lbnRzWzEzXSx0aGlzLm1hdDRbMTRdPWFyZ3VtZW50c1sxNF0sdGhpcy5tYXQ0WzE1XT1hcmd1bWVudHNbMTVdKSx0aGlzfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEwuZGVmYXVsdC5NYXRyaXgodGhpcy5tYXQ0LHRoaXMucDUpfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKCl7dmFyIGU9bmV3IEwuZGVmYXVsdC5NYXRyaXgodGhpcy5wNSk7cmV0dXJuIGUubWF0NFswXT10aGlzLm1hdDRbMF0sZS5tYXQ0WzFdPXRoaXMubWF0NFsxXSxlLm1hdDRbMl09dGhpcy5tYXQ0WzJdLGUubWF0NFszXT10aGlzLm1hdDRbM10sZS5tYXQ0WzRdPXRoaXMubWF0NFs0XSxlLm1hdDRbNV09dGhpcy5tYXQ0WzVdLGUubWF0NFs2XT10aGlzLm1hdDRbNl0sZS5tYXQ0WzddPXRoaXMubWF0NFs3XSxlLm1hdDRbOF09dGhpcy5tYXQ0WzhdLGUubWF0NFs5XT10aGlzLm1hdDRbOV0sZS5tYXQ0WzEwXT10aGlzLm1hdDRbMTBdLGUubWF0NFsxMV09dGhpcy5tYXQ0WzExXSxlLm1hdDRbMTJdPXRoaXMubWF0NFsxMl0sZS5tYXQ0WzEzXT10aGlzLm1hdDRbMTNdLGUubWF0NFsxNF09dGhpcy5tYXQ0WzE0XSxlLm1hdDRbMTVdPXRoaXMubWF0NFsxNV0sZX0sTC5kZWZhdWx0Lk1hdHJpeC5pZGVudGl0eT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IEwuZGVmYXVsdC5NYXRyaXgoZSl9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnRyYW5zcG9zZT1mdW5jdGlvbihlKXt2YXIgdCxyLG4sYSxvLGk7cmV0dXJuIGUgaW5zdGFuY2VvZiBMLmRlZmF1bHQuTWF0cml4Pyh0PWUubWF0NFsxXSxyPWUubWF0NFsyXSxuPWUubWF0NFszXSxhPWUubWF0NFs2XSxvPWUubWF0NFs3XSxpPWUubWF0NFsxMV0sdGhpcy5tYXQ0WzBdPWUubWF0NFswXSx0aGlzLm1hdDRbMV09ZS5tYXQ0WzRdLHRoaXMubWF0NFsyXT1lLm1hdDRbOF0sdGhpcy5tYXQ0WzNdPWUubWF0NFsxMl0sdGhpcy5tYXQ0WzRdPXQsdGhpcy5tYXQ0WzVdPWUubWF0NFs1XSx0aGlzLm1hdDRbNl09ZS5tYXQ0WzldLHRoaXMubWF0NFs3XT1lLm1hdDRbMTNdLHRoaXMubWF0NFs4XT1yLHRoaXMubWF0NFs5XT1hLHRoaXMubWF0NFsxMF09ZS5tYXQ0WzEwXSx0aGlzLm1hdDRbMTFdPWUubWF0NFsxNF0sdGhpcy5tYXQ0WzEyXT1uLHRoaXMubWF0NFsxM109byx0aGlzLm1hdDRbMTRdPWksdGhpcy5tYXQ0WzE1XT1lLm1hdDRbMTVdKTpJKGUpJiYodD1lWzFdLHI9ZVsyXSxuPWVbM10sYT1lWzZdLG89ZVs3XSxpPWVbMTFdLHRoaXMubWF0NFswXT1lWzBdLHRoaXMubWF0NFsxXT1lWzRdLHRoaXMubWF0NFsyXT1lWzhdLHRoaXMubWF0NFszXT1lWzEyXSx0aGlzLm1hdDRbNF09dCx0aGlzLm1hdDRbNV09ZVs1XSx0aGlzLm1hdDRbNl09ZVs5XSx0aGlzLm1hdDRbN109ZVsxM10sdGhpcy5tYXQ0WzhdPXIsdGhpcy5tYXQ0WzldPWEsdGhpcy5tYXQ0WzEwXT1lWzEwXSx0aGlzLm1hdDRbMTFdPWVbMTRdLHRoaXMubWF0NFsxMl09bix0aGlzLm1hdDRbMTNdPW8sdGhpcy5tYXQ0WzE0XT1pLHRoaXMubWF0NFsxNV09ZVsxNV0pLHRoaXN9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLmludmVydD1mdW5jdGlvbihlKXt2YXIgdCxyLG4sYSxvLGkscyxsLHAsdSxjLGQsaCxtLGYseTtlIGluc3RhbmNlb2YgTC5kZWZhdWx0Lk1hdHJpeD8odD1lLm1hdDRbMF0scj1lLm1hdDRbMV0sbj1lLm1hdDRbMl0sYT1lLm1hdDRbM10sbz1lLm1hdDRbNF0saT1lLm1hdDRbNV0scz1lLm1hdDRbNl0sbD1lLm1hdDRbN10scD1lLm1hdDRbOF0sdT1lLm1hdDRbOV0sYz1lLm1hdDRbMTBdLGQ9ZS5tYXQ0WzExXSxoPWUubWF0NFsxMl0sbT1lLm1hdDRbMTNdLGY9ZS5tYXQ0WzE0XSx5PWUubWF0NFsxNV0pOkkoZSkmJih0PWVbMF0scj1lWzFdLG49ZVsyXSxhPWVbM10sbz1lWzRdLGk9ZVs1XSxzPWVbNl0sbD1lWzddLHA9ZVs4XSx1PWVbOV0sYz1lWzEwXSxkPWVbMTFdLGg9ZVsxMl0sbT1lWzEzXSxmPWVbMTRdLHk9ZVsxNV0pO3ZhciBnPXQqaS1yKm8sdj10KnMtbipvLGI9dCpsLWEqbyxfPXIqcy1uKmkseD1yKmwtYSppLFM9bipsLWEqcyx3PXAqbS11KmgsTT1wKmYtYypoLEU9cCp5LWQqaCxUPXUqZi1jKm0sQz11KnktZCptLE49Yyp5LWQqZixPPWcqTi12KkMrYipUK18qRS14Kk0rUyp3O3JldHVybiBPPyhPPTEvTyx0aGlzLm1hdDRbMF09KGkqTi1zKkMrbCpUKSpPLHRoaXMubWF0NFsxXT0obipDLXIqTi1hKlQpKk8sdGhpcy5tYXQ0WzJdPShtKlMtZip4K3kqXykqTyx0aGlzLm1hdDRbM109KGMqeC11KlMtZCpfKSpPLHRoaXMubWF0NFs0XT0ocypFLW8qTi1sKk0pKk8sdGhpcy5tYXQ0WzVdPSh0Kk4tbipFK2EqTSkqTyx0aGlzLm1hdDRbNl09KGYqYi1oKlMteSp2KSpPLHRoaXMubWF0NFs3XT0ocCpTLWMqYitkKnYpKk8sdGhpcy5tYXQ0WzhdPShvKkMtaSpFK2wqdykqTyx0aGlzLm1hdDRbOV09KHIqRS10KkMtYSp3KSpPLHRoaXMubWF0NFsxMF09KGgqeC1tKmIreSpnKSpPLHRoaXMubWF0NFsxMV09KHUqYi1wKngtZCpnKSpPLHRoaXMubWF0NFsxMl09KGkqTS1vKlQtcyp3KSpPLHRoaXMubWF0NFsxM109KHQqVC1yKk0rbip3KSpPLHRoaXMubWF0NFsxNF09KG0qdi1oKl8tZipnKSpPLHRoaXMubWF0NFsxNV09KHAqXy11KnYrYypnKSpPLHRoaXMpOm51bGx9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLmludmVydDN4Mz1mdW5jdGlvbigpe3ZhciBlPXRoaXMubWF0M1swXSx0PXRoaXMubWF0M1sxXSxyPXRoaXMubWF0M1syXSxuPXRoaXMubWF0M1szXSxhPXRoaXMubWF0M1s0XSxvPXRoaXMubWF0M1s1XSxpPXRoaXMubWF0M1s2XSxzPXRoaXMubWF0M1s3XSxsPXRoaXMubWF0M1s4XSxwPWwqYS1vKnMsdT0tbCpuK28qaSxjPXMqbi1hKmksZD1lKnArdCp1K3IqYztyZXR1cm4gZD8oZD0xL2QsdGhpcy5tYXQzWzBdPXAqZCx0aGlzLm1hdDNbMV09KC1sKnQrcipzKSpkLHRoaXMubWF0M1syXT0obyp0LXIqYSkqZCx0aGlzLm1hdDNbM109dSpkLHRoaXMubWF0M1s0XT0obCplLXIqaSkqZCx0aGlzLm1hdDNbNV09KC1vKmUrcipuKSpkLHRoaXMubWF0M1s2XT1jKmQsdGhpcy5tYXQzWzddPSgtcyplK3QqaSkqZCx0aGlzLm1hdDNbOF09KGEqZS10Km4pKmQsdGhpcyk6bnVsbH0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUudHJhbnNwb3NlM3gzPWZ1bmN0aW9uKGUpe3ZhciB0PWVbMV0scj1lWzJdLG49ZVs1XTtyZXR1cm4gdGhpcy5tYXQzWzFdPWVbM10sdGhpcy5tYXQzWzJdPWVbNl0sdGhpcy5tYXQzWzNdPXQsdGhpcy5tYXQzWzVdPWVbN10sdGhpcy5tYXQzWzZdPXIsdGhpcy5tYXQzWzddPW4sdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuaW52ZXJzZVRyYW5zcG9zZT1mdW5jdGlvbihlKXt2b2lkIDA9PT10aGlzLm1hdDM/Y29uc29sZS5lcnJvcihcInNvcnJ5LCB0aGlzIGZ1bmN0aW9uIG9ubHkgd29ya3Mgd2l0aCBtYXQzXCIpOih0aGlzLm1hdDNbMF09ZS5tYXQ0WzBdLHRoaXMubWF0M1sxXT1lLm1hdDRbMV0sdGhpcy5tYXQzWzJdPWUubWF0NFsyXSx0aGlzLm1hdDNbM109ZS5tYXQ0WzRdLHRoaXMubWF0M1s0XT1lLm1hdDRbNV0sdGhpcy5tYXQzWzVdPWUubWF0NFs2XSx0aGlzLm1hdDNbNl09ZS5tYXQ0WzhdLHRoaXMubWF0M1s3XT1lLm1hdDRbOV0sdGhpcy5tYXQzWzhdPWUubWF0NFsxMF0pO3ZhciB0PXRoaXMuaW52ZXJ0M3gzKCk7aWYodCl0LnRyYW5zcG9zZTN4Myh0aGlzLm1hdDMpO2Vsc2UgZm9yKHZhciByPTA7cjw5O3IrKyl0aGlzLm1hdDNbcl09MDtyZXR1cm4gdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuZGV0ZXJtaW5hbnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm1hdDRbMF0qdGhpcy5tYXQ0WzVdLXRoaXMubWF0NFsxXSp0aGlzLm1hdDRbNF0sdD10aGlzLm1hdDRbMF0qdGhpcy5tYXQ0WzZdLXRoaXMubWF0NFsyXSp0aGlzLm1hdDRbNF0scj10aGlzLm1hdDRbMF0qdGhpcy5tYXQ0WzddLXRoaXMubWF0NFszXSp0aGlzLm1hdDRbNF0sbj10aGlzLm1hdDRbMV0qdGhpcy5tYXQ0WzZdLXRoaXMubWF0NFsyXSp0aGlzLm1hdDRbNV0sYT10aGlzLm1hdDRbMV0qdGhpcy5tYXQ0WzddLXRoaXMubWF0NFszXSp0aGlzLm1hdDRbNV0sbz10aGlzLm1hdDRbMl0qdGhpcy5tYXQ0WzddLXRoaXMubWF0NFszXSp0aGlzLm1hdDRbNl0saT10aGlzLm1hdDRbOF0qdGhpcy5tYXQ0WzEzXS10aGlzLm1hdDRbOV0qdGhpcy5tYXQ0WzEyXSxzPXRoaXMubWF0NFs4XSp0aGlzLm1hdDRbMTRdLXRoaXMubWF0NFsxMF0qdGhpcy5tYXQ0WzEyXSxsPXRoaXMubWF0NFs4XSp0aGlzLm1hdDRbMTVdLXRoaXMubWF0NFsxMV0qdGhpcy5tYXQ0WzEyXSxwPXRoaXMubWF0NFs5XSp0aGlzLm1hdDRbMTRdLXRoaXMubWF0NFsxMF0qdGhpcy5tYXQ0WzEzXSx1PXRoaXMubWF0NFs5XSp0aGlzLm1hdDRbMTVdLXRoaXMubWF0NFsxMV0qdGhpcy5tYXQ0WzEzXTtyZXR1cm4gZSoodGhpcy5tYXQ0WzEwXSp0aGlzLm1hdDRbMTVdLXRoaXMubWF0NFsxMV0qdGhpcy5tYXQ0WzE0XSktdCp1K3IqcCtuKmwtYSpzK28qaX0sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUubXVsdD1mdW5jdGlvbihlKXt2YXIgdDtpZihlPT09dGhpc3x8ZT09PXRoaXMubWF0NCl0PXRoaXMuY29weSgpLm1hdDQ7ZWxzZSBpZihlIGluc3RhbmNlb2YgTC5kZWZhdWx0Lk1hdHJpeCl0PWUubWF0NDtlbHNlIGlmKEkoZSkpdD1lO2Vsc2V7aWYoMTYhPT1hcmd1bWVudHMubGVuZ3RoKXJldHVybjt0PWFyZ3VtZW50c312YXIgcj10aGlzLm1hdDRbMF0sbj10aGlzLm1hdDRbMV0sYT10aGlzLm1hdDRbMl0sbz10aGlzLm1hdDRbM107cmV0dXJuIHRoaXMubWF0NFswXT1yKnRbMF0rbip0WzRdK2EqdFs4XStvKnRbMTJdLHRoaXMubWF0NFsxXT1yKnRbMV0rbip0WzVdK2EqdFs5XStvKnRbMTNdLHRoaXMubWF0NFsyXT1yKnRbMl0rbip0WzZdK2EqdFsxMF0rbyp0WzE0XSx0aGlzLm1hdDRbM109cip0WzNdK24qdFs3XSthKnRbMTFdK28qdFsxNV0scj10aGlzLm1hdDRbNF0sbj10aGlzLm1hdDRbNV0sYT10aGlzLm1hdDRbNl0sbz10aGlzLm1hdDRbN10sdGhpcy5tYXQ0WzRdPXIqdFswXStuKnRbNF0rYSp0WzhdK28qdFsxMl0sdGhpcy5tYXQ0WzVdPXIqdFsxXStuKnRbNV0rYSp0WzldK28qdFsxM10sdGhpcy5tYXQ0WzZdPXIqdFsyXStuKnRbNl0rYSp0WzEwXStvKnRbMTRdLHRoaXMubWF0NFs3XT1yKnRbM10rbip0WzddK2EqdFsxMV0rbyp0WzE1XSxyPXRoaXMubWF0NFs4XSxuPXRoaXMubWF0NFs5XSxhPXRoaXMubWF0NFsxMF0sbz10aGlzLm1hdDRbMTFdLHRoaXMubWF0NFs4XT1yKnRbMF0rbip0WzRdK2EqdFs4XStvKnRbMTJdLHRoaXMubWF0NFs5XT1yKnRbMV0rbip0WzVdK2EqdFs5XStvKnRbMTNdLHRoaXMubWF0NFsxMF09cip0WzJdK24qdFs2XSthKnRbMTBdK28qdFsxNF0sdGhpcy5tYXQ0WzExXT1yKnRbM10rbip0WzddK2EqdFsxMV0rbyp0WzE1XSxyPXRoaXMubWF0NFsxMl0sbj10aGlzLm1hdDRbMTNdLGE9dGhpcy5tYXQ0WzE0XSxvPXRoaXMubWF0NFsxNV0sdGhpcy5tYXQ0WzEyXT1yKnRbMF0rbip0WzRdK2EqdFs4XStvKnRbMTJdLHRoaXMubWF0NFsxM109cip0WzFdK24qdFs1XSthKnRbOV0rbyp0WzEzXSx0aGlzLm1hdDRbMTRdPXIqdFsyXStuKnRbNl0rYSp0WzEwXStvKnRbMTRdLHRoaXMubWF0NFsxNV09cip0WzNdK24qdFs3XSthKnRbMTFdK28qdFsxNV0sdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24oZSl7dmFyIHQ7aWYoZT09PXRoaXN8fGU9PT10aGlzLm1hdDQpdD10aGlzLmNvcHkoKS5tYXQ0O2Vsc2UgaWYoZSBpbnN0YW5jZW9mIEwuZGVmYXVsdC5NYXRyaXgpdD1lLm1hdDQ7ZWxzZSBpZihJKGUpKXQ9ZTtlbHNle2lmKDE2IT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm47dD1hcmd1bWVudHN9dmFyIHI9dGhpcy5tYXQ0LG49clswXSxhPXJbNF0sbz1yWzhdLGk9clsxMl07clswXT10WzBdKm4rdFsxXSphK3RbMl0qbyt0WzNdKmkscls0XT10WzRdKm4rdFs1XSphK3RbNl0qbyt0WzddKmkscls4XT10WzhdKm4rdFs5XSphK3RbMTBdKm8rdFsxMV0qaSxyWzEyXT10WzEyXSpuK3RbMTNdKmErdFsxNF0qbyt0WzE1XSppO3ZhciBzPXJbMV0sbD1yWzVdLHA9cls5XSx1PXJbMTNdO3JbMV09dFswXSpzK3RbMV0qbCt0WzJdKnArdFszXSp1LHJbNV09dFs0XSpzK3RbNV0qbCt0WzZdKnArdFs3XSp1LHJbOV09dFs4XSpzK3RbOV0qbCt0WzEwXSpwK3RbMTFdKnUsclsxM109dFsxMl0qcyt0WzEzXSpsK3RbMTRdKnArdFsxNV0qdTt2YXIgYz1yWzJdLGQ9cls2XSxoPXJbMTBdLG09clsxNF07clsyXT10WzBdKmMrdFsxXSpkK3RbMl0qaCt0WzNdKm0scls2XT10WzRdKmMrdFs1XSpkK3RbNl0qaCt0WzddKm0sclsxMF09dFs4XSpjK3RbOV0qZCt0WzEwXSpoK3RbMTFdKm0sclsxNF09dFsxMl0qYyt0WzEzXSpkK3RbMTRdKmgrdFsxNV0qbTt2YXIgZj1yWzNdLHk9cls3XSxnPXJbMTFdLHY9clsxNV07cmV0dXJuIHJbM109dFswXSpmK3RbMV0qeSt0WzJdKmcrdFszXSp2LHJbN109dFs0XSpmK3RbNV0qeSt0WzZdKmcrdFs3XSp2LHJbMTFdPXRbOF0qZit0WzldKnkrdFsxMF0qZyt0WzExXSp2LHJbMTVdPXRbMTJdKmYrdFsxM10qeSt0WzE0XSpnK3RbMTVdKnYsdGhpc30sTC5kZWZhdWx0Lk1hdHJpeC5wcm90b3R5cGUuc2NhbGU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlIGluc3RhbmNlb2YgTC5kZWZhdWx0LlZlY3Rvcj8odD1lLnkscj1lLnosZT1lLngpOmUgaW5zdGFuY2VvZiBBcnJheSYmKHQ9ZVsxXSxyPWVbMl0sZT1lWzBdKSx0aGlzLm1hdDRbMF0qPWUsdGhpcy5tYXQ0WzFdKj1lLHRoaXMubWF0NFsyXSo9ZSx0aGlzLm1hdDRbM10qPWUsdGhpcy5tYXQ0WzRdKj10LHRoaXMubWF0NFs1XSo9dCx0aGlzLm1hdDRbNl0qPXQsdGhpcy5tYXQ0WzddKj10LHRoaXMubWF0NFs4XSo9cix0aGlzLm1hdDRbOV0qPXIsdGhpcy5tYXQ0WzEwXSo9cix0aGlzLm1hdDRbMTFdKj1yLHRoaXN9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlLHQscixuKXt0IGluc3RhbmNlb2YgTC5kZWZhdWx0LlZlY3Rvcj8ocj10Lnksbj10LnosdD10LngpOnQgaW5zdGFuY2VvZiBBcnJheSYmKHI9dFsxXSxuPXRbMl0sdD10WzBdKTt2YXIgYT1NYXRoLnNxcnQodCp0K3IqcituKm4pO3QqPTEvYSxyKj0xL2Esbio9MS9hO3ZhciBvPXRoaXMubWF0NFswXSxpPXRoaXMubWF0NFsxXSxzPXRoaXMubWF0NFsyXSxsPXRoaXMubWF0NFszXSxwPXRoaXMubWF0NFs0XSx1PXRoaXMubWF0NFs1XSxjPXRoaXMubWF0NFs2XSxkPXRoaXMubWF0NFs3XSxoPXRoaXMubWF0NFs4XSxtPXRoaXMubWF0NFs5XSxmPXRoaXMubWF0NFsxMF0seT10aGlzLm1hdDRbMTFdLGc9TWF0aC5zaW4oZSksdj1NYXRoLmNvcyhlKSxiPTEtdixfPXQqdCpiK3YseD1yKnQqYituKmcsUz1uKnQqYi1yKmcsdz10KnIqYi1uKmcsTT1yKnIqYit2LEU9bipyKmIrdCpnLFQ9dCpuKmIrcipnLEM9cipuKmItdCpnLE49bipuKmIrdjtyZXR1cm4gdGhpcy5tYXQ0WzBdPW8qXytwKngraCpTLHRoaXMubWF0NFsxXT1pKl8rdSp4K20qUyx0aGlzLm1hdDRbMl09cypfK2MqeCtmKlMsdGhpcy5tYXQ0WzNdPWwqXytkKngreSpTLHRoaXMubWF0NFs0XT1vKncrcCpNK2gqRSx0aGlzLm1hdDRbNV09aSp3K3UqTSttKkUsdGhpcy5tYXQ0WzZdPXMqdytjKk0rZipFLHRoaXMubWF0NFs3XT1sKncrZCpNK3kqRSx0aGlzLm1hdDRbOF09bypUK3AqQytoKk4sdGhpcy5tYXQ0WzldPWkqVCt1KkMrbSpOLHRoaXMubWF0NFsxMF09cypUK2MqQytmKk4sdGhpcy5tYXQ0WzExXT1sKlQrZCpDK3kqTix0aGlzfSxMLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS50cmFuc2xhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXSxyPWVbMV0sbj1lWzJdfHwwO3RoaXMubWF0NFsxMl0rPXRoaXMubWF0NFswXSp0K3RoaXMubWF0NFs0XSpyK3RoaXMubWF0NFs4XSpuLHRoaXMubWF0NFsxM10rPXRoaXMubWF0NFsxXSp0K3RoaXMubWF0NFs1XSpyK3RoaXMubWF0NFs5XSpuLHRoaXMubWF0NFsxNF0rPXRoaXMubWF0NFsyXSp0K3RoaXMubWF0NFs2XSpyK3RoaXMubWF0NFsxMF0qbix0aGlzLm1hdDRbMTVdKz10aGlzLm1hdDRbM10qdCt0aGlzLm1hdDRbN10qcit0aGlzLm1hdDRbMTFdKm59LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnJvdGF0ZVg9ZnVuY3Rpb24oZSl7dGhpcy5yb3RhdGUoZSwxLDAsMCl9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnJvdGF0ZVk9ZnVuY3Rpb24oZSl7dGhpcy5yb3RhdGUoZSwwLDEsMCl9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnJvdGF0ZVo9ZnVuY3Rpb24oZSl7dGhpcy5yb3RhdGUoZSwwLDAsMSl9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnBlcnNwZWN0aXZlPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhPTEvTWF0aC50YW4oZS8yKSxvPTEvKHItbik7cmV0dXJuIHRoaXMubWF0NFswXT1hL3QsdGhpcy5tYXQ0WzFdPTAsdGhpcy5tYXQ0WzJdPTAsdGhpcy5tYXQ0WzNdPTAsdGhpcy5tYXQ0WzRdPTAsdGhpcy5tYXQ0WzVdPWEsdGhpcy5tYXQ0WzZdPTAsdGhpcy5tYXQ0WzddPTAsdGhpcy5tYXQ0WzhdPTAsdGhpcy5tYXQ0WzldPTAsdGhpcy5tYXQ0WzEwXT0obityKSpvLHRoaXMubWF0NFsxMV09LTEsdGhpcy5tYXQ0WzEyXT0wLHRoaXMubWF0NFsxM109MCx0aGlzLm1hdDRbMTRdPTIqbipyKm8sdGhpcy5tYXQ0WzE1XT0wLHRoaXN9LEwuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLm9ydGhvPWZ1bmN0aW9uKGUsdCxyLG4sYSxvKXt2YXIgaT0xLyhlLXQpLHM9MS8oci1uKSxsPTEvKGEtbyk7cmV0dXJuIHRoaXMubWF0NFswXT0tMippLHRoaXMubWF0NFsxXT0wLHRoaXMubWF0NFsyXT0wLHRoaXMubWF0NFszXT0wLHRoaXMubWF0NFs0XT0wLHRoaXMubWF0NFs1XT0tMipzLHRoaXMubWF0NFs2XT0wLHRoaXMubWF0NFs3XT0wLHRoaXMubWF0NFs4XT0wLHRoaXMubWF0NFs5XT0wLHRoaXMubWF0NFsxMF09MipsLHRoaXMubWF0NFsxMV09MCx0aGlzLm1hdDRbMTJdPShlK3QpKmksdGhpcy5tYXQ0WzEzXT0obityKSpzLHRoaXMubWF0NFsxNF09KG8rYSkqbCx0aGlzLm1hdDRbMTVdPTEsdGhpc307dmFyIG89TC5kZWZhdWx0Lk1hdHJpeDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MzJ9XSw4MzpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIG4sYT0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn07YS5kZWZhdWx0LlJlbmRlckJ1ZmZlcj1mdW5jdGlvbihlLHQscixuLGEsbyl7dGhpcy5zaXplPWUsdGhpcy5zcmM9dCx0aGlzLmRzdD1yLHRoaXMuYXR0cj1uLHRoaXMuX3JlbmRlcmVyPWEsdGhpcy5tYXA9b30sYS5kZWZhdWx0LlJlbmRlckJ1ZmZlci5wcm90b3R5cGUuX3ByZXBhcmVCdWZmZXI9ZnVuY3Rpb24oZSx0KXt2YXIgcixuPXQuYXR0cmlidXRlcyxhPXRoaXMuX3JlbmRlcmVyLkdMO3I9ZS5tb2RlbD9lLm1vZGVsOmU7dmFyIG89blt0aGlzLmF0dHJdO2lmKG8pe3ZhciBpPWVbdGhpcy5kc3RdLHM9clt0aGlzLnNyY107aWYoMDxzLmxlbmd0aCl7dmFyIGw9IWk7aWYobCYmKGVbdGhpcy5kc3RdPWk9YS5jcmVhdGVCdWZmZXIoKSksYS5iaW5kQnVmZmVyKGEuQVJSQVlfQlVGRkVSLGkpLGx8fCExIT09ci5kaXJ0eUZsYWdzW3RoaXMuc3JjXSl7dmFyIHA9dGhpcy5tYXAsdT1wP3Aocyk6czt0aGlzLl9yZW5kZXJlci5fYmluZEJ1ZmZlcihpLGEuQVJSQVlfQlVGRkVSLHUpLHIuZGlydHlGbGFnc1t0aGlzLnNyY109ITF9dC5lbmFibGVBdHRyaWIobyx0aGlzLnNpemUpfX19O3ZhciBvPWEuZGVmYXVsdC5SZW5kZXJCdWZmZXI7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvbWFpblwiOjMyfV0sODQ6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKGUpe3JldHVybihpPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9KShlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLHM9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59LGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO2lmKG51bGw9PT1lfHxcIm9iamVjdFwiIT09aShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZSlyZXR1cm57ZGVmYXVsdDplfTt2YXIgdD1wKCk7aWYodCYmdC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3ZhciByPXt9LG49T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiBlKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGEpKXt2YXIgbz1uP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxhKTpudWxsO28mJihvLmdldHx8by5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGEsbyk6clthXT1lW2FdfXIuZGVmYXVsdD1lLHQmJnQuc2V0KGUscik7cmV0dXJuIHJ9KGUoXCIuLi9jb3JlL2NvbnN0YW50c1wiKSk7ZnVuY3Rpb24gcCgpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHA9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1lKFwiLi9wNS5SZW5kZXJCdWZmZXJcIikscy5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmJlZ2luU2hhcGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGU9dm9pZCAwIT09ZT9lOmwuVFJJQU5HTEVfRkFOLHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS5yZXNldCgpLHRoaXN9LHMuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS52ZXJ0ZXg9ZnVuY3Rpb24oZSx0KXt2YXIgcixuLGE7cj1uPWE9MCwzPT09YXJndW1lbnRzLmxlbmd0aD9yPWFyZ3VtZW50c1syXTo0PT09YXJndW1lbnRzLmxlbmd0aD8obj1hcmd1bWVudHNbMl0sYT1hcmd1bWVudHNbM10pOjU9PT1hcmd1bWVudHMubGVuZ3RoJiYocj1hcmd1bWVudHNbMl0sbj1hcmd1bWVudHNbM10sYT1hcmd1bWVudHNbNF0pO3ZhciBvPW5ldyBzLmRlZmF1bHQuVmVjdG9yKGUsdCxyKTt0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMucHVzaChvKTt2YXIgaT10aGlzLmN1ckZpbGxDb2xvcnx8Wy41LC41LC41LDFdO3JldHVybiB0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGV4Q29sb3JzLnB1c2goaVswXSxpWzFdLGlbMl0saVszXSksdGhpcy50ZXh0dXJlTW9kZT09PWwuSU1BR0UmJihudWxsIT09dGhpcy5fdGV4PzA8dGhpcy5fdGV4LndpZHRoJiYwPHRoaXMuX3RleC5oZWlnaHQmJihuLz10aGlzLl90ZXgud2lkdGgsYS89dGhpcy5fdGV4LmhlaWdodCk6bnVsbD09PXRoaXMuX3RleCYmNDw9YXJndW1lbnRzLmxlbmd0aCYmY29uc29sZS53YXJuKFwiWW91IG11c3QgZmlyc3QgY2FsbCB0ZXh0dXJlKCkgYmVmb3JlIHVzaW5nIHZlcnRleCgpIHdpdGggaW1hZ2UgYmFzZWQgdSBhbmQgdiBjb29yZGluYXRlc1wiKSksdGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LnV2cy5wdXNoKG4sYSksdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXhbMF09ZSx0aGlzLmltbWVkaWF0ZU1vZGUuX2JlemllclZlcnRleFsxXT10LHRoaXMuaW1tZWRpYXRlTW9kZS5fYmV6aWVyVmVydGV4WzJdPXIsdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXhbMF09ZSx0aGlzLmltbWVkaWF0ZU1vZGUuX3F1YWRyYXRpY1ZlcnRleFsxXT10LHRoaXMuaW1tZWRpYXRlTW9kZS5fcXVhZHJhdGljVmVydGV4WzJdPXIsdGhpc30scy5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmVuZFNoYXBlPWZ1bmN0aW9uKGUsdCxyLG4sYSxvKXtyZXR1cm4gdGhpcy5pbW1lZGlhdGVNb2RlLnNoYXBlTW9kZT09PWwuUE9JTlRTP3RoaXMuX2RyYXdQb2ludHModGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LnZlcnRpY2VzLHRoaXMuaW1tZWRpYXRlTW9kZS5idWZmZXJzLnBvaW50KToodGhpcy5fcHJvY2Vzc1ZlcnRpY2VzLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9kb0ZpbGwmJjE8dGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LnZlcnRpY2VzLmxlbmd0aCYmdGhpcy5fZHJhd0ltbWVkaWF0ZUZpbGwoKSx0aGlzLl9kb1N0cm9rZSYmMTx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkubGluZVZlcnRpY2VzLmxlbmd0aCYmdGhpcy5fZHJhd0ltbWVkaWF0ZVN0cm9rZSgpLHRoaXMuaXNCZXppZXI9ITEsdGhpcy5pc1F1YWRyYXRpYz0hMSx0aGlzLmlzQ3VydmU9ITEsdGhpcy5pbW1lZGlhdGVNb2RlLl9iZXppZXJWZXJ0ZXgubGVuZ3RoPTAsdGhpcy5pbW1lZGlhdGVNb2RlLl9xdWFkcmF0aWNWZXJ0ZXgubGVuZ3RoPTAsdGhpcy5pbW1lZGlhdGVNb2RlLl9jdXJ2ZVZlcnRleC5sZW5ndGg9MCksdGhpc30scy5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9wcm9jZXNzVmVydGljZXM9ZnVuY3Rpb24oZSl7aWYoMCE9PXRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS52ZXJ0aWNlcy5sZW5ndGgpe3ZhciB0PXRoaXMuX2RvU3Ryb2tlJiZ0aGlzLmRyYXdNb2RlIT09bC5URVhUVVJFLHI9ZT09PWwuQ0xPU0U7dCYmKHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS5lZGdlcz10aGlzLl9jYWxjdWxhdGVFZGdlcyh0aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlLHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS52ZXJ0aWNlcyxyKSx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkuX2VkZ2VzVG9WZXJ0aWNlcygpKTt2YXIgbj10aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlPT09bC5URVNTOyh0aGlzLmlzQmV6aWVyfHx0aGlzLmlzUXVhZHJhdGljfHx0aGlzLmlzQ3VydmV8fG4pJiZ0aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlIT09bC5MSU5FUyYmdGhpcy5fdGVzc2VsYXRlU2hhcGUoKX19LHMuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fY2FsY3VsYXRlRWRnZXM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPVtdLGE9MDtzd2l0Y2goZSl7Y2FzZSBsLlRSSUFOR0xFX1NUUklQOmZvcihhPTA7YTx0Lmxlbmd0aC0yO2ErKyluLnB1c2goW2EsYSsxXSksbi5wdXNoKFthLGErMl0pO24ucHVzaChbYSxhKzFdKTticmVhaztjYXNlIGwuVFJJQU5HTEVTOmZvcihhPTA7YTx0Lmxlbmd0aC0yO2ErPTMpbi5wdXNoKFthLGErMV0pLG4ucHVzaChbYSsxLGErMl0pLG4ucHVzaChbYSsyLGFdKTticmVhaztjYXNlIGwuTElORVM6Zm9yKGE9MDthPHQubGVuZ3RoLTE7YSs9MiluLnB1c2goW2EsYSsxXSk7YnJlYWs7ZGVmYXVsdDpmb3IoYT0wO2E8dC5sZW5ndGgtMTthKyspbi5wdXNoKFthLGErMV0pfXJldHVybiByJiZuLnB1c2goW3QubGVuZ3RoLTEsMF0pLG59LHMuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fdGVzc2VsYXRlU2hhcGU9ZnVuY3Rpb24oKXt0aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlPWwuVFJJQU5HTEVTO3ZhciBlPVtuZXcgRmxvYXQzMkFycmF5KHRoaXMuX3ZUb05BcnJheSh0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMpKV0sdD10aGlzLl90cmlhbmd1bGF0ZShlKTt0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXM9W107Zm9yKHZhciByPTAsbj10Lmxlbmd0aDtyPG47cis9Myl0aGlzLnZlcnRleCh0W3JdLHRbcisxXSx0W3IrMl0pfSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2RyYXdJbW1lZGlhdGVGaWxsPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5HTCx0PXRoaXMuX2dldEltbWVkaWF0ZUZpbGxTaGFkZXIoKTt0aGlzLl9jYWxjdWxhdGVOb3JtYWxzKHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeSksdGhpcy5fc2V0RmlsbFVuaWZvcm1zKHQpO3ZhciByPSEwLG49ITEsYT12b2lkIDA7dHJ5e2Zvcih2YXIgbyxpPXRoaXMuaW1tZWRpYXRlTW9kZS5idWZmZXJzLmZpbGxbU3ltYm9sLml0ZXJhdG9yXSgpOyEocj0obz1pLm5leHQoKSkuZG9uZSk7cj0hMCl7by52YWx1ZS5fcHJlcGFyZUJ1ZmZlcih0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnksdCl9fWNhdGNoKGUpe249ITAsYT1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBhfX10aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlIT09bC5MSU5FX1NUUklQJiZ0aGlzLmltbWVkaWF0ZU1vZGUuc2hhcGVNb2RlIT09bC5MSU5FU3x8KHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGU9bC5UUklBTkdMRV9GQU4pLHRoaXMuX2FwcGx5Q29sb3JCbGVuZCh0aGlzLmN1ckZpbGxDb2xvciksZS5kcmF3QXJyYXlzKHRoaXMuaW1tZWRpYXRlTW9kZS5zaGFwZU1vZGUsMCx0aGlzLmltbWVkaWF0ZU1vZGUuZ2VvbWV0cnkudmVydGljZXMubGVuZ3RoKSx0LnVuYmluZFNoYWRlcigpfSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2RyYXdJbW1lZGlhdGVTdHJva2U9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLkdMLHQ9dGhpcy5fZ2V0SW1tZWRpYXRlU3Ryb2tlU2hhZGVyKCk7dGhpcy5fc2V0U3Ryb2tlVW5pZm9ybXModCk7dmFyIHI9ITAsbj0hMSxhPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9dGhpcy5pbW1lZGlhdGVNb2RlLmJ1ZmZlcnMuc3Ryb2tlW1N5bWJvbC5pdGVyYXRvcl0oKTshKHI9KG89aS5uZXh0KCkpLmRvbmUpO3I9ITApe28udmFsdWUuX3ByZXBhcmVCdWZmZXIodGhpcy5pbW1lZGlhdGVNb2RlLmdlb21ldHJ5LHQpfX1jYXRjaChlKXtuPSEwLGE9ZX1maW5hbGx5e3RyeXtyfHxudWxsPT1pLnJldHVybnx8aS5yZXR1cm4oKX1maW5hbGx5e2lmKG4pdGhyb3cgYX19dGhpcy5fYXBwbHlDb2xvckJsZW5kKHRoaXMuY3VyU3Ryb2tlQ29sb3IpLGUuZHJhd0FycmF5cyhlLlRSSUFOR0xFUywwLHRoaXMuaW1tZWRpYXRlTW9kZS5nZW9tZXRyeS5saW5lVmVydGljZXMubGVuZ3RoKSx0LnVuYmluZFNoYWRlcigpfSxzLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2NhbGN1bGF0ZU5vcm1hbHM9ZnVuY3Rpb24oZSl7ZS52ZXJ0aWNlcy5mb3JFYWNoKGZ1bmN0aW9uKCl7ZS52ZXJ0ZXhOb3JtYWxzLnB1c2gobmV3IHMuZGVmYXVsdC5WZWN0b3IoMCwwLDEpKX0pfTt2YXIgYT1zLmRlZmF1bHQuUmVuZGVyZXJHTDtyLmRlZmF1bHQ9YX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4uL2NvcmUvbWFpblwiOjMyLFwiLi9wNS5SZW5kZXJCdWZmZXJcIjo4M31dLDg1OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixpPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufTtlKFwiLi9wNS5SZW5kZXJlckdMXCIpLGUoXCIuL3A1LlJlbmRlckJ1ZmZlclwiKTt2YXIgYT0wO2kuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5faW5pdEJ1ZmZlckRlZmF1bHRzPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX2ZyZWVCdWZmZXJzKGUpLDFlMzwrK2Epe3ZhciB0PU9iamVjdC5rZXlzKHRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5KVswXTtkZWxldGUgdGhpcy5yZXRhaW5lZE1vZGUuZ2VvbWV0cnlbdF0sYS0tfXJldHVybiB0aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVtlXT17fX0saS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9mcmVlQnVmZmVycz1mdW5jdGlvbihlKXt2YXIgcz10aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVtlXTtpZihzKXtkZWxldGUgdGhpcy5yZXRhaW5lZE1vZGUuZ2VvbWV0cnlbZV0sYS0tO3ZhciBsPXRoaXMuR0w7cy5pbmRleEJ1ZmZlciYmbC5kZWxldGVCdWZmZXIocy5pbmRleEJ1ZmZlciksdCh0aGlzLnJldGFpbmVkTW9kZS5idWZmZXJzLnN0cm9rZSksdCh0aGlzLnJldGFpbmVkTW9kZS5idWZmZXJzLmZpbGwpfWZ1bmN0aW9uIHQoZSl7dmFyIHQ9ITAscj0hMSxuPXZvaWQgMDt0cnl7Zm9yKHZhciBhLG89ZVtTeW1ib2wuaXRlcmF0b3JdKCk7ISh0PShhPW8ubmV4dCgpKS5kb25lKTt0PSEwKXt2YXIgaT1hLnZhbHVlO3NbaS5kc3RdJiYobC5kZWxldGVCdWZmZXIoc1tpLmRzdF0pLHNbaS5kc3RdPW51bGwpfX1jYXRjaChlKXtyPSEwLG49ZX1maW5hbGx5e3RyeXt0fHxudWxsPT1vLnJldHVybnx8by5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgbn19fX0saS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmNyZWF0ZUJ1ZmZlcnM9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLkdMLG49dGhpcy5faW5pdEJ1ZmZlckRlZmF1bHRzKGUpO24ubW9kZWw9dDt2YXIgYT1uLmluZGV4QnVmZmVyO2lmKHQuZmFjZXMubGVuZ3RoKXthPWF8fChuLmluZGV4QnVmZmVyPXIuY3JlYXRlQnVmZmVyKCkpO3ZhciBvPWkuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZmxhdHRlbih0LmZhY2VzKTt0aGlzLl9iaW5kQnVmZmVyKGEsci5FTEVNRU5UX0FSUkFZX0JVRkZFUixvLFVpbnQxNkFycmF5KSxuLnZlcnRleENvdW50PTMqdC5mYWNlcy5sZW5ndGh9ZWxzZSBhJiYoci5kZWxldGVCdWZmZXIoYSksbi5pbmRleEJ1ZmZlcj1udWxsKSxuLnZlcnRleENvdW50PXQudmVydGljZXM/dC52ZXJ0aWNlcy5sZW5ndGg6MDtyZXR1cm4gbi5saW5lVmVydGV4Q291bnQ9dC5saW5lVmVydGljZXM/dC5saW5lVmVydGljZXMubGVuZ3RoOjAsbn0saS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmRyYXdCdWZmZXJzPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuR0wscj10aGlzLnJldGFpbmVkTW9kZS5nZW9tZXRyeVtlXTtpZih0aGlzLl9kb1N0cm9rZSYmMDxyLmxpbmVWZXJ0ZXhDb3VudCl7dmFyIG49dGhpcy5fZ2V0UmV0YWluZWRTdHJva2VTaGFkZXIoKTt0aGlzLl9zZXRTdHJva2VVbmlmb3JtcyhuKTt2YXIgYT0hMCxvPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIHMsbD10aGlzLnJldGFpbmVkTW9kZS5idWZmZXJzLnN0cm9rZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShhPShzPWwubmV4dCgpKS5kb25lKTthPSEwKXtzLnZhbHVlLl9wcmVwYXJlQnVmZmVyKHIsbil9fWNhdGNoKGUpe289ITAsaT1lfWZpbmFsbHl7dHJ5e2F8fG51bGw9PWwucmV0dXJufHxsLnJldHVybigpfWZpbmFsbHl7aWYobyl0aHJvdyBpfX10aGlzLl9hcHBseUNvbG9yQmxlbmQodGhpcy5jdXJTdHJva2VDb2xvciksdGhpcy5fZHJhd0FycmF5cyh0LlRSSUFOR0xFUyxlKSxuLnVuYmluZFNoYWRlcigpfWlmKHRoaXMuX2RvRmlsbCl7dmFyIHA9dGhpcy5fZ2V0UmV0YWluZWRGaWxsU2hhZGVyKCk7dGhpcy5fc2V0RmlsbFVuaWZvcm1zKHApO3ZhciB1PSEwLGM9ITEsZD12b2lkIDA7dHJ5e2Zvcih2YXIgaCxtPXRoaXMucmV0YWluZWRNb2RlLmJ1ZmZlcnMuZmlsbFtTeW1ib2wuaXRlcmF0b3JdKCk7ISh1PShoPW0ubmV4dCgpKS5kb25lKTt1PSEwKXtoLnZhbHVlLl9wcmVwYXJlQnVmZmVyKHIscCl9fWNhdGNoKGUpe2M9ITAsZD1lfWZpbmFsbHl7dHJ5e3V8fG51bGw9PW0ucmV0dXJufHxtLnJldHVybigpfWZpbmFsbHl7aWYoYyl0aHJvdyBkfX1yLmluZGV4QnVmZmVyJiZ0aGlzLl9iaW5kQnVmZmVyKHIuaW5kZXhCdWZmZXIsdC5FTEVNRU5UX0FSUkFZX0JVRkZFUiksdGhpcy5fYXBwbHlDb2xvckJsZW5kKHRoaXMuY3VyRmlsbENvbG9yKSx0aGlzLl9kcmF3RWxlbWVudHModC5UUklBTkdMRVMsZSkscC51bmJpbmRTaGFkZXIoKX1yZXR1cm4gdGhpc30saS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmRyYXdCdWZmZXJzU2NhbGVkPWZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBhPXRoaXMudU1WTWF0cml4LmNvcHkoKTt0cnl7dGhpcy51TVZNYXRyaXguc2NhbGUodCxyLG4pLHRoaXMuZHJhd0J1ZmZlcnMoZSl9ZmluYWxseXt0aGlzLnVNVk1hdHJpeD1hfX0saS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9kcmF3QXJyYXlzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuR0wuZHJhd0FycmF5cyhlLDAsdGhpcy5yZXRhaW5lZE1vZGUuZ2VvbWV0cnlbdF0ubGluZVZlcnRleENvdW50KSx0aGlzfSxpLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2RyYXdFbGVtZW50cz1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5W3RdLG49dGhpcy5HTDtyLmluZGV4QnVmZmVyP24uZHJhd0VsZW1lbnRzKG4uVFJJQU5HTEVTLHIudmVydGV4Q291bnQsbi5VTlNJR05FRF9TSE9SVCwwKTpuLmRyYXdBcnJheXMoZXx8bi5UUklBTkdMRVMsMCxyLnZlcnRleENvdW50KX0saS5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9kcmF3UG9pbnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5HTCxuPXRoaXMuX2dldEltbWVkaWF0ZVBvaW50U2hhZGVyKCk7dGhpcy5fc2V0UG9pbnRVbmlmb3JtcyhuKSx0aGlzLl9iaW5kQnVmZmVyKHQsci5BUlJBWV9CVUZGRVIsdGhpcy5fdlRvTkFycmF5KGUpLEZsb2F0MzJBcnJheSxyLlNUQVRJQ19EUkFXKSxuLmVuYWJsZUF0dHJpYihuLmF0dHJpYnV0ZXMuYVBvc2l0aW9uLDMpLHIuZHJhd0FycmF5cyhyLlBvaW50cywwLGUubGVuZ3RoKSxuLnVuYmluZFNoYWRlcigpfTt2YXIgbz1pLmRlZmF1bHQuUmVuZGVyZXJHTDtyLmRlZmF1bHQ9b30se1wiLi4vY29yZS9tYWluXCI6MzIsXCIuL3A1LlJlbmRlckJ1ZmZlclwiOjgzLFwiLi9wNS5SZW5kZXJlckdMXCI6ODZ9XSw4NjpbZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkoZSl7cmV0dXJuKGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHIuZGVmYXVsdD12b2lkIDA7dmFyIHA9YShlKFwiLi4vY29yZS9tYWluXCIpKSxvPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9cygpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpLG49YShlKFwibGlidGVzc1wiKSk7ZShcIi4vcDUuU2hhZGVyXCIpLGUoXCIuL3A1LkNhbWVyYVwiKSxlKFwiLi4vY29yZS9wNS5SZW5kZXJlclwiKSxlKFwiLi9wNS5NYXRyaXhcIik7ZShcInBhdGhcIik7ZnVuY3Rpb24gcygpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIFdlYWtNYXApcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXA7cmV0dXJuIHM9ZnVuY3Rpb24oKXtyZXR1cm4gZX0sZX1mdW5jdGlvbiBhKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBsKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxyPW5ldyBBcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspclt0XT1lW3RdO3JldHVybiByfX0oZSl8fGZ1bmN0aW9uKGUpe2lmKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSl8fFwiW29iamVjdCBBcmd1bWVudHNdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9KGUpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKX0oKX12YXIgdT1cInByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xcblxcbnVuaWZvcm0gbWF0NCB1Vmlld01hdHJpeDtcXG5cXG51bmlmb3JtIGJvb2wgdVVzZUxpZ2h0aW5nO1xcblxcbnVuaWZvcm0gaW50IHVBbWJpZW50TGlnaHRDb3VudDtcXG51bmlmb3JtIHZlYzMgdUFtYmllbnRDb2xvcls1XTtcXG5cXG51bmlmb3JtIGludCB1RGlyZWN0aW9uYWxMaWdodENvdW50O1xcbnVuaWZvcm0gdmVjMyB1TGlnaHRpbmdEaXJlY3Rpb25bNV07XFxudW5pZm9ybSB2ZWMzIHVEaXJlY3Rpb25hbERpZmZ1c2VDb2xvcnNbNV07XFxudW5pZm9ybSB2ZWMzIHVEaXJlY3Rpb25hbFNwZWN1bGFyQ29sb3JzWzVdO1xcblxcbnVuaWZvcm0gaW50IHVQb2ludExpZ2h0Q291bnQ7XFxudW5pZm9ybSB2ZWMzIHVQb2ludExpZ2h0TG9jYXRpb25bNV07XFxudW5pZm9ybSB2ZWMzIHVQb2ludExpZ2h0RGlmZnVzZUNvbG9yc1s1XTtcXHRcXG51bmlmb3JtIHZlYzMgdVBvaW50TGlnaHRTcGVjdWxhckNvbG9yc1s1XTtcXG5cXG51bmlmb3JtIGludCB1U3BvdExpZ2h0Q291bnQ7XFxudW5pZm9ybSBmbG9hdCB1U3BvdExpZ2h0QW5nbGVbNV07XFxudW5pZm9ybSBmbG9hdCB1U3BvdExpZ2h0Q29uY1s1XTtcXG51bmlmb3JtIHZlYzMgdVNwb3RMaWdodERpZmZ1c2VDb2xvcnNbNV07XFxudW5pZm9ybSB2ZWMzIHVTcG90TGlnaHRTcGVjdWxhckNvbG9yc1s1XTtcXG51bmlmb3JtIHZlYzMgdVNwb3RMaWdodExvY2F0aW9uWzVdO1xcbnVuaWZvcm0gdmVjMyB1U3BvdExpZ2h0RGlyZWN0aW9uWzVdO1xcblxcbnVuaWZvcm0gYm9vbCB1U3BlY3VsYXI7XFxudW5pZm9ybSBmbG9hdCB1U2hpbmluZXNzO1xcblxcbnVuaWZvcm0gZmxvYXQgdUNvbnN0YW50QXR0ZW51YXRpb247XFxudW5pZm9ybSBmbG9hdCB1TGluZWFyQXR0ZW51YXRpb247XFxudW5pZm9ybSBmbG9hdCB1UXVhZHJhdGljQXR0ZW51YXRpb247XFxuXFxuY29uc3QgZmxvYXQgc3BlY3VsYXJGYWN0b3IgPSAyLjA7XFxuY29uc3QgZmxvYXQgZGlmZnVzZUZhY3RvciA9IDAuNzM7XFxuXFxuc3RydWN0IExpZ2h0UmVzdWx0IHtcXG4gIGZsb2F0IHNwZWN1bGFyO1xcbiAgZmxvYXQgZGlmZnVzZTtcXG59O1xcblxcbmZsb2F0IF9waG9uZ1NwZWN1bGFyKFxcbiAgdmVjMyBsaWdodERpcmVjdGlvbixcXG4gIHZlYzMgdmlld0RpcmVjdGlvbixcXG4gIHZlYzMgc3VyZmFjZU5vcm1hbCxcXG4gIGZsb2F0IHNoaW5pbmVzcykge1xcblxcbiAgdmVjMyBSID0gcmVmbGVjdChsaWdodERpcmVjdGlvbiwgc3VyZmFjZU5vcm1hbCk7XFxuICByZXR1cm4gcG93KG1heCgwLjAsIGRvdChSLCB2aWV3RGlyZWN0aW9uKSksIHNoaW5pbmVzcyk7XFxufVxcblxcbmZsb2F0IF9sYW1iZXJ0RGlmZnVzZSh2ZWMzIGxpZ2h0RGlyZWN0aW9uLCB2ZWMzIHN1cmZhY2VOb3JtYWwpIHtcXG4gIHJldHVybiBtYXgoMC4wLCBkb3QoLWxpZ2h0RGlyZWN0aW9uLCBzdXJmYWNlTm9ybWFsKSk7XFxufVxcblxcbkxpZ2h0UmVzdWx0IF9saWdodCh2ZWMzIHZpZXdEaXJlY3Rpb24sIHZlYzMgbm9ybWFsLCB2ZWMzIGxpZ2h0VmVjdG9yKSB7XFxuXFxuICB2ZWMzIGxpZ2h0RGlyID0gbm9ybWFsaXplKGxpZ2h0VmVjdG9yKTtcXG5cXG4gIC8vY29tcHV0ZSBvdXIgZGlmZnVzZSAmIHNwZWN1bGFyIHRlcm1zXFxuICBMaWdodFJlc3VsdCBscjtcXG4gIGlmICh1U3BlY3VsYXIpXFxuICAgIGxyLnNwZWN1bGFyID0gX3Bob25nU3BlY3VsYXIobGlnaHREaXIsIHZpZXdEaXJlY3Rpb24sIG5vcm1hbCwgdVNoaW5pbmVzcyk7XFxuICBsci5kaWZmdXNlID0gX2xhbWJlcnREaWZmdXNlKGxpZ2h0RGlyLCBub3JtYWwpO1xcbiAgcmV0dXJuIGxyO1xcbn1cXG5cXG52b2lkIHRvdGFsTGlnaHQoXFxuICB2ZWMzIG1vZGVsUG9zaXRpb24sXFxuICB2ZWMzIG5vcm1hbCxcXG4gIG91dCB2ZWMzIHRvdGFsRGlmZnVzZSxcXG4gIG91dCB2ZWMzIHRvdGFsU3BlY3VsYXJcXG4pIHtcXG5cXG4gIHRvdGFsU3BlY3VsYXIgPSB2ZWMzKDAuMCk7XFxuXFxuICBpZiAoIXVVc2VMaWdodGluZykge1xcbiAgICB0b3RhbERpZmZ1c2UgPSB2ZWMzKDEuMCk7XFxuICAgIHJldHVybjtcXG4gIH1cXG5cXG4gIHRvdGFsRGlmZnVzZSA9IHZlYzMoMC4wKTtcXG5cXG4gIHZlYzMgdmlld0RpcmVjdGlvbiA9IG5vcm1hbGl6ZSgtbW9kZWxQb3NpdGlvbik7XFxuXFxuICBmb3IgKGludCBqID0gMDsgaiA8IDU7IGorKykge1xcbiAgICBpZiAoaiA8IHVEaXJlY3Rpb25hbExpZ2h0Q291bnQpIHtcXG4gICAgICB2ZWMzIGxpZ2h0VmVjdG9yID0gKHVWaWV3TWF0cml4ICogdmVjNCh1TGlnaHRpbmdEaXJlY3Rpb25bal0sIDAuMCkpLnh5ejtcXG4gICAgICB2ZWMzIGxpZ2h0Q29sb3IgPSB1RGlyZWN0aW9uYWxEaWZmdXNlQ29sb3JzW2pdO1xcbiAgICAgIHZlYzMgc3BlY3VsYXJDb2xvciA9IHVEaXJlY3Rpb25hbFNwZWN1bGFyQ29sb3JzW2pdO1xcbiAgICAgIExpZ2h0UmVzdWx0IHJlc3VsdCA9IF9saWdodCh2aWV3RGlyZWN0aW9uLCBub3JtYWwsIGxpZ2h0VmVjdG9yKTtcXG4gICAgICB0b3RhbERpZmZ1c2UgKz0gcmVzdWx0LmRpZmZ1c2UgKiBsaWdodENvbG9yO1xcbiAgICAgIHRvdGFsU3BlY3VsYXIgKz0gcmVzdWx0LnNwZWN1bGFyICogbGlnaHRDb2xvciAqIHNwZWN1bGFyQ29sb3I7XFxuICAgIH1cXG5cXG4gICAgaWYgKGogPCB1UG9pbnRMaWdodENvdW50KSB7XFxuICAgICAgdmVjMyBsaWdodFBvc2l0aW9uID0gKHVWaWV3TWF0cml4ICogdmVjNCh1UG9pbnRMaWdodExvY2F0aW9uW2pdLCAxLjApKS54eXo7XFxuICAgICAgdmVjMyBsaWdodFZlY3RvciA9IG1vZGVsUG9zaXRpb24gLSBsaWdodFBvc2l0aW9uO1xcbiAgICBcXG4gICAgICAvL2NhbGN1bGF0ZSBhdHRlbnVhdGlvblxcbiAgICAgIGZsb2F0IGxpZ2h0RGlzdGFuY2UgPSBsZW5ndGgobGlnaHRWZWN0b3IpO1xcbiAgICAgIGZsb2F0IGxpZ2h0RmFsbG9mZiA9IDEuMCAvICh1Q29uc3RhbnRBdHRlbnVhdGlvbiArIGxpZ2h0RGlzdGFuY2UgKiB1TGluZWFyQXR0ZW51YXRpb24gKyAobGlnaHREaXN0YW5jZSAqIGxpZ2h0RGlzdGFuY2UpICogdVF1YWRyYXRpY0F0dGVudWF0aW9uKTtcXG4gICAgICB2ZWMzIGxpZ2h0Q29sb3IgPSBsaWdodEZhbGxvZmYgKiB1UG9pbnRMaWdodERpZmZ1c2VDb2xvcnNbal07XFxuICAgICAgdmVjMyBzcGVjdWxhckNvbG9yID0gbGlnaHRGYWxsb2ZmICogdVBvaW50TGlnaHRTcGVjdWxhckNvbG9yc1tqXTtcXG5cXG4gICAgICBMaWdodFJlc3VsdCByZXN1bHQgPSBfbGlnaHQodmlld0RpcmVjdGlvbiwgbm9ybWFsLCBsaWdodFZlY3Rvcik7XFxuICAgICAgdG90YWxEaWZmdXNlICs9IHJlc3VsdC5kaWZmdXNlICogbGlnaHRDb2xvcjtcXG4gICAgICB0b3RhbFNwZWN1bGFyICs9IHJlc3VsdC5zcGVjdWxhciAqIGxpZ2h0Q29sb3IgKiBzcGVjdWxhckNvbG9yO1xcbiAgICB9XFxuXFxuICAgIGlmKGogPCB1U3BvdExpZ2h0Q291bnQpIHtcXG4gICAgICB2ZWMzIGxpZ2h0UG9zaXRpb24gPSAodVZpZXdNYXRyaXggKiB2ZWM0KHVTcG90TGlnaHRMb2NhdGlvbltqXSwgMS4wKSkueHl6O1xcbiAgICAgIHZlYzMgbGlnaHRWZWN0b3IgPSBtb2RlbFBvc2l0aW9uIC0gbGlnaHRQb3NpdGlvbjtcXG4gICAgXFxuICAgICAgZmxvYXQgbGlnaHREaXN0YW5jZSA9IGxlbmd0aChsaWdodFZlY3Rvcik7XFxuICAgICAgZmxvYXQgbGlnaHRGYWxsb2ZmID0gMS4wIC8gKHVDb25zdGFudEF0dGVudWF0aW9uICsgbGlnaHREaXN0YW5jZSAqIHVMaW5lYXJBdHRlbnVhdGlvbiArIChsaWdodERpc3RhbmNlICogbGlnaHREaXN0YW5jZSkgKiB1UXVhZHJhdGljQXR0ZW51YXRpb24pO1xcblxcbiAgICAgIHZlYzMgbGlnaHREaXJlY3Rpb24gPSAodVZpZXdNYXRyaXggKiB2ZWM0KHVTcG90TGlnaHREaXJlY3Rpb25bal0sIDAuMCkpLnh5ejtcXG4gICAgICBmbG9hdCBzcG90RG90ID0gZG90KG5vcm1hbGl6ZShsaWdodFZlY3RvciksIG5vcm1hbGl6ZShsaWdodERpcmVjdGlvbikpO1xcbiAgICAgIGZsb2F0IHNwb3RGYWxsb2ZmO1xcbiAgICAgIGlmKHNwb3REb3QgPCB1U3BvdExpZ2h0QW5nbGVbal0pIHtcXG4gICAgICAgIHNwb3RGYWxsb2ZmID0gMC4wO1xcbiAgICAgIH1cXG4gICAgICBlbHNlIHtcXG4gICAgICAgIHNwb3RGYWxsb2ZmID0gcG93KHNwb3REb3QsIHVTcG90TGlnaHRDb25jW2pdKTtcXG4gICAgICB9XFxuICAgICAgbGlnaHRGYWxsb2ZmICo9IHNwb3RGYWxsb2ZmO1xcblxcbiAgICAgIHZlYzMgbGlnaHRDb2xvciA9IHVTcG90TGlnaHREaWZmdXNlQ29sb3JzW2pdO1xcbiAgICAgIHZlYzMgc3BlY3VsYXJDb2xvciA9IHVTcG90TGlnaHRTcGVjdWxhckNvbG9yc1tqXTtcXG4gICAgIFxcbiAgICAgIExpZ2h0UmVzdWx0IHJlc3VsdCA9IF9saWdodCh2aWV3RGlyZWN0aW9uLCBub3JtYWwsIGxpZ2h0VmVjdG9yKTtcXG4gICAgICBcXG4gICAgICB0b3RhbERpZmZ1c2UgKz0gcmVzdWx0LmRpZmZ1c2UgKiBsaWdodENvbG9yICogbGlnaHRGYWxsb2ZmO1xcbiAgICAgIHRvdGFsU3BlY3VsYXIgKz0gcmVzdWx0LnNwZWN1bGFyICogbGlnaHRDb2xvciAqIHNwZWN1bGFyQ29sb3IgKiBsaWdodEZhbGxvZmY7XFxuICAgIH1cXG4gIH1cXG5cXG4gIHRvdGFsRGlmZnVzZSAqPSBkaWZmdXNlRmFjdG9yO1xcbiAgdG90YWxTcGVjdWxhciAqPSBzcGVjdWxhckZhY3RvcjtcXG59XFxuXCIsYz17aW1tZWRpYXRlVmVydDpcImF0dHJpYnV0ZSB2ZWMzIGFQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjNCBhVmVydGV4Q29sb3I7XFxuXFxudW5pZm9ybSBtYXQ0IHVNb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcbnVuaWZvcm0gZmxvYXQgdVJlc29sdXRpb247XFxudW5pZm9ybSBmbG9hdCB1UG9pbnRTaXplO1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIHZlYzQgcG9zaXRpb25WZWM0ID0gdmVjNChhUG9zaXRpb24sIDEuMCk7XFxuICBnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdU1vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uVmVjNDtcXG4gIHZDb2xvciA9IGFWZXJ0ZXhDb2xvcjtcXG4gIGdsX1BvaW50U2l6ZSA9IHVQb2ludFNpemU7XFxufVxcblwiLHZlcnRleENvbG9yVmVydDpcImF0dHJpYnV0ZSB2ZWMzIGFQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjNCBhVmVydGV4Q29sb3I7XFxuXFxudW5pZm9ybSBtYXQ0IHVNb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIHZlYzQgcG9zaXRpb25WZWM0ID0gdmVjNChhUG9zaXRpb24sIDEuMCk7XFxuICBnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdU1vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uVmVjNDtcXG4gIHZDb2xvciA9IGFWZXJ0ZXhDb2xvcjtcXG59XFxuXCIsdmVydGV4Q29sb3JGcmFnOlwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxudmFyeWluZyB2ZWM0IHZDb2xvcjtcXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2xfRnJhZ0NvbG9yID0gdkNvbG9yO1xcbn1cIixub3JtYWxWZXJ0OlwiYXR0cmlidXRlIHZlYzMgYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIGFOb3JtYWw7XFxuYXR0cmlidXRlIHZlYzIgYVRleENvb3JkO1xcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIG1hdDMgdU5vcm1hbE1hdHJpeDtcXG5cXG52YXJ5aW5nIHZlYzMgdlZlcnRleE5vcm1hbDtcXG52YXJ5aW5nIGhpZ2hwIHZlYzIgdlZlcnRUZXhDb29yZDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgdmVjNCBwb3NpdGlvblZlYzQgPSB2ZWM0KGFQb3NpdGlvbiwgMS4wKTtcXG4gIGdsX1Bvc2l0aW9uID0gdVByb2plY3Rpb25NYXRyaXggKiB1TW9kZWxWaWV3TWF0cml4ICogcG9zaXRpb25WZWM0O1xcbiAgdlZlcnRleE5vcm1hbCA9IG5vcm1hbGl6ZSh2ZWMzKCB1Tm9ybWFsTWF0cml4ICogYU5vcm1hbCApKTtcXG4gIHZWZXJ0VGV4Q29vcmQgPSBhVGV4Q29vcmQ7XFxufVxcblwiLG5vcm1hbEZyYWc6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG52YXJ5aW5nIHZlYzMgdlZlcnRleE5vcm1hbDtcXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2xfRnJhZ0NvbG9yID0gdmVjNCh2VmVydGV4Tm9ybWFsLCAxLjApO1xcbn1cIixiYXNpY0ZyYWc6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG51bmlmb3JtIHZlYzQgdU1hdGVyaWFsQ29sb3I7XFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdsX0ZyYWdDb2xvciA9IHVNYXRlcmlhbENvbG9yO1xcbn1cIixsaWdodFZlcnQ6dStcIi8vIGluY2x1ZGUgbGlnaHRpbmcuZ2xnbFxcblxcbmF0dHJpYnV0ZSB2ZWMzIGFQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMyBhTm9ybWFsO1xcbmF0dHJpYnV0ZSB2ZWMyIGFUZXhDb29yZDtcXG5cXG51bmlmb3JtIG1hdDQgdU1vZGVsVmlld01hdHJpeDtcXG51bmlmb3JtIG1hdDQgdVByb2plY3Rpb25NYXRyaXg7XFxudW5pZm9ybSBtYXQzIHVOb3JtYWxNYXRyaXg7XFxuXFxudmFyeWluZyBoaWdocCB2ZWMyIHZWZXJ0VGV4Q29vcmQ7XFxudmFyeWluZyB2ZWMzIHZEaWZmdXNlQ29sb3I7XFxudmFyeWluZyB2ZWMzIHZTcGVjdWxhckNvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuXFxuICB2ZWM0IHZpZXdNb2RlbFBvc2l0aW9uID0gdU1vZGVsVmlld01hdHJpeCAqIHZlYzQoYVBvc2l0aW9uLCAxLjApO1xcbiAgZ2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIHZpZXdNb2RlbFBvc2l0aW9uO1xcblxcbiAgdmVjMyB2ZXJ0ZXhOb3JtYWwgPSBub3JtYWxpemUodU5vcm1hbE1hdHJpeCAqIGFOb3JtYWwpO1xcbiAgdlZlcnRUZXhDb29yZCA9IGFUZXhDb29yZDtcXG5cXG4gIHRvdGFsTGlnaHQodmlld01vZGVsUG9zaXRpb24ueHl6LCB2ZXJ0ZXhOb3JtYWwsIHZEaWZmdXNlQ29sb3IsIHZTcGVjdWxhckNvbG9yKTtcXG5cXG4gIGZvciAoaW50IGkgPSAwOyBpIDwgODsgaSsrKSB7XFxuICAgIGlmIChpIDwgdUFtYmllbnRMaWdodENvdW50KSB7XFxuICAgICAgdkRpZmZ1c2VDb2xvciArPSB1QW1iaWVudENvbG9yW2ldO1xcbiAgICB9XFxuICB9XFxufVxcblwiLGxpZ2h0VGV4dHVyZUZyYWc6XCJwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudW5pZm9ybSB2ZWM0IHVNYXRlcmlhbENvbG9yO1xcbnVuaWZvcm0gdmVjNCB1VGludDtcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlcjtcXG51bmlmb3JtIGJvb2wgaXNUZXh0dXJlO1xcbnVuaWZvcm0gYm9vbCB1RW1pc3NpdmU7XFxuXFxudmFyeWluZyBoaWdocCB2ZWMyIHZWZXJ0VGV4Q29vcmQ7XFxudmFyeWluZyB2ZWMzIHZEaWZmdXNlQ29sb3I7XFxudmFyeWluZyB2ZWMzIHZTcGVjdWxhckNvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBpZih1RW1pc3NpdmUgJiYgIWlzVGV4dHVyZSkge1xcbiAgICBnbF9GcmFnQ29sb3IgPSB1TWF0ZXJpYWxDb2xvcjtcXG4gIH1cXG4gIGVsc2Uge1xcbiAgICBnbF9GcmFnQ29sb3IgPSBpc1RleHR1cmUgPyB0ZXh0dXJlMkQodVNhbXBsZXIsIHZWZXJ0VGV4Q29vcmQpICogKHVUaW50IC8gdmVjNCgyNTUsIDI1NSwgMjU1LCAyNTUpKSA6IHVNYXRlcmlhbENvbG9yO1xcbiAgICBnbF9GcmFnQ29sb3IucmdiID0gZ2xfRnJhZ0NvbG9yLnJnYiAqIHZEaWZmdXNlQ29sb3IgKyB2U3BlY3VsYXJDb2xvcjtcXG4gIH1cXG59XCIscGhvbmdWZXJ0OlwicHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbnByZWNpc2lvbiBoaWdocCBpbnQ7XFxuXFxuYXR0cmlidXRlIHZlYzMgYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIGFOb3JtYWw7XFxuYXR0cmlidXRlIHZlYzIgYVRleENvb3JkO1xcblxcbnVuaWZvcm0gdmVjMyB1QW1iaWVudENvbG9yWzVdO1xcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIG1hdDMgdU5vcm1hbE1hdHJpeDtcXG51bmlmb3JtIGludCB1QW1iaWVudExpZ2h0Q291bnQ7XFxuXFxudmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxudmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG52YXJ5aW5nIHZlYzMgdlZpZXdQb3NpdGlvbjtcXG52YXJ5aW5nIHZlYzMgdkFtYmllbnRDb2xvcjtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcblxcbiAgdmVjNCB2aWV3TW9kZWxQb3NpdGlvbiA9IHVNb2RlbFZpZXdNYXRyaXggKiB2ZWM0KGFQb3NpdGlvbiwgMS4wKTtcXG5cXG4gIC8vIFBhc3MgdmFyeWluZ3MgdG8gZnJhZ21lbnQgc2hhZGVyXFxuICB2Vmlld1Bvc2l0aW9uID0gdmlld01vZGVsUG9zaXRpb24ueHl6O1xcbiAgZ2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIHZpZXdNb2RlbFBvc2l0aW9uOyAgXFxuXFxuICB2Tm9ybWFsID0gdU5vcm1hbE1hdHJpeCAqIGFOb3JtYWw7XFxuICB2VGV4Q29vcmQgPSBhVGV4Q29vcmQ7XFxuXFxuICAvLyBUT0RPOiB0aGlzIHNob3VsZCBiZSBhIHVuaWZvcm1cXG4gIHZBbWJpZW50Q29sb3IgPSB2ZWMzKDAuMCk7XFxuICBmb3IgKGludCBpID0gMDsgaSA8IDU7IGkrKykge1xcbiAgICBpZiAoaSA8IHVBbWJpZW50TGlnaHRDb3VudCkge1xcbiAgICAgIHZBbWJpZW50Q29sb3IgKz0gdUFtYmllbnRDb2xvcltpXTtcXG4gICAgfVxcbiAgfVxcbn1cXG5cIixwaG9uZ0ZyYWc6dStcIi8vIGluY2x1ZGUgbGlnaHRpbmcuZ2xzbFxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xcblxcbnVuaWZvcm0gdmVjNCB1TWF0ZXJpYWxDb2xvcjtcXG51bmlmb3JtIHZlYzQgdVRpbnQ7XFxudW5pZm9ybSBzYW1wbGVyMkQgdVNhbXBsZXI7XFxudW5pZm9ybSBib29sIGlzVGV4dHVyZTtcXG51bmlmb3JtIGJvb2wgdUVtaXNzaXZlO1xcblxcbnZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xcbnZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxudmFyeWluZyB2ZWMzIHZWaWV3UG9zaXRpb247XFxudmFyeWluZyB2ZWMzIHZBbWJpZW50Q29sb3I7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG5cXG4gIHZlYzMgZGlmZnVzZTtcXG4gIHZlYzMgc3BlY3VsYXI7XFxuICB0b3RhbExpZ2h0KHZWaWV3UG9zaXRpb24sIG5vcm1hbGl6ZSh2Tm9ybWFsKSwgZGlmZnVzZSwgc3BlY3VsYXIpO1xcblxcbiAgaWYodUVtaXNzaXZlICYmICFpc1RleHR1cmUpIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gdU1hdGVyaWFsQ29sb3I7XFxuICB9XFxuICBlbHNlIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gaXNUZXh0dXJlID8gdGV4dHVyZTJEKHVTYW1wbGVyLCB2VGV4Q29vcmQpICogKHVUaW50IC8gdmVjNCgyNTUsIDI1NSwgMjU1LCAyNTUpKSA6IHVNYXRlcmlhbENvbG9yO1xcbiAgICBnbF9GcmFnQ29sb3IucmdiID0gZ2xfRnJhZ0NvbG9yLnJnYiAqIChkaWZmdXNlICsgdkFtYmllbnRDb2xvcikgKyBzcGVjdWxhcjtcXG4gIH1cXG59XCIsZm9udFZlcnQ6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG5cXG5hdHRyaWJ1dGUgdmVjMyBhUG9zaXRpb247XFxuYXR0cmlidXRlIHZlYzIgYVRleENvb3JkO1xcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG5cXG51bmlmb3JtIHZlYzQgdUdseXBoUmVjdDtcXG51bmlmb3JtIGZsb2F0IHVHbHlwaE9mZnNldDtcXG5cXG52YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbnZhcnlpbmcgZmxvYXQgdztcXG5cXG52b2lkIG1haW4oKSB7XFxuICB2ZWM0IHBvc2l0aW9uVmVjNCA9IHZlYzQoYVBvc2l0aW9uLCAxLjApO1xcblxcbiAgLy8gc2NhbGUgYnkgdGhlIHNpemUgb2YgdGhlIGdseXBoJ3MgcmVjdGFuZ2xlXFxuICBwb3NpdGlvblZlYzQueHkgKj0gdUdseXBoUmVjdC56dyAtIHVHbHlwaFJlY3QueHk7XFxuXFxuICAvLyBtb3ZlIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGdseXBoXFxuICBwb3NpdGlvblZlYzQueHkgKz0gdUdseXBoUmVjdC54eTtcXG5cXG4gIC8vIG1vdmUgdG8gdGhlIGxldHRlcidzIGxpbmUgb2Zmc2V0XFxuICBwb3NpdGlvblZlYzQueCArPSB1R2x5cGhPZmZzZXQ7XFxuICBcXG4gIGdsX1Bvc2l0aW9uID0gdVByb2plY3Rpb25NYXRyaXggKiB1TW9kZWxWaWV3TWF0cml4ICogcG9zaXRpb25WZWM0O1xcbiAgdlRleENvb3JkID0gYVRleENvb3JkO1xcbiAgdyA9IGdsX1Bvc2l0aW9uLnc7XFxufVxcblwiLGZvbnRGcmFnOlwiI2V4dGVuc2lvbiBHTF9PRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXMgOiBlbmFibGVcXG5wcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG5cXG4jaWYgMFxcbiAgLy8gc2ltdWxhdGUgaW50ZWdlciBtYXRoIHVzaW5nIGZsb2F0c1xcblxcdCNkZWZpbmUgaW50IGZsb2F0XFxuXFx0I2RlZmluZSBpdmVjMiB2ZWMyXFxuXFx0I2RlZmluZSBJTlQoeCkgZmxvYXQoeClcXG5cXG5cXHRpbnQgaWZsb29yKGZsb2F0IHYpIHsgcmV0dXJuIGZsb29yKHYpOyB9XFxuXFx0aXZlYzIgaWZsb29yKHZlYzIgdikgeyByZXR1cm4gZmxvb3Iodik7IH1cXG5cXG4jZWxzZVxcbiAgLy8gdXNlIG5hdGl2ZSBpbnRlZ2VyIG1hdGhcXG5cXHRwcmVjaXNpb24gaGlnaHAgaW50O1xcblxcdCNkZWZpbmUgSU5UKHgpIHhcXG5cXG5cXHRpbnQgaWZsb29yKGZsb2F0IHYpIHsgcmV0dXJuIGludCh2KTsgfVxcblxcdGludCBpZmxvb3IoaW50IHYpIHsgcmV0dXJuIHY7IH1cXG5cXHRpdmVjMiBpZmxvb3IodmVjMiB2KSB7IHJldHVybiBpdmVjMih2KTsgfVxcblxcbiNlbmRpZlxcblxcbnVuaWZvcm0gc2FtcGxlcjJEIHVTYW1wbGVyU3Ryb2tlcztcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlclJvd1N0cm9rZXM7XFxudW5pZm9ybSBzYW1wbGVyMkQgdVNhbXBsZXJSb3dzO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHVTYW1wbGVyQ29sU3Ryb2tlcztcXG51bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlckNvbHM7XFxuXFxudW5pZm9ybSBpdmVjMiB1U3Ryb2tlSW1hZ2VTaXplO1xcbnVuaWZvcm0gaXZlYzIgdUNlbGxzSW1hZ2VTaXplO1xcbnVuaWZvcm0gaXZlYzIgdUdyaWRJbWFnZVNpemU7XFxuXFxudW5pZm9ybSBpdmVjMiB1R3JpZE9mZnNldDtcXG51bmlmb3JtIGl2ZWMyIHVHcmlkU2l6ZTtcXG51bmlmb3JtIHZlYzQgdU1hdGVyaWFsQ29sb3I7XFxuXFxudmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG5cXG4vLyBzb21lIGhlbHBlciBmdW5jdGlvbnNcXG5pbnQgcm91bmQoZmxvYXQgdikgeyByZXR1cm4gaWZsb29yKHYgKyAwLjUpOyB9XFxuaXZlYzIgcm91bmQodmVjMiB2KSB7IHJldHVybiBpZmxvb3IodiArIDAuNSk7IH1cXG5mbG9hdCBzYXR1cmF0ZShmbG9hdCB2KSB7IHJldHVybiBjbGFtcCh2LCAwLjAsIDEuMCk7IH1cXG52ZWMyIHNhdHVyYXRlKHZlYzIgdikgeyByZXR1cm4gY2xhbXAodiwgMC4wLCAxLjApOyB9XFxuXFxuaW50IG11bChmbG9hdCB2MSwgaW50IHYyKSB7XFxuICByZXR1cm4gaWZsb29yKHYxICogZmxvYXQodjIpKTtcXG59XFxuXFxuaXZlYzIgbXVsKHZlYzIgdjEsIGl2ZWMyIHYyKSB7XFxuICByZXR1cm4gaWZsb29yKHYxICogdmVjMih2MikgKyAwLjUpO1xcbn1cXG5cXG4vLyB1bnBhY2sgYSAxNi1iaXQgaW50ZWdlciBmcm9tIGEgZmxvYXQgdmVjMlxcbmludCBnZXRJbnQxNih2ZWMyIHYpIHtcXG4gIGl2ZWMyIGl2ID0gcm91bmQodiAqIDI1NS4wKTtcXG4gIHJldHVybiBpdi54ICogSU5UKDEyOCkgKyBpdi55O1xcbn1cXG5cXG52ZWMyIHBpeGVsU2NhbGU7XFxudmVjMiBjb3ZlcmFnZSA9IHZlYzIoMC4wKTtcXG52ZWMyIHdlaWdodCA9IHZlYzIoMC41KTtcXG5jb25zdCBmbG9hdCBtaW5EaXN0YW5jZSA9IDEuMC84MTkyLjA7XFxuY29uc3QgZmxvYXQgaGFyZG5lc3MgPSAxLjA1OyAvLyBhbW91bnQgb2YgYW50aWFsaWFzXFxuXFxuLy8gdGhlIG1heGltdW0gbnVtYmVyIG9mIGN1cnZlcyBpbiBhIGdseXBoXFxuY29uc3QgaW50IE4gPSBJTlQoMjUwKTtcXG5cXG4vLyByZXRyaWV2ZXMgYW4gaW5kZXhlZCBwaXhlbCBmcm9tIGEgc2FtcGxlclxcbnZlYzQgZ2V0VGV4ZWwoc2FtcGxlcjJEIHNhbXBsZXIsIGludCBwb3MsIGl2ZWMyIHNpemUpIHtcXG4gIGludCB3aWR0aCA9IHNpemUueDtcXG4gIGludCB5ID0gaWZsb29yKHBvcyAvIHdpZHRoKTtcXG4gIGludCB4ID0gcG9zIC0geSAqIHdpZHRoOyAgLy8gcG9zICUgd2lkdGhcXG5cXG4gIHJldHVybiB0ZXh0dXJlMkQoc2FtcGxlciwgKHZlYzIoeCwgeSkgKyAwLjUpIC8gdmVjMihzaXplKSk7XFxufVxcblxcbnZvaWQgY2FsdWxhdGVDcm9zc2luZ3ModmVjMiBwMCwgdmVjMiBwMSwgdmVjMiBwMiwgb3V0IHZlYzIgQzEsIG91dCB2ZWMyIEMyKSB7XFxuXFxuICAvLyBnZXQgdGhlIGNvZWZmaWNpZW50cyBvZiB0aGUgcXVhZHJhdGljIGluIHRcXG4gIHZlYzIgYSA9IHAwIC0gcDEgKiAyLjAgKyBwMjtcXG4gIHZlYzIgYiA9IHAwIC0gcDE7XFxuICB2ZWMyIGMgPSBwMCAtIHZUZXhDb29yZDtcXG5cXG4gIC8vIGZvdW5kIG91dCB3aGljaCB2YWx1ZXMgb2YgJ3QnIGl0IGNyb3NzZXMgdGhlIGF4ZXNcXG4gIHZlYzIgc3VyZCA9IHNxcnQobWF4KHZlYzIoMC4wKSwgYiAqIGIgLSBhICogYykpO1xcbiAgdmVjMiB0MSA9ICgoYiAtIHN1cmQpIC8gYSkueXg7XFxuICB2ZWMyIHQyID0gKChiICsgc3VyZCkgLyBhKS55eDtcXG5cXG4gIC8vIGFwcHJveGltYXRlIHN0cmFpZ2h0IGxpbmVzIHRvIGF2b2lkIHJvdW5kaW5nIGVycm9yc1xcbiAgaWYgKGFicyhhLnkpIDwgMC4wMDEpXFxuICAgIHQxLnggPSB0Mi54ID0gYy55IC8gKDIuMCAqIGIueSk7XFxuXFxuICBpZiAoYWJzKGEueCkgPCAwLjAwMSlcXG4gICAgdDEueSA9IHQyLnkgPSBjLnggLyAoMi4wICogYi54KTtcXG5cXG4gIC8vIHBsdWcgaW50byBxdWFkcmF0aWMgZm9ybXVsYSB0byBmaW5kIHRoZSBjb3JyZGluYXRlcyBvZiB0aGUgY3Jvc3NpbmdzXFxuICBDMSA9ICgoYSAqIHQxIC0gYiAqIDIuMCkgKiB0MSArIGMpICogcGl4ZWxTY2FsZTtcXG4gIEMyID0gKChhICogdDIgLSBiICogMi4wKSAqIHQyICsgYykgKiBwaXhlbFNjYWxlO1xcbn1cXG5cXG52b2lkIGNvdmVyYWdlWCh2ZWMyIHAwLCB2ZWMyIHAxLCB2ZWMyIHAyKSB7XFxuXFxuICB2ZWMyIEMxLCBDMjtcXG4gIGNhbHVsYXRlQ3Jvc3NpbmdzKHAwLCBwMSwgcDIsIEMxLCBDMik7XFxuXFxuICAvLyBkZXRlcm1pbmUgb24gd2hpY2ggc2lkZSBvZiB0aGUgeC1heGlzIHRoZSBwb2ludHMgbGllXFxuICBib29sIHkwID0gcDAueSA+IHZUZXhDb29yZC55O1xcbiAgYm9vbCB5MSA9IHAxLnkgPiB2VGV4Q29vcmQueTtcXG4gIGJvb2wgeTIgPSBwMi55ID4gdlRleENvb3JkLnk7XFxuXFxuICAvLyBjb3VsZCB3ZWIgYmUgdW5kZXIgdGhlIGN1cnZlIChhZnRlciB0MSk/XFxuICBpZiAoeTEgPyAheTIgOiB5MCkge1xcbiAgICAvLyBhZGQgdGhlIGNvdmVyYWdlIGZvciB0MVxcbiAgICBjb3ZlcmFnZS54ICs9IHNhdHVyYXRlKEMxLnggKyAwLjUpO1xcbiAgICAvLyBjYWxjdWxhdGUgdGhlIGFudGktYWxpYXNpbmcgZm9yIHQxXFxuICAgIHdlaWdodC54ID0gbWluKHdlaWdodC54LCBhYnMoQzEueCkpO1xcbiAgfVxcblxcbiAgLy8gYXJlIHdlIG91dHNpZGUgdGhlIGN1cnZlIChhZnRlciB0Mik/XFxuICBpZiAoeTEgPyAheTAgOiB5Mikge1xcbiAgICAvLyBzdWJ0cmFjdCB0aGUgY292ZXJhZ2UgZm9yIHQyXFxuICAgIGNvdmVyYWdlLnggLT0gc2F0dXJhdGUoQzIueCArIDAuNSk7XFxuICAgIC8vIGNhbGN1bGF0ZSB0aGUgYW50aS1hbGlhc2luZyBmb3IgdDJcXG4gICAgd2VpZ2h0LnggPSBtaW4od2VpZ2h0LngsIGFicyhDMi54KSk7XFxuICB9XFxufVxcblxcbi8vIHRoaXMgaXMgZXNzZW50aWFsbHkgdGhlIHNhbWUgYXMgY292ZXJhZ2VYLCBidXQgd2l0aCB0aGUgYXhlcyBzd2FwcGVkXFxudm9pZCBjb3ZlcmFnZVkodmVjMiBwMCwgdmVjMiBwMSwgdmVjMiBwMikge1xcblxcbiAgdmVjMiBDMSwgQzI7XFxuICBjYWx1bGF0ZUNyb3NzaW5ncyhwMCwgcDEsIHAyLCBDMSwgQzIpO1xcblxcbiAgYm9vbCB4MCA9IHAwLnggPiB2VGV4Q29vcmQueDtcXG4gIGJvb2wgeDEgPSBwMS54ID4gdlRleENvb3JkLng7XFxuICBib29sIHgyID0gcDIueCA+IHZUZXhDb29yZC54O1xcblxcbiAgaWYgKHgxID8gIXgyIDogeDApIHtcXG4gICAgY292ZXJhZ2UueSAtPSBzYXR1cmF0ZShDMS55ICsgMC41KTtcXG4gICAgd2VpZ2h0LnkgPSBtaW4od2VpZ2h0LnksIGFicyhDMS55KSk7XFxuICB9XFxuXFxuICBpZiAoeDEgPyAheDAgOiB4Mikge1xcbiAgICBjb3ZlcmFnZS55ICs9IHNhdHVyYXRlKEMyLnkgKyAwLjUpO1xcbiAgICB3ZWlnaHQueSA9IG1pbih3ZWlnaHQueSwgYWJzKEMyLnkpKTtcXG4gIH1cXG59XFxuXFxudm9pZCBtYWluKCkge1xcblxcbiAgLy8gY2FsY3VsYXRlIHRoZSBwaXhlbCBzY2FsZSBiYXNlZCBvbiBzY3JlZW4tY29vcmRpbmF0ZXNcXG4gIHBpeGVsU2NhbGUgPSBoYXJkbmVzcyAvIGZ3aWR0aCh2VGV4Q29vcmQpO1xcblxcbiAgLy8gd2hpY2ggZ3JpZCBjZWxsIGlzIHRoaXMgcGl4ZWwgaW4/XFxuICBpdmVjMiBncmlkQ29vcmQgPSBpZmxvb3IodlRleENvb3JkICogdmVjMih1R3JpZFNpemUpKTtcXG5cXG4gIC8vIGludGVyc2VjdCBjdXJ2ZXMgaW4gdGhpcyByb3dcXG4gIHtcXG4gICAgLy8gdGhlIGluZGV4IGludG8gdGhlIHJvdyBpbmZvIGJpdG1hcFxcbiAgICBpbnQgcm93SW5kZXggPSBncmlkQ29vcmQueSArIHVHcmlkT2Zmc2V0Lnk7XFxuICAgIC8vIGZldGNoIHRoZSBpbmZvIHRleGVsXFxuICAgIHZlYzQgcm93SW5mbyA9IGdldFRleGVsKHVTYW1wbGVyUm93cywgcm93SW5kZXgsIHVHcmlkSW1hZ2VTaXplKTtcXG4gICAgLy8gdW5wYWNrIHRoZSByb3dJbmZvXFxuICAgIGludCByb3dTdHJva2VJbmRleCA9IGdldEludDE2KHJvd0luZm8ueHkpO1xcbiAgICBpbnQgcm93U3Ryb2tlQ291bnQgPSBnZXRJbnQxNihyb3dJbmZvLnp3KTtcXG5cXG4gICAgZm9yIChpbnQgaVJvd1N0cm9rZSA9IElOVCgwKTsgaVJvd1N0cm9rZSA8IE47IGlSb3dTdHJva2UrKykge1xcbiAgICAgIGlmIChpUm93U3Ryb2tlID49IHJvd1N0cm9rZUNvdW50KVxcbiAgICAgICAgYnJlYWs7XFxuXFxuICAgICAgLy8gZWFjaCBzdHJva2UgaXMgbWFkZSB1cCBvZiAzIHBvaW50czogdGhlIHN0YXJ0IGFuZCBjb250cm9sIHBvaW50XFxuICAgICAgLy8gYW5kIHRoZSBzdGFydCBvZiB0aGUgbmV4dCBjdXJ2ZS5cXG4gICAgICAvLyBmZXRjaCB0aGUgaW5kaWNlcyBvZiB0aGlzIHBhaXIgb2Ygc3Ryb2tlczpcXG4gICAgICB2ZWM0IHN0cm9rZUluZGljZXMgPSBnZXRUZXhlbCh1U2FtcGxlclJvd1N0cm9rZXMsIHJvd1N0cm9rZUluZGV4KyssIHVDZWxsc0ltYWdlU2l6ZSk7XFxuXFxuICAgICAgLy8gdW5wYWNrIHRoZSBzdHJva2UgaW5kZXhcXG4gICAgICBpbnQgc3Ryb2tlUG9zID0gZ2V0SW50MTYoc3Ryb2tlSW5kaWNlcy54eSk7XFxuXFxuICAgICAgLy8gZmV0Y2ggdGhlIHR3byBzdHJva2VzXFxuICAgICAgdmVjNCBzdHJva2UwID0gZ2V0VGV4ZWwodVNhbXBsZXJTdHJva2VzLCBzdHJva2VQb3MgKyBJTlQoMCksIHVTdHJva2VJbWFnZVNpemUpO1xcbiAgICAgIHZlYzQgc3Ryb2tlMSA9IGdldFRleGVsKHVTYW1wbGVyU3Ryb2tlcywgc3Ryb2tlUG9zICsgSU5UKDEpLCB1U3Ryb2tlSW1hZ2VTaXplKTtcXG5cXG4gICAgICAvLyBjYWxjdWxhdGUgdGhlIGNvdmVyYWdlXFxuICAgICAgY292ZXJhZ2VYKHN0cm9rZTAueHksIHN0cm9rZTAuencsIHN0cm9rZTEueHkpO1xcbiAgICB9XFxuICB9XFxuXFxuICAvLyBpbnRlcnNlY3QgY3VydmVzIGluIHRoaXMgY29sdW1uXFxuICB7XFxuICAgIGludCBjb2xJbmRleCA9IGdyaWRDb29yZC54ICsgdUdyaWRPZmZzZXQueDtcXG4gICAgdmVjNCBjb2xJbmZvID0gZ2V0VGV4ZWwodVNhbXBsZXJDb2xzLCBjb2xJbmRleCwgdUdyaWRJbWFnZVNpemUpO1xcbiAgICBpbnQgY29sU3Ryb2tlSW5kZXggPSBnZXRJbnQxNihjb2xJbmZvLnh5KTtcXG4gICAgaW50IGNvbFN0cm9rZUNvdW50ID0gZ2V0SW50MTYoY29sSW5mby56dyk7XFxuICAgIFxcbiAgICBmb3IgKGludCBpQ29sU3Ryb2tlID0gSU5UKDApOyBpQ29sU3Ryb2tlIDwgTjsgaUNvbFN0cm9rZSsrKSB7XFxuICAgICAgaWYgKGlDb2xTdHJva2UgPj0gY29sU3Ryb2tlQ291bnQpXFxuICAgICAgICBicmVhaztcXG5cXG4gICAgICB2ZWM0IHN0cm9rZUluZGljZXMgPSBnZXRUZXhlbCh1U2FtcGxlckNvbFN0cm9rZXMsIGNvbFN0cm9rZUluZGV4KyssIHVDZWxsc0ltYWdlU2l6ZSk7XFxuXFxuICAgICAgaW50IHN0cm9rZVBvcyA9IGdldEludDE2KHN0cm9rZUluZGljZXMueHkpO1xcbiAgICAgIHZlYzQgc3Ryb2tlMCA9IGdldFRleGVsKHVTYW1wbGVyU3Ryb2tlcywgc3Ryb2tlUG9zICsgSU5UKDApLCB1U3Ryb2tlSW1hZ2VTaXplKTtcXG4gICAgICB2ZWM0IHN0cm9rZTEgPSBnZXRUZXhlbCh1U2FtcGxlclN0cm9rZXMsIHN0cm9rZVBvcyArIElOVCgxKSwgdVN0cm9rZUltYWdlU2l6ZSk7XFxuICAgICAgY292ZXJhZ2VZKHN0cm9rZTAueHksIHN0cm9rZTAuencsIHN0cm9rZTEueHkpO1xcbiAgICB9XFxuICB9XFxuXFxuICB3ZWlnaHQgPSBzYXR1cmF0ZSgxLjAgLSB3ZWlnaHQgKiAyLjApO1xcbiAgZmxvYXQgZGlzdGFuY2UgPSBtYXgod2VpZ2h0LnggKyB3ZWlnaHQueSwgbWluRGlzdGFuY2UpOyAvLyBtYW5oYXR0YW4gYXBwcm94LlxcbiAgZmxvYXQgYW50aWFsaWFzID0gYWJzKGRvdChjb3ZlcmFnZSwgd2VpZ2h0KSAvIGRpc3RhbmNlKTtcXG4gIGZsb2F0IGNvdmVyID0gbWluKGFicyhjb3ZlcmFnZS54KSwgYWJzKGNvdmVyYWdlLnkpKTtcXG4gIGdsX0ZyYWdDb2xvciA9IHVNYXRlcmlhbENvbG9yO1xcbiAgZ2xfRnJhZ0NvbG9yLmEgKj0gc2F0dXJhdGUobWF4KGFudGlhbGlhcywgY292ZXIpKTtcXG59XCIsbGluZVZlcnQ6XCIvKlxcbiAgUGFydCBvZiB0aGUgUHJvY2Vzc2luZyBwcm9qZWN0IC0gaHR0cDovL3Byb2Nlc3Npbmcub3JnXFxuICBDb3B5cmlnaHQgKGMpIDIwMTItMTUgVGhlIFByb2Nlc3NpbmcgRm91bmRhdGlvblxcbiAgQ29weXJpZ2h0IChjKSAyMDA0LTEyIEJlbiBGcnkgYW5kIENhc2V5IFJlYXNcXG4gIENvcHlyaWdodCAoYykgMjAwMS0wNCBNYXNzYWNodXNldHRzIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5XFxuICBUaGlzIGxpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yXFxuICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljXFxuICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCB2ZXJzaW9uIDIuMS5cXG4gIFRoaXMgbGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxcbiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcXG4gIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VXFxuICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxcbiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsXFxuICBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgbGlicmFyeTsgaWYgbm90LCB3cml0ZSB0byB0aGVcXG4gIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLiwgNTkgVGVtcGxlIFBsYWNlLCBTdWl0ZSAzMzAsXFxuICBCb3N0b24sIE1BICAwMjExMS0xMzA3ICBVU0FcXG4qL1xcblxcbiNkZWZpbmUgUFJPQ0VTU0lOR19MSU5FX1NIQURFUlxcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIGZsb2F0IHVTdHJva2VXZWlnaHQ7XFxuXFxudW5pZm9ybSB2ZWM0IHVWaWV3cG9ydDtcXG51bmlmb3JtIGludCB1UGVyc3BlY3RpdmU7XFxuXFxuYXR0cmlidXRlIHZlYzQgYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWM0IGFEaXJlY3Rpb247XFxuICBcXG52b2lkIG1haW4oKSB7XFxuICAvLyB1c2luZyBhIHNjYWxlIDwxIG1vdmVzIHRoZSBsaW5lcyB0b3dhcmRzIHRoZSBjYW1lcmFcXG4gIC8vIGluIG9yZGVyIHRvIHByZXZlbnQgcG9wcGluZyBlZmZlY3RzIGR1ZSB0byBoYWxmIG9mXFxuICAvLyB0aGUgbGluZSBkaXNhcHBlYXJpbmcgYmVoaW5kIHRoZSBnZW9tZXRyeSBmYWNlcy5cXG4gIHZlYzMgc2NhbGUgPSB2ZWMzKDAuOTk5NSk7XFxuXFxuICB2ZWM0IHBvc3AgPSB1TW9kZWxWaWV3TWF0cml4ICogYVBvc2l0aW9uO1xcbiAgdmVjNCBwb3NxID0gdU1vZGVsVmlld01hdHJpeCAqIChhUG9zaXRpb24gKyB2ZWM0KGFEaXJlY3Rpb24ueHl6LCAwKSk7XFxuXFxuICAvLyBNb3ZpbmcgdmVydGljZXMgc2xpZ2h0bHkgdG93YXJkIHRoZSBjYW1lcmFcXG4gIC8vIHRvIGF2b2lkIGRlcHRoLWZpZ2h0aW5nIHdpdGggdGhlIGZpbGwgdHJpYW5nbGVzLlxcbiAgLy8gRGlzY3Vzc2VkIGhlcmU6XFxuICAvLyBodHRwOi8vd3d3Lm9wZW5nbC5vcmcvZGlzY3Vzc2lvbl9ib2FyZHMvdWJidGhyZWFkcy5waHA/dWJiPXNob3dmbGF0Jk51bWJlcj0yNTI4NDggIFxcbiAgcG9zcC54eXogPSBwb3NwLnh5eiAqIHNjYWxlO1xcbiAgcG9zcS54eXogPSBwb3NxLnh5eiAqIHNjYWxlO1xcblxcbiAgdmVjNCBwID0gdVByb2plY3Rpb25NYXRyaXggKiBwb3NwO1xcbiAgdmVjNCBxID0gdVByb2plY3Rpb25NYXRyaXggKiBwb3NxO1xcblxcbiAgLy8gZm9ybXVsYSB0byBjb252ZXJ0IGZyb20gY2xpcCBzcGFjZSAocmFuZ2UgLTEuLjEpIHRvIHNjcmVlbiBzcGFjZSAocmFuZ2UgMC4uW3dpZHRoIG9yIGhlaWdodF0pXFxuICAvLyBzY3JlZW5fcCA9IChwLnh5L3AudyArIDwxLDE+KSAqIDAuNSAqIHVWaWV3cG9ydC56d1xcblxcbiAgLy8gcHJldmVudCBkaXZpc2lvbiBieSBXIGJ5IHRyYW5zZm9ybWluZyB0aGUgdGFuZ2VudCBmb3JtdWxhIChkaXYgYnkgMCBjYXVzZXNcXG4gIC8vIHRoZSBsaW5lIHRvIGRpc2FwcGVhciwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9jZXNzaW5nL3Byb2Nlc3NpbmcvaXNzdWVzLzUxODMpXFxuICAvLyB0ID0gc2NyZWVuX3EgLSBzY3JlZW5fcFxcbiAgLy9cXG4gIC8vIHRhbmdlbnQgaXMgbm9ybWFsaXplZCBhbmQgd2UgZG9uJ3QgY2FyZSB3aGljaCBhRGlyZWN0aW9uIGl0IHBvaW50cyB0byAoKy0pXFxuICAvLyB0ID0gKy0gbm9ybWFsaXplKCBzY3JlZW5fcSAtIHNjcmVlbl9wIClcXG4gIC8vIHQgPSArLSBub3JtYWxpemUoIChxLnh5L3Eudys8MSwxPikqMC41KnVWaWV3cG9ydC56dyAtIChwLnh5L3Audys8MSwxPikqMC41KnVWaWV3cG9ydC56dyApXFxuICAvL1xcbiAgLy8gZXh0cmFjdCBjb21tb24gZmFjdG9yLCA8MSwxPiAtIDwxLDE+IGNhbmNlbHMgb3V0XFxuICAvLyB0ID0gKy0gbm9ybWFsaXplKCAocS54eS9xLncgLSBwLnh5L3AudykgKiAwLjUgKiB1Vmlld3BvcnQuencgKVxcbiAgLy9cXG4gIC8vIGNvbnZlcnQgdG8gY29tbW9uIGRpdmlzb3JcXG4gIC8vIHQgPSArLSBub3JtYWxpemUoICgocS54eSpwLncgLSBwLnh5KnEudykgLyAocC53KnEudykpICogMC41ICogdVZpZXdwb3J0Lnp3IClcXG4gIC8vXFxuICAvLyByZW1vdmUgdGhlIGNvbW1vbiBzY2FsYXIgZGl2aXNvci9mYWN0b3IsIG5vdCBuZWVkZWQgZHVlIHRvIG5vcm1hbGl6ZSBhbmQgKy1cXG4gIC8vIChrZWVwIHVWaWV3cG9ydCAtIGNhbid0IHJlbW92ZSBiZWNhdXNlIGl0IGhhcyBkaWZmZXJlbnQgY29tcG9uZW50cyBmb3IgeCBhbmQgeVxcbiAgLy8gIGFuZCBjb3JyZWN0cyBmb3IgYXNwZWN0IHJhdGlvLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb2Nlc3NpbmcvcHJvY2Vzc2luZy9pc3N1ZXMvNTE4MSlcXG4gIC8vIHQgPSArLSBub3JtYWxpemUoIChxLnh5KnAudyAtIHAueHkqcS53KSAqIHVWaWV3cG9ydC56dyApXFxuXFxuICB2ZWMyIHRhbmdlbnQgPSBub3JtYWxpemUoKHEueHkqcC53IC0gcC54eSpxLncpICogdVZpZXdwb3J0Lnp3KTtcXG5cXG4gIC8vIGZsaXAgdGFuZ2VudCB0byBub3JtYWwgKGl0J3MgYWxyZWFkeSBub3JtYWxpemVkKVxcbiAgdmVjMiBub3JtYWwgPSB2ZWMyKC10YW5nZW50LnksIHRhbmdlbnQueCk7XFxuXFxuICBmbG9hdCB0aGlja25lc3MgPSBhRGlyZWN0aW9uLncgKiB1U3Ryb2tlV2VpZ2h0O1xcbiAgdmVjMiBvZmZzZXQgPSBub3JtYWwgKiB0aGlja25lc3MgLyAyLjA7XFxuXFxuICB2ZWMyIGN1clBlcnNwU2NhbGU7XFxuXFxuICBpZih1UGVyc3BlY3RpdmUgPT0gMSkge1xcbiAgICAvLyBQZXJzcGVjdGl2ZSAtLS1cXG4gICAgLy8gY29udmVydCBmcm9tIHdvcmxkIHRvIGNsaXAgYnkgbXVsdGlwbHlpbmcgd2l0aCBwcm9qZWN0aW9uIHNjYWxpbmcgZmFjdG9yXFxuICAgIC8vIHRvIGdldCB0aGUgcmlnaHQgdGhpY2tuZXNzIChzZWUgaHR0cHM6Ly9naXRodWIuY29tL3Byb2Nlc3NpbmcvcHJvY2Vzc2luZy9pc3N1ZXMvNTE4MilcXG4gICAgLy8gaW52ZXJ0IFksIHByb2plY3Rpb25zIGluIFByb2Nlc3NpbmcgaW52ZXJ0IFlcXG4gICAgY3VyUGVyc3BTY2FsZSA9ICh1UHJvamVjdGlvbk1hdHJpeCAqIHZlYzQoMSwgLTEsIDAsIDApKS54eTtcXG4gIH0gZWxzZSB7XFxuICAgIC8vIE5vIFBlcnNwZWN0aXZlIC0tLVxcbiAgICAvLyBtdWx0aXBseSBieSBXICh0byBjYW5jZWwgb3V0IGRpdmlzaW9uIGJ5IFcgbGF0ZXIgaW4gdGhlIHBpcGVsaW5lKSBhbmRcXG4gICAgLy8gY29udmVydCBmcm9tIHNjcmVlbiB0byBjbGlwIChkZXJpdmVkIGZyb20gY2xpcCB0byBzY3JlZW4gYWJvdmUpXFxuICAgIGN1clBlcnNwU2NhbGUgPSBwLncgLyAoMC41ICogdVZpZXdwb3J0Lnp3KTtcXG4gIH1cXG5cXG4gIGdsX1Bvc2l0aW9uLnh5ID0gcC54eSArIG9mZnNldC54eSAqIGN1clBlcnNwU2NhbGU7XFxuICBnbF9Qb3NpdGlvbi56dyA9IHAuenc7XFxufVxcblwiLGxpbmVGcmFnOlwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxucHJlY2lzaW9uIG1lZGl1bXAgaW50O1xcblxcbnVuaWZvcm0gdmVjNCB1TWF0ZXJpYWxDb2xvcjtcXG5cXG52b2lkIG1haW4oKSB7XFxuICBnbF9GcmFnQ29sb3IgPSB1TWF0ZXJpYWxDb2xvcjtcXG59XCIscG9pbnRWZXJ0OlwiYXR0cmlidXRlIHZlYzMgYVBvc2l0aW9uO1xcbnVuaWZvcm0gZmxvYXQgdVBvaW50U2l6ZTtcXG52YXJ5aW5nIGZsb2F0IHZTdHJva2VXZWlnaHQ7XFxudW5pZm9ybSBtYXQ0IHVNb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcbnZvaWQgbWFpbigpIHtcXG5cXHR2ZWM0IHBvc2l0aW9uVmVjNCA9ICB2ZWM0KGFQb3NpdGlvbiwgMS4wKTtcXG5cXHRnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdU1vZGVsVmlld01hdHJpeCAqIHBvc2l0aW9uVmVjNDtcXG5cXHRnbF9Qb2ludFNpemUgPSB1UG9pbnRTaXplO1xcblxcdHZTdHJva2VXZWlnaHQgPSB1UG9pbnRTaXplO1xcbn1cIixwb2ludEZyYWc6XCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG5wcmVjaXNpb24gbWVkaXVtcCBpbnQ7XFxudW5pZm9ybSB2ZWM0IHVNYXRlcmlhbENvbG9yO1xcbnZhcnlpbmcgZmxvYXQgdlN0cm9rZVdlaWdodDtcXG5cXG52b2lkIG1haW4oKXtcXG5cXHRmbG9hdCBtYXNrID0gMC4wO1xcblxcblxcdC8vIG1ha2UgYSBjaXJjdWxhciBtYXNrIHVzaW5nIHRoZSBnbF9Qb2ludENvb3JkIChnb2VzIGZyb20gMCAtIDEgb24gYSBwb2ludClcXG4gICAgLy8gbWlnaHQgYmUgYWJsZSB0byBnZXQgYSBuaWNlciBlZGdlIG9uIGJpZyBzdHJva2V3ZWlnaHRzIHdpdGggc21vb3Roc3RlcCBidXQgc2xpZ2h0bHkgbGVzcyBwZXJmb3JtYW50XFxuXFxuXFx0bWFzayA9IHN0ZXAoMC45OCwgbGVuZ3RoKGdsX1BvaW50Q29vcmQgKiAyLjAgLSAxLjApKTtcXG5cXG5cXHQvLyBpZiBzdHJva2VXZWlnaHQgaXMgMSBvciBsZXNzIGxldHMganVzdCBkcmF3IGEgc3F1YXJlXFxuXFx0Ly8gdGhpcyBwcmV2ZW50cyB3ZWlyZCBhcnRpZmFjdGluZyBmcm9tIGNhcnZpbmcgY2lyY2xlcyB3aGVuIG91ciBwb2ludHMgYXJlIHJlYWxseSBzbWFsbFxcblxcdC8vIGlmIHN0cm9rZVdlaWdodCBpcyBsYXJnZXIgdGhhbiAxLCB3ZSBqdXN0IHVzZSBpdCBhcyBpc1xcblxcblxcdG1hc2sgPSBtaXgoMC4wLCBtYXNrLCBjbGFtcChmbG9vcih2U3Ryb2tlV2VpZ2h0IC0gMC41KSwwLjAsMS4wKSk7XFxuXFxuXFx0Ly8gdGhyb3cgYXdheSB0aGUgYm9yZGVycyBvZiB0aGUgbWFza1xcbiAgICAvLyBvdGhlcndpc2Ugd2UgZ2V0IHdlaXJkIGFscGhhIGJsZW5kaW5nIGlzc3Vlc1xcblxcblxcdGlmKG1hc2sgPiAwLjk4KXtcXG4gICAgICBkaXNjYXJkO1xcbiAgXFx0fVxcblxcbiAgXFx0Z2xfRnJhZ0NvbG9yID0gdmVjNCh1TWF0ZXJpYWxDb2xvci5yZ2IgKiAoMS4wIC0gbWFzayksIHVNYXRlcmlhbENvbG9yLmEpIDtcXG59XCJ9O3AuZGVmYXVsdC5SZW5kZXJlckdMPWZ1bmN0aW9uKGUsdCxyLG4pe3JldHVybiBwLmRlZmF1bHQuUmVuZGVyZXIuY2FsbCh0aGlzLGUsdCxyKSx0aGlzLl9zZXRBdHRyaWJ1dGVEZWZhdWx0cyh0KSx0aGlzLl9pbml0Q29udGV4dCgpLHRoaXMuaXNQM0Q9ITAsdGhpcy5HTD10aGlzLmRyYXdpbmdDb250ZXh0LHRoaXMuX3BJbnN0Ll9zZXRQcm9wZXJ0eShcImRyYXdpbmdDb250ZXh0XCIsdGhpcy5kcmF3aW5nQ29udGV4dCksdGhpcy5faXNFcmFzaW5nPSExLHRoaXMuX2VuYWJsZUxpZ2h0aW5nPSExLHRoaXMuYW1iaWVudExpZ2h0Q29sb3JzPVtdLHRoaXMuc3BlY3VsYXJDb2xvcnM9WzEsMSwxXSx0aGlzLmRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zPVtdLHRoaXMuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnM9W10sdGhpcy5kaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnM9W10sdGhpcy5wb2ludExpZ2h0UG9zaXRpb25zPVtdLHRoaXMucG9pbnRMaWdodERpZmZ1c2VDb2xvcnM9W10sdGhpcy5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnM9W10sdGhpcy5zcG90TGlnaHRQb3NpdGlvbnM9W10sdGhpcy5zcG90TGlnaHREaXJlY3Rpb25zPVtdLHRoaXMuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycz1bXSx0aGlzLnNwb3RMaWdodFNwZWN1bGFyQ29sb3JzPVtdLHRoaXMuc3BvdExpZ2h0QW5nbGU9W10sdGhpcy5zcG90TGlnaHRDb25jPVtdLHRoaXMuZHJhd01vZGU9by5GSUxMLHRoaXMuY3VyRmlsbENvbG9yPXRoaXMuX2NhY2hlZEZpbGxTdHlsZT1bMSwxLDEsMV0sdGhpcy5jdXJTdHJva2VDb2xvcj10aGlzLl9jYWNoZWRTdHJva2VTdHlsZT1bMCwwLDAsMV0sdGhpcy5jdXJCbGVuZE1vZGU9by5CTEVORCx0aGlzLl9jYWNoZWRCbGVuZE1vZGU9dm9pZCAwLHRoaXMuYmxlbmRFeHQ9dGhpcy5HTC5nZXRFeHRlbnNpb24oXCJFWFRfYmxlbmRfbWlubWF4XCIpLHRoaXMuX2lzQmxlbmRpbmc9ITEsdGhpcy5fdXNlU3BlY3VsYXJNYXRlcmlhbD0hMSx0aGlzLl91c2VFbWlzc2l2ZU1hdGVyaWFsPSExLHRoaXMuX3VzZU5vcm1hbE1hdGVyaWFsPSExLHRoaXMuX3VzZVNoaW5pbmVzcz0xLHRoaXMuX3RpbnQ9WzI1NSwyNTUsMjU1LDI1NV0sdGhpcy5jb25zdGFudEF0dGVudWF0aW9uPTEsdGhpcy5saW5lYXJBdHRlbnVhdGlvbj0wLHRoaXMucXVhZHJhdGljQXR0ZW51YXRpb249MCx0aGlzLnVNVk1hdHJpeD1uZXcgcC5kZWZhdWx0Lk1hdHJpeCx0aGlzLnVQTWF0cml4PW5ldyBwLmRlZmF1bHQuTWF0cml4LHRoaXMudU5NYXRyaXg9bmV3IHAuZGVmYXVsdC5NYXRyaXgoXCJtYXQzXCIpLHRoaXMuX2N1ckNhbWVyYT1uZXcgcC5kZWZhdWx0LkNhbWVyYSh0aGlzKSx0aGlzLl9jdXJDYW1lcmEuX2NvbXB1dGVDYW1lcmFEZWZhdWx0U2V0dGluZ3MoKSx0aGlzLl9jdXJDYW1lcmEuX3NldERlZmF1bHRDYW1lcmEoKSx0aGlzLl9kZWZhdWx0TGlnaHRTaGFkZXI9dm9pZCAwLHRoaXMuX2RlZmF1bHRJbW1lZGlhdGVNb2RlU2hhZGVyPXZvaWQgMCx0aGlzLl9kZWZhdWx0Tm9ybWFsU2hhZGVyPXZvaWQgMCx0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXI9dm9pZCAwLHRoaXMuX2RlZmF1bHRQb2ludFNoYWRlcj12b2lkIDAsdGhpcy51c2VyRmlsbFNoYWRlcj12b2lkIDAsdGhpcy51c2VyU3Ryb2tlU2hhZGVyPXZvaWQgMCx0aGlzLnVzZXJQb2ludFNoYWRlcj12b2lkIDAsdGhpcy5yZXRhaW5lZE1vZGU9e2dlb21ldHJ5Ont9LGJ1ZmZlcnM6e3N0cm9rZTpbbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMyxcImxpbmVWZXJ0aWNlc1wiLFwibGluZVZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl9mbGF0dGVuKSxuZXcgcC5kZWZhdWx0LlJlbmRlckJ1ZmZlcig0LFwibGluZU5vcm1hbHNcIixcImxpbmVOb3JtYWxCdWZmZXJcIixcImFEaXJlY3Rpb25cIix0aGlzLHRoaXMuX2ZsYXR0ZW4pXSxmaWxsOltuZXcgcC5kZWZhdWx0LlJlbmRlckJ1ZmZlcigzLFwidmVydGljZXNcIixcInZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl92VG9OQXJyYXkpLG5ldyBwLmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0ZXhOb3JtYWxzXCIsXCJub3JtYWxCdWZmZXJcIixcImFOb3JtYWxcIix0aGlzLHRoaXMuX3ZUb05BcnJheSksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoNCxcInZlcnRleENvbG9yc1wiLFwiY29sb3JCdWZmZXJcIixcImFNYXRlcmlhbENvbG9yXCIsdGhpcyksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMyxcInZlcnRleEFtYmllbnRzXCIsXCJhbWJpZW50QnVmZmVyXCIsXCJhQW1iaWVudENvbG9yXCIsdGhpcyksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMixcInV2c1wiLFwidXZCdWZmZXJcIixcImFUZXhDb29yZFwiLHRoaXMsdGhpcy5fZmxhdHRlbildLHRleHQ6W25ldyBwLmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0aWNlc1wiLFwidmVydGV4QnVmZmVyXCIsXCJhUG9zaXRpb25cIix0aGlzLHRoaXMuX3ZUb05BcnJheSksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMixcInV2c1wiLFwidXZCdWZmZXJcIixcImFUZXhDb29yZFwiLHRoaXMsdGhpcy5fZmxhdHRlbildfX0sdGhpcy5pbW1lZGlhdGVNb2RlPXtnZW9tZXRyeTpuZXcgcC5kZWZhdWx0Lkdlb21ldHJ5LHNoYXBlTW9kZTpvLlRSSUFOR0xFX0ZBTixfYmV6aWVyVmVydGV4OltdLF9xdWFkcmF0aWNWZXJ0ZXg6W10sX2N1cnZlVmVydGV4OltdLGJ1ZmZlcnM6e2ZpbGw6W25ldyBwLmRlZmF1bHQuUmVuZGVyQnVmZmVyKDMsXCJ2ZXJ0aWNlc1wiLFwidmVydGV4QnVmZmVyXCIsXCJhUG9zaXRpb25cIix0aGlzLHRoaXMuX3ZUb05BcnJheSksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMyxcInZlcnRleE5vcm1hbHNcIixcIm5vcm1hbEJ1ZmZlclwiLFwiYU5vcm1hbFwiLHRoaXMsdGhpcy5fdlRvTkFycmF5KSxuZXcgcC5kZWZhdWx0LlJlbmRlckJ1ZmZlcig0LFwidmVydGV4Q29sb3JzXCIsXCJjb2xvckJ1ZmZlclwiLFwiYVZlcnRleENvbG9yXCIsdGhpcyksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMyxcInZlcnRleEFtYmllbnRzXCIsXCJhbWJpZW50QnVmZmVyXCIsXCJhQW1iaWVudENvbG9yXCIsdGhpcyksbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMixcInV2c1wiLFwidXZCdWZmZXJcIixcImFUZXhDb29yZFwiLHRoaXMsdGhpcy5fZmxhdHRlbildLHN0cm9rZTpbbmV3IHAuZGVmYXVsdC5SZW5kZXJCdWZmZXIoMyxcImxpbmVWZXJ0aWNlc1wiLFwibGluZVZlcnRleEJ1ZmZlclwiLFwiYVBvc2l0aW9uXCIsdGhpcyx0aGlzLl9mbGF0dGVuKSxuZXcgcC5kZWZhdWx0LlJlbmRlckJ1ZmZlcig0LFwibGluZU5vcm1hbHNcIixcImxpbmVOb3JtYWxCdWZmZXJcIixcImFEaXJlY3Rpb25cIix0aGlzLHRoaXMuX2ZsYXR0ZW4pXSxwb2ludDp0aGlzLkdMLmNyZWF0ZUJ1ZmZlcigpfX0sdGhpcy5wb2ludFNpemU9NSx0aGlzLmN1clN0cm9rZVdlaWdodD0xLHRoaXMudGV4dHVyZXM9W10sdGhpcy50ZXh0dXJlTW9kZT1vLklNQUdFLHRoaXMudGV4dHVyZVdyYXBYPW8uQ0xBTVAsdGhpcy50ZXh0dXJlV3JhcFk9by5DTEFNUCx0aGlzLl90ZXg9bnVsbCx0aGlzLl9jdXJ2ZVRpZ2h0bmVzcz02LHRoaXMuX2xvb2tVcFRhYmxlQmV6aWVyPVtdLHRoaXMuX2xvb2tVcFRhYmxlUXVhZHJhdGljPVtdLHRoaXMuX2x1dEJlemllckRldGFpbD0wLHRoaXMuX2x1dFF1YWRyYXRpY0RldGFpbD0wLHRoaXMuX3Rlc3N5PXRoaXMuX2luaXRUZXNzeSgpLHRoaXMuZm9udEluZm9zPXt9LHRoaXMuX2N1clNoYWRlcj12b2lkIDAsdGhpc30scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlPU9iamVjdC5jcmVhdGUocC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZSkscC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9zZXRBdHRyaWJ1dGVEZWZhdWx0cz1mdW5jdGlvbihlKXt2YXIgdD17YWxwaGE6ITAsZGVwdGg6ITAsc3RlbmNpbDohMCxhbnRpYWxpYXM6bmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFwic2FmYXJpXCIpLHByZW11bHRpcGxpZWRBbHBoYTohMSxwcmVzZXJ2ZURyYXdpbmdCdWZmZXI6ITAscGVyUGl4ZWxMaWdodGluZzohMH07bnVsbD09PWUuX2dsQXR0cmlidXRlcz9lLl9nbEF0dHJpYnV0ZXM9dDplLl9nbEF0dHJpYnV0ZXM9T2JqZWN0LmFzc2lnbih0LGUuX2dsQXR0cmlidXRlcyl9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5faW5pdENvbnRleHQ9ZnVuY3Rpb24oKXt0cnl7aWYodGhpcy5kcmF3aW5nQ29udGV4dD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwid2ViZ2xcIix0aGlzLl9wSW5zdC5fZ2xBdHRyaWJ1dGVzKXx8dGhpcy5jYW52YXMuZ2V0Q29udGV4dChcImV4cGVyaW1lbnRhbC13ZWJnbFwiLHRoaXMuX3BJbnN0Ll9nbEF0dHJpYnV0ZXMpLG51bGw9PT10aGlzLmRyYXdpbmdDb250ZXh0KXRocm93IG5ldyBFcnJvcihcIkVycm9yIGNyZWF0aW5nIHdlYmdsIGNvbnRleHRcIik7dmFyIGU9dGhpcy5kcmF3aW5nQ29udGV4dDtlLmVuYWJsZShlLkRFUFRIX1RFU1QpLGUuZGVwdGhGdW5jKGUuTEVRVUFMKSxlLnZpZXdwb3J0KDAsMCxlLmRyYXdpbmdCdWZmZXJXaWR0aCxlLmRyYXdpbmdCdWZmZXJIZWlnaHQpLHRoaXMuX3ZpZXdwb3J0PXRoaXMuZHJhd2luZ0NvbnRleHQuZ2V0UGFyYW1ldGVyKHRoaXMuZHJhd2luZ0NvbnRleHQuVklFV1BPUlQpfWNhdGNoKGUpe3Rocm93IGV9fSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX3Jlc2V0Q29udGV4dD1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMud2lkdGgsbj10aGlzLmhlaWdodCxhPXRoaXMuY2FudmFzLmlkLG89dGhpcy5fcEluc3QgaW5zdGFuY2VvZiBwLmRlZmF1bHQuR3JhcGhpY3M7aWYobyl7dmFyIGk9dGhpcy5fcEluc3Q7aS5jYW52YXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChpLmNhbnZhcyksaS5jYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSwoaS5fcEluc3QuX3VzZXJOb2RlfHxkb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZChpLmNhbnZhcykscC5kZWZhdWx0LkVsZW1lbnQuY2FsbChpLGkuY2FudmFzLGkuX3BJbnN0KSxpLndpZHRoPXIsaS5oZWlnaHQ9bn1lbHNle3ZhciBzPXRoaXMuY2FudmFzO3MmJnMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzKSwocz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpKS5pZD1hLHRoaXMuX3BJbnN0Ll91c2VyTm9kZT90aGlzLl9wSW5zdC5fdXNlck5vZGUuYXBwZW5kQ2hpbGQocyk6ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKSx0aGlzLl9wSW5zdC5jYW52YXM9c312YXIgbD1uZXcgcC5kZWZhdWx0LlJlbmRlcmVyR0wodGhpcy5fcEluc3QuY2FudmFzLHRoaXMuX3BJbnN0LCFvKTt0aGlzLl9wSW5zdC5fc2V0UHJvcGVydHkoXCJfcmVuZGVyZXJcIixsKSxsLnJlc2l6ZShyLG4pLGwuX2FwcGx5RGVmYXVsdHMoKSxvfHx0aGlzLl9wSW5zdC5fZWxlbWVudHMucHVzaChsKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5hcHBseSh3aW5kb3cuX3JlbmRlcmVyLGUpfSwwKX0scC5kZWZhdWx0LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGVzPWZ1bmN0aW9uKGUsdCl7aWYodm9pZCAwIT09dGhpcy5fZ2xBdHRyaWJ1dGVzKXt2YXIgcj0hMDtpZih2b2lkIDAhPT10PyhudWxsPT09dGhpcy5fZ2xBdHRyaWJ1dGVzJiYodGhpcy5fZ2xBdHRyaWJ1dGVzPXt9KSx0aGlzLl9nbEF0dHJpYnV0ZXNbZV0hPT10JiYodGhpcy5fZ2xBdHRyaWJ1dGVzW2VdPXQscj0hMSkpOmUgaW5zdGFuY2VvZiBPYmplY3QmJnRoaXMuX2dsQXR0cmlidXRlcyE9PWUmJih0aGlzLl9nbEF0dHJpYnV0ZXM9ZSxyPSExKSx0aGlzLl9yZW5kZXJlci5pc1AzRCYmIXIpe2lmKCF0aGlzLl9zZXR1cERvbmUpZm9yKHZhciBuIGluIHRoaXMuX3JlbmRlcmVyLnJldGFpbmVkTW9kZS5nZW9tZXRyeSlpZih0aGlzLl9yZW5kZXJlci5yZXRhaW5lZE1vZGUuZ2VvbWV0cnkuaGFzT3duUHJvcGVydHkobikpcmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcihcIlNvcnJ5LCBDb3VsZCBub3Qgc2V0IHRoZSBhdHRyaWJ1dGVzLCB5b3UgbmVlZCB0byBjYWxsIHNldEF0dHJpYnV0ZXMoKSBiZWZvcmUgY2FsbGluZyB0aGUgb3RoZXIgZHJhd2luZyBtZXRob2RzIGluIHNldHVwKClcIik7dGhpcy5wdXNoKCksdGhpcy5fcmVuZGVyZXIuX3Jlc2V0Q29udGV4dCgpLHRoaXMucG9wKCksdGhpcy5fcmVuZGVyZXIuX2N1ckNhbWVyYSYmKHRoaXMuX3JlbmRlcmVyLl9jdXJDYW1lcmEuX3JlbmRlcmVyPXRoaXMuX3JlbmRlcmVyKX19ZWxzZSBjb25zb2xlLmxvZyhcIllvdSBhcmUgdHJ5aW5nIHRvIHVzZSBzZXRBdHRyaWJ1dGVzIG9uIGEgcDUuR3JhcGhpY3Mgb2JqZWN0IHRoYXQgZG9lcyBub3QgdXNlIGEgV0VCR0wgcmVuZGVyZXIuXCIpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe3RoaXMudU1WTWF0cml4LnNldCh0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMF0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzFdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsyXSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbM10sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzRdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs1XSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbNl0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzddLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFs4XSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbOV0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzEwXSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTFdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxMl0sdGhpcy5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0WzEzXSx0aGlzLl9jdXJDYW1lcmEuY2FtZXJhTWF0cml4Lm1hdDRbMTRdLHRoaXMuX2N1ckNhbWVyYS5jYW1lcmFNYXRyaXgubWF0NFsxNV0pLHRoaXMuYW1iaWVudExpZ2h0Q29sb3JzLmxlbmd0aD0wLHRoaXMuc3BlY3VsYXJDb2xvcnM9WzEsMSwxXSx0aGlzLmRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25zLmxlbmd0aD0wLHRoaXMuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoPTAsdGhpcy5kaXJlY3Rpb25hbExpZ2h0U3BlY3VsYXJDb2xvcnMubGVuZ3RoPTAsdGhpcy5wb2ludExpZ2h0UG9zaXRpb25zLmxlbmd0aD0wLHRoaXMucG9pbnRMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoPTAsdGhpcy5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMubGVuZ3RoPTAsdGhpcy5zcG90TGlnaHRQb3NpdGlvbnMubGVuZ3RoPTAsdGhpcy5zcG90TGlnaHREaXJlY3Rpb25zLmxlbmd0aD0wLHRoaXMuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycy5sZW5ndGg9MCx0aGlzLnNwb3RMaWdodFNwZWN1bGFyQ29sb3JzLmxlbmd0aD0wLHRoaXMuc3BvdExpZ2h0QW5nbGUubGVuZ3RoPTAsdGhpcy5zcG90TGlnaHRDb25jLmxlbmd0aD0wLHRoaXMuX2VuYWJsZUxpZ2h0aW5nPSExLHRoaXMuX3RpbnQ9WzI1NSwyNTUsMjU1LDI1NV0sdGhpcy5HTC5jbGVhcih0aGlzLkdMLkRFUFRIX0JVRkZFUl9CSVQpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuYmFja2dyb3VuZD1mdW5jdGlvbigpe3ZhciBlLHQ9KGU9dGhpcy5fcEluc3QpLmNvbG9yLmFwcGx5KGUsYXJndW1lbnRzKSxyPXQubGV2ZWxzWzBdLzI1NSxuPXQubGV2ZWxzWzFdLzI1NSxhPXQubGV2ZWxzWzJdLzI1NSxvPXQubGV2ZWxzWzNdLzI1NTt0aGlzLkdMLmNsZWFyQ29sb3IocixuLGEsbyksdGhpcy5HTC5jbGVhcih0aGlzLkdMLkNPTE9SX0JVRkZFUl9CSVQpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZmlsbD1mdW5jdGlvbihlLHQscixuKXt2YXIgYT1wLmRlZmF1bHQucHJvdG90eXBlLmNvbG9yLmFwcGx5KHRoaXMuX3BJbnN0LGFyZ3VtZW50cyk7dGhpcy5jdXJGaWxsQ29sb3I9YS5fYXJyYXksdGhpcy5kcmF3TW9kZT1vLkZJTEwsdGhpcy5fdXNlTm9ybWFsTWF0ZXJpYWw9ITEsdGhpcy5fdGV4PW51bGx9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5zdHJva2U9ZnVuY3Rpb24oZSx0LHIsbil7YXJndW1lbnRzWzNdPTI1NTt2YXIgYT1wLmRlZmF1bHQucHJvdG90eXBlLmNvbG9yLmFwcGx5KHRoaXMuX3BJbnN0LGFyZ3VtZW50cyk7dGhpcy5jdXJTdHJva2VDb2xvcj1hLl9hcnJheX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnN0cm9rZUNhcD1mdW5jdGlvbihlKXtjb25zb2xlLmVycm9yKFwiU29ycnksIHN0cm9rZUNhcCgpIGlzIG5vdCB5ZXQgaW1wbGVtZW50ZWQgaW4gV0VCR0wgbW9kZVwiKX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnN0cm9rZUpvaW49ZnVuY3Rpb24oZSl7Y29uc29sZS5lcnJvcihcIlNvcnJ5LCBzdHJva2VKb2luKCkgaXMgbm90IHlldCBpbXBsZW1lbnRlZCBpbiBXRUJHTCBtb2RlXCIpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZmlsdGVyPWZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoXCJmaWx0ZXIoKSBkb2VzIG5vdCB3b3JrIGluIFdFQkdMIG1vZGVcIil9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5ibGVuZE1vZGU9ZnVuY3Rpb24oZSl7ZT09PW8uREFSS0VTVHx8ZT09PW8uTElHSFRFU1R8fGU9PT1vLkFERHx8ZT09PW8uQkxFTkR8fGU9PT1vLlNVQlRSQUNUfHxlPT09by5TQ1JFRU58fGU9PT1vLkVYQ0xVU0lPTnx8ZT09PW8uUkVQTEFDRXx8ZT09PW8uTVVMVElQTFl8fGU9PT1vLlJFTU9WRT90aGlzLmN1ckJsZW5kTW9kZT1lOmUhPT1vLkJVUk4mJmUhPT1vLk9WRVJMQVkmJmUhPT1vLkhBUkRfTElHSFQmJmUhPT1vLlNPRlRfTElHSFQmJmUhPT1vLkRPREdFfHxjb25zb2xlLndhcm4oXCJCVVJOLCBPVkVSTEFZLCBIQVJEX0xJR0hULCBTT0ZUX0xJR0hULCBhbmQgRE9ER0Ugb25seSB3b3JrIGZvciBibGVuZE1vZGUgaW4gMkQgbW9kZS5cIil9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5lcmFzZT1mdW5jdGlvbihlLHQpe3RoaXMuX2lzRXJhc2luZ3x8KHRoaXMuX2FwcGx5QmxlbmRNb2RlKG8uUkVNT1ZFKSx0aGlzLl9pc0VyYXNpbmc9ITAsdGhpcy5fY2FjaGVkRmlsbFN0eWxlPXRoaXMuY3VyRmlsbENvbG9yLnNsaWNlKCksdGhpcy5jdXJGaWxsQ29sb3I9WzEsMSwxLGUvMjU1XSx0aGlzLl9jYWNoZWRTdHJva2VTdHlsZT10aGlzLmN1clN0cm9rZUNvbG9yLnNsaWNlKCksdGhpcy5jdXJTdHJva2VDb2xvcj1bMSwxLDEsdC8yNTVdKX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLm5vRXJhc2U9ZnVuY3Rpb24oKXt0aGlzLl9pc0VyYXNpbmcmJih0aGlzLl9pc0VyYXNpbmc9ITEsdGhpcy5jdXJGaWxsQ29sb3I9dGhpcy5fY2FjaGVkRmlsbFN0eWxlLnNsaWNlKCksdGhpcy5jdXJTdHJva2VDb2xvcj10aGlzLl9jYWNoZWRTdHJva2VTdHlsZS5zbGljZSgpLHRoaXMuYmxlbmRNb2RlKHRoaXMuX2NhY2hlZEJsZW5kTW9kZSkpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuc3Ryb2tlV2VpZ2h0PWZ1bmN0aW9uKGUpe3RoaXMuY3VyU3Ryb2tlV2VpZ2h0IT09ZSYmKHRoaXMucG9pbnRTaXplPWUsdGhpcy5jdXJTdHJva2VXZWlnaHQ9ZSl9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0UGl4ZWw9ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gcj1uZXcgVWludDhBcnJheSg0KSx0aGlzLmRyYXdpbmdDb250ZXh0LnJlYWRQaXhlbHMoZSx0LDEsMSx0aGlzLmRyYXdpbmdDb250ZXh0LlJHQkEsdGhpcy5kcmF3aW5nQ29udGV4dC5VTlNJR05FRF9CWVRFLHIpLFtyWzBdLHJbMV0sclsyXSxyWzNdXX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLmxvYWRQaXhlbHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9waXhlbHNTdGF0ZTtpZighMD09PXRoaXMuX3BJbnN0Ll9nbEF0dHJpYnV0ZXMucHJlc2VydmVEcmF3aW5nQnVmZmVyKXt2YXIgdD1lLnBpeGVscyxyPXRoaXMuR0wuZHJhd2luZ0J1ZmZlcldpZHRoKnRoaXMuR0wuZHJhd2luZ0J1ZmZlckhlaWdodCo0O3QgaW5zdGFuY2VvZiBVaW50OEFycmF5JiZ0Lmxlbmd0aD09PXJ8fCh0PW5ldyBVaW50OEFycmF5KHIpLHRoaXMuX3BpeGVsc1N0YXRlLl9zZXRQcm9wZXJ0eShcInBpeGVsc1wiLHQpKTt2YXIgbj10aGlzLl9wSW5zdC5fcGl4ZWxEZW5zaXR5O3RoaXMuR0wucmVhZFBpeGVscygwLDAsdGhpcy53aWR0aCpuLHRoaXMuaGVpZ2h0Km4sdGhpcy5HTC5SR0JBLHRoaXMuR0wuVU5TSUdORURfQllURSx0KX1lbHNlIGNvbnNvbGUubG9nKFwibG9hZFBpeGVscyBvbmx5IHdvcmtzIGluIFdlYkdMIHdoZW4gcHJlc2VydmVEcmF3aW5nQnVmZmVyIGlzIHRydWUuXCIpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZ2VvbWV0cnlJbkhhc2g9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PXRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5W2VdfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKGUsdCl7cC5kZWZhdWx0LlJlbmRlcmVyLnByb3RvdHlwZS5yZXNpemUuY2FsbCh0aGlzLGUsdCksdGhpcy5HTC52aWV3cG9ydCgwLDAsdGhpcy5HTC5kcmF3aW5nQnVmZmVyV2lkdGgsdGhpcy5HTC5kcmF3aW5nQnVmZmVySGVpZ2h0KSx0aGlzLl92aWV3cG9ydD10aGlzLkdMLmdldFBhcmFtZXRlcih0aGlzLkdMLlZJRVdQT1JUKSx0aGlzLl9jdXJDYW1lcmEuX3Jlc2l6ZSgpO3ZhciByPXRoaXMuX3BpeGVsc1N0YXRlO3ZvaWQgMCE9PXIucGl4ZWxzJiZyLl9zZXRQcm9wZXJ0eShcInBpeGVsc1wiLG5ldyBVaW50OEFycmF5KHRoaXMuR0wuZHJhd2luZ0J1ZmZlcldpZHRoKnRoaXMuR0wuZHJhd2luZ0J1ZmZlckhlaWdodCo0KSl9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3ZhciBlPShhcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0pfHwwLHQ9KGFyZ3VtZW50cy5sZW5ndGg8PTE/dm9pZCAwOmFyZ3VtZW50c1sxXSl8fDAscj0oYXJndW1lbnRzLmxlbmd0aDw9Mj92b2lkIDA6YXJndW1lbnRzWzJdKXx8MCxuPShhcmd1bWVudHMubGVuZ3RoPD0zP3ZvaWQgMDphcmd1bWVudHNbM10pfHwwO3RoaXMuR0wuY2xlYXJDb2xvcihlLHQscixuKSx0aGlzLkdMLmNsZWFyKHRoaXMuR0wuQ09MT1JfQlVGRkVSX0JJVHx0aGlzLkdMLkRFUFRIX0JVRkZFUl9CSVQpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuYXBwbHlNYXRyaXg9ZnVuY3Rpb24oZSx0LHIsbixhLG8pezE2PT09YXJndW1lbnRzLmxlbmd0aD9wLmRlZmF1bHQuTWF0cml4LnByb3RvdHlwZS5hcHBseS5hcHBseSh0aGlzLnVNVk1hdHJpeCxhcmd1bWVudHMpOnRoaXMudU1WTWF0cml4LmFwcGx5KFtlLHQsMCwwLHIsbiwwLDAsMCwwLDEsMCxhLG8sMCwxXSl9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS50cmFuc2xhdGU9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlIGluc3RhbmNlb2YgcC5kZWZhdWx0LlZlY3RvciYmKHI9ZS56LHQ9ZS55LGU9ZS54KSx0aGlzLnVNVk1hdHJpeC50cmFuc2xhdGUoW2UsdCxyXSksdGhpc30scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnNjYWxlPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdGhpcy51TVZNYXRyaXguc2NhbGUoZSx0LHIpLHRoaXN9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5yb3RhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09dD90aGlzLnJvdGF0ZVooZSk6KHAuZGVmYXVsdC5NYXRyaXgucHJvdG90eXBlLnJvdGF0ZS5hcHBseSh0aGlzLnVNVk1hdHJpeCxhcmd1bWVudHMpLHRoaXMpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucm90YXRlWD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yb3RhdGUoZSwxLDAsMCksdGhpc30scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnJvdGF0ZVk9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMucm90YXRlKGUsMCwxLDApLHRoaXN9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5yb3RhdGVaPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJvdGF0ZShlLDAsMCwxKSx0aGlzfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucHVzaD1mdW5jdGlvbigpe3ZhciBlPXAuZGVmYXVsdC5SZW5kZXJlci5wcm90b3R5cGUucHVzaC5hcHBseSh0aGlzKSx0PWUucHJvcGVydGllcztyZXR1cm4gdC51TVZNYXRyaXg9dGhpcy51TVZNYXRyaXguY29weSgpLHQudVBNYXRyaXg9dGhpcy51UE1hdHJpeC5jb3B5KCksdC5fY3VyQ2FtZXJhPXRoaXMuX2N1ckNhbWVyYSx0aGlzLl9jdXJDYW1lcmE9dGhpcy5fY3VyQ2FtZXJhLmNvcHkoKSx0LmFtYmllbnRMaWdodENvbG9ycz10aGlzLmFtYmllbnRMaWdodENvbG9ycy5zbGljZSgpLHQuc3BlY3VsYXJDb2xvcnM9dGhpcy5zcGVjdWxhckNvbG9ycy5zbGljZSgpLHQuZGlyZWN0aW9uYWxMaWdodERpcmVjdGlvbnM9dGhpcy5kaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9ucy5zbGljZSgpLHQuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnM9dGhpcy5kaXJlY3Rpb25hbExpZ2h0RGlmZnVzZUNvbG9ycy5zbGljZSgpLHQuZGlyZWN0aW9uYWxMaWdodFNwZWN1bGFyQ29sb3JzPXRoaXMuZGlyZWN0aW9uYWxMaWdodFNwZWN1bGFyQ29sb3JzLnNsaWNlKCksdC5wb2ludExpZ2h0UG9zaXRpb25zPXRoaXMucG9pbnRMaWdodFBvc2l0aW9ucy5zbGljZSgpLHQucG9pbnRMaWdodERpZmZ1c2VDb2xvcnM9dGhpcy5wb2ludExpZ2h0RGlmZnVzZUNvbG9ycy5zbGljZSgpLHQucG9pbnRMaWdodFNwZWN1bGFyQ29sb3JzPXRoaXMucG9pbnRMaWdodFNwZWN1bGFyQ29sb3JzLnNsaWNlKCksdC5zcG90TGlnaHRQb3NpdGlvbnM9dGhpcy5zcG90TGlnaHRQb3NpdGlvbnMuc2xpY2UoKSx0LnNwb3RMaWdodERpcmVjdGlvbnM9dGhpcy5zcG90TGlnaHREaXJlY3Rpb25zLnNsaWNlKCksdC5zcG90TGlnaHREaWZmdXNlQ29sb3JzPXRoaXMuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycy5zbGljZSgpLHQuc3BvdExpZ2h0U3BlY3VsYXJDb2xvcnM9dGhpcy5zcG90TGlnaHRTcGVjdWxhckNvbG9ycy5zbGljZSgpLHQuc3BvdExpZ2h0QW5nbGU9dGhpcy5zcG90TGlnaHRBbmdsZS5zbGljZSgpLHQuc3BvdExpZ2h0Q29uYz10aGlzLnNwb3RMaWdodENvbmMuc2xpY2UoKSx0LnVzZXJGaWxsU2hhZGVyPXRoaXMudXNlckZpbGxTaGFkZXIsdC51c2VyU3Ryb2tlU2hhZGVyPXRoaXMudXNlclN0cm9rZVNoYWRlcix0LnVzZXJQb2ludFNoYWRlcj10aGlzLnVzZXJQb2ludFNoYWRlcix0LnBvaW50U2l6ZT10aGlzLnBvaW50U2l6ZSx0LmN1clN0cm9rZVdlaWdodD10aGlzLmN1clN0cm9rZVdlaWdodCx0LmN1clN0cm9rZUNvbG9yPXRoaXMuY3VyU3Ryb2tlQ29sb3IsdC5jdXJGaWxsQ29sb3I9dGhpcy5jdXJGaWxsQ29sb3IsdC5fdXNlU3BlY3VsYXJNYXRlcmlhbD10aGlzLl91c2VTcGVjdWxhck1hdGVyaWFsLHQuX3VzZUVtaXNzaXZlTWF0ZXJpYWw9dGhpcy5fdXNlRW1pc3NpdmVNYXRlcmlhbCx0Ll91c2VTaGluaW5lc3M9dGhpcy5fdXNlU2hpbmluZXNzLHQuY29uc3RhbnRBdHRlbnVhdGlvbj10aGlzLmNvbnN0YW50QXR0ZW51YXRpb24sdC5saW5lYXJBdHRlbnVhdGlvbj10aGlzLmxpbmVhckF0dGVudWF0aW9uLHQucXVhZHJhdGljQXR0ZW51YXRpb249dGhpcy5xdWFkcmF0aWNBdHRlbnVhdGlvbix0Ll9lbmFibGVMaWdodGluZz10aGlzLl9lbmFibGVMaWdodGluZyx0Ll91c2VOb3JtYWxNYXRlcmlhbD10aGlzLl91c2VOb3JtYWxNYXRlcmlhbCx0Ll90ZXg9dGhpcy5fdGV4LHQuZHJhd01vZGU9dGhpcy5kcmF3TW9kZSxlfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUucmVzZXRNYXRyaXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51TVZNYXRyaXg9cC5kZWZhdWx0Lk1hdHJpeC5pZGVudGl0eSh0aGlzLl9wSW5zdCksdGhpc30scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRJbW1lZGlhdGVTdHJva2VTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnVzZXJTdHJva2VTaGFkZXI7cmV0dXJuIGUmJmUuaXNTdHJva2VTaGFkZXIoKT9lOnRoaXMuX2dldExpbmVTaGFkZXIoKX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRSZXRhaW5lZFN0cm9rZVNoYWRlcj1wLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldEltbWVkaWF0ZVN0cm9rZVNoYWRlcixwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldEltbWVkaWF0ZUZpbGxTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnVzZXJGaWxsU2hhZGVyO2lmKHRoaXMuX3VzZU5vcm1hbE1hdGVyaWFsJiYoIWV8fCFlLmlzTm9ybWFsU2hhZGVyKCkpKXJldHVybiB0aGlzLl9nZXROb3JtYWxTaGFkZXIoKTtpZih0aGlzLl9lbmFibGVMaWdodGluZyl7aWYoIWV8fCFlLmlzTGlnaHRTaGFkZXIoKSlyZXR1cm4gdGhpcy5fZ2V0TGlnaHRTaGFkZXIoKX1lbHNlIGlmKHRoaXMuX3RleCl7aWYoIWV8fCFlLmlzVGV4dHVyZVNoYWRlcigpKXJldHVybiB0aGlzLl9nZXRMaWdodFNoYWRlcigpfWVsc2UgaWYoIWUpcmV0dXJuIHRoaXMuX2dldEltbWVkaWF0ZU1vZGVTaGFkZXIoKTtyZXR1cm4gZX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRSZXRhaW5lZEZpbGxTaGFkZXI9ZnVuY3Rpb24oKXtpZih0aGlzLl91c2VOb3JtYWxNYXRlcmlhbClyZXR1cm4gdGhpcy5fZ2V0Tm9ybWFsU2hhZGVyKCk7dmFyIGU9dGhpcy51c2VyRmlsbFNoYWRlcjtpZih0aGlzLl9lbmFibGVMaWdodGluZyl7aWYoIWV8fCFlLmlzTGlnaHRTaGFkZXIoKSlyZXR1cm4gdGhpcy5fZ2V0TGlnaHRTaGFkZXIoKX1lbHNlIGlmKHRoaXMuX3RleCl7aWYoIWV8fCFlLmlzVGV4dHVyZVNoYWRlcigpKXJldHVybiB0aGlzLl9nZXRMaWdodFNoYWRlcigpfWVsc2UgaWYoIWUpcmV0dXJuIHRoaXMuX2dldENvbG9yU2hhZGVyKCk7cmV0dXJuIGV9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0SW1tZWRpYXRlUG9pbnRTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnVzZXJQb2ludFNoYWRlcjtyZXR1cm4gZSYmZS5pc1BvaW50U2hhZGVyKCk/ZTp0aGlzLl9nZXRQb2ludFNoYWRlcigpfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldFJldGFpbmVkTGluZVNoYWRlcj1wLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2dldEltbWVkaWF0ZUxpbmVTaGFkZXIscC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRMaWdodFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0TGlnaHRTaGFkZXJ8fCh0aGlzLl9wSW5zdC5fZ2xBdHRyaWJ1dGVzLnBlclBpeGVsTGlnaHRpbmc/dGhpcy5fZGVmYXVsdExpZ2h0U2hhZGVyPW5ldyBwLmRlZmF1bHQuU2hhZGVyKHRoaXMsYy5waG9uZ1ZlcnQsYy5waG9uZ0ZyYWcpOnRoaXMuX2RlZmF1bHRMaWdodFNoYWRlcj1uZXcgcC5kZWZhdWx0LlNoYWRlcih0aGlzLGMubGlnaHRWZXJ0LGMubGlnaHRUZXh0dXJlRnJhZykpLHRoaXMuX2RlZmF1bHRMaWdodFNoYWRlcn0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRJbW1lZGlhdGVNb2RlU2hhZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmF1bHRJbW1lZGlhdGVNb2RlU2hhZGVyfHwodGhpcy5fZGVmYXVsdEltbWVkaWF0ZU1vZGVTaGFkZXI9bmV3IHAuZGVmYXVsdC5TaGFkZXIodGhpcyxjLmltbWVkaWF0ZVZlcnQsYy52ZXJ0ZXhDb2xvckZyYWcpKSx0aGlzLl9kZWZhdWx0SW1tZWRpYXRlTW9kZVNoYWRlcn0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXROb3JtYWxTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmYXVsdE5vcm1hbFNoYWRlcnx8KHRoaXMuX2RlZmF1bHROb3JtYWxTaGFkZXI9bmV3IHAuZGVmYXVsdC5TaGFkZXIodGhpcyxjLm5vcm1hbFZlcnQsYy5ub3JtYWxGcmFnKSksdGhpcy5fZGVmYXVsdE5vcm1hbFNoYWRlcn0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9nZXRDb2xvclNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXJ8fCh0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXI9bmV3IHAuZGVmYXVsdC5TaGFkZXIodGhpcyxjLm5vcm1hbFZlcnQsYy5iYXNpY0ZyYWcpKSx0aGlzLl9kZWZhdWx0Q29sb3JTaGFkZXJ9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0UG9pbnRTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmYXVsdFBvaW50U2hhZGVyfHwodGhpcy5fZGVmYXVsdFBvaW50U2hhZGVyPW5ldyBwLmRlZmF1bHQuU2hhZGVyKHRoaXMsYy5wb2ludFZlcnQsYy5wb2ludEZyYWcpKSx0aGlzLl9kZWZhdWx0UG9pbnRTaGFkZXJ9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0TGluZVNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0TGluZVNoYWRlcnx8KHRoaXMuX2RlZmF1bHRMaW5lU2hhZGVyPW5ldyBwLmRlZmF1bHQuU2hhZGVyKHRoaXMsYy5saW5lVmVydCxjLmxpbmVGcmFnKSksdGhpcy5fZGVmYXVsdExpbmVTaGFkZXJ9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0Rm9udFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0Rm9udFNoYWRlcnx8KHRoaXMuR0wuZ2V0RXh0ZW5zaW9uKFwiT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzXCIpLHRoaXMuX2RlZmF1bHRGb250U2hhZGVyPW5ldyBwLmRlZmF1bHQuU2hhZGVyKHRoaXMsYy5mb250VmVydCxjLmZvbnRGcmFnKSksdGhpcy5fZGVmYXVsdEZvbnRTaGFkZXJ9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fZ2V0RW1wdHlUZXh0dXJlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2VtcHR5VGV4dHVyZSl7dmFyIGU9bmV3IHAuZGVmYXVsdC5JbWFnZSgxLDEpO2Uuc2V0KDAsMCwyNTUpLHRoaXMuX2VtcHR5VGV4dHVyZT1uZXcgcC5kZWZhdWx0LlRleHR1cmUodGhpcyxlKX1yZXR1cm4gdGhpcy5fZW1wdHlUZXh0dXJlfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuZ2V0VGV4dHVyZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnRleHR1cmVzLHI9ITAsbj0hMSxhPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9dFtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShvPWkubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1vLnZhbHVlO2lmKHMuc3JjPT09ZSlyZXR1cm4gc319Y2F0Y2goZSl7bj0hMCxhPWV9ZmluYWxseXt0cnl7cnx8bnVsbD09aS5yZXR1cm58fGkucmV0dXJuKCl9ZmluYWxseXtpZihuKXRocm93IGF9fXZhciBsPW5ldyBwLmRlZmF1bHQuVGV4dHVyZSh0aGlzLGUpO3JldHVybiB0LnB1c2gobCksbH0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9zZXRTdHJva2VVbmlmb3Jtcz1mdW5jdGlvbihlKXtlLmJpbmRTaGFkZXIoKSxlLnNldFVuaWZvcm0oXCJ1TWF0ZXJpYWxDb2xvclwiLHRoaXMuY3VyU3Ryb2tlQ29sb3IpLGUuc2V0VW5pZm9ybShcInVTdHJva2VXZWlnaHRcIix0aGlzLmN1clN0cm9rZVdlaWdodCl9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fc2V0RmlsbFVuaWZvcm1zPWZ1bmN0aW9uKGUpe2UuYmluZFNoYWRlcigpLGUuc2V0VW5pZm9ybShcInVNYXRlcmlhbENvbG9yXCIsdGhpcy5jdXJGaWxsQ29sb3IpLGUuc2V0VW5pZm9ybShcImlzVGV4dHVyZVwiLCEhdGhpcy5fdGV4KSx0aGlzLl90ZXgmJmUuc2V0VW5pZm9ybShcInVTYW1wbGVyXCIsdGhpcy5fdGV4KSxlLnNldFVuaWZvcm0oXCJ1VGludFwiLHRoaXMuX3RpbnQpLGUuc2V0VW5pZm9ybShcInVTcGVjdWxhclwiLHRoaXMuX3VzZVNwZWN1bGFyTWF0ZXJpYWwpLGUuc2V0VW5pZm9ybShcInVFbWlzc2l2ZVwiLHRoaXMuX3VzZUVtaXNzaXZlTWF0ZXJpYWwpLGUuc2V0VW5pZm9ybShcInVTaGluaW5lc3NcIix0aGlzLl91c2VTaGluaW5lc3MpLGUuc2V0VW5pZm9ybShcInVVc2VMaWdodGluZ1wiLHRoaXMuX2VuYWJsZUxpZ2h0aW5nKTt2YXIgdD10aGlzLnBvaW50TGlnaHREaWZmdXNlQ29sb3JzLmxlbmd0aC8zO2Uuc2V0VW5pZm9ybShcInVQb2ludExpZ2h0Q291bnRcIix0KSxlLnNldFVuaWZvcm0oXCJ1UG9pbnRMaWdodExvY2F0aW9uXCIsdGhpcy5wb2ludExpZ2h0UG9zaXRpb25zKSxlLnNldFVuaWZvcm0oXCJ1UG9pbnRMaWdodERpZmZ1c2VDb2xvcnNcIix0aGlzLnBvaW50TGlnaHREaWZmdXNlQ29sb3JzKSxlLnNldFVuaWZvcm0oXCJ1UG9pbnRMaWdodFNwZWN1bGFyQ29sb3JzXCIsdGhpcy5wb2ludExpZ2h0U3BlY3VsYXJDb2xvcnMpO3ZhciByPXRoaXMuZGlyZWN0aW9uYWxMaWdodERpZmZ1c2VDb2xvcnMubGVuZ3RoLzM7ZS5zZXRVbmlmb3JtKFwidURpcmVjdGlvbmFsTGlnaHRDb3VudFwiLHIpLGUuc2V0VW5pZm9ybShcInVMaWdodGluZ0RpcmVjdGlvblwiLHRoaXMuZGlyZWN0aW9uYWxMaWdodERpcmVjdGlvbnMpLGUuc2V0VW5pZm9ybShcInVEaXJlY3Rpb25hbERpZmZ1c2VDb2xvcnNcIix0aGlzLmRpcmVjdGlvbmFsTGlnaHREaWZmdXNlQ29sb3JzKSxlLnNldFVuaWZvcm0oXCJ1RGlyZWN0aW9uYWxTcGVjdWxhckNvbG9yc1wiLHRoaXMuZGlyZWN0aW9uYWxMaWdodFNwZWN1bGFyQ29sb3JzKTt2YXIgbj10aGlzLmFtYmllbnRMaWdodENvbG9ycy5sZW5ndGgvMztlLnNldFVuaWZvcm0oXCJ1QW1iaWVudExpZ2h0Q291bnRcIixuKSxlLnNldFVuaWZvcm0oXCJ1QW1iaWVudENvbG9yXCIsdGhpcy5hbWJpZW50TGlnaHRDb2xvcnMpO3ZhciBhPXRoaXMuc3BvdExpZ2h0RGlmZnVzZUNvbG9ycy5sZW5ndGgvMztlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0Q291bnRcIixhKSxlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0QW5nbGVcIix0aGlzLnNwb3RMaWdodEFuZ2xlKSxlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0Q29uY1wiLHRoaXMuc3BvdExpZ2h0Q29uYyksZS5zZXRVbmlmb3JtKFwidVNwb3RMaWdodERpZmZ1c2VDb2xvcnNcIix0aGlzLnNwb3RMaWdodERpZmZ1c2VDb2xvcnMpLGUuc2V0VW5pZm9ybShcInVTcG90TGlnaHRTcGVjdWxhckNvbG9yc1wiLHRoaXMuc3BvdExpZ2h0U3BlY3VsYXJDb2xvcnMpLGUuc2V0VW5pZm9ybShcInVTcG90TGlnaHRMb2NhdGlvblwiLHRoaXMuc3BvdExpZ2h0UG9zaXRpb25zKSxlLnNldFVuaWZvcm0oXCJ1U3BvdExpZ2h0RGlyZWN0aW9uXCIsdGhpcy5zcG90TGlnaHREaXJlY3Rpb25zKSxlLnNldFVuaWZvcm0oXCJ1Q29uc3RhbnRBdHRlbnVhdGlvblwiLHRoaXMuY29uc3RhbnRBdHRlbnVhdGlvbiksZS5zZXRVbmlmb3JtKFwidUxpbmVhckF0dGVudWF0aW9uXCIsdGhpcy5saW5lYXJBdHRlbnVhdGlvbiksZS5zZXRVbmlmb3JtKFwidVF1YWRyYXRpY0F0dGVudWF0aW9uXCIsdGhpcy5xdWFkcmF0aWNBdHRlbnVhdGlvbiksZS5iaW5kVGV4dHVyZXMoKX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9zZXRQb2ludFVuaWZvcm1zPWZ1bmN0aW9uKGUpe2UuYmluZFNoYWRlcigpLGUuc2V0VW5pZm9ybShcInVNYXRlcmlhbENvbG9yXCIsdGhpcy5jdXJTdHJva2VDb2xvciksZS5zZXRVbmlmb3JtKFwidVBvaW50U2l6ZVwiLHRoaXMucG9pbnRTaXplKX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9iaW5kQnVmZmVyPWZ1bmN0aW9uKGUsdCxyLG4sYSl7aWYodD10fHx0aGlzLkdMLkFSUkFZX0JVRkZFUix0aGlzLkdMLmJpbmRCdWZmZXIodCxlKSx2b2lkIDAhPT1yKXt2YXIgbz1uZXcobnx8RmxvYXQzMkFycmF5KShyKTt0aGlzLkdMLmJ1ZmZlckRhdGEodCxvLGF8fHRoaXMuR0wuU1RBVElDX0RSQVcpfX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9hcnJheXNFcXVhbD1mdW5jdGlvbihlLHQpe3ZhciByPWUubGVuZ3RoO2lmKHIhPT10Lmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIG49MDtuPHI7bisrKWlmKGVbbl0hPT10W25dKXJldHVybiExO3JldHVybiEwfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2lzVHlwZWRBcnJheT1mdW5jdGlvbihlKXtyZXR1cm4gRmxvYXQzMkFycmF5LEZsb2F0NjRBcnJheSxJbnQxNkFycmF5LFVpbnQxNkFycmF5LGUgaW5zdGFuY2VvZiBVaW50MzJBcnJheX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9mbGF0dGVuPWZ1bmN0aW9uKGUpe2lmKDA9PT1lLmxlbmd0aClyZXR1cm5bXTtpZigyZTQ8ZS5sZW5ndGgpe3ZhciB0LHI9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxuPVtdLGE9ZS5zbGljZSgpO2Zvcih0PWEucG9wKCk7XCJbb2JqZWN0IEFycmF5XVwiPT09ci5jYWxsKHQpP2EucHVzaC5hcHBseShhLGwodCkpOm4ucHVzaCh0KSxhLmxlbmd0aCYmdm9pZCAwIT09KHQ9YS5wb3AoKSk7KTtyZXR1cm4gbi5yZXZlcnNlKCksbn12YXIgbztyZXR1cm4obz1bXSkuY29uY2F0LmFwcGx5KG8sbChlKSl9LHAuZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fdlRvTkFycmF5PWZ1bmN0aW9uKGUpe3ZhciB0PVtdLHI9ITAsbj0hMSxhPXZvaWQgMDt0cnl7Zm9yKHZhciBvLGk9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShvPWkubmV4dCgpKS5kb25lKTtyPSEwKXt2YXIgcz1vLnZhbHVlO3QucHVzaChzLngscy55LHMueil9fWNhdGNoKGUpe249ITAsYT1lfWZpbmFsbHl7dHJ5e3J8fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYobil0aHJvdyBhfX1yZXR1cm4gdH0scC5kZWZhdWx0LnByb3RvdHlwZS5fYXNzZXJ0M2Q9ZnVuY3Rpb24oZSl7aWYoIXRoaXMuX3JlbmRlcmVyLmlzUDNEKXRocm93IG5ldyBFcnJvcihcIlwiLmNvbmNhdChlLFwiKCkgaXMgb25seSBzdXBwb3J0ZWQgaW4gV0VCR0wgbW9kZS4gSWYgeW91J2QgbGlrZSB0byB1c2UgM0QgZ3JhcGhpY3MgYW5kIFdlYkdMLCBzZWUgIGh0dHBzOi8vcDVqcy5vcmcvZXhhbXBsZXMvZm9ybS0zZC1wcmltaXRpdmVzLmh0bWwgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIpKX0scC5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLl9pbml0VGVzc3k9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgbi5kZWZhdWx0LkdsdVRlc3NlbGF0b3I7cmV0dXJuIGUuZ2x1VGVzc0NhbGxiYWNrKG4uZGVmYXVsdC5nbHVFbnVtLkdMVV9URVNTX1ZFUlRFWF9EQVRBLGZ1bmN0aW9uKGUsdCl7dFt0Lmxlbmd0aF09ZVswXSx0W3QubGVuZ3RoXT1lWzFdLHRbdC5sZW5ndGhdPWVbMl19KSxlLmdsdVRlc3NDYWxsYmFjayhuLmRlZmF1bHQuZ2x1RW51bS5HTFVfVEVTU19CRUdJTixmdW5jdGlvbihlKXtlIT09bi5kZWZhdWx0LnByaW1pdGl2ZVR5cGUuR0xfVFJJQU5HTEVTJiZjb25zb2xlLmxvZyhcImV4cGVjdGVkIFRSSUFOR0xFUyBidXQgZ290IHR5cGU6IFwiLmNvbmNhdChlKSl9KSxlLmdsdVRlc3NDYWxsYmFjayhuLmRlZmF1bHQuZ2x1RW51bS5HTFVfVEVTU19FUlJPUixmdW5jdGlvbihlKXtjb25zb2xlLmxvZyhcImVycm9yIGNhbGxiYWNrXCIpLGNvbnNvbGUubG9nKFwiZXJyb3IgbnVtYmVyOiBcIi5jb25jYXQoZSkpfSksZS5nbHVUZXNzQ2FsbGJhY2sobi5kZWZhdWx0LmdsdUVudW0uR0xVX1RFU1NfQ09NQklORSxmdW5jdGlvbihlLHQscil7cmV0dXJuW2VbMF0sZVsxXSxlWzJdXX0pLGUuZ2x1VGVzc0NhbGxiYWNrKG4uZGVmYXVsdC5nbHVFbnVtLkdMVV9URVNTX0VER0VfRkxBRyxmdW5jdGlvbihlKXt9KSxlfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX3RyaWFuZ3VsYXRlPWZ1bmN0aW9uKGUpe3RoaXMuX3Rlc3N5LmdsdVRlc3NOb3JtYWwoMCwwLDEpO3ZhciB0PVtdO3RoaXMuX3Rlc3N5LmdsdVRlc3NCZWdpblBvbHlnb24odCk7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3RoaXMuX3Rlc3N5LmdsdVRlc3NCZWdpbkNvbnRvdXIoKTtmb3IodmFyIG49ZVtyXSxhPTA7YTxuLmxlbmd0aDthKz0zKXt2YXIgbz1bblthXSxuW2ErMV0sblthKzJdXTt0aGlzLl90ZXNzeS5nbHVUZXNzVmVydGV4KG8sbyl9dGhpcy5fdGVzc3kuZ2x1VGVzc0VuZENvbnRvdXIoKX1yZXR1cm4gdGhpcy5fdGVzc3kuZ2x1VGVzc0VuZFBvbHlnb24oKSx0fSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2JlemllckNvZWZmaWNpZW50cz1mdW5jdGlvbihlKXt2YXIgdD1lKmUscj0xLWUsbj1yKnI7cmV0dXJuW24qciwzKm4qZSwzKnIqdCx0KmVdfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX3F1YWRyYXRpY0NvZWZmaWNpZW50cz1mdW5jdGlvbihlKXt2YXIgdD0xLWU7cmV0dXJuW3QqdCwyKnQqZSxlKmVdfSxwLmRlZmF1bHQuUmVuZGVyZXJHTC5wcm90b3R5cGUuX2JlemllclRvQ2F0bXVsbD1mdW5jdGlvbihlKXtyZXR1cm5bZVsxXSxlWzFdKyhlWzJdLWVbMF0pL3RoaXMuX2N1cnZlVGlnaHRuZXNzLGVbMl0tKGVbM10tZVsxXSkvdGhpcy5fY3VydmVUaWdodG5lc3MsZVsyXV19O3ZhciBkPXAuZGVmYXVsdC5SZW5kZXJlckdMO3IuZGVmYXVsdD1kfSx7XCIuLi9jb3JlL2NvbnN0YW50c1wiOjIyLFwiLi4vY29yZS9tYWluXCI6MzIsXCIuLi9jb3JlL3A1LlJlbmRlcmVyXCI6MzUsXCIuL3A1LkNhbWVyYVwiOjgwLFwiLi9wNS5NYXRyaXhcIjo4MixcIi4vcDUuU2hhZGVyXCI6ODcsbGlidGVzczoxMSxwYXRoOjE0fV0sODc6W2Z1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyLmRlZmF1bHQ9dm9pZCAwO3ZhciBuLGE9KG49ZShcIi4uL2NvcmUvbWFpblwiKSkmJm4uX19lc01vZHVsZT9uOntkZWZhdWx0Om59O2EuZGVmYXVsdC5TaGFkZXI9ZnVuY3Rpb24oZSx0LHIpe3RoaXMuX3JlbmRlcmVyPWUsdGhpcy5fdmVydFNyYz10LHRoaXMuX2ZyYWdTcmM9cix0aGlzLl92ZXJ0U2hhZGVyPS0xLHRoaXMuX2ZyYWdTaGFkZXI9LTEsdGhpcy5fZ2xQcm9ncmFtPTAsdGhpcy5fbG9hZGVkQXR0cmlidXRlcz0hMSx0aGlzLmF0dHJpYnV0ZXM9e30sdGhpcy5fbG9hZGVkVW5pZm9ybXM9ITEsdGhpcy51bmlmb3Jtcz17fSx0aGlzLl9ib3VuZD0hMSx0aGlzLnNhbXBsZXJzPVtdfSxhLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7aWYoMD09PXRoaXMuX2dsUHJvZ3JhbSl7dmFyIGU9dGhpcy5fcmVuZGVyZXIuR0w7aWYodGhpcy5fdmVydFNoYWRlcj1lLmNyZWF0ZVNoYWRlcihlLlZFUlRFWF9TSEFERVIpLGUuc2hhZGVyU291cmNlKHRoaXMuX3ZlcnRTaGFkZXIsdGhpcy5fdmVydFNyYyksZS5jb21waWxlU2hhZGVyKHRoaXMuX3ZlcnRTaGFkZXIpLCFlLmdldFNoYWRlclBhcmFtZXRlcih0aGlzLl92ZXJ0U2hhZGVyLGUuQ09NUElMRV9TVEFUVVMpKXJldHVybiBjb25zb2xlLmVycm9yKFwiWWlrZXMhIEFuIGVycm9yIG9jY3VycmVkIGNvbXBpbGluZyB0aGUgdmVydGV4IHNoYWRlcjpcIi5jb25jYXQoZS5nZXRTaGFkZXJJbmZvTG9nKHRoaXMuX3ZlcnRTaGFkZXIpKSksbnVsbDtpZih0aGlzLl9mcmFnU2hhZGVyPWUuY3JlYXRlU2hhZGVyKGUuRlJBR01FTlRfU0hBREVSKSxlLnNoYWRlclNvdXJjZSh0aGlzLl9mcmFnU2hhZGVyLHRoaXMuX2ZyYWdTcmMpLGUuY29tcGlsZVNoYWRlcih0aGlzLl9mcmFnU2hhZGVyKSwhZS5nZXRTaGFkZXJQYXJhbWV0ZXIodGhpcy5fZnJhZ1NoYWRlcixlLkNPTVBJTEVfU1RBVFVTKSlyZXR1cm4gY29uc29sZS5lcnJvcihcIkRhcm4hIEFuIGVycm9yIG9jY3VycmVkIGNvbXBpbGluZyB0aGUgZnJhZ21lbnQgc2hhZGVyOlwiLmNvbmNhdChlLmdldFNoYWRlckluZm9Mb2codGhpcy5fZnJhZ1NoYWRlcikpKSxudWxsO3RoaXMuX2dsUHJvZ3JhbT1lLmNyZWF0ZVByb2dyYW0oKSxlLmF0dGFjaFNoYWRlcih0aGlzLl9nbFByb2dyYW0sdGhpcy5fdmVydFNoYWRlciksZS5hdHRhY2hTaGFkZXIodGhpcy5fZ2xQcm9ncmFtLHRoaXMuX2ZyYWdTaGFkZXIpLGUubGlua1Byb2dyYW0odGhpcy5fZ2xQcm9ncmFtKSxlLmdldFByb2dyYW1QYXJhbWV0ZXIodGhpcy5fZ2xQcm9ncmFtLGUuTElOS19TVEFUVVMpfHxjb25zb2xlLmVycm9yKFwiU25hcCEgRXJyb3IgbGlua2luZyBzaGFkZXIgcHJvZ3JhbTogXCIuY29uY2F0KGUuZ2V0UHJvZ3JhbUluZm9Mb2codGhpcy5fZ2xQcm9ncmFtKSkpLHRoaXMuX2xvYWRBdHRyaWJ1dGVzKCksdGhpcy5fbG9hZFVuaWZvcm1zKCl9cmV0dXJuIHRoaXN9LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLl9sb2FkQXR0cmlidXRlcz1mdW5jdGlvbigpe2lmKCF0aGlzLl9sb2FkZWRBdHRyaWJ1dGVzKXt0aGlzLmF0dHJpYnV0ZXM9e307Zm9yKHZhciBlPXRoaXMuX3JlbmRlcmVyLkdMLHQ9ZS5nZXRQcm9ncmFtUGFyYW1ldGVyKHRoaXMuX2dsUHJvZ3JhbSxlLkFDVElWRV9BVFRSSUJVVEVTKSxyPTA7cjx0Oysrcil7dmFyIG49ZS5nZXRBY3RpdmVBdHRyaWIodGhpcy5fZ2xQcm9ncmFtLHIpLGE9bi5uYW1lLG89ZS5nZXRBdHRyaWJMb2NhdGlvbih0aGlzLl9nbFByb2dyYW0sYSksaT17fTtpLm5hbWU9YSxpLmxvY2F0aW9uPW8saS5pbmRleD1yLGkudHlwZT1uLnR5cGUsaS5zaXplPW4uc2l6ZSx0aGlzLmF0dHJpYnV0ZXNbYV09aX10aGlzLl9sb2FkZWRBdHRyaWJ1dGVzPSEwfX0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuX2xvYWRVbmlmb3Jtcz1mdW5jdGlvbigpe2lmKCF0aGlzLl9sb2FkZWRVbmlmb3Jtcyl7Zm9yKHZhciBlPXRoaXMuX3JlbmRlcmVyLkdMLHQ9ZS5nZXRQcm9ncmFtUGFyYW1ldGVyKHRoaXMuX2dsUHJvZ3JhbSxlLkFDVElWRV9VTklGT1JNUykscj0wLG49MDtuPHQ7KytuKXt2YXIgYT1lLmdldEFjdGl2ZVVuaWZvcm0odGhpcy5fZ2xQcm9ncmFtLG4pLG89e307by5sb2NhdGlvbj1lLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLl9nbFByb2dyYW0sYS5uYW1lKSxvLnNpemU9YS5zaXplO3ZhciBpPWEubmFtZTsxPGEuc2l6ZSYmKGk9aS5zdWJzdHJpbmcoMCxpLmluZGV4T2YoXCJbMF1cIikpKSxvLm5hbWU9aSxvLnR5cGU9YS50eXBlLG8uX2NhY2hlZERhdGE9dm9pZCAwLG8udHlwZT09PWUuU0FNUExFUl8yRCYmKG8uc2FtcGxlckluZGV4PXIscisrLHRoaXMuc2FtcGxlcnMucHVzaChvKSksby5pc0FycmF5PW8udHlwZT09PWUuRkxPQVRfTUFUM3x8by50eXBlPT09ZS5GTE9BVF9NQVQ0fHxvLnR5cGU9PT1lLkZMT0FUX1ZFQzJ8fG8udHlwZT09PWUuRkxPQVRfVkVDM3x8by50eXBlPT09ZS5GTE9BVF9WRUM0fHxvLnR5cGU9PT1lLklOVF9WRUMyfHxvLnR5cGU9PT1lLklOVF9WRUMzfHxvLnR5cGU9PT1lLklOVF9WRUM0LHRoaXMudW5pZm9ybXNbaV09b310aGlzLl9sb2FkZWRVbmlmb3Jtcz0hMH19LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLmNvbXBpbGU9ZnVuY3Rpb24oKXt9LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLmJpbmRTaGFkZXI9ZnVuY3Rpb24oKXt0aGlzLmluaXQoKSx0aGlzLl9ib3VuZHx8KHRoaXMudXNlUHJvZ3JhbSgpLHRoaXMuX2JvdW5kPSEwLHRoaXMuX3NldE1hdHJpeFVuaWZvcm1zKCksdGhpcy5zZXRVbmlmb3JtKFwidVZpZXdwb3J0XCIsdGhpcy5fcmVuZGVyZXIuX3ZpZXdwb3J0KSl9LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLnVuYmluZFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ib3VuZCYmKHRoaXMudW5iaW5kVGV4dHVyZXMoKSx0aGlzLl9ib3VuZD0hMSksdGhpc30sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuYmluZFRleHR1cmVzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fcmVuZGVyZXIuR0wsdD0hMCxyPSExLG49dm9pZCAwO3RyeXtmb3IodmFyIGEsbz10aGlzLnNhbXBsZXJzW1N5bWJvbC5pdGVyYXRvcl0oKTshKHQ9KGE9by5uZXh0KCkpLmRvbmUpO3Q9ITApe3ZhciBpPWEudmFsdWUscz1pLnRleHR1cmU7dm9pZCAwPT09cyYmKHM9dGhpcy5fcmVuZGVyZXIuX2dldEVtcHR5VGV4dHVyZSgpKSxlLmFjdGl2ZVRleHR1cmUoZS5URVhUVVJFMCtpLnNhbXBsZXJJbmRleCkscy5iaW5kVGV4dHVyZSgpLHMudXBkYXRlKCksZS51bmlmb3JtMWkoaS5sb2NhdGlvbixpLnNhbXBsZXJJbmRleCl9fWNhdGNoKGUpe3I9ITAsbj1lfWZpbmFsbHl7dHJ5e3R8fG51bGw9PW8ucmV0dXJufHxvLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBufX19LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLnVwZGF0ZVRleHR1cmVzPWZ1bmN0aW9uKCl7dmFyIGU9ITAsdD0hMSxyPXZvaWQgMDt0cnl7Zm9yKHZhciBuLGE9dGhpcy5zYW1wbGVyc1tTeW1ib2wuaXRlcmF0b3JdKCk7IShlPShuPWEubmV4dCgpKS5kb25lKTtlPSEwKXt2YXIgbz1uLnZhbHVlLnRleHR1cmU7byYmby51cGRhdGUoKX19Y2F0Y2goZSl7dD0hMCxyPWV9ZmluYWxseXt0cnl7ZXx8bnVsbD09YS5yZXR1cm58fGEucmV0dXJuKCl9ZmluYWxseXtpZih0KXRocm93IHJ9fX0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUudW5iaW5kVGV4dHVyZXM9ZnVuY3Rpb24oKXt9LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLl9zZXRNYXRyaXhVbmlmb3Jtcz1mdW5jdGlvbigpe3RoaXMuc2V0VW5pZm9ybShcInVQcm9qZWN0aW9uTWF0cml4XCIsdGhpcy5fcmVuZGVyZXIudVBNYXRyaXgubWF0NCksdGhpcy5pc1N0cm9rZVNoYWRlcigpJiYoXCJkZWZhdWx0XCI9PT10aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYVR5cGU/dGhpcy5zZXRVbmlmb3JtKFwidVBlcnNwZWN0aXZlXCIsMSk6dGhpcy5zZXRVbmlmb3JtKFwidVBlcnNwZWN0aXZlXCIsMCkpLHRoaXMuc2V0VW5pZm9ybShcInVNb2RlbFZpZXdNYXRyaXhcIix0aGlzLl9yZW5kZXJlci51TVZNYXRyaXgubWF0NCksdGhpcy5zZXRVbmlmb3JtKFwidVZpZXdNYXRyaXhcIix0aGlzLl9yZW5kZXJlci5fY3VyQ2FtZXJhLmNhbWVyYU1hdHJpeC5tYXQ0KSx0aGlzLnVuaWZvcm1zLnVOb3JtYWxNYXRyaXgmJih0aGlzLl9yZW5kZXJlci51Tk1hdHJpeC5pbnZlcnNlVHJhbnNwb3NlKHRoaXMuX3JlbmRlcmVyLnVNVk1hdHJpeCksdGhpcy5zZXRVbmlmb3JtKFwidU5vcm1hbE1hdHJpeFwiLHRoaXMuX3JlbmRlcmVyLnVOTWF0cml4Lm1hdDMpKX0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUudXNlUHJvZ3JhbT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3JlbmRlcmVyLkdMO3JldHVybiB0aGlzLl9yZW5kZXJlci5fY3VyU2hhZGVyIT09dGhpcyYmKGUudXNlUHJvZ3JhbSh0aGlzLl9nbFByb2dyYW0pLHRoaXMuX3JlbmRlcmVyLl9jdXJTaGFkZXI9dGhpcyksdGhpc30sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuc2V0VW5pZm9ybT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMudW5pZm9ybXNbZV07aWYocil7dmFyIG49dGhpcy5fcmVuZGVyZXIuR0w7aWYoci5pc0FycmF5KXtpZihyLl9jYWNoZWREYXRhJiZ0aGlzLl9yZW5kZXJlci5fYXJyYXlzRXF1YWwoci5fY2FjaGVkRGF0YSx0KSlyZXR1cm47ci5fY2FjaGVkRGF0YT10LnNsaWNlKDApfWVsc2V7aWYoci5fY2FjaGVkRGF0YSYmci5fY2FjaGVkRGF0YT09PXQpcmV0dXJuO3IuX2NhY2hlZERhdGE9dH12YXIgYT1yLmxvY2F0aW9uO3N3aXRjaCh0aGlzLnVzZVByb2dyYW0oKSxyLnR5cGUpe2Nhc2Ugbi5CT09MOiEwPT09dD9uLnVuaWZvcm0xaShhLDEpOm4udW5pZm9ybTFpKGEsMCk7YnJlYWs7Y2FzZSBuLklOVDoxPHIuc2l6ZT90Lmxlbmd0aCYmbi51bmlmb3JtMWl2KGEsdCk6bi51bmlmb3JtMWkoYSx0KTticmVhaztjYXNlIG4uRkxPQVQ6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTFmdihhLHQpOm4udW5pZm9ybTFmKGEsdCk7YnJlYWs7Y2FzZSBuLkZMT0FUX01BVDM6bi51bmlmb3JtTWF0cml4M2Z2KGEsITEsdCk7YnJlYWs7Y2FzZSBuLkZMT0FUX01BVDQ6bi51bmlmb3JtTWF0cml4NGZ2KGEsITEsdCk7YnJlYWs7Y2FzZSBuLkZMT0FUX1ZFQzI6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTJmdihhLHQpOm4udW5pZm9ybTJmKGEsdFswXSx0WzFdKTticmVhaztjYXNlIG4uRkxPQVRfVkVDMzoxPHIuc2l6ZT90Lmxlbmd0aCYmbi51bmlmb3JtM2Z2KGEsdCk6bi51bmlmb3JtM2YoYSx0WzBdLHRbMV0sdFsyXSk7YnJlYWs7Y2FzZSBuLkZMT0FUX1ZFQzQ6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTRmdihhLHQpOm4udW5pZm9ybTRmKGEsdFswXSx0WzFdLHRbMl0sdFszXSk7YnJlYWs7Y2FzZSBuLklOVF9WRUMyOjE8ci5zaXplP3QubGVuZ3RoJiZuLnVuaWZvcm0yaXYoYSx0KTpuLnVuaWZvcm0yaShhLHRbMF0sdFsxXSk7YnJlYWs7Y2FzZSBuLklOVF9WRUMzOjE8ci5zaXplP3QubGVuZ3RoJiZuLnVuaWZvcm0zaXYoYSx0KTpuLnVuaWZvcm0zaShhLHRbMF0sdFsxXSx0WzJdKTticmVhaztjYXNlIG4uSU5UX1ZFQzQ6MTxyLnNpemU/dC5sZW5ndGgmJm4udW5pZm9ybTRpdihhLHQpOm4udW5pZm9ybTRpKGEsdFswXSx0WzFdLHRbMl0sdFszXSk7YnJlYWs7Y2FzZSBuLlNBTVBMRVJfMkQ6bi5hY3RpdmVUZXh0dXJlKG4uVEVYVFVSRTArci5zYW1wbGVySW5kZXgpLHIudGV4dHVyZT10aGlzLl9yZW5kZXJlci5nZXRUZXh0dXJlKHQpLG4udW5pZm9ybTFpKHIubG9jYXRpb24sci5zYW1wbGVySW5kZXgpfXJldHVybiB0aGlzfX0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNMaWdodFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLmF0dHJpYnV0ZXMuYU5vcm1hbHx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51VXNlTGlnaHRpbmd8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudUFtYmllbnRMaWdodENvdW50fHx2b2lkIDAhPT10aGlzLnVuaWZvcm1zLnVEaXJlY3Rpb25hbExpZ2h0Q291bnR8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVBvaW50TGlnaHRDb3VudHx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51QW1iaWVudENvbG9yfHx2b2lkIDAhPT10aGlzLnVuaWZvcm1zLnVEaXJlY3Rpb25hbERpZmZ1c2VDb2xvcnN8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudURpcmVjdGlvbmFsU3BlY3VsYXJDb2xvcnN8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVBvaW50TGlnaHRMb2NhdGlvbnx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51UG9pbnRMaWdodERpZmZ1c2VDb2xvcnN8fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVBvaW50TGlnaHRTcGVjdWxhckNvbG9yc3x8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51TGlnaHRpbmdEaXJlY3Rpb258fHZvaWQgMCE9PXRoaXMudW5pZm9ybXMudVNwZWN1bGFyfSxhLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5pc05vcm1hbFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLmF0dHJpYnV0ZXMuYU5vcm1hbH0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNUZXh0dXJlU2hhZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIDA8dGhpcy5zYW1wbGVySW5kZXh9LGEuZGVmYXVsdC5TaGFkZXIucHJvdG90eXBlLmlzQ29sb3JTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5hdHRyaWJ1dGVzLmFWZXJ0ZXhDb2xvcnx8dm9pZCAwIT09dGhpcy51bmlmb3Jtcy51TWF0ZXJpYWxDb2xvcn0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNUZXhMaWdodFNoYWRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzTGlnaHRTaGFkZXIoKSYmdGhpcy5pc1RleHR1cmVTaGFkZXIoKX0sYS5kZWZhdWx0LlNoYWRlci5wcm90b3R5cGUuaXNTdHJva2VTaGFkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy51bmlmb3Jtcy51U3Ryb2tlV2VpZ2h0fSxhLmRlZmF1bHQuU2hhZGVyLnByb3RvdHlwZS5lbmFibGVBdHRyaWI9ZnVuY3Rpb24oZSx0LHIsbixhLG8pe2lmKGUpezA7dmFyIGk9ZS5sb2NhdGlvbjtpZigtMSE9PWkpe3ZhciBzPXRoaXMuX3JlbmRlcmVyLkdMO2UuZW5hYmxlZHx8KHMuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoaSksZS5lbmFibGVkPSEwKSx0aGlzLl9yZW5kZXJlci5HTC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGksdCxyfHxzLkZMT0FULG58fCExLGF8fDAsb3x8MCl9fXJldHVybiB0aGlzfTt2YXIgbz1hLmRlZmF1bHQuU2hhZGVyO3IuZGVmYXVsdD1vfSx7XCIuLi9jb3JlL21haW5cIjozMn1dLDg4OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksci5kZWZhdWx0PXZvaWQgMDt2YXIgbixhPShuPWUoXCIuLi9jb3JlL21haW5cIikpJiZuLl9fZXNNb2R1bGU/bjp7ZGVmYXVsdDpufSxzPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTtpZihudWxsPT09ZXx8XCJvYmplY3RcIiE9PWkoZSkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJue2RlZmF1bHQ6ZX07dmFyIHQ9bCgpO2lmKHQmJnQuaGFzKGUpKXJldHVybiB0LmdldChlKTt2YXIgcj17fSxuPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gZSlpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxhKSl7dmFyIG89bj9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsYSk6bnVsbDtvJiYoby5nZXR8fG8uc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkocixhLG8pOnJbYV09ZVthXX1yLmRlZmF1bHQ9ZSx0JiZ0LnNldChlLHIpO3JldHVybiByfShlKFwiLi4vY29yZS9jb25zdGFudHNcIikpO2Z1bmN0aW9uIGwoKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWFrTWFwKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwO3JldHVybiBsPWZ1bmN0aW9uKCl7cmV0dXJuIGV9LGV9YS5kZWZhdWx0LlRleHR1cmU9ZnVuY3Rpb24oZSx0KXt0aGlzLl9yZW5kZXJlcj1lO3ZhciByPXRoaXMuX3JlbmRlcmVyLkdMO3RoaXMuc3JjPXQsdGhpcy5nbFRleD12b2lkIDAsdGhpcy5nbFRhcmdldD1yLlRFWFRVUkVfMkQsdGhpcy5nbEZvcm1hdD1yLlJHQkEsdGhpcy5taXBtYXBzPSExLHRoaXMuZ2xNaW5GaWx0ZXI9ci5MSU5FQVIsdGhpcy5nbE1hZ0ZpbHRlcj1yLkxJTkVBUix0aGlzLmdsV3JhcFM9ci5DTEFNUF9UT19FREdFLHRoaXMuZ2xXcmFwVD1yLkNMQU1QX1RPX0VER0UsdGhpcy5pc1NyY01lZGlhRWxlbWVudD12b2lkIDAhPT1hLmRlZmF1bHQuTWVkaWFFbGVtZW50JiZ0IGluc3RhbmNlb2YgYS5kZWZhdWx0Lk1lZGlhRWxlbWVudCx0aGlzLl92aWRlb1ByZXZVcGRhdGVUaW1lPTAsdGhpcy5pc1NyY0hUTUxFbGVtZW50PXZvaWQgMCE9PWEuZGVmYXVsdC5FbGVtZW50JiZ0IGluc3RhbmNlb2YgYS5kZWZhdWx0LkVsZW1lbnQmJiEodCBpbnN0YW5jZW9mIGEuZGVmYXVsdC5HcmFwaGljcyksdGhpcy5pc1NyY1A1SW1hZ2U9dCBpbnN0YW5jZW9mIGEuZGVmYXVsdC5JbWFnZSx0aGlzLmlzU3JjUDVHcmFwaGljcz10IGluc3RhbmNlb2YgYS5kZWZhdWx0LkdyYXBoaWNzLHRoaXMuaXNJbWFnZURhdGE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEltYWdlRGF0YSYmdCBpbnN0YW5jZW9mIEltYWdlRGF0YTt2YXIgbj10aGlzLl9nZXRUZXh0dXJlRGF0YUZyb21Tb3VyY2UoKTtyZXR1cm4gdGhpcy53aWR0aD1uLndpZHRoLHRoaXMuaGVpZ2h0PW4uaGVpZ2h0LHRoaXMuaW5pdChuKSx0aGlzfSxhLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUuX2dldFRleHR1cmVEYXRhRnJvbVNvdXJjZT1mdW5jdGlvbigpe3ZhciBlO3JldHVybiB0aGlzLmlzU3JjUDVJbWFnZT9lPXRoaXMuc3JjLmNhbnZhczp0aGlzLmlzU3JjTWVkaWFFbGVtZW50fHx0aGlzLmlzU3JjUDVHcmFwaGljc3x8dGhpcy5pc1NyY0hUTUxFbGVtZW50P2U9dGhpcy5zcmMuZWx0OnRoaXMuaXNJbWFnZURhdGEmJihlPXRoaXMuc3JjKSxlfSxhLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9yZW5kZXJlci5HTDtpZih0aGlzLmdsVGV4PXQuY3JlYXRlVGV4dHVyZSgpLHRoaXMuZ2xXcmFwUz10aGlzLl9yZW5kZXJlci50ZXh0dXJlV3JhcFgsdGhpcy5nbFdyYXBUPXRoaXMuX3JlbmRlcmVyLnRleHR1cmVXcmFwWSx0aGlzLnNldFdyYXBNb2RlKHRoaXMuZ2xXcmFwUyx0aGlzLmdsV3JhcFQpLHRoaXMuYmluZFRleHR1cmUoKSx0LnRleFBhcmFtZXRlcmkodC5URVhUVVJFXzJELHQuVEVYVFVSRV9NQUdfRklMVEVSLHRoaXMuZ2xNYWdGaWx0ZXIpLHQudGV4UGFyYW1ldGVyaSh0LlRFWFRVUkVfMkQsdC5URVhUVVJFX01JTl9GSUxURVIsdGhpcy5nbE1pbkZpbHRlciksMD09PXRoaXMud2lkdGh8fDA9PT10aGlzLmhlaWdodHx8dGhpcy5pc1NyY01lZGlhRWxlbWVudCYmIXRoaXMuc3JjLmxvYWRlZG1ldGFkYXRhKXt2YXIgcj1uZXcgVWludDhBcnJheShbMSwxLDEsMV0pO3QudGV4SW1hZ2UyRCh0aGlzLmdsVGFyZ2V0LDAsdC5SR0JBLDEsMSwwLHRoaXMuZ2xGb3JtYXQsdC5VTlNJR05FRF9CWVRFLHIpfWVsc2UgdC50ZXhJbWFnZTJEKHRoaXMuZ2xUYXJnZXQsMCx0aGlzLmdsRm9ybWF0LHRoaXMuZ2xGb3JtYXQsdC5VTlNJR05FRF9CWVRFLGUpfSxhLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5zcmM7aWYoMD09PWUud2lkdGh8fDA9PT1lLmhlaWdodClyZXR1cm4hMTt2YXIgdD10aGlzLl9nZXRUZXh0dXJlRGF0YUZyb21Tb3VyY2UoKSxyPSExLG49dGhpcy5fcmVuZGVyZXIuR0w7cmV0dXJuIHQud2lkdGghPT10aGlzLndpZHRofHx0LmhlaWdodCE9PXRoaXMuaGVpZ2h0PyhyPSEwLHRoaXMud2lkdGg9dC53aWR0aCx0aGlzLmhlaWdodD10LmhlaWdodCx0aGlzLmlzU3JjUDVJbWFnZT9lLnNldE1vZGlmaWVkKCExKToodGhpcy5pc1NyY01lZGlhRWxlbWVudHx8dGhpcy5pc1NyY0hUTUxFbGVtZW50KSYmZS5zZXRNb2RpZmllZCghMCkpOnRoaXMuaXNTcmNQNUltYWdlP2UuaXNNb2RpZmllZCgpJiYocj0hMCxlLnNldE1vZGlmaWVkKCExKSk6dGhpcy5pc1NyY01lZGlhRWxlbWVudD9lLmlzTW9kaWZpZWQoKT8ocj0hMCxlLnNldE1vZGlmaWVkKCExKSk6ZS5sb2FkZWRtZXRhZGF0YSYmdGhpcy5fdmlkZW9QcmV2VXBkYXRlVGltZSE9PWUudGltZSgpJiYodGhpcy5fdmlkZW9QcmV2VXBkYXRlVGltZT1lLnRpbWUoKSxyPSEwKTp0aGlzLmlzSW1hZ2VEYXRhP2UuX2RpcnR5JiYocj0hKGUuX2RpcnR5PSExKSk6cj0hMCxyJiYodGhpcy5iaW5kVGV4dHVyZSgpLG4udGV4SW1hZ2UyRCh0aGlzLmdsVGFyZ2V0LDAsdGhpcy5nbEZvcm1hdCx0aGlzLmdsRm9ybWF0LG4uVU5TSUdORURfQllURSx0KSkscn0sYS5kZWZhdWx0LlRleHR1cmUucHJvdG90eXBlLmJpbmRUZXh0dXJlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLkdMLmJpbmRUZXh0dXJlKHRoaXMuZ2xUYXJnZXQsdGhpcy5nbFRleCksdGhpc30sYS5kZWZhdWx0LlRleHR1cmUucHJvdG90eXBlLnVuYmluZFRleHR1cmU9ZnVuY3Rpb24oKXt0aGlzLl9yZW5kZXJlci5HTC5iaW5kVGV4dHVyZSh0aGlzLmdsVGFyZ2V0LG51bGwpfSxhLmRlZmF1bHQuVGV4dHVyZS5wcm90b3R5cGUuc2V0SW50ZXJwb2xhdGlvbj1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMuX3JlbmRlcmVyLkdMO2U9PT1zLk5FQVJFU1Q/dGhpcy5nbE1pbkZpbHRlcj1yLk5FQVJFU1Q6dGhpcy5nbE1pbkZpbHRlcj1yLkxJTkVBUix0PT09cy5ORUFSRVNUP3RoaXMuZ2xNYWdGaWx0ZXI9ci5ORUFSRVNUOnRoaXMuZ2xNYWdGaWx0ZXI9ci5MSU5FQVIsdGhpcy5iaW5kVGV4dHVyZSgpLHIudGV4UGFyYW1ldGVyaShyLlRFWFRVUkVfMkQsci5URVhUVVJFX01JTl9GSUxURVIsdGhpcy5nbE1pbkZpbHRlciksci50ZXhQYXJhbWV0ZXJpKHIuVEVYVFVSRV8yRCxyLlRFWFRVUkVfTUFHX0ZJTFRFUix0aGlzLmdsTWFnRmlsdGVyKSx0aGlzLnVuYmluZFRleHR1cmUoKX0sYS5kZWZhdWx0LlRleHR1cmUucHJvdG90eXBlLnNldFdyYXBNb2RlPWZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gcihlKXtyZXR1cm4gMD09KGUmZS0xKX12YXIgbj10aGlzLl9yZW5kZXJlci5HTCxhPXIodGhpcy53aWR0aCksbz1yKHRoaXMuaGVpZ2h0KTtlPT09cy5SRVBFQVQ/YSYmbz90aGlzLmdsV3JhcFM9bi5SRVBFQVQ6KGNvbnNvbGUud2FybihcIllvdSB0cmllZCB0byBzZXQgdGhlIHdyYXAgbW9kZSB0byBSRVBFQVQgYnV0IHRoZSB0ZXh0dXJlIHNpemUgaXMgbm90IGEgcG93ZXIgb2YgdHdvLiBTZXR0aW5nIHRvIENMQU1QIGluc3RlYWRcIiksdGhpcy5nbFdyYXBTPW4uQ0xBTVBfVE9fRURHRSk6ZT09PXMuTUlSUk9SP2EmJm8/dGhpcy5nbFdyYXBTPW4uTUlSUk9SRURfUkVQRUFUOihjb25zb2xlLndhcm4oXCJZb3UgdHJpZWQgdG8gc2V0IHRoZSB3cmFwIG1vZGUgdG8gTUlSUk9SIGJ1dCB0aGUgdGV4dHVyZSBzaXplIGlzIG5vdCBhIHBvd2VyIG9mIHR3by4gU2V0dGluZyB0byBDTEFNUCBpbnN0ZWFkXCIpLHRoaXMuZ2xXcmFwUz1uLkNMQU1QX1RPX0VER0UpOnRoaXMuZ2xXcmFwUz1uLkNMQU1QX1RPX0VER0UsdD09PXMuUkVQRUFUP2EmJm8/dGhpcy5nbFdyYXBUPW4uUkVQRUFUOihjb25zb2xlLndhcm4oXCJZb3UgdHJpZWQgdG8gc2V0IHRoZSB3cmFwIG1vZGUgdG8gUkVQRUFUIGJ1dCB0aGUgdGV4dHVyZSBzaXplIGlzIG5vdCBhIHBvd2VyIG9mIHR3by4gU2V0dGluZyB0byBDTEFNUCBpbnN0ZWFkXCIpLHRoaXMuZ2xXcmFwVD1uLkNMQU1QX1RPX0VER0UpOnQ9PT1zLk1JUlJPUj9hJiZvP3RoaXMuZ2xXcmFwVD1uLk1JUlJPUkVEX1JFUEVBVDooY29uc29sZS53YXJuKFwiWW91IHRyaWVkIHRvIHNldCB0aGUgd3JhcCBtb2RlIHRvIE1JUlJPUiBidXQgdGhlIHRleHR1cmUgc2l6ZSBpcyBub3QgYSBwb3dlciBvZiB0d28uIFNldHRpbmcgdG8gQ0xBTVAgaW5zdGVhZFwiKSx0aGlzLmdsV3JhcFQ9bi5DTEFNUF9UT19FREdFKTp0aGlzLmdsV3JhcFQ9bi5DTEFNUF9UT19FREdFLHRoaXMuYmluZFRleHR1cmUoKSxuLnRleFBhcmFtZXRlcmkobi5URVhUVVJFXzJELG4uVEVYVFVSRV9XUkFQX1MsdGhpcy5nbFdyYXBTKSxuLnRleFBhcmFtZXRlcmkobi5URVhUVVJFXzJELG4uVEVYVFVSRV9XUkFQX1QsdGhpcy5nbFdyYXBUKSx0aGlzLnVuYmluZFRleHR1cmUoKX07dmFyIG89YS5kZWZhdWx0LlRleHR1cmU7ci5kZWZhdWx0PW99LHtcIi4uL2NvcmUvY29uc3RhbnRzXCI6MjIsXCIuLi9jb3JlL21haW5cIjozMn1dLDg5OltmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaShlKXtyZXR1cm4oaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSkoZSl9dmFyIG4saj0obj1lKFwiLi4vY29yZS9tYWluXCIpKSYmbi5fX2VzTW9kdWxlP246e2RlZmF1bHQ6bn0sUj1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7aWYobnVsbD09PWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXJldHVybntkZWZhdWx0OmV9O3ZhciB0PXMoKTtpZih0JiZ0LmhhcyhlKSlyZXR1cm4gdC5nZXQoZSk7dmFyIHI9e30sbj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIGUpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsYSkpe3ZhciBvPW4/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGEpOm51bGw7byYmKG8uZ2V0fHxvLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsYSxvKTpyW2FdPWVbYV19ci5kZWZhdWx0PWUsdCYmdC5zZXQoZSxyKTtyZXR1cm4gcn0oZShcIi4uL2NvcmUvY29uc3RhbnRzXCIpKTtmdW5jdGlvbiBzKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgV2Vha01hcClyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcDtyZXR1cm4gcz1mdW5jdGlvbigpe3JldHVybiBlfSxlfWUoXCIuL3A1LlNoYWRlclwiKSxlKFwiLi9wNS5SZW5kZXJlckdMLlJldGFpbmVkXCIpLGouZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fYXBwbHlUZXh0UHJvcGVydGllcz1mdW5jdGlvbigpe30sai5kZWZhdWx0LlJlbmRlcmVyR0wucHJvdG90eXBlLnRleHRXaWR0aD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5faXNPcGVuVHlwZSgpP3RoaXMuX3RleHRGb250Ll90ZXh0V2lkdGgoZSx0aGlzLl90ZXh0U2l6ZSk6MH07ZnVuY3Rpb24gYShlLHQpe3RoaXMud2lkdGg9ZSx0aGlzLmhlaWdodD10LHRoaXMuaW5mb3M9W10sdGhpcy5maW5kSW1hZ2U9ZnVuY3Rpb24oZSl7dmFyIHQscixuPXRoaXMud2lkdGgqdGhpcy5oZWlnaHQ7aWYobjxlKXRocm93IG5ldyBFcnJvcihcImZvbnQgaXMgdG9vIGNvbXBsZXggdG8gcmVuZGVyIGluIDNEXCIpO2Zvcih2YXIgYT10aGlzLmluZm9zLmxlbmd0aC0xOzA8PWE7LS1hKXt2YXIgbz10aGlzLmluZm9zW2FdO2lmKG8uaW5kZXgrZTxuKXtyPSh0PW8pLmltYWdlRGF0YTticmVha319aWYoIXQpe3RyeXtyPW5ldyBJbWFnZURhdGEodGhpcy53aWR0aCx0aGlzLmhlaWdodCl9Y2F0Y2goZSl7dmFyIGk9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJjYW52YXNcIilbMF0scz0haTtpfHwoKGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSkuc3R5bGUuZGlzcGxheT1cIm5vbmVcIixkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGkpKTt2YXIgbD1pLmdldENvbnRleHQoXCIyZFwiKTtsJiYocj1sLmNyZWF0ZUltYWdlRGF0YSh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSkscyYmZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChpKX10PXtpbmRleDowLGltYWdlRGF0YTpyfSx0aGlzLmluZm9zLnB1c2godCl9dmFyIHA9dC5pbmRleDtyZXR1cm4gdC5pbmRleCs9ZSxyLl9kaXJ0eT0hMCx7aW1hZ2VEYXRhOnIsaW5kZXg6cH19fWZ1bmN0aW9uIFYoZSx0LHIsbixhKXt2YXIgbz1lLmltYWdlRGF0YS5kYXRhLGk9NCplLmluZGV4Kys7b1tpKytdPXQsb1tpKytdPXIsb1tpKytdPW4sb1tpKytdPWF9ZnVuY3Rpb24gRChlKXt0aGlzLmZvbnQ9ZSx0aGlzLnN0cm9rZUltYWdlSW5mb3M9bmV3IGEoNjQsNjQpLHRoaXMuY29sRGltSW1hZ2VJbmZvcz1uZXcgYSg2NCw2NCksdGhpcy5yb3dEaW1JbWFnZUluZm9zPW5ldyBhKDY0LDY0KSx0aGlzLmNvbENlbGxJbWFnZUluZm9zPW5ldyBhKDY0LDY0KSx0aGlzLnJvd0NlbGxJbWFnZUluZm9zPW5ldyBhKDY0LDY0KSx0aGlzLmdseXBoSW5mb3M9e30sdGhpcy5nZXRHbHlwaEluZm89ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5nbHlwaEluZm9zW2UuaW5kZXhdO2lmKHQpcmV0dXJuIHQ7dmFyIHIsbj1lLmdldEJvdW5kaW5nQm94KCksYT1uLngxLG89bi55MSxpPW4ueDItYSxzPW4ueTItbyxsPWUucGF0aC5jb21tYW5kcztpZigwPT1pfHwwPT1zfHwhbC5sZW5ndGgpcmV0dXJuIHRoaXMuZ2x5cGhJbmZvc1tlLmluZGV4XT17fTt2YXIgcCx1LGMsZCxoPVtdLG09W10sZj1bXTtmb3Iocj04OzA8PXI7LS1yKWYucHVzaChbXSk7Zm9yKHI9ODswPD1yOy0tciltLnB1c2goW10pO2Z1bmN0aW9uIHkoZSx0LHIpe3ZhciBuPWgubGVuZ3RoO2Z1bmN0aW9uIGEoZSx0LHIpe2Zvcih2YXIgbj1lLmxlbmd0aDswPG4tLTspe3ZhciBhPWVbbl07YTx0JiYodD1hKSxyPGEmJihyPWEpfXJldHVybnttaW46dCxtYXg6cn19aC5wdXNoKHIpO2Zvcih2YXIgbz1hKGUsMSwwKSxpPU1hdGgubWF4KE1hdGguZmxvb3IoOSpvLm1pbiksMCkscz1NYXRoLm1pbihNYXRoLmNlaWwoOSpvLm1heCksOSksbD1pO2w8czsrK2wpZltsXS5wdXNoKG4pO2Zvcih2YXIgcD1hKHQsMSwwKSx1PU1hdGgubWF4KE1hdGguZmxvb3IoOSpwLm1pbiksMCksYz1NYXRoLm1pbihNYXRoLmNlaWwoOSpwLm1heCksOSksZD11O2Q8YzsrK2QpbVtkXS5wdXNoKG4pfWZ1bmN0aW9uIGcoZSl7cmV0dXJuKHQ9KG49MjU1KSplKTwocj0wKT9yOm48dD9uOnQ7dmFyIHQscixufWZ1bmN0aW9uIFMoZSx0LHIsbil7dGhpcy5wMD1lLHRoaXMuYzA9dCx0aGlzLmMxPXIsdGhpcy5wMT1uLHRoaXMudG9RdWFkcmF0aWM9ZnVuY3Rpb24oKXtyZXR1cm57eDp0aGlzLnAwLngseTp0aGlzLnAwLnkseDE6dGhpcy5wMS54LHkxOnRoaXMucDEueSxjeDooMyoodGhpcy5jMC54K3RoaXMuYzEueCktKHRoaXMucDAueCt0aGlzLnAxLngpKS80LGN5OigzKih0aGlzLmMwLnkrdGhpcy5jMS55KS0odGhpcy5wMC55K3RoaXMucDEueSkpLzR9fSx0aGlzLnF1YWRFcnJvcj1mdW5jdGlvbigpe3JldHVybiBqLmRlZmF1bHQuVmVjdG9yLnN1YihqLmRlZmF1bHQuVmVjdG9yLnN1Yih0aGlzLnAxLHRoaXMucDApLGouZGVmYXVsdC5WZWN0b3IubXVsdChqLmRlZmF1bHQuVmVjdG9yLnN1Yih0aGlzLmMxLHRoaXMuYzApLDMpKS5tYWcoKS8yfSx0aGlzLnNwbGl0PWZ1bmN0aW9uKGUpe3ZhciB0PWouZGVmYXVsdC5WZWN0b3IubGVycCh0aGlzLnAwLHRoaXMuYzAsZSkscj1qLmRlZmF1bHQuVmVjdG9yLmxlcnAodGhpcy5jMCx0aGlzLmMxLGUpLG49ai5kZWZhdWx0LlZlY3Rvci5sZXJwKHQscixlKTt0aGlzLmMxPWouZGVmYXVsdC5WZWN0b3IubGVycCh0aGlzLmMxLHRoaXMucDEsZSksdGhpcy5jMD1qLmRlZmF1bHQuVmVjdG9yLmxlcnAocix0aGlzLmMxLGUpO3ZhciBhPWouZGVmYXVsdC5WZWN0b3IubGVycChuLHRoaXMuYzAsZSksbz1uZXcgUyh0aGlzLnAwLHQsbixhKTtyZXR1cm4gdGhpcy5wMD1hLG99LHRoaXMuc3BsaXRJbmZsZWN0aW9ucz1mdW5jdGlvbigpe3ZhciBlPWouZGVmYXVsdC5WZWN0b3Iuc3ViKHRoaXMuYzAsdGhpcy5wMCksdD1qLmRlZmF1bHQuVmVjdG9yLnN1YihqLmRlZmF1bHQuVmVjdG9yLnN1Yih0aGlzLmMxLHRoaXMuYzApLGUpLHI9ai5kZWZhdWx0LlZlY3Rvci5zdWIoai5kZWZhdWx0LlZlY3Rvci5zdWIoai5kZWZhdWx0LlZlY3Rvci5zdWIodGhpcy5wMSx0aGlzLmMxKSxlKSxqLmRlZmF1bHQuVmVjdG9yLm11bHQodCwyKSksbj1bXSxhPXQueCpyLnktdC55KnIueDtpZigwIT09YSl7dmFyIG89ZS54KnIueS1lLnkqci54LGk9ZS54KnQueS1lLnkqdC54LHM9bypvLTQqYSppO2lmKDA8PXMpe2E8MCYmKGE9LWEsbz0tbyxpPS1pKTt2YXIgbD1NYXRoLnNxcnQocykscD0oLW8tbCkvKDIqYSksdT0oLW8rbCkvKDIqYSk7MDxwJiZwPDEmJihuLnB1c2godGhpcy5zcGxpdChwKSksdT0xLSgxLXUpLygxLXApKSwwPHUmJnU8MSYmbi5wdXNoKHRoaXMuc3BsaXQodSkpfX1yZXR1cm4gbi5wdXNoKHRoaXMpLG59fWZ1bmN0aW9uIHYoZSx0LHIsbixhLG8saSxzKXt2YXIgbD1uZXcgUyhuZXcgai5kZWZhdWx0LlZlY3RvcihlLHQpLG5ldyBqLmRlZmF1bHQuVmVjdG9yKHIsbiksbmV3IGouZGVmYXVsdC5WZWN0b3IoYSxvKSxuZXcgai5kZWZhdWx0LlZlY3RvcihpLHMpKS5zcGxpdEluZmxlY3Rpb25zKCkscD1bXSx1PTMwL3osYz0hMCxkPSExLGg9dm9pZCAwO3RyeXtmb3IodmFyIG0sZj1sW1N5bWJvbC5pdGVyYXRvcl0oKTshKGM9KG09Zi5uZXh0KCkpLmRvbmUpO2M9ITApe2Zvcih2YXIgeT1tLnZhbHVlLGc9W10sdj12b2lkIDA7ISguMTI1PD0odj11L3kucXVhZEVycm9yKCkpKTspe3ZhciBiPU1hdGgucG93KHYsMS8zKSxfPXkuc3BsaXQoYikseD15LnNwbGl0KDEtYi8oMS1iKSk7cC5wdXNoKF8pLGcucHVzaCh5KSx5PXh9djwxJiZwLnB1c2goeS5zcGxpdCguNSkpLHAucHVzaCh5KSxBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShwLGcucmV2ZXJzZSgpKX19Y2F0Y2goZSl7ZD0hMCxoPWV9ZmluYWxseXt0cnl7Y3x8bnVsbD09Zi5yZXR1cm58fGYucmV0dXJuKCl9ZmluYWxseXtpZihkKXRocm93IGh9fXJldHVybiBwfWZ1bmN0aW9uIGIoZSx0LHIsbil7eShbZSxyXSxbdCxuXSx7eDplLHk6dCxjeDooZStyKS8yLGN5Oih0K24pLzJ9KX1mdW5jdGlvbiBfKGUsdCxyLG4pe3JldHVybiBNYXRoLmFicyhyLWUpPDFlLTUmJk1hdGguYWJzKG4tdCk8MWUtNX12YXIgeD0hMCx3PSExLE09dm9pZCAwO3RyeXtmb3IodmFyIEUsVD1sW1N5bWJvbC5pdGVyYXRvcl0oKTshKHg9KEU9VC5uZXh0KCkpLmRvbmUpO3g9ITApe3ZhciBDPUUudmFsdWUsTj0oQy54LWEpL2ksTz0oQy55LW8pL3M7aWYoIV8ocCx1LE4sTykpe3N3aXRjaChDLnR5cGUpe2Nhc2VcIk1cIjpjPU4sZD1PO2JyZWFrO2Nhc2VcIkxcIjpiKHAsdSxOLE8pO2JyZWFrO2Nhc2VcIlFcIjp2YXIgTD0oQy54MS1hKS9pLEk9KEMueTEtbykvczt5KFtwLE4sTF0sW3UsTyxJXSx7eDpwLHk6dSxjeDpMLGN5Okl9KTticmVhaztjYXNlXCJaXCI6XyhwLHUsYyxkKT9oLnB1c2goe3g6cCx5OnV9KTooYihwLHUsYyxkKSxoLnB1c2goe3g6Yyx5OmR9KSk7YnJlYWs7Y2FzZVwiQ1wiOmZvcih2YXIgUD12KHAsdSwoQy54MS1hKS9pLChDLnkxLW8pL3MsKEMueDItYSkvaSwoQy55Mi1vKS9zLE4sTyksUj0wO1I8UC5sZW5ndGg7UisrKXt2YXIgRD1QW1JdLnRvUXVhZHJhdGljKCk7eShbRC54LEQueDEsRC5jeF0sW0QueSxELnkxLEQuY3ldLEQpfWJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBjb21tYW5kIHR5cGU6IFwiLmNvbmNhdChDLnR5cGUpKX1wPU4sdT1PfX19Y2F0Y2goZSl7dz0hMCxNPWV9ZmluYWxseXt0cnl7eHx8bnVsbD09VC5yZXR1cm58fFQucmV0dXJuKCl9ZmluYWxseXtpZih3KXRocm93IE19fWZvcih2YXIgQT1oLmxlbmd0aCxrPXRoaXMuc3Ryb2tlSW1hZ2VJbmZvcy5maW5kSW1hZ2UoQSksRj1rLmluZGV4LFU9MDtVPEE7KytVKXt2YXIgQj1oW1VdO1YoayxnKEIueCksZyhCLnkpLGcoQi5jeCksZyhCLmN5KSl9ZnVuY3Rpb24gRyhlLHQscil7Zm9yKHZhciBuPWUubGVuZ3RoLGE9dC5maW5kSW1hZ2Uobiksbz1hLmluZGV4LGk9MCxzPTA7czxuOysrcylpKz1lW3NdLmxlbmd0aDtmb3IodmFyIGw9ci5maW5kSW1hZ2UoaSkscD0wO3A8bjsrK3Ape3ZhciB1PWVbcF0sYz11Lmxlbmd0aCxkPWwuaW5kZXg7VihhLGQ+PjcsMTI3JmQsYz4+NywxMjcmYyk7Zm9yKHZhciBoPTA7aDxjOysraCl7dmFyIG09dVtoXStGO1YobCxtPj43LDEyNyZtLDAsMCl9fXJldHVybntjZWxsSW1hZ2VJbmZvOmwsZGltT2Zmc2V0Om8sZGltSW1hZ2VJbmZvOmF9fXJldHVybih0PXRoaXMuZ2x5cGhJbmZvc1tlLmluZGV4XT17Z2x5cGg6ZSx1R2x5cGhSZWN0OltuLngxLC1uLnkxLG4ueDIsLW4ueTJdLHN0cm9rZUltYWdlSW5mbzprLHN0cm9rZXM6aCxjb2xJbmZvOkcoZix0aGlzLmNvbERpbUltYWdlSW5mb3MsdGhpcy5jb2xDZWxsSW1hZ2VJbmZvcykscm93SW5mbzpHKG0sdGhpcy5yb3dEaW1JbWFnZUluZm9zLHRoaXMucm93Q2VsbEltYWdlSW5mb3MpfSkudUdyaWRPZmZzZXQ9W3QuY29sSW5mby5kaW1PZmZzZXQsdC5yb3dJbmZvLmRpbU9mZnNldF0sdH19dmFyIHo9TWF0aC5zcXJ0KDMpO2ouZGVmYXVsdC5SZW5kZXJlckdMLnByb3RvdHlwZS5fcmVuZGVyVGV4dD1mdW5jdGlvbihlLHQscixuLGEpe2lmKHRoaXMuX3RleHRGb250JiZcInN0cmluZ1wiIT10eXBlb2YgdGhpcy5fdGV4dEZvbnQpe2lmKCEoYTw9bikmJnRoaXMuX2RvRmlsbCl7aWYoIXRoaXMuX2lzT3BlblR5cGUoKSlyZXR1cm4gY29uc29sZS5sb2coXCJXRUJHTDogb25seSBPcGVudHlwZSAoLm90ZikgYW5kIFRydWV0eXBlICgudHRmKSBmb250cyBhcmUgc3VwcG9ydGVkXCIpLGU7ZS5wdXNoKCk7dmFyIG89dGhpcy5fZG9TdHJva2UsaT10aGlzLmRyYXdNb2RlO3RoaXMuX2RvU3Ryb2tlPSExLHRoaXMuZHJhd01vZGU9Ui5URVhUVVJFO3ZhciBzPXRoaXMuX3RleHRGb250LmZvbnQsbD10aGlzLl90ZXh0Rm9udC5fZm9udEluZm87bD1sfHwodGhpcy5fdGV4dEZvbnQuX2ZvbnRJbmZvPW5ldyBEKHMpKTt2YXIgcD10aGlzLl90ZXh0Rm9udC5faGFuZGxlQWxpZ25tZW50KHRoaXMsdCxyLG4pLHU9dGhpcy5fdGV4dFNpemUvcy51bml0c1BlckVtO3RoaXMudHJhbnNsYXRlKHAueCxwLnksMCksdGhpcy5zY2FsZSh1LHUsMSk7dmFyIGM9dGhpcy5HTCxkPSF0aGlzLl9kZWZhdWx0Rm9udFNoYWRlcixoPXRoaXMuX2dldEZvbnRTaGFkZXIoKTtoLmluaXQoKSxoLmJpbmRTaGFkZXIoKSxkJiYoaC5zZXRVbmlmb3JtKFwidUdyaWRJbWFnZVNpemVcIixbNjQsNjRdKSxoLnNldFVuaWZvcm0oXCJ1Q2VsbHNJbWFnZVNpemVcIixbNjQsNjRdKSxoLnNldFVuaWZvcm0oXCJ1U3Ryb2tlSW1hZ2VTaXplXCIsWzY0LDY0XSksaC5zZXRVbmlmb3JtKFwidUdyaWRTaXplXCIsWzksOV0pKSx0aGlzLl9hcHBseUNvbG9yQmxlbmQodGhpcy5jdXJGaWxsQ29sb3IpO3ZhciBtPXRoaXMucmV0YWluZWRNb2RlLmdlb21ldHJ5LmdseXBoO2lmKCFtKXt2YXIgZj10aGlzLl90ZXh0R2VvbT1uZXcgai5kZWZhdWx0Lkdlb21ldHJ5KDEsMSxmdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8PTE7ZSsrKWZvcih2YXIgdD0wO3Q8PTE7dCsrKXRoaXMudmVydGljZXMucHVzaChuZXcgai5kZWZhdWx0LlZlY3Rvcih0LGUsMCkpLHRoaXMudXZzLnB1c2godCxlKX0pO2YuY29tcHV0ZUZhY2VzKCkuY29tcHV0ZU5vcm1hbHMoKSxtPXRoaXMuY3JlYXRlQnVmZmVycyhcImdseXBoXCIsZil9dmFyIHk9ITAsZz0hMSx2PXZvaWQgMDt0cnl7Zm9yKHZhciBiLF89dGhpcy5yZXRhaW5lZE1vZGUuYnVmZmVycy50ZXh0W1N5bWJvbC5pdGVyYXRvcl0oKTshKHk9KGI9Xy5uZXh0KCkpLmRvbmUpO3k9ITApe2IudmFsdWUuX3ByZXBhcmVCdWZmZXIobSxoKX19Y2F0Y2goZSl7Zz0hMCx2PWV9ZmluYWxseXt0cnl7eXx8bnVsbD09Xy5yZXR1cm58fF8ucmV0dXJuKCl9ZmluYWxseXtpZihnKXRocm93IHZ9fXRoaXMuX2JpbmRCdWZmZXIobS5pbmRleEJ1ZmZlcixjLkVMRU1FTlRfQVJSQVlfQlVGRkVSKSxoLnNldFVuaWZvcm0oXCJ1TWF0ZXJpYWxDb2xvclwiLHRoaXMuY3VyRmlsbENvbG9yKTt0cnl7dmFyIHg9MCxTPW51bGwsdz1zLnN0cmluZ1RvR2x5cGhzKHQpLE09ITAsRT0hMSxUPXZvaWQgMDt0cnl7Zm9yKHZhciBDLE49d1tTeW1ib2wuaXRlcmF0b3JdKCk7IShNPShDPU4ubmV4dCgpKS5kb25lKTtNPSEwKXt2YXIgTz1DLnZhbHVlO1MmJih4Kz1zLmdldEtlcm5pbmdWYWx1ZShTLE8pKTt2YXIgTD1sLmdldEdseXBoSW5mbyhPKTtpZihMLnVHbHlwaFJlY3Qpe3ZhciBJPUwucm93SW5mbyxQPUwuY29sSW5mbztoLnNldFVuaWZvcm0oXCJ1U2FtcGxlclN0cm9rZXNcIixMLnN0cm9rZUltYWdlSW5mby5pbWFnZURhdGEpLGguc2V0VW5pZm9ybShcInVTYW1wbGVyUm93U3Ryb2tlc1wiLEkuY2VsbEltYWdlSW5mby5pbWFnZURhdGEpLGguc2V0VW5pZm9ybShcInVTYW1wbGVyUm93c1wiLEkuZGltSW1hZ2VJbmZvLmltYWdlRGF0YSksaC5zZXRVbmlmb3JtKFwidVNhbXBsZXJDb2xTdHJva2VzXCIsUC5jZWxsSW1hZ2VJbmZvLmltYWdlRGF0YSksaC5zZXRVbmlmb3JtKFwidVNhbXBsZXJDb2xzXCIsUC5kaW1JbWFnZUluZm8uaW1hZ2VEYXRhKSxoLnNldFVuaWZvcm0oXCJ1R3JpZE9mZnNldFwiLEwudUdyaWRPZmZzZXQpLGguc2V0VW5pZm9ybShcInVHbHlwaFJlY3RcIixMLnVHbHlwaFJlY3QpLGguc2V0VW5pZm9ybShcInVHbHlwaE9mZnNldFwiLHgpLGguYmluZFRleHR1cmVzKCksYy5kcmF3RWxlbWVudHMoYy5UUklBTkdMRVMsNix0aGlzLkdMLlVOU0lHTkVEX1NIT1JULDApfXgrPU8uYWR2YW5jZVdpZHRoLFM9T319Y2F0Y2goZSl7RT0hMCxUPWV9ZmluYWxseXt0cnl7TXx8bnVsbD09Ti5yZXR1cm58fE4ucmV0dXJuKCl9ZmluYWxseXtpZihFKXRocm93IFR9fX1maW5hbGx5e2gudW5iaW5kU2hhZGVyKCksdGhpcy5fZG9TdHJva2U9byx0aGlzLmRyYXdNb2RlPWksZS5wb3AoKX1yZXR1cm4gZX19ZWxzZSBjb25zb2xlLmxvZyhcIldFQkdMOiB5b3UgbXVzdCBsb2FkIGFuZCBzZXQgYSBmb250IGJlZm9yZSBkcmF3aW5nIHRleHQuIFNlZSBgbG9hZEZvbnRgIGFuZCBgdGV4dEZvbnRgIGZvciBtb3JlIGRldGFpbHMuXCIpfX0se1wiLi4vY29yZS9jb25zdGFudHNcIjoyMixcIi4uL2NvcmUvbWFpblwiOjMyLFwiLi9wNS5SZW5kZXJlckdMLlJldGFpbmVkXCI6ODUsXCIuL3A1LlNoYWRlclwiOjg3fV19LHt9LFsxN10pKDE3KX0pOyJdLCJzb3VyY2VSb290IjoiIn0=